{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "providers": {
              "resources": {
                "connectors": {
                  "resources": {
                    "versions": {
                      "methods": {
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "ConnectorVersion"
                          },
                          "parameters": {
                            "view": {
                              "enumDescriptions": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                "Do not include role grant configs.",
                                "Include role grant configs."
                              ],
                              "location": "query",
                              "enum": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                "CONNECTOR_VERSION_VIEW_BASIC",
                                "CONNECTOR_VERSION_VIEW_FULL"
                              ],
                              "type": "string",
                              "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `CUSTOMER` view."
                            },
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$",
                              "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*` Only global location is supported for ConnectorVersion resource.",
                              "required": true,
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "path": "v1/{+name}",
                          "httpMethod": "GET",
                          "id": "connectors.projects.locations.providers.connectors.versions.get",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}",
                          "description": "Gets details of a single connector version."
                        },
                        "list": {
                          "description": "Lists Connector Versions in a given project and location.",
                          "id": "connectors.projects.locations.providers.connectors.versions.list",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "ListConnectorVersionsResponse"
                          },
                          "path": "v1/{+parent}/versions",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions",
                          "parameters": {
                            "pageToken": {
                              "description": "Page token.",
                              "location": "query",
                              "type": "string"
                            },
                            "view": {
                              "location": "query",
                              "enum": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                "CONNECTOR_VERSION_VIEW_BASIC",
                                "CONNECTOR_VERSION_VIEW_FULL"
                              ],
                              "enumDescriptions": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                "Do not include role grant configs.",
                                "Include role grant configs."
                              ],
                              "type": "string",
                              "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `BASIC` view."
                            },
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "type": "integer",
                              "description": "Page size."
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for ConnectorVersion resource.",
                              "location": "path"
                            }
                          }
                        }
                      },
                      "resources": {
                        "eventtypes": {
                          "methods": {
                            "list": {
                              "parameterOrder": [
                                "parent"
                              ],
                              "parameters": {
                                "parent": {
                                  "type": "string",
                                  "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*` Only global location is supported for EventType resource.",
                                  "required": true,
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$"
                                },
                                "pageSize": {
                                  "description": "Page size.",
                                  "format": "int32",
                                  "location": "query",
                                  "type": "integer"
                                },
                                "pageToken": {
                                  "description": "Page token.",
                                  "type": "string",
                                  "location": "query"
                                }
                              },
                              "path": "v1/{+parent}/eventtypes",
                              "httpMethod": "GET",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Lists Event Types in a given Connector Version.",
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}/eventtypes",
                              "response": {
                                "$ref": "ListEventTypesResponse"
                              },
                              "id": "connectors.projects.locations.providers.connectors.versions.eventtypes.list"
                            },
                            "get": {
                              "description": "Gets details of a single event type.",
                              "parameterOrder": [
                                "name"
                              ],
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+/eventtypes/[^/]+$",
                                  "type": "string",
                                  "required": true,
                                  "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*/eventtypes/*` Only global location is supported for EventType resource."
                                }
                              },
                              "id": "connectors.projects.locations.providers.connectors.versions.eventtypes.get",
                              "response": {
                                "$ref": "EventType"
                              },
                              "httpMethod": "GET",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}/eventtypes/{eventtypesId}",
                              "path": "v1/{+name}"
                            }
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Connectors in a given project and location.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListConnectorsResponse"
                      },
                      "path": "v1/{+parent}/connectors",
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Filter string.",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "Page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Page size."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*` Only global location is supported for Connector resource."
                        }
                      },
                      "id": "connectors.projects.locations.providers.connectors.list",
                      "httpMethod": "GET"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for Connector resource.",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "connectors.projects.locations.providers.connectors.get",
                      "response": {
                        "$ref": "Connector"
                      },
                      "description": "Gets details of a single Connector."
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "description": "Lists Providers in a given project and location.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Page token.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent resource of the API, of the form: `projects/*/locations/*` Only global location is supported for Provider resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Page size.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "id": "connectors.projects.locations.providers.list",
                  "path": "v1/{+parent}/providers",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers",
                  "response": {
                    "$ref": "ListProvidersResponse"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Provider"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*` Only global location is supported for Provider resource.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}",
                  "description": "Gets details of a provider.",
                  "id": "connectors.projects.locations.providers.get"
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "id": "connectors.projects.locations.providers.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "testIamPermissions": {
                  "id": "connectors.projects.locations.providers.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "connectors.projects.locations.providers.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:getIamPolicy"
                }
              }
            },
            "global": {
              "resources": {
                "managedZones": {
                  "methods": {
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Updates the parameters of a single ManagedZone.",
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "Required. The list of fields to update. Fields are specified relative to the managedZone. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the managedZone details: * `description` * `labels` * `target_project` * `target_network`",
                          "type": "string"
                        },
                        "name": {
                          "description": "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$"
                        }
                      },
                      "id": "connectors.projects.locations.global.managedZones.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "request": {
                        "$ref": "ManagedZone"
                      }
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$",
                          "location": "path",
                          "description": "Required. Resource name of the form: `projects/*/locations/global/managedZones/*`",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Deletes a single ManagedZone.",
                      "id": "connectors.projects.locations.global.managedZones.delete"
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "managedZoneId": {
                          "location": "query",
                          "description": "Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. Parent resource of the ManagedZone, of the form: `projects/*/locations/global`",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global$"
                        }
                      },
                      "id": "connectors.projects.locations.global.managedZones.create",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates a new ManagedZone in a given project and location.",
                      "path": "v1/{+parent}/managedZones",
                      "request": {
                        "$ref": "ManagedZone"
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ManagedZone"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/global/managedZones/*`",
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single ManagedZone.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "connectors.projects.locations.global.managedZones.get"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "id": "connectors.projects.locations.global.managedZones.list",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListManagedZonesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List ManagedZones in a given project",
                      "path": "v1/{+parent}/managedZones",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "type": "string",
                          "description": "Required. Parent resource of the Managed Zone, of the form: `projects/*/locations/global`",
                          "required": true
                        },
                        "filter": {
                          "description": "Filter. https://g3doc.corp.google.com/cloud/control2/g3doc/dev/apihosting/list_filtering.md#filtering.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Page token.",
                          "type": "string"
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Order by parameters."
                        },
                        "pageSize": {
                          "description": "Page size.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "updateSettings": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "description": "Update the global settings of a project.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/global/settings$",
                      "required": true,
                      "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/global/settings",
                  "request": {
                    "$ref": "Settings"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.global.updateSettings"
                },
                "getSettings": {
                  "id": "connectors.projects.locations.global.getSettings",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The resource name of the Settings.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/global/settings$"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Settings"
                  },
                  "description": "GetGlobalSettings gets settings of a project. GlobalSettings is a singleton resource.",
                  "flatPath": "v1/projects/{projectsId}/locations/global/settings",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "connections": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Connection"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "connectors.projects.locations.connections.get",
                  "description": "Gets details of a single Connection.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "parameters": {
                    "view": {
                      "location": "query",
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "type": "string",
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view."
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "location": "path",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "required": true
                    }
                  }
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "connectors.projects.locations.connections.getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single Connection.",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "id": "connectors.projects.locations.connections.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "location": "path",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "Page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "view": {
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "orderBy": {
                      "description": "Order by parameters.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Lists Connections in a given project and location.",
                  "response": {
                    "$ref": "ListConnectionsResponse"
                  },
                  "id": "connectors.projects.locations.connections.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "path": "v1/{+parent}/connections",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "repairEventing": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "RepaiEventing tries to repair eventing related event subscriptions.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:repairEventing",
                  "path": "v1/{+name}:repairEventing",
                  "id": "connectors.projects.locations.connections.repairEventing",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RepairEventingRequest"
                  }
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "id": "connectors.projects.locations.connections.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getConnectionSchemaMetadata": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "connectors.projects.locations.connections.getConnectionSchemaMetadata",
                  "response": {
                    "$ref": "ConnectionSchemaMetadata"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Connection name Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$"
                    }
                  },
                  "description": "Gets schema metadata of a connection. SchemaMetadata is a singleton resource for each connection."
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "connectors.projects.locations.connections.setIamPolicy",
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "Required. You can modify only the fields listed below. To lock/unlock a connection: * `lock_config` To suspend/resume a connection: * `suspended` To update the connection details: * `description` * `labels` * `connector_version` * `config_variables` * `auth_config` * `destination_configs` * `node_config`",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of a single Connection.",
                  "id": "connectors.projects.locations.connections.patch",
                  "request": {
                    "$ref": "Connection"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}"
                },
                "create": {
                  "id": "connectors.projects.locations.connections.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`"
                    },
                    "connectionId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/connections",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new Connection in a given project and location.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Connection"
                  }
                }
              },
              "resources": {
                "eventSubscriptions": {
                  "methods": {
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a single EventSubscription.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "id": "connectors.projects.locations.connections.eventSubscriptions.delete",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*/eventsubscriptions/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "patch": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}",
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "connectors.projects.locations.connections.eventSubscriptions.patch",
                      "path": "v1/{+name}",
                      "request": {
                        "$ref": "EventSubscription"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/connections/{connection}/eventSubscriptions/{event_subscription}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$"
                        },
                        "updateMask": {
                          "description": "Required. The list of fields to update. Fields are specified relative to the Subscription. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the EventSubscription details: * `serviceAccount`",
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the parameters of a single EventSubscription."
                    },
                    "retry": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}:retry",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$",
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*/eventSubscriptions/*`",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}:retry",
                      "httpMethod": "POST",
                      "id": "connectors.projects.locations.connections.eventSubscriptions.retry",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "RetryEventSubscription retries the registration of Subscription.",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "RetryEventSubscriptionRequest"
                      }
                    },
                    "get": {
                      "id": "connectors.projects.locations.connections.eventSubscriptions.get",
                      "response": {
                        "$ref": "EventSubscription"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}",
                      "description": "Gets details of a single EventSubscription.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*/eventSubscriptions/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}"
                    },
                    "create": {
                      "description": "Creates a new EventSubscription in a given project,location and connection.",
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions",
                      "path": "v1/{+parent}/eventSubscriptions",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "connectors.projects.locations.connections.eventSubscriptions.create",
                      "request": {
                        "$ref": "EventSubscription"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "eventSubscriptionId": {
                          "description": "Required. Identifier to assign to the Event Subscription. Must be unique within scope of the parent resource.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "location": "path",
                          "description": "Required. Parent resource of the EventSubscription, of the form: `projects/*/locations/*/connections/*`",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "list": {
                      "id": "connectors.projects.locations.connections.eventSubscriptions.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "filter": {
                          "location": "query",
                          "description": "Filter. https://g3doc.corp.google.com/cloud/control2/g3doc/dev/apihosting/list_filtering.md#filtering.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Page size.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "description": "Required. Parent resource of the EventSubscription, of the form: `projects/*/locations/*/connections/*`",
                          "location": "path"
                        },
                        "orderBy": {
                          "type": "string",
                          "description": "Order by parameters.",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token.",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+parent}/eventSubscriptions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListEventSubscriptionsResponse"
                      },
                      "description": "List EventSubscriptions in a given project,location and connection."
                    }
                  }
                },
                "runtimeActionSchemas": {
                  "methods": {
                    "list": {
                      "id": "connectors.projects.locations.connections.runtimeActionSchemas.list",
                      "path": "v1/{+parent}/runtimeActionSchemas",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "type": "string",
                          "description": "Required. Parent resource of RuntimeActionSchema Format: projects/{project}/locations/{location}/connections/{connection}"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Filter Format: action=\"{actionId}\" Only action field is supported with literal equality operator. Accepted filter example: action=\"CancelOrder\" Wildcards are not supported in the filter currently."
                        },
                        "pageSize": {
                          "description": "Page size.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Page token."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeActionSchemas",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListRuntimeActionSchemasResponse"
                      },
                      "httpMethod": "GET",
                      "description": "List schema of a runtime actions filtered by action name.",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                },
                "connectionSchemaMetadata": {
                  "methods": {
                    "refresh": {
                      "request": {
                        "$ref": "RefreshConnectionSchemaMetadataRequest"
                      },
                      "id": "connectors.projects.locations.connections.connectionSchemaMetadata.refresh",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Refresh runtime schema of a connection.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata:refresh",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}:refresh"
                    }
                  }
                },
                "runtimeEntitySchemas": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeEntitySchemas",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "description": "Required. Filter Format: entity=\"{entityId}\" Only entity field is supported with literal equality operator. Accepted filter example: entity=\"Order\" Wildcards are not supported in the filter currently.",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Page size.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "Page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "description": "Required. Parent resource of RuntimeEntitySchema Format: projects/{project}/locations/{location}/connections/{connection}",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "ListRuntimeEntitySchemasResponse"
                      },
                      "id": "connectors.projects.locations.connections.runtimeEntitySchemas.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/runtimeEntitySchemas",
                      "httpMethod": "GET",
                      "description": "List schema of a runtime entities filtered by entity name.",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "id": "connectors.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "id": "connectors.projects.locations.operations.cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}:cancel",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "id": "connectors.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1/{+name}/operations"
                },
                "delete": {
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.operations.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            },
            "endpointAttachments": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "EndpointAttachment"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The list of fields to update. Fields are specified relative to the endpointAttachment. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the endpointAttachment details: * `description` * `labels`",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$",
                      "description": "Output only. Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.endpointAttachments.patch",
                  "path": "v1/{+name}",
                  "description": "Updates the parameters of a single EndpointAttachment."
                },
                "get": {
                  "response": {
                    "$ref": "EndpointAttachment"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single EndpointAttachment.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.endpointAttachments.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/endpointAttachments/*`",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "create": {
                  "request": {
                    "$ref": "EndpointAttachment"
                  },
                  "id": "connectors.projects.locations.endpointAttachments.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments",
                  "path": "v1/{+parent}/endpointAttachments",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource of the EndpointAttachment, of the form: `projects/*/locations/*`",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "endpointAttachmentId": {
                      "description": "Required. Identifier to assign to the EndpointAttachment. Must be unique within scope of the parent resource.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new EndpointAttachment in a given project and location.",
                  "httpMethod": "POST"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}",
                  "httpMethod": "DELETE",
                  "id": "connectors.projects.locations.endpointAttachments.delete",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/endpointAttachments/*`",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a single EndpointAttachment.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "connectors.projects.locations.endpointAttachments.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments",
                  "description": "List EndpointAttachments in a given project",
                  "response": {
                    "$ref": "ListEndpointAttachmentsResponse"
                  },
                  "path": "v1/{+parent}/endpointAttachments",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Filter. https://g3doc.corp.google.com/cloud/control2/g3doc/dev/apihosting/list_filtering.md#filtering.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Order by parameters.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Page size.",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent resource od the EndpointAttachment, of the form: `projects/*/locations/*`",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "getRuntimeConfig": {
              "httpMethod": "GET",
              "response": {
                "$ref": "RuntimeConfig"
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+/runtimeConfig$",
                  "location": "path",
                  "required": true,
                  "description": "Required. Resource name of the form: `projects/*/locations/*/runtimeConfig`"
                }
              },
              "description": "Gets the runtimeConfig of a location. RuntimeConfig is a singleton resource for each location.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimeConfig",
              "id": "connectors.projects.locations.getRuntimeConfig"
            },
            "get": {
              "id": "connectors.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Location"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "GET"
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "connectors.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "format": "int32"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                }
              },
              "path": "v1/{+name}/locations",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            }
          }
        }
      }
    }
  },
  "basePath": "",
  "canonicalName": "Connectors",
  "ownerName": "Google",
  "baseUrl": "https://connectors.googleapis.com/",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "title": "Connectors API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "revision": "20230706",
  "id": "connectors:v1",
  "mtlsRootUrl": "https://connectors.mtls.googleapis.com/",
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "servicePath": "",
  "rootUrl": "https://connectors.googleapis.com/",
  "description": "Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.",
  "ownerDomain": "google.com",
  "name": "connectors",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "version": "v1",
  "schemas": {
    "Provider": {
      "type": "object",
      "description": "Provider indicates the owner who provides the connectors.",
      "id": "Provider",
      "properties": {
        "documentationUri": {
          "description": "Output only. Link to documentation page.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Output only. Display name.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Updated time."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Created time."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of the Provider. Format: projects/{project}/locations/{location}/providers/{provider} Only global location is supported for Provider resource.",
          "type": "string"
        },
        "externalUri": {
          "type": "string",
          "description": "Output only. Link to external page.",
          "readOnly": true
        },
        "webAssetsLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Cloud storage location of icons etc consumed by UI."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Description of the resource."
        },
        "launchStage": {
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "readOnly": true,
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "type": "string"
        }
      }
    },
    "ExtractionRule": {
      "properties": {
        "source": {
          "$ref": "Source",
          "description": "Source on which the rule is applied."
        },
        "extractionRegex": {
          "description": "Regex used to extract backend details from source. If empty, whole source value will be used.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Extraction Rule.",
      "id": "ExtractionRule"
    },
    "ConnectionSchemaMetadata": {
      "description": "ConnectionSchemaMetadata is the singleton resource of each connection. It includes the entity and action names of runtime resources exposed by a connection backend.",
      "id": "ConnectionSchemaMetadata",
      "properties": {
        "entities": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of entity names.",
          "items": {
            "type": "string"
          }
        },
        "updateTime": {
          "description": "Output only. Timestamp when the connection runtime schema was updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The current state of runtime schema.",
          "enumDescriptions": [
            "Default state.",
            "Schema refresh is in progress.",
            "Schema has been updated."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REFRESHING",
            "UPDATED"
          ]
        },
        "actions": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of actions.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
        },
        "refreshTime": {
          "format": "google-datetime",
          "description": "Output only. Timestamp when the connection runtime schema refresh was triggered.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "Connector": {
      "id": "Connector",
      "description": "Connectors indicates a specific connector type, e.x. Salesforce, SAP etc.",
      "properties": {
        "externalUri": {
          "description": "Output only. Link to external page.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "launchStage": {
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Updated time.",
          "type": "string",
          "readOnly": true
        },
        "documentationUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Link to documentation page."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Created time.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "eventingDetails": {
          "$ref": "EventingDetails",
          "description": "Output only. Eventing details. Will be null if eventing is not supported.",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Resource name of the Connector. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector} Only global location is supported for Connector resource.",
          "readOnly": true,
          "type": "string"
        },
        "webAssetsLocation": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Cloud storage location of icons etc consumed by UI."
        },
        "displayName": {
          "description": "Output only. Display name.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Output only. Description of the resource.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "RefreshConnectionSchemaMetadataRequest": {
      "description": "Request message for ConnectorsService.RefreshConnectionSchemaMetadata.",
      "id": "RefreshConnectionSchemaMetadataRequest",
      "type": "object",
      "properties": {}
    },
    "SslConfigTemplate": {
      "properties": {
        "clientCertType": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Cert type unspecified.",
              "Privacy Enhanced Mail (PEM) Type"
            ],
            "type": "string",
            "enum": [
              "CERT_TYPE_UNSPECIFIED",
              "PEM"
            ]
          },
          "description": "List of supported Client Cert Types"
        },
        "serverCertType": {
          "description": "List of supported Server Cert Types",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Cert type unspecified.",
              "Privacy Enhanced Mail (PEM) Type"
            ],
            "enum": [
              "CERT_TYPE_UNSPECIFIED",
              "PEM"
            ]
          }
        },
        "additionalVariables": {
          "description": "Any additional fields that need to be rendered",
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "type": "array"
        },
        "isTlsMandatory": {
          "description": "Boolean for determining if the connector version mandates TLS.",
          "type": "boolean"
        },
        "sslType": {
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "TLS",
            "MTLS"
          ],
          "type": "string",
          "enumDescriptions": [
            "No SSL configuration required.",
            "TLS Handshake",
            "mutual TLS (MTLS) Handshake"
          ],
          "description": "Controls the ssl type for the given connector version"
        }
      },
      "type": "object",
      "description": "Ssl config details of a connector version",
      "id": "SslConfigTemplate"
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "ListConnectorVersionsResponse": {
      "id": "ListConnectorVersionsResponse",
      "type": "object",
      "description": "Response message for Connectors.ListConnectorVersions.",
      "properties": {
        "connectorVersions": {
          "items": {
            "$ref": "ConnectorVersion"
          },
          "description": "A list of connector versions.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      }
    },
    "EndPoint": {
      "id": "EndPoint",
      "properties": {
        "endpointUri": {
          "type": "string",
          "description": "The URI of the Endpoint."
        },
        "headers": {
          "type": "array",
          "description": "List of Header to be added to the Endpoint.",
          "items": {
            "$ref": "Header"
          }
        }
      },
      "type": "object",
      "description": "Endpoint message includes details of the Destination endpoint."
    },
    "EventingRuntimeData": {
      "type": "object",
      "properties": {
        "status": {
          "readOnly": true,
          "$ref": "EventingStatus",
          "description": "Output only. Current status of eventing."
        },
        "eventsListenerEndpoint": {
          "type": "string",
          "description": "Output only. Events listener endpoint. The value will populated after provisioning the events listener.",
          "readOnly": true
        }
      },
      "id": "EventingRuntimeData",
      "description": "Eventing runtime data has the details related to eventing managed by the system."
    },
    "AuthConfig": {
      "type": "object",
      "description": "AuthConfig defines details of a authentication type.",
      "id": "AuthConfig",
      "properties": {
        "authKey": {
          "type": "string",
          "description": "Identifier key for auth config"
        },
        "userPassword": {
          "$ref": "UserPassword",
          "description": "UserPassword."
        },
        "authType": {
          "type": "string",
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS",
            "SSH_PUBLIC_KEY",
            "OAUTH2_AUTH_CODE_FLOW"
          ],
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication",
            "SSH Public Key Authentication",
            "Oauth 2.0 Authorization Code Flow"
          ],
          "description": "The type of authentication configured."
        },
        "oauth2ClientCredentials": {
          "$ref": "Oauth2ClientCredentials",
          "description": "Oauth2ClientCredentials."
        },
        "oauth2JwtBearer": {
          "description": "Oauth2JwtBearer.",
          "$ref": "Oauth2JwtBearer"
        },
        "oauth2AuthCodeFlow": {
          "$ref": "Oauth2AuthCodeFlow",
          "description": "Oauth2AuthCodeFlow."
        },
        "sshPublicKey": {
          "description": "SSH Public Key.",
          "$ref": "SshPublicKey"
        },
        "additionalVariables": {
          "type": "array",
          "description": "List containing additional auth configs.",
          "items": {
            "$ref": "ConfigVariable"
          }
        }
      }
    },
    "Status": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "Status",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "EventSubscription": {
      "description": "represents the Connector's EventSubscription resource",
      "properties": {
        "createTime": {
          "description": "Output only. Created time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "status": {
          "description": "Optional. Status indicates the status of the event subscription resource",
          "$ref": "EventSubscriptionStatus"
        },
        "name": {
          "type": "string",
          "description": "Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/connections/{connection}/eventSubscriptions/{event_subscription}"
        },
        "subscriberLink": {
          "type": "string",
          "description": "Optional. Link for Subscriber of the current EventSubscription."
        },
        "updateTime": {
          "description": "Output only. Updated time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "subscriber": {
          "description": "Optional. name of the Subscriber for the current EventSubscription.",
          "type": "string"
        },
        "destinations": {
          "$ref": "EventSubscriptionDestination",
          "description": "Optional. The destination to hit when we receive an event"
        },
        "eventTypeId": {
          "type": "string",
          "description": "Optional. Event type id of the event of current EventSubscription."
        }
      },
      "id": "EventSubscription",
      "type": "object"
    },
    "ConnectionStatus": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "INACTIVE",
            "DELETING",
            "UPDATING",
            "ERROR",
            "AUTHORIZATION_REQUIRED"
          ],
          "enumDescriptions": [
            "Connection does not have a state yet.",
            "Connection is being created.",
            "Connection is running and ready for requests.",
            "Connection is stopped.",
            "Connection is being deleted.",
            "Connection is being updated.",
            "Connection is not running due to an error.",
            "Connection is not running because the authorization configuration is not complete."
          ],
          "description": "State.",
          "type": "string"
        },
        "status": {
          "description": "Status provides detailed information for the state.",
          "type": "string"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        }
      },
      "description": "ConnectionStatus indicates the state of the connection.",
      "id": "ConnectionStatus",
      "type": "object"
    },
    "ListEventTypesResponse": {
      "type": "object",
      "id": "ListEventTypesResponse",
      "properties": {
        "eventTypes": {
          "description": "A list of connector versions.",
          "items": {
            "$ref": "EventType"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        }
      },
      "description": "Response message for Connectors.ListEventTypes."
    },
    "JwtClaims": {
      "id": "JwtClaims",
      "type": "object",
      "properties": {
        "issuer": {
          "description": "Value for the \"iss\" claim.",
          "type": "string"
        },
        "subject": {
          "type": "string",
          "description": "Value for the \"sub\" claim."
        },
        "audience": {
          "description": "Value for the \"aud\" claim.",
          "type": "string"
        }
      },
      "description": "JWT claims used for the jwt-bearer authorization grant."
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "properties": {},
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      }
    },
    "ConnectorInfraConfig": {
      "id": "ConnectorInfraConfig",
      "properties": {
        "ratelimitThreshold": {
          "format": "int64",
          "description": "Max QPS supported by the connector version before throttling of requests.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "This cofiguration provides infra configs like rate limit threshold which need to be configurable for every connector version"
    },
    "SslConfig": {
      "properties": {
        "type": {
          "description": "Controls the ssl type for the given connector version.",
          "type": "string",
          "enumDescriptions": [
            "No SSL configuration required.",
            "TLS Handshake",
            "mutual TLS (MTLS) Handshake"
          ],
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "TLS",
            "MTLS"
          ]
        },
        "clientCertificate": {
          "description": "Client Certificate",
          "$ref": "Secret"
        },
        "clientPrivateKeyPass": {
          "description": "Secret containing the passphrase protecting the Client Private Key",
          "$ref": "Secret"
        },
        "clientCertType": {
          "enumDescriptions": [
            "Cert type unspecified.",
            "Privacy Enhanced Mail (PEM) Type"
          ],
          "type": "string",
          "description": "Type of Client Cert (PEM/JKS/.. etc.)",
          "enum": [
            "CERT_TYPE_UNSPECIFIED",
            "PEM"
          ]
        },
        "additionalVariables": {
          "type": "array",
          "description": "Additional SSL related field values",
          "items": {
            "$ref": "ConfigVariable"
          }
        },
        "privateServerCertificate": {
          "description": "Private Server Certificate. Needs to be specified if trust model is `PRIVATE`.",
          "$ref": "Secret"
        },
        "useSsl": {
          "type": "boolean",
          "description": "Bool for enabling SSL"
        },
        "serverCertType": {
          "enum": [
            "CERT_TYPE_UNSPECIFIED",
            "PEM"
          ],
          "description": "Type of Server Cert (PEM/JKS/.. etc.)",
          "type": "string",
          "enumDescriptions": [
            "Cert type unspecified.",
            "Privacy Enhanced Mail (PEM) Type"
          ]
        },
        "clientPrivateKey": {
          "$ref": "Secret",
          "description": "Client Private Key"
        },
        "trustModel": {
          "description": "Trust Model of the SSL connection",
          "enum": [
            "PUBLIC",
            "PRIVATE",
            "INSECURE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Public Trust Model. Takes the Default Java trust store.",
            "Private Trust Model. Takes custom/private trust store.",
            "Insecure Trust Model. Accept all certificates."
          ]
        }
      },
      "description": "SSL Configuration of a connection",
      "id": "SslConfig",
      "type": "object"
    },
    "AuditLogConfig": {
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      },
      "id": "AuditLogConfig"
    },
    "EventingStatus": {
      "id": "EventingStatus",
      "type": "object",
      "description": "EventingStatus indicates the state of eventing.",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Default state.",
            "Eventing is enabled and ready to receive events.",
            "Eventing is not active due to an error."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "ERROR"
          ],
          "readOnly": true,
          "description": "Output only. State."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Description of error if State is set to \"ERROR\"."
        }
      }
    },
    "RuntimeActionSchema": {
      "type": "object",
      "id": "RuntimeActionSchema",
      "properties": {
        "inputParameters": {
          "items": {
            "$ref": "InputParameter"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of input parameter metadata for the action."
        },
        "resultMetadata": {
          "description": "Output only. List of result field metadata.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "ResultMetadata"
          }
        },
        "action": {
          "description": "Output only. Name of the action.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Schema of a runtime action."
    },
    "ListManagedZonesResponse": {
      "id": "ListManagedZonesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "managedZones": {
          "description": "ManagedZones.",
          "type": "array",
          "items": {
            "$ref": "ManagedZone"
          }
        }
      },
      "type": "object",
      "description": "Response message for ConnectorsService.ListManagedZones"
    },
    "ListEndpointAttachmentsResponse": {
      "type": "object",
      "id": "ListEndpointAttachmentsResponse",
      "description": "Response message for ConnectorsService.ListEndpointAttachments",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "endpointAttachments": {
          "type": "array",
          "items": {
            "$ref": "EndpointAttachment"
          },
          "description": "EndpointAttachments."
        }
      }
    },
    "RoleGrant": {
      "description": "This configuration defines all the Cloud IAM roles that needs to be granted to a particular GCP resource for the selected principal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.",
      "id": "RoleGrant",
      "type": "object",
      "properties": {
        "resource": {
          "description": "Resource on which the roles needs to be granted for the principal.",
          "$ref": "Resource"
        },
        "helperTextTemplate": {
          "type": "string",
          "description": "Template that UI can use to provide helper text to customers."
        },
        "principal": {
          "type": "string",
          "enum": [
            "PRINCIPAL_UNSPECIFIED",
            "CONNECTOR_SA"
          ],
          "description": "Prinicipal/Identity for whom the role need to assigned.",
          "enumDescriptions": [
            "Value type is not specified.",
            "Service Account used for Connector workload identity This is either the default service account if unspecified or Service Account provided by Customers through BYOSA."
          ]
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of roles that need to be granted."
        }
      }
    },
    "ConfigVariable": {
      "description": "ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.",
      "id": "ConfigVariable",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key of the config variable.",
          "type": "string"
        },
        "secretValue": {
          "description": "Value is a secret.",
          "$ref": "Secret"
        },
        "encryptionKeyValue": {
          "$ref": "EncryptionKey",
          "description": "Value is a Encryption Key."
        },
        "stringValue": {
          "description": "Value is a string.",
          "type": "string"
        },
        "intValue": {
          "description": "Value is an integer",
          "type": "string",
          "format": "int64"
        },
        "boolValue": {
          "description": "Value is a bool.",
          "type": "boolean"
        }
      }
    },
    "Header": {
      "id": "Header",
      "type": "object",
      "description": "Header details for a given header to be added to Endpoint.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of Header."
        },
        "key": {
          "description": "Key of Header.",
          "type": "string"
        }
      }
    },
    "EventingConfigTemplate": {
      "type": "object",
      "description": "Eventing Config details of a connector version.",
      "properties": {
        "registrationDestinationConfig": {
          "$ref": "DestinationConfigTemplate",
          "description": "Registration host destination config template."
        },
        "enrichmentSupported": {
          "type": "boolean",
          "description": "Enrichment Supported."
        },
        "autoRefresh": {
          "description": "Auto refresh to extend webhook life.",
          "type": "boolean"
        },
        "isEventingSupported": {
          "type": "boolean",
          "description": "Is Eventing Supported."
        },
        "authConfigTemplates": {
          "items": {
            "$ref": "AuthConfigTemplate"
          },
          "type": "array",
          "description": "AuthConfigTemplates represents the auth values for the webhook adapter."
        },
        "autoRegistrationSupported": {
          "type": "boolean",
          "description": "Auto Registration supported."
        },
        "additionalVariables": {
          "type": "array",
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "description": "Additional fields that need to be rendered."
        },
        "encryptionKeyTemplate": {
          "$ref": "ConfigVariableTemplate",
          "description": "Encryption key (can be either Google managed or CMEK)."
        }
      },
      "id": "EventingConfigTemplate"
    },
    "Connection": {
      "description": "Connection represents an instance of connector.",
      "id": "Connection",
      "properties": {
        "configVariables": {
          "description": "Optional. Configuration for configuring the connection with an external system.",
          "type": "array",
          "items": {
            "$ref": "ConfigVariable"
          }
        },
        "suspended": {
          "description": "Optional. Suspended indicates if a user has suspended a connection or not.",
          "type": "boolean"
        },
        "serviceDirectory": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. \"projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors\""
        },
        "labels": {
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "additionalProperties": {
            "type": "string"
          }
        },
        "imageLocation": {
          "description": "Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}",
          "type": "string",
          "readOnly": true
        },
        "connectorVersion": {
          "description": "Required. Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource.",
          "type": "string"
        },
        "nodeConfig": {
          "description": "Optional. Node configuration for the connection.",
          "$ref": "NodeConfig"
        },
        "status": {
          "readOnly": true,
          "description": "Output only. Current status of the connection.",
          "$ref": "ConnectionStatus"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Created time.",
          "readOnly": true
        },
        "connectorVersionLaunchStage": {
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}",
          "type": "string"
        },
        "eventingConfig": {
          "$ref": "EventingConfig",
          "description": "Optional. Eventing config of a connection"
        },
        "connectionRevision": {
          "format": "int64",
          "description": "Output only. Connection revision. This field is only updated when the connection is created or updated by User.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Updated time.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "sslConfig": {
          "description": "Optional. Ssl config of a connection",
          "$ref": "SslConfig"
        },
        "eventingRuntimeData": {
          "readOnly": true,
          "$ref": "EventingRuntimeData",
          "description": "Output only. Eventing Runtime Data."
        },
        "envoyImageLocation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}"
        },
        "connectorVersionInfraConfig": {
          "$ref": "ConnectorVersionInfraConfig",
          "description": "Output only. Infra configs supported by Connector Version.",
          "readOnly": true
        },
        "subscriptionType": {
          "enumDescriptions": [
            "Unspecified subscription type.",
            "PayG subscription.",
            "Paid Subscription."
          ],
          "enum": [
            "SUBSCRIPTION_TYPE_UNSPECIFIED",
            "PAY_G",
            "PAID"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. This subscription type enum states the subscription type of the project."
        },
        "authConfig": {
          "$ref": "AuthConfig",
          "description": "Optional. Configuration for establishing the connection's authentication with an external system."
        },
        "lockConfig": {
          "description": "Optional. Configuration that indicates whether or not the Connection can be edited.",
          "$ref": "LockConfig"
        },
        "eventingEnablementType": {
          "enumDescriptions": [
            "Eventing Enablement Type Unspecifeied.",
            "Both connection and eventing.",
            "Only Eventing."
          ],
          "enum": [
            "EVENTING_ENABLEMENT_TYPE_UNSPECIFIED",
            "EVENTING_AND_CONNECTION",
            "ONLY_EVENTING"
          ],
          "type": "string",
          "description": "Optional. Eventing enablement type. Will be nil if eventing is not enabled."
        },
        "logConfig": {
          "$ref": "ConnectorsLogConfig",
          "description": "Optional. Log configuration for the connection."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the resource."
        },
        "serviceAccount": {
          "description": "Optional. Service account needed for runtime plane to access GCP resources.",
          "type": "string"
        },
        "destinationConfigs": {
          "description": "Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).",
          "type": "array",
          "items": {
            "$ref": "DestinationConfig"
          }
        }
      },
      "type": "object"
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        }
      }
    },
    "EventSubscriptionStatus": {
      "description": "EventSubscription Status denotes the status of the EventSubscription resource.",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Default state.",
            "EventSubscription creation is in progress.",
            "EventSubscription is in Updating status.",
            "EventSubscription is in Active state and is ready to receive events.",
            "EventSubscription is currently suspended.",
            "EventSubscription is in Error state."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "ACTIVE",
            "SUSPENDED",
            "ERROR"
          ],
          "description": "Output only. State of Event Subscription resource."
        },
        "description": {
          "readOnly": true,
          "description": "Output only. Description of the state.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "EventSubscriptionStatus"
    },
    "DestinationConfigTemplate": {
      "type": "object",
      "properties": {
        "isAdvanced": {
          "type": "boolean",
          "description": "Whether the current destination tempalate is part of Advanced settings"
        },
        "displayName": {
          "description": "Display name of the parameter.",
          "type": "string"
        },
        "max": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of destinations supported for this key."
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "defaultPort": {
          "type": "integer",
          "description": "The default port.",
          "format": "int32"
        },
        "portFieldType": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Whether port number should be provided by customers.",
          "type": "string",
          "enum": [
            "FIELD_TYPE_UNSPECIFIED",
            "REQUIRED",
            "OPTIONAL",
            "NOT_USED"
          ]
        },
        "min": {
          "type": "integer",
          "description": "The minimum number of destinations supported for this key.",
          "format": "int32"
        },
        "regexPattern": {
          "type": "string",
          "description": "Regex pattern for host."
        },
        "key": {
          "description": "Key of the destination.",
          "type": "string"
        }
      },
      "description": "DestinationConfigTemplate defines required destinations supported by the Connector.",
      "id": "DestinationConfigTemplate"
    },
    "DestinationConfig": {
      "type": "object",
      "description": "Define the Connectors target endpoint.",
      "id": "DestinationConfig",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key is the destination identifier that is supported by the Connector."
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "Destination"
          },
          "description": "The destinations for the key."
        }
      }
    },
    "OperationMetadata": {
      "properties": {
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "id": "OperationMetadata"
    },
    "ConnectorsLogConfig": {
      "properties": {
        "enabled": {
          "description": "Enabled represents whether logging is enabled or not for a connection.",
          "type": "boolean"
        }
      },
      "description": "Log configuration for the connection.",
      "type": "object",
      "id": "ConnectorsLogConfig"
    },
    "LockConfig": {
      "properties": {
        "reason": {
          "description": "Describes why a connection is locked.",
          "type": "string"
        },
        "locked": {
          "description": "Indicates whether or not the connection is locked.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "LockConfig",
      "description": "Determines whether or no a connection is locked. If locked, a reason must be specified."
    },
    "ListConnectorsResponse": {
      "type": "object",
      "description": "Response message for Connectors.ListConnectors.",
      "id": "ListConnectorsResponse",
      "properties": {
        "connectors": {
          "items": {
            "$ref": "Connector"
          },
          "description": "A list of connectors.",
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        }
      }
    },
    "Expr": {
      "type": "object",
      "id": "Expr",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "Policy": {
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      },
      "id": "Policy",
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "ListEventSubscriptionsResponse": {
      "description": "Response message for ConnectorsService.ListEventSubscriptions",
      "type": "object",
      "id": "ListEventSubscriptionsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "eventSubscriptions": {
          "type": "array",
          "description": "Subscriptions.",
          "items": {
            "$ref": "EventSubscription"
          }
        }
      }
    },
    "AuthConfigTemplate": {
      "type": "object",
      "description": "AuthConfigTemplate defines required field over an authentication type.",
      "properties": {
        "displayName": {
          "description": "Display name for authentication template.",
          "type": "string"
        },
        "authKey": {
          "description": "Identifier key for auth config",
          "type": "string"
        },
        "configVariableTemplates": {
          "type": "array",
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "description": "Config variables to describe an `AuthConfig` for a `Connection`."
        },
        "description": {
          "description": "Connector specific description for an authentication template.",
          "type": "string"
        },
        "authType": {
          "description": "The type of authentication configured.",
          "type": "string",
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication",
            "SSH Public Key Authentication",
            "Oauth 2.0 Authorization Code Flow"
          ],
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS",
            "SSH_PUBLIC_KEY",
            "OAUTH2_AUTH_CODE_FLOW"
          ]
        }
      },
      "id": "AuthConfigTemplate"
    },
    "ListRuntimeEntitySchemasResponse": {
      "id": "ListRuntimeEntitySchemasResponse",
      "description": "Response message for ConnectorsService.ListRuntimeEntitySchemas.",
      "properties": {
        "runtimeEntitySchemas": {
          "type": "array",
          "items": {
            "$ref": "RuntimeEntitySchema"
          },
          "description": "Runtime entity schemas."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        }
      },
      "type": "object"
    },
    "RetryEventSubscriptionRequest": {
      "id": "RetryEventSubscriptionRequest",
      "properties": {},
      "description": "Request message for ConnectorsService.RefreshEventSubscription",
      "type": "object"
    },
    "ListRuntimeActionSchemasResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "runtimeActionSchemas": {
          "items": {
            "$ref": "RuntimeActionSchema"
          },
          "type": "array",
          "description": "Runtime action schemas."
        }
      },
      "description": "Response message for ConnectorsService.ListRuntimeActionSchemas.",
      "id": "ListRuntimeActionSchemasResponse",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "id": "ListOperationsResponse"
    },
    "Field": {
      "id": "Field",
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ],
          "description": "The data type of the Field.",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ]
        },
        "field": {
          "type": "string",
          "description": "Name of the Field."
        },
        "key": {
          "type": "boolean",
          "description": "The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity."
        },
        "nullable": {
          "description": "Specifies whether a null value is allowed.",
          "type": "boolean"
        },
        "defaultValue": {
          "type": "any",
          "description": "The following field specifies the default value of the Field provided by the external system if a value is not provided."
        },
        "readonly": {
          "description": "Specifies if the Field is readonly.",
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "description": "A brief description of the Field."
        },
        "additionalDetails": {
          "description": "The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        }
      },
      "description": "Metadata of an entity field."
    },
    "Oauth2ClientCredentials": {
      "id": "Oauth2ClientCredentials",
      "type": "object",
      "description": "Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.",
      "properties": {
        "clientSecret": {
          "$ref": "Secret",
          "description": "Secret version reference containing the client secret."
        },
        "clientId": {
          "type": "string",
          "description": "The client identifier."
        }
      }
    },
    "ConfigVariableTemplate": {
      "properties": {
        "authorizationCodeLink": {
          "description": "Authorization code link options. To be populated if `ValueType` is `AUTHORIZATION_CODE`",
          "$ref": "AuthorizationCodeLink"
        },
        "required": {
          "type": "boolean",
          "description": "Flag represents that this `ConfigVariable` must be provided for a connection."
        },
        "state": {
          "enumDescriptions": [
            "Status is unspecified.",
            "Config variable is active",
            "Config variable is deprecated."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DEPRECATED"
          ],
          "description": "State of the config variable."
        },
        "roleGrant": {
          "description": "Role grant configuration for the config variable.",
          "$ref": "RoleGrant"
        },
        "requiredCondition": {
          "$ref": "LogicalExpression",
          "description": "Condition under which a field would be required. The condition can be represented in the form of a logical expression."
        },
        "isAdvanced": {
          "type": "boolean",
          "description": "Indicates if current template is part of advanced settings"
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "valueType": {
          "enumDescriptions": [
            "Value type is not specified.",
            "Value type is string.",
            "Value type is integer.",
            "Value type is boolean.",
            "Value type is secret.",
            "Value type is enum.",
            "Value type is authorization code.",
            "Encryption Key."
          ],
          "type": "string",
          "description": "Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.",
          "enum": [
            "VALUE_TYPE_UNSPECIFIED",
            "STRING",
            "INT",
            "BOOL",
            "SECRET",
            "ENUM",
            "AUTHORIZATION_CODE",
            "ENCRYPTION_KEY"
          ]
        },
        "key": {
          "type": "string",
          "description": "Key of the config variable."
        },
        "enumOptions": {
          "items": {
            "$ref": "EnumOption"
          },
          "type": "array",
          "description": "Enum options. To be populated if `ValueType` is `ENUM`"
        },
        "validationRegex": {
          "type": "string",
          "description": "Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the parameter."
        }
      },
      "description": "ConfigVariableTemplate provides metadata about a `ConfigVariable` that is used in a Connection.",
      "type": "object",
      "id": "ConfigVariableTemplate"
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      }
    },
    "EventingDetails": {
      "description": "Eventing Details message.",
      "id": "EventingDetails",
      "properties": {
        "searchTags": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Array of search keywords.",
          "readOnly": true,
          "type": "array"
        },
        "launchStage": {
          "readOnly": true,
          "description": "Output only. Eventing Launch Stage.",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "type": "string"
        },
        "iconLocation": {
          "description": "Output only. Cloud storage location of the icon.",
          "type": "string",
          "readOnly": true
        },
        "documentationLink": {
          "description": "Output only. Link to public documentation.",
          "type": "string",
          "readOnly": true
        },
        "customEventTypes": {
          "readOnly": true,
          "description": "Output only. Custom Event Types.",
          "type": "boolean"
        },
        "description": {
          "description": "Output only. Description.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Name of the Eventing trigger.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListConnectionsResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "connections": {
          "description": "Connections.",
          "items": {
            "$ref": "Connection"
          },
          "type": "array"
        }
      },
      "id": "ListConnectionsResponse",
      "description": "Response message for ConnectorsService.ListConnections",
      "type": "object"
    },
    "SupportedRuntimeFeatures": {
      "description": "Supported runtime features of a connector version. This is passed to the management layer to add a new connector version by the connector developer. Details about how this proto is passed to the management layer is covered in this doc - go/runtime-manifest.",
      "properties": {
        "actionApis": {
          "type": "boolean",
          "description": "Specifies if the connector supports action apis like 'executeAction'."
        },
        "sqlQuery": {
          "description": "Specifies if the connector supports 'ExecuteSqlQuery' operation.",
          "type": "boolean"
        },
        "entityApis": {
          "description": "Specifies if the connector supports entity apis like 'createEntity'.",
          "type": "boolean"
        }
      },
      "id": "SupportedRuntimeFeatures",
      "type": "object"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse"
    },
    "Oauth2AuthCodeFlow": {
      "type": "object",
      "description": "Parameters to support Oauth 2.0 Auth Code Grant Authentication. See https://www.rfc-editor.org/rfc/rfc6749#section-1.3.1 for more details.",
      "properties": {
        "pkceVerifier": {
          "description": "PKCE verifier to be used during the auth code exchange.",
          "type": "string"
        },
        "clientSecret": {
          "$ref": "Secret",
          "description": "Client secret for user-provided OAuth app."
        },
        "clientId": {
          "type": "string",
          "description": "Client ID for user-provided OAuth app."
        },
        "authUri": {
          "type": "string",
          "description": "Auth URL for Authorization Code Flow"
        },
        "redirectUri": {
          "description": "Redirect URI to be provided during the auth code exchange.",
          "type": "string"
        },
        "authCode": {
          "type": "string",
          "description": "Authorization code to be exchanged for access and refresh tokens."
        },
        "enablePkce": {
          "type": "boolean",
          "description": "Whether to enable PKCE when the user performs the auth code flow."
        },
        "scopes": {
          "description": "Scopes the connection will request when the user performs the auth code flow.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Oauth2AuthCodeFlow"
    },
    "EndpointAttachment": {
      "description": "represents the Connector's Endpoint Attachment resource",
      "id": "EndpointAttachment",
      "type": "object",
      "properties": {
        "serviceAttachment": {
          "type": "string",
          "description": "Required. The path of the service attachment"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the resource."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}"
        },
        "endpointIp": {
          "readOnly": true,
          "description": "Output only. The Private Service Connect connection endpoint ip",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Created time.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Updated time.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EncryptionKey": {
      "type": "object",
      "description": "Encryption Key value.",
      "id": "EncryptionKey",
      "properties": {
        "type": {
          "description": "Type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "GOOGLE_MANAGED",
            "CUSTOMER_MANAGED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Value type is not specified.",
            "Google Managed.",
            "Customer Managed."
          ]
        },
        "kmsKeyName": {
          "description": "The [KMS key name] with which the content of the Operation is encrypted. The expected format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`. Will be empty string if google managed.",
          "type": "string"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object"
    },
    "InputParameter": {
      "id": "InputParameter",
      "properties": {
        "parameter": {
          "description": "Name of the Parameter.",
          "type": "string"
        },
        "dataType": {
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "The data type of the Parameter.",
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ]
        },
        "defaultValue": {
          "type": "any",
          "description": "The following field specifies the default value of the Parameter provided by the external system if a value is not provided."
        },
        "nullable": {
          "type": "boolean",
          "description": "Specifies whether a null value is allowed."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the Parameter."
        }
      },
      "type": "object",
      "description": "Metadata of an input parameter."
    },
    "AuthorizationCodeLink": {
      "id": "AuthorizationCodeLink",
      "description": "This configuration captures the details required to render an authorization link for the OAuth Authorization Code Flow.",
      "type": "object",
      "properties": {
        "enablePkce": {
          "description": "Whether to enable PKCE for the auth code flow.",
          "type": "boolean"
        },
        "clientId": {
          "type": "string",
          "description": "The client ID assigned to the GCP Connectors OAuth app for the connector data source."
        },
        "scopes": {
          "type": "array",
          "description": "The scopes for which the user will authorize GCP Connectors on the connector data source.",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "description": "The base URI the user must click to trigger the authorization code login flow.",
          "type": "string"
        }
      }
    },
    "Settings": {
      "id": "Settings",
      "properties": {
        "payg": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Flag indicates if user is in PayG model"
        },
        "vpcsc": {
          "description": "Optional. Flag indicates whether vpc-sc is enabled.",
          "type": "boolean"
        },
        "name": {
          "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}",
          "type": "string",
          "readOnly": true
        },
        "tenantProjectId": {
          "description": "Output only. Tenant project id of the consumer project.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Global Settings details.",
      "type": "object"
    },
    "ListProvidersResponse": {
      "description": "Response message for Connectors.ListProviders.",
      "id": "ListProvidersResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "providers": {
          "description": "A list of providers.",
          "type": "array",
          "items": {
            "$ref": "Provider"
          }
        }
      },
      "type": "object"
    },
    "EventSubscriptionDestination": {
      "description": "Message for EventSubscription Destination to act on receiving an event",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ENDPOINT"
          ],
          "enumDescriptions": [
            "Default state.",
            "Endpoint - Hit the value of endpoint when event is received"
          ],
          "description": "type of the destination"
        },
        "endpoint": {
          "description": "OPTION 1: Hit an endpoint when we receive an event.",
          "$ref": "EndPoint"
        },
        "serviceAccount": {
          "description": "Service account needed for runtime plane to trigger IP workflow.",
          "type": "string"
        }
      },
      "id": "EventSubscriptionDestination",
      "type": "object"
    },
    "SshPublicKey": {
      "id": "SshPublicKey",
      "type": "object",
      "description": "Parameters to support Ssh public key Authentication.",
      "properties": {
        "sshClientCertPass": {
          "$ref": "Secret",
          "description": "Password (passphrase) for ssh client certificate if it has one."
        },
        "sshClientCert": {
          "$ref": "Secret",
          "description": "SSH Client Cert. It should contain both public and private key."
        },
        "certType": {
          "description": "Format of SSH Client cert.",
          "type": "string"
        },
        "username": {
          "description": "The user account used to authenticate.",
          "type": "string"
        }
      }
    },
    "Secret": {
      "description": "Secret provides a reference to entries in Secret Manager.",
      "id": "Secret",
      "type": "object",
      "properties": {
        "secretVersion": {
          "description": "The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`.",
          "type": "string"
        }
      }
    },
    "Source": {
      "properties": {
        "fieldId": {
          "type": "string",
          "description": "Field identifier. For example config vaiable name."
        },
        "sourceType": {
          "enumDescriptions": [
            "Default SOURCE.",
            "Config Variable source type."
          ],
          "type": "string",
          "description": "Type of the source.",
          "enum": [
            "SOURCE_TYPE_UNSPECIFIED",
            "CONFIG_VARIABLE"
          ]
        }
      },
      "description": "Source to extract the backend from.",
      "type": "object",
      "id": "Source"
    },
    "ExtractionRules": {
      "type": "object",
      "properties": {
        "extractionRule": {
          "description": "Collection of Extraction Rule.",
          "type": "array",
          "items": {
            "$ref": "ExtractionRule"
          }
        }
      },
      "description": "Extraction Rules to identity the backends from customer provided configuration in Connection resource.",
      "id": "ExtractionRules"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest"
    },
    "RepairEventingRequest": {
      "id": "RepairEventingRequest",
      "type": "object",
      "properties": {},
      "description": "Request message for ConnectorsService.RepairEventing"
    },
    "ConnectorVersion": {
      "properties": {
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Updated time.",
          "type": "string"
        },
        "sslConfigTemplate": {
          "description": "Output only. Ssl configuration supported by the Connector.",
          "readOnly": true,
          "$ref": "SslConfigTemplate"
        },
        "name": {
          "description": "Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version} Only global location is supported for Connector resource.",
          "readOnly": true,
          "type": "string"
        },
        "supportedRuntimeFeatures": {
          "description": "Output only. Information about the runtime features supported by the Connector.",
          "readOnly": true,
          "$ref": "SupportedRuntimeFeatures"
        },
        "destinationConfigTemplates": {
          "items": {
            "$ref": "DestinationConfigTemplate"
          },
          "description": "Output only. List of destination configs needed to create a connection.",
          "readOnly": true,
          "type": "array"
        },
        "connectorInfraConfig": {
          "readOnly": true,
          "description": "Output only. Infra configs supported by Connector.",
          "$ref": "ConnectorInfraConfig"
        },
        "launchStage": {
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "description": "Output only. Flag to mark the version indicating the launch stage."
        },
        "configVariableTemplates": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "description": "Output only. List of config variables needed to create a connection."
        },
        "labels": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "displayName": {
          "description": "Output only. Display name.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Created time."
        },
        "releaseVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. ReleaseVersion of the connector, for example: \"1.0.1-alpha\"."
        },
        "roleGrants": {
          "readOnly": true,
          "description": "Output only. Role grant configurations for this connector version.",
          "type": "array",
          "items": {
            "$ref": "RoleGrant"
          }
        },
        "egressControlConfig": {
          "description": "Output only. Configuration for Egress Control.",
          "readOnly": true,
          "$ref": "EgressControlConfig"
        },
        "authConfigTemplates": {
          "items": {
            "$ref": "AuthConfigTemplate"
          },
          "description": "Output only. List of auth configs supported by the Connector Version.",
          "readOnly": true,
          "type": "array"
        },
        "eventingConfigTemplate": {
          "description": "Output only. Eventing configuration supported by the Connector.",
          "$ref": "EventingConfigTemplate",
          "readOnly": true
        },
        "roleGrant": {
          "$ref": "RoleGrant",
          "readOnly": true,
          "description": "Output only. Role grant configuration for this config variable. It will be DEPRECATED soon."
        }
      },
      "id": "ConnectorVersion",
      "type": "object",
      "description": "ConnectorVersion indicates a specific version of a connector."
    },
    "ManagedZone": {
      "type": "object",
      "description": "represents the Connector's Managed Zone resource",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. Updated time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "targetVpc": {
          "description": "Required. The name of the Target Project VPC Network",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the resource.",
          "type": "string"
        },
        "targetProject": {
          "type": "string",
          "description": "Required. The name of the Target Project"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Created time."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "dns": {
          "description": "Required. DNS Name of the resource",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}",
          "readOnly": true
        }
      },
      "id": "ManagedZone"
    },
    "Binding": {
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      },
      "id": "Binding",
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`."
    },
    "EnumOption": {
      "type": "object",
      "id": "EnumOption",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the option."
        },
        "id": {
          "type": "string",
          "description": "Id of the option."
        }
      },
      "description": "EnumOption definition"
    },
    "EventingConfig": {
      "type": "object",
      "description": "Eventing Configuration of a connection",
      "id": "EventingConfig",
      "properties": {
        "encryptionKey": {
          "description": "Encryption key (can be either Google managed or CMEK).",
          "$ref": "ConfigVariable"
        },
        "authConfig": {
          "description": "Auth details for the webhook adapter.",
          "$ref": "AuthConfig"
        },
        "registrationDestinationConfig": {
          "description": "Registration endpoint for auto regsitration.",
          "$ref": "DestinationConfig"
        },
        "additionalVariables": {
          "description": "Additional eventing related field values",
          "items": {
            "$ref": "ConfigVariable"
          },
          "type": "array"
        },
        "enrichmentEnabled": {
          "type": "boolean",
          "description": "Enrichment Enabled."
        }
      }
    },
    "RuntimeEntitySchema": {
      "properties": {
        "entity": {
          "description": "Output only. Name of the entity.",
          "type": "string",
          "readOnly": true
        },
        "fields": {
          "description": "Output only. List of fields in the entity.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Field"
          }
        }
      },
      "description": "Schema of a runtime entity.",
      "type": "object",
      "id": "RuntimeEntitySchema"
    },
    "Oauth2JwtBearer": {
      "id": "Oauth2JwtBearer",
      "description": "Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.",
      "properties": {
        "clientKey": {
          "description": "Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*/secrets/*/versions/*`.",
          "$ref": "Secret"
        },
        "jwtClaims": {
          "description": "JwtClaims providers fields to generate the token.",
          "$ref": "JwtClaims"
        }
      },
      "type": "object"
    },
    "UserPassword": {
      "description": "Parameters to support Username and Password Authentication.",
      "id": "UserPassword",
      "type": "object",
      "properties": {
        "password": {
          "$ref": "Secret",
          "description": "Secret version reference containing the password."
        },
        "username": {
          "description": "Username.",
          "type": "string"
        }
      }
    },
    "RuntimeConfig": {
      "id": "RuntimeConfig",
      "description": "RuntimeConfig is the singleton resource of each location. It includes generic resource configs consumed by control plane and runtime plane like: pub/sub topic/subscription resource name, Cloud Storage location storing schema etc.",
      "type": "object",
      "properties": {
        "controlPlaneSubscription": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Pub/Sub subscription for control plane to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "STATE_UNSPECIFIED.",
            "INACTIVE.",
            "ACTIVATING.",
            "ACTIVE.",
            "CREATING.",
            "DELETING.",
            "UPDATING."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "INACTIVE",
            "ACTIVATING",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "UPDATING"
          ],
          "type": "string",
          "enumDeprecated": [
            false,
            true,
            true,
            false,
            false,
            false,
            false
          ],
          "description": "Output only. The state of the location."
        },
        "conndTopic": {
          "description": "Output only. Pub/Sub topic for connd to send message. E.g. projects/{project-id}/topics/{topic-id}",
          "type": "string",
          "readOnly": true
        },
        "controlPlaneTopic": {
          "description": "Output only. Pub/Sub topic for control plne to send message. communication. E.g. projects/{project-id}/topics/{topic-id}",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the runtimeConfig resource. Format: projects/{project}/locations/{location}/runtimeConfig",
          "readOnly": true
        },
        "schemaGcsBucket": {
          "readOnly": true,
          "description": "Output only. The Cloud Storage bucket that stores connector's schema reports.",
          "type": "string"
        },
        "conndSubscription": {
          "description": "Output only. Pub/Sub subscription for connd to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}",
          "readOnly": true,
          "type": "string"
        },
        "serviceDirectory": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Service Directory service name."
        },
        "locationId": {
          "description": "Output only. location_id of the runtime location. E.g. \"us-west1\".",
          "readOnly": true,
          "type": "string"
        },
        "runtimeEndpoint": {
          "type": "string",
          "description": "Output only. The endpoint of the connectors runtime ingress.",
          "readOnly": true
        }
      }
    },
    "FieldComparison": {
      "id": "FieldComparison",
      "type": "object",
      "description": "Field that needs to be compared.",
      "properties": {
        "comparator": {
          "enumDescriptions": [
            "The default value.",
            "The field value must be equal to the specified value.",
            "The field value must not be equal to the specified value."
          ],
          "type": "string",
          "description": "Comparator to use for comparing the field value.",
          "enum": [
            "COMPARATOR_UNSPECIFIED",
            "EQUALS",
            "NOT_EQUALS"
          ]
        },
        "intValue": {
          "type": "string",
          "format": "int64",
          "description": "Integer value"
        },
        "key": {
          "description": "Key of the field.",
          "type": "string"
        },
        "boolValue": {
          "type": "boolean",
          "description": "Boolean value"
        },
        "stringValue": {
          "type": "string",
          "description": "String value"
        }
      }
    },
    "ConnectorVersionInfraConfig": {
      "type": "object",
      "description": "This cofiguration provides infra configs like rate limit threshold which need to be configurable for every connector version",
      "properties": {
        "ratelimitThreshold": {
          "description": "Output only. Max QPS supported by the connector version before throttling of requests.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "ConnectorVersionInfraConfig"
    },
    "EgressControlConfig": {
      "description": "Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource.",
      "type": "object",
      "properties": {
        "extractionRules": {
          "$ref": "ExtractionRules",
          "description": "Extractions Rules to extract the backends from customer provided configuration."
        },
        "backends": {
          "description": "Static Comma separated backends which are common for all Connection resources. Supported formats for each backend are host:port or just host (host can be ip address or domain name).",
          "type": "string"
        }
      },
      "id": "EgressControlConfig"
    },
    "ResultMetadata": {
      "description": "Metadata of result field.",
      "id": "ResultMetadata",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A brief description of the field."
        },
        "dataType": {
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "The data type of the field.",
          "type": "string",
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ]
        },
        "field": {
          "type": "string",
          "description": "Name of the result field."
        }
      }
    },
    "NodeConfig": {
      "properties": {
        "minNodeCount": {
          "type": "integer",
          "description": "Minimum number of nodes in the runtime nodes.",
          "format": "int32"
        },
        "maxNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of nodes in the runtime nodes."
        }
      },
      "id": "NodeConfig",
      "type": "object",
      "description": "Node configuration for the connection."
    },
    "Resource": {
      "type": "object",
      "description": "Resource definition",
      "id": "Resource",
      "properties": {
        "pathTemplate": {
          "description": "Template to uniquely represent a GCP resource in a format IAM expects This is a template that can have references to other values provided in the config variable template.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Value type is not specified.",
            "GCP Project Resource.",
            "Any GCP Resource which is identified uniquely by IAM.",
            "GCP Secret Resource.",
            "GCP Secret Version Resource."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "GCP_PROJECT",
            "GCP_RESOURCE",
            "GCP_SECRETMANAGER_SECRET",
            "GCP_SECRETMANAGER_SECRET_VERSION"
          ],
          "type": "string",
          "description": "Different types of resource supported."
        }
      }
    },
    "EventType": {
      "type": "object",
      "description": "EventType includes fields.",
      "properties": {
        "idPath": {
          "type": "string",
          "description": "Output only. Id path denotes the path of id in webhook payload.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Created time.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "enrichedEventPayloadSchema": {
          "type": "string",
          "description": "Output only. Schema of the event payload after enriched. Will be null if read before send is not supported.",
          "readOnly": true
        },
        "eventTypeId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Event type id. Example: `ticket.created`."
        },
        "eventPayloadSchema": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Schema of webhook event payload."
        },
        "updateTime": {
          "description": "Output only. Updated time.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "entityType": {
          "type": "string",
          "description": "Output only. Runtime entity type name. Will be null if entity type map is not available. Used for read before send feature.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the eventtype. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}/eventtypes/{eventtype} Only global location is supported for Connector resource."
        }
      },
      "id": "EventType"
    },
    "Destination": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The port is the target port number that is accepted by the destination."
        },
        "host": {
          "type": "string",
          "description": "For publicly routable host."
        },
        "serviceAttachment": {
          "type": "string",
          "description": "PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*"
        }
      },
      "id": "Destination"
    },
    "LogicalExpression": {
      "description": "Struct for representing boolean expressions.",
      "properties": {
        "logicalExpressions": {
          "description": "A list of nested conditions to be compared.",
          "items": {
            "$ref": "LogicalExpression"
          },
          "type": "array"
        },
        "fieldComparisons": {
          "type": "array",
          "description": "A list of fields to be compared.",
          "items": {
            "$ref": "FieldComparison"
          }
        },
        "logicalOperator": {
          "description": "The logical operator to use between the fields and conditions.",
          "type": "string",
          "enum": [
            "OPERATOR_UNSPECIFIED",
            "AND",
            "OR"
          ],
          "enumDescriptions": [
            "The default value.",
            "AND operator; The conditions must all be true.",
            "OR operator; At least one of the conditions must be true."
          ]
        }
      },
      "id": "LogicalExpression",
      "type": "object"
    }
  },
  "documentationLink": "https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors",
  "kind": "discovery#restDescription"
}

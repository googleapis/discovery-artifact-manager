{
  "ownerName": "Google",
  "title": "Connectors API",
  "kind": "discovery#restDescription",
  "rootUrl": "https://connectors.googleapis.com/",
  "batchPath": "batch",
  "name": "connectors",
  "documentationLink": "https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors",
  "version": "v1",
  "servicePath": "",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "flatPath": "v1/projects/{projectsId}/locations",
              "path": "v1/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "connectors.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET"
            },
            "get": {
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "id": "connectors.projects.locations.get",
              "httpMethod": "GET"
            },
            "getRuntimeConfig": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimeConfig",
              "description": "Gets the runtimeConfig of a location. RuntimeConfig is a singleton resource for each location.",
              "response": {
                "$ref": "RuntimeConfig"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/runtimeConfig$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. Resource name of the form: `projects/*/locations/*/runtimeConfig`"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "id": "connectors.projects.locations.getRuntimeConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "connections": {
              "resources": {
                "runtimeActionSchemas": {
                  "methods": {
                    "list": {
                      "description": "List schema of a runtime actions filtered by action name.",
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/runtimeActionSchemas",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListRuntimeActionSchemasResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "description": "Page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Required. Filter Format: action=\"{actionId}\" Only action field is supported with literal equality operator. Accepted filter example: action=\"CancelOrder\" Wildcards are not supported in the filter currently.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "description": "Required. Parent resource of RuntimeActionSchema Format: projects/{project}/locations/{location}/connections/{connection}"
                        },
                        "pageSize": {
                          "description": "Page size.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "connectors.projects.locations.connections.runtimeActionSchemas.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeActionSchemas"
                    }
                  }
                },
                "connectionSchemaMetadata": {
                  "methods": {
                    "refresh": {
                      "id": "connectors.projects.locations.connections.connectionSchemaMetadata.refresh",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "RefreshConnectionSchemaMetadataRequest"
                      },
                      "path": "v1/{+name}:refresh",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata:refresh",
                      "description": "Refresh runtime schema of a connection.",
                      "parameters": {
                        "name": {
                          "description": "Required. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$",
                          "required": true
                        }
                      }
                    }
                  }
                },
                "runtimeEntitySchemas": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/runtimeEntitySchemas",
                      "response": {
                        "$ref": "ListRuntimeEntitySchemasResponse"
                      },
                      "id": "connectors.projects.locations.connections.runtimeEntitySchemas.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Page size.",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Required. Filter Format: entity=\"{entityId}\" Only entity field is supported with literal equality operator. Accepted filter example: entity=\"Order\" Wildcards are not supported in the filter currently.",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. Parent resource of RuntimeEntitySchema Format: projects/{project}/locations/{location}/connections/{connection}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeEntitySchemas",
                      "description": "List schema of a runtime entities filtered by entity name."
                    }
                  }
                },
                "eventSubscriptions": {
                  "methods": {
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "eventSubscriptionId": {
                          "location": "query",
                          "description": "Required. Identifier to assign to the Event Subscription. Must be unique within scope of the parent resource.",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Parent resource of the EventSubscription, of the form: `projects/*/locations/*/connections/*`",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "EventSubscription"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/eventSubscriptions",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions",
                      "id": "connectors.projects.locations.connections.eventSubscriptions.create",
                      "description": "Creates a new EventSubscription in a given project,location and connection."
                    },
                    "retry": {
                      "id": "connectors.projects.locations.connections.eventSubscriptions.retry",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}:retry",
                      "description": "RetryEventSubscription retries the registration of Subscription.",
                      "path": "v1/{+name}:retry",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*/eventSubscriptions/*`",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "RetryEventSubscriptionRequest"
                      },
                      "httpMethod": "POST"
                    },
                    "delete": {
                      "description": "Deletes a single EventSubscription.",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "connectors.projects.locations.connections.eventSubscriptions.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*/eventsubscriptions/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "patch": {
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Required. The list of fields to update. Fields are specified relative to the Subscription. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the EventSubscription details: * `serviceAccount`",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$",
                          "required": true,
                          "description": "Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/connections/{connection}/eventSubscriptions/{event_subscription}"
                        }
                      },
                      "request": {
                        "$ref": "EventSubscription"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "PATCH",
                      "id": "connectors.projects.locations.connections.eventSubscriptions.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates the parameters of a single EventSubscription."
                    },
                    "get": {
                      "response": {
                        "$ref": "EventSubscription"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/eventSubscriptions/[^/]+$",
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*/eventSubscriptions/*`",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}",
                      "id": "connectors.projects.locations.connections.eventSubscriptions.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details of a single EventSubscription.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions/{eventSubscriptionsId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/eventSubscriptions",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List EventSubscriptions in a given project,location and connection.",
                      "path": "v1/{+parent}/eventSubscriptions",
                      "httpMethod": "GET",
                      "id": "connectors.projects.locations.connections.eventSubscriptions.list",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Page token."
                        },
                        "filter": {
                          "description": "Filter.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Page size."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "description": "Required. Parent resource of the EventSubscription, of the form: `projects/*/locations/*/connections/*`",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Order by parameters."
                        }
                      },
                      "response": {
                        "$ref": "ListEventSubscriptionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "getConnectionSchemaMetadata": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$",
                      "description": "Required. Connection name Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets schema metadata of a connection. SchemaMetadata is a singleton resource for each connection.",
                  "id": "connectors.projects.locations.connections.getConnectionSchemaMetadata",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata",
                  "response": {
                    "$ref": "ConnectionSchemaMetadata"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "connectionId": {
                      "description": "Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Connection"
                  },
                  "path": "v1/{+parent}/connections",
                  "id": "connectors.projects.locations.connections.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new Connection in a given project and location."
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "connectors.projects.locations.connections.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "connectors.projects.locations.connections.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "get": {
                  "id": "connectors.projects.locations.connections.get",
                  "response": {
                    "$ref": "Connection"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "view": {
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "required": true,
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single Connection.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Connection.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "id": "connectors.projects.locations.connections.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "path": "v1/{+parent}/connections",
                  "id": "connectors.projects.locations.connections.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListConnectionsResponse"
                  },
                  "description": "Lists Connections in a given project and location.",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Order by parameters."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Page size."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "view": {
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "type": "string",
                      "location": "query",
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.",
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ]
                    },
                    "filter": {
                      "description": "Filter.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "connectors.projects.locations.connections.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                },
                "patch": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. You can modify only the fields listed below. To lock/unlock a connection: * `lock_config` To suspend/resume a connection: * `suspended` To update the connection details: * `description` * `labels` * `connector_version` * `config_variables` * `auth_config` * `destination_configs` * `node_config` * `log_config` * `ssl_config` * `eventing_enablement_type` * `eventing_config`"
                    }
                  },
                  "description": "Updates the parameters of a single Connection.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.connections.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Connection"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "httpMethod": "PATCH"
                },
                "repairEventing": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "RepaiEventing tries to repair eventing related event subscriptions.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "RepairEventingRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:repairEventing",
                  "parameters": {
                    "name": {
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:repairEventing",
                  "id": "connectors.projects.locations.connections.repairEventing",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "endpointAttachments": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List EndpointAttachments in a given project",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Page size.",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. Parent resource od the EndpointAttachment, of the form: `projects/*/locations/*`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter.",
                      "type": "string"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Order by parameters."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token.",
                      "type": "string"
                    }
                  },
                  "id": "connectors.projects.locations.endpointAttachments.list",
                  "response": {
                    "$ref": "ListEndpointAttachmentsResponse"
                  },
                  "path": "v1/{+parent}/endpointAttachments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments"
                },
                "get": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}",
                  "httpMethod": "GET",
                  "description": "Gets details of a single EndpointAttachment.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "connectors.projects.locations.endpointAttachments.get",
                  "response": {
                    "$ref": "EndpointAttachment"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/endpointAttachments/*`",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "description": "Creates a new EndpointAttachment in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments",
                  "path": "v1/{+parent}/endpointAttachments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "EndpointAttachment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "connectors.projects.locations.endpointAttachments.create",
                  "parameters": {
                    "endpointAttachmentId": {
                      "description": "Required. Identifier to assign to the EndpointAttachment. Must be unique within scope of the parent resource.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent resource of the EndpointAttachment, of the form: `projects/*/locations/*`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.endpointAttachments.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/endpointAttachments/*`",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$"
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a single EndpointAttachment."
                },
                "patch": {
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "EndpointAttachment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a single EndpointAttachment.",
                  "httpMethod": "PATCH",
                  "id": "connectors.projects.locations.endpointAttachments.patch",
                  "parameters": {
                    "name": {
                      "description": "Output only. Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The list of fields to update. Fields are specified relative to the endpointAttachment. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the endpointAttachment details: * `description` * `labels`",
                      "format": "google-fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}"
                }
              }
            },
            "global": {
              "methods": {
                "updateSettings": {
                  "flatPath": "v1/projects/{projectsId}/locations/global/settings",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Settings"
                  },
                  "id": "connectors.projects.locations.global.updateSettings",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update the global settings of a project.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. The list of fields to update."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}",
                      "pattern": "^projects/[^/]+/locations/global/settings$",
                      "required": true
                    }
                  }
                },
                "getSettings": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/global/settings$",
                      "description": "Required. The resource name of the Settings."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "description": "GetGlobalSettings gets settings of a project. GlobalSettings is a singleton resource.",
                  "response": {
                    "$ref": "Settings"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/global/settings",
                  "id": "connectors.projects.locations.global.getSettings"
                }
              },
              "resources": {
                "managedZones": {
                  "methods": {
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "connectors.projects.locations.global.managedZones.patch",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}",
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$"
                        },
                        "updateMask": {
                          "type": "string",
                          "description": "Required. The list of fields to update. Fields are specified relative to the managedZone. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the managedZone details: * `description` * `labels` * `target_project` * `target_network`",
                          "format": "google-fieldmask",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "ManagedZone"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "path": "v1/{+name}",
                      "description": "Updates the parameters of a single ManagedZone."
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Resource name of the form: `projects/*/locations/global/managedZones/*`",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "id": "connectors.projects.locations.global.managedZones.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single ManagedZone.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/global$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent resource of the ManagedZone, of the form: `projects/*/locations/global`"
                        },
                        "managedZoneId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource."
                        }
                      },
                      "request": {
                        "$ref": "ManagedZone"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a new ManagedZone in a given project and location.",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "connectors.projects.locations.global.managedZones.create",
                      "path": "v1/{+parent}/managedZones",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "ListManagedZonesResponse"
                      },
                      "path": "v1/{+parent}/managedZones",
                      "id": "connectors.projects.locations.global.managedZones.list",
                      "description": "List ManagedZones in a given project",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filter."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Page size.",
                          "format": "int32",
                          "location": "query"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Order by parameters."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/global$",
                          "description": "Required. Parent resource of the Managed Zone, of the form: `projects/*/locations/global`",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details of a single ManagedZone.",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "response": {
                        "$ref": "ManagedZone"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Resource name of the form: `projects/*/locations/global/managedZones/*`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "connectors.projects.locations.global.managedZones.get",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "connectors.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "connectors.projects.locations.operations.get",
                  "httpMethod": "GET"
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "connectors.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "list": {
                  "id": "connectors.projects.locations.operations.list",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "providers": {
              "resources": {
                "connectors": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors",
                      "description": "Lists Connectors in a given project and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "connectors.projects.locations.providers.connectors.list",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/connectors",
                      "response": {
                        "$ref": "ListConnectorsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*` Only global location is supported for Connector resource.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token.",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Page size.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "filter": {
                          "description": "Filter string.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "description": "Gets details of a single Connector.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "Connector"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for Connector resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "connectors.projects.locations.providers.connectors.get"
                    }
                  },
                  "resources": {
                    "versions": {
                      "methods": {
                        "list": {
                          "path": "v1/{+parent}/versions",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions",
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "description": "Page size.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "parent": {
                              "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for ConnectorVersion resource.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$",
                              "required": true,
                              "location": "path"
                            },
                            "view": {
                              "enum": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                "CONNECTOR_VERSION_VIEW_BASIC",
                                "CONNECTOR_VERSION_VIEW_FULL"
                              ],
                              "location": "query",
                              "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `BASIC` view.",
                              "type": "string",
                              "enumDescriptions": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                "Do not include role grant configs.",
                                "Include role grant configs."
                              ]
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Page token."
                            }
                          },
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "ListConnectorVersionsResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Lists Connector Versions in a given project and location.",
                          "id": "connectors.projects.locations.providers.connectors.versions.list"
                        },
                        "get": {
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}",
                          "id": "connectors.projects.locations.providers.connectors.versions.get",
                          "path": "v1/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets details of a single connector version.",
                          "parameters": {
                            "name": {
                              "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*` Only global location is supported for ConnectorVersion resource.",
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$"
                            },
                            "view": {
                              "type": "string",
                              "enum": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                "CONNECTOR_VERSION_VIEW_BASIC",
                                "CONNECTOR_VERSION_VIEW_FULL"
                              ],
                              "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `CUSTOMER` view.",
                              "location": "query",
                              "enumDescriptions": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                "Do not include role grant configs.",
                                "Include role grant configs."
                              ]
                            }
                          },
                          "response": {
                            "$ref": "ConnectorVersion"
                          }
                        }
                      },
                      "resources": {
                        "eventtypes": {
                          "methods": {
                            "get": {
                              "path": "v1/{+name}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}/eventtypes/{eventtypesId}",
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+/eventtypes/[^/]+$",
                                  "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*/eventtypes/*` Only global location is supported for EventType resource.",
                                  "type": "string"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "description": "Gets details of a single event type.",
                              "response": {
                                "$ref": "EventType"
                              },
                              "httpMethod": "GET",
                              "id": "connectors.projects.locations.providers.connectors.versions.eventtypes.get"
                            },
                            "list": {
                              "description": "Lists Event Types in a given Connector Version.",
                              "httpMethod": "GET",
                              "response": {
                                "$ref": "ListEventTypesResponse"
                              },
                              "id": "connectors.projects.locations.providers.connectors.versions.eventtypes.list",
                              "parameterOrder": [
                                "parent"
                              ],
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}/eventtypes",
                              "path": "v1/{+parent}/eventtypes",
                              "parameters": {
                                "pageSize": {
                                  "description": "Page size.",
                                  "type": "integer",
                                  "location": "query",
                                  "format": "int32"
                                },
                                "pageToken": {
                                  "location": "query",
                                  "type": "string",
                                  "description": "Page token."
                                },
                                "parent": {
                                  "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*` Only global location is supported for EventType resource.",
                                  "type": "string",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$",
                                  "location": "path"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "connectors.projects.locations.providers.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Provider"
                  },
                  "httpMethod": "GET",
                  "id": "connectors.projects.locations.providers.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*` Only global location is supported for Provider resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}",
                  "description": "Gets details of a provider.",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "id": "connectors.projects.locations.providers.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy"
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/providers",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource of the API, of the form: `projects/*/locations/*` Only global location is supported for Provider resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token."
                    },
                    "pageSize": {
                      "description": "Page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "id": "connectors.projects.locations.providers.list",
                  "description": "Lists Providers in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers",
                  "response": {
                    "$ref": "ListProvidersResponse"
                  }
                },
                "testIamPermissions": {
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "connectors.projects.locations.providers.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "location": "path"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "id": "connectors:v1",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://connectors.mtls.googleapis.com/",
  "revision": "20230801",
  "basePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "description": "Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.",
  "canonicalName": "Connectors",
  "schemas": {
    "Empty": {
      "properties": {},
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "EventSubscriptionStatus": {
      "id": "EventSubscriptionStatus",
      "description": "EventSubscription Status denotes the status of the EventSubscription resource.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Output only. Description of the state.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "ACTIVE",
            "SUSPENDED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Default state.",
            "EventSubscription creation is in progress.",
            "EventSubscription is in Updating status.",
            "EventSubscription is in Active state and is ready to receive events.",
            "EventSubscription is currently suspended.",
            "EventSubscription is in Error state."
          ],
          "readOnly": true,
          "description": "Output only. State of Event Subscription resource.",
          "type": "string"
        }
      }
    },
    "ListRuntimeActionSchemasResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "runtimeActionSchemas": {
          "type": "array",
          "description": "Runtime action schemas.",
          "items": {
            "$ref": "RuntimeActionSchema"
          }
        }
      },
      "id": "ListRuntimeActionSchemasResponse",
      "description": "Response message for ConnectorsService.ListRuntimeActionSchemas.",
      "type": "object"
    },
    "Location": {
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location",
      "type": "object"
    },
    "ListConnectorsResponse": {
      "type": "object",
      "id": "ListConnectorsResponse",
      "description": "Response message for Connectors.ListConnectors.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "connectors": {
          "description": "A list of connectors.",
          "items": {
            "$ref": "Connector"
          },
          "type": "array"
        }
      }
    },
    "SupportedRuntimeFeatures": {
      "type": "object",
      "description": "Supported runtime features of a connector version.",
      "id": "SupportedRuntimeFeatures",
      "properties": {
        "entityApis": {
          "type": "boolean",
          "description": "Specifies if the connector supports entity apis like 'createEntity'."
        },
        "actionApis": {
          "description": "Specifies if the connector supports action apis like 'executeAction'.",
          "type": "boolean"
        },
        "sqlQuery": {
          "type": "boolean",
          "description": "Specifies if the connector supports 'ExecuteSqlQuery' operation."
        }
      }
    },
    "Connection": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}"
        },
        "connectorVersionLaunchStage": {
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ]
        },
        "destinationConfigs": {
          "description": "Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).",
          "items": {
            "$ref": "DestinationConfig"
          },
          "type": "array"
        },
        "configVariables": {
          "type": "array",
          "items": {
            "$ref": "ConfigVariable"
          },
          "description": "Optional. Configuration for configuring the connection with an external system."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Created time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. Service account needed for runtime plane to access Google Cloud resources."
        },
        "suspended": {
          "description": "Optional. Suspended indicates if a user has suspended a connection or not.",
          "type": "boolean"
        },
        "serviceDirectory": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. \"projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors\""
        },
        "eventingEnablementType": {
          "type": "string",
          "description": "Optional. Eventing enablement type. Will be nil if eventing is not enabled.",
          "enumDescriptions": [
            "Eventing Enablement Type Unspecifeied.",
            "Both connection and eventing.",
            "Only Eventing."
          ],
          "enum": [
            "EVENTING_ENABLEMENT_TYPE_UNSPECIFIED",
            "EVENTING_AND_CONNECTION",
            "ONLY_EVENTING"
          ]
        },
        "imageLocation": {
          "type": "string",
          "description": "Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}",
          "readOnly": true
        },
        "eventingConfig": {
          "$ref": "EventingConfig",
          "description": "Optional. Eventing config of a connection"
        },
        "eventingRuntimeData": {
          "description": "Output only. Eventing Runtime Data.",
          "$ref": "EventingRuntimeData",
          "readOnly": true
        },
        "authConfig": {
          "$ref": "AuthConfig",
          "description": "Optional. Configuration for establishing the connection's authentication with an external system."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Updated time."
        },
        "connectorVersionInfraConfig": {
          "description": "Output only. Infra configs supported by Connector Version.",
          "$ref": "ConnectorVersionInfraConfig",
          "readOnly": true
        },
        "logConfig": {
          "$ref": "ConnectorsLogConfig",
          "description": "Optional. Log configuration for the connection."
        },
        "sslConfig": {
          "description": "Optional. Ssl config of a connection",
          "$ref": "SslConfig"
        },
        "lockConfig": {
          "description": "Optional. Configuration that indicates whether or not the Connection can be edited.",
          "$ref": "LockConfig"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the resource."
        },
        "status": {
          "readOnly": true,
          "$ref": "ConnectionStatus",
          "description": "Output only. Current status of the connection."
        },
        "nodeConfig": {
          "description": "Optional. Node configuration for the connection.",
          "$ref": "NodeConfig"
        },
        "connectorVersion": {
          "description": "Required. Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource.",
          "type": "string"
        },
        "connectionRevision": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Connection revision. This field is only updated when the connection is created or updated by User.",
          "format": "int64"
        },
        "envoyImageLocation": {
          "readOnly": true,
          "description": "Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subscriptionType": {
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified subscription type.",
            "PayG subscription.",
            "Paid Subscription."
          ],
          "enum": [
            "SUBSCRIPTION_TYPE_UNSPECIFIED",
            "PAY_G",
            "PAID"
          ],
          "description": "Output only. This subscription type enum states the subscription type of the project."
        }
      },
      "type": "object",
      "id": "Connection",
      "description": "Connection represents an instance of connector."
    },
    "EnumOption": {
      "id": "EnumOption",
      "description": "EnumOption definition",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the option."
        },
        "id": {
          "description": "Id of the option.",
          "type": "string"
        }
      }
    },
    "RuntimeEntitySchema": {
      "description": "Schema of a runtime entity.",
      "id": "RuntimeEntitySchema",
      "type": "object",
      "properties": {
        "entity": {
          "type": "string",
          "description": "Output only. Name of the entity.",
          "readOnly": true
        },
        "fields": {
          "readOnly": true,
          "items": {
            "$ref": "Field"
          },
          "type": "array",
          "description": "Output only. List of fields in the entity."
        }
      }
    },
    "ListManagedZonesResponse": {
      "description": "Response message for ConnectorsService.ListManagedZones",
      "id": "ListManagedZonesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "managedZones": {
          "items": {
            "$ref": "ManagedZone"
          },
          "description": "ManagedZones.",
          "type": "array"
        }
      }
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest",
      "type": "object"
    },
    "SslConfigTemplate": {
      "id": "SslConfigTemplate",
      "description": "Ssl config details of a connector version",
      "properties": {
        "isTlsMandatory": {
          "description": "Boolean for determining if the connector version mandates TLS.",
          "type": "boolean"
        },
        "additionalVariables": {
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "type": "array",
          "description": "Any additional fields that need to be rendered"
        },
        "clientCertType": {
          "items": {
            "enum": [
              "CERT_TYPE_UNSPECIFIED",
              "PEM"
            ],
            "type": "string",
            "enumDescriptions": [
              "Cert type unspecified.",
              "Privacy Enhanced Mail (PEM) Type"
            ]
          },
          "type": "array",
          "description": "List of supported Client Cert Types"
        },
        "serverCertType": {
          "items": {
            "type": "string",
            "enum": [
              "CERT_TYPE_UNSPECIFIED",
              "PEM"
            ],
            "enumDescriptions": [
              "Cert type unspecified.",
              "Privacy Enhanced Mail (PEM) Type"
            ]
          },
          "description": "List of supported Server Cert Types",
          "type": "array"
        },
        "sslType": {
          "description": "Controls the ssl type for the given connector version",
          "type": "string",
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "TLS",
            "MTLS"
          ],
          "enumDescriptions": [
            "No SSL configuration required.",
            "TLS Handshake",
            "mutual TLS (MTLS) Handshake"
          ]
        }
      },
      "type": "object"
    },
    "EventingDetails": {
      "description": "Eventing Details message.",
      "properties": {
        "searchTags": {
          "description": "Output only. Array of search keywords.",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Description."
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the Eventing trigger.",
          "readOnly": true
        },
        "launchStage": {
          "readOnly": true,
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "type": "string",
          "description": "Output only. Eventing Launch Stage.",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ]
        },
        "customEventTypes": {
          "description": "Output only. Custom Event Types.",
          "readOnly": true,
          "type": "boolean"
        },
        "documentationLink": {
          "type": "string",
          "description": "Output only. Link to public documentation.",
          "readOnly": true
        },
        "iconLocation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Cloud storage location of the icon."
        }
      },
      "id": "EventingDetails",
      "type": "object"
    },
    "LogicalExpression": {
      "type": "object",
      "id": "LogicalExpression",
      "properties": {
        "fieldComparisons": {
          "type": "array",
          "description": "A list of fields to be compared.",
          "items": {
            "$ref": "FieldComparison"
          }
        },
        "logicalOperator": {
          "enum": [
            "OPERATOR_UNSPECIFIED",
            "AND",
            "OR"
          ],
          "enumDescriptions": [
            "The default value.",
            "AND operator; The conditions must all be true.",
            "OR operator; At least one of the conditions must be true."
          ],
          "type": "string",
          "description": "The logical operator to use between the fields and conditions."
        },
        "logicalExpressions": {
          "description": "A list of nested conditions to be compared.",
          "type": "array",
          "items": {
            "$ref": "LogicalExpression"
          }
        }
      },
      "description": "Struct for representing boolean expressions."
    },
    "Resource": {
      "properties": {
        "pathTemplate": {
          "type": "string",
          "description": "Template to uniquely represent a Google Cloud resource in a format IAM expects This is a template that can have references to other values provided in the config variable template."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "GCP_PROJECT",
            "GCP_RESOURCE",
            "GCP_SECRETMANAGER_SECRET",
            "GCP_SECRETMANAGER_SECRET_VERSION"
          ],
          "description": "Different types of resource supported.",
          "enumDescriptions": [
            "Value type is not specified.",
            "Google Cloud Project Resource.",
            "Any Google Cloud Resource which is identified uniquely by IAM.",
            "Google Cloud Secret Resource.",
            "Google Cloud Secret Version Resource."
          ],
          "type": "string"
        }
      },
      "id": "Resource",
      "type": "object",
      "description": "Resource definition"
    },
    "Policy": {
      "id": "Policy",
      "type": "object",
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array"
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "AuthorizationCodeLink": {
      "id": "AuthorizationCodeLink",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The base URI the user must click to trigger the authorization code login flow."
        },
        "clientId": {
          "type": "string",
          "description": "The client ID assigned to the Google Cloud Connectors OAuth app for the connector data source."
        },
        "scopes": {
          "description": "The scopes for which the user will authorize Google Cloud Connectors on the connector data source.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enablePkce": {
          "type": "boolean",
          "description": "Whether to enable PKCE for the auth code flow."
        }
      },
      "type": "object",
      "description": "This configuration captures the details required to render an authorization link for the OAuth Authorization Code Flow."
    },
    "EventSubscription": {
      "properties": {
        "subscriber": {
          "type": "string",
          "description": "Optional. name of the Subscriber for the current EventSubscription."
        },
        "status": {
          "description": "Optional. Status indicates the status of the event subscription resource",
          "$ref": "EventSubscriptionStatus"
        },
        "destinations": {
          "$ref": "EventSubscriptionDestination",
          "description": "Optional. The destination to hit when we receive an event"
        },
        "subscriberLink": {
          "type": "string",
          "description": "Optional. Link for Subscriber of the current EventSubscription."
        },
        "name": {
          "type": "string",
          "description": "Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/connections/{connection}/eventSubscriptions/{event_subscription}"
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Created time.",
          "format": "google-datetime"
        },
        "eventTypeId": {
          "description": "Optional. Event type id of the event of current EventSubscription.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Updated time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "EventSubscription",
      "description": "represents the Connector's EventSubscription resource",
      "type": "object"
    },
    "EventingRuntimeData": {
      "id": "EventingRuntimeData",
      "properties": {
        "status": {
          "$ref": "EventingStatus",
          "readOnly": true,
          "description": "Output only. Current status of eventing."
        },
        "eventsListenerEndpoint": {
          "readOnly": true,
          "description": "Output only. Events listener endpoint. The value will populated after provisioning the events listener.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Eventing runtime data has the details related to eventing managed by the system."
    },
    "AuditConfig": {
      "type": "object",
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        }
      }
    },
    "Settings": {
      "type": "object",
      "id": "Settings",
      "properties": {
        "payg": {
          "type": "boolean",
          "description": "Output only. Flag indicates if user is in PayG model",
          "readOnly": true
        },
        "vpcsc": {
          "description": "Optional. Flag indicates whether vpc-sc is enabled.",
          "type": "boolean"
        },
        "tenantProjectId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Tenant project id of the consumer project."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}"
        }
      },
      "description": "Global Settings details."
    },
    "EventingStatus": {
      "properties": {
        "state": {
          "description": "Output only. State.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "ERROR"
          ],
          "enumDescriptions": [
            "Default state.",
            "Eventing is enabled and ready to receive events.",
            "Eventing is not active due to an error."
          ],
          "type": "string"
        },
        "description": {
          "readOnly": true,
          "description": "Output only. Description of error if State is set to \"ERROR\".",
          "type": "string"
        }
      },
      "id": "EventingStatus",
      "description": "EventingStatus indicates the state of eventing.",
      "type": "object"
    },
    "Binding": {
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        }
      },
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object"
    },
    "EgressControlConfig": {
      "id": "EgressControlConfig",
      "type": "object",
      "properties": {
        "backends": {
          "description": "Static Comma separated backends which are common for all Connection resources. Supported formats for each backend are host:port or just host (host can be ip address or domain name).",
          "type": "string"
        },
        "extractionRules": {
          "description": "Extractions Rules to extract the backends from customer provided configuration.",
          "$ref": "ExtractionRules"
        }
      },
      "description": "Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource."
    },
    "ListEndpointAttachmentsResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "endpointAttachments": {
          "type": "array",
          "description": "EndpointAttachments.",
          "items": {
            "$ref": "EndpointAttachment"
          }
        }
      },
      "description": "Response message for ConnectorsService.ListEndpointAttachments",
      "id": "ListEndpointAttachmentsResponse"
    },
    "EventingConfigTemplate": {
      "description": "Eventing Config details of a connector version.",
      "properties": {
        "registrationDestinationConfig": {
          "description": "Registration host destination config template.",
          "$ref": "DestinationConfigTemplate"
        },
        "additionalVariables": {
          "type": "array",
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "description": "Additional fields that need to be rendered."
        },
        "enrichmentSupported": {
          "description": "Enrichment Supported.",
          "type": "boolean"
        },
        "isEventingSupported": {
          "description": "Is Eventing Supported.",
          "type": "boolean"
        },
        "autoRegistrationSupported": {
          "type": "boolean",
          "description": "Auto Registration supported."
        },
        "autoRefresh": {
          "description": "Auto refresh to extend webhook life.",
          "type": "boolean"
        },
        "authConfigTemplates": {
          "items": {
            "$ref": "AuthConfigTemplate"
          },
          "type": "array",
          "description": "AuthConfigTemplates represents the auth values for the webhook adapter."
        },
        "encryptionKeyTemplate": {
          "$ref": "ConfigVariableTemplate",
          "description": "Encryption key (can be either Google managed or CMEK)."
        }
      },
      "type": "object",
      "id": "EventingConfigTemplate"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "DestinationConfig": {
      "properties": {
        "key": {
          "type": "string",
          "description": "The key is the destination identifier that is supported by the Connector."
        },
        "destinations": {
          "type": "array",
          "description": "The destinations for the key.",
          "items": {
            "$ref": "Destination"
          }
        }
      },
      "id": "DestinationConfig",
      "type": "object",
      "description": "Define the Connectors target endpoint."
    },
    "ListEventTypesResponse": {
      "description": "Response message for Connectors.ListEventTypes.",
      "id": "ListEventTypesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "eventTypes": {
          "items": {
            "$ref": "EventType"
          },
          "description": "A list of connector versions.",
          "type": "array"
        }
      }
    },
    "OperationMetadata": {
      "type": "object",
      "id": "OperationMetadata",
      "properties": {
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation."
    },
    "UserPassword": {
      "id": "UserPassword",
      "type": "object",
      "description": "Parameters to support Username and Password Authentication.",
      "properties": {
        "password": {
          "$ref": "Secret",
          "description": "Secret version reference containing the password."
        },
        "username": {
          "description": "Username.",
          "type": "string"
        }
      }
    },
    "LockConfig": {
      "type": "object",
      "properties": {
        "locked": {
          "type": "boolean",
          "description": "Indicates whether or not the connection is locked."
        },
        "reason": {
          "description": "Describes why a connection is locked.",
          "type": "string"
        }
      },
      "id": "LockConfig",
      "description": "Determines whether or no a connection is locked. If locked, a reason must be specified."
    },
    "JwtClaims": {
      "properties": {
        "subject": {
          "description": "Value for the \"sub\" claim.",
          "type": "string"
        },
        "audience": {
          "description": "Value for the \"aud\" claim.",
          "type": "string"
        },
        "issuer": {
          "description": "Value for the \"iss\" claim.",
          "type": "string"
        }
      },
      "id": "JwtClaims",
      "type": "object",
      "description": "JWT claims used for the jwt-bearer authorization grant."
    },
    "NodeConfig": {
      "id": "NodeConfig",
      "type": "object",
      "description": "Node configuration for the connection.",
      "properties": {
        "minNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of nodes in the runtime nodes."
        },
        "maxNodeCount": {
          "type": "integer",
          "description": "Maximum number of nodes in the runtime nodes.",
          "format": "int32"
        }
      }
    },
    "EncryptionKey": {
      "id": "EncryptionKey",
      "description": "Encryption Key value.",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "GOOGLE_MANAGED",
            "CUSTOMER_MANAGED"
          ],
          "description": "Type.",
          "type": "string",
          "enumDescriptions": [
            "Value type is not specified.",
            "Google Managed.",
            "Customer Managed."
          ]
        },
        "kmsKeyName": {
          "description": "The [KMS key name] with which the content of the Operation is encrypted. The expected format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`. Will be empty string if google managed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "type": "object",
      "description": "Request message for `TestIamPermissions` method."
    },
    "RepairEventingRequest": {
      "properties": {},
      "id": "RepairEventingRequest",
      "description": "Request message for ConnectorsService.RepairEventing",
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object",
      "id": "CancelOperationRequest"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "ConnectorVersion": {
      "properties": {
        "eventingConfigTemplate": {
          "readOnly": true,
          "$ref": "EventingConfigTemplate",
          "description": "Output only. Eventing configuration supported by the Connector."
        },
        "sslConfigTemplate": {
          "readOnly": true,
          "$ref": "SslConfigTemplate",
          "description": "Output only. Ssl configuration supported by the Connector."
        },
        "roleGrants": {
          "description": "Output only. Role grant configurations for this connector version.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "RoleGrant"
          }
        },
        "connectorInfraConfig": {
          "$ref": "ConnectorInfraConfig",
          "description": "Output only. Infra configs supported by Connector.",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          },
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "releaseVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. ReleaseVersion of the connector, for example: \"1.0.1-alpha\"."
        },
        "destinationConfigTemplates": {
          "description": "Output only. List of destination configs needed to create a connection.",
          "items": {
            "$ref": "DestinationConfigTemplate"
          },
          "type": "array",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version} Only global location is supported for Connector resource.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Created time."
        },
        "egressControlConfig": {
          "$ref": "EgressControlConfig",
          "description": "Output only. Configuration for Egress Control.",
          "readOnly": true
        },
        "authConfigTemplates": {
          "items": {
            "$ref": "AuthConfigTemplate"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. List of auth configs supported by the Connector Version."
        },
        "launchStage": {
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Updated time.",
          "readOnly": true
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Display name."
        },
        "configVariableTemplates": {
          "readOnly": true,
          "description": "Output only. List of config variables needed to create a connection.",
          "type": "array",
          "items": {
            "$ref": "ConfigVariableTemplate"
          }
        },
        "supportedRuntimeFeatures": {
          "description": "Output only. Information about the runtime features supported by the Connector.",
          "$ref": "SupportedRuntimeFeatures",
          "readOnly": true
        },
        "roleGrant": {
          "$ref": "RoleGrant",
          "description": "Output only. Role grant configuration for this config variable. It will be DEPRECATED soon.",
          "readOnly": true
        }
      },
      "id": "ConnectorVersion",
      "description": "ConnectorVersion indicates a specific version of a connector.",
      "type": "object"
    },
    "InputParameter": {
      "id": "InputParameter",
      "type": "object",
      "properties": {
        "description": {
          "description": "A brief description of the Parameter.",
          "type": "string"
        },
        "dataType": {
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ],
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "description": "The data type of the Parameter.",
          "type": "string",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ]
        },
        "nullable": {
          "type": "boolean",
          "description": "Specifies whether a null value is allowed."
        },
        "parameter": {
          "description": "Name of the Parameter.",
          "type": "string"
        },
        "defaultValue": {
          "description": "The following field specifies the default value of the Parameter provided by the external system if a value is not provided.",
          "type": "any"
        }
      },
      "description": "Metadata of an input parameter."
    },
    "ListConnectionsResponse": {
      "properties": {
        "connections": {
          "items": {
            "$ref": "Connection"
          },
          "type": "array",
          "description": "Connections."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for ConnectorsService.ListConnections",
      "id": "ListConnectionsResponse"
    },
    "Source": {
      "id": "Source",
      "description": "Source to extract the backend from.",
      "properties": {
        "fieldId": {
          "description": "Field identifier. For example config vaiable name.",
          "type": "string"
        },
        "sourceType": {
          "description": "Type of the source.",
          "type": "string",
          "enum": [
            "SOURCE_TYPE_UNSPECIFIED",
            "CONFIG_VARIABLE"
          ],
          "enumDescriptions": [
            "Default SOURCE.",
            "Config Variable source type."
          ]
        }
      },
      "type": "object"
    },
    "ConnectionSchemaMetadata": {
      "type": "object",
      "description": "ConnectionSchemaMetadata is the singleton resource of each connection. It includes the entity and action names of runtime resources exposed by a connection backend.",
      "id": "ConnectionSchemaMetadata",
      "properties": {
        "refreshTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Timestamp when the connection runtime schema refresh was triggered.",
          "type": "string"
        },
        "entities": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. List of entity names."
        },
        "actions": {
          "type": "array",
          "description": "Output only. List of actions.",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Timestamp when the connection runtime schema was updated."
        },
        "name": {
          "description": "Output only. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "Default state.",
            "Schema refresh is in progress.",
            "Schema has been updated."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REFRESHING",
            "UPDATED"
          ],
          "description": "Output only. The current state of runtime schema."
        }
      }
    },
    "Field": {
      "id": "Field",
      "description": "Metadata of an entity field.",
      "properties": {
        "field": {
          "description": "Name of the Field.",
          "type": "string"
        },
        "defaultValue": {
          "type": "any",
          "description": "The following field specifies the default value of the Field provided by the external system if a value is not provided."
        },
        "additionalDetails": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields."
        },
        "nullable": {
          "type": "boolean",
          "description": "Specifies whether a null value is allowed."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the Field."
        },
        "readonly": {
          "description": "Specifies if the Field is readonly.",
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "description": "The data type of the Field.",
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ]
        },
        "key": {
          "type": "boolean",
          "description": "The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity."
        }
      },
      "type": "object"
    },
    "SshPublicKey": {
      "properties": {
        "sshClientCertPass": {
          "description": "Password (passphrase) for ssh client certificate if it has one.",
          "$ref": "Secret"
        },
        "username": {
          "description": "The user account used to authenticate.",
          "type": "string"
        },
        "sshClientCert": {
          "description": "SSH Client Cert. It should contain both public and private key.",
          "$ref": "Secret"
        },
        "certType": {
          "description": "Format of SSH Client cert.",
          "type": "string"
        }
      },
      "id": "SshPublicKey",
      "description": "Parameters to support Ssh public key Authentication.",
      "type": "object"
    },
    "EventingConfig": {
      "type": "object",
      "properties": {
        "authConfig": {
          "description": "Auth details for the webhook adapter.",
          "$ref": "AuthConfig"
        },
        "encryptionKey": {
          "$ref": "ConfigVariable",
          "description": "Encryption key (can be either Google managed or CMEK)."
        },
        "enrichmentEnabled": {
          "description": "Enrichment Enabled.",
          "type": "boolean"
        },
        "registrationDestinationConfig": {
          "$ref": "DestinationConfig",
          "description": "Registration endpoint for auto regsitration."
        },
        "additionalVariables": {
          "description": "Additional eventing related field values",
          "items": {
            "$ref": "ConfigVariable"
          },
          "type": "array"
        }
      },
      "description": "Eventing Configuration of a connection",
      "id": "EventingConfig"
    },
    "RuntimeActionSchema": {
      "properties": {
        "action": {
          "readOnly": true,
          "description": "Output only. Name of the action.",
          "type": "string"
        },
        "inputParameters": {
          "readOnly": true,
          "items": {
            "$ref": "InputParameter"
          },
          "type": "array",
          "description": "Output only. List of input parameter metadata for the action."
        },
        "resultMetadata": {
          "type": "array",
          "items": {
            "$ref": "ResultMetadata"
          },
          "description": "Output only. List of result field metadata.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "RuntimeActionSchema",
      "description": "Schema of a runtime action."
    },
    "ListEventSubscriptionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "eventSubscriptions": {
          "items": {
            "$ref": "EventSubscription"
          },
          "type": "array",
          "description": "Subscriptions."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListEventSubscriptionsResponse",
      "type": "object",
      "description": "Response message for ConnectorsService.ListEventSubscriptions"
    },
    "ListProvidersResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "providers": {
          "description": "A list of providers.",
          "type": "array",
          "items": {
            "$ref": "Provider"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        }
      },
      "description": "Response message for Connectors.ListProviders.",
      "type": "object",
      "id": "ListProvidersResponse"
    },
    "ListConnectorVersionsResponse": {
      "description": "Response message for Connectors.ListConnectorVersions.",
      "type": "object",
      "id": "ListConnectorVersionsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectorVersions": {
          "type": "array",
          "items": {
            "$ref": "ConnectorVersion"
          },
          "description": "A list of connector versions."
        }
      }
    },
    "EventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpoint": {
          "description": "OPTION 1: Hit an endpoint when we receive an event.",
          "$ref": "EndPoint"
        },
        "serviceAccount": {
          "description": "Service account needed for runtime plane to trigger IP workflow.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Default state.",
            "Endpoint - Hit the value of endpoint when event is received"
          ],
          "type": "string",
          "description": "type of the destination",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ENDPOINT"
          ]
        }
      },
      "id": "EventSubscriptionDestination",
      "description": "Message for EventSubscription Destination to act on receiving an event"
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsResponse"
    },
    "AuthConfig": {
      "type": "object",
      "description": "AuthConfig defines details of a authentication type.",
      "properties": {
        "userPassword": {
          "$ref": "UserPassword",
          "description": "UserPassword."
        },
        "oauth2ClientCredentials": {
          "$ref": "Oauth2ClientCredentials",
          "description": "Oauth2ClientCredentials."
        },
        "sshPublicKey": {
          "$ref": "SshPublicKey",
          "description": "SSH Public Key."
        },
        "oauth2AuthCodeFlow": {
          "description": "Oauth2AuthCodeFlow.",
          "$ref": "Oauth2AuthCodeFlow"
        },
        "additionalVariables": {
          "type": "array",
          "items": {
            "$ref": "ConfigVariable"
          },
          "description": "List containing additional auth configs."
        },
        "authType": {
          "description": "The type of authentication configured.",
          "type": "string",
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS",
            "SSH_PUBLIC_KEY",
            "OAUTH2_AUTH_CODE_FLOW"
          ],
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication",
            "SSH Public Key Authentication",
            "Oauth 2.0 Authorization Code Flow"
          ]
        },
        "authKey": {
          "type": "string",
          "description": "Identifier key for auth config"
        },
        "oauth2JwtBearer": {
          "$ref": "Oauth2JwtBearer",
          "description": "Oauth2JwtBearer."
        }
      },
      "id": "AuthConfig"
    },
    "RetryEventSubscriptionRequest": {
      "description": "Request message for ConnectorsService.RefreshEventSubscription",
      "type": "object",
      "properties": {},
      "id": "RetryEventSubscriptionRequest"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "ConfigVariable": {
      "properties": {
        "key": {
          "description": "Key of the config variable.",
          "type": "string"
        },
        "secretValue": {
          "$ref": "Secret",
          "description": "Value is a secret."
        },
        "stringValue": {
          "type": "string",
          "description": "Value is a string."
        },
        "encryptionKeyValue": {
          "$ref": "EncryptionKey",
          "description": "Value is a Encryption Key."
        },
        "boolValue": {
          "description": "Value is a bool.",
          "type": "boolean"
        },
        "intValue": {
          "type": "string",
          "description": "Value is an integer",
          "format": "int64"
        }
      },
      "id": "ConfigVariable",
      "description": "ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.",
      "type": "object"
    },
    "SslConfig": {
      "description": "SSL Configuration of a connection",
      "type": "object",
      "properties": {
        "useSsl": {
          "type": "boolean",
          "description": "Bool for enabling SSL"
        },
        "trustModel": {
          "enum": [
            "PUBLIC",
            "PRIVATE",
            "INSECURE"
          ],
          "type": "string",
          "description": "Trust Model of the SSL connection",
          "enumDescriptions": [
            "Public Trust Model. Takes the Default Java trust store.",
            "Private Trust Model. Takes custom/private trust store.",
            "Insecure Trust Model. Accept all certificates."
          ]
        },
        "clientCertType": {
          "description": "Type of Client Cert (PEM/JKS/.. etc.)",
          "type": "string",
          "enum": [
            "CERT_TYPE_UNSPECIFIED",
            "PEM"
          ],
          "enumDescriptions": [
            "Cert type unspecified.",
            "Privacy Enhanced Mail (PEM) Type"
          ]
        },
        "clientCertificate": {
          "description": "Client Certificate",
          "$ref": "Secret"
        },
        "additionalVariables": {
          "description": "Additional SSL related field values",
          "items": {
            "$ref": "ConfigVariable"
          },
          "type": "array"
        },
        "clientPrivateKeyPass": {
          "description": "Secret containing the passphrase protecting the Client Private Key",
          "$ref": "Secret"
        },
        "serverCertType": {
          "description": "Type of Server Cert (PEM/JKS/.. etc.)",
          "enumDescriptions": [
            "Cert type unspecified.",
            "Privacy Enhanced Mail (PEM) Type"
          ],
          "enum": [
            "CERT_TYPE_UNSPECIFIED",
            "PEM"
          ],
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "No SSL configuration required.",
            "TLS Handshake",
            "mutual TLS (MTLS) Handshake"
          ],
          "description": "Controls the ssl type for the given connector version.",
          "type": "string",
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "TLS",
            "MTLS"
          ]
        },
        "privateServerCertificate": {
          "description": "Private Server Certificate. Needs to be specified if trust model is `PRIVATE`.",
          "$ref": "Secret"
        },
        "clientPrivateKey": {
          "description": "Client Private Key",
          "$ref": "Secret"
        }
      },
      "id": "SslConfig"
    },
    "RefreshConnectionSchemaMetadataRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for ConnectorsService.RefreshConnectionSchemaMetadata.",
      "id": "RefreshConnectionSchemaMetadataRequest"
    },
    "EndpointAttachment": {
      "properties": {
        "description": {
          "description": "Optional. Description of the resource.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Created time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "endpointIp": {
          "description": "Output only. The Private Service Connect connection endpoint ip",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Updated time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "type": "object"
        },
        "serviceAttachment": {
          "type": "string",
          "description": "Required. The path of the service attachment"
        }
      },
      "description": "represents the Connector's Endpoint Attachment resource",
      "id": "EndpointAttachment",
      "type": "object"
    },
    "Oauth2ClientCredentials": {
      "id": "Oauth2ClientCredentials",
      "description": "Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.",
      "properties": {
        "clientSecret": {
          "$ref": "Secret",
          "description": "Secret version reference containing the client secret."
        },
        "clientId": {
          "type": "string",
          "description": "The client identifier."
        }
      },
      "type": "object"
    },
    "Header": {
      "type": "object",
      "description": "Header details for a given header to be added to Endpoint.",
      "id": "Header",
      "properties": {
        "value": {
          "description": "Value of Header.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "Key of Header."
        }
      }
    },
    "ListRuntimeEntitySchemasResponse": {
      "id": "ListRuntimeEntitySchemasResponse",
      "type": "object",
      "description": "Response message for ConnectorsService.ListRuntimeEntitySchemas.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "runtimeEntitySchemas": {
          "items": {
            "$ref": "RuntimeEntitySchema"
          },
          "type": "array",
          "description": "Runtime entity schemas."
        }
      }
    },
    "FieldComparison": {
      "id": "FieldComparison",
      "type": "object",
      "properties": {
        "stringValue": {
          "type": "string",
          "description": "String value"
        },
        "intValue": {
          "format": "int64",
          "description": "Integer value",
          "type": "string"
        },
        "boolValue": {
          "description": "Boolean value",
          "type": "boolean"
        },
        "key": {
          "description": "Key of the field.",
          "type": "string"
        },
        "comparator": {
          "enumDescriptions": [
            "The default value.",
            "The field value must be equal to the specified value.",
            "The field value must not be equal to the specified value."
          ],
          "type": "string",
          "description": "Comparator to use for comparing the field value.",
          "enum": [
            "COMPARATOR_UNSPECIFIED",
            "EQUALS",
            "NOT_EQUALS"
          ]
        }
      },
      "description": "Field that needs to be compared."
    },
    "ConnectionStatus": {
      "description": "ConnectionStatus indicates the state of the connection.",
      "type": "object",
      "id": "ConnectionStatus",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status provides detailed information for the state."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "INACTIVE",
            "DELETING",
            "UPDATING",
            "ERROR",
            "AUTHORIZATION_REQUIRED"
          ],
          "enumDescriptions": [
            "Connection does not have a state yet.",
            "Connection is being created.",
            "Connection is running and ready for requests.",
            "Connection is stopped.",
            "Connection is being deleted.",
            "Connection is being updated.",
            "Connection is not running due to an error.",
            "Connection is not running because the authorization configuration is not complete."
          ],
          "description": "State."
        },
        "description": {
          "type": "string",
          "description": "Description."
        }
      }
    },
    "AuthConfigTemplate": {
      "description": "AuthConfigTemplate defines required field over an authentication type.",
      "type": "object",
      "id": "AuthConfigTemplate",
      "properties": {
        "description": {
          "description": "Connector specific description for an authentication template.",
          "type": "string"
        },
        "authKey": {
          "description": "Identifier key for auth config",
          "type": "string"
        },
        "displayName": {
          "description": "Display name for authentication template.",
          "type": "string"
        },
        "configVariableTemplates": {
          "description": "Config variables to describe an `AuthConfig` for a `Connection`.",
          "type": "array",
          "items": {
            "$ref": "ConfigVariableTemplate"
          }
        },
        "authType": {
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS",
            "SSH_PUBLIC_KEY",
            "OAUTH2_AUTH_CODE_FLOW"
          ],
          "type": "string",
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication",
            "SSH Public Key Authentication",
            "Oauth 2.0 Authorization Code Flow"
          ],
          "description": "The type of authentication configured."
        }
      }
    },
    "Provider": {
      "type": "object",
      "id": "Provider",
      "description": "Provider indicates the owner who provides the connectors.",
      "properties": {
        "launchStage": {
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "description": {
          "readOnly": true,
          "description": "Output only. Description of the resource.",
          "type": "string"
        },
        "documentationUri": {
          "readOnly": true,
          "description": "Output only. Link to documentation page.",
          "type": "string"
        },
        "externalUri": {
          "description": "Output only. Link to external page.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Output only. Resource name of the Provider. Format: projects/{project}/locations/{location}/providers/{provider} Only global location is supported for Provider resource.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Created time."
        },
        "webAssetsLocation": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Cloud storage location of icons etc consumed by UI."
        },
        "displayName": {
          "description": "Output only. Display name.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Updated time.",
          "format": "google-datetime"
        }
      }
    },
    "AuditLogConfig": {
      "type": "object",
      "properties": {
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig"
    },
    "Oauth2JwtBearer": {
      "properties": {
        "jwtClaims": {
          "$ref": "JwtClaims",
          "description": "JwtClaims providers fields to generate the token."
        },
        "clientKey": {
          "description": "Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*/secrets/*/versions/*`.",
          "$ref": "Secret"
        }
      },
      "description": "Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.",
      "id": "Oauth2JwtBearer",
      "type": "object"
    },
    "RoleGrant": {
      "properties": {
        "principal": {
          "enum": [
            "PRINCIPAL_UNSPECIFIED",
            "CONNECTOR_SA"
          ],
          "enumDescriptions": [
            "Value type is not specified.",
            "Service Account used for Connector workload identity This is either the default service account if unspecified or Service Account provided by Customers through BYOSA."
          ],
          "description": "Prinicipal/Identity for whom the role need to assigned.",
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of roles that need to be granted."
        },
        "helperTextTemplate": {
          "description": "Template that UI can use to provide helper text to customers.",
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the roles needs to be granted for the principal.",
          "$ref": "Resource"
        }
      },
      "id": "RoleGrant",
      "type": "object",
      "description": "This configuration defines all the Cloud IAM roles that needs to be granted to a particular Google Cloud resource for the selected principal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user."
    },
    "Expr": {
      "id": "Expr",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object"
    },
    "ResultMetadata": {
      "id": "ResultMetadata",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A brief description of the field."
        },
        "field": {
          "type": "string",
          "description": "Name of the result field."
        },
        "dataType": {
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "type": "string",
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ],
          "enumDeprecated": [
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            true,
            true,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "description": "The data type of the field."
        }
      },
      "description": "Metadata of result field."
    },
    "Secret": {
      "id": "Secret",
      "description": "Secret provides a reference to entries in Secret Manager.",
      "type": "object",
      "properties": {
        "secretVersion": {
          "type": "string",
          "description": "The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`."
        }
      }
    },
    "ConnectorInfraConfig": {
      "type": "object",
      "properties": {
        "internalclientRatelimitThreshold": {
          "type": "string",
          "description": "Max QPS supported for internal requests originating from Connd.",
          "format": "int64"
        },
        "ratelimitThreshold": {
          "format": "int64",
          "description": "Max QPS supported by the connector version before throttling of requests.",
          "type": "string"
        }
      },
      "id": "ConnectorInfraConfig",
      "description": "This cofiguration provides infra configs like rate limit threshold which need to be configurable for every connector version"
    },
    "ConfigVariableTemplate": {
      "type": "object",
      "description": "ConfigVariableTemplate provides metadata about a `ConfigVariable` that is used in a Connection.",
      "properties": {
        "roleGrant": {
          "$ref": "RoleGrant",
          "description": "Role grant configuration for the config variable."
        },
        "isAdvanced": {
          "type": "boolean",
          "description": "Indicates if current template is part of advanced settings"
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "required": {
          "description": "Flag represents that this `ConfigVariable` must be provided for a connection.",
          "type": "boolean"
        },
        "authorizationCodeLink": {
          "description": "Authorization code link options. To be populated if `ValueType` is `AUTHORIZATION_CODE`",
          "$ref": "AuthorizationCodeLink"
        },
        "validationRegex": {
          "description": "Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`.",
          "type": "string"
        },
        "requiredCondition": {
          "$ref": "LogicalExpression",
          "description": "Condition under which a field would be required. The condition can be represented in the form of a logical expression."
        },
        "state": {
          "enumDescriptions": [
            "Status is unspecified.",
            "Config variable is active",
            "Config variable is deprecated."
          ],
          "type": "string",
          "description": "State of the config variable.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DEPRECATED"
          ]
        },
        "enumOptions": {
          "items": {
            "$ref": "EnumOption"
          },
          "type": "array",
          "description": "Enum options. To be populated if `ValueType` is `ENUM`"
        },
        "valueType": {
          "description": "Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.",
          "enumDescriptions": [
            "Value type is not specified.",
            "Value type is string.",
            "Value type is integer.",
            "Value type is boolean.",
            "Value type is secret.",
            "Value type is enum.",
            "Value type is authorization code.",
            "Encryption Key."
          ],
          "type": "string",
          "enum": [
            "VALUE_TYPE_UNSPECIFIED",
            "STRING",
            "INT",
            "BOOL",
            "SECRET",
            "ENUM",
            "AUTHORIZATION_CODE",
            "ENCRYPTION_KEY"
          ]
        },
        "displayName": {
          "description": "Display name of the parameter.",
          "type": "string"
        },
        "key": {
          "description": "Key of the config variable.",
          "type": "string"
        }
      },
      "id": "ConfigVariableTemplate"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "Connector": {
      "id": "Connector",
      "description": "Connectors indicates a specific connector type, e.x. Salesforce, SAP etc.",
      "type": "object",
      "properties": {
        "launchStage": {
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Output only. Description of the resource.",
          "readOnly": true
        },
        "labels": {
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Created time.",
          "format": "google-datetime"
        },
        "documentationUri": {
          "description": "Output only. Link to documentation page.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Updated time.",
          "type": "string"
        },
        "externalUri": {
          "description": "Output only. Link to external page.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "readOnly": true,
          "description": "Output only. Display name.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the Connector. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector} Only global location is supported for Connector resource."
        },
        "eventingDetails": {
          "readOnly": true,
          "description": "Output only. Eventing details. Will be null if eventing is not supported.",
          "$ref": "EventingDetails"
        },
        "webAssetsLocation": {
          "readOnly": true,
          "description": "Output only. Cloud storage location of icons etc consumed by UI.",
          "type": "string"
        }
      }
    },
    "DestinationConfigTemplate": {
      "id": "DestinationConfigTemplate",
      "properties": {
        "max": {
          "type": "integer",
          "description": "The maximum number of destinations supported for this key.",
          "format": "int32"
        },
        "portFieldType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Whether port number should be provided by customers.",
          "enum": [
            "FIELD_TYPE_UNSPECIFIED",
            "REQUIRED",
            "OPTIONAL",
            "NOT_USED"
          ]
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "Key of the destination."
        },
        "isAdvanced": {
          "description": "Whether the current destination tempalate is part of Advanced settings",
          "type": "boolean"
        },
        "defaultPort": {
          "format": "int32",
          "description": "The default port.",
          "type": "integer"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "regexPattern": {
          "description": "Regex pattern for host.",
          "type": "string"
        },
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of destinations supported for this key."
        }
      },
      "type": "object",
      "description": "DestinationConfigTemplate defines required destinations supported by the Connector."
    },
    "RuntimeConfig": {
      "description": "RuntimeConfig is the singleton resource of each location. It includes generic resource configs consumed by control plane and runtime plane like: pub/sub topic/subscription resource name, Cloud Storage location storing schema etc.",
      "id": "RuntimeConfig",
      "properties": {
        "conndTopic": {
          "description": "Output only. Pub/Sub topic for connd to send message. E.g. projects/{project-id}/topics/{topic-id}",
          "type": "string",
          "readOnly": true
        },
        "schemaGcsBucket": {
          "type": "string",
          "description": "Output only. The Cloud Storage bucket that stores connector's schema reports.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the runtimeConfig resource. Format: projects/{project}/locations/{location}/runtimeConfig",
          "readOnly": true
        },
        "conndSubscription": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Pub/Sub subscription for connd to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}"
        },
        "locationId": {
          "readOnly": true,
          "description": "Output only. location_id of the runtime location. E.g. \"us-west1\".",
          "type": "string"
        },
        "controlPlaneSubscription": {
          "description": "Output only. Pub/Sub subscription for control plane to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}",
          "type": "string",
          "readOnly": true
        },
        "controlPlaneTopic": {
          "readOnly": true,
          "description": "Output only. Pub/Sub topic for control plne to send message. communication. E.g. projects/{project-id}/topics/{topic-id}",
          "type": "string"
        },
        "runtimeEndpoint": {
          "description": "Output only. The endpoint of the connectors runtime ingress.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "STATE_UNSPECIFIED.",
            "INACTIVE.",
            "ACTIVATING.",
            "ACTIVE.",
            "CREATING.",
            "DELETING.",
            "UPDATING."
          ],
          "enumDeprecated": [
            false,
            true,
            true,
            false,
            false,
            false,
            false
          ],
          "description": "Output only. The state of the location.",
          "enum": [
            "STATE_UNSPECIFIED",
            "INACTIVE",
            "ACTIVATING",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "UPDATING"
          ],
          "readOnly": true,
          "type": "string"
        },
        "serviceDirectory": {
          "description": "Output only. The name of the Service Directory service name.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtractionRules": {
      "type": "object",
      "description": "Extraction Rules to identity the backends from customer provided configuration in Connection resource.",
      "properties": {
        "extractionRule": {
          "items": {
            "$ref": "ExtractionRule"
          },
          "type": "array",
          "description": "Collection of Extraction Rule."
        }
      },
      "id": "ExtractionRules"
    },
    "EndPoint": {
      "id": "EndPoint",
      "description": "Endpoint message includes details of the Destination endpoint.",
      "type": "object",
      "properties": {
        "headers": {
          "items": {
            "$ref": "Header"
          },
          "description": "List of Header to be added to the Endpoint.",
          "type": "array"
        },
        "endpointUri": {
          "type": "string",
          "description": "The URI of the Endpoint."
        }
      }
    },
    "Oauth2AuthCodeFlow": {
      "id": "Oauth2AuthCodeFlow",
      "type": "object",
      "properties": {
        "redirectUri": {
          "description": "Redirect URI to be provided during the auth code exchange.",
          "type": "string"
        },
        "clientId": {
          "type": "string",
          "description": "Client ID for user-provided OAuth app."
        },
        "authCode": {
          "description": "Authorization code to be exchanged for access and refresh tokens.",
          "type": "string"
        },
        "authUri": {
          "description": "Auth URL for Authorization Code Flow",
          "type": "string"
        },
        "pkceVerifier": {
          "type": "string",
          "description": "PKCE verifier to be used during the auth code exchange."
        },
        "enablePkce": {
          "type": "boolean",
          "description": "Whether to enable PKCE when the user performs the auth code flow."
        },
        "scopes": {
          "description": "Scopes the connection will request when the user performs the auth code flow.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clientSecret": {
          "$ref": "Secret",
          "description": "Client secret for user-provided OAuth app."
        }
      },
      "description": "Parameters to support Oauth 2.0 Auth Code Grant Authentication. See https://www.rfc-editor.org/rfc/rfc6749#section-1.3.1 for more details."
    },
    "EventType": {
      "properties": {
        "idPath": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Id path denotes the path of id in webhook payload."
        },
        "createTime": {
          "description": "Output only. Created time.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "eventTypeId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Event type id. Example: `ticket.created`."
        },
        "entityType": {
          "description": "Output only. Runtime entity type name. Will be null if entity type map is not available. Used for read before send feature.",
          "type": "string",
          "readOnly": true
        },
        "eventPayloadSchema": {
          "readOnly": true,
          "description": "Output only. Schema of webhook event payload.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of the eventtype. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}/eventtypes/{eventtype} Only global location is supported for Connector resource.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Updated time.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "enrichedEventPayloadSchema": {
          "description": "Output only. Schema of the event payload after enriched. Will be null if read before send is not supported.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "EventType",
      "description": "EventType includes fields.",
      "type": "object"
    },
    "Destination": {
      "id": "Destination",
      "type": "object",
      "properties": {
        "port": {
          "description": "The port is the target port number that is accepted by the destination.",
          "format": "int32",
          "type": "integer"
        },
        "serviceAttachment": {
          "description": "PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*",
          "type": "string"
        },
        "host": {
          "description": "For publicly routable host.",
          "type": "string"
        }
      }
    },
    "ManagedZone": {
      "id": "ManagedZone",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}",
          "type": "string"
        },
        "dns": {
          "description": "Required. DNS Name of the resource",
          "type": "string"
        },
        "targetProject": {
          "type": "string",
          "description": "Required. The name of the Target Project"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "description": {
          "description": "Optional. Description of the resource.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Created time."
        },
        "targetVpc": {
          "type": "string",
          "description": "Required. The name of the Target Project VPC Network"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Updated time.",
          "type": "string"
        }
      },
      "description": "represents the Connector's Managed Zone resource"
    },
    "ConnectorVersionInfraConfig": {
      "type": "object",
      "id": "ConnectorVersionInfraConfig",
      "description": "This cofiguration provides infra configs like rate limit threshold which need to be configurable for every connector version",
      "properties": {
        "internalclientRatelimitThreshold": {
          "description": "Output only. Max QPS supported for internal requests originating from Connd.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "ratelimitThreshold": {
          "description": "Output only. Max QPS supported by the connector version before throttling of requests.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        }
      }
    },
    "ExtractionRule": {
      "type": "object",
      "id": "ExtractionRule",
      "properties": {
        "extractionRegex": {
          "description": "Regex used to extract backend details from source. If empty, whole source value will be used.",
          "type": "string"
        },
        "source": {
          "$ref": "Source",
          "description": "Source on which the rule is applied."
        }
      },
      "description": "Extraction Rule."
    },
    "ConnectorsLogConfig": {
      "properties": {
        "enabled": {
          "description": "Enabled represents whether logging is enabled or not for a connection.",
          "type": "boolean"
        }
      },
      "description": "Log configuration for the connection.",
      "id": "ConnectorsLogConfig",
      "type": "object"
    }
  },
  "version_module": true,
  "baseUrl": "https://connectors.googleapis.com/",
  "discoveryVersion": "v1"
}

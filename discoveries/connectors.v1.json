{
  "version_module": true,
  "title": "Connectors API",
  "id": "connectors:v1",
  "canonicalName": "Connectors",
  "rootUrl": "https://connectors.googleapis.com/",
  "documentationLink": "https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors",
  "schemas": {
    "AuditLogConfig": {
      "type": "object",
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array"
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      }
    },
    "ListConnectorsResponse": {
      "description": "Response message for Connectors.ListConnectors.",
      "properties": {
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "Connector"
          },
          "description": "A list of connectors."
        }
      },
      "type": "object",
      "id": "ListConnectorsResponse"
    },
    "JwtClaims": {
      "type": "object",
      "description": "JWT claims used for the jwt-bearer authorization grant.",
      "id": "JwtClaims",
      "properties": {
        "subject": {
          "description": "Value for the \"sub\" claim.",
          "type": "string"
        },
        "issuer": {
          "type": "string",
          "description": "Value for the \"iss\" claim."
        },
        "audience": {
          "description": "Value for the \"aud\" claim.",
          "type": "string"
        }
      }
    },
    "ListProvidersResponse": {
      "id": "ListProvidersResponse",
      "description": "Response message for Connectors.ListProviders.",
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "description": "A list of providers.",
          "items": {
            "$ref": "Provider"
          }
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        }
      }
    },
    "ResultMetadata": {
      "id": "ResultMetadata",
      "type": "object",
      "properties": {
        "field": {
          "description": "Name of the result field.",
          "type": "string"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ],
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "description": "The data type of the field."
        },
        "description": {
          "type": "string",
          "description": "A brief description of the field."
        }
      },
      "description": "Metadata of result field."
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "RuntimeActionSchema": {
      "description": "Schema of a runtime action.",
      "type": "object",
      "properties": {
        "resultMetadata": {
          "readOnly": true,
          "items": {
            "$ref": "ResultMetadata"
          },
          "description": "Output only. List of result field metadata.",
          "type": "array"
        },
        "action": {
          "type": "string",
          "description": "Output only. Name of the action.",
          "readOnly": true
        },
        "inputParameters": {
          "readOnly": true,
          "items": {
            "$ref": "InputParameter"
          },
          "type": "array",
          "description": "Output only. List of input parameter metadata for the action."
        }
      },
      "id": "RuntimeActionSchema"
    },
    "Connector": {
      "description": "Connectors indicates a specific connector type, e.x. Salesforce, SAP etc.",
      "properties": {
        "externalUri": {
          "type": "string",
          "description": "Output only. Link to external page.",
          "readOnly": true
        },
        "displayName": {
          "description": "Output only. Display name.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "launchStage": {
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "readOnly": true,
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "type": "string"
        },
        "documentationUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Link to documentation page."
        },
        "description": {
          "description": "Output only. Description of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Created time.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Updated time."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the Connector. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector} Only global location is supported for Connector resource."
        },
        "webAssetsLocation": {
          "description": "Output only. Cloud storage location of icons etc consumed by UI.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "Connector",
      "type": "object"
    },
    "Status": {
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "RuntimeEntitySchema": {
      "id": "RuntimeEntitySchema",
      "description": "Schema of a runtime entity.",
      "properties": {
        "fields": {
          "items": {
            "$ref": "Field"
          },
          "description": "Output only. List of fields in the entity.",
          "readOnly": true,
          "type": "array"
        },
        "entity": {
          "description": "Output only. Name of the entity.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "Source": {
      "properties": {
        "fieldId": {
          "type": "string",
          "description": "Field identifier. For example config vaiable name."
        },
        "sourceType": {
          "enumDescriptions": [
            "Default SOURCE.",
            "Config Variable source type."
          ],
          "type": "string",
          "description": "Type of the source.",
          "enum": [
            "SOURCE_TYPE_UNSPECIFIED",
            "CONFIG_VARIABLE"
          ]
        }
      },
      "type": "object",
      "id": "Source",
      "description": "Source to extract the backend from."
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "AuthConfigTemplate": {
      "description": "AuthConfigTemplate defines required field over an authentication type.",
      "id": "AuthConfigTemplate",
      "properties": {
        "description": {
          "description": "Connector specific description for an authentication template.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name for authentication template.",
          "type": "string"
        },
        "configVariableTemplates": {
          "type": "array",
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "description": "Config variables to describe an `AuthConfig` for a `Connection`."
        },
        "authKey": {
          "description": "Identifier key for auth config",
          "type": "string"
        },
        "authType": {
          "description": "The type of authentication configured.",
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS",
            "SSH_PUBLIC_KEY",
            "OAUTH2_AUTH_CODE_FLOW"
          ],
          "type": "string",
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication",
            "SSH Public Key Authentication",
            "Oauth 2.0 Authorization Code Flow"
          ]
        }
      },
      "type": "object"
    },
    "SslConfig": {
      "properties": {
        "privateServerCertificate": {
          "$ref": "Secret",
          "description": "Private Server Certificate. Needs to be specified if trust model is `PRIVATE`."
        },
        "clientCertType": {
          "description": "Type of Client Cert (PEM/JKS/.. etc.)",
          "enumDescriptions": [
            "Cert type unspecified.",
            "Privacy Enhanced Mail (PEM) Type"
          ],
          "enum": [
            "CERT_TYPE_UNSPECIFIED",
            "PEM"
          ],
          "type": "string"
        },
        "additionalVariables": {
          "description": "Additional SSL related field values",
          "type": "array",
          "items": {
            "$ref": "ConfigVariable"
          }
        },
        "serverCertType": {
          "enum": [
            "CERT_TYPE_UNSPECIFIED",
            "PEM"
          ],
          "description": "Type of Server Cert (PEM/JKS/.. etc.)",
          "type": "string",
          "enumDescriptions": [
            "Cert type unspecified.",
            "Privacy Enhanced Mail (PEM) Type"
          ]
        },
        "clientCertificate": {
          "description": "Client Certificate",
          "$ref": "Secret"
        },
        "clientPrivateKey": {
          "description": "Client Private Key",
          "$ref": "Secret"
        },
        "useSsl": {
          "description": "Bool for enabling SSL",
          "type": "boolean"
        },
        "trustModel": {
          "type": "string",
          "enumDescriptions": [
            "Public Trust Model. Takes the Default Java trust store.",
            "Private Trust Model. Takes custom/private trust store.",
            "Insecure Trust Model. Accept all certificates."
          ],
          "enum": [
            "PUBLIC",
            "PRIVATE",
            "INSECURE"
          ],
          "description": "Trust Model of the SSL connection"
        },
        "clientPrivateKeyPass": {
          "$ref": "Secret",
          "description": "Secret containing the passphrase protecting the Client Private Key"
        },
        "type": {
          "type": "string",
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "TLS",
            "MTLS"
          ],
          "description": "Controls the ssl type for the given connector version.",
          "enumDescriptions": [
            "No SSL configuration required.",
            "TLS Handshake",
            "mutual TLS (MTLS) Handshake"
          ]
        }
      },
      "description": "SSL Configuration of a connection",
      "type": "object",
      "id": "SslConfig"
    },
    "Secret": {
      "type": "object",
      "description": "Secret provides a reference to entries in Secret Manager.",
      "properties": {
        "secretVersion": {
          "description": "The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`.",
          "type": "string"
        }
      },
      "id": "Secret"
    },
    "ConfigVariable": {
      "description": "ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.",
      "properties": {
        "encryptionKeyValue": {
          "$ref": "EncryptionKey",
          "description": "Value is a Encryption Key."
        },
        "intValue": {
          "format": "int64",
          "description": "Value is an integer",
          "type": "string"
        },
        "stringValue": {
          "type": "string",
          "description": "Value is a string."
        },
        "key": {
          "type": "string",
          "description": "Key of the config variable."
        },
        "secretValue": {
          "description": "Value is a secret.",
          "$ref": "Secret"
        },
        "boolValue": {
          "type": "boolean",
          "description": "Value is a bool."
        }
      },
      "type": "object",
      "id": "ConfigVariable"
    },
    "DestinationConfigTemplate": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "key": {
          "type": "string",
          "description": "Key of the destination."
        },
        "max": {
          "description": "The maximum number of destinations supported for this key.",
          "type": "integer",
          "format": "int32"
        },
        "regexPattern": {
          "type": "string",
          "description": "Regex pattern for host."
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32",
          "description": "The default port."
        },
        "isAdvanced": {
          "description": "Whether the current destination tempalate is part of Advanced settings",
          "type": "boolean"
        },
        "portFieldType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Whether port number should be provided by customers.",
          "enum": [
            "FIELD_TYPE_UNSPECIFIED",
            "REQUIRED",
            "OPTIONAL",
            "NOT_USED"
          ]
        },
        "min": {
          "type": "integer",
          "description": "The minimum number of destinations supported for this key.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "DestinationConfigTemplate",
      "description": "DestinationConfigTemplate defines required destinations supported by the Connector."
    },
    "Oauth2JwtBearer": {
      "type": "object",
      "properties": {
        "jwtClaims": {
          "$ref": "JwtClaims",
          "description": "JwtClaims providers fields to generate the token."
        },
        "clientKey": {
          "$ref": "Secret",
          "description": "Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*/secrets/*/versions/*`."
        }
      },
      "id": "Oauth2JwtBearer",
      "description": "Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details."
    },
    "DestinationConfig": {
      "properties": {
        "destinations": {
          "type": "array",
          "description": "The destinations for the key.",
          "items": {
            "$ref": "Destination"
          }
        },
        "key": {
          "type": "string",
          "description": "The key is the destination identifier that is supported by the Connector."
        }
      },
      "type": "object",
      "description": "Define the Connectors target endpoint.",
      "id": "DestinationConfig"
    },
    "RoleGrant": {
      "id": "RoleGrant",
      "description": "This configuration defines all the Cloud IAM roles that needs to be granted to a particular GCP resource for the selected principal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.",
      "type": "object",
      "properties": {
        "principal": {
          "enumDescriptions": [
            "Value type is not specified.",
            "Service Account used for Connector workload identity This is either the default service account if unspecified or Service Account provided by Customers through BYOSA."
          ],
          "description": "Prinicipal/Identity for whom the role need to assigned.",
          "enum": [
            "PRINCIPAL_UNSPECIFIED",
            "CONNECTOR_SA"
          ],
          "type": "string"
        },
        "helperTextTemplate": {
          "description": "Template that UI can use to provide helper text to customers.",
          "type": "string"
        },
        "resource": {
          "$ref": "Resource",
          "description": "Resource on which the roles needs to be granted for the principal."
        },
        "roles": {
          "type": "array",
          "description": "List of roles that need to be granted.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListManagedZonesResponse": {
      "id": "ListManagedZonesResponse",
      "type": "object",
      "description": "Response message for ConnectorsService.ListManagedZones",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "managedZones": {
          "description": "ManagedZones.",
          "items": {
            "$ref": "ManagedZone"
          },
          "type": "array"
        }
      }
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      }
    },
    "EndpointAttachment": {
      "type": "object",
      "description": "represents the Connector's Endpoint Attachment resource",
      "id": "EndpointAttachment",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the resource."
        },
        "labels": {
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Created time."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Updated time.",
          "readOnly": true
        },
        "serviceAttachment": {
          "type": "string",
          "description": "Required. The path of the service attachment"
        },
        "endpointIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Private Service Connect connection endpoint ip"
        },
        "name": {
          "description": "Output only. Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsResponse"
    },
    "Provider": {
      "description": "Provider indicates the owner who provides the connectors.",
      "type": "object",
      "properties": {
        "labels": {
          "readOnly": true,
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Updated time.",
          "type": "string"
        },
        "launchStage": {
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "type": "string",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "readOnly": true,
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ]
        },
        "description": {
          "type": "string",
          "description": "Output only. Description of the resource.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Created time.",
          "type": "string",
          "readOnly": true
        },
        "webAssetsLocation": {
          "description": "Output only. Cloud storage location of icons etc consumed by UI.",
          "readOnly": true,
          "type": "string"
        },
        "documentationUri": {
          "readOnly": true,
          "description": "Output only. Link to documentation page.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the Provider. Format: projects/{project}/locations/{location}/providers/{provider} Only global location is supported for Provider resource.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Output only. Display name.",
          "readOnly": true,
          "type": "string"
        },
        "externalUri": {
          "type": "string",
          "description": "Output only. Link to external page.",
          "readOnly": true
        }
      },
      "id": "Provider"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "ListEndpointAttachmentsResponse": {
      "description": "Response message for ConnectorsService.ListEndpointAttachments",
      "type": "object",
      "id": "ListEndpointAttachmentsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endpointAttachments": {
          "type": "array",
          "items": {
            "$ref": "EndpointAttachment"
          },
          "description": "EndpointAttachments."
        }
      }
    },
    "AuthorizationCodeLink": {
      "id": "AuthorizationCodeLink",
      "description": "This configuration captures the details required to render an authorization link for the OAuth Authorization Code Flow.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The client ID assigned to the GCP Connectors OAuth app for the connector data source.",
          "type": "string"
        },
        "enablePkce": {
          "description": "Whether to enable PKCE for the auth code flow.",
          "type": "boolean"
        },
        "scopes": {
          "items": {
            "type": "string"
          },
          "description": "The scopes for which the user will authorize GCP Connectors on the connector data source.",
          "type": "array"
        },
        "uri": {
          "description": "The base URI the user must click to trigger the authorization code login flow.",
          "type": "string"
        }
      }
    },
    "FieldComparison": {
      "description": "Field that needs to be compared.",
      "id": "FieldComparison",
      "type": "object",
      "properties": {
        "intValue": {
          "description": "Integer value",
          "type": "string",
          "format": "int64"
        },
        "comparator": {
          "description": "Comparator to use for comparing the field value.",
          "enumDescriptions": [
            "The default value.",
            "The field value must be equal to the specified value.",
            "The field value must not be equal to the specified value."
          ],
          "type": "string",
          "enum": [
            "COMPARATOR_UNSPECIFIED",
            "EQUALS",
            "NOT_EQUALS"
          ]
        },
        "boolValue": {
          "description": "Boolean value",
          "type": "boolean"
        },
        "stringValue": {
          "type": "string",
          "description": "String value"
        },
        "key": {
          "type": "string",
          "description": "Key of the field."
        }
      }
    },
    "SupportedRuntimeFeatures": {
      "properties": {
        "entityApis": {
          "type": "boolean",
          "description": "Specifies if the connector supports entity apis like 'createEntity'."
        },
        "actionApis": {
          "description": "Specifies if the connector supports action apis like 'executeAction'.",
          "type": "boolean"
        },
        "sqlQuery": {
          "type": "boolean",
          "description": "Specifies if the connector supports 'ExecuteSqlQuery' operation."
        }
      },
      "type": "object",
      "id": "SupportedRuntimeFeatures",
      "description": "Supported runtime features of a connector version. This is passed to the management layer to add a new connector version by the connector developer. Details about how this proto is passed to the management layer is covered in this doc - go/runtime-manifest."
    },
    "NodeConfig": {
      "properties": {
        "minNodeCount": {
          "type": "integer",
          "description": "Minimum number of nodes in the runtime nodes.",
          "format": "int32"
        },
        "maxNodeCount": {
          "type": "integer",
          "description": "Maximum number of nodes in the runtime nodes.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Node configuration for the connection.",
      "id": "NodeConfig"
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      }
    },
    "ConnectorsLogConfig": {
      "id": "ConnectorsLogConfig",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enabled represents whether logging is enabled or not for a connection.",
          "type": "boolean"
        }
      },
      "description": "Log configuration for the connection."
    },
    "Resource": {
      "type": "object",
      "id": "Resource",
      "properties": {
        "pathTemplate": {
          "type": "string",
          "description": "Template to uniquely represent a GCP resource in a format IAM expects This is a template that can have references to other values provided in the config variable template."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "GCP_PROJECT",
            "GCP_RESOURCE",
            "GCP_SECRETMANAGER_SECRET",
            "GCP_SECRETMANAGER_SECRET_VERSION"
          ],
          "type": "string",
          "description": "Different types of resource supported.",
          "enumDescriptions": [
            "Value type is not specified.",
            "GCP Project Resource.",
            "Any GCP Resource which is identified uniquely by IAM.",
            "GCP Secret Resource.",
            "GCP Secret Version Resource."
          ]
        }
      },
      "description": "Resource definition"
    },
    "ConfigVariableTemplate": {
      "type": "object",
      "properties": {
        "valueType": {
          "enum": [
            "VALUE_TYPE_UNSPECIFIED",
            "STRING",
            "INT",
            "BOOL",
            "SECRET",
            "ENUM",
            "AUTHORIZATION_CODE",
            "ENCRYPTION_KEY"
          ],
          "description": "Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation.",
          "type": "string",
          "enumDescriptions": [
            "Value type is not specified.",
            "Value type is string.",
            "Value type is integer.",
            "Value type is boolean.",
            "Value type is secret.",
            "Value type is enum.",
            "Value type is authorization code.",
            "Encryption Key."
          ]
        },
        "authorizationCodeLink": {
          "$ref": "AuthorizationCodeLink",
          "description": "Authorization code link options. To be populated if `ValueType` is `AUTHORIZATION_CODE`"
        },
        "isAdvanced": {
          "description": "Indicates if current template is part of advanced settings",
          "type": "boolean"
        },
        "roleGrant": {
          "description": "Role grant configuration for the config variable.",
          "$ref": "RoleGrant"
        },
        "state": {
          "description": "State of the config variable.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DEPRECATED"
          ],
          "enumDescriptions": [
            "Status is unspecified.",
            "Config variable is active",
            "Config variable is deprecated."
          ],
          "type": "string"
        },
        "requiredCondition": {
          "$ref": "LogicalExpression",
          "description": "Condition under which a field would be required. The condition can be represented in the form of a logical expression."
        },
        "key": {
          "type": "string",
          "description": "Key of the config variable."
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "required": {
          "type": "boolean",
          "description": "Flag represents that this `ConfigVariable` must be provided for a connection."
        },
        "validationRegex": {
          "type": "string",
          "description": "Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`."
        },
        "enumOptions": {
          "type": "array",
          "items": {
            "$ref": "EnumOption"
          },
          "description": "Enum options. To be populated if `ValueType` is `ENUM`"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the parameter."
        }
      },
      "id": "ConfigVariableTemplate",
      "description": "ConfigVariableTemplate provides metadata about a `ConfigVariable` that is used in a Connection."
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "id": "SetIamPolicyRequest",
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      }
    },
    "UserPassword": {
      "type": "object",
      "description": "Parameters to support Username and Password Authentication.",
      "id": "UserPassword",
      "properties": {
        "password": {
          "$ref": "Secret",
          "description": "Secret version reference containing the password."
        },
        "username": {
          "description": "Username.",
          "type": "string"
        }
      }
    },
    "EgressControlConfig": {
      "properties": {
        "backends": {
          "description": "Static Comma separated backends which are common for all Connection resources. Supported formats for each backend are host:port or just host (host can be ip address or domain name).",
          "type": "string"
        },
        "extractionRules": {
          "description": "Extractions Rules to extract the backends from customer provided configuration.",
          "$ref": "ExtractionRules"
        }
      },
      "description": "Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource.",
      "id": "EgressControlConfig",
      "type": "object"
    },
    "Oauth2ClientCredentials": {
      "type": "object",
      "description": "Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client identifier."
        },
        "clientSecret": {
          "description": "Secret version reference containing the client secret.",
          "$ref": "Secret"
        }
      },
      "id": "Oauth2ClientCredentials"
    },
    "EncryptionKey": {
      "type": "object",
      "description": "Encryption Key value.",
      "id": "EncryptionKey",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Value type is not specified.",
            "Google Managed.",
            "Customer Managed."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "GOOGLE_MANAGED",
            "CUSTOMER_MANAGED"
          ],
          "description": "Type.",
          "type": "string"
        },
        "kmsKeyName": {
          "description": "The [KMS key name] with which the content of the Operation is encrypted. The expected format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`. Will be empty string if google managed.",
          "type": "string"
        }
      }
    },
    "Settings": {
      "description": "Global Settings details.",
      "properties": {
        "tenantProjectId": {
          "readOnly": true,
          "description": "Output only. Tenant project id of the consumer project.",
          "type": "string"
        },
        "payg": {
          "type": "boolean",
          "description": "Output only. Flag indicates if user is in PayG model",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}"
        },
        "vpcsc": {
          "type": "boolean",
          "description": "Optional. Flag indicates whether vpc-sc is enabled."
        }
      },
      "type": "object",
      "id": "Settings"
    },
    "LockConfig": {
      "id": "LockConfig",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Describes why a connection is locked."
        },
        "locked": {
          "type": "boolean",
          "description": "Indicates whether or not the connection is locked."
        }
      },
      "type": "object",
      "description": "Determines whether or no a connection is locked. If locked, a reason must be specified."
    },
    "ListConnectorVersionsResponse": {
      "id": "ListConnectorVersionsResponse",
      "description": "Response message for Connectors.ListConnectorVersions.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "connectorVersions": {
          "items": {
            "$ref": "ConnectorVersion"
          },
          "description": "A list of connector versions.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        }
      },
      "type": "object"
    },
    "AuthConfig": {
      "properties": {
        "userPassword": {
          "description": "UserPassword.",
          "$ref": "UserPassword"
        },
        "sshPublicKey": {
          "$ref": "SshPublicKey",
          "description": "SSH Public Key."
        },
        "oauth2JwtBearer": {
          "description": "Oauth2JwtBearer.",
          "$ref": "Oauth2JwtBearer"
        },
        "authType": {
          "type": "string",
          "description": "The type of authentication configured.",
          "enum": [
            "AUTH_TYPE_UNSPECIFIED",
            "USER_PASSWORD",
            "OAUTH2_JWT_BEARER",
            "OAUTH2_CLIENT_CREDENTIALS",
            "SSH_PUBLIC_KEY",
            "OAUTH2_AUTH_CODE_FLOW"
          ],
          "enumDescriptions": [
            "Authentication type not specified.",
            "Username and Password Authentication.",
            "JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication",
            "Oauth 2.0 Client Credentials Grant Authentication",
            "SSH Public Key Authentication",
            "Oauth 2.0 Authorization Code Flow"
          ]
        },
        "oauth2AuthCodeFlow": {
          "description": "Oauth2AuthCodeFlow.",
          "$ref": "Oauth2AuthCodeFlow"
        },
        "additionalVariables": {
          "type": "array",
          "description": "List containing additional auth configs.",
          "items": {
            "$ref": "ConfigVariable"
          }
        },
        "authKey": {
          "description": "Identifier key for auth config",
          "type": "string"
        },
        "oauth2ClientCredentials": {
          "description": "Oauth2ClientCredentials.",
          "$ref": "Oauth2ClientCredentials"
        }
      },
      "description": "AuthConfig defines details of a authentication type.",
      "type": "object",
      "id": "AuthConfig"
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "Location",
      "type": "object"
    },
    "EnumOption": {
      "type": "object",
      "id": "EnumOption",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the option."
        },
        "id": {
          "description": "Id of the option.",
          "type": "string"
        }
      },
      "description": "EnumOption definition"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        }
      }
    },
    "RuntimeConfig": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "STATE_UNSPECIFIED.",
            "INACTIVE.",
            "ACTIVATING.",
            "ACTIVE.",
            "CREATING.",
            "DELETING.",
            "UPDATING."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "INACTIVE",
            "ACTIVATING",
            "ACTIVE",
            "CREATING",
            "DELETING",
            "UPDATING"
          ],
          "description": "Output only. The state of the location."
        },
        "conndTopic": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Pub/Sub topic for connd to send message. E.g. projects/{project-id}/topics/{topic-id}"
        },
        "serviceDirectory": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the Service Directory service name."
        },
        "controlPlaneTopic": {
          "description": "Output only. Pub/Sub topic for control plne to send message. communication. E.g. projects/{project-id}/topics/{topic-id}",
          "type": "string",
          "readOnly": true
        },
        "runtimeEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The endpoint of the connectors runtime ingress."
        },
        "conndSubscription": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Pub/Sub subscription for connd to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}"
        },
        "controlPlaneSubscription": {
          "description": "Output only. Pub/Sub subscription for control plane to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}",
          "type": "string",
          "readOnly": true
        },
        "schemaGcsBucket": {
          "readOnly": true,
          "description": "Output only. The Cloud Storage bucket that stores connector's schema reports.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Name of the runtimeConfig resource. Format: projects/{project}/locations/{location}/runtimeConfig",
          "readOnly": true,
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "Output only. location_id of the runtime location. E.g. \"us-west1\".",
          "readOnly": true
        }
      },
      "description": "RuntimeConfig is the singleton resource of each location. It includes generic resource configs consumed by control plane and runtime plane like: pub/sub topic/subscription resource name, Cloud Storage location storing schema etc.",
      "type": "object",
      "id": "RuntimeConfig"
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      }
    },
    "ListRuntimeActionSchemasResponse": {
      "type": "object",
      "description": "Response message for ConnectorsService.ListRuntimeActionSchemas.",
      "properties": {
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        },
        "runtimeActionSchemas": {
          "description": "Runtime action schemas.",
          "type": "array",
          "items": {
            "$ref": "RuntimeActionSchema"
          }
        }
      },
      "id": "ListRuntimeActionSchemasResponse"
    },
    "Field": {
      "description": "Metadata of an entity field.",
      "type": "object",
      "id": "Field",
      "properties": {
        "readonly": {
          "type": "boolean",
          "description": "Specifies if the Field is readonly."
        },
        "field": {
          "description": "Name of the Field.",
          "type": "string"
        },
        "description": {
          "description": "A brief description of the Field.",
          "type": "string"
        },
        "key": {
          "type": "boolean",
          "description": "The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity."
        },
        "defaultValue": {
          "type": "any",
          "description": "The following field specifies the default value of the Field provided by the external system if a value is not provided."
        },
        "nullable": {
          "description": "Specifies whether a null value is allowed.",
          "type": "boolean"
        },
        "additionalDetails": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields."
        },
        "dataType": {
          "description": "The data type of the Field.",
          "type": "string",
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ]
        }
      }
    },
    "SshPublicKey": {
      "id": "SshPublicKey",
      "properties": {
        "sshClientCertPass": {
          "description": "Password (passphrase) for ssh client certificate if it has one.",
          "$ref": "Secret"
        },
        "sshClientCert": {
          "$ref": "Secret",
          "description": "SSH Client Cert. It should contain both public and private key."
        },
        "username": {
          "description": "The user account used to authenticate.",
          "type": "string"
        },
        "certType": {
          "description": "Format of SSH Client cert.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Parameters to support Ssh public key Authentication."
    },
    "RefreshConnectionSchemaMetadataRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for ConnectorsService.RefreshConnectionSchemaMetadata.",
      "id": "RefreshConnectionSchemaMetadataRequest"
    },
    "ConnectorVersion": {
      "id": "ConnectorVersion",
      "description": "ConnectorVersion indicates a specific version of a connector.",
      "properties": {
        "displayName": {
          "description": "Output only. Display name.",
          "type": "string",
          "readOnly": true
        },
        "configVariableTemplates": {
          "type": "array",
          "description": "Output only. List of config variables needed to create a connection.",
          "readOnly": true,
          "items": {
            "$ref": "ConfigVariableTemplate"
          }
        },
        "roleGrants": {
          "items": {
            "$ref": "RoleGrant"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Role grant configurations for this connector version."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version} Only global location is supported for Connector resource."
        },
        "supportedRuntimeFeatures": {
          "$ref": "SupportedRuntimeFeatures",
          "readOnly": true,
          "description": "Output only. Information about the runtime features supported by the Connector."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Created time.",
          "format": "google-datetime",
          "type": "string"
        },
        "releaseVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. ReleaseVersion of the connector, for example: \"1.0.1-alpha\"."
        },
        "sslConfigTemplate": {
          "description": "Output only. Ssl configuration supported by the Connector.",
          "$ref": "SslConfigTemplate",
          "readOnly": true
        },
        "destinationConfigTemplates": {
          "description": "Output only. List of destination configs needed to create a connection.",
          "items": {
            "$ref": "DestinationConfigTemplate"
          },
          "readOnly": true,
          "type": "array"
        },
        "authConfigTemplates": {
          "items": {
            "$ref": "AuthConfigTemplate"
          },
          "description": "Output only. List of auth configs supported by the Connector Version.",
          "type": "array",
          "readOnly": true
        },
        "roleGrant": {
          "description": "Output only. Role grant configuration for this config variable. It will be DEPRECATED soon.",
          "readOnly": true,
          "$ref": "RoleGrant"
        },
        "launchStage": {
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "type": "string",
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "readOnly": true,
          "description": "Output only. Flag to mark the version indicating the launch stage."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Updated time."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true,
          "type": "object",
          "description": "Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "egressControlConfig": {
          "$ref": "EgressControlConfig",
          "readOnly": true,
          "description": "Output only. Configuration for Egress Control."
        }
      },
      "type": "object"
    },
    "ExtractionRules": {
      "description": "Extraction Rules to identity the backends from customer provided configuration in Connection resource.",
      "type": "object",
      "id": "ExtractionRules",
      "properties": {
        "extractionRule": {
          "description": "Collection of Extraction Rule.",
          "type": "array",
          "items": {
            "$ref": "ExtractionRule"
          }
        }
      }
    },
    "ConnectionStatus": {
      "id": "ConnectionStatus",
      "description": "ConnectionStatus indicates the state of the connection.",
      "properties": {
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "status": {
          "description": "Status provides detailed information for the state.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Connection does not have a state yet.",
            "Connection is being created.",
            "Connection is running and ready for requests.",
            "Connection is stopped.",
            "Connection is being deleted.",
            "Connection is being updated.",
            "Connection is not running due to an error.",
            "Connection is not running because the authorization configuration is not complete."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "INACTIVE",
            "DELETING",
            "UPDATING",
            "ERROR",
            "AUTHORIZATION_REQUIRED"
          ],
          "description": "State."
        }
      },
      "type": "object"
    },
    "Destination": {
      "type": "object",
      "id": "Destination",
      "properties": {
        "host": {
          "type": "string",
          "description": "For publicly routable host."
        },
        "serviceAttachment": {
          "type": "string",
          "description": "PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*"
        },
        "port": {
          "description": "The port is the target port number that is accepted by the destination.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Oauth2AuthCodeFlow": {
      "description": "Parameters to support Oauth 2.0 Auth Code Grant Authentication. See https://www.rfc-editor.org/rfc/rfc6749#section-1.3.1 for more details.",
      "type": "object",
      "id": "Oauth2AuthCodeFlow",
      "properties": {
        "clientSecret": {
          "$ref": "Secret",
          "description": "Client secret for user-provided OAuth app."
        },
        "authUri": {
          "description": "Auth URL for Authorization Code Flow",
          "type": "string"
        },
        "pkceVerifier": {
          "description": "PKCE verifier to be used during the auth code exchange.",
          "type": "string"
        },
        "redirectUri": {
          "description": "Redirect URI to be provided during the auth code exchange.",
          "type": "string"
        },
        "authCode": {
          "type": "string",
          "description": "Authorization code to be exchanged for access and refresh tokens."
        },
        "clientId": {
          "type": "string",
          "description": "Client ID for user-provided OAuth app."
        },
        "enablePkce": {
          "type": "boolean",
          "description": "Whether to enable PKCE when the user performs the auth code flow."
        },
        "scopes": {
          "type": "array",
          "description": "Scopes the connection will request when the user performs the auth code flow.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object"
    },
    "LogicalExpression": {
      "type": "object",
      "id": "LogicalExpression",
      "properties": {
        "fieldComparisons": {
          "description": "A list of fields to be compared.",
          "items": {
            "$ref": "FieldComparison"
          },
          "type": "array"
        },
        "logicalExpressions": {
          "items": {
            "$ref": "LogicalExpression"
          },
          "description": "A list of nested conditions to be compared.",
          "type": "array"
        },
        "logicalOperator": {
          "enum": [
            "OPERATOR_UNSPECIFIED",
            "AND",
            "OR"
          ],
          "description": "The logical operator to use between the fields and conditions.",
          "enumDescriptions": [
            "The default value.",
            "AND operator; The conditions must all be true.",
            "OR operator; At least one of the conditions must be true."
          ],
          "type": "string"
        }
      },
      "description": "Struct for representing boolean expressions."
    },
    "Expr": {
      "id": "Expr",
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      }
    },
    "ListConnectionsResponse": {
      "description": "Response message for ConnectorsService.ListConnections",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Next page token."
        },
        "connections": {
          "type": "array",
          "description": "Connections.",
          "items": {
            "$ref": "Connection"
          }
        }
      },
      "id": "ListConnectionsResponse",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "ManagedZone": {
      "description": "represents the Connector's Managed Zone resource",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Updated time.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Optional. Description of the resource.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "dns": {
          "type": "string",
          "description": "Required. DNS Name of the resource"
        },
        "targetProject": {
          "description": "Required. The name of the Target Project",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. Created time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "targetVpc": {
          "type": "string",
          "description": "Required. The name of the Target Project VPC Network"
        }
      },
      "id": "ManagedZone",
      "type": "object"
    },
    "InputParameter": {
      "id": "InputParameter",
      "properties": {
        "parameter": {
          "type": "string",
          "description": "Name of the Parameter."
        },
        "dataType": {
          "type": "string",
          "enumDescriptions": [
            "Data type is not specified.",
            "DEPRECATED! Use DATA_TYPE_INTEGER.",
            "Short integer(int16) data type.",
            "Double data type.",
            "Date data type.",
            "DEPRECATED! Use DATA_TYPE_TIMESTAMP.",
            "Time data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "DEPRECATED! Use DATA_TYPE_BIGINT.",
            "Boolean data type.",
            "Decimal data type.",
            "DEPRECATED! Use DATA_TYPE_VARCHAR.",
            "UNSUPPORTED! Binary data type.",
            "Bit data type.",
            "Small integer(int8) data type.",
            "Integer(int32) data type.",
            "Long integer(int64) data type.",
            "Float data type.",
            "Real data type.",
            "Numeric data type.",
            "Char data type.",
            "Varchar data type.",
            "Longvarchar data type.",
            "Timestamp data type.",
            "Nchar data type.",
            "Nvarchar data type.",
            "Longnvarchar data type.",
            "Null data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Row id data type.",
            "UNSUPPORTED! Binary data type.",
            "UNSUPPORTED! Variable binary data type.",
            "UNSUPPORTED! Long variable binary data type.",
            "UNSUPPORTED! NCLOB data type.",
            "UNSUPPORTED! SQL XML data type is not supported.",
            "UNSUPPORTED! Cursor reference type is not supported.",
            "UNSUPPORTED! Use TIME or TIMESTAMP instead.",
            "UNSUPPORTED! Use TIMESTAMP instead."
          ],
          "description": "The data type of the Parameter.",
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "DATA_TYPE_INT",
            "DATA_TYPE_SMALLINT",
            "DATA_TYPE_DOUBLE",
            "DATA_TYPE_DATE",
            "DATA_TYPE_DATETIME",
            "DATA_TYPE_TIME",
            "DATA_TYPE_STRING",
            "DATA_TYPE_LONG",
            "DATA_TYPE_BOOLEAN",
            "DATA_TYPE_DECIMAL",
            "DATA_TYPE_UUID",
            "DATA_TYPE_BLOB",
            "DATA_TYPE_BIT",
            "DATA_TYPE_TINYINT",
            "DATA_TYPE_INTEGER",
            "DATA_TYPE_BIGINT",
            "DATA_TYPE_FLOAT",
            "DATA_TYPE_REAL",
            "DATA_TYPE_NUMERIC",
            "DATA_TYPE_CHAR",
            "DATA_TYPE_VARCHAR",
            "DATA_TYPE_LONGVARCHAR",
            "DATA_TYPE_TIMESTAMP",
            "DATA_TYPE_NCHAR",
            "DATA_TYPE_NVARCHAR",
            "DATA_TYPE_LONGNVARCHAR",
            "DATA_TYPE_NULL",
            "DATA_TYPE_OTHER",
            "DATA_TYPE_JAVA_OBJECT",
            "DATA_TYPE_DISTINCT",
            "DATA_TYPE_STRUCT",
            "DATA_TYPE_ARRAY",
            "DATA_TYPE_CLOB",
            "DATA_TYPE_REF",
            "DATA_TYPE_DATALINK",
            "DATA_TYPE_ROWID",
            "DATA_TYPE_BINARY",
            "DATA_TYPE_VARBINARY",
            "DATA_TYPE_LONGVARBINARY",
            "DATA_TYPE_NCLOB",
            "DATA_TYPE_SQLXML",
            "DATA_TYPE_REF_CURSOR",
            "DATA_TYPE_TIME_WITH_TIMEZONE",
            "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
          ]
        },
        "defaultValue": {
          "type": "any",
          "description": "The following field specifies the default value of the Parameter provided by the external system if a value is not provided."
        },
        "nullable": {
          "description": "Specifies whether a null value is allowed.",
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "description": "A brief description of the Parameter."
        }
      },
      "description": "Metadata of an input parameter.",
      "type": "object"
    },
    "ConnectionSchemaMetadata": {
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. List of entity names.",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Timestamp when the connection runtime schema was updated.",
          "format": "google-datetime"
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The current state of runtime schema.",
          "enumDescriptions": [
            "Default state.",
            "Schema refresh is in progress.",
            "Schema has been updated."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "REFRESHING",
            "UPDATED"
          ]
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
        },
        "refreshTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Timestamp when the connection runtime schema refresh was triggered."
        },
        "actions": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of actions.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "ConnectionSchemaMetadata is the singleton resource of each connection. It includes the entity and action names of runtime resources exposed by a connection backend.",
      "id": "ConnectionSchemaMetadata"
    },
    "Connection": {
      "description": "Connection represents an instance of connector.",
      "id": "Connection",
      "properties": {
        "serviceDirectory": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. \"projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors\""
        },
        "lockConfig": {
          "$ref": "LockConfig",
          "description": "Optional. Configuration that indicates whether or not the Connection can be edited."
        },
        "authConfig": {
          "$ref": "AuthConfig",
          "description": "Optional. Configuration for establishing the connection's authentication with an external system."
        },
        "suspended": {
          "type": "boolean",
          "description": "Optional. Suspended indicates if a user has suspended a connection or not."
        },
        "imageLocation": {
          "description": "Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources"
        },
        "description": {
          "description": "Optional. Description of the resource.",
          "type": "string"
        },
        "status": {
          "description": "Output only. Current status of the connection.",
          "readOnly": true,
          "$ref": "ConnectionStatus"
        },
        "connectionRevision": {
          "type": "string",
          "description": "Output only. Connection revision. This field is only updated when the connection is created or updated by User.",
          "format": "int64",
          "readOnly": true
        },
        "connectorVersionLaunchStage": {
          "readOnly": true,
          "enum": [
            "LAUNCH_STAGE_UNSPECIFIED",
            "PREVIEW",
            "GA",
            "DEPRECATED",
            "PRIVATE_PREVIEW"
          ],
          "description": "Output only. Flag to mark the version indicating the launch stage.",
          "enumDescriptions": [
            "LAUNCH_STAGE_UNSPECIFIED.",
            "PREVIEW.",
            "GA.",
            "DEPRECATED.",
            "PRIVATE_PREVIEW."
          ],
          "type": "string"
        },
        "envoyImageLocation": {
          "type": "string",
          "description": "Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}",
          "readOnly": true
        },
        "sslConfig": {
          "$ref": "SslConfig",
          "description": "Optional. Ssl config of a connection"
        },
        "subscriptionType": {
          "enumDescriptions": [
            "Unspecified subscription type.",
            "PayG subscription.",
            "Paid Subscription."
          ],
          "type": "string",
          "description": "Output only. This subscription type enum states the subscription type of the project.",
          "enum": [
            "SUBSCRIPTION_TYPE_UNSPECIFIED",
            "PAY_G",
            "PAID"
          ],
          "readOnly": true
        },
        "serviceAccount": {
          "description": "Optional. Service account needed for runtime plane to access GCP resources.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}",
          "readOnly": true
        },
        "logConfig": {
          "$ref": "ConnectorsLogConfig",
          "description": "Optional. Log configuration for the connection."
        },
        "createTime": {
          "description": "Output only. Created time.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "nodeConfig": {
          "description": "Optional. Node configuration for the connection.",
          "$ref": "NodeConfig"
        },
        "configVariables": {
          "items": {
            "$ref": "ConfigVariable"
          },
          "type": "array",
          "description": "Optional. Configuration for configuring the connection with an external system."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Updated time.",
          "format": "google-datetime"
        },
        "destinationConfigs": {
          "description": "Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).",
          "type": "array",
          "items": {
            "$ref": "DestinationConfig"
          }
        },
        "connectorVersion": {
          "type": "string",
          "description": "Required. Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource."
        }
      },
      "type": "object"
    },
    "ListRuntimeEntitySchemasResponse": {
      "id": "ListRuntimeEntitySchemasResponse",
      "description": "Response message for ConnectorsService.ListRuntimeEntitySchemas.",
      "properties": {
        "runtimeEntitySchemas": {
          "description": "Runtime entity schemas.",
          "items": {
            "$ref": "RuntimeEntitySchema"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Next page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslConfigTemplate": {
      "type": "object",
      "id": "SslConfigTemplate",
      "properties": {
        "additionalVariables": {
          "items": {
            "$ref": "ConfigVariableTemplate"
          },
          "type": "array",
          "description": "Any additional fields that need to be rendered"
        },
        "sslType": {
          "description": "Controls the ssl type for the given connector version",
          "enumDescriptions": [
            "No SSL configuration required.",
            "TLS Handshake",
            "mutual TLS (MTLS) Handshake"
          ],
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "TLS",
            "MTLS"
          ],
          "type": "string"
        },
        "clientCertType": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Cert type unspecified.",
              "Privacy Enhanced Mail (PEM) Type"
            ],
            "enum": [
              "CERT_TYPE_UNSPECIFIED",
              "PEM"
            ]
          },
          "type": "array",
          "description": "List of supported Client Cert Types"
        },
        "serverCertType": {
          "items": {
            "type": "string",
            "enum": [
              "CERT_TYPE_UNSPECIFIED",
              "PEM"
            ],
            "enumDescriptions": [
              "Cert type unspecified.",
              "Privacy Enhanced Mail (PEM) Type"
            ]
          },
          "description": "List of supported Server Cert Types",
          "type": "array"
        },
        "isTlsMandatory": {
          "description": "Boolean for determining if the connector version mandates TLS.",
          "type": "boolean"
        }
      },
      "description": "Ssl config details of a connector version"
    },
    "ExtractionRule": {
      "id": "ExtractionRule",
      "type": "object",
      "properties": {
        "source": {
          "description": "Source on which the rule is applied.",
          "$ref": "Source"
        },
        "extractionRegex": {
          "description": "Regex used to extract backend details from source. If empty, whole source value will be used.",
          "type": "string"
        }
      },
      "description": "Extraction Rule."
    },
    "Policy": {
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy",
      "type": "object"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "description": "Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.",
  "ownerName": "Google",
  "version": "v1",
  "kind": "discovery#restDescription",
  "parameters": {
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    }
  },
  "ownerDomain": "google.com",
  "name": "connectors",
  "servicePath": "",
  "mtlsRootUrl": "https://connectors.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "basePath": "",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "v1/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "connectors.projects.locations.list"
            },
            "get": {
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "description": "Gets information about a location.",
              "id": "connectors.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}"
            },
            "getRuntimeConfig": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/runtimeConfig",
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "id": "connectors.projects.locations.getRuntimeConfig",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+/runtimeConfig$",
                  "required": true,
                  "description": "Required. Resource name of the form: `projects/*/locations/*/runtimeConfig`"
                }
              },
              "response": {
                "$ref": "RuntimeConfig"
              },
              "description": "Gets the runtimeConfig of a location. RuntimeConfig is a singleton resource for each location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "delete": {
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "connectors.projects.locations.operations.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "connectors.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "id": "connectors.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}/operations"
                },
                "cancel": {
                  "id": "connectors.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST"
                }
              }
            },
            "providers": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent resource of the API, of the form: `projects/*/locations/*` Only global location is supported for Provider resource."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Page size.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Page token."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers",
                  "id": "connectors.projects.locations.providers.list",
                  "response": {
                    "$ref": "ListProvidersResponse"
                  },
                  "path": "v1/{+parent}/providers",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Providers in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "testIamPermissions": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "id": "connectors.projects.locations.providers.testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "getIamPolicy": {
                  "id": "connectors.projects.locations.providers.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:getIamPolicy"
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "connectors.projects.locations.providers.setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "Provider"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}",
                  "httpMethod": "GET",
                  "description": "Gets details of a provider.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*` Only global location is supported for Provider resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.providers.get"
                }
              },
              "resources": {
                "connectors": {
                  "resources": {
                    "versions": {
                      "methods": {
                        "get": {
                          "parameters": {
                            "name": {
                              "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*` Only global location is supported for ConnectorVersion resource.",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+/versions/[^/]+$",
                              "location": "path"
                            },
                            "view": {
                              "location": "query",
                              "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `CUSTOMER` view.",
                              "enum": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                "CONNECTOR_VERSION_VIEW_BASIC",
                                "CONNECTOR_VERSION_VIEW_FULL"
                              ],
                              "type": "string",
                              "enumDescriptions": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                "Do not include role grant configs.",
                                "Include role grant configs."
                              ]
                            }
                          },
                          "path": "v1/{+name}",
                          "response": {
                            "$ref": "ConnectorVersion"
                          },
                          "description": "Gets details of a single connector version.",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions/{versionsId}",
                          "id": "connectors.projects.locations.providers.connectors.versions.get",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "ListConnectorVersionsResponse"
                          },
                          "path": "v1/{+parent}/versions",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "view": {
                              "location": "query",
                              "description": "Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `BASIC` view.",
                              "enumDescriptions": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED.",
                                "Do not include role grant configs.",
                                "Include role grant configs."
                              ],
                              "enum": [
                                "CONNECTOR_VERSION_VIEW_UNSPECIFIED",
                                "CONNECTOR_VERSION_VIEW_BASIC",
                                "CONNECTOR_VERSION_VIEW_FULL"
                              ],
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Page size.",
                              "type": "integer",
                              "format": "int32",
                              "location": "query"
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "Page token.",
                              "location": "query"
                            },
                            "parent": {
                              "required": true,
                              "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for ConnectorVersion resource.",
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$"
                            }
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}/versions",
                          "description": "Lists Connector Versions in a given project and location.",
                          "id": "connectors.projects.locations.providers.connectors.versions.list",
                          "httpMethod": "GET"
                        }
                      }
                    }
                  },
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Connector"
                      },
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+/connectors/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for Connector resource."
                        }
                      },
                      "description": "Gets details of a single Connector.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors/{connectorsId}",
                      "httpMethod": "GET",
                      "id": "connectors.projects.locations.providers.connectors.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}/connectors",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Page token.",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Filter string.",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*` Only global location is supported for Connector resource.",
                          "location": "path"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "Page size."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/connectors",
                      "id": "connectors.projects.locations.providers.connectors.list",
                      "response": {
                        "$ref": "ListConnectorsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Connectors in a given project and location.",
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            },
            "global": {
              "methods": {
                "getSettings": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/global/settings$",
                      "description": "Required. The resource name of the Settings."
                    }
                  },
                  "response": {
                    "$ref": "Settings"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "GetGlobalSettings gets settings of a project. GlobalSettings is a singleton resource.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/global/settings",
                  "id": "connectors.projects.locations.global.getSettings",
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "managedZones": {
                  "methods": {
                    "patch": {
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "type": "string",
                          "description": "Required. The list of fields to update. Fields are specified relative to the managedZone. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the managedZone details: * `description` * `labels` * `target_project` * `target_network`"
                        },
                        "name": {
                          "description": "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "connectors.projects.locations.global.managedZones.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates the parameters of a single ManagedZone.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "ManagedZone"
                      },
                      "httpMethod": "PATCH",
                      "path": "v1/{+name}"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "connectors.projects.locations.global.managedZones.get",
                      "path": "v1/{+name}",
                      "description": "Gets details of a single ManagedZone.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Resource name of the form: `projects/*/locations/global/managedZones/*`",
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "ManagedZone"
                      }
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single ManagedZone.",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones/{managedZonesId}",
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}",
                      "id": "connectors.projects.locations.global.managedZones.delete",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Resource name of the form: `projects/*/locations/global/managedZones/*`",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/managedZones/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "description": "Creates a new ManagedZone in a given project and location.",
                      "path": "v1/{+parent}/managedZones",
                      "request": {
                        "$ref": "ManagedZone"
                      },
                      "id": "connectors.projects.locations.global.managedZones.create",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent resource of the ManagedZone, of the form: `projects/*/locations/global`"
                        },
                        "managedZoneId": {
                          "description": "Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "list": {
                      "description": "List ManagedZones in a given project",
                      "response": {
                        "$ref": "ListManagedZonesResponse"
                      },
                      "path": "v1/{+parent}/managedZones",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "connectors.projects.locations.global.managedZones.list",
                      "flatPath": "v1/projects/{projectsId}/locations/global/managedZones",
                      "parameters": {
                        "pageToken": {
                          "description": "Page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filter. https://g3doc.corp.google.com/cloud/control2/g3doc/dev/apihosting/list_filtering.md#filtering."
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Page size."
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. Parent resource of the Managed Zone, of the form: `projects/*/locations/global`",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "required": true
                        },
                        "orderBy": {
                          "description": "Order by parameters.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "connections": {
              "methods": {
                "setIamPolicy": {
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "connectors.projects.locations.connections.setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:setIamPolicy"
                },
                "list": {
                  "response": {
                    "$ref": "ListConnectionsResponse"
                  },
                  "description": "Lists Connections in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "connectors.projects.locations.connections.list",
                  "parameters": {
                    "view": {
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.",
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Order by parameters.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Page size.",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`"
                    }
                  },
                  "path": "v1/{+parent}/connections"
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "connectors.projects.locations.connections.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  }
                },
                "getConnectionSchemaMetadata": {
                  "httpMethod": "GET",
                  "description": "Gets schema metadata of a connection. SchemaMetadata is a singleton resource for each connection.",
                  "id": "connectors.projects.locations.connections.getConnectionSchemaMetadata",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Connection name Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ConnectionSchemaMetadata"
                  },
                  "path": "v1/{+name}"
                },
                "testIamPermissions": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}:testIamPermissions",
                  "id": "connectors.projects.locations.connections.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "get": {
                  "parameters": {
                    "view": {
                      "enum": [
                        "CONNECTION_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "enumDescriptions": [
                        "CONNECTION_UNSPECIFIED.",
                        "Do not include runtime required configs.",
                        "Include runtime required configs."
                      ],
                      "description": "Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "type": "string",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Connection"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Connection.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "id": "connectors.projects.locations.connections.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "id": "connectors.projects.locations.connections.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/connections/*`",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Connection.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Connection"
                  },
                  "description": "Updates the parameters of a single Connection.",
                  "id": "connectors.projects.locations.connections.patch",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "Required. You can modify only the fields listed below. To lock/unlock a connection: * `lock_config` To suspend/resume a connection: * `suspended` To update the connection details: * `description` * `labels` * `connector_version` * `config_variables` * `auth_config` * `destination_configs` * `node_config`"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                      "required": true,
                      "description": "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`",
                      "type": "string",
                      "location": "path"
                    },
                    "connectionId": {
                      "description": "Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "connectors.projects.locations.connections.create",
                  "path": "v1/{+parent}/connections",
                  "description": "Creates a new Connection in a given project and location.",
                  "request": {
                    "$ref": "Connection"
                  },
                  "httpMethod": "POST"
                }
              },
              "resources": {
                "runtimeEntitySchemas": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent resource of RuntimeEntitySchema Format: projects/{project}/locations/{location}/connections/{connection}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "required": true
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Page token.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Page size.",
                          "format": "int32"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Required. Filter Format: entity=\"{entityId}\" Only entity field is supported with literal equality operator. Accepted filter example: entity=\"Order\" Wildcards are not supported in the filter currently.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeEntitySchemas",
                      "id": "connectors.projects.locations.connections.runtimeEntitySchemas.list",
                      "path": "v1/{+parent}/runtimeEntitySchemas",
                      "response": {
                        "$ref": "ListRuntimeEntitySchemasResponse"
                      },
                      "description": "List schema of a runtime entities filtered by entity name.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "runtimeActionSchemas": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/runtimeActionSchemas",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Page size."
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Page token.",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Required. Filter Format: action=\"{actionId}\" Only action field is supported with literal equality operator. Accepted filter example: action=\"CancelOrder\" Wildcards are not supported in the filter currently.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+$",
                          "type": "string",
                          "description": "Required. Parent resource of RuntimeActionSchema Format: projects/{project}/locations/{location}/connections/{connection}",
                          "location": "path"
                        }
                      },
                      "description": "List schema of a runtime actions filtered by action name.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListRuntimeActionSchemasResponse"
                      },
                      "path": "v1/{+parent}/runtimeActionSchemas",
                      "id": "connectors.projects.locations.connections.runtimeActionSchemas.list"
                    }
                  }
                },
                "connectionSchemaMetadata": {
                  "methods": {
                    "refresh": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:refresh",
                      "httpMethod": "POST",
                      "description": "Refresh runtime schema of a connection.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connections/{connectionsId}/connectionSchemaMetadata:refresh",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/connections/[^/]+/connectionSchemaMetadata$",
                          "required": true,
                          "description": "Required. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata",
                          "type": "string"
                        }
                      },
                      "id": "connectors.projects.locations.connections.connectionSchemaMetadata.refresh",
                      "request": {
                        "$ref": "RefreshConnectionSchemaMetadataRequest"
                      }
                    }
                  }
                }
              }
            },
            "endpointAttachments": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent resource od the EndpointAttachment, of the form: `projects/*/locations/*`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Order by parameters."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Page size.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter. https://g3doc.corp.google.com/cloud/control2/g3doc/dev/apihosting/list_filtering.md#filtering."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "connectors.projects.locations.endpointAttachments.list",
                  "path": "v1/{+parent}/endpointAttachments",
                  "response": {
                    "$ref": "ListEndpointAttachmentsResponse"
                  },
                  "description": "List EndpointAttachments in a given project"
                },
                "get": {
                  "response": {
                    "$ref": "EndpointAttachment"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$",
                      "description": "Required. Resource name of the form: `projects/*/locations/*/endpointAttachments/*`",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "connectors.projects.locations.endpointAttachments.get",
                  "description": "Gets details of a single EndpointAttachment.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "connectors.projects.locations.endpointAttachments.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Output only. Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. The list of fields to update. Fields are specified relative to the endpointAttachment. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the endpointAttachment details: * `description` * `labels`",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "EndpointAttachment"
                  },
                  "description": "Updates the parameters of a single EndpointAttachment.",
                  "path": "v1/{+name}"
                },
                "create": {
                  "path": "v1/{+parent}/endpointAttachments",
                  "description": "Creates a new EndpointAttachment in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent resource of the EndpointAttachment, of the form: `projects/*/locations/*`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "endpointAttachmentId": {
                      "description": "Required. Identifier to assign to the EndpointAttachment. Must be unique within scope of the parent resource.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "EndpointAttachment"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments",
                  "httpMethod": "POST",
                  "id": "connectors.projects.locations.endpointAttachments.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/endpointAttachments/{endpointAttachmentsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "id": "connectors.projects.locations.endpointAttachments.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single EndpointAttachment.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Resource name of the form: `projects/*/locations/*/endpointAttachments/*`",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/endpointAttachments/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20230531",
  "baseUrl": "https://connectors.googleapis.com/"
}

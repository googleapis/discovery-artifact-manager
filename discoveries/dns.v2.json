{
  "protocol": "rest",
  "canonicalName": "Dns",
  "fullyEncodeReservedExpansion": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/ndev.clouddns.readwrite": {
          "description": "View and manage your DNS records hosted by Google Cloud DNS"
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        },
        "https://www.googleapis.com/auth/ndev.clouddns.readonly": {
          "description": "View your DNS records hosted by Google Cloud DNS"
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "id": "dns:v2",
  "resources": {
    "resourceRecordSets": {
      "methods": {
        "create": {
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets",
          "response": {
            "$ref": "ResourceRecordSet"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.resourceRecordSets.create",
          "parameters": {
            "managedZone": {
              "required": true,
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            },
            "location": {
              "default": "global",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "request": {
            "$ref": "ResourceRecordSet"
          },
          "httpMethod": "POST",
          "description": "Creates a new ResourceRecordSet.",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets"
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "project",
            "location",
            "managedZone",
            "name",
            "type"
          ],
          "parameters": {
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "name": {
              "description": "Fully qualified domain name.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "type": {
              "location": "path",
              "description": "RRSet type.",
              "type": "string",
              "required": true
            },
            "location": {
              "required": true,
              "type": "string",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "default": "global",
              "location": "path"
            }
          },
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Deletes a previously created ResourceRecordSet.",
          "id": "dns.resourceRecordSets.delete"
        },
        "patch": {
          "response": {
            "$ref": "ResourceRecordSet"
          },
          "description": "Applies a partial update to an existing ResourceRecordSet.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "location",
            "managedZone",
            "name",
            "type"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "parameters": {
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true
            },
            "type": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "RRSet type."
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "location": {
              "location": "path",
              "type": "string",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "required": true,
              "default": "global"
            },
            "name": {
              "type": "string",
              "description": "Fully qualified domain name.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "PATCH",
          "request": {
            "$ref": "ResourceRecordSet"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "id": "dns.resourceRecordSets.patch"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets",
          "id": "dns.resourceRecordSets.list",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets",
          "description": "Enumerates ResourceRecordSets that you have created but not yet deleted.",
          "response": {
            "$ref": "ResourceRecordSetsListResponse"
          },
          "parameters": {
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "location": "query"
            },
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true
            },
            "name": {
              "description": "Restricts the list to return only records with this fully qualified domain name.",
              "location": "query",
              "type": "string"
            },
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "type": {
              "type": "string",
              "description": "Restricts the list to return only records of this type. If present, the \"name\" parameter must also be present.",
              "location": "query"
            },
            "location": {
              "type": "string",
              "location": "path",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "required": true,
              "default": "global"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."
            }
          },
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "httpMethod": "GET"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets/{name}/{type}",
          "id": "dns.resourceRecordSets.get",
          "response": {
            "$ref": "ResourceRecordSet"
          },
          "parameterOrder": [
            "project",
            "location",
            "managedZone",
            "name",
            "type"
          ],
          "httpMethod": "GET",
          "description": "Fetches the representation of an existing ResourceRecordSet.",
          "parameters": {
            "type": {
              "description": "RRSet type.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "name": {
              "required": true,
              "description": "Fully qualified domain name.",
              "location": "path",
              "type": "string"
            },
            "location": {
              "required": true,
              "type": "string",
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "location": "path"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "managedZone": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."
            }
          },
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/rrsets/{name}/{type}"
        }
      }
    },
    "managedZoneOperations": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "GET",
          "description": "Fetches the representation of an existing Operation.",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/operations/{operation}",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/operations/{operation}",
          "id": "dns.managedZoneOperations.get",
          "parameters": {
            "managedZone": {
              "required": true,
              "description": "Identifies the managed zone addressed by this request.",
              "location": "path",
              "type": "string"
            },
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "operation": {
              "required": true,
              "description": "Identifies the operation addressed by this request (ID of the operation).",
              "type": "string",
              "location": "path"
            },
            "location": {
              "location": "path",
              "type": "string",
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "location",
            "managedZone",
            "operation"
          ],
          "response": {
            "$ref": "Operation"
          }
        },
        "list": {
          "id": "dns.managedZoneOperations.list",
          "httpMethod": "GET",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/operations",
          "response": {
            "$ref": "ManagedZoneOperationsListResponse"
          },
          "description": "Enumerates Operations for the given ManagedZone.",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Identifies the project addressed by this request."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."
            },
            "maxResults": {
              "location": "query",
              "format": "int32",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return."
            },
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "sortBy": {
              "type": "string",
              "enum": [
                "START_TIME",
                "ID"
              ],
              "description": "Sorting criterion. The only supported values are START_TIME and ID.",
              "default": "START_TIME",
              "location": "query",
              "enumDescriptions": [
                "",
                ""
              ]
            },
            "location": {
              "type": "string",
              "default": "global",
              "required": true,
              "location": "path",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/operations",
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ]
        }
      }
    },
    "dnsKeys": {
      "methods": {
        "list": {
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "id": "dns.dnsKeys.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Enumerates DnsKeys to a ResourceRecordSet collection.",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/dnsKeys",
          "httpMethod": "GET",
          "parameters": {
            "location": {
              "required": true,
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "location": "path",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string"
            },
            "maxResults": {
              "format": "int32",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "location": "query",
              "type": "integer"
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "digestType": {
              "type": "string",
              "location": "query",
              "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed."
            },
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/dnsKeys",
          "response": {
            "$ref": "DnsKeysListResponse"
          }
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "GET",
          "parameterOrder": [
            "project",
            "location",
            "managedZone",
            "dnsKeyId"
          ],
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}",
          "parameters": {
            "managedZone": {
              "type": "string",
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true
            },
            "dnsKeyId": {
              "type": "string",
              "description": "The identifier of the requested DnsKey.",
              "required": true,
              "location": "path"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            },
            "location": {
              "default": "global",
              "required": true,
              "type": "string",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "location": "path"
            },
            "digestType": {
              "description": "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Identifies the project addressed by this request."
            }
          },
          "description": "Fetches the representation of an existing DnsKey.",
          "response": {
            "$ref": "DnsKey"
          },
          "id": "dns.dnsKeys.get"
        }
      }
    },
    "changes": {
      "methods": {
        "get": {
          "description": "Fetches the representation of an existing Change.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "location",
            "managedZone",
            "changeId"
          ],
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "managedZone": {
              "location": "path",
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string"
            },
            "location": {
              "type": "string",
              "default": "global",
              "required": true,
              "location": "path"
            },
            "changeId": {
              "description": "The identifier of the requested change, from a previous ResourceRecordSetsChangeResponse.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Change"
          },
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/changes/{changeId}",
          "id": "dns.changes.get",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/changes/{changeId}"
        },
        "create": {
          "response": {
            "$ref": "Change"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Atomically updates the ResourceRecordSet collection.",
          "id": "dns.changes.create",
          "parameters": {
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "location": {
              "default": "global",
              "location": "path",
              "type": "string",
              "required": true
            },
            "managedZone": {
              "required": true,
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string"
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request."
            }
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/changes",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/changes",
          "request": {
            "$ref": "Change"
          },
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ]
        },
        "list": {
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "parameters": {
            "maxResults": {
              "format": "int32",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "location": "query"
            },
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string"
            },
            "location": {
              "type": "string",
              "default": "global",
              "required": true,
              "location": "path"
            },
            "managedZone": {
              "required": true,
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path",
              "type": "string"
            },
            "pageToken": {
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "location": "query",
              "type": "string"
            },
            "sortOrder": {
              "location": "query",
              "type": "string",
              "description": "Sorting order direction: 'ascending' or 'descending'."
            },
            "sortBy": {
              "enumDescriptions": [
                ""
              ],
              "type": "string",
              "default": "CHANGE_SEQUENCE",
              "description": "Sorting criterion. The only supported value is change sequence.",
              "enum": [
                "CHANGE_SEQUENCE"
              ],
              "location": "query"
            }
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/changes",
          "httpMethod": "GET",
          "response": {
            "$ref": "ChangesListResponse"
          },
          "id": "dns.changes.list",
          "description": "Enumerates Changes to a ResourceRecordSet collection.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}/changes"
        }
      }
    },
    "projects": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Fetches the representation of an existing Project.",
          "path": "dns/v2/projects/{project}/locations/{location}",
          "httpMethod": "GET",
          "flatPath": "dns/v2/projects/{project}/locations/{location}",
          "parameterOrder": [
            "project",
            "location"
          ],
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "location": {
              "default": "global",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Project"
          },
          "id": "dns.projects.get"
        }
      }
    },
    "responsePolicyRules": {
      "methods": {
        "list": {
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules",
          "parameters": {
            "responsePolicy": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "User assigned name of the Response Policy to list."
            },
            "location": {
              "type": "string",
              "location": "path",
              "default": "global",
              "required": true,
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "format": "int32"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "GET",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules",
          "description": "Enumerates all Response Policy Rules associated with a project.",
          "response": {
            "$ref": "ResponsePolicyRulesListResponse"
          },
          "id": "dns.responsePolicyRules.list"
        },
        "update": {
          "response": {
            "$ref": "ResponsePolicyRulesUpdateResponse"
          },
          "id": "dns.responsePolicyRules.update",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Updates an existing Response Policy Rule.",
          "request": {
            "$ref": "ResponsePolicyRule"
          },
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy",
            "responsePolicyRule"
          ],
          "parameters": {
            "responsePolicyRule": {
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "responsePolicy": {
              "type": "string",
              "required": true,
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "location": "path"
            },
            "location": {
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "type": "string",
              "location": "path",
              "required": true,
              "default": "global"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string"
            }
          },
          "httpMethod": "PUT",
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}"
        },
        "create": {
          "request": {
            "$ref": "ResponsePolicyRule"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules",
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules",
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy"
          ],
          "description": "Creates a new Response Policy Rule.",
          "httpMethod": "POST",
          "response": {
            "$ref": "ResponsePolicyRule"
          },
          "parameters": {
            "location": {
              "location": "path",
              "type": "string",
              "required": true,
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            },
            "responsePolicy": {
              "location": "path",
              "required": true,
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "type": "string"
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "clientOperationId": {
              "type": "string",
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.responsePolicyRules.create"
        },
        "patch": {
          "parameters": {
            "responsePolicy": {
              "type": "string",
              "location": "path",
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "required": true
            },
            "responsePolicyRule": {
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string"
            },
            "location": {
              "default": "global",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            },
            "clientOperationId": {
              "type": "string",
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy",
            "responsePolicyRule"
          ],
          "description": "Applies a partial update to an existing Response Policy Rule.",
          "request": {
            "$ref": "ResponsePolicyRule"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "response": {
            "$ref": "ResponsePolicyRulesPatchResponse"
          },
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "httpMethod": "PATCH",
          "id": "dns.responsePolicyRules.patch"
        },
        "get": {
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "GET",
          "description": "Fetches the representation of an existing Response Policy Rule.",
          "response": {
            "$ref": "ResponsePolicyRule"
          },
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true
            },
            "responsePolicyRule": {
              "required": true,
              "type": "string",
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "location": "path"
            },
            "responsePolicy": {
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "location": {
              "location": "path",
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "type": "string",
              "required": true
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "id": "dns.responsePolicyRules.get",
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy",
            "responsePolicyRule"
          ]
        },
        "delete": {
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}/rules/{responsePolicyRule}",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy",
            "responsePolicyRule"
          ],
          "parameters": {
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "responsePolicy": {
              "type": "string",
              "required": true,
              "description": "User assigned name of the Response Policy containing the Response Policy Rule.",
              "location": "path"
            },
            "location": {
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "location": "path",
              "required": true,
              "type": "string",
              "default": "global"
            },
            "responsePolicyRule": {
              "description": "User assigned name of the Response Policy Rule addressed by this request.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "description": "Deletes a previously created Response Policy Rule.",
          "id": "dns.responsePolicyRules.delete"
        }
      }
    },
    "managedZones": {
      "methods": {
        "create": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "id": "dns.managedZones.create",
          "parameterOrder": [
            "project",
            "location"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "ManagedZone"
          },
          "description": "Creates a new ManagedZone.",
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "location": {
              "location": "path",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "type": "string",
              "required": true,
              "default": "global"
            }
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones",
          "request": {
            "$ref": "ManagedZone"
          }
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "GET",
          "parameters": {
            "managedZone": {
              "type": "string",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "location": "path",
              "required": true
            },
            "location": {
              "location": "path",
              "default": "global",
              "required": true,
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request."
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "ManagedZone"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}",
          "id": "dns.managedZones.get",
          "description": "Fetches the representation of an existing ManagedZone.",
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "managedZone": {
              "type": "string",
              "location": "path",
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true
            },
            "location": {
              "location": "path",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "default": "global",
              "type": "string",
              "required": true
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "ManagedZone"
          },
          "httpMethod": "PUT",
          "description": "Updates an existing ManagedZone.",
          "id": "dns.managedZones.update",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Deletes a previously created ManagedZone.",
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "httpMethod": "DELETE",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}",
          "id": "dns.managedZones.delete",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}",
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "location": {
              "required": true,
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "location": "path",
              "type": "string"
            }
          }
        },
        "patch": {
          "id": "dns.managedZones.patch",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}",
          "request": {
            "$ref": "ManagedZone"
          },
          "parameters": {
            "managedZone": {
              "description": "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "location": {
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "required": true,
              "location": "path",
              "type": "string",
              "default": "global"
            }
          },
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "location",
            "managedZone"
          ],
          "response": {
            "$ref": "Operation"
          },
          "description": "Applies a partial update to an existing ManagedZone.",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones/{managedZone}"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "GET",
          "path": "dns/v2/projects/{project}/locations/{location}/managedZones",
          "parameters": {
            "dnsName": {
              "description": "Restricts the list to return only zones with this domain name.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "location": {
              "type": "string",
              "location": "path",
              "required": true,
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            },
            "maxResults": {
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ManagedZonesListResponse"
          },
          "id": "dns.managedZones.list",
          "parameterOrder": [
            "project",
            "location"
          ],
          "description": "Enumerates ManagedZones that have been created but not yet deleted.",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/managedZones"
        }
      }
    },
    "responsePolicies": {
      "methods": {
        "delete": {
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy"
          ],
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}",
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}",
          "httpMethod": "DELETE",
          "id": "dns.responsePolicies.delete",
          "description": "Deletes a previously created Response Policy. Fails if the response policy is non-empty or still being referenced by a network.",
          "parameters": {
            "responsePolicy": {
              "location": "path",
              "description": "User assigned name of the Response Policy addressed by this request.",
              "required": true,
              "type": "string"
            },
            "location": {
              "location": "path",
              "required": true,
              "type": "string",
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            },
            "project": {
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "location": "path"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "get": {
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request."
            },
            "responsePolicy": {
              "location": "path",
              "description": "User assigned name of the Response Policy addressed by this request.",
              "type": "string",
              "required": true
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "location": {
              "type": "string",
              "default": "global",
              "location": "path",
              "required": true,
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            }
          },
          "response": {
            "$ref": "ResponsePolicy"
          },
          "httpMethod": "GET",
          "description": "Fetches the representation of an existing Response Policy.",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}",
          "id": "dns.responsePolicies.get",
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy"
          ]
        },
        "update": {
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}",
          "id": "dns.responsePolicies.update",
          "description": "Updates an existing Response Policy.",
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy"
          ],
          "httpMethod": "PUT",
          "request": {
            "$ref": "ResponsePolicy"
          },
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "responsePolicy": {
              "description": "User assigned name of the Response Policy addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "location": {
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "location": "path",
              "default": "global",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "response": {
            "$ref": "ResponsePoliciesUpdateResponse"
          },
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}"
        },
        "create": {
          "description": "Creates a new Response Policy",
          "httpMethod": "POST",
          "parameterOrder": [
            "project",
            "location"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "response": {
            "$ref": "ResponsePolicy"
          },
          "parameters": {
            "location": {
              "required": true,
              "description": "Specifies the location of the resource, only applicable in the v APIs. This information will be used for routing and will be part of the resource name.",
              "location": "path",
              "default": "global",
              "type": "string"
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Identifies the project addressed by this request."
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            }
          },
          "request": {
            "$ref": "ResponsePolicy"
          },
          "id": "dns.responsePolicies.create",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies"
        },
        "patch": {
          "response": {
            "$ref": "ResponsePoliciesPatchResponse"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}",
          "parameters": {
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            },
            "responsePolicy": {
              "description": "User assigned name of the Respones Policy addressed by this request.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "location": {
              "location": "path",
              "type": "string",
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "required": true
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "location",
            "responsePolicy"
          ],
          "description": "Applies a partial update to an existing Response Policy.",
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies/{responsePolicy}",
          "id": "dns.responsePolicies.patch",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "ResponsePolicy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "list": {
          "parameters": {
            "location": {
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "default": "global",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "pageToken": {
              "location": "query",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "type": "string"
            },
            "maxResults": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return."
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/responsePolicies",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/responsePolicies",
          "id": "dns.responsePolicies.list",
          "response": {
            "$ref": "ResponsePoliciesListResponse"
          },
          "description": "Enumerates all Response Policies associated with a project.",
          "parameterOrder": [
            "project",
            "location"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "policies": {
      "methods": {
        "update": {
          "description": "Updates an existing Policy.",
          "id": "dns.policies.update",
          "path": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameterOrder": [
            "project",
            "location",
            "policy"
          ],
          "response": {
            "$ref": "PoliciesUpdateResponse"
          },
          "request": {
            "$ref": "Policy"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "Identifies the project addressed by this request.",
              "location": "path"
            },
            "location": {
              "default": "global",
              "type": "string",
              "location": "path",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "required": true
            },
            "policy": {
              "location": "path",
              "required": true,
              "description": "User given friendly name of the policy addressed by this request.",
              "type": "string"
            },
            "clientOperationId": {
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query"
            }
          },
          "httpMethod": "PUT"
        },
        "patch": {
          "parameterOrder": [
            "project",
            "location",
            "policy"
          ],
          "httpMethod": "PATCH",
          "path": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "response": {
            "$ref": "PoliciesPatchResponse"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "id": "dns.policies.patch",
          "description": "Applies a partial update to an existing Policy.",
          "request": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameters": {
            "location": {
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "clientOperationId": {
              "location": "query",
              "type": "string",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."
            },
            "policy": {
              "required": true,
              "type": "string",
              "description": "User given friendly name of the policy addressed by this request.",
              "location": "path"
            },
            "project": {
              "location": "path",
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "required": true
            }
          }
        },
        "list": {
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.",
              "location": "query"
            },
            "project": {
              "location": "path",
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "required": true
            },
            "location": {
              "default": "global",
              "required": true,
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "type": "string",
              "location": "path"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.",
              "format": "int32"
            }
          },
          "response": {
            "$ref": "PoliciesListResponse"
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/policies",
          "id": "dns.policies.list",
          "httpMethod": "GET",
          "description": "Enumerates all Policies associated with a project.",
          "parameterOrder": [
            "project",
            "location"
          ],
          "path": "dns/v2/projects/{project}/locations/{location}/policies",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ]
        },
        "get": {
          "flatPath": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "response": {
            "$ref": "Policy"
          },
          "parameterOrder": [
            "project",
            "location",
            "policy"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/ndev.clouddns.readonly",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "description": "Fetches the representation of an existing Policy.",
          "id": "dns.policies.get",
          "path": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "parameters": {
            "clientOperationId": {
              "location": "query",
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "type": "string"
            },
            "policy": {
              "description": "User given friendly name of the policy addressed by this request.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "project": {
              "type": "string",
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "required": true
            },
            "location": {
              "required": true,
              "location": "path",
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "type": "string"
            }
          }
        },
        "create": {
          "parameterOrder": [
            "project",
            "location"
          ],
          "parameters": {
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            },
            "location": {
              "type": "string",
              "required": true,
              "location": "path",
              "default": "global",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name."
            },
            "project": {
              "description": "Identifies the project addressed by this request.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "id": "dns.policies.create",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "httpMethod": "POST",
          "flatPath": "dns/v2/projects/{project}/locations/{location}/policies",
          "path": "dns/v2/projects/{project}/locations/{location}/policies",
          "response": {
            "$ref": "Policy"
          },
          "description": "Creates a new Policy.",
          "request": {
            "$ref": "Policy"
          }
        },
        "delete": {
          "httpMethod": "DELETE",
          "id": "dns.policies.delete",
          "path": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/ndev.clouddns.readwrite"
          ],
          "parameters": {
            "project": {
              "description": "Identifies the project addressed by this request.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "policy": {
              "description": "User given friendly name of the policy addressed by this request.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "location": {
              "required": true,
              "default": "global",
              "type": "string",
              "description": "Specifies the location of the resource. This information will be used for routing and will be part of the resource name.",
              "location": "path"
            },
            "clientOperationId": {
              "description": "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "dns/v2/projects/{project}/locations/{location}/policies/{policy}",
          "parameterOrder": [
            "project",
            "location",
            "policy"
          ],
          "description": "Deletes a previously created Policy. Fails if the policy is still being referenced by a network."
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/dns/docs",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    }
  },
  "kind": "discovery#restDescription",
  "description": "",
  "basePath": "",
  "rootUrl": "https://dns.googleapis.com/",
  "title": "Cloud DNS API",
  "mtlsRootUrl": "https://dns.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://dns.googleapis.com/",
  "name": "dns",
  "version": "v2",
  "ownerName": "Google",
  "schemas": {
    "RRSetRoutingPolicyWrrPolicy": {
      "id": "RRSetRoutingPolicyWrrPolicy",
      "properties": {
        "kind": {
          "default": "dns#rRSetRoutingPolicyWrrPolicy",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem"
          }
        }
      },
      "type": "object",
      "description": "Configures a RRSetRoutingPolicy that routes in a weighted round robin fashion."
    },
    "ResponsePolicyNetwork": {
      "id": "ResponsePolicyNetwork",
      "type": "object",
      "properties": {
        "kind": {
          "default": "dns#responsePolicyNetwork",
          "type": "string"
        },
        "networkUrl": {
          "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}",
          "type": "string"
        }
      }
    },
    "ManagedZoneForwardingConfigNameServerTarget": {
      "properties": {
        "kind": {
          "default": "dns#managedZoneForwardingConfigNameServerTarget",
          "type": "string"
        },
        "forwardingPath": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
            "Cloud DNS always forwards to this target through the VPC."
          ],
          "description": "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target."
        },
        "ipv4Address": {
          "type": "string",
          "description": "IPv4 address of a target name server."
        }
      },
      "id": "ManagedZoneForwardingConfigNameServerTarget",
      "type": "object"
    },
    "ManagedZonePeeringConfig": {
      "properties": {
        "targetNetwork": {
          "$ref": "ManagedZonePeeringConfigTargetNetwork",
          "description": "The network with which to peer."
        },
        "kind": {
          "default": "dns#managedZonePeeringConfig",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ManagedZonePeeringConfig"
    },
    "DnsKeysListResponse": {
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "dnsKeys": {
          "type": "array",
          "items": {
            "$ref": "DnsKey"
          },
          "description": "The requested resources."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size."
        },
        "kind": {
          "description": "Type of resource.",
          "type": "string",
          "default": "dns#dnsKeysListResponse"
        }
      },
      "id": "DnsKeysListResponse",
      "description": "The response to a request to enumerate DnsKeys in a ManagedZone.",
      "type": "object"
    },
    "ResponsePolicyRulesUpdateResponse": {
      "id": "ResponsePolicyRulesUpdateResponse",
      "properties": {
        "responsePolicyRule": {
          "$ref": "ResponsePolicyRule"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "type": "object"
    },
    "ResourceRecordSet": {
      "id": "ResourceRecordSet",
      "type": "object",
      "description": "A unit of data that is returned by the DNS servers.",
      "properties": {
        "name": {
          "type": "string",
          "description": "For example, www.example.com."
        },
        "rrdatas": {
          "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string",
          "default": "dns#resourceRecordSet"
        },
        "ttl": {
          "type": "integer",
          "format": "int32",
          "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers."
        },
        "type": {
          "description": "The identifier of a supported record type. See the list of Supported DNS record types.",
          "type": "string"
        },
        "routingPolicy": {
          "description": "Configures dynamic query responses based on geo location of querying user or a weighted round robin based routing policy. A ResourceRecordSet should only have either rrdata (static) or routing_policy (dynamic). An error is returned otherwise.",
          "$ref": "RRSetRoutingPolicy"
        },
        "signatureRrdatas": {
          "items": {
            "type": "string"
          },
          "description": "As defined in RFC 4034 (section 3.2).",
          "type": "array"
        }
      }
    },
    "ResponsePoliciesListResponse": {
      "id": "ResponsePoliciesListResponse",
      "type": "object",
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "responsePolicies": {
          "items": {
            "$ref": "ResponsePolicy"
          },
          "description": "The Response Policy resources.",
          "type": "array"
        }
      }
    },
    "RRSetRoutingPolicy": {
      "properties": {
        "wrr": {
          "$ref": "RRSetRoutingPolicyWrrPolicy"
        },
        "geo": {
          "$ref": "RRSetRoutingPolicyGeoPolicy"
        },
        "kind": {
          "default": "dns#rRSetRoutingPolicy",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A RRSetRoutingPolicy represents ResourceRecordSet data that is returned dynamically with the response varying based on configured properties such as geolocation or by weighted random selection.",
      "id": "RRSetRoutingPolicy"
    },
    "OperationDnsKeyContext": {
      "properties": {
        "newValue": {
          "$ref": "DnsKey",
          "description": "The post-operation DnsKey resource."
        },
        "oldValue": {
          "description": "The pre-operation DnsKey resource.",
          "$ref": "DnsKey"
        }
      },
      "id": "OperationDnsKeyContext",
      "type": "object"
    },
    "ManagedZonePrivateVisibilityConfigGKECluster": {
      "properties": {
        "gkeClusterName": {
          "description": "The resource name of the cluster to bind this ManagedZone to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZonePrivateVisibilityConfigGKECluster"
        }
      },
      "id": "ManagedZonePrivateVisibilityConfigGKECluster",
      "type": "object"
    },
    "PolicyAlternativeNameServerConfig": {
      "type": "object",
      "id": "PolicyAlternativeNameServerConfig",
      "properties": {
        "targetNameServers": {
          "items": {
            "$ref": "PolicyAlternativeNameServerConfigTargetNameServer"
          },
          "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.",
          "type": "array"
        },
        "kind": {
          "default": "dns#policyAlternativeNameServerConfig",
          "type": "string"
        }
      }
    },
    "ResponsePolicyRule": {
      "properties": {
        "behavior": {
          "description": "Answer this query with a behavior rather than DNS data.",
          "enum": [
            "BEHAVIOR_UNSPECIFIED",
            "BYPASS_RESPONSE_POLICY"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "Skip a less-specific ResponsePolicyRule and continue normal query logic. This can be used in conjunction with a wildcard to exempt a subset of the wildcard ResponsePolicyRule from the ResponsePolicy behavior and e.g., query the public internet instead. For instance, if these rules exist: *.example.com -\u003e 1.2.3.4 foo.example.com -\u003e PASSTHRU Then a query for 'foo.example.com' skips the wildcard."
          ]
        },
        "kind": {
          "default": "dns#responsePolicyRule",
          "type": "string"
        },
        "localData": {
          "$ref": "ResponsePolicyRuleLocalData",
          "description": "Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name; in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed."
        },
        "ruleName": {
          "type": "string",
          "description": "An identifier for this rule. Must be unique with the ResponsePolicy."
        },
        "dnsName": {
          "type": "string",
          "description": "The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule."
        }
      },
      "type": "object",
      "id": "ResponsePolicyRule",
      "description": "A Response Policy Rule is a selector that applies its behavior to queries that match the selector. Selectors are DNS names, which may be wildcards or exact matches. Each DNS query subject to a Response Policy matches at most one ResponsePolicyRule, as identified by the dns_name field with the longest matching suffix."
    },
    "ResponsePolicyGKECluster": {
      "type": "object",
      "properties": {
        "gkeClusterName": {
          "description": "The resource name of the cluster to bind this response policy to. This should be specified in the format like: projects/*/locations/*/clusters/*. This is referenced from GKE projects.locations.clusters.get API: https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters/get",
          "type": "string"
        },
        "kind": {
          "default": "dns#responsePolicyGKECluster",
          "type": "string"
        }
      },
      "id": "ResponsePolicyGKECluster"
    },
    "Quota": {
      "type": "object",
      "description": "Limits associated with a Project.",
      "properties": {
        "policies": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowed number of policies per project."
        },
        "rrsetAdditionsPerChange": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest."
        },
        "dnsKeysPerManagedZone": {
          "format": "int32",
          "description": "Maximum allowed number of DnsKeys per ManagedZone.",
          "type": "integer"
        },
        "rrsetDeletionsPerChange": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest."
        },
        "targetNameServersPerManagedZone": {
          "type": "integer",
          "description": "Maximum allowed number of target name servers per managed forwarding zone.",
          "format": "int32"
        },
        "resourceRecordsPerRrset": {
          "type": "integer",
          "description": "Maximum allowed number of ResourceRecords per ResourceRecordSet.",
          "format": "int32"
        },
        "networksPerManagedZone": {
          "format": "int32",
          "description": "Maximum allowed number of networks to which a privately scoped zone can be attached.",
          "type": "integer"
        },
        "rrsetsPerManagedZone": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum allowed number of ResourceRecordSets per zone in the project."
        },
        "kind": {
          "type": "string",
          "default": "dns#quota"
        },
        "managedZones": {
          "type": "integer",
          "description": "Maximum allowed number of managed zones in the project.",
          "format": "int32"
        },
        "peeringZonesPerTargetNetwork": {
          "format": "int32",
          "description": "Maximum allowed number of consumer peering zones per target network owned by this producer project",
          "type": "integer"
        },
        "targetNameServersPerPolicy": {
          "description": "Maximum allowed number of alternative target name servers per policy.",
          "type": "integer",
          "format": "int32"
        },
        "totalRrdataSizePerChange": {
          "description": "Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.",
          "type": "integer",
          "format": "int32"
        },
        "itemsPerRoutingPolicy": {
          "description": "Maximum allowed number of items per routing policy.",
          "type": "integer",
          "format": "int32"
        },
        "managedZonesPerNetwork": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum allowed number of managed zones which can be attached to a network."
        },
        "whitelistedKeySpecs": {
          "items": {
            "$ref": "DnsKeySpec"
          },
          "type": "array",
          "description": "DNSSEC algorithm and key length types that can be used for DnsKeys."
        },
        "networksPerPolicy": {
          "description": "Maximum allowed number of networks per policy.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Quota"
    },
    "PolicyAlternativeNameServerConfigTargetNameServer": {
      "properties": {
        "ipv4Address": {
          "description": "IPv4 address to forward to.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#policyAlternativeNameServerConfigTargetNameServer"
        },
        "forwardingPath": {
          "enum": [
            "DEFAULT",
            "PRIVATE"
          ],
          "type": "string",
          "description": "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.",
          "enumDescriptions": [
            "Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet",
            "Cloud DNS always forwards to this target through the VPC."
          ]
        }
      },
      "type": "object",
      "id": "PolicyAlternativeNameServerConfigTargetNameServer"
    },
    "DnsKeySpec": {
      "properties": {
        "keyLength": {
          "format": "uint32",
          "description": "Length of the keys in bits.",
          "type": "integer"
        },
        "algorithm": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "RSASHA1",
            "RSASHA256",
            "RSASHA512",
            "ECDSAP256SHA256",
            "ECDSAP384SHA384"
          ],
          "description": "String mnemonic specifying the DNSSEC algorithm of this key."
        },
        "keyType": {
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "KEY_SIGNING",
            "ZONE_SIGNING"
          ],
          "type": "string",
          "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets."
        },
        "kind": {
          "type": "string",
          "default": "dns#dnsKeySpec"
        }
      },
      "type": "object",
      "id": "DnsKeySpec",
      "description": "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey."
    },
    "PolicyNetwork": {
      "type": "object",
      "properties": {
        "networkUrl": {
          "description": "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}",
          "type": "string"
        },
        "kind": {
          "default": "dns#policyNetwork",
          "type": "string"
        }
      },
      "id": "PolicyNetwork"
    },
    "ManagedZoneServiceDirectoryConfigNamespace": {
      "properties": {
        "namespaceUrl": {
          "type": "string",
          "description": "The fully qualified URL of the namespace associated with the zone. Format must be https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"
        },
        "deletionTime": {
          "type": "string",
          "description": "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."
        },
        "kind": {
          "default": "dns#managedZoneServiceDirectoryConfigNamespace",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ManagedZoneServiceDirectoryConfigNamespace"
    },
    "ResourceRecordSetsListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "default": "dns#resourceRecordSetsListResponse",
          "type": "string",
          "description": "Type of resource."
        },
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve complete contents of even larger collections, one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "rrsets": {
          "type": "array",
          "items": {
            "$ref": "ResourceRecordSet"
          },
          "description": "The resource record set resources."
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "id": "ResourceRecordSetsListResponse"
    },
    "ResponseHeader": {
      "type": "object",
      "description": "Elements common to every response.",
      "id": "ResponseHeader",
      "properties": {
        "operationId": {
          "description": "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only).",
          "type": "string"
        }
      }
    },
    "ManagedZoneServiceDirectoryConfig": {
      "type": "object",
      "id": "ManagedZoneServiceDirectoryConfig",
      "description": "Contains information about Service Directory-backed zones.",
      "properties": {
        "kind": {
          "default": "dns#managedZoneServiceDirectoryConfig",
          "type": "string"
        },
        "namespace": {
          "$ref": "ManagedZoneServiceDirectoryConfigNamespace",
          "description": "Contains information about the namespace associated with the zone."
        }
      }
    },
    "RRSetRoutingPolicyGeoPolicyGeoPolicyItem": {
      "id": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem",
      "type": "object",
      "properties": {
        "rrdatas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signatureRrdatas": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. ."
        },
        "kind": {
          "default": "dns#rRSetRoutingPolicyGeoPolicyGeoPolicyItem",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The geo-location granularity is a GCP region. This location string should correspond to a GCP region. e.g. \"us-east1\", \"southamerica-east1\", \"asia-east1\", etc."
        }
      },
      "description": "ResourceRecordSet data for one geo location."
    },
    "ManagedZoneCloudLoggingConfig": {
      "properties": {
        "kind": {
          "default": "dns#managedZoneCloudLoggingConfig",
          "type": "string"
        },
        "enableLogging": {
          "type": "boolean",
          "description": "If set, enable query logging for this ManagedZone. False by default, making logging opt-in."
        }
      },
      "type": "object",
      "description": "Cloud Logging configurations for publicly visible zones.",
      "id": "ManagedZoneCloudLoggingConfig"
    },
    "PoliciesListResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#policiesListResponse",
          "description": "Type of resource."
        },
        "policies": {
          "description": "The policy resources.",
          "type": "array",
          "items": {
            "$ref": "Policy"
          }
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "type": "object",
      "id": "PoliciesListResponse"
    },
    "ManagedZoneDnsSecConfig": {
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#managedZoneDnsSecConfig"
        },
        "defaultKeySpecs": {
          "type": "array",
          "description": "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.",
          "items": {
            "$ref": "DnsKeySpec"
          }
        },
        "nonExistence": {
          "type": "string",
          "enum": [
            "NSEC",
            "NSEC3"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF."
        },
        "state": {
          "enumDescriptions": [
            "DNSSEC is disabled; the zone is not signed.",
            "DNSSEC is enabled; the zone is signed and fully managed.",
            "DNSSEC is enabled, but in a \"transfer\" mode."
          ],
          "enum": [
            "OFF",
            "ON",
            "TRANSFER"
          ],
          "description": "Specifies whether DNSSEC is enabled, and what mode it is in.",
          "type": "string"
        }
      },
      "id": "ManagedZoneDnsSecConfig",
      "type": "object"
    },
    "ChangesListResponse": {
      "id": "ChangesListResponse",
      "description": "The response to a request to enumerate Changes to a ResourceRecordSets collection.",
      "type": "object",
      "properties": {
        "changes": {
          "items": {
            "$ref": "Change"
          },
          "type": "array",
          "description": "The requested changes."
        },
        "header": {
          "$ref": "ResponseHeader"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a \"snapshot\" of collections larger than the maximum page size."
        },
        "kind": {
          "default": "dns#changesListResponse",
          "description": "Type of resource.",
          "type": "string"
        }
      }
    },
    "OperationManagedZoneContext": {
      "id": "OperationManagedZoneContext",
      "properties": {
        "oldValue": {
          "$ref": "ManagedZone",
          "description": "The pre-operation ManagedZone resource."
        },
        "newValue": {
          "$ref": "ManagedZone",
          "description": "The post-operation ManagedZone resource."
        }
      },
      "type": "object"
    },
    "Project": {
      "description": "A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console. Next tag: 7.",
      "id": "Project",
      "properties": {
        "number": {
          "format": "uint64",
          "type": "string",
          "description": "Unique numeric identifier for the resource; defined by the server (output only)."
        },
        "kind": {
          "default": "dns#project",
          "type": "string"
        },
        "quota": {
          "description": "Quotas assigned to this project (output only).",
          "$ref": "Quota"
        },
        "id": {
          "description": "User assigned unique identifier for the resource (output only).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResponsePoliciesUpdateResponse": {
      "id": "ResponsePoliciesUpdateResponse",
      "type": "object",
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "responsePolicy": {
          "$ref": "ResponsePolicy"
        }
      }
    },
    "Change": {
      "type": "object",
      "id": "Change",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#change"
        },
        "status": {
          "description": "Status of the operation (output only). A status of \"done\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "PENDING",
            "DONE"
          ]
        },
        "deletions": {
          "type": "array",
          "items": {
            "$ref": "ResourceRecordSet"
          },
          "description": "Which ResourceRecordSets to remove? Must match existing data exactly."
        },
        "startTime": {
          "type": "string",
          "description": "The time that this operation was started by the server (output only). This is in RFC3339 text format."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource; defined by the server (output only)."
        },
        "additions": {
          "description": "Which ResourceRecordSets to add?",
          "type": "array",
          "items": {
            "$ref": "ResourceRecordSet"
          }
        },
        "isServing": {
          "type": "boolean",
          "description": "If the DNS queries for the zone will be served."
        }
      },
      "description": "A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence."
    },
    "ResponsePoliciesPatchResponse": {
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "responsePolicy": {
          "$ref": "ResponsePolicy"
        }
      },
      "id": "ResponsePoliciesPatchResponse",
      "type": "object"
    },
    "PoliciesUpdateResponse": {
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "policy": {
          "$ref": "Policy"
        }
      },
      "id": "PoliciesUpdateResponse",
      "type": "object"
    },
    "ManagedZoneForwardingConfig": {
      "properties": {
        "kind": {
          "default": "dns#managedZoneForwardingConfig",
          "type": "string"
        },
        "targetNameServers": {
          "description": "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given.",
          "type": "array",
          "items": {
            "$ref": "ManagedZoneForwardingConfigNameServerTarget"
          }
        }
      },
      "type": "object",
      "id": "ManagedZoneForwardingConfig"
    },
    "ManagedZonePrivateVisibilityConfig": {
      "type": "object",
      "properties": {
        "networks": {
          "description": "The list of VPC networks that can see this zone.",
          "items": {
            "$ref": "ManagedZonePrivateVisibilityConfigNetwork"
          },
          "type": "array"
        },
        "gkeClusters": {
          "type": "array",
          "description": "The list of Google Kubernetes Engine clusters that can see this zone.",
          "items": {
            "$ref": "ManagedZonePrivateVisibilityConfigGKECluster"
          }
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZonePrivateVisibilityConfig"
        }
      },
      "id": "ManagedZonePrivateVisibilityConfig"
    },
    "DnsKeyDigest": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "SHA1",
            "SHA256",
            "SHA384"
          ],
          "description": "Specifies the algorithm used to calculate this digest."
        },
        "digest": {
          "type": "string",
          "description": "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record."
        }
      },
      "type": "object",
      "id": "DnsKeyDigest"
    },
    "ManagedZone": {
      "type": "object",
      "id": "ManagedZone",
      "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.",
      "properties": {
        "dnssecConfig": {
          "description": "DNSSEC configuration.",
          "$ref": "ManagedZoneDnsSecConfig"
        },
        "name": {
          "type": "string",
          "description": "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes."
        },
        "kind": {
          "default": "dns#managedZone",
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "Unique identifier for the resource; defined by the server (output only)"
        },
        "dnsName": {
          "type": "string",
          "description": "The DNS name of this managed zone, for instance \"example.com.\"."
        },
        "nameServers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Delegate your managed_zone to these virtual name servers; defined by the server (output only)"
        },
        "nameServerSet": {
          "type": "string",
          "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."
        },
        "cloudLoggingConfig": {
          "$ref": "ManagedZoneCloudLoggingConfig"
        },
        "peeringConfig": {
          "$ref": "ManagedZonePeeringConfig",
          "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."
        },
        "description": {
          "type": "string",
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function."
        },
        "forwardingConfig": {
          "$ref": "ManagedZoneForwardingConfig",
          "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to."
        },
        "reverseLookupConfig": {
          "$ref": "ManagedZoneReverseLookupConfig",
          "description": "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."
        },
        "serviceDirectoryConfig": {
          "$ref": "ManagedZoneServiceDirectoryConfig",
          "description": "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."
        },
        "visibility": {
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ],
          "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources."
        },
        "labels": {
          "type": "object",
          "description": "User labels.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "privateVisibilityConfig": {
          "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.",
          "$ref": "ManagedZonePrivateVisibilityConfig"
        },
        "creationTime": {
          "type": "string",
          "description": "The time that this resource was created on the server. This is in RFC3339 text format. Output only."
        }
      }
    },
    "ResponsePolicy": {
      "id": "ResponsePolicy",
      "type": "object",
      "description": "A Response Policy is a collection of selectors that apply to queries made against one or more Virtual Private Cloud networks.",
      "properties": {
        "kind": {
          "default": "dns#responsePolicy",
          "type": "string"
        },
        "networks": {
          "items": {
            "$ref": "ResponsePolicyNetwork"
          },
          "type": "array",
          "description": "List of network names specifying networks to which this policy is applied."
        },
        "gkeClusters": {
          "type": "array",
          "description": "The list of Google Kubernetes Engine clusters to which this response policy is applied.",
          "items": {
            "$ref": "ResponsePolicyGKECluster"
          }
        },
        "responsePolicyName": {
          "type": "string",
          "description": "User assigned name for this Response Policy."
        },
        "description": {
          "description": "User-provided description for this Response Policy.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Unique identifier for the resource; defined by the server (output only)."
        }
      }
    },
    "ManagedZoneOperationsListResponse": {
      "type": "object",
      "id": "ManagedZoneOperationsListResponse",
      "properties": {
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "operations": {
          "description": "The operation resources.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "kind": {
          "default": "dns#managedZoneOperationsListResponse",
          "type": "string"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      }
    },
    "PoliciesPatchResponse": {
      "properties": {
        "header": {
          "$ref": "ResponseHeader"
        },
        "policy": {
          "$ref": "Policy"
        }
      },
      "id": "PoliciesPatchResponse",
      "type": "object"
    },
    "ResponsePolicyRulesPatchResponse": {
      "properties": {
        "responsePolicyRule": {
          "$ref": "ResponsePolicyRule"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "id": "ResponsePolicyRulesPatchResponse",
      "type": "object"
    },
    "DnsKey": {
      "properties": {
        "creationTime": {
          "description": "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only.",
          "type": "string"
        },
        "digests": {
          "description": "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only.",
          "type": "array",
          "items": {
            "$ref": "DnsKeyDigest"
          }
        },
        "keyLength": {
          "description": "Length of the key in bits. Specified at creation time, and then immutable.",
          "format": "uint32",
          "type": "integer"
        },
        "algorithm": {
          "description": "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "RSASHA1",
            "RSASHA256",
            "RSASHA512",
            "ECDSAP256SHA256",
            "ECDSAP384SHA384"
          ],
          "type": "string"
        },
        "description": {
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource; defined by the server (output only)."
        },
        "isActive": {
          "description": "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures.",
          "type": "boolean"
        },
        "publicKey": {
          "description": "Base64 encoded public half of this key. Output only.",
          "type": "string"
        },
        "keyTag": {
          "type": "integer",
          "format": "int32",
          "description": "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only."
        },
        "type": {
          "type": "string",
          "enum": [
            "KEY_SIGNING",
            "ZONE_SIGNING"
          ],
          "description": "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "kind": {
          "type": "string",
          "default": "dns#dnsKey"
        }
      },
      "id": "DnsKey",
      "description": "A DNSSEC key pair.",
      "type": "object"
    },
    "RRSetRoutingPolicyGeoPolicy": {
      "type": "object",
      "id": "RRSetRoutingPolicyGeoPolicy",
      "description": "Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user.",
      "properties": {
        "kind": {
          "type": "string",
          "default": "dns#rRSetRoutingPolicyGeoPolicy"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "RRSetRoutingPolicyGeoPolicyGeoPolicyItem"
          },
          "description": "The primary geo routing configuration. If there are multiple items with the same location, an error is returned instead."
        }
      }
    },
    "ManagedZoneReverseLookupConfig": {
      "type": "object",
      "id": "ManagedZoneReverseLookupConfig",
      "properties": {
        "kind": {
          "default": "dns#managedZoneReverseLookupConfig",
          "type": "string"
        }
      }
    },
    "ResponsePolicyRuleLocalData": {
      "type": "object",
      "properties": {
        "localDatas": {
          "type": "array",
          "items": {
            "$ref": "ResourceRecordSet"
          },
          "description": "All resource record sets for this selector, one per resource record type. The name must match the dns_name."
        }
      },
      "id": "ResponsePolicyRuleLocalData"
    },
    "ManagedZonePrivateVisibilityConfigNetwork": {
      "id": "ManagedZonePrivateVisibilityConfigNetwork",
      "properties": {
        "networkUrl": {
          "type": "string",
          "description": "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZonePrivateVisibilityConfigNetwork"
        }
      },
      "type": "object"
    },
    "ManagedZonesListResponse": {
      "id": "ManagedZonesListResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#managedZonesListResponse",
          "description": "Type of resource."
        },
        "managedZones": {
          "type": "array",
          "items": {
            "$ref": "ManagedZone"
          },
          "description": "The managed zone resources."
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      }
    },
    "Operation": {
      "properties": {
        "dnsKeyContext": {
          "$ref": "OperationDnsKeyContext",
          "description": "Only populated if the operation targeted a DnsKey (output only)."
        },
        "zoneContext": {
          "$ref": "OperationManagedZoneContext",
          "description": "Only populated if the operation targeted a ManagedZone (output only)."
        },
        "type": {
          "description": "Type of the operation. Operations include insert, update, and delete (output only).",
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PENDING",
            "DONE"
          ],
          "description": "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "kind": {
          "default": "dns#operation",
          "type": "string"
        },
        "startTime": {
          "description": "The time that this operation was started by the server. This is in RFC3339 text format (output only).",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)"
        },
        "user": {
          "description": "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)",
          "type": "string"
        }
      },
      "description": "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.",
      "id": "Operation",
      "type": "object"
    },
    "ManagedZonePeeringConfigTargetNetwork": {
      "id": "ManagedZonePeeringConfigTargetNetwork",
      "type": "object",
      "properties": {
        "networkUrl": {
          "type": "string",
          "description": "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"
        },
        "deactivateTime": {
          "type": "string",
          "description": "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."
        },
        "kind": {
          "default": "dns#managedZonePeeringConfigTargetNetwork",
          "type": "string"
        }
      }
    },
    "RRSetRoutingPolicyWrrPolicyWrrPolicyItem": {
      "type": "object",
      "id": "RRSetRoutingPolicyWrrPolicyWrrPolicyItem",
      "properties": {
        "weight": {
          "description": "The weight corresponding to this subset of rrdata. When multiple WeightedRoundRobinPolicyItems are configured, the probability of returning an rrset is proportional to its weight relative to the sum of weights configured for all items. This weight should be non-negative.",
          "type": "number",
          "format": "double"
        },
        "kind": {
          "type": "string",
          "default": "dns#rRSetRoutingPolicyWrrPolicyWrrPolicyItem"
        },
        "rrdatas": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signatureRrdatas": {
          "description": "DNSSEC generated signatures for all the rrdata within this item. Note that if health checked targets are provided for DNSSEC enabled zones, there's a restriction of 1 ip per item. .",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A routing block which contains the routing information for one WRR item."
    },
    "Policy": {
      "type": "object",
      "id": "Policy",
      "description": "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.",
      "properties": {
        "name": {
          "description": "User-assigned name for this policy.",
          "type": "string"
        },
        "id": {
          "format": "uint64",
          "description": "Unique identifier for the resource; defined by the server (output only).",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "dns#policy"
        },
        "description": {
          "type": "string",
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function."
        },
        "networks": {
          "type": "array",
          "description": "List of network names specifying networks to which this policy is applied.",
          "items": {
            "$ref": "PolicyNetwork"
          }
        },
        "alternativeNameServerConfig": {
          "description": "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.",
          "$ref": "PolicyAlternativeNameServerConfig"
        },
        "enableLogging": {
          "description": "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.",
          "type": "boolean"
        },
        "enableInboundForwarding": {
          "type": "boolean",
          "description": "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy."
        }
      }
    },
    "ResponsePolicyRulesListResponse": {
      "id": "ResponsePolicyRulesListResponse",
      "properties": {
        "nextPageToken": {
          "description": "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. This lets you the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size.",
          "type": "string"
        },
        "responsePolicyRules": {
          "description": "The Response Policy Rule resources.",
          "items": {
            "$ref": "ResponsePolicyRule"
          },
          "type": "array"
        },
        "header": {
          "$ref": "ResponseHeader"
        }
      },
      "type": "object"
    }
  },
  "revision": "20220505"
}

{
  "discoveryVersion": "v1",
  "parameters": {
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "alt": {
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "basePath": "",
  "description": "The Google Enterprise License Manager API's allows you to license apps for all the users of a domain managed by you.",
  "version": "v1",
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://licensing.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "documentationLink": "https://developers.google.com/admin-sdk/licensing/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/apps.licensing": {
          "description": "View and manage G Suite licenses for your domain"
        }
      }
    }
  },
  "revision": "20220319",
  "schemas": {
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "LicenseAssignmentList": {
      "id": "LicenseAssignmentList",
      "properties": {
        "items": {
          "items": {
            "$ref": "LicenseAssignment"
          },
          "description": "The LicenseAssignments in this page of results.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page."
        },
        "kind": {
          "default": "licensing#licenseAssignmentList",
          "description": "Identifies the resource as a collection of LicenseAssignments.",
          "type": "string"
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LicenseAssignment": {
      "id": "LicenseAssignment",
      "type": "object",
      "description": "Representation of a license assignment.",
      "properties": {
        "skuId": {
          "type": "string",
          "annotations": {
            "required": [
              "licensing.licenseAssignments.update"
            ]
          },
          "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
        },
        "etags": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "skuName": {
          "type": "string",
          "description": "Display Name of the sku of the product."
        },
        "productName": {
          "description": "Display Name of the product.",
          "type": "string"
        },
        "userId": {
          "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
          "annotations": {
            "required": [
              "licensing.licenseAssignments.update"
            ]
          },
          "type": "string"
        },
        "productId": {
          "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
          "type": "string",
          "annotations": {
            "required": [
              "licensing.licenseAssignments.update"
            ]
          }
        },
        "selfLink": {
          "description": "Link to this page.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
          "default": "licensing#licenseAssignment",
          "type": "string"
        }
      }
    },
    "LicenseAssignmentInsert": {
      "type": "object",
      "properties": {
        "userId": {
          "description": "Email id of the user",
          "annotations": {
            "required": [
              "licensing.licenseAssignments.insert"
            ]
          },
          "type": "string"
        }
      },
      "description": "Representation of a license assignment.",
      "id": "LicenseAssignmentInsert"
    }
  },
  "name": "licensing",
  "protocol": "rest",
  "mtlsRootUrl": "https://licensing.mtls.googleapis.com/",
  "servicePath": "",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "baseUrl": "https://licensing.googleapis.com/",
  "id": "licensing:v1",
  "title": "Enterprise License Manager API",
  "resources": {
    "licenseAssignments": {
      "methods": {
        "update": {
          "httpMethod": "PUT",
          "id": "licensing.licenseAssignments.update",
          "description": "Reassign a user's product SKU with a different SKU in the same product.",
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "response": {
            "$ref": "LicenseAssignment"
          },
          "parameters": {
            "productId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs."
            },
            "skuId": {
              "type": "string",
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "location": "path",
              "required": true
            },
            "userId": {
              "type": "string",
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "request": {
            "$ref": "LicenseAssignment"
          },
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}"
        },
        "patch": {
          "parameters": {
            "productId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs."
            },
            "userId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes."
            },
            "skuId": {
              "location": "path",
              "required": true,
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "type": "string"
            }
          },
          "description": "Reassign a user's product SKU with a different SKU in the same product. This method supports patch semantics.",
          "httpMethod": "PATCH",
          "response": {
            "$ref": "LicenseAssignment"
          },
          "request": {
            "$ref": "LicenseAssignment"
          },
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "id": "licensing.licenseAssignments.patch"
        },
        "listForProductAndSku": {
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/users",
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/users",
          "id": "licensing.licenseAssignments.listForProductAndSku",
          "parameterOrder": [
            "productId",
            "skuId",
            "customerId"
          ],
          "parameters": {
            "skuId": {
              "required": true,
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "type": "string",
              "location": "path"
            },
            "maxResults": {
              "type": "integer",
              "maximum": "1000",
              "format": "uint32",
              "location": "query",
              "minimum": "1",
              "default": "100",
              "description": "The `maxResults` query string determines how many entries are returned on each page of a large response. This is an optional parameter. The value must be a positive number."
            },
            "customerId": {
              "description": "Customer's `customerId`. A previous version of this API accepted the primary domain name as a value for this field. If the customer is suspended, the server returns an error.",
              "type": "string",
              "location": "query",
              "required": true
            },
            "pageToken": {
              "description": "Token to fetch the next page of data. The `maxResults` query string is related to the `pageToken` since `maxResults` determines how many entries are returned on each page. This is an optional query string. If not specified, the server returns the first page.",
              "default": "",
              "type": "string",
              "location": "query"
            },
            "productId": {
              "type": "string",
              "required": true,
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "location": "path"
            }
          },
          "response": {
            "$ref": "LicenseAssignmentList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "description": "List all users assigned licenses for a specific product SKU.",
          "httpMethod": "GET"
        },
        "get": {
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ],
          "description": "Get a specific user's license by product SKU.",
          "response": {
            "$ref": "LicenseAssignment"
          },
          "parameters": {
            "skuId": {
              "location": "path",
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "type": "string",
              "required": true
            },
            "productId": {
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "userId": {
              "location": "path",
              "required": true,
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
              "type": "string"
            }
          },
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "id": "licensing.licenseAssignments.get",
          "httpMethod": "GET",
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ]
        },
        "delete": {
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "parameters": {
            "productId": {
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "skuId": {
              "required": true,
              "type": "string",
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "location": "path"
            },
            "userId": {
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "response": {
            "$ref": "Empty"
          },
          "description": "Revoke a license.",
          "httpMethod": "DELETE",
          "id": "licensing.licenseAssignments.delete",
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ]
        },
        "listForProduct": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "parameters": {
            "productId": {
              "type": "string",
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "required": true,
              "location": "path"
            },
            "maxResults": {
              "minimum": "1",
              "type": "integer",
              "location": "query",
              "default": "100",
              "description": "The `maxResults` query string determines how many entries are returned on each page of a large response. This is an optional parameter. The value must be a positive number.",
              "maximum": "1000",
              "format": "uint32"
            },
            "customerId": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "Customer's `customerId`. A previous version of this API accepted the primary domain name as a value for this field. If the customer is suspended, the server returns an error."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "Token to fetch the next page of data. The `maxResults` query string is related to the `pageToken` since `maxResults` determines how many entries are returned on each page. This is an optional query string. If not specified, the server returns the first page.",
              "default": ""
            }
          },
          "flatPath": "apps/licensing/v1/product/{productId}/users",
          "id": "licensing.licenseAssignments.listForProduct",
          "httpMethod": "GET",
          "description": "List all users assigned licenses for a specific product SKU.",
          "parameterOrder": [
            "productId",
            "customerId"
          ],
          "path": "apps/licensing/v1/product/{productId}/users",
          "response": {
            "$ref": "LicenseAssignmentList"
          }
        },
        "insert": {
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user",
          "description": "Assign a license.",
          "response": {
            "$ref": "LicenseAssignment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "parameters": {
            "skuId": {
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "productId": {
              "required": true,
              "location": "path",
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "LicenseAssignmentInsert"
          },
          "parameterOrder": [
            "productId",
            "skuId"
          ],
          "id": "licensing.licenseAssignments.insert",
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user"
        }
      }
    }
  }
}

{
  "baseUrl": "https://tpu.googleapis.com/",
  "title": "Cloud TPU API",
  "schemas": {
    "AcceleratorType": {
      "properties": {
        "type": {
          "type": "string",
          "description": "the accelerator type."
        },
        "name": {
          "description": "The resource name.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AcceleratorType",
      "description": "A accelerator type that a Node can be configured with."
    },
    "ListTensorFlowVersionsResponse": {
      "type": "object",
      "properties": {
        "tensorflowVersions": {
          "type": "array",
          "description": "The listed nodes.",
          "items": {
            "$ref": "TensorFlowVersion"
          }
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "The next page token or empty if none.",
          "type": "string"
        }
      },
      "description": "Response for ListTensorFlowVersions.",
      "id": "ListTensorFlowVersionsResponse"
    },
    "Node": {
      "description": "A TPU instance.",
      "properties": {
        "healthDescription": {
          "description": "Output only. If this field is populated, it contains a description of why the TPU Node is unhealthy.",
          "readOnly": true,
          "type": "string"
        },
        "health": {
          "type": "string",
          "enumDescriptions": [
            "Health status is unknown: not initialized or failed to retrieve.",
            "The resource is healthy.",
            "The resource is unhealthy.",
            "The resource is unresponsive.",
            "The in-guest ML stack is unhealthy.",
            "The node is under maintenance/priority boost caused rescheduling and will resume running once rescheduled."
          ],
          "description": "The health status of the TPU node.",
          "enum": [
            "HEALTH_UNSPECIFIED",
            "HEALTHY",
            "DEPRECATED_UNHEALTHY",
            "TIMEOUT",
            "UNHEALTHY_TENSORFLOW",
            "UNHEALTHY_MAINTENANCE"
          ]
        },
        "network": {
          "type": "string",
          "description": "The name of a network they wish to peer the TPU node to. It must be a preexisting Compute Engine network inside of the project on which this API has been activated. If none is provided, \"default\" will be used."
        },
        "name": {
          "description": "Output only. Immutable. The name of the TPU",
          "readOnly": true,
          "type": "string"
        },
        "symptoms": {
          "type": "array",
          "items": {
            "$ref": "Symptom"
          },
          "readOnly": true,
          "description": "Output only. The Symptoms that have occurred to the TPU Node."
        },
        "tensorflowVersion": {
          "description": "Required. The version of Tensorflow running in the Node.",
          "type": "string"
        },
        "networkEndpoints": {
          "description": "Output only. The network endpoints where TPU workers can be accessed and sent work. It is recommended that Tensorflow clients of the node reach out to the 0th entry in this map first.",
          "items": {
            "$ref": "NetworkEndpoint"
          },
          "type": "array",
          "readOnly": true
        },
        "ipAddress": {
          "type": "string",
          "description": "Output only. DEPRECATED! Use network_endpoints instead. The network address for the TPU Node as visible to Compute Engine instances."
        },
        "schedulingConfig": {
          "description": "The scheduling options for this node.",
          "$ref": "SchedulingConfig"
        },
        "useServiceNetworking": {
          "type": "boolean",
          "description": "Whether the VPC peering for the node is set up through Service Networking API. The VPC Peering should be set up before provisioning the node. If this field is set, cidr_block field should not be specified. If the network, that you want to peer the TPU Node to, is Shared VPC networks, the node must be created with this this field enabled."
        },
        "apiVersion": {
          "enum": [
            "API_VERSION_UNSPECIFIED",
            "V1_ALPHA1",
            "V1",
            "V2_ALPHA1"
          ],
          "type": "string",
          "enumDescriptions": [
            "API version is unknown.",
            "TPU API V1Alpha1 version.",
            "TPU API V1 version.",
            "TPU API V2Alpha1 version."
          ],
          "readOnly": true,
          "description": "Output only. The API version that created this Node."
        },
        "port": {
          "description": "Output only. DEPRECATED! Use network_endpoints instead. The network port for the TPU Node as visible to Compute Engine instances.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "RESTARTING",
            "REIMAGING",
            "DELETING",
            "REPAIRING",
            "STOPPED",
            "STOPPING",
            "STARTING",
            "PREEMPTED",
            "TERMINATED",
            "HIDING",
            "HIDDEN",
            "UNHIDING"
          ],
          "description": "Output only. The current state for the TPU Node.",
          "type": "string",
          "enumDescriptions": [
            "TPU node state is not known/set.",
            "TPU node is being created.",
            "TPU node has been created.",
            "TPU node is restarting.",
            "TPU node is undergoing reimaging.",
            "TPU node is being deleted.",
            "TPU node is being repaired and may be unusable. Details can be found in the `help_description` field.",
            "TPU node is stopped.",
            "TPU node is currently stopping.",
            "TPU node is currently starting.",
            "TPU node has been preempted. Only applies to Preemptible TPU Nodes.",
            "TPU node has been terminated due to maintenance or has reached the end of its life cycle (for preemptible nodes).",
            "TPU node is currently hiding.",
            "TPU node has been hidden.",
            "TPU node is currently unhiding."
          ]
        },
        "createTime": {
          "description": "Output only. The time when the node was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "acceleratorType": {
          "type": "string",
          "description": "Required. The type of hardware accelerators associated with this node."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource labels to represent user-provided metadata.",
          "type": "object"
        },
        "serviceAccount": {
          "description": "Output only. The service account used to run the tensor flow services within the node. To share resources, including Google Cloud Storage data, with the Tensorflow job running in the Node, this account must have permissions to that data.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The user-supplied description of the TPU. Maximum of 512 characters."
        },
        "cidrBlock": {
          "type": "string",
          "description": "The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address). Errors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user's provided network, or the provided network is peered with another network that is using that CIDR block."
        }
      },
      "type": "object",
      "id": "Node"
    },
    "Symptom": {
      "type": "object",
      "description": "A Symptom instance.",
      "properties": {
        "symptomType": {
          "description": "Type of the Symptom.",
          "enum": [
            "SYMPTOM_TYPE_UNSPECIFIED",
            "LOW_MEMORY",
            "OUT_OF_MEMORY",
            "EXECUTE_TIMED_OUT",
            "MESH_BUILD_FAIL",
            "HBM_OUT_OF_MEMORY",
            "PROJECT_ABUSE"
          ],
          "enumDescriptions": [
            "Unspecified symptom.",
            "TPU VM memory is low.",
            "TPU runtime is out of memory.",
            "TPU runtime execution has timed out.",
            "TPU runtime fails to construct a mesh that recognizes each TPU device's neighbors.",
            "TPU HBM is out of memory.",
            "Abusive behaviors have been identified on the current project."
          ],
          "type": "string"
        },
        "details": {
          "type": "string",
          "description": "Detailed information of the current Symptom."
        },
        "workerId": {
          "type": "string",
          "description": "A string used to uniquely distinguish a worker within a TPU node."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp when the Symptom is created."
        }
      },
      "id": "Symptom"
    },
    "ListNodesResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nodes": {
          "type": "array",
          "description": "The listed nodes.",
          "items": {
            "$ref": "Node"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next page token or empty if none."
        }
      },
      "type": "object",
      "id": "ListNodesResponse",
      "description": "Response for ListNodes."
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      }
    },
    "StopNodeRequest": {
      "description": "Request for StopNode.",
      "type": "object",
      "properties": {},
      "id": "StopNodeRequest"
    },
    "OperationMetadata": {
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "target": {
          "type": "string",
          "description": "Target of the operation - for example projects/project-1/connectivityTests/test-1"
        },
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "endTime": {
          "description": "The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version.",
          "type": "string"
        },
        "statusDetail": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "cancelRequested": {
          "type": "boolean",
          "description": "Specifies if cancellation was requested for the operation."
        }
      },
      "id": "OperationMetadata",
      "description": "Metadata describing an Operation",
      "type": "object"
    },
    "ReimageNodeRequest": {
      "properties": {
        "tensorflowVersion": {
          "type": "string",
          "description": "The version for reimage to create."
        }
      },
      "type": "object",
      "id": "ReimageNodeRequest",
      "description": "Request for ReimageNode."
    },
    "TensorFlowVersion": {
      "id": "TensorFlowVersion",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name."
        },
        "version": {
          "type": "string",
          "description": "the tensorflow version."
        }
      },
      "type": "object",
      "description": "A tensorflow version that a Node can be configured with."
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "ListAcceleratorTypesResponse": {
      "description": "Response for ListAcceleratorTypes.",
      "type": "object",
      "id": "ListAcceleratorTypesResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The next page token or empty if none."
        },
        "acceleratorTypes": {
          "items": {
            "$ref": "AcceleratorType"
          },
          "description": "The listed nodes.",
          "type": "array"
        }
      }
    },
    "StartNodeRequest": {
      "id": "StartNodeRequest",
      "type": "object",
      "description": "Request for StartNode.",
      "properties": {}
    },
    "Location": {
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location"
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "id": "Empty"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "NetworkEndpoint": {
      "description": "A network endpoint over which a TPU worker can be reached.",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "The IP address of this network endpoint."
        },
        "port": {
          "format": "int32",
          "description": "The port of this network endpoint.",
          "type": "integer"
        }
      },
      "id": "NetworkEndpoint",
      "type": "object"
    },
    "SchedulingConfig": {
      "id": "SchedulingConfig",
      "properties": {
        "reserved": {
          "type": "boolean",
          "description": "Whether the node is created under a reservation."
        },
        "preemptible": {
          "description": "Defines whether the node is preemptible.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Sets the scheduling options for this node."
    }
  },
  "ownerDomain": "google.com",
  "servicePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "tpu",
  "documentationLink": "https://cloud.google.com/tpu/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "name": {
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "tpu.projects.locations.list"
            },
            "get": {
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "tpu.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              }
            }
          },
          "resources": {
            "tensorflowVersions": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/tensorflowVersions/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "TensorFlowVersion"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tensorflowVersions/{tensorflowVersionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "tpu.projects.locations.tensorflowVersions.get",
                  "httpMethod": "GET",
                  "description": "Gets TensorFlow Version."
                },
                "list": {
                  "description": "List TensorFlow versions supported by this API.",
                  "response": {
                    "$ref": "ListTensorFlowVersionsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource name.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Sort results.",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/tensorflowVersions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "tpu.projects.locations.tensorflowVersions.list",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/tensorflowVersions",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "nodes": {
              "methods": {
                "stop": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Stops a node, this operation is only available with single TPU nodes.",
                  "path": "v1/{+name}:stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:stop",
                  "id": "tpu.projects.locations.nodes.stop",
                  "request": {
                    "$ref": "StopNodeRequest"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The resource name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "POST"
                },
                "list": {
                  "response": {
                    "$ref": "ListNodesResponse"
                  },
                  "id": "tpu.projects.locations.nodes.list",
                  "path": "v1/{+parent}/nodes",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists nodes.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource name.",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "start": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The resource name.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:start",
                  "id": "tpu.projects.locations.nodes.start",
                  "path": "v1/{+name}:start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts a node.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StartNodeRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "path": "v1/{+parent}/nodes",
                  "httpMethod": "POST",
                  "description": "Creates a node.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "tpu.projects.locations.nodes.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "nodeId": {
                      "type": "string",
                      "location": "query",
                      "description": "The unqualified resource name."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Node"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "tpu.projects.locations.nodes.delete",
                  "description": "Deletes a node.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$",
                      "description": "Required. The resource name.",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Node"
                  },
                  "httpMethod": "GET",
                  "id": "tpu.projects.locations.nodes.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "description": "Gets the details of a node."
                },
                "reimage": {
                  "request": {
                    "$ref": "ReimageNodeRequest"
                  },
                  "httpMethod": "POST",
                  "id": "tpu.projects.locations.nodes.reimage",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The resource name.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:reimage",
                  "description": "Reimages a node's OS.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:reimage"
                }
              }
            },
            "acceleratorTypes": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListAcceleratorTypesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource name.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Sort results.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "tpu.projects.locations.acceleratorTypes.list",
                  "description": "Lists accelerator types supported by this API.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes",
                  "path": "v1/{+parent}/acceleratorTypes",
                  "httpMethod": "GET"
                },
                "get": {
                  "path": "v1/{+name}",
                  "id": "tpu.projects.locations.acceleratorTypes.get",
                  "description": "Gets AcceleratorType.",
                  "response": {
                    "$ref": "AcceleratorType"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The resource name.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/acceleratorTypes/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes/{acceleratorTypesId}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "tpu.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:cancel"
                },
                "get": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "id": "tpu.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation's parent resource."
                    }
                  },
                  "id": "tpu.projects.locations.operations.list",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "tpu.projects.locations.operations.delete"
                }
              }
            }
          }
        }
      }
    }
  },
  "description": "TPU API provides customers with access to Google TPU technology.",
  "discoveryVersion": "v1",
  "canonicalName": "TPU",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://tpu.googleapis.com/",
  "protocol": "rest",
  "mtlsRootUrl": "https://tpu.mtls.googleapis.com/",
  "version": "v1",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "id": "tpu:v1",
  "version_module": true,
  "ownerName": "Google",
  "revision": "20220301",
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    }
  }
}

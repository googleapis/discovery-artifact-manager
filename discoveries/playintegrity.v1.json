{
  "rootUrl": "https://playintegrity.googleapis.com/",
  "parameters": {
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/playintegrity": {
          "description": "Private Service: https://www.googleapis.com/auth/playintegrity"
        }
      }
    }
  },
  "baseUrl": "https://playintegrity.googleapis.com/",
  "schemas": {
    "RequestDetails": {
      "properties": {
        "nonce": {
          "type": "string",
          "description": "Required. Nonce that was provided in the request (which is base64 web-safe no-wrap)."
        },
        "requestPackageName": {
          "type": "string",
          "description": "Required. Application package name this attestation was requested for. Note: This field makes no guarantees or promises on the caller integrity. For details on application integrity, check application_integrity."
        },
        "timestampMillis": {
          "type": "string",
          "format": "int64",
          "description": "Required. Timestamp, in milliseconds, of the integrity application request."
        }
      },
      "id": "RequestDetails",
      "description": "Contains the integrity request information.",
      "type": "object"
    },
    "AppIntegrity": {
      "id": "AppIntegrity",
      "description": "Contains the application integrity information.",
      "properties": {
        "versionCode": {
          "format": "int64",
          "description": "Version code of the application. Set iff app_recognition_verdict != UNEVALUATED.",
          "type": "string"
        },
        "packageName": {
          "type": "string",
          "description": "Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED."
        },
        "certificateSha256Digest": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Hex fingerprint of the application signing certificate. e.g. “ABCE1F....” Set iff app_recognition_verdict != UNEVALUATED."
        },
        "appRecognitionVerdict": {
          "enumDescriptions": [
            "Play does not have sufficient information to evaluate app integrity",
            "The app and certificate match the versions distributed by Play.",
            "The certificate or package name does not match Google Play records.",
            "Application integrity was not evaluated since a necessary requirement was missed. For example DeviceIntegrity did not meet the minimum bar."
          ],
          "description": "Required. Details about the app recognition verdict",
          "type": "string",
          "enum": [
            "UNKNOWN",
            "PLAY_RECOGNIZED",
            "UNRECOGNIZED_VERSION",
            "UNEVALUATED"
          ]
        }
      },
      "type": "object"
    },
    "TestingDetails": {
      "id": "TestingDetails",
      "description": "Contains additional information generated for testing responses.",
      "properties": {
        "isTestingResponse": {
          "description": "Required. Indicates that the information contained in this payload is a testing response that is statically overridden for a tester.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AccountRiskVerdict": {
      "properties": {
        "riskLevel": {
          "type": "string",
          "enum": [
            "RISK_LEVEL_UNSPECIFIED",
            "RISK_LEVEL_UNEVALUATED",
            "RISK_LEVEL_RISK",
            "RISK_LEVEL_UNKNOWN",
            "RISK_LEVEL_LOW_RISK",
            "RISK_LEVEL_LOWEST_RISK"
          ],
          "description": "Required. Indicates the account risk level of the current user session.",
          "enumDescriptions": [
            "Risk level has not been set.",
            "The account risk is not evaluated, because the device is not trusted or the user does not have a Play app license.",
            "Play thinks that at least one of the user accounts on the device has some unusual store engagement behavior that could be risky.",
            "Play does not have sufficient information to assess the risk. The account may be new, or it may lack activity on the Play Store.",
            "Play thinks the user could be genuine, since there is some store engagement. However, some signals to support the trust level are missing.",
            "Play thinks the user is more likely to be genuine due to harder to replicate store engagement signals."
          ]
        }
      },
      "id": "AccountRiskVerdict",
      "type": "object",
      "description": "Contains information about account risk that indicates if the current user session seems low risk, unknown, or risky before you allow important actions to proceed."
    },
    "DecodeIntegrityTokenRequest": {
      "type": "object",
      "id": "DecodeIntegrityTokenRequest",
      "description": "Request to decode the integrity token.",
      "properties": {
        "integrityToken": {
          "description": "Encoded integrity token.",
          "type": "string"
        }
      }
    },
    "DeviceIntegrity": {
      "properties": {
        "deviceRecognitionVerdict": {
          "type": "array",
          "items": {
            "enum": [
              "UNKNOWN",
              "MEETS_BASIC_INTEGRITY",
              "MEETS_DEVICE_INTEGRITY",
              "MEETS_STRONG_INTEGRITY",
              "MEETS_VIRTUAL_INTEGRITY"
            ],
            "type": "string",
            "enumDescriptions": [
              "Play does not have sufficient information to evaluate device integrity",
              "App is running on a device that passes basic system integrity checks, but may not meet Android platform compatibility requirements and may not be approved to run Google Play services.",
              "App is running on GMS Android device with Google Play services.",
              "App is running on GMS Android device with Google Play services and has a strong guarantee of system integrity such as a hardware-backed keystore.",
              "App is running on an Android emulator with Google Play services which meets core Android compatibility requirements."
            ]
          },
          "description": "Details about the integrity of the device the app is running on"
        }
      },
      "description": "Contains the device attestation information.",
      "type": "object",
      "id": "DeviceIntegrity"
    },
    "AccountDetails": {
      "description": "Contains the account information such as the licensing status for the user in the scope.",
      "type": "object",
      "properties": {
        "appLicensingVerdict": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "LICENSED",
            "UNLICENSED",
            "UNEVALUATED"
          ],
          "enumDescriptions": [
            "Play does not have sufficient information to evaluate licensing details",
            "The app and certificate match the versions distributed by Play.",
            "The certificate or package name does not match Google Play records.",
            "Licensing details were not evaluated since a necessary requirement was missed. For example DeviceIntegrity did not meet the minimum bar or the application was not a known Play version."
          ],
          "description": "Required. Details about the licensing status of the user for the app in the scope."
        },
        "accountRiskVerdict": {
          "description": "Details about the account risk for the user in the scope. This feature is available only to selected developers.",
          "$ref": "AccountRiskVerdict"
        }
      },
      "id": "AccountDetails"
    },
    "TokenPayloadExternal": {
      "id": "TokenPayloadExternal",
      "properties": {
        "requestDetails": {
          "description": "Required. Details about the integrity request.",
          "$ref": "RequestDetails"
        },
        "appIntegrity": {
          "description": "Required. Details about the application integrity.",
          "$ref": "AppIntegrity"
        },
        "accountDetails": {
          "description": "Required. Details about the Play Store account.",
          "$ref": "AccountDetails"
        },
        "deviceIntegrity": {
          "$ref": "DeviceIntegrity",
          "description": "Required. Details about the device integrity."
        },
        "testingDetails": {
          "description": "Indicates that this payload is generated for testing purposes and contains any additional data that is linked with testing status.",
          "$ref": "TestingDetails"
        }
      },
      "type": "object",
      "description": "Contains basic app information and integrity signals like device attestation and licensing details."
    },
    "DecodeIntegrityTokenResponse": {
      "properties": {
        "tokenPayloadExternal": {
          "description": "Plain token payload generated from the decoded integrity token.",
          "$ref": "TokenPayloadExternal"
        }
      },
      "description": "Response containing the decoded integrity payload.",
      "id": "DecodeIntegrityTokenResponse",
      "type": "object"
    }
  },
  "version": "v1",
  "name": "playintegrity",
  "mtlsRootUrl": "https://playintegrity.mtls.googleapis.com/",
  "id": "playintegrity:v1",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "title": "Google Play Integrity API",
  "basePath": "",
  "description": "Play Integrity",
  "protocol": "rest",
  "revision": "20220816",
  "resources": {
    "v1": {
      "methods": {
        "decodeIntegrityToken": {
          "flatPath": "v1/{v1Id}:decodeIntegrityToken",
          "parameters": {
            "packageName": {
              "location": "path",
              "description": " Package name of the app the attached integrity token belongs to.",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "id": "playintegrity.decodeIntegrityToken",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/playintegrity"
          ],
          "parameterOrder": [
            "packageName"
          ],
          "description": "Decodes the integrity token and returns the token payload.",
          "path": "v1/{+packageName}:decodeIntegrityToken",
          "request": {
            "$ref": "DecodeIntegrityTokenRequest"
          },
          "response": {
            "$ref": "DecodeIntegrityTokenResponse"
          }
        }
      }
    }
  },
  "documentationLink": "https://developer.android.com/google/play/integrity",
  "servicePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "canonicalName": "Play Integrity"
}

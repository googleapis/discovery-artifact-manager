{
  "canonicalName": "Play Integrity",
  "resources": {
    "v1": {
      "methods": {
        "decodeIntegrityToken": {
          "description": "Decodes the integrity token and returns the token payload.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/playintegrity"
          ],
          "flatPath": "v1/{v1Id}:decodeIntegrityToken",
          "id": "playintegrity.decodeIntegrityToken",
          "response": {
            "$ref": "DecodeIntegrityTokenResponse"
          },
          "parameterOrder": [
            "packageName"
          ],
          "parameters": {
            "packageName": {
              "type": "string",
              "description": " Package name of the app the attached integrity token belongs to.",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+$"
            }
          },
          "path": "v1/{+packageName}:decodeIntegrityToken",
          "request": {
            "$ref": "DecodeIntegrityTokenRequest"
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "description": "The Play Integrity API helps you check that you're interacting with your genuine app on a genuine Android device powered by Google Play services. The Play Integrity API has replaced SafetyNet Attestation and Android Device Verification.",
  "documentationLink": "https://developer.android.com/google/play/integrity",
  "version": "v1",
  "title": "Google Play Integrity API",
  "rootUrl": "https://playintegrity.googleapis.com/",
  "discoveryVersion": "v1",
  "version_module": true,
  "id": "playintegrity:v1",
  "ownerDomain": "google.com",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "revision": "20240508",
  "baseUrl": "https://playintegrity.googleapis.com/",
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "name": "playintegrity",
  "schemas": {
    "AccountDetails": {
      "id": "AccountDetails",
      "description": "Contains the account information such as the licensing status for the user in the scope.",
      "properties": {
        "accountActivity": {
          "$ref": "AccountActivity",
          "description": "(Restricted Access) Details about the account activity for the user in the scope."
        },
        "appLicensingVerdict": {
          "type": "string",
          "description": "Required. Details about the licensing status of the user for the app in the scope.",
          "enum": [
            "UNKNOWN",
            "LICENSED",
            "UNLICENSED",
            "UNEVALUATED"
          ],
          "enumDescriptions": [
            "Play does not have sufficient information to evaluate licensing details",
            "The app and certificate match the versions distributed by Play.",
            "The certificate or package name does not match Google Play records.",
            "Licensing details were not evaluated since a necessary requirement was missed. For example DeviceIntegrity did not meet the minimum bar or the application was not a known Play version."
          ]
        }
      },
      "type": "object"
    },
    "DecodeIntegrityTokenRequest": {
      "properties": {
        "integrityToken": {
          "type": "string",
          "description": "Encoded integrity token."
        }
      },
      "id": "DecodeIntegrityTokenRequest",
      "type": "object",
      "description": "Request to decode the integrity token."
    },
    "DeviceIntegrity": {
      "id": "DeviceIntegrity",
      "type": "object",
      "description": "Contains the device attestation information. Next tag: 4",
      "properties": {
        "recentDeviceActivity": {
          "$ref": "RecentDeviceActivity",
          "description": "Details about the device activity of the device the app is running on."
        },
        "deviceRecognitionVerdict": {
          "description": "Details about the integrity of the device the app is running on.",
          "type": "array",
          "items": {
            "enum": [
              "UNKNOWN",
              "MEETS_BASIC_INTEGRITY",
              "MEETS_DEVICE_INTEGRITY",
              "MEETS_STRONG_INTEGRITY",
              "MEETS_VIRTUAL_INTEGRITY"
            ],
            "type": "string",
            "enumDescriptions": [
              "Play does not have sufficient information to evaluate device integrity",
              "App is running on a device that passes basic system integrity checks, but may not meet Android platform compatibility requirements and may not be approved to run Google Play services.",
              "App is running on GMS Android device with Google Play services.",
              "App is running on GMS Android device with Google Play services and has a strong guarantee of system integrity such as a hardware-backed keystore.",
              "App is running on an Android emulator with Google Play services which meets core Android compatibility requirements."
            ]
          }
        }
      }
    },
    "TokenPayloadExternal": {
      "id": "TokenPayloadExternal",
      "properties": {
        "requestDetails": {
          "description": "Required. Details about the integrity request.",
          "$ref": "RequestDetails"
        },
        "environmentDetails": {
          "$ref": "EnvironmentDetails",
          "description": "Details of the environment Play Integrity API runs in."
        },
        "testingDetails": {
          "$ref": "TestingDetails",
          "description": "Indicates that this payload is generated for testing purposes and contains any additional data that is linked with testing status."
        },
        "deviceIntegrity": {
          "$ref": "DeviceIntegrity",
          "description": "Required. Details about the device integrity."
        },
        "accountDetails": {
          "description": "Required. Details about the Play Store account.",
          "$ref": "AccountDetails"
        },
        "appIntegrity": {
          "$ref": "AppIntegrity",
          "description": "Required. Details about the application integrity."
        }
      },
      "description": "Contains basic app information and integrity signals like device attestation and licensing details.",
      "type": "object"
    },
    "AccountActivity": {
      "description": "(Restricted Access) Contains a signal helping apps differentiating between likely genuine and likely non-genuine user traffic.",
      "id": "AccountActivity",
      "properties": {
        "activityLevel": {
          "description": "Required. Indicates the activity level of the account.",
          "enum": [
            "ACTIVITY_LEVEL_UNSPECIFIED",
            "UNEVALUATED",
            "UNUSUAL",
            "UNKNOWN",
            "TYPICAL_BASIC",
            "TYPICAL_STRONG"
          ],
          "type": "string",
          "enumDescriptions": [
            "Activity level has not been set.",
            "Account activity level is not evaluated.",
            "Unusual activity for at least one of the user accounts on the device.",
            "Insufficient activity to verify the user account on the device.",
            "Typical activity for the user account or accounts on the device.",
            "Typical for the user account or accounts on the device, with harder to replicate signals."
          ]
        }
      },
      "type": "object"
    },
    "RequestDetails": {
      "id": "RequestDetails",
      "description": "Contains the integrity request information.",
      "properties": {
        "timestampMillis": {
          "format": "int64",
          "type": "string",
          "description": "Required. Timestamp, in milliseconds, of the integrity application request."
        },
        "requestHash": {
          "description": "Request hash that was provided in the request.",
          "type": "string"
        },
        "nonce": {
          "type": "string",
          "description": "Nonce that was provided in the request (which is base64 web-safe no-wrap)."
        },
        "requestPackageName": {
          "type": "string",
          "description": "Required. Application package name this attestation was requested for. Note: This field makes no guarantees or promises on the caller integrity. For details on application integrity, check application_integrity."
        }
      },
      "type": "object"
    },
    "TestingDetails": {
      "id": "TestingDetails",
      "description": "Contains additional information generated for testing responses.",
      "type": "object",
      "properties": {
        "isTestingResponse": {
          "description": "Required. Indicates that the information contained in this payload is a testing response that is statically overridden for a tester.",
          "type": "boolean"
        }
      }
    },
    "AppAccessRiskVerdict": {
      "type": "object",
      "id": "AppAccessRiskVerdict",
      "properties": {
        "playOrSystemApps": {
          "description": "Deprecated: this field will be removed, please use apps_detected instead. App access risk verdict related to apps that are not installed by the Google Play Store, and are not preloaded on the system image by the device manufacturer.",
          "deprecated": true,
          "enum": [
            "UNKNOWN",
            "UNEVALUATED",
            "NOT_INSTALLED",
            "INSTALLED",
            "CAPTURING",
            "CONTROLLING"
          ],
          "enumDescriptions": [
            "Risk type is unknown.",
            "App access risk was not evaluated because a requirement was missed, such as the device not being trusted enough.",
            "No apps under this field are installed on the device. This is only valid for the other apps field.",
            "One or more apps under this field are installed on the device.",
            "Apps under this field are running that could be used to read or capture inputs and outputs of the requesting app, such as screen recording apps.",
            "Apps under this field are running that could be used to control the device and inputs and outputs of the requesting app, such as remote controlling apps."
          ],
          "type": "string"
        },
        "appsDetected": {
          "items": {
            "enumDescriptions": [
              "Apps detected is unspecified.",
              "One or more apps is installed by Google Play or preloaded on the system partition by the device manufacturer.",
              "One or more apps installed by Google Play or preloaded on the device is running that could be used to read or capture the requesting app, such as a screen recording app.",
              "One or more apps installed by Google Play or preloaded on the device is running that could be used to display overlays over the requesting app.",
              "One or more apps installed by Google Play or preloaded on the device is running that could be used to control the device, such as a remote support app.",
              "One or more unknown apps is installed, that were not installed by Google Play or preloaded on the system partition by the device manufacturer.",
              "One or more unknown apps, which were not installed by Google Play or preloaded on the device, is running that could be used to read or capture the requesting app, such as a screen recording app.",
              "One or more unknown apps, which were not installed by Google Play or preloaded on the device, is running that could be used to display overlays over the requesting app.",
              "One or more unknown apps, which were not installed by Google Play or preloaded on the device, is running that could be used to control the device, such as a remote support app."
            ],
            "type": "string",
            "enum": [
              "APPS_DETECTED_UNSPECIFIED",
              "KNOWN_INSTALLED",
              "KNOWN_CAPTURING",
              "KNOWN_OVERLAYS",
              "KNOWN_CONTROLLING",
              "UNKNOWN_INSTALLED",
              "UNKNOWN_CAPTURING",
              "UNKNOWN_OVERLAYS",
              "UNKNOWN_CONTROLLING"
            ]
          },
          "description": "List of detected app types signalled for App Access Risk.",
          "type": "array"
        },
        "otherApps": {
          "deprecated": true,
          "enum": [
            "UNKNOWN",
            "UNEVALUATED",
            "NOT_INSTALLED",
            "INSTALLED",
            "CAPTURING",
            "CONTROLLING"
          ],
          "description": "Deprecated: this field will be removed, please use apps_detected instead. App access risk verdict related to apps that are not installed by Google Play, and are not preloaded on the system image by the device manufacturer.",
          "type": "string",
          "enumDescriptions": [
            "Risk type is unknown.",
            "App access risk was not evaluated because a requirement was missed, such as the device not being trusted enough.",
            "No apps under this field are installed on the device. This is only valid for the other apps field.",
            "One or more apps under this field are installed on the device.",
            "Apps under this field are running that could be used to read or capture inputs and outputs of the requesting app, such as screen recording apps.",
            "Apps under this field are running that could be used to control the device and inputs and outputs of the requesting app, such as remote controlling apps."
          ]
        }
      },
      "description": "Contains signals about others apps on the device which could be used to access or control the requesting app."
    },
    "EnvironmentDetails": {
      "type": "object",
      "properties": {
        "appAccessRiskVerdict": {
          "$ref": "AppAccessRiskVerdict",
          "description": "The evaluation of the App Access Risk verdicts."
        },
        "playProtectVerdict": {
          "enumDescriptions": [
            "Play Protect verdict has not been set.",
            "Play Protect state was not evaluated. Device may not be trusted.",
            "Play Protect is on and no issues found.",
            "Play Protect is on but no scan has been performed yet. The device or Play Store app may have been reset.",
            "Play Protect is on and warnings found.",
            "Play Protect is on and high severity issues found.",
            "Play Protect is turned off. Turn on Play Protect."
          ],
          "enum": [
            "PLAY_PROTECT_VERDICT_UNSPECIFIED",
            "UNEVALUATED",
            "NO_ISSUES",
            "NO_DATA",
            "MEDIUM_RISK",
            "HIGH_RISK",
            "POSSIBLE_RISK"
          ],
          "type": "string",
          "description": "The evaluation of Play Protect verdict."
        }
      },
      "description": "Contains information about the environment Play Integrity API runs in, e.g. Play Protect verdict.",
      "id": "EnvironmentDetails"
    },
    "DecodeIntegrityTokenResponse": {
      "type": "object",
      "id": "DecodeIntegrityTokenResponse",
      "properties": {
        "tokenPayloadExternal": {
          "description": "Plain token payload generated from the decoded integrity token.",
          "$ref": "TokenPayloadExternal"
        }
      },
      "description": "Response containing the decoded integrity payload."
    },
    "RecentDeviceActivity": {
      "description": "Recent device activity can help developers identify devices that have exhibited hyperactive attestation activity, which could be a sign of an attack or token farming.",
      "type": "object",
      "properties": {
        "deviceActivityLevel": {
          "enumDescriptions": [
            "Device activity level has not been set.",
            "Device activity level has not been evaluated.",
            "Indicates the amount of used tokens. See the documentation for details.",
            "Indicates the amount of used tokens. See the documentation for details.",
            "Indicates the amount of used tokens. See the documentation for details.",
            "Indicates the amount of used tokens. See the documentation for details."
          ],
          "type": "string",
          "description": "Required. Indicates the activity level of the device.",
          "enum": [
            "DEVICE_ACTIVITY_LEVEL_UNSPECIFIED",
            "UNEVALUATED",
            "LEVEL_1",
            "LEVEL_2",
            "LEVEL_3",
            "LEVEL_4"
          ]
        }
      },
      "id": "RecentDeviceActivity"
    },
    "AppIntegrity": {
      "properties": {
        "appRecognitionVerdict": {
          "enum": [
            "UNKNOWN",
            "PLAY_RECOGNIZED",
            "UNRECOGNIZED_VERSION",
            "UNEVALUATED"
          ],
          "description": "Required. Details about the app recognition verdict",
          "type": "string",
          "enumDescriptions": [
            "Play does not have sufficient information to evaluate app integrity",
            "The app and certificate match the versions distributed by Play.",
            "The certificate or package name does not match Google Play records.",
            "Application integrity was not evaluated since a necessary requirement was missed. For example DeviceIntegrity did not meet the minimum bar."
          ]
        },
        "packageName": {
          "description": "Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED.",
          "type": "string"
        },
        "certificateSha256Digest": {
          "type": "array",
          "description": "The SHA256 hash of the requesting app's signing certificates (base64 web-safe encoded). Set iff app_recognition_verdict != UNEVALUATED.",
          "items": {
            "type": "string"
          }
        },
        "versionCode": {
          "description": "Version code of the application. Set iff app_recognition_verdict != UNEVALUATED.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AppIntegrity",
      "description": "Contains the application integrity information."
    }
  },
  "mtlsRootUrl": "https://playintegrity.mtls.googleapis.com/",
  "servicePath": "",
  "parameters": {
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/playintegrity": {
          "description": "Private Service: https://www.googleapis.com/auth/playintegrity"
        }
      }
    }
  }
}

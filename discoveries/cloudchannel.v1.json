{
  "basePath": "",
  "batchPath": "batch",
  "resources": {
    "accounts": {
      "resources": {
        "channelPartnerLinks": {
          "resources": {
            "customers": {
              "methods": {
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "description": "The update mask that applies to the resource. Optional.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}",
                      "location": "path",
                      "required": true,
                      "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+/customers/[^/]+$"
                    }
                  },
                  "description": "Updates an existing Customer resource for the reseller or distributor. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: No Customer resource found for the name in the request. Return value: The updated Customer resource.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "cloudchannel.accounts.channelPartnerLinks.customers.patch",
                  "httpMethod": "PATCH",
                  "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}/customers/{customersId}",
                  "response": {
                    "$ref": "GoogleCloudChannelV1Customer"
                  },
                  "request": {
                    "$ref": "GoogleCloudChannelV1Customer"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ]
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "description": "Creates a new Customer resource under the reseller or distributor account. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * Domain field value doesn't match the primary email domain. Return value: The newly created Customer resource.",
                  "path": "v1/{+parent}/customers",
                  "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}/customers",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of reseller account in which to create the customer. Parent uses the format: accounts/{account_id}",
                      "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "cloudchannel.accounts.channelPartnerLinks.customers.create",
                  "response": {
                    "$ref": "GoogleCloudChannelV1Customer"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudChannelV1Customer"
                  }
                },
                "import": {
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "description": "Imports a Customer from the Cloud Identity associated with the provided Cloud Identity ID or domain before a TransferEntitlements call. If a linked Customer already exists and overwrite_if_exists is true, it will update that Customer's data. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * NOT_FOUND: Cloud Identity doesn't exist or was deleted. * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is expired or invalid. * ALREADY_EXISTS: A customer already exists and has conflicting critical fields. Requires an overwrite. Return value: The Customer.",
                  "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}/customers:import",
                  "id": "cloudchannel.accounts.channelPartnerLinks.customers.import",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+$",
                      "description": "Required. The resource name of the reseller's account. Parent takes the format: accounts/{account_id} or accounts/{account_id}/channelPartnerLinks/{channel_partner_id}",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+parent}/customers:import",
                  "response": {
                    "$ref": "GoogleCloudChannelV1Customer"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudChannelV1ImportCustomerRequest"
                  }
                },
                "delete": {
                  "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}/customers/{customersId}",
                  "id": "cloudchannel.accounts.channelPartnerLinks.customers.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+/customers/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the customer to delete."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "description": "Deletes the given Customer permanently. Possible error codes: * PERMISSION_DENIED: The account making the request does not own this customer. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * FAILED_PRECONDITION: The customer has existing entitlements. * NOT_FOUND: No Customer resource found for the name in the request.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}"
                },
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudChannelV1ListCustomersResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. A token identifying a page of results other than the first page. Obtained through ListCustomersResponse.next_page_token of the previous CloudChannelService.ListCustomers call.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum number of customers to return. The service may return fewer than this value. If unspecified, returns at most 10 customers. The maximum value is 50."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The resource name of the reseller account to list customers from. Parent uses the format: accounts/{account_id}.",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/customers",
                  "id": "cloudchannel.accounts.channelPartnerLinks.customers.list",
                  "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}/customers",
                  "description": "List Customers. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: List of Customers, or an empty list if there are no customers.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "description": "Returns the requested Customer resource. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer resource doesn't exist. Usually the result of an invalid name parameter. Return value: The Customer resource.",
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the customer to retrieve. Name uses the format: accounts/{account_id}/customers/{customer_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+/customers/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudChannelV1Customer"
                  },
                  "id": "cloudchannel.accounts.channelPartnerLinks.customers.get",
                  "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}/customers/{customersId}"
                }
              }
            }
          },
          "methods": {
            "list": {
              "id": "cloudchannel.accounts.channelPartnerLinks.list",
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks",
              "response": {
                "$ref": "GoogleCloudChannelV1ListChannelPartnerLinksResponse"
              },
              "description": "List ChannelPartnerLinks belonging to a distributor. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: The list of the distributor account's ChannelPartnerLink resources.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "path": "v1/{+parent}/channelPartnerLinks",
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "description": "Required. The resource name of the reseller account for listing channel partner links. Parent uses the format: accounts/{account_id}",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Optional. Requested page size. Server might return fewer results than requested. If unspecified, server will pick a default size (25). The maximum value is 200; the server will coerce values above 200."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A token for a page of results other than the first page. Obtained using ListChannelPartnerLinksResponse.next_page_token of the previous CloudChannelService.ListChannelPartnerLinks call."
                },
                "view": {
                  "enum": [
                    "UNSPECIFIED",
                    "BASIC",
                    "FULL"
                  ],
                  "location": "query",
                  "enumDescriptions": [
                    "The default / unset value. The API will default to the BASIC view.",
                    "Includes all fields except the ChannelPartnerLink.channel_partner_cloud_identity_info.",
                    "Includes all fields."
                  ],
                  "type": "string",
                  "description": "Optional. The level of granularity the ChannelPartnerLink will display."
                }
              }
            },
            "patch": {
              "path": "v1/{+name}",
              "id": "cloudchannel.accounts.channelPartnerLinks.patch",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudChannelV1ChannelPartnerLink"
              },
              "request": {
                "$ref": "GoogleCloudChannelV1UpdateChannelPartnerLinkRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The resource name of the channel partner link to cancel. Name uses the format: accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud Identity ID of the partner.",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}",
              "httpMethod": "PATCH",
              "description": "Updates a channel partner link. Distributors call this method to change a link's status. For example, to suspend a partner link. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * Link state cannot change from invited to active or suspended. * Cannot send reseller_cloud_identity_id, invite_url, or name in update mask. * NOT_FOUND: ChannelPartnerLink resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The updated ChannelPartnerLink resource."
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The resource name of the channel partner link to retrieve. Name uses the format: accounts/{account_id}/channelPartnerLinks/{id} where {id} is the Cloud Identity ID of the partner.",
                  "location": "path",
                  "required": true,
                  "pattern": "^accounts/[^/]+/channelPartnerLinks/[^/]+$"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "UNSPECIFIED",
                    "BASIC",
                    "FULL"
                  ],
                  "description": "Optional. The level of granularity the ChannelPartnerLink will display.",
                  "enumDescriptions": [
                    "The default / unset value. The API will default to the BASIC view.",
                    "Includes all fields except the ChannelPartnerLink.channel_partner_cloud_identity_info.",
                    "Includes all fields."
                  ],
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleCloudChannelV1ChannelPartnerLink"
              },
              "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks/{channelPartnerLinksId}",
              "description": "Returns the requested ChannelPartnerLink resource. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: ChannelPartnerLink resource not found because of an invalid channel partner link name. Return value: The ChannelPartnerLink resource.",
              "id": "cloudchannel.accounts.channelPartnerLinks.get"
            },
            "create": {
              "id": "cloudchannel.accounts.channelPartnerLinks.create",
              "parameters": {
                "parent": {
                  "pattern": "^accounts/[^/]+$",
                  "type": "string",
                  "description": "Required. Create a channel partner link for the provided reseller account's resource name. Parent uses the format: accounts/{account_id}",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/channelPartnerLinks",
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudChannelV1ChannelPartnerLink"
              },
              "flatPath": "v1/accounts/{accountsId}/channelPartnerLinks",
              "request": {
                "$ref": "GoogleCloudChannelV1ChannelPartnerLink"
              },
              "description": "Initiates a channel partner link between a distributor and a reseller, or between resellers in an n-tier reseller channel. Invited partners need to follow the invite_link_uri provided in the response to accept. After accepting the invitation, a link is set up between the two parties. You must be a distributor to call this method. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already exists. * NOT_FOUND: No Cloud Identity customer exists for provided domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The new ChannelPartnerLink resource."
            }
          }
        },
        "customers": {
          "resources": {
            "entitlements": {
              "methods": {
                "list": {
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. Requested page size. Server might return fewer results than requested. If unspecified, return at most 50 entitlements. The maximum value is 100; the server will coerce values above 100.",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. The resource name of the reseller's customer account to list entitlements for. Parent uses the format: accounts/{account_id}/customers/{customer_id}",
                      "type": "string",
                      "pattern": "^accounts/[^/]+/customers/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A token for a page of results other than the first page. Obtained using ListEntitlementsResponse.next_page_token of the previous CloudChannelService.ListEntitlements call."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "description": "Lists Entitlements belonging to a customer. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: A list of the customer's Entitlements.",
                  "path": "v1/{+parent}/entitlements",
                  "response": {
                    "$ref": "GoogleCloudChannelV1ListEntitlementsResponse"
                  },
                  "id": "cloudchannel.accounts.customers.entitlements.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "changeParameters": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}:changeParameters",
                  "id": "cloudchannel.accounts.customers.entitlements.changeParameters",
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:changeParameters",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the entitlement to update. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$"
                    }
                  },
                  "description": "Change parameters of the entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. For example, the number of seats being changed is greater than the allowed number of max seats, or decreasing seats for a commitment based plan. * NOT_FOUND: Entitlement resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.",
                  "request": {
                    "$ref": "GoogleCloudChannelV1ChangeParametersRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ]
                },
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Cancels a previously fulfilled entitlement. An entitlement cancellation is a long-running operation. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * FAILED_PRECONDITION: There are Google Cloud projects linked to the Google Cloud entitlement's Cloud Billing subaccount. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace add-ons, or entitlements for Google Cloud's development platform. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The response will contain google.protobuf.Empty on success. The Operation metadata will contain an instance of OperationMetadata.",
                  "parameters": {
                    "name": {
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the entitlement to cancel. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}:cancel",
                  "httpMethod": "POST",
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:cancel",
                  "id": "cloudchannel.accounts.customers.entitlements.cancel",
                  "request": {
                    "$ref": "GoogleCloudChannelV1CancelEntitlementRequest"
                  }
                },
                "changeRenewalSettings": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudChannelV1ChangeRenewalSettingsRequest"
                  },
                  "description": "Updates the renewal settings for an existing customer entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a commitment plan. Can't enable or disable renewals for non-commitment plans. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.",
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:changeRenewalSettings",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the entitlement to update. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:changeRenewalSettings",
                  "id": "cloudchannel.accounts.customers.entitlements.changeRenewalSettings",
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ]
                },
                "lookupOffer": {
                  "parameterOrder": [
                    "entitlement"
                  ],
                  "httpMethod": "GET",
                  "id": "cloudchannel.accounts.customers.entitlements.lookupOffer",
                  "parameters": {
                    "entitlement": {
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the entitlement to retrieve the Offer. Entitlement uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "path": "v1/{+entitlement}:lookupOffer",
                  "response": {
                    "$ref": "GoogleCloudChannelV1Offer"
                  },
                  "description": "Returns the requested Offer resource. Possible error codes: * PERMISSION_DENIED: The entitlement doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement or offer was not found. Return value: The Offer resource.",
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:lookupOffer"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements",
                  "description": "Creates an entitlement for a customer. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * There is already a customer entitlement for a SKU from the same product family. * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact Google Channel support for further troubleshooting. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: * The SKU was already purchased for the customer. * The customer's primary email already exists. Retry after changing the customer's primary contact email. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The domain required for purchasing a SKU has not been verified. * A pre-requisite SKU required to purchase an Add-On SKU is missing. For example, Google Workspace Business Starter is required to purchase Vault or Drive. * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.",
                  "id": "cloudchannel.accounts.customers.entitlements.create",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/customers/[^/]+$",
                      "description": "Required. The resource name of the reseller's customer account in which to create the entitlement. Parent uses the format: accounts/{account_id}/customers/{customer_id}"
                    }
                  },
                  "path": "v1/{+parent}/entitlements",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudChannelV1CreateEntitlementRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "suspend": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Suspends a previously fulfilled entitlement. An entitlement suspension is a long-running operation. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * NOT_ACTIVE: Entitlement is not active. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.",
                  "request": {
                    "$ref": "GoogleCloudChannelV1SuspendEntitlementRequest"
                  },
                  "path": "v1/{+name}:suspend",
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:suspend",
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of the entitlement to suspend. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "cloudchannel.accounts.customers.entitlements.suspend",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "path": "v1/{+name}",
                  "description": "Returns the requested Entitlement resource. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer entitlement was not found. Return value: The requested Entitlement resource.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The resource name of the entitlement to retrieve. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
                      "required": true,
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "response": {
                    "$ref": "GoogleCloudChannelV1Entitlement"
                  },
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "cloudchannel.accounts.customers.entitlements.get"
                },
                "activate": {
                  "description": "Activates a previously suspended entitlement. Entitlements suspended for pending ToS acceptance can't be activated using this method. An entitlement activation is a long-running operation and it updates the state of the customer entitlement. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated suspensions and entitlements that have accepted the TOS. * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE state. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "id": "cloudchannel.accounts.customers.entitlements.activate",
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:activate",
                  "path": "v1/{+name}:activate",
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "request": {
                    "$ref": "GoogleCloudChannelV1ActivateEntitlementRequest"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name of the entitlement to activate. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "changeOffer": {
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:changeOffer",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the entitlement to update. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
                      "type": "string"
                    }
                  },
                  "description": "Updates the Offer for an existing customer entitlement. An entitlement update is a long-running operation and it updates the entitlement as a result of fulfillment. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Offer or Entitlement resource not found. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:changeOffer",
                  "id": "cloudchannel.accounts.customers.entitlements.changeOffer",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudChannelV1ChangeOfferRequest"
                  }
                },
                "startPaidService": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "cloudchannel.accounts.customers.entitlements.startPaidService",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/apps.order"
                  ],
                  "path": "v1/{+name}:startPaidService",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^accounts/[^/]+/customers/[^/]+/entitlements/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the entitlement to start a paid service for. Name uses the format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudChannelV1StartPaidServiceRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/accounts/{accountsId}/customers/{customersId}/entitlements/{entitlementsId}:startPaidService",
                  "description": "Starts paid service for a trial entitlement. Starts paid service for a trial entitlement immediately. This method is only applicable if a plan is set up for a trial entitlement but has some trial days remaining. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: Entitlement resource not found. * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for entitlement on trial plans. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata."
                }
              }
            }
          },
          "methods": {
            "patch": {
              "path": "v1/{+name}",
              "description": "Updates an existing Customer resource for the reseller or distributor. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: No Customer resource found for the name in the request. Return value: The updated Customer resource.",
              "parameters": {
                "name": {
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "description": "Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "The update mask that applies to the resource. Optional.",
                  "type": "string"
                }
              },
              "id": "cloudchannel.accounts.customers.patch",
              "response": {
                "$ref": "GoogleCloudChannelV1Customer"
              },
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "request": {
                "$ref": "GoogleCloudChannelV1Customer"
              }
            },
            "provisionCloudIdentity": {
              "id": "cloudchannel.accounts.customers.provisionCloudIdentity",
              "parameterOrder": [
                "customer"
              ],
              "path": "v1/{+customer}:provisionCloudIdentity",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "description": "Creates a Cloud Identity for the given customer using the customer's information, or the information provided here. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer was not found. * ALREADY_EXISTS: The customer's primary email already exists. Retry after changing the customer's primary contact email. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata contains an instance of OperationMetadata.",
              "httpMethod": "POST",
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}:provisionCloudIdentity",
              "request": {
                "$ref": "GoogleCloudChannelV1ProvisionCloudIdentityRequest"
              },
              "parameters": {
                "customer": {
                  "required": true,
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "description": "Required. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}",
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ]
            },
            "list": {
              "path": "v1/{+parent}/customers",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "description": "List Customers. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: List of Customers, or an empty list if there are no customers.",
              "response": {
                "$ref": "GoogleCloudChannelV1ListCustomersResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/accounts/{accountsId}/customers",
              "id": "cloudchannel.accounts.customers.list",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The resource name of the reseller account to list customers from. Parent uses the format: accounts/{account_id}.",
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A token identifying a page of results other than the first page. Obtained through ListCustomersResponse.next_page_token of the previous CloudChannelService.ListCustomers call."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Optional. The maximum number of customers to return. The service may return fewer than this value. If unspecified, returns at most 10 customers. The maximum value is 50.",
                  "format": "int32"
                }
              }
            },
            "transferEntitlementsToGoogle": {
              "id": "cloudchannel.accounts.customers.transferEntitlementsToGoogle",
              "description": "Transfers customer entitlements from their current reseller to Google. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: The SKU was already transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but the domain is not verified. * An Add-On SKU (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite Basic). * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The response will contain google.protobuf.Empty on success. The Operation metadata will contain an instance of OperationMetadata.",
              "path": "v1/{+parent}:transferEntitlementsToGoogle",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "request": {
                "$ref": "GoogleCloudChannelV1TransferEntitlementsToGoogleRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The resource name of the reseller's customer account where the entitlements transfer from. Parent uses the format: accounts/{account_id}/customers/{customer_id}",
                  "type": "string"
                }
              },
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}:transferEntitlementsToGoogle",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST"
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudChannelV1Customer"
              },
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "path": "v1/{+name}",
              "id": "cloudchannel.accounts.customers.get",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "description": "Required. The resource name of the customer to retrieve. Name uses the format: accounts/{account_id}/customers/{customer_id}",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Returns the requested Customer resource. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer resource doesn't exist. Usually the result of an invalid name parameter. Return value: The Customer resource.",
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}",
              "parameterOrder": [
                "name"
              ]
            },
            "listPurchasableSkus": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "parameterOrder": [
                "customer"
              ],
              "path": "v1/{+customer}:listPurchasableSkus",
              "parameters": {
                "changeOfferPurchase.entitlement": {
                  "type": "string",
                  "description": "Required. Resource name of the entitlement. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
                  "location": "query"
                },
                "languageCode": {
                  "description": "Optional. The BCP-47 language code. For example, \"en-US\". The response will localize in the corresponding language code, if specified. The default value is \"en-US\".",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Optional. A token for a page of results other than the first page.",
                  "location": "query"
                },
                "createEntitlementPurchase.product": {
                  "description": "Required. List SKUs belonging to this Product. Format: products/{product_id}. Supports products/- to retrieve SKUs for all products.",
                  "location": "query",
                  "type": "string"
                },
                "changeOfferPurchase.changeType": {
                  "enumDescriptions": [
                    "Not used.",
                    "SKU is an upgrade on the current entitlement.",
                    "SKU is a downgrade on the current entitlement."
                  ],
                  "enum": [
                    "CHANGE_TYPE_UNSPECIFIED",
                    "UPGRADE",
                    "DOWNGRADE"
                  ],
                  "type": "string",
                  "location": "query",
                  "description": "Required. Change Type for the entitlement."
                },
                "pageSize": {
                  "description": "Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 SKUs. The maximum value is 1000; the server will coerce values above 1000.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "customer": {
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The resource name of the customer to list SKUs for. Format: accounts/{account_id}/customers/{customer_id}.",
                  "location": "path"
                }
              },
              "id": "cloudchannel.accounts.customers.listPurchasableSkus",
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}:listPurchasableSkus",
              "response": {
                "$ref": "GoogleCloudChannelV1ListPurchasableSkusResponse"
              },
              "description": "Lists the following: * SKUs that you can purchase for a customer * SKUs that you can upgrade or downgrade for an entitlement. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid."
            },
            "import": {
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudChannelV1Customer"
              },
              "request": {
                "$ref": "GoogleCloudChannelV1ImportCustomerRequest"
              },
              "path": "v1/{+parent}/customers:import",
              "httpMethod": "POST",
              "flatPath": "v1/accounts/{accountsId}/customers:import",
              "id": "cloudchannel.accounts.customers.import",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The resource name of the reseller's account. Parent takes the format: accounts/{account_id} or accounts/{account_id}/channelPartnerLinks/{channel_partner_id}",
                  "required": true,
                  "location": "path",
                  "pattern": "^accounts/[^/]+$"
                }
              },
              "description": "Imports a Customer from the Cloud Identity associated with the provided Cloud Identity ID or domain before a TransferEntitlements call. If a linked Customer already exists and overwrite_if_exists is true, it will update that Customer's data. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * NOT_FOUND: Cloud Identity doesn't exist or was deleted. * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is expired or invalid. * ALREADY_EXISTS: A customer already exists and has conflicting critical fields. Requires an overwrite. Return value: The Customer."
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "path": "v1/{+parent}/customers",
              "request": {
                "$ref": "GoogleCloudChannelV1Customer"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of reseller account in which to create the customer. Parent uses the format: accounts/{account_id}",
                  "type": "string",
                  "pattern": "^accounts/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudChannelV1Customer"
              },
              "id": "cloudchannel.accounts.customers.create",
              "flatPath": "v1/accounts/{accountsId}/customers",
              "httpMethod": "POST",
              "description": "Creates a new Customer resource under the reseller or distributor account. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: * Required request parameters are missing or invalid. * Domain field value doesn't match the primary email domain. Return value: The newly created Customer resource.",
              "parameterOrder": [
                "parent"
              ]
            },
            "listPurchasableOffers": {
              "response": {
                "$ref": "GoogleCloudChannelV1ListPurchasableOffersResponse"
              },
              "id": "cloudchannel.accounts.customers.listPurchasableOffers",
              "parameters": {
                "pageSize": {
                  "description": "Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 Offers. The maximum value is 1000; the server will coerce values above 1000.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "customer": {
                  "type": "string",
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The resource name of the customer to list Offers for. Format: accounts/{account_id}/customers/{customer_id}."
                },
                "changeOfferPurchase.newSku": {
                  "description": "Optional. Resource name of the new target SKU. Provide this SKU when upgrading or downgrading an entitlement. Format: products/{product_id}/skus/{sku_id}",
                  "location": "query",
                  "type": "string"
                },
                "changeOfferPurchase.entitlement": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. Resource name of the entitlement. Format: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}"
                },
                "languageCode": {
                  "description": "Optional. The BCP-47 language code. For example, \"en-US\". The response will localize in the corresponding language code, if specified. The default value is \"en-US\".",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. A token for a page of results other than the first page."
                },
                "createEntitlementPurchase.sku": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. SKU that the result should be restricted to. Format: products/{product_id}/skus/{sku_id}."
                }
              },
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}:listPurchasableOffers",
              "description": "Lists the following: * Offers that you can purchase for a customer. * Offers that you can change for an entitlement. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller * INVALID_ARGUMENT: Required request parameters are missing or invalid.",
              "path": "v1/{+customer}:listPurchasableOffers",
              "parameterOrder": [
                "customer"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "httpMethod": "GET"
            },
            "transferEntitlements": {
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudChannelV1TransferEntitlementsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}:transferEntitlements",
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the reseller's customer account that will receive transferred entitlements. Parent uses the format: accounts/{account_id}/customers/{customer_id}",
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "path": "v1/{+parent}:transferEntitlements",
              "id": "cloudchannel.accounts.customers.transferEntitlements",
              "description": "Transfers customer entitlements to new reseller. Possible error codes: * PERMISSION_DENIED: The customer doesn't belong to the reseller. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The customer or offer resource was not found. * ALREADY_EXISTS: The SKU was already transferred for the customer. * CONDITION_NOT_MET or FAILED_PRECONDITION: * The SKU requires domain verification to transfer, but the domain is not verified. * An Add-On SKU (example, Vault or Drive) is missing the pre-requisite SKU (example, G Suite Basic). * (Developer accounts only) Reseller and resold domain must meet the following naming requirements: * Domain names must start with goog-test. * Domain names must include the reseller domain. * Specify all transferring entitlements. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The ID of a long-running operation. To get the results of the operation, call the GetOperation method of CloudChannelOperationsService. The Operation metadata will contain an instance of OperationMetadata."
            },
            "delete": {
              "parameters": {
                "name": {
                  "pattern": "^accounts/[^/]+/customers/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The resource name of the customer to delete.",
                  "required": true
                }
              },
              "description": "Deletes the given Customer permanently. Possible error codes: * PERMISSION_DENIED: The account making the request does not own this customer. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * FAILED_PRECONDITION: The customer has existing entitlements. * NOT_FOUND: No Customer resource found for the name in the request.",
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "id": "cloudchannel.accounts.customers.delete",
              "flatPath": "v1/accounts/{accountsId}/customers/{customersId}",
              "path": "v1/{+name}",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "offers": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "description": "Lists the Offers the reseller can sell. Possible error codes: * INVALID_ARGUMENT: Required request parameters are missing or invalid.",
              "path": "v1/{+parent}/offers",
              "response": {
                "$ref": "GoogleCloudChannelV1ListOffersResponse"
              },
              "flatPath": "v1/accounts/{accountsId}/offers",
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "description": "Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 500 Offers. The maximum value is 1000; the server will coerce values above 1000.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "languageCode": {
                  "location": "query",
                  "description": "Optional. The BCP-47 language code. For example, \"en-US\". The response will localize in the corresponding language code, if specified. The default value is \"en-US\".",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A token for a page of results other than the first page."
                },
                "parent": {
                  "location": "path",
                  "pattern": "^accounts/[^/]+$",
                  "description": "Required. The resource name of the reseller account from which to list Offers. Parent uses the format: accounts/{account_id}.",
                  "type": "string",
                  "required": true
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. The expression to filter results by name (name of the Offer), sku.name (name of the SKU), or sku.product.name (name of the Product). Example 1: sku.product.name=products/p1 AND sku.name!=products/p1/skus/s1 Example 2: name=accounts/a1/offers/o1"
                }
              },
              "id": "cloudchannel.accounts.offers.list"
            }
          }
        }
      },
      "methods": {
        "listTransferableOffers": {
          "id": "cloudchannel.accounts.listTransferableOffers",
          "httpMethod": "POST",
          "description": "List TransferableOffers of a customer based on Cloud Identity ID or Customer Name in the request. Use this method when a reseller gets the entitlement information of an unowned customer. The reseller should provide the customer's Cloud Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller and has no auth token. * The supplied auth token is invalid. * The reseller account making the request is different from the reseller account in the query. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: List of TransferableOffer for the given customer and SKU.",
          "parameterOrder": [
            "parent"
          ],
          "path": "v1/{+parent}:listTransferableOffers",
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "parameters": {
            "parent": {
              "pattern": "^accounts/[^/]+$",
              "type": "string",
              "required": true,
              "description": "Required. The resource name of the reseller's account.",
              "location": "path"
            }
          },
          "request": {
            "$ref": "GoogleCloudChannelV1ListTransferableOffersRequest"
          },
          "response": {
            "$ref": "GoogleCloudChannelV1ListTransferableOffersResponse"
          },
          "flatPath": "v1/accounts/{accountsId}:listTransferableOffers"
        },
        "register": {
          "response": {
            "$ref": "GoogleCloudChannelV1RegisterSubscriberResponse"
          },
          "httpMethod": "POST",
          "flatPath": "v1/accounts/{accountsId}:register",
          "path": "v1/{+account}:register",
          "parameters": {
            "account": {
              "pattern": "^accounts/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. Resource name of the account."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "request": {
            "$ref": "GoogleCloudChannelV1RegisterSubscriberRequest"
          },
          "parameterOrder": [
            "account"
          ],
          "id": "cloudchannel.accounts.register",
          "description": "Registers a service account with subscriber privileges on the Cloud Pub/Sub topic for this Channel Services account. After you create a subscriber, you get the events through SubscriberEvent Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The topic name with the registered service email address."
        },
        "listSubscribers": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "path": "v1/{+account}:listSubscribers",
          "parameterOrder": [
            "account"
          ],
          "response": {
            "$ref": "GoogleCloudChannelV1ListSubscribersResponse"
          },
          "id": "cloudchannel.accounts.listSubscribers",
          "httpMethod": "GET",
          "description": "Lists service accounts with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: A list of service email addresses.",
          "flatPath": "v1/accounts/{accountsId}:listSubscribers",
          "parameters": {
            "pageSize": {
              "format": "int32",
              "description": "Optional. The maximum number of service accounts to return. The service may return fewer than this value. If unspecified, returns at most 100 service accounts. The maximum value is 1000; the server will coerce values above 1000.",
              "type": "integer",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "Optional. A page token, received from a previous `ListSubscribers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscribers` must match the call that provided the page token.",
              "type": "string"
            },
            "account": {
              "location": "path",
              "pattern": "^accounts/[^/]+$",
              "type": "string",
              "required": true,
              "description": "Required. Resource name of the account."
            }
          }
        },
        "unregister": {
          "description": "Unregisters a service account with subscriber privileges on the Cloud Pub/Sub topic created for this Channel Services account. If there are no service accounts left with subscriber privileges, this deletes the topic. You can call ListSubscribers to check for these accounts. Possible error codes: * PERMISSION_DENIED: The reseller account making the request and the provided reseller account are different, or the impersonated user is not a super admin. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * NOT_FOUND: The topic resource doesn't exist. * INTERNAL: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. * UNKNOWN: Any non-user error related to a technical issue in the backend. Contact Cloud Channel support. Return value: The topic name that unregistered the service email address. Returns a success response if the service email address wasn't registered with the topic.",
          "path": "v1/{+account}:unregister",
          "request": {
            "$ref": "GoogleCloudChannelV1UnregisterSubscriberRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "parameterOrder": [
            "account"
          ],
          "parameters": {
            "account": {
              "type": "string",
              "pattern": "^accounts/[^/]+$",
              "location": "path",
              "required": true,
              "description": "Required. Resource name of the account."
            }
          },
          "response": {
            "$ref": "GoogleCloudChannelV1UnregisterSubscriberResponse"
          },
          "id": "cloudchannel.accounts.unregister",
          "flatPath": "v1/accounts/{accountsId}:unregister",
          "httpMethod": "POST"
        },
        "checkCloudIdentityAccountsExist": {
          "path": "v1/{+parent}:checkCloudIdentityAccountsExist",
          "id": "cloudchannel.accounts.checkCloudIdentityAccountsExist",
          "request": {
            "$ref": "GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest"
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse"
          },
          "parameters": {
            "parent": {
              "pattern": "^accounts/[^/]+$",
              "required": true,
              "type": "string",
              "description": "Required. The reseller account's resource name. Parent uses the format: accounts/{account_id}",
              "location": "path"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "description": "Confirms the existence of Cloud Identity accounts based on the domain and if the Cloud Identity accounts are owned by the reseller. Possible error codes: * PERMISSION_DENIED: The reseller account making the request is different from the reseller account in the API request. * INVALID_ARGUMENT: Required request parameters are missing or invalid. * INVALID_VALUE: Invalid domain value in the request. Return value: A list of CloudIdentityCustomerAccount resources for the domain (may be empty) Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if no CloudIdentityCustomerAccount resources match the domain.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "flatPath": "v1/accounts/{accountsId}:checkCloudIdentityAccountsExist"
        },
        "listTransferableSkus": {
          "parameterOrder": [
            "parent"
          ],
          "request": {
            "$ref": "GoogleCloudChannelV1ListTransferableSkusRequest"
          },
          "response": {
            "$ref": "GoogleCloudChannelV1ListTransferableSkusResponse"
          },
          "description": "List TransferableSkus of a customer based on the Cloud Identity ID or Customer Name in the request. Use this method to list the entitlements information of an unowned customer. You should provide the customer's Cloud Identity ID or Customer Name. Possible error codes: * PERMISSION_DENIED: * The customer doesn't belong to the reseller and has no auth token. * The supplied auth token is invalid. * The reseller account making the request is different from the reseller account in the query. * INVALID_ARGUMENT: Required request parameters are missing or invalid. Return value: A list of the customer's TransferableSku.",
          "path": "v1/{+parent}:listTransferableSkus",
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "parameters": {
            "parent": {
              "description": "Required. The reseller account's resource name. Parent uses the format: accounts/{account_id}",
              "required": true,
              "location": "path",
              "pattern": "^accounts/[^/]+$",
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "flatPath": "v1/accounts/{accountsId}:listTransferableSkus",
          "id": "cloudchannel.accounts.listTransferableSkus"
        }
      }
    },
    "products": {
      "resources": {
        "skus": {
          "methods": {
            "list": {
              "response": {
                "$ref": "GoogleCloudChannelV1ListSkusResponse"
              },
              "description": "Lists the SKUs for a product the reseller is authorized to sell. Possible error codes: * INVALID_ARGUMENT: Required request parameters are missing or invalid.",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/apps.order"
              ],
              "id": "cloudchannel.products.skus.list",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 SKUs. The maximum value is 1000; the server will coerce values above 1000."
                },
                "pageToken": {
                  "description": "Optional. A token for a page of results other than the first page. Optional.",
                  "location": "query",
                  "type": "string"
                },
                "languageCode": {
                  "description": "Optional. The BCP-47 language code. For example, \"en-US\". The response will localize in the corresponding language code, if specified. The default value is \"en-US\".",
                  "location": "query",
                  "type": "string"
                },
                "account": {
                  "description": "Required. Resource name of the reseller. Format: accounts/{account_id}.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^products/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The resource name of the Product to list SKUs for. Parent uses the format: products/{product_id}. Supports products/- to retrieve SKUs for all products."
                }
              },
              "flatPath": "v1/products/{productsId}/skus",
              "path": "v1/{+parent}/skus",
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "list": {
          "parameters": {
            "pageSize": {
              "type": "integer",
              "format": "int32",
              "description": "Optional. Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 Products. The maximum value is 1000; the server will coerce values above 1000.",
              "location": "query"
            },
            "account": {
              "type": "string",
              "location": "query",
              "description": "Required. The resource name of the reseller account. Format: accounts/{account_id}."
            },
            "languageCode": {
              "location": "query",
              "description": "Optional. The BCP-47 language code. For example, \"en-US\". The response will localize in the corresponding language code, if specified. The default value is \"en-US\".",
              "type": "string"
            },
            "pageToken": {
              "description": "Optional. A token for a page of results other than the first page.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "GoogleCloudChannelV1ListProductsResponse"
          },
          "path": "v1/products",
          "id": "cloudchannel.products.list",
          "description": "Lists the Products the reseller is authorized to sell. Possible error codes: * INVALID_ARGUMENT: Required request parameters are missing or invalid.",
          "flatPath": "v1/products",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "parameterOrder": []
        }
      }
    },
    "operations": {
      "methods": {
        "delete": {
          "id": "cloudchannel.operations.delete",
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "description": "The name of the operation resource to be deleted.",
              "pattern": "^operations/.*$",
              "required": true
            }
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "path": "v1/{+name}"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "description": "The name of the operation resource.",
              "pattern": "^operations/.*$",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "path": "v1/{+name}",
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "id": "cloudchannel.operations.get"
        },
        "list": {
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^operations$",
              "description": "The name of the operation's parent resource.",
              "location": "path"
            },
            "pageSize": {
              "type": "integer",
              "description": "The standard list page size.",
              "format": "int32",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            },
            "filter": {
              "type": "string",
              "description": "The standard list filter.",
              "location": "query"
            }
          },
          "flatPath": "v1/operations",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleLongrunningListOperationsResponse"
          },
          "id": "cloudchannel.operations.list",
          "path": "v1/{+name}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ]
        },
        "cancel": {
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "id": "cloudchannel.operations.cancel",
          "parameters": {
            "name": {
              "type": "string",
              "description": "The name of the operation resource to be cancelled.",
              "pattern": "^operations/.*$",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/apps.order"
          ],
          "request": {
            "$ref": "GoogleLongrunningCancelOperationRequest"
          },
          "flatPath": "v1/operations/{operationsId}:cancel",
          "path": "v1/{+name}:cancel",
          "httpMethod": "POST"
        }
      }
    }
  },
  "version": "v1",
  "documentationLink": "https://cloud.google.com/channel",
  "ownerDomain": "google.com",
  "servicePath": "",
  "title": "Cloud Channel API",
  "discoveryVersion": "v1",
  "schemas": {
    "GoogleCloudChannelV1ListTransferableSkusResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass to ListTransferableSkusRequest.page_token to obtain that page.",
          "type": "string"
        },
        "transferableSkus": {
          "description": "Information about existing SKUs for a customer that needs a transfer.",
          "items": {
            "$ref": "GoogleCloudChannelV1TransferableSku"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudChannelV1ListTransferableSkusResponse",
      "type": "object",
      "description": "Response message for CloudChannelService.ListTransferableSkus."
    },
    "GoogleTypePostalAddress": {
      "type": "object",
      "id": "GoogleTypePostalAddress",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\"."
        },
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
          "type": "string"
        },
        "recipients": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
          "type": "array"
        },
        "administrativeArea": {
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated.",
          "type": "string"
        },
        "addressLines": {
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization": {
          "type": "string",
          "description": "Optional. The name of the organization at the address."
        },
        "sublocality": {
          "type": "string",
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
        },
        "locality": {
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines.",
          "type": "string"
        },
        "regionCode": {
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.",
          "type": "string"
        },
        "revision": {
          "type": "integer",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions.",
          "format": "int32"
        },
        "sortingCode": {
          "type": "string",
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire)."
        }
      },
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478"
    },
    "GoogleCloudChannelV1alpha1TrialSettings": {
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com).",
          "format": "google-datetime"
        },
        "trial": {
          "description": "Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudChannelV1alpha1TrialSettings",
      "description": "Settings for trial offers.",
      "type": "object"
    },
    "GoogleCloudChannelV1alpha1AssociationInfo": {
      "description": "Association links that an entitlement has to other entitlements.",
      "properties": {
        "baseEntitlement": {
          "description": "The name of the base entitlement, for which this entitlement is an add-on.",
          "type": "string"
        }
      },
      "id": "GoogleCloudChannelV1alpha1AssociationInfo",
      "type": "object"
    },
    "GoogleCloudChannelV1Sku": {
      "type": "object",
      "description": "Represents a product's purchasable Stock Keeping Unit (SKU). SKUs represent the different variations of the product. For example, Google Workspace Business Standard and Google Workspace Business Plus are Google Workspace product SKUs.",
      "id": "GoogleCloudChannelV1Sku",
      "properties": {
        "marketingInfo": {
          "$ref": "GoogleCloudChannelV1MarketingInfo",
          "description": "Marketing information for the SKU."
        },
        "product": {
          "description": "Product the SKU is associated with.",
          "$ref": "GoogleCloudChannelV1Product"
        },
        "name": {
          "type": "string",
          "description": "Resource Name of the SKU. Format: products/{product_id}/skus/{sku_id}"
        }
      }
    },
    "GoogleCloudChannelV1ListOffersResponse": {
      "properties": {
        "offers": {
          "description": "The list of Offers requested.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1Offer"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results."
        }
      },
      "description": "Response message for ListOffers.",
      "id": "GoogleCloudChannelV1ListOffersResponse",
      "type": "object"
    },
    "GoogleCloudChannelV1ListPurchasableSkusResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.",
          "type": "string"
        },
        "purchasableSkus": {
          "items": {
            "$ref": "GoogleCloudChannelV1PurchasableSku"
          },
          "type": "array",
          "description": "The list of SKUs requested."
        }
      },
      "id": "GoogleCloudChannelV1ListPurchasableSkusResponse",
      "type": "object",
      "description": "Response message for ListPurchasableSkus."
    },
    "GoogleCloudChannelV1ParameterDefinition": {
      "description": "Parameter's definition. Specifies what parameter is required to use the current Offer to purchase.",
      "type": "object",
      "id": "GoogleCloudChannelV1ParameterDefinition",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the parameter."
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1Value"
          },
          "description": "If not empty, parameter values must be drawn from this list. For example, [us-west1, us-west2, ...] Applicable to STRING parameter type."
        },
        "optional": {
          "type": "boolean",
          "description": "If set to true, parameter is optional to purchase this Offer."
        },
        "parameterType": {
          "type": "string",
          "description": "Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here.",
          "enum": [
            "PARAMETER_TYPE_UNSPECIFIED",
            "INT64",
            "STRING",
            "DOUBLE"
          ],
          "enumDescriptions": [
            "Not used.",
            "Int64 type.",
            "String type.",
            "Double type."
          ]
        },
        "minValue": {
          "description": "Minimal value of the parameter, if applicable. Inclusive. For example, minimal commitment when purchasing Anthos is 0.01. Applicable to INT64 and DOUBLE parameter types.",
          "$ref": "GoogleCloudChannelV1Value"
        },
        "maxValue": {
          "$ref": "GoogleCloudChannelV1Value",
          "description": "Maximum value of the parameter, if applicable. Inclusive. For example, maximum seats when purchasing Google Workspace Business Standard. Applicable to INT64 and DOUBLE parameter types."
        }
      }
    },
    "GoogleCloudChannelV1TransferEntitlementsRequest": {
      "properties": {
        "authToken": {
          "type": "string",
          "description": "The super admin of the resold customer generates this token to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. You can omit this token after authorization. See https://support.google.com/a/answer/7643790 for more details."
        },
        "entitlements": {
          "type": "array",
          "description": "Required. The new entitlements to create or transfer.",
          "items": {
            "$ref": "GoogleCloudChannelV1Entitlement"
          }
        },
        "requestId": {
          "type": "string",
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`)."
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1TransferEntitlementsRequest",
      "description": "Request message for CloudChannelService.TransferEntitlements."
    },
    "GoogleCloudChannelV1alpha1OperationMetadata": {
      "properties": {
        "operationType": {
          "type": "string",
          "enumDescriptions": [
            "Not used.",
            "Long Running Operation was triggered by CreateEntitlement.",
            "Long Running Operation was triggered by ChangeQuantity.",
            "Long Running Operation was triggered by ChangeRenewalSettings.",
            "Long Running Operation was triggered by ChangePlan.",
            "Long Running Operation was triggered by StartPaidService.",
            "Long Running Operation was triggered by ChangeSku.",
            "Long Running Operation was triggered by ActivateEntitlement.",
            "Long Running Operation was triggered by SuspendEntitlement.",
            "Long Running Operation was triggered by CancelEntitlement.",
            "Long Running Operation was triggered by TransferEntitlements.",
            "Long Running Operation was triggered by TransferEntitlementsToGoogle.",
            "Long Running Operation was triggered by ChangeOffer.",
            "Long Running Operation was triggered by ChangeParameters.",
            "Long Running Operation was triggered by ProvisionCloudIdentity."
          ],
          "description": "The RPC that initiated this Long Running Operation.",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATE_ENTITLEMENT",
            "CHANGE_QUANTITY",
            "CHANGE_RENEWAL_SETTINGS",
            "CHANGE_PLAN",
            "START_PAID_SERVICE",
            "CHANGE_SKU",
            "ACTIVATE_ENTITLEMENT",
            "SUSPEND_ENTITLEMENT",
            "CANCEL_ENTITLEMENT",
            "TRANSFER_ENTITLEMENTS",
            "TRANSFER_ENTITLEMENTS_TO_GOOGLE",
            "CHANGE_OFFER",
            "CHANGE_PARAMETERS",
            "PROVISION_CLOUD_IDENTITY"
          ]
        }
      },
      "type": "object",
      "description": "Provides contextual information about a google.longrunning.Operation.",
      "id": "GoogleCloudChannelV1alpha1OperationMetadata"
    },
    "GoogleCloudChannelV1TrialSettings": {
      "id": "GoogleCloudChannelV1TrialSettings",
      "properties": {
        "trial": {
          "type": "boolean",
          "description": "Determines if the entitlement is in a trial or not: * `true` - The entitlement is in trial. * `false` - The entitlement is not in trial."
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example [Epoch converter](https://www.epochconverter.com).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Settings for trial offers."
    },
    "GoogleCloudChannelV1ChangeParametersRequest": {
      "properties": {
        "purchaseOrderId": {
          "type": "string",
          "description": "Optional. Purchase order ID provided by the reseller."
        },
        "parameters": {
          "type": "array",
          "description": "Required. Entitlement parameters to update. You can only change editable parameters. To view the available Parameters for a request, refer to the Offer.parameter_definitions from the desired offer.",
          "items": {
            "$ref": "GoogleCloudChannelV1Parameter"
          }
        },
        "requestId": {
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).",
          "type": "string"
        }
      },
      "description": "Request message for CloudChannelService.ChangeParametersRequest.",
      "id": "GoogleCloudChannelV1ChangeParametersRequest",
      "type": "object"
    },
    "GoogleCloudChannelV1ChangeRenewalSettingsRequest": {
      "description": "Request message for CloudChannelService.ChangeRenewalSettings.",
      "properties": {
        "requestId": {
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).",
          "type": "string"
        },
        "renewalSettings": {
          "description": "Required. New renewal settings.",
          "$ref": "GoogleCloudChannelV1RenewalSettings"
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1ChangeRenewalSettingsRequest"
    },
    "GoogleCloudChannelV1TransferableOffer": {
      "id": "GoogleCloudChannelV1TransferableOffer",
      "type": "object",
      "description": "TransferableOffer represents an Offer that can be used in Transfer. Read-only.",
      "properties": {
        "offer": {
          "description": "Offer with parameter constraints updated to allow the Transfer.",
          "$ref": "GoogleCloudChannelV1Offer"
        }
      }
    },
    "GoogleCloudChannelV1AdminUser": {
      "type": "object",
      "id": "GoogleCloudChannelV1AdminUser",
      "description": "Information needed to create an Admin User for Google Workspace.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Primary email of the admin user."
        },
        "familyName": {
          "description": "Family name of the admin user.",
          "type": "string"
        },
        "givenName": {
          "type": "string",
          "description": "Given name of the admin user."
        }
      }
    },
    "GoogleCloudChannelV1EduData": {
      "properties": {
        "instituteType": {
          "type": "string",
          "enum": [
            "INSTITUTE_TYPE_UNSPECIFIED",
            "K12",
            "UNIVERSITY"
          ],
          "enumDescriptions": [
            "Not used.",
            "Elementary/Secondary Schools & Districts",
            "Higher Education Universities & Colleges"
          ],
          "description": "Designated institute type of customer."
        },
        "website": {
          "description": "Web address for the edu customer's institution.",
          "type": "string"
        },
        "instituteSize": {
          "type": "string",
          "enum": [
            "INSTITUTE_SIZE_UNSPECIFIED",
            "SIZE_1_100",
            "SIZE_101_500",
            "SIZE_501_1000",
            "SIZE_1001_2000",
            "SIZE_2001_5000",
            "SIZE_5001_10000",
            "SIZE_10001_OR_MORE"
          ],
          "enumDescriptions": [
            "Not used.",
            "1 - 100",
            "101 - 500",
            "501 - 1,000",
            "1,001 - 2,000",
            "2,001 - 5,000",
            "5,001 - 10,000",
            "10,001 +"
          ],
          "description": "Size of the institute."
        }
      },
      "description": "Required Edu Attributes",
      "type": "object",
      "id": "GoogleCloudChannelV1EduData"
    },
    "GoogleCloudChannelV1alpha1Parameter": {
      "id": "GoogleCloudChannelV1alpha1Parameter",
      "properties": {
        "editable": {
          "description": "Output only. Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable when entitlement is active.",
          "type": "boolean",
          "readOnly": true
        },
        "value": {
          "$ref": "GoogleCloudChannelV1alpha1Value",
          "description": "Value of the parameter."
        },
        "name": {
          "type": "string",
          "description": "Name of the parameter."
        }
      },
      "description": "Definition for extended entitlement parameters.",
      "type": "object"
    },
    "GoogleCloudChannelV1ListProductsResponse": {
      "properties": {
        "products": {
          "type": "array",
          "description": "List of Products requested.",
          "items": {
            "$ref": "GoogleCloudChannelV1Product"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1ListProductsResponse",
      "description": "Response message for ListProducts."
    },
    "GoogleCloudChannelV1alpha1Period": {
      "properties": {
        "duration": {
          "format": "int32",
          "type": "integer",
          "description": "Total duration of Period Type defined."
        },
        "periodType": {
          "description": "Period Type.",
          "enumDescriptions": [
            "Not used.",
            "Day.",
            "Month.",
            "Year."
          ],
          "enum": [
            "PERIOD_TYPE_UNSPECIFIED",
            "DAY",
            "MONTH",
            "YEAR"
          ],
          "type": "string"
        }
      },
      "description": "Represents period in days/months/years.",
      "type": "object",
      "id": "GoogleCloudChannelV1alpha1Period"
    },
    "GoogleCloudChannelV1ContactInfo": {
      "properties": {
        "lastName": {
          "description": "The customer account contact's last name. Optional for Team customers.",
          "type": "string"
        },
        "phone": {
          "description": "The customer account's contact phone number.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Output only. The customer account contact's display name, formatted as a combination of the customer's first and last name.",
          "readOnly": true
        },
        "email": {
          "description": "The customer account's contact email. Required for entitlements that create admin.google.com accounts, and serves as the customer's username for those accounts. Use this email to invite Team customers.",
          "type": "string"
        },
        "firstName": {
          "type": "string",
          "description": "The customer account contact's first name. Optional for Team customers."
        },
        "title": {
          "description": "Optional. The customer account contact's job title.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Contact information for a customer account.",
      "id": "GoogleCloudChannelV1ContactInfo"
    },
    "GoogleTypeMoney": {
      "properties": {
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleTypeMoney",
      "type": "object",
      "description": "Represents an amount of money with its currency type."
    },
    "GoogleCloudChannelV1alpha1RenewalSettings": {
      "type": "object",
      "description": "Renewal settings for renewable Offers.",
      "id": "GoogleCloudChannelV1alpha1RenewalSettings",
      "properties": {
        "paymentCycle": {
          "$ref": "GoogleCloudChannelV1alpha1Period",
          "description": "Describes how frequently the reseller will be billed, such as once per month."
        },
        "enableRenewal": {
          "description": "If false, the plan will be completed at the end date.",
          "type": "boolean"
        },
        "paymentOption": {
          "description": "Set if enable_renewal=true. Deprecated: Use `payment_cycle` instead.",
          "type": "string",
          "enumDescriptions": [
            "Not used.",
            "Paid in yearly installments.",
            "Paid in monthly installments."
          ],
          "enum": [
            "PAYMENT_OPTION_UNSPECIFIED",
            "ANNUAL",
            "MONTHLY"
          ]
        },
        "paymentPlan": {
          "type": "string",
          "description": "Describes how a reseller will be billed.",
          "enum": [
            "PAYMENT_PLAN_UNSPECIFIED",
            "COMMITMENT",
            "FLEXIBLE",
            "FREE",
            "TRIAL",
            "OFFLINE"
          ],
          "enumDescriptions": [
            "Not used.",
            "Commitment.",
            "No commitment.",
            "Free.",
            "Trial.",
            "Price and ordering not available through API."
          ]
        },
        "resizeUnitCount": {
          "description": "If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.",
          "type": "boolean"
        },
        "disableCommitment": {
          "type": "boolean",
          "description": "If true, disables commitment-based offer on renewal and switches to flexible or pay as you go. Deprecated: Use `payment_plan` instead."
        }
      }
    },
    "GoogleCloudChannelV1RegisterSubscriberRequest": {
      "properties": {
        "serviceAccount": {
          "description": "Required. Service account that provides subscriber access to the registered topic.",
          "type": "string"
        }
      },
      "id": "GoogleCloudChannelV1RegisterSubscriberRequest",
      "description": "Request Message for RegisterSubscriber.",
      "type": "object"
    },
    "GoogleCloudChannelV1StartPaidServiceRequest": {
      "id": "GoogleCloudChannelV1StartPaidServiceRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`)."
        }
      },
      "description": "Request message for CloudChannelService.StartPaidService.",
      "type": "object"
    },
    "GoogleCloudChannelV1EntitlementEvent": {
      "description": "Represents Pub/Sub message content describing entitlement update.",
      "type": "object",
      "id": "GoogleCloudChannelV1EntitlementEvent",
      "properties": {
        "entitlement": {
          "type": "string",
          "description": "Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}"
        },
        "eventType": {
          "type": "string",
          "enumDescriptions": [
            "Not used.",
            "A new entitlement was created.",
            "The offer type associated with an entitlement was changed. This is not triggered if an entitlement converts from a commit offer to a flexible offer as part of a renewal.",
            "Annual commitment for a commit plan was changed.",
            "An annual entitlement was renewed.",
            "Entitlement was suspended.",
            "Entitlement was unsuspended.",
            "Entitlement was cancelled.",
            "Entitlement was upgraded or downgraded (e.g. from Google Workspace Business Standard to Google Workspace Business Plus).",
            "The renewal settings of an entitlement has changed.",
            "Paid service has started on trial entitlement.",
            "License was assigned to or revoked from a user.",
            "License cap was changed for the entitlement."
          ],
          "description": "Type of event which happened on the entitlement.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CREATED",
            "PRICE_PLAN_SWITCHED",
            "COMMITMENT_CHANGED",
            "RENEWED",
            "SUSPENDED",
            "ACTIVATED",
            "CANCELLED",
            "SKU_CHANGED",
            "RENEWAL_SETTING_CHANGED",
            "PAID_SERVICE_STARTED",
            "LICENSE_ASSIGNMENT_CHANGED",
            "LICENSE_CAP_CHANGED"
          ]
        }
      }
    },
    "GoogleCloudChannelV1TransferEntitlementsResponse": {
      "id": "GoogleCloudChannelV1TransferEntitlementsResponse",
      "properties": {
        "entitlements": {
          "items": {
            "$ref": "GoogleCloudChannelV1Entitlement"
          },
          "description": "The transferred entitlements.",
          "type": "array"
        }
      },
      "description": "Response message for CloudChannelService.TransferEntitlements. This is put in the response field of google.longrunning.Operation.",
      "type": "object"
    },
    "GoogleCloudChannelV1TransferableSku": {
      "id": "GoogleCloudChannelV1TransferableSku",
      "description": "TransferableSku represents information a reseller needs to view existing provisioned services for a customer that they do not own. Read-only.",
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "GoogleCloudChannelV1Sku",
          "description": "The SKU pertaining to the provisioning resource as specified in the Offer."
        },
        "legacySku": {
          "description": "Optional. The customer to transfer has an entitlement with the populated legacy SKU.",
          "$ref": "GoogleCloudChannelV1Sku"
        },
        "transferEligibility": {
          "description": "Describes the transfer eligibility of a SKU.",
          "$ref": "GoogleCloudChannelV1TransferEligibility"
        }
      }
    },
    "GoogleLongrunningCancelOperationRequest": {
      "id": "GoogleLongrunningCancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudChannelV1CloudIdentityCustomerAccount": {
      "type": "object",
      "id": "GoogleCloudChannelV1CloudIdentityCustomerAccount",
      "description": "Entity representing a Cloud Identity account that may be associated with a Channel Services API partner.",
      "properties": {
        "owned": {
          "type": "boolean",
          "description": "Returns true if the Cloud Identity account is associated with a customer of the Channel Services partner."
        },
        "existing": {
          "type": "boolean",
          "description": "Returns true if a Cloud Identity account exists for a specific domain."
        },
        "customerName": {
          "description": "If owned = true, the name of the customer that owns the Cloud Identity account. Customer_name uses the format: accounts/{account_id}/customers/{customer_id}",
          "type": "string"
        },
        "customerCloudIdentityId": {
          "type": "string",
          "description": "If existing = true, the Cloud Identity ID of the customer."
        }
      }
    },
    "GoogleCloudChannelV1alpha1ProvisionedService": {
      "description": "Service provisioned for an entitlement.",
      "type": "object",
      "properties": {
        "provisioningId": {
          "description": "Output only. Provisioning ID of the entitlement. For Google Workspace, this is the underlying Subscription ID. For Google Cloud Platform, this is the Billing Account ID of the billing subaccount.\"",
          "readOnly": true,
          "type": "string"
        },
        "productId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The product pertaining to the provisioning resource as specified in the Offer."
        },
        "skuId": {
          "readOnly": true,
          "description": "Output only. The SKU pertaining to the provisioning resource as specified in the Offer.",
          "type": "string"
        }
      },
      "id": "GoogleCloudChannelV1alpha1ProvisionedService"
    },
    "GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse": {
      "description": "Response message for CloudChannelService.CheckCloudIdentityAccountsExist.",
      "properties": {
        "cloudIdentityAccounts": {
          "description": "The Cloud Identity accounts associated with the domain.",
          "items": {
            "$ref": "GoogleCloudChannelV1CloudIdentityCustomerAccount"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudChannelV1CheckCloudIdentityAccountsExistResponse",
      "type": "object"
    },
    "GoogleCloudChannelV1PurchasableOffer": {
      "id": "GoogleCloudChannelV1PurchasableOffer",
      "description": "Offer that you can purchase for a customer. This is used in the ListPurchasableOffer API response.",
      "type": "object",
      "properties": {
        "offer": {
          "$ref": "GoogleCloudChannelV1Offer",
          "description": "Offer."
        }
      }
    },
    "GoogleCloudChannelV1Entitlement": {
      "description": "An entitlement is a representation of a customer's ability to use a service.",
      "type": "object",
      "id": "GoogleCloudChannelV1Entitlement",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which the entitlement is created."
        },
        "offer": {
          "type": "string",
          "description": "Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.",
          "type": "string"
        },
        "commitmentSettings": {
          "description": "Commitment settings for a commitment-based Offer. Required for commitment based offers.",
          "$ref": "GoogleCloudChannelV1CommitmentSettings"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1Parameter"
          },
          "description": "Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. The response may include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. - max_units: The maximum assignable units for a flexible offer. - num_units: The total commitment for commitment-based offers."
        },
        "purchaseOrderId": {
          "type": "string",
          "description": "Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the entitlement is updated."
        },
        "provisionedService": {
          "description": "Output only. Service provisioning details for the entitlement.",
          "readOnly": true,
          "$ref": "GoogleCloudChannelV1ProvisionedService"
        },
        "trialSettings": {
          "readOnly": true,
          "$ref": "GoogleCloudChannelV1TrialSettings",
          "description": "Output only. Settings for trial offers."
        },
        "suspensionReasons": {
          "readOnly": true,
          "description": "Output only. Enumerable of all current suspension reasons for an entitlement.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Not used.",
              "Entitlement was manually suspended by the Reseller.",
              "Trial ended.",
              "Entitlement renewal was canceled.",
              "Entitlement was automatically suspended on creation for pending ToS acceptance on customer.",
              "Other reasons (internal reasons, abuse, etc.)."
            ],
            "enum": [
              "SUSPENSION_REASON_UNSPECIFIED",
              "RESELLER_INITIATED",
              "TRIAL_ENDED",
              "RENEWAL_WITH_TYPE_CANCEL",
              "PENDING_TOS_ACCEPTANCE",
              "OTHER"
            ]
          }
        },
        "provisioningState": {
          "enumDescriptions": [
            "Not used.",
            "The entitlement is currently active.",
            "The entitlement is currently suspended."
          ],
          "type": "string",
          "description": "Output only. Current provisioning state of the entitlement.",
          "readOnly": true,
          "enum": [
            "PROVISIONING_STATE_UNSPECIFIED",
            "ACTIVE",
            "SUSPENDED"
          ]
        },
        "associationInfo": {
          "description": "Association information to other entitlements.",
          "$ref": "GoogleCloudChannelV1AssociationInfo"
        }
      }
    },
    "GoogleCloudChannelV1alpha1Value": {
      "type": "object",
      "description": "Data type and value of a parameter.",
      "id": "GoogleCloudChannelV1alpha1Value",
      "properties": {
        "int64Value": {
          "description": "Represents an int64 value.",
          "type": "string",
          "format": "int64"
        },
        "boolValue": {
          "description": "Represents a boolean value.",
          "type": "boolean"
        },
        "doubleValue": {
          "type": "number",
          "description": "Represents a double value.",
          "format": "double"
        },
        "protoValue": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Represents an 'Any' proto value.",
          "type": "object"
        },
        "stringValue": {
          "type": "string",
          "description": "Represents a string value."
        }
      }
    },
    "GoogleCloudChannelV1PriceTier": {
      "id": "GoogleCloudChannelV1PriceTier",
      "type": "object",
      "properties": {
        "lastResource": {
          "description": "Last resource for which the tier price applies.",
          "format": "int32",
          "type": "integer"
        },
        "firstResource": {
          "type": "integer",
          "description": "First resource for which the tier price applies.",
          "format": "int32"
        },
        "price": {
          "description": "Price of the tier.",
          "$ref": "GoogleCloudChannelV1Price"
        }
      },
      "description": "Defines price at resource tier level. For example, an offer with following definition : * Tier 1: Provide 25% discount for all seats between 1 and 25. * Tier 2: Provide 10% discount for all seats between 26 and 100. * Tier 3: Provide flat 15% discount for all seats above 100. Each of these tiers is represented as a PriceTier."
    },
    "GoogleCloudChannelV1Customer": {
      "id": "GoogleCloudChannelV1Customer",
      "description": "Entity representing a customer of a reseller or distributor.",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when the customer was created."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}",
          "type": "string"
        },
        "cloudIdentityId": {
          "type": "string",
          "description": "Output only. The customer's Cloud Identity ID if the customer has a Cloud Identity resource.",
          "readOnly": true
        },
        "orgDisplayName": {
          "type": "string",
          "description": "Required. Name of the organization that the customer entity represents."
        },
        "cloudIdentityInfo": {
          "$ref": "GoogleCloudChannelV1CloudIdentityInfo",
          "description": "Output only. Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.",
          "readOnly": true
        },
        "channelPartnerId": {
          "type": "string",
          "description": "Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer."
        },
        "domain": {
          "description": "Required. The customer's primary domain. Must match the primary contact email's domain.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Time when the customer was updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "primaryContactInfo": {
          "description": "Primary contact info.",
          "$ref": "GoogleCloudChannelV1ContactInfo"
        },
        "alternateEmail": {
          "description": "Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.",
          "type": "string"
        },
        "orgPostalAddress": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Required. The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code."
        }
      },
      "type": "object"
    },
    "GoogleCloudChannelV1CloudIdentityInfo": {
      "type": "object",
      "properties": {
        "customerType": {
          "description": "CustomerType indicates verification type needed for using services.",
          "enumDescriptions": [
            "Not used.",
            "Domain-owning customer which needs domain verification to use services.",
            "Team customer which needs email verification to use services."
          ],
          "type": "string",
          "enum": [
            "CUSTOMER_TYPE_UNSPECIFIED",
            "DOMAIN",
            "TEAM"
          ]
        },
        "primaryDomain": {
          "description": "Output only. The primary domain name.",
          "readOnly": true,
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number associated with the Cloud Identity."
        },
        "isDomainVerified": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers."
        },
        "adminConsoleUri": {
          "description": "Output only. URI of Customer's Admin console dashboard.",
          "readOnly": true,
          "type": "string"
        },
        "eduData": {
          "$ref": "GoogleCloudChannelV1EduData",
          "description": "Edu information about the customer."
        },
        "alternateEmail": {
          "description": "The alternate email.",
          "type": "string"
        },
        "languageCode": {
          "description": "Language code.",
          "type": "string"
        }
      },
      "id": "GoogleCloudChannelV1CloudIdentityInfo",
      "description": "Cloud Identity information for the Cloud Channel Customer."
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudChannelV1RegisterSubscriberResponse": {
      "id": "GoogleCloudChannelV1RegisterSubscriberResponse",
      "properties": {
        "topic": {
          "description": "Name of the topic the subscriber will listen to.",
          "type": "string"
        }
      },
      "description": "Response Message for RegisterSubscriber.",
      "type": "object"
    },
    "GoogleCloudChannelV1ChannelPartnerLink": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. Resource name for the channel partner link, in the format accounts/{account_id}/channelPartnerLinks/{id}.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp of when the channel partner link is created."
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. Timestamp of when the channel partner link is updated.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "linkState": {
          "enumDescriptions": [
            "Not used.",
            "An invitation has been sent to the reseller to create a channel partner link.",
            "Status when the reseller is active.",
            "Status when the reseller has been revoked by the distributor.",
            "Status when the reseller is suspended by Google or distributor."
          ],
          "enum": [
            "CHANNEL_PARTNER_LINK_STATE_UNSPECIFIED",
            "INVITED",
            "ACTIVE",
            "REVOKED",
            "SUSPENDED"
          ],
          "type": "string",
          "description": "Required. State of the channel partner link."
        },
        "resellerCloudIdentityId": {
          "type": "string",
          "description": "Required. Cloud Identity ID of the linked reseller."
        },
        "publicId": {
          "readOnly": true,
          "description": "Output only. Public identifier that a customer must use to generate a transfer token to move to this distributor-reseller combination.",
          "type": "string"
        },
        "channelPartnerCloudIdentityInfo": {
          "$ref": "GoogleCloudChannelV1CloudIdentityInfo",
          "description": "Output only. Cloud Identity info of the channel partner (IR).",
          "readOnly": true
        },
        "inviteLinkUri": {
          "description": "Output only. URI of the web page where partner accepts the link invitation.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Entity representing a link between distributors and their indirect resellers in an n-tier resale channel.",
      "type": "object",
      "id": "GoogleCloudChannelV1ChannelPartnerLink"
    },
    "GoogleCloudChannelV1UnregisterSubscriberRequest": {
      "id": "GoogleCloudChannelV1UnregisterSubscriberRequest",
      "description": "Request Message for UnregisterSubscriber.",
      "type": "object",
      "properties": {
        "serviceAccount": {
          "description": "Required. Service account to unregister from subscriber access to the topic.",
          "type": "string"
        }
      }
    },
    "GoogleCloudChannelV1ListEntitlementsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to list the next page of results. Pass to ListEntitlementsRequest.page_token to obtain that page.",
          "type": "string"
        },
        "entitlements": {
          "type": "array",
          "description": "The reseller customer's entitlements.",
          "items": {
            "$ref": "GoogleCloudChannelV1Entitlement"
          }
        }
      },
      "description": "Response message for CloudChannelService.ListEntitlements.",
      "id": "GoogleCloudChannelV1ListEntitlementsResponse",
      "type": "object"
    },
    "GoogleCloudChannelV1CustomerEvent": {
      "description": "Represents Pub/Sub message content describing customer update.",
      "properties": {
        "customer": {
          "description": "Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}",
          "type": "string"
        },
        "eventType": {
          "type": "string",
          "description": "Type of event which happened on the customer.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRIMARY_DOMAIN_CHANGED",
            "PRIMARY_DOMAIN_VERIFIED"
          ],
          "enumDescriptions": [
            "Not used.",
            "Primary domain for customer was changed.",
            "Primary domain of the customer has been verified."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1CustomerEvent"
    },
    "GoogleCloudChannelV1alpha1SubscriberEvent": {
      "id": "GoogleCloudChannelV1alpha1SubscriberEvent",
      "description": "Represents information which resellers will get as part of notification from Cloud Pub/Sub.",
      "type": "object",
      "properties": {
        "customerEvent": {
          "$ref": "GoogleCloudChannelV1alpha1CustomerEvent",
          "description": "Customer event send as part of Pub/Sub event to partners."
        },
        "entitlementEvent": {
          "description": "Entitlement event send as part of Pub/Sub event to partners.",
          "$ref": "GoogleCloudChannelV1alpha1EntitlementEvent"
        }
      }
    },
    "GoogleCloudChannelV1ListSubscribersResponse": {
      "type": "object",
      "properties": {
        "serviceAccounts": {
          "description": "List of service accounts which have subscriber access to the topic.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topic": {
          "type": "string",
          "description": "Name of the topic registered with the reseller."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "id": "GoogleCloudChannelV1ListSubscribersResponse",
      "description": "Response Message for ListSubscribers."
    },
    "GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest": {
      "properties": {
        "domain": {
          "description": "Required. Domain to fetch for Cloud Identity account customer.",
          "type": "string"
        }
      },
      "description": "Request message for CloudChannelService.CheckCloudIdentityAccountsExist.",
      "id": "GoogleCloudChannelV1CheckCloudIdentityAccountsExistRequest",
      "type": "object"
    },
    "GoogleCloudChannelV1alpha1TransferEntitlementsResponse": {
      "type": "object",
      "properties": {
        "entitlements": {
          "description": "The transferred entitlements.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1alpha1Entitlement"
          }
        }
      },
      "id": "GoogleCloudChannelV1alpha1TransferEntitlementsResponse",
      "description": "Response message for CloudChannelService.TransferEntitlements. This is put in the response field of google.longrunning.Operation."
    },
    "GoogleCloudChannelV1alpha1CustomerEvent": {
      "description": "Represents Pub/Sub message content describing customer update.",
      "type": "object",
      "id": "GoogleCloudChannelV1alpha1CustomerEvent",
      "properties": {
        "customer": {
          "type": "string",
          "description": "Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}"
        },
        "eventType": {
          "enumDescriptions": [
            "Not used.",
            "Primary domain for customer was changed.",
            "Primary domain of the customer has been verified."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRIMARY_DOMAIN_CHANGED",
            "PRIMARY_DOMAIN_VERIFIED"
          ],
          "description": "Type of event which happened on the customer."
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudChannelV1SuspendEntitlementRequest": {
      "type": "object",
      "id": "GoogleCloudChannelV1SuspendEntitlementRequest",
      "properties": {
        "requestId": {
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).",
          "type": "string"
        }
      },
      "description": "Request message for CloudChannelService.SuspendEntitlement."
    },
    "GoogleCloudChannelV1alpha1EntitlementEvent": {
      "description": "Represents Pub/Sub message content describing entitlement update.",
      "properties": {
        "eventType": {
          "enumDescriptions": [
            "Not used.",
            "A new entitlement was created.",
            "The offer type associated with an entitlement was changed. This is not triggered if an entitlement converts from a commit offer to a flexible offer as part of a renewal.",
            "Annual commitment for a commit plan was changed.",
            "An annual entitlement was renewed.",
            "Entitlement was suspended.",
            "Entitlement was unsuspended.",
            "Entitlement was cancelled.",
            "Entitlement was upgraded or downgraded (e.g. from Google Workspace Business Standard to Google Workspace Business Plus).",
            "The renewal settings of an entitlement has changed.",
            "Paid service has started on trial entitlement.",
            "License was assigned to or revoked from a user.",
            "License cap was changed for the entitlement."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CREATED",
            "PRICE_PLAN_SWITCHED",
            "COMMITMENT_CHANGED",
            "RENEWED",
            "SUSPENDED",
            "ACTIVATED",
            "CANCELLED",
            "SKU_CHANGED",
            "RENEWAL_SETTING_CHANGED",
            "PAID_SERVICE_STARTED",
            "LICENSE_ASSIGNMENT_CHANGED",
            "LICENSE_CAP_CHANGED"
          ],
          "description": "Type of event which happened on the entitlement.",
          "type": "string"
        },
        "entitlement": {
          "description": "Resource name of an entitlement of the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1alpha1EntitlementEvent"
    },
    "GoogleCloudChannelV1Price": {
      "type": "object",
      "id": "GoogleCloudChannelV1Price",
      "description": "Represents the price of the Offer.",
      "properties": {
        "discount": {
          "format": "double",
          "type": "number",
          "description": "Discount percentage, represented as decimal. For example, a 20% discount will be represent as 0.2."
        },
        "basePrice": {
          "description": "Base price.",
          "$ref": "GoogleTypeMoney"
        },
        "externalPriceUri": {
          "type": "string",
          "description": "Link to external price list, such as link to Google Voice rate card."
        },
        "effectivePrice": {
          "$ref": "GoogleTypeMoney",
          "description": "Effective Price after applying the discounts."
        }
      }
    },
    "GoogleCloudChannelV1UpdateChannelPartnerLinkRequest": {
      "description": "Request message for CloudChannelService.UpdateChannelPartnerLink",
      "type": "object",
      "id": "GoogleCloudChannelV1UpdateChannelPartnerLinkRequest",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Required. The update mask that applies to the resource. The only allowable value for an update mask is channel_partner_link.link_state.",
          "type": "string"
        },
        "channelPartnerLink": {
          "$ref": "GoogleCloudChannelV1ChannelPartnerLink",
          "description": "Required. The channel partner link to update. Only channel_partner_link.link_state is allowed for updates."
        }
      }
    },
    "GoogleCloudChannelV1ProvisionCloudIdentityRequest": {
      "description": "Request message for CloudChannelService.ProvisionCloudIdentity",
      "type": "object",
      "properties": {
        "cloudIdentityInfo": {
          "description": "CloudIdentity-specific customer information.",
          "$ref": "GoogleCloudChannelV1CloudIdentityInfo"
        },
        "validateOnly": {
          "type": "boolean",
          "description": "Validate the request and preview the review, but do not post it."
        },
        "user": {
          "$ref": "GoogleCloudChannelV1AdminUser",
          "description": "Admin user information."
        }
      },
      "id": "GoogleCloudChannelV1ProvisionCloudIdentityRequest"
    },
    "GoogleCloudChannelV1Media": {
      "description": "Represents media information.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the media."
        },
        "content": {
          "description": "URL of the media.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type of the media.",
          "enum": [
            "MEDIA_TYPE_UNSPECIFIED",
            "MEDIA_TYPE_IMAGE"
          ],
          "enumDescriptions": [
            "Not used.",
            "Type of image."
          ]
        }
      },
      "id": "GoogleCloudChannelV1Media",
      "type": "object"
    },
    "GoogleCloudChannelV1ListSkusResponse": {
      "id": "GoogleCloudChannelV1ListSkusResponse",
      "properties": {
        "skus": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1Sku"
          },
          "description": "The list of SKUs requested."
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for ListSkus."
    },
    "GoogleCloudChannelV1ListChannelPartnerLinksResponse": {
      "id": "GoogleCloudChannelV1ListChannelPartnerLinksResponse",
      "type": "object",
      "description": "Response message for CloudChannelService.ListChannelPartnerLinks.",
      "properties": {
        "channelPartnerLinks": {
          "items": {
            "$ref": "GoogleCloudChannelV1ChannelPartnerLink"
          },
          "type": "array",
          "description": "The Channel partner links for a reseller."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass to ListChannelPartnerLinksRequest.page_token to obtain that page."
        }
      }
    },
    "GoogleCloudChannelV1ListTransferableOffersRequest": {
      "type": "object",
      "description": "Request message for CloudChannelService.ListTransferableOffers",
      "id": "GoogleCloudChannelV1ListTransferableOffersRequest",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code. For example, \"en-US\". The response will localize in the corresponding language code, if specified. The default value is \"en-US\"."
        },
        "customerName": {
          "description": "A reseller should create a customer and use the resource name of that customer here.",
          "type": "string"
        },
        "cloudIdentityId": {
          "description": "Customer's Cloud Identity ID",
          "type": "string"
        },
        "sku": {
          "type": "string",
          "description": "Required. The SKU to look up Offers for."
        },
        "pageSize": {
          "description": "Requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 offers. The maximum value is 1000; the server will coerce values above 1000.",
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "description": "A token for a page of results other than the first page. Obtained using ListTransferableOffersResponse.next_page_token of the previous CloudChannelService.ListTransferableOffers call.",
          "type": "string"
        }
      }
    },
    "GoogleCloudChannelV1PurchasableSku": {
      "properties": {
        "sku": {
          "description": "SKU",
          "$ref": "GoogleCloudChannelV1Sku"
        }
      },
      "id": "GoogleCloudChannelV1PurchasableSku",
      "type": "object",
      "description": "SKU that you can purchase. This is used in ListPurchasableSku API response."
    },
    "GoogleCloudChannelV1SubscriberEvent": {
      "id": "GoogleCloudChannelV1SubscriberEvent",
      "description": "Represents information which resellers will get as part of notification from Cloud Pub/Sub.",
      "properties": {
        "customerEvent": {
          "description": "Customer event send as part of Pub/Sub event to partners.",
          "$ref": "GoogleCloudChannelV1CustomerEvent"
        },
        "entitlementEvent": {
          "description": "Entitlement event send as part of Pub/Sub event to partners.",
          "$ref": "GoogleCloudChannelV1EntitlementEvent"
        }
      },
      "type": "object"
    },
    "GoogleCloudChannelV1ListTransferableOffersResponse": {
      "type": "object",
      "id": "GoogleCloudChannelV1ListTransferableOffersResponse",
      "description": "Response message for CloudChannelService.ListTransferableOffers.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass to ListTransferableOffersRequest.page_token to obtain that page."
        },
        "transferableOffers": {
          "items": {
            "$ref": "GoogleCloudChannelV1TransferableOffer"
          },
          "type": "array",
          "description": "Information about Offers for a customer that can be used for transfer."
        }
      }
    },
    "GoogleCloudChannelV1PriceByResource": {
      "type": "object",
      "description": "Represents price by resource type.",
      "properties": {
        "pricePhases": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1PricePhase"
          },
          "description": "Specifies the price by time range."
        },
        "price": {
          "$ref": "GoogleCloudChannelV1Price",
          "description": "Price of the Offer. Present if there are no price phases."
        },
        "resourceType": {
          "enum": [
            "RESOURCE_TYPE_UNSPECIFIED",
            "SEAT",
            "MAU",
            "GB",
            "LICENSED_USER",
            "MINUTES",
            "IAAS_USAGE",
            "SUBSCRIPTION"
          ],
          "type": "string",
          "description": "Resource Type. Example: SEAT",
          "enumDescriptions": [
            "Not used.",
            "Seat.",
            "Monthly active user.",
            "GB (used for storage SKUs).",
            "Active licensed users(for Voice SKUs).",
            "Voice usage.",
            "For IaaS SKUs like Google Cloud Platform, monetization is based on usage accrued on your billing account irrespective of the type of monetizable resource. This enum represents an aggregated resource/container for all usage SKUs on a billing account. Currently, only applicable to Google Cloud Platform.",
            "For Google Cloud Platform subscriptions like Anthos or SAP."
          ]
        }
      },
      "id": "GoogleCloudChannelV1PriceByResource"
    },
    "GoogleCloudChannelV1CustomerConstraints": {
      "id": "GoogleCloudChannelV1CustomerConstraints",
      "properties": {
        "allowedRegions": {
          "description": "Allowed geographical regions of the customer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "promotionalOrderTypes": {
          "description": "Allowed Promotional Order Type. Present for Promotional offers.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Not used.",
              "Order used for new customers, trial conversions and upgrades.",
              "All orders for transferring an existing customer.",
              "Orders for modifying an existing customer's promotion on the same SKU."
            ],
            "type": "string",
            "enum": [
              "PROMOTIONAL_TYPE_UNSPECIFIED",
              "NEW_UPGRADE",
              "TRANSFER",
              "PROMOTION_SWITCH"
            ]
          }
        },
        "allowedCustomerTypes": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Not used.",
              "Domain-owning customer which needs domain verification to use services.",
              "Team customer which needs email verification to use services."
            ],
            "enum": [
              "CUSTOMER_TYPE_UNSPECIFIED",
              "DOMAIN",
              "TEAM"
            ]
          },
          "type": "array",
          "description": "Allowed Customer Type."
        }
      },
      "type": "object",
      "description": "Represents constraints required to purchase the Offer for a customer."
    },
    "GoogleCloudChannelV1Offer": {
      "type": "object",
      "id": "GoogleCloudChannelV1Offer",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Start of the Offer validity time.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Resource Name of the Offer. Format: accounts/{account_id}/offers/{offer_id}"
        },
        "sku": {
          "$ref": "GoogleCloudChannelV1Sku",
          "description": "SKU the offer is associated with."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. End of the Offer validity time."
        },
        "priceByResources": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1PriceByResource"
          },
          "description": "Price for each monetizable resource type."
        },
        "marketingInfo": {
          "description": "Marketing information for the Offer.",
          "$ref": "GoogleCloudChannelV1MarketingInfo"
        },
        "constraints": {
          "$ref": "GoogleCloudChannelV1Constraints",
          "description": "Constraints on transacting the Offer."
        },
        "parameterDefinitions": {
          "items": {
            "$ref": "GoogleCloudChannelV1ParameterDefinition"
          },
          "type": "array",
          "description": "Parameters required to use current Offer to purchase."
        },
        "plan": {
          "description": "Describes the payment plan for the Offer.",
          "$ref": "GoogleCloudChannelV1Plan"
        }
      },
      "description": "Represents an offer made to resellers for purchase. An offer is associated with a Sku, has a plan for payment, a price, and defines the constraints for buying."
    },
    "GoogleCloudChannelV1Product": {
      "description": "A Product is the entity a customer uses when placing an order. For example, Google Workspace, Google Voice, etc.",
      "type": "object",
      "id": "GoogleCloudChannelV1Product",
      "properties": {
        "marketingInfo": {
          "description": "Marketing information for the product.",
          "$ref": "GoogleCloudChannelV1MarketingInfo"
        },
        "name": {
          "type": "string",
          "description": "Resource Name of the Product. Format: products/{product_id}"
        }
      }
    },
    "GoogleCloudChannelV1PricePhase": {
      "description": "Specifies the price by the duration of months. For example, a 20% discount for the first six months, then a 10% discount starting on the seventh month.",
      "properties": {
        "lastPeriod": {
          "format": "int32",
          "type": "integer",
          "description": "Defines first period for the phase."
        },
        "periodType": {
          "description": "Defines the phase period type.",
          "enumDescriptions": [
            "Not used.",
            "Day.",
            "Month.",
            "Year."
          ],
          "enum": [
            "PERIOD_TYPE_UNSPECIFIED",
            "DAY",
            "MONTH",
            "YEAR"
          ],
          "type": "string"
        },
        "firstPeriod": {
          "format": "int32",
          "description": "Defines first period for the phase.",
          "type": "integer"
        },
        "price": {
          "description": "Price of the phase. Present if there are no price tiers.",
          "$ref": "GoogleCloudChannelV1Price"
        },
        "priceTiers": {
          "type": "array",
          "description": "Price by the resource tiers.",
          "items": {
            "$ref": "GoogleCloudChannelV1PriceTier"
          }
        }
      },
      "id": "GoogleCloudChannelV1PricePhase",
      "type": "object"
    },
    "GoogleCloudChannelV1TransferEligibility": {
      "description": "Specifies transfer eligibility of a SKU.",
      "properties": {
        "description": {
          "description": "Localized description if reseller is not eligible to transfer the SKU.",
          "type": "string"
        },
        "isEligible": {
          "type": "boolean",
          "description": "Whether reseller is eligible to transfer the SKU."
        },
        "ineligibilityReason": {
          "description": "Specified the reason for ineligibility.",
          "enumDescriptions": [
            "Not used.",
            "Reseller needs to accept TOS before transferring the SKU.",
            "Reseller not eligible to sell the SKU.",
            "SKU subscription is suspended"
          ],
          "enum": [
            "REASON_UNSPECIFIED",
            "PENDING_TOS_ACCEPTANCE",
            "SKU_NOT_ELIGIBLE",
            "SKU_SUSPENDED"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1TransferEligibility"
    },
    "GoogleCloudChannelV1TransferEntitlementsToGoogleRequest": {
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`)."
        },
        "entitlements": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudChannelV1Entitlement"
          },
          "description": "Required. The entitlements to transfer to Google."
        }
      },
      "description": "Request message for CloudChannelService.TransferEntitlementsToGoogle.",
      "type": "object",
      "id": "GoogleCloudChannelV1TransferEntitlementsToGoogleRequest"
    },
    "GoogleCloudChannelV1Plan": {
      "type": "object",
      "description": "The payment plan for the Offer. Describes how to make a payment.",
      "id": "GoogleCloudChannelV1Plan",
      "properties": {
        "paymentPlan": {
          "type": "string",
          "enum": [
            "PAYMENT_PLAN_UNSPECIFIED",
            "COMMITMENT",
            "FLEXIBLE",
            "FREE",
            "TRIAL",
            "OFFLINE"
          ],
          "description": "Describes how a reseller will be billed.",
          "enumDescriptions": [
            "Not used.",
            "Commitment.",
            "No commitment.",
            "Free.",
            "Trial.",
            "Price and ordering not available through API."
          ]
        },
        "paymentType": {
          "type": "string",
          "description": "Specifies when the payment needs to happen.",
          "enum": [
            "PAYMENT_TYPE_UNSPECIFIED",
            "PREPAY",
            "POSTPAY"
          ],
          "enumDescriptions": [
            "Not used.",
            "Prepay. Amount has to be paid before service is rendered.",
            "Postpay. Reseller is charged at the end of the Payment cycle."
          ]
        },
        "paymentCycle": {
          "$ref": "GoogleCloudChannelV1Period",
          "description": "Describes how frequently the reseller will be billed, such as once per month."
        },
        "billingAccount": {
          "description": "Reseller Billing account to charge after an offer transaction. Only present for Google Cloud Platform offers.",
          "type": "string"
        },
        "trialPeriod": {
          "$ref": "GoogleCloudChannelV1Period",
          "description": "Present for Offers with a trial period. For trial-only Offers, a paid service needs to start before the trial period ends for continued service. For Regular Offers with a trial period, the regular pricing goes into effect when trial period ends, or if paid service is started before the end of the trial period."
        }
      }
    },
    "GoogleCloudChannelV1ImportCustomerRequest": {
      "description": "Request message for CloudChannelService.ImportCustomer",
      "id": "GoogleCloudChannelV1ImportCustomerRequest",
      "type": "object",
      "properties": {
        "authToken": {
          "type": "string",
          "description": "Optional. The super admin of the resold customer generates this token to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. You can omit this token after authorization. See https://support.google.com/a/answer/7643790 for more details."
        },
        "channelPartnerId": {
          "description": "Optional. Cloud Identity ID of a channel partner who will be the direct reseller for the customer's order. This field is required for 2-tier transfer scenarios and can be provided via the request Parent binding as well.",
          "type": "string"
        },
        "customer": {
          "description": "Optional. Specifies the customer that will receive imported Cloud Identity information. Format: accounts/{account_id}/customers/{customer_id}",
          "type": "string"
        },
        "cloudIdentityId": {
          "type": "string",
          "description": "Required. Customer's Cloud Identity ID"
        },
        "domain": {
          "description": "Required. Customer domain.",
          "type": "string"
        },
        "overwriteIfExists": {
          "description": "Required. Choose to overwrite an existing customer if found. This must be set to true if there is an existing customer with a conflicting region code or domain.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudChannelV1ActivateEntitlementRequest": {
      "id": "GoogleCloudChannelV1ActivateEntitlementRequest",
      "description": "Request message for CloudChannelService.ActivateEntitlement.",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`)."
        }
      },
      "type": "object"
    },
    "GoogleCloudChannelV1ProvisionedService": {
      "properties": {
        "productId": {
          "description": "Output only. The product pertaining to the provisioning resource as specified in the Offer.",
          "readOnly": true,
          "type": "string"
        },
        "provisioningId": {
          "readOnly": true,
          "description": "Output only. Provisioning ID of the entitlement. For Google Workspace, this is the underlying Subscription ID. For Google Cloud Platform, this is the Billing Account ID of the billing subaccount.\"",
          "type": "string"
        },
        "skuId": {
          "description": "Output only. The SKU pertaining to the provisioning resource as specified in the Offer.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Service provisioned for an entitlement.",
      "id": "GoogleCloudChannelV1ProvisionedService",
      "type": "object"
    },
    "GoogleCloudChannelV1Value": {
      "description": "Data type and value of a parameter.",
      "id": "GoogleCloudChannelV1Value",
      "type": "object",
      "properties": {
        "stringValue": {
          "type": "string",
          "description": "Represents a string value."
        },
        "boolValue": {
          "description": "Represents a boolean value.",
          "type": "boolean"
        },
        "doubleValue": {
          "format": "double",
          "description": "Represents a double value.",
          "type": "number"
        },
        "int64Value": {
          "format": "int64",
          "type": "string",
          "description": "Represents an int64 value."
        },
        "protoValue": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Represents an 'Any' proto value."
        }
      }
    },
    "GoogleCloudChannelV1RenewalSettings": {
      "type": "object",
      "properties": {
        "enableRenewal": {
          "description": "If false, the plan will be completed at the end date.",
          "type": "boolean"
        },
        "paymentPlan": {
          "description": "Describes how a reseller will be billed.",
          "enumDescriptions": [
            "Not used.",
            "Commitment.",
            "No commitment.",
            "Free.",
            "Trial.",
            "Price and ordering not available through API."
          ],
          "enum": [
            "PAYMENT_PLAN_UNSPECIFIED",
            "COMMITMENT",
            "FLEXIBLE",
            "FREE",
            "TRIAL",
            "OFFLINE"
          ],
          "type": "string"
        },
        "resizeUnitCount": {
          "description": "If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.",
          "type": "boolean"
        },
        "paymentCycle": {
          "description": "Describes how frequently the reseller will be billed, such as once per month.",
          "$ref": "GoogleCloudChannelV1Period"
        }
      },
      "id": "GoogleCloudChannelV1RenewalSettings",
      "description": "Renewal settings for renewable Offers."
    },
    "GoogleCloudChannelV1ChangeOfferRequest": {
      "id": "GoogleCloudChannelV1ChangeOfferRequest",
      "type": "object",
      "properties": {
        "offer": {
          "description": "Required. New Offer. Format: accounts/{account_id}/offers/{offer_id}.",
          "type": "string"
        },
        "purchaseOrderId": {
          "type": "string",
          "description": "Optional. Purchase order id provided by the reseller."
        },
        "requestId": {
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).",
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "description": "Optional. Parameters needed to purchase the Offer. To view the available Parameters refer to the Offer.parameter_definitions from the desired offer.",
          "items": {
            "$ref": "GoogleCloudChannelV1Parameter"
          }
        }
      },
      "description": "Request message for CloudChannelService.ChangeOffer."
    },
    "GoogleCloudChannelV1CreateEntitlementRequest": {
      "description": "Request message for CloudChannelService.CreateEntitlement",
      "type": "object",
      "id": "GoogleCloudChannelV1CreateEntitlementRequest",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`)."
        },
        "entitlement": {
          "$ref": "GoogleCloudChannelV1Entitlement",
          "description": "Required. The entitlement to create."
        }
      }
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudChannelV1Period": {
      "id": "GoogleCloudChannelV1Period",
      "type": "object",
      "properties": {
        "duration": {
          "description": "Total duration of Period Type defined.",
          "format": "int32",
          "type": "integer"
        },
        "periodType": {
          "description": "Period Type.",
          "enumDescriptions": [
            "Not used.",
            "Day.",
            "Month.",
            "Year."
          ],
          "type": "string",
          "enum": [
            "PERIOD_TYPE_UNSPECIFIED",
            "DAY",
            "MONTH",
            "YEAR"
          ]
        }
      },
      "description": "Represents period in days/months/years."
    },
    "GoogleCloudChannelV1CommitmentSettings": {
      "id": "GoogleCloudChannelV1CommitmentSettings",
      "type": "object",
      "description": "Commitment settings for commitment-based offers.",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Output only. Commitment start timestamp.",
          "format": "google-datetime",
          "readOnly": true
        },
        "renewalSettings": {
          "$ref": "GoogleCloudChannelV1RenewalSettings",
          "description": "Optional. Renewal settings applicable for a commitment-based Offer."
        },
        "endTime": {
          "description": "Output only. Commitment end timestamp.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudChannelV1ListTransferableSkusRequest": {
      "type": "object",
      "description": "Request message for CloudChannelService.ListTransferableSkus",
      "properties": {
        "cloudIdentityId": {
          "description": "Customer's Cloud Identity ID",
          "type": "string"
        },
        "customerName": {
          "type": "string",
          "description": "A reseller is required to create a customer and use the resource name of the created customer here. Customer_name uses the format: accounts/{account_id}/customers/{customer_id}"
        },
        "pageSize": {
          "description": "The requested page size. Server might return fewer results than requested. If unspecified, returns at most 100 SKUs. The maximum value is 1000; the server will coerce values above 1000. Optional.",
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "description": "A token for a page of results other than the first page. Obtained using ListTransferableSkusResponse.next_page_token of the previous CloudChannelService.ListTransferableSkus call. Optional.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code. For example, \"en-US\". The response will localize in the corresponding language code, if specified. The default value is \"en-US\". Optional.",
          "type": "string"
        },
        "authToken": {
          "type": "string",
          "description": "The super admin of the resold customer generates this token to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. You can omit this token after authorization. See https://support.google.com/a/answer/7643790 for more details."
        }
      },
      "id": "GoogleCloudChannelV1ListTransferableSkusRequest"
    },
    "GoogleCloudChannelV1alpha1Entitlement": {
      "properties": {
        "assignedUnits": {
          "description": "The current number of users that are assigned a license for the product defined in provisioned_service.skuId. Read-only. Deprecated: Use `parameters` instead.",
          "format": "int32",
          "type": "integer"
        },
        "channelPartnerId": {
          "type": "string",
          "description": "Cloud Identity ID of a channel partner who will be the direct reseller for the customer's order. This field is generally used in 2-tier ordering, where the order is placed by a top-level distributor on behalf of their channel partner or reseller. Required for distributors. Deprecated: `channel_partner_id` has been moved to the Customer."
        },
        "provisioningState": {
          "description": "Output only. Current provisioning state of the entitlement.",
          "type": "string",
          "enumDescriptions": [
            "Not used.",
            "The entitlement is currently active.",
            "The entitlement was canceled. After an entitlement is `CANCELED`, its status will not change. Deprecated: Canceled entitlements will no longer be visible.",
            "The entitlement reached end of term and was not renewed. After an entitlement is `COMPLETE`, its status will not change. Deprecated: This is represented as ProvisioningState=SUSPENDED and suspensionReason in (TRIAL_ENDED, RENEWAL_WITH_TYPE_CANCEL)",
            "The entitlement is pending. Deprecated: This is represented as ProvisioningState=SUSPENDED and suspensionReason=PENDING_TOS_ACCEPTANCE",
            "The entitlement is currently suspended."
          ],
          "readOnly": true,
          "enum": [
            "PROVISIONING_STATE_UNSPECIFIED",
            "ACTIVE",
            "CANCELED",
            "COMPLETE",
            "PENDING",
            "SUSPENDED"
          ]
        },
        "parameters": {
          "type": "array",
          "description": "Extended entitlement parameters. When creating an entitlement, valid parameter names and values are defined in the Offer.parameter_definitions. The response may include the following output-only Parameters: - assigned_units: The number of licenses assigned to users. - max_units: The maximum assignable units for a flexible offer. - num_units: The total commitment for commitment-based offers.",
          "items": {
            "$ref": "GoogleCloudChannelV1alpha1Parameter"
          }
        },
        "commitmentSettings": {
          "$ref": "GoogleCloudChannelV1alpha1CommitmentSettings",
          "description": "Commitment settings for a commitment-based Offer. Required for commitment based offers."
        },
        "numUnits": {
          "description": "Number of units for a commitment-based Offer. For example, for seat-based Offers, this would be the number of seats; for license-based Offers, this would be the number of licenses. Required for creating commitment-based Offers. Deprecated: Use `parameters` instead.",
          "format": "int32",
          "type": "integer"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which the entitlement is created.",
          "type": "string"
        },
        "trialSettings": {
          "readOnly": true,
          "description": "Output only. Settings for trial offers.",
          "$ref": "GoogleCloudChannelV1alpha1TrialSettings"
        },
        "provisionedService": {
          "readOnly": true,
          "$ref": "GoogleCloudChannelV1alpha1ProvisionedService",
          "description": "Output only. Service provisioning details for the entitlement."
        },
        "offer": {
          "type": "string",
          "description": "Required. The offer resource name for which the entitlement is to be created. Takes the form: accounts/{account_id}/offers/{offer_id}."
        },
        "purchaseOrderId": {
          "type": "string",
          "description": "Optional. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value is given, it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which the entitlement is updated.",
          "format": "google-datetime"
        },
        "maxUnits": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of units for a non commitment-based Offer, such as Flexible, Trial or Free entitlements. For commitment-based entitlements, this is a read-only field, which only the internal support team can update. Deprecated: Use `parameters` instead."
        },
        "associationInfo": {
          "$ref": "GoogleCloudChannelV1alpha1AssociationInfo",
          "description": "Association information to other entitlements."
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}.",
          "readOnly": true
        },
        "suspensionReasons": {
          "description": "Output only. Enumerable of all current suspension reasons for an entitlement.",
          "readOnly": true,
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Not used.",
              "Entitlement was manually suspended by the Reseller.",
              "Trial ended.",
              "Entitlement renewal was canceled.",
              "Entitlement was automatically suspended on creation for pending ToS acceptance on customer.",
              "Other reasons (internal reasons, abuse, etc.)."
            ],
            "enum": [
              "SUSPENSION_REASON_UNSPECIFIED",
              "RESELLER_INITIATED",
              "TRIAL_ENDED",
              "RENEWAL_WITH_TYPE_CANCEL",
              "PENDING_TOS_ACCEPTANCE",
              "OTHER"
            ]
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1alpha1Entitlement",
      "description": "An entitlement is a representation of a customer's ability to use a service."
    },
    "GoogleCloudChannelV1Constraints": {
      "description": "Represents the constraints for buying the Offer.",
      "type": "object",
      "id": "GoogleCloudChannelV1Constraints",
      "properties": {
        "customerConstraints": {
          "$ref": "GoogleCloudChannelV1CustomerConstraints",
          "description": "Represents constraints required to purchase the Offer for a customer."
        }
      }
    },
    "GoogleCloudChannelV1Parameter": {
      "id": "GoogleCloudChannelV1Parameter",
      "type": "object",
      "description": "Definition for extended entitlement parameters.",
      "properties": {
        "value": {
          "$ref": "GoogleCloudChannelV1Value",
          "description": "Value of the parameter."
        },
        "editable": {
          "readOnly": true,
          "description": "Output only. Specifies whether this parameter is allowed to be changed. For example, for a Google Workspace Business Starter entitlement in commitment plan, num_units is editable when entitlement is active.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Name of the parameter."
        }
      }
    },
    "GoogleCloudChannelV1AssociationInfo": {
      "id": "GoogleCloudChannelV1AssociationInfo",
      "type": "object",
      "properties": {
        "baseEntitlement": {
          "type": "string",
          "description": "The name of the base entitlement, for which this entitlement is an add-on."
        }
      },
      "description": "Association links that an entitlement has to other entitlements."
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      }
    },
    "GoogleCloudChannelV1CancelEntitlementRequest": {
      "properties": {
        "requestId": {
          "description": "Optional. You can specify an optional unique request ID, and if you need to retry your request, the server will know to ignore the request if it's complete. For example, you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if it received the original operation with the same request ID. If it did, it will ignore the second request. The request ID must be a valid [UUID](https://tools.ietf.org/html/rfc4122) with the exception that zero UUID is not supported (`00000000-0000-0000-0000-000000000000`).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1CancelEntitlementRequest",
      "description": "Request message for CloudChannelService.CancelEntitlement."
    },
    "GoogleCloudChannelV1ListCustomersResponse": {
      "description": "Response message for CloudChannelService.ListCustomers.",
      "type": "object",
      "id": "GoogleCloudChannelV1ListCustomersResponse",
      "properties": {
        "customers": {
          "description": "The customers belonging to a reseller or distributor.",
          "items": {
            "$ref": "GoogleCloudChannelV1Customer"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass to ListCustomersRequest.page_token to obtain that page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudChannelV1MarketingInfo": {
      "description": "Represents the marketing information for a Product, SKU or Offer.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Human readable description. Description can contain HTML."
        },
        "displayName": {
          "description": "Human readable name.",
          "type": "string"
        },
        "defaultLogo": {
          "$ref": "GoogleCloudChannelV1Media",
          "description": "Default logo."
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1MarketingInfo"
    },
    "GoogleCloudChannelV1ListPurchasableOffersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results.",
          "type": "string"
        },
        "purchasableOffers": {
          "items": {
            "$ref": "GoogleCloudChannelV1PurchasableOffer"
          },
          "description": "The list of Offers requested.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for ListPurchasableOffers.",
      "id": "GoogleCloudChannelV1ListPurchasableOffersResponse"
    },
    "GoogleCloudChannelV1alpha1CommitmentSettings": {
      "properties": {
        "renewalSettings": {
          "description": "Optional. Renewal settings applicable for a commitment-based Offer.",
          "$ref": "GoogleCloudChannelV1alpha1RenewalSettings"
        },
        "endTime": {
          "description": "Output only. Commitment end timestamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "startTime": {
          "description": "Output only. Commitment start timestamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudChannelV1alpha1CommitmentSettings",
      "description": "Commitment settings for commitment-based offers."
    },
    "GoogleCloudChannelV1OperationMetadata": {
      "description": "Provides contextual information about a google.longrunning.Operation.",
      "type": "object",
      "id": "GoogleCloudChannelV1OperationMetadata",
      "properties": {
        "operationType": {
          "description": "The RPC that initiated this Long Running Operation.",
          "type": "string",
          "enumDescriptions": [
            "Not used.",
            "Long Running Operation was triggered by CreateEntitlement.",
            "Long Running Operation was triggered by ChangeRenewalSettings.",
            "Long Running Operation was triggered by StartPaidService.",
            "Long Running Operation was triggered by ActivateEntitlement.",
            "Long Running Operation was triggered by SuspendEntitlement.",
            "Long Running Operation was triggered by CancelEntitlement.",
            "Long Running Operation was triggered by TransferEntitlements.",
            "Long Running Operation was triggered by TransferEntitlementsToGoogle.",
            "Long Running Operation was triggered by ChangeOffer.",
            "Long Running Operation was triggered by ChangeParameters.",
            "Long Running Operation was triggered by ProvisionCloudIdentity."
          ],
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATE_ENTITLEMENT",
            "CHANGE_RENEWAL_SETTINGS",
            "START_PAID_SERVICE",
            "ACTIVATE_ENTITLEMENT",
            "SUSPEND_ENTITLEMENT",
            "CANCEL_ENTITLEMENT",
            "TRANSFER_ENTITLEMENTS",
            "TRANSFER_ENTITLEMENTS_TO_GOOGLE",
            "CHANGE_OFFER",
            "CHANGE_PARAMETERS",
            "PROVISION_CLOUD_IDENTITY"
          ]
        }
      }
    },
    "GoogleCloudChannelV1UnregisterSubscriberResponse": {
      "type": "object",
      "description": "Response Message for UnregisterSubscriber.",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Name of the topic the service account subscriber access was removed from."
        }
      },
      "id": "GoogleCloudChannelV1UnregisterSubscriberResponse"
    }
  },
  "version_module": true,
  "protocol": "rest",
  "rootUrl": "https://cloudchannel.googleapis.com/",
  "revision": "20220209",
  "baseUrl": "https://cloudchannel.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/apps.order": {
          "description": "Manage users on your domain"
        }
      }
    }
  },
  "mtlsRootUrl": "https://cloudchannel.mtls.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "parameters": {
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "default": "json",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    }
  },
  "description": "The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.",
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "id": "cloudchannel:v1",
  "name": "cloudchannel",
  "canonicalName": "Cloudchannel"
}

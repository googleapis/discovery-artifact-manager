{
  "ownerName": "Google",
  "title": "Google Cloud Support API",
  "version_module": true,
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "description": "Manages Google Cloud technical support cases for Customer Care support offerings. ",
  "version": "v2",
  "documentationLink": "https://cloud.google.com/support/docs/apis",
  "basePath": "",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://cloudsupport.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "schemas": {
    "ObjectId": {
      "id": "ObjectId",
      "type": "object",
      "description": "# gdata.* are outside protos with mising documentation",
      "properties": {
        "objectName": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "bucketName": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      }
    },
    "ListAttachmentsResponse": {
      "id": "ListAttachmentsResponse",
      "properties": {
        "attachments": {
          "items": {
            "$ref": "Attachment"
          },
          "description": "The list of attachments associated with a case.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.attachments.list` requests. If unspecified, there are no more results to retrieve.",
          "type": "string"
        }
      },
      "description": "The response message for the ListAttachments endpoint.",
      "type": "object"
    },
    "DiffUploadResponse": {
      "properties": {
        "originalObject": {
          "$ref": "CompositeMedia",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "objectVersion": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation",
      "id": "DiffUploadResponse",
      "type": "object"
    },
    "DiffDownloadResponse": {
      "description": "# gdata.* are outside protos with mising documentation",
      "properties": {
        "objectLocation": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "CompositeMedia"
        }
      },
      "type": "object",
      "id": "DiffDownloadResponse"
    },
    "ListCommentsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.comments.list` requests. If unspecified, there are no more results to retrieve."
        },
        "comments": {
          "type": "array",
          "description": "List of the comments associated with the case.",
          "items": {
            "$ref": "Comment"
          }
        }
      },
      "description": "The response message for the ListComments endpoint.",
      "id": "ListCommentsResponse",
      "type": "object"
    },
    "Blobstore2Info": {
      "description": "# gdata.* are outside protos with mising documentation",
      "type": "object",
      "id": "Blobstore2Info",
      "properties": {
        "blobGeneration": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "int64",
          "type": "string"
        },
        "blobId": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "uploadMetadataContainer": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "byte"
        },
        "downloadReadHandle": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte"
        },
        "readToken": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      }
    },
    "WorkflowOperationMetadata": {
      "id": "WorkflowOperationMetadata",
      "type": "object",
      "description": "Metadata about the operation. Used to lookup the current status.",
      "properties": {
        "namespace": {
          "description": "The namespace that the job was scheduled in. Must be included in the workflow metadata so the workflow status can be retrieved.",
          "type": "string"
        },
        "operationAction": {
          "description": "The type of action the operation is classified as.",
          "type": "string",
          "enumDescriptions": [
            "Operation action is not specified.",
            "Operation pertains to the creation of a new support account.",
            "Operation pertains to the updating of an existing support account.",
            "Operation pertains to the purchasing of a support plan that may either create or update a support account."
          ],
          "enum": [
            "OPERATION_ACTION_UNSPECIFIED",
            "CREATE_SUPPORT_ACCOUNT",
            "UPDATE_SUPPORT_ACCOUNT",
            "PURCHASE_SUPPORT_ACCOUNT"
          ]
        },
        "workflowOperationType": {
          "type": "string",
          "enum": [
            "UNKNOWN_OPERATION_TYPE",
            "WORKFLOWS_V1",
            "WORKFLOWS_V2"
          ],
          "enumDescriptions": [
            "Unknown version.",
            "Version 1.",
            "Version 2."
          ],
          "description": "Which version of the workflow service this operation came from."
        }
      }
    },
    "Media": {
      "id": "Media",
      "properties": {
        "sha1Hash": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte"
        },
        "token": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "diffVersionResponse": {
          "$ref": "DiffVersionResponse",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "bigstoreObjectRef": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "byte",
          "deprecated": true
        },
        "diffDownloadResponse": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "DiffDownloadResponse"
        },
        "algorithm": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "deprecated": true
        },
        "diffUploadResponse": {
          "$ref": "DiffUploadResponse",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "blobRef": {
          "description": "# gdata.* are outside protos with mising documentation",
          "deprecated": true,
          "type": "string",
          "format": "byte"
        },
        "compositeMedia": {
          "description": "# gdata.* are outside protos with mising documentation",
          "items": {
            "$ref": "CompositeMedia"
          },
          "type": "array"
        },
        "timestamp": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "uint64",
          "type": "string"
        },
        "crc32cHash": {
          "type": "integer",
          "format": "uint32",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "blobstore2Info": {
          "$ref": "Blobstore2Info",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "inline": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "byte"
        },
        "objectId": {
          "$ref": "ObjectId",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "sha256Hash": {
          "type": "string",
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "contentType": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "md5Hash": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte"
        },
        "path": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "cosmoBinaryReference": {
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "hashVerified": {
          "type": "boolean",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "diffChecksumsResponse": {
          "$ref": "DiffChecksumsResponse",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "filename": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "hash": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "deprecated": true
        },
        "isPotentialRetry": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "boolean"
        },
        "mediaId": {
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "length": {
          "format": "int64",
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "contentTypeInfo": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "ContentTypeInfo"
        },
        "diffUploadRequest": {
          "$ref": "DiffUploadRequest",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "referenceType": {
          "enumDescriptions": [
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation"
          ],
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "GET_MEDIA",
            "COMPOSITE_MEDIA",
            "BIGSTORE_REF",
            "DIFF_VERSION_RESPONSE",
            "DIFF_CHECKSUMS_RESPONSE",
            "DIFF_DOWNLOAD_RESPONSE",
            "DIFF_UPLOAD_REQUEST",
            "DIFF_UPLOAD_RESPONSE",
            "COSMO_BINARY_REFERENCE",
            "ARBITRARY_BYTES"
          ],
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "downloadParameters": {
          "$ref": "DownloadParameters",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "type": "object",
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "CloseCaseRequest": {
      "type": "object",
      "description": "The request message for the CloseCase endpoint.",
      "properties": {},
      "id": "CloseCaseRequest"
    },
    "Actor": {
      "id": "Actor",
      "description": "An object containing information about the effective user and authenticated principal responsible for an action.",
      "properties": {
        "googleSupport": {
          "description": "Output only. Whether the actor is a Google support actor.",
          "readOnly": true,
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "The name to display for the actor. If not provided, it is inferred from credentials supplied during case creation. When an email is provided, a display name must also be provided. This will be obfuscated if the user is a Google Support agent."
        },
        "email": {
          "type": "string",
          "description": "The email address of the actor. If not provided, it is inferred from credentials supplied during case creation. If the authenticated principal does not have an email address, one must be provided. When a name is provided, an email must also be provided. This will be obfuscated if the user is a Google Support agent."
        }
      },
      "type": "object"
    },
    "Attachment": {
      "properties": {
        "sizeBytes": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The size of the attachment in bytes.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "Output only. The MIME type of the attachment (e.g. text/plain).",
          "readOnly": true
        },
        "creator": {
          "description": "Output only. The user who uploaded the attachment. Note, the name and email will be obfuscated if the attachment was uploaded by Google support.",
          "$ref": "Actor",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time at which the attachment was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the attachment.",
          "type": "string"
        },
        "filename": {
          "type": "string",
          "description": "The filename of the attachment (e.g. `\"graph.jpg\"`)."
        }
      },
      "id": "Attachment",
      "description": "Represents a file attached to a support case.",
      "type": "object"
    },
    "CompositeMedia": {
      "properties": {
        "referenceType": {
          "enumDescriptions": [
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation",
            "# gdata.* are outside protos with mising documentation"
          ],
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "BIGSTORE_REF",
            "COSMO_BINARY_REFERENCE"
          ]
        },
        "blobstore2Info": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "Blobstore2Info"
        },
        "crc32cHash": {
          "format": "uint32",
          "type": "integer",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "sha1Hash": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "inline": {
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "byte",
          "type": "string"
        },
        "length": {
          "type": "string",
          "format": "int64",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "cosmoBinaryReference": {
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "objectId": {
          "$ref": "ObjectId",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "blobRef": {
          "type": "string",
          "format": "byte",
          "description": "# gdata.* are outside protos with mising documentation",
          "deprecated": true
        },
        "md5Hash": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "CompositeMedia",
      "type": "object",
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "Case": {
      "type": "object",
      "description": "A support case.",
      "properties": {
        "subscriberEmailAddresses": {
          "description": "The email addresses to receive updates on this case.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time this case was created.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The time this case was last updated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "NEW",
            "IN_PROGRESS_GOOGLE_SUPPORT",
            "ACTION_REQUIRED",
            "SOLUTION_PROVIDED",
            "CLOSED"
          ],
          "type": "string",
          "description": "Output only. The current status of the support case.",
          "enumDescriptions": [
            "Case is in an unknown state.",
            "The case has been created but no one is assigned to work on it yet.",
            "The case is currently being handled by Google support.",
            "Google is waiting for a response.",
            "A solution has been offered for the case, but it isn't yet closed.",
            "The case has been resolved."
          ],
          "readOnly": true
        },
        "testCase": {
          "type": "boolean",
          "description": "Whether this case was created for internal API testing and should not be acted on by the support team."
        },
        "classification": {
          "description": "The issue classification applicable to this case.",
          "$ref": "CaseClassification"
        },
        "languageCode": {
          "description": "The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `\"en\"`, `\"zh-CN\"`, `\"zh-TW\"`, `\"ja\"`, `\"ko\"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours",
          "type": "string"
        },
        "priority": {
          "description": "The priority of this case.",
          "enum": [
            "PRIORITY_UNSPECIFIED",
            "P0",
            "P1",
            "P2",
            "P3",
            "P4"
          ],
          "type": "string",
          "enumDescriptions": [
            "Priority is undefined or has not been set yet.",
            "Extreme impact on a production service. Service is hard down.",
            "Critical impact on a production service. Service is currently unusable.",
            "Severe impact on a production service. Service is usable but greatly impaired.",
            "Medium impact on a production service. Service is available, but moderately impaired.",
            "General questions or minor issues. Production service is fully available."
          ]
        },
        "description": {
          "description": "A broad description of the issue.",
          "type": "string"
        },
        "escalated": {
          "description": "Whether the case is currently escalated.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The resource name for the case."
        },
        "creator": {
          "description": "The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.",
          "$ref": "Actor"
        },
        "timeZone": {
          "description": "The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The short summary of the issue reported in this case."
        },
        "contactEmail": {
          "description": "A user-supplied email address to send case update notifications for. This should only be used in BYOID flows, where we cannot infer the user's email address directly from their EUCs.",
          "type": "string"
        }
      },
      "id": "Case"
    },
    "CreateAttachmentRequest": {
      "id": "CreateAttachmentRequest",
      "description": "The request message for the CreateAttachment endpoint.",
      "properties": {
        "attachment": {
          "$ref": "Attachment",
          "description": "Required. The attachment to be created."
        }
      },
      "type": "object"
    },
    "DownloadParameters": {
      "id": "DownloadParameters",
      "properties": {
        "ignoreRange": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "boolean"
        },
        "allowGzipCompression": {
          "type": "boolean",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation",
      "type": "object"
    },
    "DiffChecksumsResponse": {
      "type": "object",
      "properties": {
        "chunkSizeBytes": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation",
          "format": "int64"
        },
        "objectSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "objectLocation": {
          "$ref": "CompositeMedia",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "checksumsLocation": {
          "$ref": "CompositeMedia",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "objectVersion": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation",
      "id": "DiffChecksumsResponse"
    },
    "DiffVersionResponse": {
      "type": "object",
      "description": "# gdata.* are outside protos with mising documentation",
      "properties": {
        "objectSizeBytes": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string",
          "format": "int64"
        },
        "objectVersion": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "id": "DiffVersionResponse"
    },
    "Comment": {
      "id": "Comment",
      "type": "object",
      "properties": {
        "plainTextBody": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. DEPRECATED. An automatically generated plain text version of body with all rich text syntax stripped."
        },
        "creator": {
          "readOnly": true,
          "description": "Output only. The user or Google Support agent created this comment.",
          "$ref": "Actor"
        },
        "body": {
          "type": "string",
          "description": "The full comment body. Maximum of 12800 characters. This can contain rich text syntax."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when this comment was created."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name for the comment.",
          "readOnly": true
        }
      },
      "description": "A comment associated with a support case."
    },
    "Escalation": {
      "id": "Escalation",
      "description": "An escalation of a support case.",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "enumDescriptions": [
            "The escalation reason is in an unknown state or has not been specified.",
            "The case is taking too long to resolve.",
            "The support agent does not have the expertise required to successfully resolve the issue.",
            "The issue is having a significant business impact."
          ],
          "description": "Required. The reason why the Case is being escalated.",
          "enum": [
            "REASON_UNSPECIFIED",
            "RESOLUTION_TIME",
            "TECHNICAL_EXPERTISE",
            "BUSINESS_IMPACT"
          ]
        },
        "justification": {
          "type": "string",
          "description": "Required. A free text description to accompany the `reason` field above. Provides additional context on why the case is being escalated."
        }
      }
    },
    "EscalateCaseRequest": {
      "id": "EscalateCaseRequest",
      "properties": {
        "escalation": {
          "$ref": "Escalation",
          "description": "The escalation information to be sent with the escalation request."
        }
      },
      "type": "object",
      "description": "The request message for the EscalateCase endpoint."
    },
    "DiffUploadRequest": {
      "type": "object",
      "id": "DiffUploadRequest",
      "properties": {
        "objectInfo": {
          "description": "# gdata.* are outside protos with mising documentation",
          "$ref": "CompositeMedia"
        },
        "objectVersion": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "checksumsInfo": {
          "$ref": "CompositeMedia",
          "description": "# gdata.* are outside protos with mising documentation"
        }
      },
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "SearchCasesResponse": {
      "id": "SearchCasesResponse",
      "description": "The response message for the SearchCases endpoint.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.search` requests. If unspecified, there are no more results to retrieve.",
          "type": "string"
        },
        "cases": {
          "type": "array",
          "items": {
            "$ref": "Case"
          },
          "description": "The list of cases associated with the parent after any filters have been applied."
        }
      }
    },
    "SearchCaseClassificationsResponse": {
      "properties": {
        "caseClassifications": {
          "items": {
            "$ref": "CaseClassification"
          },
          "description": "The classifications retrieved.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `caseClassifications.list` requests. If unspecified, there are no more results to retrieve."
        }
      },
      "description": "The response message for SearchCaseClassifications endpoint.",
      "type": "object",
      "id": "SearchCaseClassificationsResponse"
    },
    "ContentTypeInfo": {
      "type": "object",
      "properties": {
        "fromHeader": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "fromFileName": {
          "type": "string",
          "description": "# gdata.* are outside protos with mising documentation"
        },
        "fromUrlPath": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "bestGuess": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        },
        "fromBytes": {
          "description": "# gdata.* are outside protos with mising documentation",
          "type": "string"
        }
      },
      "id": "ContentTypeInfo",
      "description": "# gdata.* are outside protos with mising documentation"
    },
    "CaseClassification": {
      "properties": {
        "displayName": {
          "description": "A display name for the classification. The display name is not static and can change. To uniquely and consistently identify classifications, use the `CaseClassification.id` field.",
          "type": "string"
        },
        "id": {
          "description": "The unique ID for a classification. Must be specified for case creation. To retrieve valid classification IDs for case creation, use `caseClassifications.search`. Classification IDs returned by `caseClassifications.search` are guaranteed to be valid for at least 6 months. If a given classification is deactiveated, it will immediately stop being returned. After 6 months, `case.create` requests using the classification ID will fail.",
          "type": "string"
        }
      },
      "id": "CaseClassification",
      "type": "object",
      "description": "A classification object with a product type and value."
    },
    "ListCasesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.list` requests. If unspecified, there are no more results to retrieve."
        },
        "cases": {
          "items": {
            "$ref": "Case"
          },
          "type": "array",
          "description": "The list of cases associated with the parent after any filters have been applied."
        }
      },
      "description": "The response message for the ListCases endpoint.",
      "type": "object",
      "id": "ListCasesResponse"
    }
  },
  "resources": {
    "caseClassifications": {
      "methods": {
        "search": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieve valid classifications to use when creating a support case. Classifications are hierarchical. Each classification is a string containing all levels of the hierarchy separated by `\" \u003e \"`. For example, `\"Technical Issue \u003e Compute \u003e Compute Engine\"`. Classification IDs returned by this endpoint are valid for at least six months. When a classification is deactivated, this endpoint immediately stops returning it. After six months, `case.create` requests using the classification will fail. EXAMPLES: cURL: ```shell curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ 'https://cloudsupport.googleapis.com/v2/caseClassifications:search?query=display_name:\"*Compute%20Engine*\"' ``` Python: ```python import googleapiclient.discovery supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=\"v2\", discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version=v2\", ) request = supportApiService.caseClassifications().search( query='display_name:\"*Compute Engine*\"' ) print(request.execute()) ```",
          "id": "cloudsupport.caseClassifications.search",
          "parameters": {
            "query": {
              "description": "An expression used to filter case classifications. If it's an empty string, then no filtering happens. Otherwise, case classifications will be returned that match the filter.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved.",
              "type": "string"
            },
            "pageSize": {
              "description": "The maximum number of classifications fetched with each request.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "flatPath": "v2/caseClassifications:search",
          "response": {
            "$ref": "SearchCaseClassificationsResponse"
          },
          "path": "v2/caseClassifications:search",
          "parameterOrder": []
        }
      }
    },
    "cases": {
      "resources": {
        "comments": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "List all the comments associated with a case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case/comments\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = ( supportApiService.cases() .comments() .list(parent=\"projects/some-project/cases/43595344\") ) print(request.execute()) ```",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
                  "description": "Required. The name of the case for which to list comments."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying the page of results to return. If unspecified, the first page is returned."
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of comments to fetch. Defaults to 10.",
                  "location": "query"
                }
              },
              "path": "v2/{+parent}/comments",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}/comments",
              "id": "cloudsupport.cases.comments.list",
              "response": {
                "$ref": "ListCommentsResponse"
              },
              "httpMethod": "GET"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "Comment"
              },
              "id": "cloudsupport.cases.comments.create",
              "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}/comments",
              "response": {
                "$ref": "Comment"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the case to which the comment should be added.",
                  "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
                  "type": "string"
                }
              },
              "description": "Add a new comment to a case. The comment must have the following fields set: `body`. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43591344\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header 'Content-Type: application/json' \\ --data '{ \"body\": \"This is a test comment.\" }' \\ \"https://cloudsupport.googleapis.com/v2/$case/comments\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = ( supportApiService.cases() .comments() .create( parent=\"projects/some-project/cases/43595344\", body={\"body\": \"This is a test comment.\"}, ) ) print(request.execute()) ```",
              "path": "v2/{+parent}/comments"
            }
          }
        },
        "attachments": {
          "methods": {
            "list": {
              "id": "cloudsupport.cases.attachments.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of attachments fetched with each request. If not provided, the default is 10. The maximum page size that will be returned is 100.",
                  "type": "integer"
                },
                "parent": {
                  "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the case for which attachments should be listed.",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "ListAttachmentsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}/attachments",
              "path": "v2/{+parent}/attachments",
              "description": "List all the attachments associated with a support case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/23598314\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case/attachments\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = ( supportApiService.cases() .attachments() .list(parent=\"projects/some-project/cases/43595344\") ) print(request.execute()) ```"
            }
          }
        }
      },
      "methods": {
        "get": {
          "response": {
            "$ref": "Case"
          },
          "path": "v2/{+name}",
          "description": "Retrieve a case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/16033687\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().get( name=\"projects/some-project/cases/43595344\", ) print(request.execute()) ```",
          "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}",
          "id": "cloudsupport.cases.get",
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "required": true,
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "description": "Required. The full name of a case to be retrieved."
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "escalate": {
          "description": "Escalate a case, starting the Google Cloud Support escalation management process. This operation is only available for some support services. Go to https://cloud.google.com/support and look for 'Technical support escalations' in the feature list to find out which ones let you do that. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header \"Content-Type: application/json\" \\ --data '{ \"escalation\": { \"reason\": \"BUSINESS_IMPACT\", \"justification\": \"This is a test escalation.\" } }' \\ \"https://cloudsupport.googleapis.com/v2/$case:escalate\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().escalate( name=\"projects/some-project/cases/43595344\", body={ \"escalation\": { \"reason\": \"BUSINESS_IMPACT\", \"justification\": \"This is a test escalation.\", }, }, ) print(request.execute()) ```",
          "response": {
            "$ref": "Case"
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}:escalate",
          "id": "cloudsupport.cases.escalate",
          "httpMethod": "POST",
          "path": "v2/{+name}:escalate",
          "request": {
            "$ref": "EscalateCaseRequest"
          },
          "parameters": {
            "name": {
              "description": "Required. The name of the case to be escalated.",
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$"
            }
          }
        },
        "close": {
          "id": "cloudsupport.cases.close",
          "httpMethod": "POST",
          "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}:close",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Close a case. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$case:close\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().close( name=\"projects/some-project/cases/43595344\" ) print(request.execute()) ```",
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "CloseCaseRequest"
          },
          "path": "v2/{+name}:close",
          "parameters": {
            "name": {
              "description": "Required. The name of the case to close.",
              "location": "path",
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "required": true,
              "type": "string"
            }
          },
          "response": {
            "$ref": "Case"
          }
        },
        "create": {
          "parameterOrder": [
            "parent"
          ],
          "parameters": {
            "parent": {
              "pattern": "^[^/]+/[^/]+$",
              "type": "string",
              "location": "path",
              "description": "Required. The name of the parent under which the case should be created.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Create a new case and associate it with a parent. It must have the following fields set: `display_name`, `description`, `classification`, and `priority`. If you're just testing the API and don't want to route your case to an agent, set `testCase=true`. EXAMPLES: cURL: ```shell parent=\"projects/some-project\" curl \\ --request POST \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header 'Content-Type: application/json' \\ --data '{ \"display_name\": \"Test case created by me.\", \"description\": \"a random test case, feel free to close\", \"classification\": { \"id\": \"100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8\" }, \"time_zone\": \"-07:00\", \"subscriber_email_addresses\": [ \"foo@domain.com\", \"bar@domain.com\" ], \"testCase\": true, \"priority\": \"P3\" }' \\ \"https://cloudsupport.googleapis.com/v2/$parent/cases\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().create( parent=\"projects/some-project\", body={ \"displayName\": \"A Test Case\", \"description\": \"This is a test case.\", \"testCase\": True, \"priority\": \"P2\", \"classification\": { \"id\": \"100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8\" }, }, ) print(request.execute()) ```",
          "request": {
            "$ref": "Case"
          },
          "path": "v2/{+parent}/cases",
          "flatPath": "v2/{v2Id}/{v2Id1}/cases",
          "id": "cloudsupport.cases.create",
          "httpMethod": "POST",
          "response": {
            "$ref": "Case"
          }
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "cloudsupport.cases.list",
          "description": "Retrieve all cases under a parent, but not its children. For example, listing cases under an organization only returns the cases that are directly parented by that organization. To retrieve cases under an organization and its projects, use `cases.search`. EXAMPLES: cURL: ```shell parent=\"projects/some-project\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$parent/cases\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().list(parent=\"projects/some-project\") print(request.execute()) ```",
          "parameters": {
            "filter": {
              "type": "string",
              "description": "An expression used to filter cases. If it's an empty string, then no filtering happens. Otherwise, the endpoint returns the cases that match the filter. Expressions use the following fields separated by `AND` and specified with `=`: - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can be `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. - `creator.email`: The email address of the case creator. EXAMPLES: - `state=CLOSED` - `state=OPEN AND creator.email=\"tester@example.com\"` - `state=OPEN AND (priority=P0 OR priority=P1)`",
              "location": "query"
            },
            "parent": {
              "pattern": "^[^/]+/[^/]+$",
              "type": "string",
              "description": "Required. The name of a parent to list cases under.",
              "required": true,
              "location": "path"
            },
            "pageSize": {
              "location": "query",
              "format": "int32",
              "type": "integer",
              "description": "The maximum number of cases fetched with each request. Defaults to 10."
            },
            "pageToken": {
              "location": "query",
              "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved.",
              "type": "string"
            }
          },
          "path": "v2/{+parent}/cases",
          "response": {
            "$ref": "ListCasesResponse"
          },
          "flatPath": "v2/{v2Id}/{v2Id1}/cases",
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET"
        },
        "patch": {
          "parameters": {
            "updateMask": {
              "type": "string",
              "description": "A list of attributes of the case that should be updated. Supported values are `priority`, `display_name`, and `subscriber_email_addresses`. If no fields are specified, all supported fields are updated. Be careful - if you do not provide a field mask, then you might accidentally clear some fields. For example, if you leave the field mask empty and do not provide a value for `subscriber_email_addresses`, then `subscriber_email_addresses` is updated to empty.",
              "location": "query",
              "format": "google-fieldmask"
            },
            "name": {
              "required": true,
              "description": "The resource name for the case.",
              "type": "string",
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "location": "path"
            }
          },
          "path": "v2/{+name}",
          "response": {
            "$ref": "Case"
          },
          "id": "cloudsupport.cases.patch",
          "request": {
            "$ref": "Case"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}",
          "httpMethod": "PATCH",
          "description": "Update a case. Only some fields can be updated. EXAMPLES: cURL: ```shell case=\"projects/some-project/cases/43595344\" curl \\ --request PATCH \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --header \"Content-Type: application/json\" \\ --data '{ \"priority\": \"P1\" }' \\ \"https://cloudsupport.googleapis.com/v2/$case?updateMask=priority\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().patch( name=\"projects/some-project/cases/43112854\", body={ \"displayName\": \"This is Now a New Title\", \"priority\": \"P2\", }, ) print(request.execute()) ```"
        },
        "search": {
          "httpMethod": "GET",
          "flatPath": "v2/{v2Id}/{v2Id1}/cases:search",
          "path": "v2/{+parent}/cases:search",
          "response": {
            "$ref": "SearchCasesResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "description": "Search for cases using a query. EXAMPLES: cURL: ```shell parent=\"projects/some-project\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$parent/cases:search\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.cases().search( parent=\"projects/some-project\", query=\"state=OPEN\" ) print(request.execute()) ```",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "cloudsupport.cases.search",
          "parameters": {
            "query": {
              "type": "string",
              "description": "An expression used to filter cases. Expressions use the following fields separated by `AND` and specified with `=`: - `organization`: An organization name in the form `organizations/`. - `project`: A project name in the form `projects/`. - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can be `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. - `creator.email`: The email address of the case creator. - `billingAccount`: A billing account in the form `billingAccounts/` You must specify either `organization` or `project`. To search across `displayName`, `description`, and comments, use a global restriction with no keyword or operator. For example, `\"my search\"`. To search only cases updated after a certain date, use `update_time` restricted with that particular date, time, and timezone in ISO datetime format. For example, `update_time\u003e\"2020-01-01T00:00:00-05:00\"`. `update_time` only supports the greater than operator (`\u003e`). Examples: - `organization=\"organizations/123456789\"` - `project=\"projects/my-project-id\"` - `project=\"projects/123456789\"` - `billing_account=\"billingAccounts/123456-A0B0C0-CUZ789\"` - `organization=\"organizations/123456789\" AND state=CLOSED` - `project=\"projects/my-project-id\" AND creator.email=\"tester@example.com\"` - `project=\"projects/my-project-id\" AND (priority=P0 OR priority=P1)`",
              "location": "query"
            },
            "pageSize": {
              "description": "The maximum number of cases fetched with each request. The default page size is 10.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "description": "A token identifying the page of results to return. If unspecified, the first page is retrieved.",
              "location": "query"
            },
            "parent": {
              "type": "string",
              "location": "path",
              "description": "The name of the parent resource to search for cases under.",
              "pattern": "^[^/]+/[^/]+$",
              "required": true
            }
          }
        }
      }
    },
    "media": {
      "methods": {
        "upload": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "CreateAttachmentRequest"
          },
          "mediaUpload": {
            "accept": [
              "*/*"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/v2/{+parent}/attachments"
              }
            }
          },
          "parameters": {
            "parent": {
              "pattern": "^[^/]+/[^/]+/cases/[^/]+$",
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Required. The name of the case or Cloud resource to which the attachment should be attached."
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "id": "cloudsupport.media.upload",
          "path": "v2/{+parent}/attachments",
          "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}/attachments",
          "supportsMediaUpload": true,
          "description": "Create a file attachment on a case or Cloud resource. The attachment must have the following fields set: `filename`. EXAMPLES: cURL: ```shell echo \"This text is in a file I'm uploading using CSAPI.\" \\ \u003e \"./example_file.txt\" case=\"projects/some-project/cases/43594844\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ --data-binary @\"./example_file.txt\" \\ \"https://cloudsupport.googleapis.com/upload/v2beta/$case/attachments?attachment.filename=uploaded_via_curl.txt\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) file_path = \"./example_file.txt\" with open(file_path, \"w\") as file: file.write( \"This text is inside a file I'm going to upload using the Cloud Support API.\", ) request = supportApiService.media().upload( parent=\"projects/some-project/cases/43595344\", media_body=file_path ) request.uri = request.uri.split(\"?\")[0] + \"?attachment.filename=uploaded_via_python.txt\" print(request.execute()) ```",
          "response": {
            "$ref": "Attachment"
          },
          "httpMethod": "POST"
        },
        "download": {
          "response": {
            "$ref": "Media"
          },
          "supportsMediaDownload": true,
          "useMediaDownloadService": true,
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^[^/]+/[^/]+/cases/[^/]+/attachments/[^/]+$",
              "location": "path",
              "type": "string",
              "description": "The name of the file attachment to download."
            }
          },
          "path": "v2/{+name}:download",
          "flatPath": "v2/{v2Id}/{v2Id1}/cases/{casesId}/attachments/{attachmentsId}:download",
          "description": "Download a file attached to a case. Note: HTTP requests must append \"?alt=media\" to the URL. EXAMPLES: cURL: ```shell name=\"projects/some-project/cases/43594844/attachments/0674M00000WijAnZAJ\" curl \\ --header \"Authorization: Bearer $(gcloud auth print-access-token)\" \\ \"https://cloudsupport.googleapis.com/v2/$name:download?alt=media\" ``` Python: ```python import googleapiclient.discovery api_version = \"v2\" supportApiService = googleapiclient.discovery.build( serviceName=\"cloudsupport\", version=api_version, discoveryServiceUrl=f\"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}\", ) request = supportApiService.media().download( name=\"projects/some-project/cases/43595344/attachments/0684M00000Pw6pHQAR\" ) request.uri = request.uri.split(\"?\")[0] + \"?alt=media\" print(request.execute()) ```",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "cloudsupport.media.download",
          "httpMethod": "GET"
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://cloudsupport.googleapis.com/",
  "kind": "discovery#restDescription",
  "canonicalName": "Cloud Support",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "cloudsupport",
  "id": "cloudsupport:v2",
  "baseUrl": "https://cloudsupport.googleapis.com/",
  "protocol": "rest",
  "revision": "20230920",
  "parameters": {
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "servicePath": ""
}

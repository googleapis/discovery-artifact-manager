{
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response."
    }
  },
  "fullyEncodeReservedExpansion": true,
  "servicePath": "",
  "version": "v1",
  "batchPath": "batch",
  "title": "Books API",
  "baseUrl": "https://books.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "ownerName": "Google",
  "resources": {
    "personalizedstream": {
      "methods": {
        "get": {
          "path": "books/v1/personalizedstream/get",
          "id": "books.personalizedstream.get",
          "httpMethod": "GET",
          "parameters": {
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query"
            }
          },
          "description": "Returns a stream of personalized book clusters",
          "flatPath": "books/v1/personalizedstream/get",
          "parameterOrder": [],
          "response": {
            "$ref": "Discoveryclusters"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "flatPath": "books/v1/notification/get",
          "response": {
            "$ref": "Notification"
          },
          "id": "books.notification.get",
          "parameters": {
            "notification_id": {
              "location": "query",
              "description": "String to identify the notification.",
              "required": true,
              "type": "string"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "notification_id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/notification/get",
          "description": "Returns notification details for a given notification id."
        }
      }
    },
    "cloudloading": {
      "methods": {
        "updateBook": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "parameterOrder": [],
          "flatPath": "books/v1/cloudloading/updateBook",
          "path": "books/v1/cloudloading/updateBook",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "id": "books.cloudloading.updateBook",
          "description": "Updates a user-upload volume.",
          "parameters": {},
          "httpMethod": "POST"
        },
        "deleteBook": {
          "description": "Remove the book and its contents",
          "id": "books.cloudloading.deleteBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/cloudloading/deleteBook",
          "parameterOrder": [
            "volumeId"
          ],
          "path": "books/v1/cloudloading/deleteBook",
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "volumeId": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "The id of the book to be removed."
            }
          }
        },
        "addBook": {
          "flatPath": "books/v1/cloudloading/addBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Add a user-upload volume and triggers processing.",
          "parameterOrder": [],
          "id": "books.cloudloading.addBook",
          "httpMethod": "POST",
          "parameters": {
            "drive_document_id": {
              "type": "string",
              "location": "query",
              "description": "A drive document id. The upload_client_token must not be set."
            },
            "upload_client_token": {
              "type": "string",
              "description": "Scotty upload token.",
              "location": "query"
            },
            "name": {
              "type": "string",
              "location": "query",
              "description": "The document name. It can be set only if the drive_document_id is set."
            },
            "mime_type": {
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "path": "books/v1/cloudloading/addBook"
        }
      }
    },
    "mylibrary": {
      "resources": {
        "readingpositions": {
          "methods": {
            "get": {
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.readingpositions.get",
              "parameters": {
                "volumeId": {
                  "description": "ID of volume for which to retrieve a reading position.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "contentVersion": {
                  "location": "query",
                  "description": "Volume content version for which this reading position is requested.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "response": {
                "$ref": "ReadingPosition"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId"
              ],
              "description": "Retrieves my reading position information for a volume."
            },
            "setPosition": {
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "description": "Sets my reading position information for a volume.",
              "httpMethod": "POST",
              "parameters": {
                "action": {
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "type": "string",
                  "description": "Action that caused this reading position to be set.",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "Volume content version for which this reading position applies."
                },
                "volumeId": {
                  "location": "path",
                  "description": "ID of volume for which to update the reading position.",
                  "type": "string",
                  "required": true
                },
                "position": {
                  "required": true,
                  "description": "Position string for the new volume reading position.",
                  "type": "string",
                  "location": "query"
                },
                "timestamp": {
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "required": true,
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "deviceCookie": {
                  "description": "Random persistent device cookie optional on set position.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ],
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.readingpositions.setPosition"
            }
          }
        },
        "annotations": {
          "methods": {
            "delete": {
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.annotations.delete",
              "parameters": {
                "annotationId": {
                  "type": "string",
                  "required": true,
                  "description": "The ID for the annotation to delete.",
                  "location": "path"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "annotationId"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes an annotation."
            },
            "insert": {
              "id": "books.mylibrary.annotations.insert",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations",
              "httpMethod": "POST",
              "description": "Inserts a new annotation.",
              "request": {
                "$ref": "Annotation"
              },
              "parameterOrder": [],
              "parameters": {
                "showOnlySummaryInResponse": {
                  "description": "Requests that only the summary of the specified layer be provided in the response.",
                  "location": "query",
                  "type": "boolean"
                },
                "country": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-3166-1 code to override the IP-based location."
                },
                "annotationId": {
                  "description": "The ID for the annotation to insert.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "response": {
                "$ref": "Annotation"
              }
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Annotations"
              },
              "path": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.list",
              "parameterOrder": [],
              "flatPath": "books/v1/mylibrary/annotations",
              "description": "Retrieves a list of annotations, possibly filtered.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "showDeleted": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false."
                },
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "location": "query"
                },
                "volumeId": {
                  "description": "The volume to restrict annotations to.",
                  "location": "query",
                  "type": "string"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "maxResults": {
                  "format": "uint32",
                  "maximum": "40",
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "location": "query",
                  "minimum": "0"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                },
                "layerIds": {
                  "description": "The layer ID(s) to limit annotation by.",
                  "location": "query",
                  "type": "string",
                  "repeated": true
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query",
                  "type": "string"
                },
                "layerId": {
                  "location": "query",
                  "description": "The layer ID to limit annotation by.",
                  "type": "string"
                }
              }
            },
            "summary": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations/summary",
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "id": "books.mylibrary.annotations.summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "httpMethod": "POST",
              "parameters": {
                "layerIds": {
                  "description": "Array of layer IDs to get the summary for.",
                  "type": "string",
                  "required": true,
                  "location": "query",
                  "repeated": true
                },
                "volumeId": {
                  "type": "string",
                  "description": "Volume id to get the summary for.",
                  "location": "query",
                  "required": true
                }
              },
              "description": "Gets the summary of specified layers."
            },
            "update": {
              "response": {
                "$ref": "Annotation"
              },
              "id": "books.mylibrary.annotations.update",
              "request": {
                "$ref": "Annotation"
              },
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "parameters": {
                "annotationId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the annotation to update."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "annotationId"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "description": "Updates an existing annotation."
            }
          }
        },
        "bookshelves": {
          "methods": {
            "moveVolume": {
              "parameters": {
                "volumePosition": {
                  "required": true,
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "description": "ID of volume to move.",
                  "location": "query",
                  "type": "string",
                  "required": true
                },
                "shelf": {
                  "description": "ID of bookshelf with the volume.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "httpMethod": "POST",
              "id": "books.mylibrary.bookshelves.moveVolume",
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ],
              "description": "Moves a volume within a bookshelf.",
              "response": {
                "$ref": "Empty"
              }
            },
            "clearVolumes": {
              "httpMethod": "POST",
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "shelf"
              ],
              "description": "Clears all volumes from a bookshelf.",
              "parameters": {
                "shelf": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              }
            },
            "list": {
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "books/v1/mylibrary/bookshelves",
              "response": {
                "$ref": "Bookshelves"
              },
              "flatPath": "books/v1/mylibrary/bookshelves",
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "httpMethod": "GET",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.bookshelves.list"
            },
            "get": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "response": {
                "$ref": "Bookshelf"
              },
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.bookshelves.get",
              "parameterOrder": [
                "shelf"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}"
            },
            "addVolume": {
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "description": "ID of bookshelf to which to add a volume.",
                  "required": true
                },
                "reason": {
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "description": "The reason for which the book is added to the library.",
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "description": "ID of volume to add.",
                  "type": "string",
                  "required": true,
                  "location": "query"
                }
              },
              "description": "Adds a volume to a bookshelf.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.addVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ]
            },
            "removeVolume": {
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "id": "books.mylibrary.bookshelves.removeVolume",
              "description": "Removes a volume from a bookshelf.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "required": true,
                  "location": "query",
                  "description": "ID of volume to remove."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "reason": {
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "description": "The reason for which the book is removed from the library.",
                  "location": "query",
                  "type": "string"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "POST"
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "Volumes"
                  },
                  "parameterOrder": [
                    "shelf"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "parameters": {
                    "source": {
                      "type": "string",
                      "location": "query",
                      "description": "String to identify the originator of this request."
                    },
                    "maxResults": {
                      "type": "integer",
                      "format": "uint32",
                      "location": "query",
                      "description": "Maximum number of results to return",
                      "minimum": "0"
                    },
                    "showPreorders": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Set to true to show pre-ordered books. Defaults to false."
                    },
                    "startIndex": {
                      "location": "query",
                      "type": "integer",
                      "description": "Index of the first element to return (starts at 0)",
                      "minimum": "0",
                      "format": "uint32"
                    },
                    "projection": {
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ],
                      "location": "query",
                      "description": "Restrict information returned to a set of selected fields.",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "type": "string"
                    },
                    "q": {
                      "description": "Full-text search query string in this bookshelf.",
                      "type": "string",
                      "location": "query"
                    },
                    "country": {
                      "type": "string",
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "location": "query"
                    },
                    "shelf": {
                      "type": "string",
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "books.mylibrary.bookshelves.volumes.list"
                }
              }
            }
          }
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "httpMethod": "GET",
          "parameterOrder": [],
          "description": "List available volumes under categories for onboarding experience.",
          "id": "books.onboarding.listCategoryVolumes",
          "response": {
            "$ref": "Volume2"
          },
          "path": "books/v1/onboarding/listCategoryVolumes",
          "parameters": {
            "pageSize": {
              "location": "query",
              "description": "Number of maximum results per page to be included in the response.",
              "type": "integer",
              "format": "uint32"
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "location": "query",
              "type": "string"
            },
            "categoryId": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "List of category ids requested."
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            }
          }
        },
        "listCategories": {
          "httpMethod": "GET",
          "response": {
            "$ref": "Category"
          },
          "parameterOrder": [],
          "path": "books/v1/onboarding/listCategories",
          "id": "books.onboarding.listCategories",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "List categories for onboarding experience.",
          "flatPath": "books/v1/onboarding/listCategories",
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "location": "query",
              "type": "string"
            }
          }
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "series_id"
              ],
              "id": "books.series.membership.get",
              "path": "books/v1/series/membership/get",
              "httpMethod": "GET",
              "response": {
                "$ref": "Seriesmembership"
              },
              "flatPath": "books/v1/series/membership/get",
              "parameters": {
                "page_size": {
                  "type": "integer",
                  "format": "uint32",
                  "location": "query",
                  "description": "Number of maximum results per page to be included in the response."
                },
                "series_id": {
                  "location": "query",
                  "description": "String that identifies the series",
                  "type": "string",
                  "required": true
                },
                "page_token": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                }
              },
              "description": "Returns Series membership data given the series id."
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Returns Series metadata for the given series ids.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "series_id"
          ],
          "path": "books/v1/series/get",
          "response": {
            "$ref": "Series"
          },
          "flatPath": "books/v1/series/get",
          "id": "books.series.get",
          "parameters": {
            "series_id": {
              "location": "query",
              "required": true,
              "repeated": true,
              "type": "string",
              "description": "String that identifies the series"
            }
          },
          "httpMethod": "GET"
        }
      }
    },
    "volumes": {
      "resources": {
        "useruploaded": {
          "methods": {
            "list": {
              "parameters": {
                "locale": {
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query"
                },
                "volumeId": {
                  "repeated": true,
                  "location": "query",
                  "type": "string",
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned."
                },
                "processingState": {
                  "repeated": true,
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ]
                },
                "maxResults": {
                  "location": "query",
                  "description": "Maximum number of results to return.",
                  "maximum": "40",
                  "minimum": "0",
                  "type": "integer",
                  "format": "uint32"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "startIndex": {
                  "type": "integer",
                  "description": "Index of the first result to return (starts at 0)",
                  "format": "uint32",
                  "location": "query",
                  "minimum": "0"
                }
              },
              "flatPath": "books/v1/volumes/useruploaded",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "path": "books/v1/volumes/useruploaded",
              "parameterOrder": [],
              "id": "books.volumes.useruploaded.list",
              "description": "Return a list of books uploaded by the current user.",
              "response": {
                "$ref": "Volumes"
              }
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "id": "books.volumes.recommended.list",
              "description": "Return a list of recommended books for the current user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "maxAllowedMaturityRating": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ]
                }
              },
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "httpMethod": "GET",
              "path": "books/v1/volumes/recommended",
              "flatPath": "books/v1/volumes/recommended"
            },
            "rate": {
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "flatPath": "books/v1/volumes/recommended/rate",
              "path": "books/v1/volumes/recommended/rate",
              "httpMethod": "POST",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "required": true,
                  "description": "ID of the source volume."
                },
                "rating": {
                  "location": "query",
                  "description": "Rating to be given to the volume.",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "required": true,
                  "type": "string"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                }
              },
              "id": "books.volumes.recommended.rate",
              "description": "Rate a recommended book for the current user."
            }
          }
        },
        "associated": {
          "methods": {
            "list": {
              "id": "books.volumes.associated.list",
              "description": "Return a list of associated books.",
              "parameters": {
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ]
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "association": {
                  "type": "string",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "location": "query",
                  "description": "Association type.",
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ]
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "volumeId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "ID of the source volume."
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/volumes/{volumeId}/associated"
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "parameters": {
                "maxResults": {
                  "type": "integer",
                  "description": "Maximum number of results to return.",
                  "minimum": "0",
                  "maximum": "100",
                  "format": "uint32",
                  "location": "query"
                },
                "acquireMethod": {
                  "location": "query",
                  "description": "How the book was acquired",
                  "repeated": true,
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ]
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "startIndex": {
                  "type": "integer",
                  "location": "query",
                  "minimum": "0",
                  "description": "Index of the first result to return (starts at 0)",
                  "format": "uint32"
                },
                "processingState": {
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "location": "query",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "repeated": true
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [],
              "id": "books.volumes.mybooks.list",
              "flatPath": "books/v1/volumes/mybooks",
              "response": {
                "$ref": "Volumes"
              },
              "description": "Return a list of books in My Library.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/mybooks",
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "get": {
          "parameters": {
            "includeNonComicsSeries": {
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query"
            },
            "projection": {
              "type": "string",
              "description": "Restrict information returned to a set of selected fields.",
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ]
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "type": "string",
              "description": "string to identify the originator of this request.",
              "location": "query"
            },
            "user_library_consistent_read": {
              "type": "boolean",
              "location": "query"
            },
            "country": {
              "type": "string",
              "location": "query",
              "description": "ISO-3166-1 code to override the IP-based location."
            },
            "volumeId": {
              "type": "string",
              "description": "ID of volume to retrieve.",
              "required": true,
              "location": "path"
            }
          },
          "description": "Gets volume information for a single volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Volume"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "volumeId"
          ],
          "flatPath": "books/v1/volumes/{volumeId}",
          "id": "books.volumes.get",
          "path": "books/v1/volumes/{volumeId}"
        },
        "list": {
          "httpMethod": "GET",
          "flatPath": "books/v1/volumes",
          "parameterOrder": [
            "q"
          ],
          "description": "Performs a book search.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes",
          "parameters": {
            "orderBy": {
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "description": "Sort search results.",
              "location": "query",
              "type": "string"
            },
            "printType": {
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "description": "Restrict to books or magazines.",
              "location": "query",
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "location": "query"
            },
            "showPreorders": {
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean"
            },
            "download": {
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "type": "string",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "description": "Restrict to volumes by download availability.",
              "location": "query"
            },
            "partner": {
              "location": "query",
              "type": "string",
              "description": "Restrict and brand results for partner ID."
            },
            "libraryRestrict": {
              "type": "string",
              "description": "Restrict search to this user's library.",
              "location": "query",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ]
            },
            "startIndex": {
              "location": "query",
              "description": "Index of the first result to return (starts at 0)",
              "type": "integer",
              "format": "uint32",
              "minimum": "0"
            },
            "langRestrict": {
              "location": "query",
              "description": "Restrict results to books with this language code.",
              "type": "string"
            },
            "filter": {
              "location": "query",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "description": "Filter search results.",
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "projection": {
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "description": "Restrict information returned to a set of selected fields.",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ]
            },
            "maxResults": {
              "maximum": "40",
              "location": "query",
              "description": "Maximum number of results to return.",
              "format": "uint32",
              "minimum": "0",
              "type": "integer"
            },
            "q": {
              "type": "string",
              "required": true,
              "location": "query",
              "description": "Full-text search query string."
            }
          },
          "response": {
            "$ref": "Volumes"
          },
          "id": "books.volumes.list"
        }
      }
    },
    "promooffer": {
      "methods": {
        "accept": {
          "id": "books.promooffer.accept",
          "description": "Accepts the promo offer.",
          "flatPath": "books/v1/promooffer/accept",
          "response": {
            "$ref": "Empty"
          },
          "path": "books/v1/promooffer/accept",
          "httpMethod": "POST",
          "parameters": {
            "volumeId": {
              "type": "string",
              "description": "Volume id to exercise the offer",
              "location": "query"
            },
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            },
            "model": {
              "type": "string",
              "description": "device model",
              "location": "query"
            },
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "type": "string",
              "location": "query"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": []
        },
        "get": {
          "path": "books/v1/promooffer/get",
          "httpMethod": "GET",
          "parameters": {
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "description": "device android_id",
              "type": "string",
              "location": "query"
            },
            "model": {
              "location": "query",
              "type": "string",
              "description": "device model"
            },
            "serial": {
              "type": "string",
              "location": "query",
              "description": "device serial"
            },
            "manufacturer": {
              "type": "string",
              "description": "device manufacturer",
              "location": "query"
            },
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            }
          },
          "flatPath": "books/v1/promooffer/get",
          "description": "Returns a list of promo offers available to the user",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.promooffer.get",
          "response": {
            "$ref": "Offers"
          }
        },
        "dismiss": {
          "path": "books/v1/promooffer/dismiss",
          "parameterOrder": [],
          "parameters": {
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "location": "query",
              "type": "string",
              "description": "Offer to dimiss"
            },
            "model": {
              "location": "query",
              "type": "string",
              "description": "device model"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "description": "Marks the promo offer as dismissed.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/dismiss",
          "httpMethod": "POST",
          "id": "books.promooffer.dismiss"
        }
      }
    },
    "layers": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Gets the layer summary for a volume.",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "response": {
            "$ref": "Layersummary"
          },
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "httpMethod": "GET",
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "parameters": {
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "summaryId": {
              "type": "string",
              "description": "The ID for the layer to get the summary for.",
              "location": "path",
              "required": true
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "books.layers.get"
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "volumeId"
          ],
          "httpMethod": "GET",
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "parameters": {
            "maxResults": {
              "maximum": "200",
              "type": "integer",
              "location": "query",
              "description": "Maximum number of results to return",
              "minimum": "0",
              "format": "uint32"
            },
            "volumeId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The volume to retrieve layers for."
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "contentVersion": {
              "location": "query",
              "type": "string",
              "description": "The content version for the requested volume."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The value of the nextToken from the previous page."
            }
          },
          "response": {
            "$ref": "Layersummaries"
          },
          "description": "List the layer summaries for a volume.",
          "id": "books.layers.list",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary"
        }
      },
      "resources": {
        "annotationData": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.annotationData.get",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "description": "Gets the annotation data.",
              "parameters": {
                "layerId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotations."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "required": true
                },
                "h": {
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "type": "integer",
                  "minimum": "0",
                  "location": "query",
                  "format": "int32"
                },
                "annotationDataId": {
                  "type": "string",
                  "description": "The ID of the annotation data to retrieve.",
                  "location": "path",
                  "required": true
                },
                "allowWebDefinitions": {
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "location": "query",
                  "type": "boolean"
                },
                "contentVersion": {
                  "required": true,
                  "type": "string",
                  "location": "query",
                  "description": "The content version for the volume you are trying to retrieve."
                },
                "w": {
                  "format": "int32",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query",
                  "type": "integer"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ],
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}"
            },
            "list": {
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "description": "Gets the annotation data for a volume and layer.",
              "id": "books.layers.annotationData.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "response": {
                "$ref": "Annotationsdata"
              },
              "parameters": {
                "updatedMin": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "maxResults": {
                  "format": "uint32",
                  "type": "integer",
                  "location": "query",
                  "maximum": "200",
                  "minimum": "0",
                  "description": "Maximum number of results to return"
                },
                "annotationDataId": {
                  "repeated": true,
                  "type": "string",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.",
                  "location": "query"
                },
                "w": {
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "format": "int32"
                },
                "updatedMax": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "scale": {
                  "minimum": "0",
                  "description": "The requested scale for the image.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "contentVersion": {
                  "type": "string",
                  "required": true,
                  "location": "query",
                  "description": "The content version for the requested volume."
                },
                "layerId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The ID for the layer to get the annotation data."
                },
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "description": "The volume to retrieve annotation data for.",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "h": {
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "httpMethod": "GET"
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "get": {
              "parameters": {
                "annotationId": {
                  "location": "path",
                  "required": true,
                  "description": "The ID of the volume annotation to retrieve.",
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "layerId": {
                  "location": "path",
                  "required": true,
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "response": {
                "$ref": "Volumeannotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.volumeAnnotations.get",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "description": "Gets the volume annotation.",
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ]
            },
            "list": {
              "response": {
                "$ref": "Volumeannotations"
              },
              "id": "books.layers.volumeAnnotations.list",
              "description": "Gets the volume annotations for a volume and layer.",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "endPosition": {
                  "type": "string",
                  "description": "The end position to end retrieving data from.",
                  "location": "query"
                },
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "type": "string"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "required": true,
                  "type": "string",
                  "location": "query"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "type": "integer",
                  "maximum": "200",
                  "location": "query",
                  "format": "uint32",
                  "minimum": "0",
                  "description": "Maximum number of results to return"
                },
                "volumeAnnotationsVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The version of the volume annotations that you are requesting."
                },
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query"
                },
                "endOffset": {
                  "description": "The end offset to end retrieving data from.",
                  "type": "string",
                  "location": "query"
                },
                "startPosition": {
                  "type": "string",
                  "location": "query",
                  "description": "The start position to start retrieving data from."
                },
                "startOffset": {
                  "location": "query",
                  "type": "string",
                  "description": "The start offset to start retrieving data from."
                }
              },
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ]
            }
          }
        }
      }
    },
    "myconfig": {
      "methods": {
        "updateUserSettings": {
          "response": {
            "$ref": "Usersettings"
          },
          "path": "books/v1/myconfig/updateUserSettings",
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "request": {
            "$ref": "Usersettings"
          },
          "id": "books.myconfig.updateUserSettings",
          "parameterOrder": [],
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST"
        },
        "releaseDownloadAccess": {
          "httpMethod": "POST",
          "id": "books.myconfig.releaseDownloadAccess",
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ],
          "response": {
            "$ref": "DownloadAccesses"
          },
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "parameters": {
            "cpksver": {
              "location": "query",
              "required": true,
              "description": "The device/version ID from which to release the restriction.",
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "volumeIds": {
              "location": "query",
              "required": true,
              "type": "string",
              "repeated": true,
              "description": "The volume(s) to release restrictions for."
            },
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Release downloaded content access restriction."
        },
        "syncVolumeLicenses": {
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string"
            },
            "features": {
              "type": "string",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ],
              "repeated": true,
              "location": "query"
            },
            "nonce": {
              "description": "The client nonce value.",
              "type": "string",
              "location": "query",
              "required": true
            },
            "cpksver": {
              "required": true,
              "location": "query",
              "description": "The device/version ID from which to release the restriction.",
              "type": "string"
            },
            "source": {
              "required": true,
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "showPreorders": {
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false."
            },
            "volumeIds": {
              "repeated": true,
              "type": "string",
              "location": "query",
              "description": "The volume(s) to request download restrictions for."
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.syncVolumeLicenses",
          "response": {
            "$ref": "Volumes"
          }
        },
        "getUserSettings": {
          "response": {
            "$ref": "Usersettings"
          },
          "id": "books.myconfig.getUserSettings",
          "parameters": {
            "country": {
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "location": "query",
              "type": "string"
            }
          },
          "path": "books/v1/myconfig/getUserSettings",
          "description": "Gets the current settings for the user.",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/getUserSettings",
          "httpMethod": "GET"
        },
        "requestAccess": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Request concurrent and download access restrictions.",
          "id": "books.myconfig.requestAccess",
          "httpMethod": "POST",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ],
          "parameters": {
            "volumeId": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "The volume to request concurrent/download restrictions for."
            },
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query",
              "type": "string"
            },
            "cpksver": {
              "description": "The device/version ID from which to request the restrictions.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "licenseTypes": {
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "location": "query",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "type": "string"
            },
            "nonce": {
              "location": "query",
              "type": "string",
              "description": "The client nonce value.",
              "required": true
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query",
              "required": true
            }
          },
          "response": {
            "$ref": "RequestAccessData"
          },
          "path": "books/v1/myconfig/requestAccess",
          "flatPath": "books/v1/myconfig/requestAccess"
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "path": "books/v1/dictionary/listOfflineMetadata",
          "parameterOrder": [
            "cpksver"
          ],
          "response": {
            "$ref": "Metadata"
          },
          "parameters": {
            "cpksver": {
              "type": "string",
              "location": "query",
              "required": true,
              "description": "The device/version ID from which to request the data."
            }
          },
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Returns a list of offline dictionary metadata available",
          "httpMethod": "GET",
          "id": "books.dictionary.listOfflineMetadata"
        }
      }
    },
    "familysharing": {
      "methods": {
        "unshare": {
          "parameterOrder": [],
          "path": "books/v1/familysharing/unshare",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.unshare",
          "flatPath": "books/v1/familysharing/unshare",
          "response": {
            "$ref": "Empty"
          },
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "parameters": {
            "docId": {
              "location": "query",
              "type": "string",
              "description": "The docid to unshare."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "description": "The volume to unshare.",
              "type": "string",
              "location": "query"
            }
          }
        },
        "getFamilyInfo": {
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "response": {
            "$ref": "FamilyInfo"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Gets information regarding the family that the user is part of.",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "id": "books.familysharing.getFamilyInfo",
          "path": "books/v1/familysharing/getFamilyInfo"
        },
        "share": {
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.share",
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "path": "books/v1/familysharing/share",
          "parameterOrder": [],
          "flatPath": "books/v1/familysharing/share",
          "httpMethod": "POST",
          "parameters": {
            "volumeId": {
              "description": "The volume to share.",
              "location": "query",
              "type": "string"
            },
            "docId": {
              "type": "string",
              "description": "The docid to share.",
              "location": "query"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          }
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "id": "books.bookshelves.volumes.list",
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "httpMethod": "GET",
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "parameters": {
                "userId": {
                  "required": true,
                  "location": "path",
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "type": "string"
                },
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "description": "ID of bookshelf to retrieve volumes.",
                  "required": true
                },
                "maxResults": {
                  "minimum": "0",
                  "description": "Maximum number of results to return",
                  "format": "uint32",
                  "location": "query",
                  "type": "integer"
                },
                "showPreorders": {
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "location": "query",
                  "type": "boolean"
                },
                "startIndex": {
                  "format": "uint32",
                  "description": "Index of the first element to return (starts at 0)",
                  "type": "integer",
                  "location": "query",
                  "minimum": "0"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes"
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "response": {
            "$ref": "Bookshelf"
          },
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "parameters": {
            "userId": {
              "required": true,
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "shelf": {
              "location": "path",
              "description": "ID of bookshelf to retrieve.",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "id": "books.bookshelves.get"
        },
        "list": {
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "userId"
          ],
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "httpMethod": "GET",
          "id": "books.bookshelves.list",
          "path": "books/v1/users/{userId}/bookshelves",
          "response": {
            "$ref": "Bookshelves"
          },
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "userId": {
              "type": "string",
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "required": true
            }
          }
        }
      }
    }
  },
  "name": "books",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "basePath": "",
  "id": "books:v1",
  "schemas": {
    "Layersummaries": {
      "id": "Layersummaries",
      "type": "object",
      "properties": {
        "totalItems": {
          "type": "integer",
          "description": "The total number of layer summaries found.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "description": "A list of layer summary items.",
          "items": {
            "$ref": "Layersummary"
          }
        }
      }
    },
    "FamilyInfo": {
      "id": "FamilyInfo",
      "type": "object",
      "properties": {
        "membership": {
          "properties": {
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            },
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "isInFamily": {
              "type": "boolean"
            },
            "allowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating for the user."
            }
          },
          "type": "object",
          "description": "Family membership info of the user that made the request."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Volumes": {
      "properties": {
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "A list of volumes."
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Volumes"
    },
    "AnnotationsSummary": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "layers": {
          "items": {
            "type": "object",
            "properties": {
              "limitType": {
                "type": "string"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "updated": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "type": "array"
        }
      },
      "id": "AnnotationsSummary"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "Offers": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of offers.",
          "type": "array",
          "items": {
            "properties": {
              "gservicesKey": {
                "type": "string"
              },
              "items": {
                "items": {
                  "properties": {
                    "volumeId": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "id": {
                "type": "string"
              },
              "artUrl": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "type": "object",
      "id": "Offers"
    },
    "Volumeannotation": {
      "id": "Volumeannotation",
      "type": "object",
      "properties": {
        "data": {
          "description": "Data for this annotation.",
          "type": "string"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        },
        "contentRanges": {
          "properties": {
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "description": "The content ranges to identify the selected text.",
          "type": "object"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "annotationDataId": {
          "type": "string",
          "description": "The annotation data id for this volume annotation."
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "annotationDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "pageIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Pages the annotation spans."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        }
      }
    },
    "Annotations": {
      "id": "Annotations",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "totalItems": {
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.",
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "description": "A list of annotations.",
          "items": {
            "$ref": "Annotation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BooksCloudloadingResource": {
      "properties": {
        "author": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "BooksCloudloadingResource"
    },
    "BooksVolumesRecommendedRateResponse": {
      "id": "BooksVolumesRecommendedRateResponse",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Volumeannotations": {
      "type": "object",
      "id": "Volumeannotations",
      "properties": {
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Volumeannotation"
          },
          "description": "A list of volume annotations.",
          "type": "array"
        }
      }
    },
    "Bookshelf": {
      "id": "Bookshelf",
      "type": "object",
      "properties": {
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        },
        "kind": {
          "description": "Resource type for bookshelf metadata.",
          "type": "string"
        },
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "id": {
          "type": "integer",
          "description": "Id of this bookshelf, only unique by user.",
          "format": "int32"
        },
        "volumeCount": {
          "type": "integer",
          "description": "Number of volumes in this bookshelf.",
          "format": "int32"
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "access": {
          "description": "Whether this bookshelf is PUBLIC or PRIVATE.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "title": {
          "description": "Title of this bookshelf.",
          "type": "string"
        }
      }
    },
    "Metadata": {
      "properties": {
        "items": {
          "description": "A list of offline dictionary metadata.",
          "type": "array",
          "items": {
            "properties": {
              "download_url": {
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Metadata"
    },
    "Volume": {
      "properties": {
        "layerInfo": {
          "properties": {
            "layers": {
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "items": {
                "properties": {
                  "volumeAnnotationsVersion": {
                    "type": "string",
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
                  },
                  "layerId": {
                    "type": "string",
                    "description": "The layer id of this layer (e.g. \"geo\")."
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "description": "What layers exist in this volume and high level information about them.",
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a volume. (In LITE projection.)"
        },
        "etag": {
          "type": "string",
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)"
        },
        "searchInfo": {
          "type": "object",
          "description": "Search result information related to this volume.",
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          }
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource. (In LITE projection.)"
        },
        "accessInfo": {
          "type": "object",
          "properties": {
            "viewability": {
              "type": "string",
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."
            },
            "pdf": {
              "properties": {
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download pdf. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)"
                }
              },
              "description": "Information about pdf content. (In LITE projection.)",
              "type": "object"
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes."
            },
            "epub": {
              "properties": {
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)"
                },
                "downloadLink": {
                  "description": "URL to download epub. (In LITE projection.)",
                  "type": "string"
                }
              },
              "description": "Information about epub content. (In LITE projection.)",
              "type": "object"
            },
            "explicitOfflineLicenseManagement": {
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.",
              "type": "boolean"
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API.",
              "type": "boolean"
            },
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive."
            },
            "viewOrderUrl": {
              "type": "string",
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page."
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)"
            },
            "quoteSharingAllowed": {
              "type": "boolean",
              "description": "Whether quote sharing is allowed for this volume."
            },
            "downloadAccess": {
              "description": "Information about a volume's download license access restrictions.",
              "$ref": "DownloadAccessRestriction"
            },
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)"
            },
            "textToSpeechPermission": {
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.",
              "type": "string"
            }
          },
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.)."
        },
        "userInfo": {
          "type": "object",
          "properties": {
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)",
              "type": "boolean"
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "familySharing": {
              "type": "object",
              "description": "Information on the ability to share with the family.",
              "properties": {
                "familyRole": {
                  "type": "string",
                  "description": "The role of the user in the family."
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                },
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.",
                  "type": "boolean"
                }
              }
            },
            "isFamilySharedToUser": {
              "type": "boolean",
              "description": "Whether or not the user received this volume through family sharing."
            },
            "acquisitionType": {
              "description": "How this volume was acquired.",
              "type": "integer",
              "format": "int32"
            },
            "isInMyBooks": {
              "description": "Whether or not this volume is currently in \"my books.\"",
              "type": "boolean"
            },
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "isUploaded": {
              "type": "boolean",
              "description": "Whether or not this volume was user uploaded."
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc."
            },
            "entitlementType": {
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer",
              "format": "int32"
            },
            "rentalPeriod": {
              "description": "Period during this book is/was a valid rental.",
              "properties": {
                "endUtcSec": {
                  "format": "int64",
                  "type": "string"
                },
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "type": "object"
            },
            "copy": {
              "properties": {
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "limitType": {
                  "type": "string"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "updated": {
                  "type": "string"
                }
              },
              "type": "object",
              "description": "Copy/Paste accounting information."
            },
            "isFamilySharingDisabledByFop": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            }
          },
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)"
        },
        "saleInfo": {
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "type": "object",
          "properties": {
            "retailPrice": {
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double",
                  "type": "number"
                }
              },
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)"
            },
            "onSaleDate": {
              "description": "The date on which this book is available for sale.",
              "type": "string"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)"
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.",
              "type": "string"
            },
            "offers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "giftable": {
                    "type": "boolean",
                    "description": "Indicates whether the offer is giftable."
                  },
                  "rentalDuration": {
                    "description": "The rental duration (for rental offers only).",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "count": {
                        "format": "double",
                        "type": "number"
                      }
                    }
                  },
                  "finskyOfferType": {
                    "format": "int32",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)",
                    "type": "integer"
                  },
                  "retailPrice": {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "description": "Offer retail (=discounted) price in Micros"
                  },
                  "listPrice": {
                    "type": "object",
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "description": "Offers available for this volume (sales and rentals)."
            },
            "listPrice": {
              "description": "Suggested retail price. (In LITE projection.)",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                },
                "amount": {
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double",
                  "type": "number"
                }
              }
            },
            "isEbook": {
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf).",
              "type": "boolean"
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            }
          }
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        },
        "recommendedInfo": {
          "properties": {
            "explanation": {
              "type": "string",
              "description": "A text explaining why this volume is recommended."
            }
          },
          "type": "object",
          "description": "Recommendation related information for this volume."
        },
        "volumeInfo": {
          "description": "General volume information.",
          "properties": {
            "authors": {
              "items": {
                "type": "string"
              },
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)",
              "type": "array"
            },
            "title": {
              "description": "Volume title. (In LITE projection.)",
              "type": "string"
            },
            "ratingsCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of review ratings for this volume."
            },
            "panelizationSummary": {
              "properties": {
                "imageBubbleVersion": {
                  "type": "string"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                }
              },
              "description": "A top-level summary of the panelization info in this volume.",
              "type": "object"
            },
            "imageLinks": {
              "type": "object",
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)",
              "properties": {
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)",
                  "type": "string"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)",
                  "type": "string"
                },
                "large": {
                  "type": "string",
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                }
              }
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "printType": {
              "type": "string",
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"
            },
            "maturityRating": {
              "type": "string"
            },
            "pageCount": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of pages as per publisher metadata."
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "contentVersion": {
              "type": "string",
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)"
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "categories": {
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "averageRating": {
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "type": "number",
              "format": "double"
            },
            "samplePageCount": {
              "description": "Total number of sample pages as per publisher metadata.",
              "type": "integer",
              "format": "int32"
            },
            "readingModes": {
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "description": "The reading modes available for this volume."
            },
            "dimensions": {
              "type": "object",
              "properties": {
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                },
                "thickness": {
                  "type": "string",
                  "description": "Thickness of this volume (in cm)."
                },
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                }
              },
              "description": "Physical dimensions of this volume."
            },
            "subtitle": {
              "type": "string",
              "description": "Volume subtitle. (In LITE projection.)"
            },
            "industryIdentifiers": {
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Industry specific volume identifier."
                  }
                }
              },
              "type": "array",
              "description": "Industry standard identifiers for this volume."
            },
            "publisher": {
              "type": "string",
              "description": "Publisher of this volume. (In LITE projection.)"
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc."
            },
            "printedPageCount": {
              "format": "int32",
              "type": "integer",
              "description": "Total number of printed pages in generated pdf representation."
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "comicsContent": {
              "type": "boolean",
              "description": "Whether the volume has comics content."
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "Volume"
    },
    "Volumeseriesinfo": {
      "id": "Volumeseriesinfo",
      "properties": {
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        },
        "volumeSeries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              },
              "orderNumber": {
                "format": "int32",
                "description": "The book order number in the series.",
                "type": "integer"
              },
              "issue": {
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "type": "array"
              },
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc.",
                "type": "string"
              }
            }
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "shortSeriesBookTitle": {
          "description": "Short book title in the context of the series.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReadingPosition": {
      "id": "ReadingPosition",
      "type": "object",
      "properties": {
        "pdfPosition": {
          "description": "Position in a PDF file.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for a reading position.",
          "type": "string"
        },
        "gbTextPosition": {
          "type": "string",
          "description": "Position in a volume for text-based content."
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "epubCfiPosition": {
          "type": "string",
          "description": "Position in an EPUB as a CFI."
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        },
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        }
      }
    },
    "Layersummary": {
      "id": "Layersummary",
      "properties": {
        "volumeId": {
          "description": "The volume id this resource is for.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)."
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "id": {
          "type": "string",
          "description": "Unique id of this layer summary."
        },
        "volumeAnnotationsVersion": {
          "type": "string",
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
        },
        "annotationCount": {
          "type": "integer",
          "description": "The number of annotations for this layer.",
          "format": "int32"
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "annotationsDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "layerId": {
          "description": "The layer id for this summary.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "contentVersion": {
          "description": "The content version this resource is for.",
          "type": "string"
        },
        "dataCount": {
          "format": "int32",
          "description": "The number of data items for this layer.",
          "type": "integer"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Category": {
      "id": "Category",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of onboarding categories.",
          "items": {
            "properties": {
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "DownloadAccesses": {
      "id": "DownloadAccesses",
      "properties": {
        "downloadAccessList": {
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "description": "A list of download access responses.",
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestAccessData": {
      "properties": {
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "concurrentAccess": {
          "description": "A concurrent access response.",
          "$ref": "ConcurrentAccessRestriction"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "RequestAccessData",
      "type": "object"
    },
    "DownloadAccessRestriction": {
      "properties": {
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "reasonCode": {
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any download access restrictions."
        },
        "maxDownloadDevices": {
          "format": "int32",
          "type": "integer",
          "description": "If restricted, the maximum number of content download licenses for this volume."
        },
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "downloadsAcquired": {
          "type": "integer",
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed)."
        },
        "justAcquired": {
          "description": "If deviceAllowed, whether access was just acquired with this request.",
          "type": "boolean"
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        }
      },
      "id": "DownloadAccessRestriction",
      "type": "object"
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "id": "DictionaryAnnotationdata",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "data": {
          "$ref": "Dictlayerdata",
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated."
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "encodedData": {
          "type": "string",
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte"
        },
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        }
      }
    },
    "Discoveryclusters": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "clusters": {
          "type": "array",
          "items": {
            "properties": {
              "banner_with_content_container": {
                "properties": {
                  "textColorArgb": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "uid": {
                "type": "string"
              },
              "totalVolumes": {
                "type": "integer",
                "format": "int32"
              },
              "subTitle": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "id": "Discoveryclusters"
    },
    "Review": {
      "properties": {
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "type": {
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.",
          "type": "string"
        },
        "source": {
          "description": "Information regarding the source of this review, when the review is not from a Google Books user.",
          "properties": {
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            },
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            }
          },
          "type": "object"
        },
        "author": {
          "description": "Author of this review.",
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "volumeId": {
          "type": "string",
          "description": "Volume that this review is for."
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title for this review."
        },
        "content": {
          "description": "Review text.",
          "type": "string"
        },
        "rating": {
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.",
          "type": "string"
        },
        "date": {
          "type": "string",
          "description": "Date of this review."
        }
      },
      "id": "Review",
      "type": "object"
    },
    "Bookshelves": {
      "type": "object",
      "id": "Bookshelves",
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of bookshelves.",
          "items": {
            "$ref": "Bookshelf"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "GeoAnnotationdata": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "encodedData": {
          "type": "string",
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte"
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        }
      },
      "id": "GeoAnnotationdata"
    },
    "Seriesmembership": {
      "type": "object",
      "properties": {
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "id": "Seriesmembership"
    },
    "Dictlayerdata": {
      "type": "object",
      "id": "Dictlayerdata",
      "properties": {
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "description": "The display title and localized canonical name to use when searching for this entity on Google search.",
              "type": "string"
            }
          }
        },
        "kind": {
          "type": "string"
        },
        "dict": {
          "properties": {
            "source": {
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "attribution": {
                  "type": "string"
                }
              }
            },
            "words": {
              "items": {
                "properties": {
                  "source": {
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "examples": {
                    "items": {
                      "properties": {
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "derivatives": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "senses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "conjugations": {
                          "items": {
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "definitions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "examples": {
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "source": {
                                      "type": "object",
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "type": "array"
                              },
                              "definition": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "source": {
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "text": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "syllabification": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      }
    },
    "Volume2": {
      "properties": {
        "items": {
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Volume2",
      "type": "object"
    },
    "Annotationsdata": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "description": "A list of Annotation Data."
        },
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of volume annotations found."
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Annotationsdata"
    },
    "Series": {
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "seriesId": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesSubscriptionReleaseInfo": {
                "properties": {
                  "cancelTime": {
                    "type": "string"
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "nextReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "releaseTime": {
                        "type": "string"
                      }
                    }
                  },
                  "currentReleaseInfo": {
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "subscriptionId": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              }
            }
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "id": "Series",
      "type": "object"
    },
    "Usersettings": {
      "type": "object",
      "id": "Usersettings",
      "properties": {
        "notification": {
          "properties": {
            "priceDrop": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromSeries": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "matchMyInterests": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "notesExport": {
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "type": "object",
          "description": "User settings in sub-objects, each for different purposes."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "ConcurrentAccessRestriction": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and client-validation only.",
          "type": "string"
        },
        "maxConcurrentDevices": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of concurrent access licenses for this volume."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any concurrent access restrictions."
        }
      },
      "id": "ConcurrentAccessRestriction"
    },
    "BooksAnnotationsRange": {
      "properties": {
        "endPosition": {
          "description": "The ending position for the range.",
          "type": "string"
        },
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startOffset": {
          "type": "string",
          "description": "The offset from the starting position."
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        }
      },
      "id": "BooksAnnotationsRange",
      "type": "object"
    },
    "Geolayerdata": {
      "type": "object",
      "id": "Geolayerdata",
      "properties": {
        "kind": {
          "type": "string"
        },
        "geo": {
          "properties": {
            "countryCode": {
              "type": "string",
              "description": "The country code of the location."
            },
            "viewport": {
              "type": "object",
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle.",
              "properties": {
                "hi": {
                  "properties": {
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "lo": {
                  "properties": {
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "latitude": {
              "type": "number",
              "description": "The latitude of the location.",
              "format": "double"
            },
            "cachePolicy": {
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER",
              "type": "string"
            },
            "longitude": {
              "type": "number",
              "description": "The longitude of the location.",
              "format": "double"
            },
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "zoom": {
              "format": "int32",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "type": "integer"
            },
            "boundary": {
              "type": "array",
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.",
              "items": {
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "common": {
          "properties": {
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            },
            "lang": {
              "type": "string",
              "description": "The language of the information url and description."
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "previewImageUrl": {
              "type": "string",
              "description": "The URL for the preview image information."
            }
          },
          "type": "object"
        }
      }
    },
    "Annotation": {
      "type": "object",
      "id": "Annotation",
      "properties": {
        "clientVersionRanges": {
          "properties": {
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation sent by client."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "type": "object",
          "description": "Selection ranges sent from the client."
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Id of this annotation, in the form of a GUID."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "highlightStyle": {
          "type": "string",
          "description": "The highlight style for this annotation."
        },
        "data": {
          "type": "string",
          "description": "User-created data for this annotation."
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "currentVersionRanges": {
          "properties": {
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation for version above."
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            }
          },
          "description": "Selection ranges for the most recent content version.",
          "type": "object"
        },
        "pageIds": {
          "type": "array",
          "description": "Pages that this annotation spans.",
          "items": {
            "type": "string"
          }
        },
        "layerSummary": {
          "properties": {
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.",
              "type": "string"
            },
            "remainingCharacterCount": {
              "type": "integer",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer.",
              "format": "int32"
            },
            "allowedCharacterCount": {
              "type": "integer",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "format": "int32"
            }
          },
          "type": "object"
        },
        "layerId": {
          "type": "string",
          "description": "The layer this annotation is for."
        },
        "afterSelectedText": {
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "beforeSelectedText": {
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "Notification": {
      "type": "object",
      "id": "Notification",
      "properties": {
        "timeToExpireMs": {
          "type": "string",
          "format": "int64"
        },
        "notificationGroup": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "crmExperimentIds": {
          "type": "array",
          "description": "The list of crm experiment ids.",
          "items": {
            "type": "string",
            "format": "int64"
          }
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "targetUrl": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "doc_type": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "iconUrl": {
          "type": "string"
        }
      }
    }
  },
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "revision": "20230203",
  "rootUrl": "https://books.googleapis.com/",
  "protocol": "rest",
  "discoveryVersion": "v1"
}

{
  "servicePath": "",
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "books",
  "parameters": {
    "alt": {
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string",
      "description": "Data format for response."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    }
  },
  "version": "v1",
  "baseUrl": "https://books.googleapis.com/",
  "title": "Books API",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "protocol": "rest",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "revision": "20220318",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "ReadingPosition": {
      "properties": {
        "gbTextPosition": {
          "type": "string",
          "description": "Position in a volume for text-based content."
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Volume id associated with this reading position."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        }
      },
      "id": "ReadingPosition",
      "type": "object"
    },
    "FamilyInfo": {
      "id": "FamilyInfo",
      "type": "object",
      "properties": {
        "membership": {
          "description": "Family membership info of the user that made the request.",
          "properties": {
            "role": {
              "description": "The role of the user in the family.",
              "type": "string"
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            },
            "acquirePermission": {
              "type": "string",
              "description": "Restrictions on user buying and acquiring content."
            },
            "isInFamily": {
              "type": "boolean"
            },
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Category": {
      "type": "object",
      "id": "Category",
      "properties": {
        "items": {
          "description": "A list of onboarding categories.",
          "items": {
            "properties": {
              "badgeUrl": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "type": "object"
    },
    "Annotations": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated."
        },
        "items": {
          "items": {
            "$ref": "Annotation"
          },
          "description": "A list of annotations.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        }
      },
      "id": "Annotations"
    },
    "Annotation": {
      "properties": {
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "layerSummary": {
          "type": "object",
          "properties": {
            "remainingCharacterCount": {
              "type": "integer",
              "format": "int32",
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer."
            },
            "allowedCharacterCount": {
              "format": "int32",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "type": "integer"
            },
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.",
              "type": "string"
            }
          }
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "beforeSelectedText": {
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "currentVersionRanges": {
          "description": "Selection ranges for the most recent content version.",
          "properties": {
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation for version above."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            }
          },
          "type": "object"
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "afterSelectedText": {
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The layer this annotation is for."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this annotation was modified.",
          "type": "string"
        },
        "created": {
          "type": "string",
          "description": "Timestamp for the created time of this annotation."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "pageIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Pages that this annotation spans."
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "clientVersionRanges": {
          "description": "Selection ranges sent from the client.",
          "properties": {
            "gbTextRange": {
              "description": "Range in GB text format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation sent by client."
            }
          },
          "type": "object"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume that this annotation belongs to."
        }
      },
      "type": "object",
      "id": "Annotation"
    },
    "Bookshelves": {
      "properties": {
        "items": {
          "items": {
            "$ref": "Bookshelf"
          },
          "description": "A list of bookshelves.",
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Bookshelves"
    },
    "Review": {
      "type": "object",
      "id": "Review",
      "properties": {
        "title": {
          "description": "Title for this review.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."
        },
        "author": {
          "description": "Author of this review.",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "Name of this person."
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a review."
        },
        "fullTextUrl": {
          "type": "string",
          "description": "URL for the full review text, for reviews gathered from the web."
        },
        "volumeId": {
          "description": "Volume that this review is for.",
          "type": "string"
        },
        "rating": {
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.",
          "type": "string"
        },
        "date": {
          "type": "string",
          "description": "Date of this review."
        },
        "content": {
          "description": "Review text.",
          "type": "string"
        },
        "source": {
          "type": "object",
          "properties": {
            "extraDescription": {
              "type": "string",
              "description": "Extra text about the source of the review."
            },
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            }
          },
          "description": "Information regarding the source of this review, when the review is not from a Google Books user."
        }
      }
    },
    "Volume2": {
      "id": "Volume2",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        }
      }
    },
    "Usersettings": {
      "id": "Usersettings",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "notification": {
          "type": "object",
          "properties": {
            "matchMyInterests": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromSeries": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "notesExport": {
          "description": "User settings in sub-objects, each for different purposes.",
          "properties": {
            "folderName": {
              "type": "string"
            },
            "isEnabled": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      }
    },
    "RequestAccessData": {
      "type": "object",
      "properties": {
        "downloadAccess": {
          "$ref": "DownloadAccessRestriction",
          "description": "A download access response."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "concurrentAccess": {
          "$ref": "ConcurrentAccessRestriction",
          "description": "A concurrent access response."
        }
      },
      "id": "RequestAccessData"
    },
    "Layersummary": {
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "dataCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of data items for this layer."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "contentVersion": {
          "description": "The content version this resource is for.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id this resource is for."
        },
        "annotationCount": {
          "type": "integer",
          "description": "The number of annotations for this layer.",
          "format": "int32"
        },
        "annotationTypes": {
          "description": "The list of annotation types contained for this layer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "layerId": {
          "description": "The layer id for this summary.",
          "type": "string"
        },
        "annotationsLink": {
          "type": "string",
          "description": "The link to get the annotations for this layer."
        },
        "volumeAnnotationsVersion": {
          "type": "string",
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
        },
        "id": {
          "type": "string",
          "description": "Unique id of this layer summary."
        },
        "annotationsDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Layersummary"
    },
    "Volumeseriesinfo": {
      "type": "object",
      "id": "Volumeseriesinfo",
      "properties": {
        "volumeSeries": {
          "type": "array",
          "items": {
            "properties": {
              "seriesBookType": {
                "type": "string",
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc."
              },
              "orderNumber": {
                "description": "The book order number in the series.",
                "type": "integer",
                "format": "int32"
              },
              "seriesId": {
                "type": "string",
                "description": "The series id."
              },
              "issue": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueOrderNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "issueDisplayNumber": {
                      "type": "string"
                    }
                  }
                },
                "description": "List of issues. Applicable only for Collection Edition and Omnibus."
              }
            },
            "type": "object"
          }
        },
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        },
        "bookDisplayNumber": {
          "type": "string",
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "Bookshelf": {
      "id": "Bookshelf",
      "type": "object",
      "properties": {
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "volumeCount": {
          "format": "int32",
          "description": "Number of volumes in this bookshelf.",
          "type": "integer"
        },
        "access": {
          "type": "string",
          "description": "Whether this bookshelf is PUBLIC or PRIVATE."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        },
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "volumesLastUpdated": {
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "id": {
          "format": "int32",
          "description": "Id of this bookshelf, only unique by user.",
          "type": "integer"
        },
        "title": {
          "type": "string",
          "description": "Title of this bookshelf."
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        }
      }
    },
    "AnnotationsSummary": {
      "properties": {
        "layers": {
          "items": {
            "properties": {
              "updated": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "allowedCharacterCount": {
                "type": "integer",
                "format": "int32"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "kind": {
          "type": "string"
        }
      },
      "id": "AnnotationsSummary",
      "type": "object"
    },
    "Dictlayerdata": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "common": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            }
          }
        },
        "dict": {
          "properties": {
            "source": {
              "description": "The source, url and attribution for this dictionary data.",
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "words": {
              "type": "array",
              "items": {
                "properties": {
                  "examples": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "derivatives": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "source": {
                    "type": "object",
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    }
                  },
                  "senses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "conjugations": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "definitions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "items": {
                                  "properties": {
                                    "source": {
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "text": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            }
                          }
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "type": "object"
                          }
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "Dictlayerdata"
    },
    "Discoveryclusters": {
      "id": "Discoveryclusters",
      "properties": {
        "totalClusters": {
          "type": "integer",
          "format": "int32"
        },
        "clusters": {
          "items": {
            "properties": {
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "uid": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "banner_with_content_container": {
                "properties": {
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "subTitle": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        }
      },
      "type": "object"
    },
    "Series": {
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "properties": {
              "title": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              },
              "imageUrl": {
                "type": "string"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "nextReleaseInfo": {
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "type": "object"
                  },
                  "cancelTime": {
                    "type": "string"
                  },
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "seriesFormatType": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesId": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              },
              "subscriptionId": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Series"
    },
    "Volume": {
      "properties": {
        "searchInfo": {
          "properties": {
            "textSnippet": {
              "type": "string",
              "description": "A text snippet containing the search query."
            }
          },
          "description": "Search result information related to this volume.",
          "type": "object"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource. (In LITE projection.)"
        },
        "recommendedInfo": {
          "properties": {
            "explanation": {
              "type": "string",
              "description": "A text explaining why this volume is recommended."
            }
          },
          "type": "object",
          "description": "Recommendation related information for this volume."
        },
        "accessInfo": {
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).",
          "type": "object",
          "properties": {
            "epub": {
              "type": "object",
              "description": "Information about epub content. (In LITE projection.)",
              "properties": {
                "downloadLink": {
                  "description": "URL to download epub. (In LITE projection.)",
                  "type": "string"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)"
                }
              }
            },
            "webReaderLink": {
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.",
              "type": "string"
            },
            "downloadAccess": {
              "description": "Information about a volume's download license access restrictions.",
              "$ref": "DownloadAccessRestriction"
            },
            "viewability": {
              "type": "string",
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."
            },
            "publicDomain": {
              "description": "Whether or not this book is public domain in the country listed above.",
              "type": "boolean"
            },
            "accessViewStatus": {
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)",
              "type": "string"
            },
            "pdf": {
              "description": "Information about pdf content. (In LITE projection.)",
              "properties": {
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download pdf. (In LITE projection.)"
                },
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                }
              },
              "type": "object"
            },
            "explicitOfflineLicenseManagement": {
              "type": "boolean",
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it."
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)"
            },
            "driveImportedContentLink": {
              "type": "string",
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive."
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "textToSpeechPermission": {
              "type": "string",
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API.",
              "type": "boolean"
            }
          }
        },
        "userInfo": {
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
          "properties": {
            "copy": {
              "description": "Copy/Paste accounting information.",
              "type": "object",
              "properties": {
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "allowedCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "limitType": {
                  "type": "string"
                }
              }
            },
            "isInMyBooks": {
              "type": "boolean",
              "description": "Whether or not this volume is currently in \"my books.\""
            },
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            },
            "acquisitionType": {
              "type": "integer",
              "format": "int32",
              "description": "How this volume was acquired."
            },
            "acquiredTime": {
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.",
              "type": "string"
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "entitlementType": {
              "format": "int32",
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer"
            },
            "rentalPeriod": {
              "properties": {
                "endUtcSec": {
                  "format": "int64",
                  "type": "string"
                },
                "startUtcSec": {
                  "format": "int64",
                  "type": "string"
                }
              },
              "type": "object",
              "description": "Period during this book is/was a valid rental."
            },
            "isPreordered": {
              "type": "boolean",
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"
            },
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "isFamilySharingDisabledByFop": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "isUploaded": {
              "type": "boolean",
              "description": "Whether or not this volume was user uploaded."
            },
            "updated": {
              "type": "string",
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."
            },
            "familySharing": {
              "type": "object",
              "description": "Information on the ability to share with the family.",
              "properties": {
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.",
                  "type": "boolean"
                },
                "familyRole": {
                  "type": "string",
                  "description": "The role of the user in the family."
                },
                "isSharingAllowed": {
                  "type": "boolean",
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action."
                }
              }
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "saleInfo": {
          "type": "object",
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "properties": {
            "onSaleDate": {
              "type": "string",
              "description": "The date on which this book is available for sale."
            },
            "offers": {
              "items": {
                "properties": {
                  "listPrice": {
                    "properties": {
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "description": "Offer list (=undiscounted) price in Micros."
                  },
                  "giftable": {
                    "type": "boolean",
                    "description": "Indicates whether the offer is giftable."
                  },
                  "finskyOfferType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)"
                  },
                  "retailPrice": {
                    "properties": {
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object"
                  },
                  "rentalDuration": {
                    "description": "The rental duration (for rental offers only).",
                    "properties": {
                      "count": {
                        "type": "number",
                        "format": "double"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "description": "Offers available for this volume (sales and rentals)."
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.",
              "type": "string"
            },
            "retailPrice": {
              "properties": {
                "amount": {
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double",
                  "type": "number"
                },
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                }
              },
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)",
              "type": "object"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)",
              "type": "string"
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."
            },
            "listPrice": {
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "type": "number"
                }
              },
              "type": "object",
              "description": "Suggested retail price. (In LITE projection.)"
            }
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for a volume. (In LITE projection.)"
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "etag": {
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)",
          "type": "string"
        },
        "volumeInfo": {
          "properties": {
            "language": {
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.",
              "type": "string"
            },
            "publisher": {
              "type": "string",
              "description": "Publisher of this volume. (In LITE projection.)"
            },
            "imageLinks": {
              "properties": {
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)",
                  "type": "string"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "small": {
                  "type": "string",
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                },
                "smallThumbnail": {
                  "type": "string",
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)"
                }
              },
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)",
              "type": "object"
            },
            "mainCategory": {
              "type": "string",
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight."
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "properties": {
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "averageRating": {
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "type": "number",
              "format": "double"
            },
            "industryIdentifiers": {
              "items": {
                "properties": {
                  "identifier": {
                    "description": "Industry specific volume identifier.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "description": "Industry standard identifiers for this volume."
            },
            "ratingsCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of review ratings for this volume."
            },
            "dimensions": {
              "properties": {
                "height": {
                  "description": "Height or length of this volume (in cm).",
                  "type": "string"
                },
                "thickness": {
                  "type": "string",
                  "description": "Thickness of this volume (in cm)."
                },
                "width": {
                  "description": "Width of this volume (in cm).",
                  "type": "string"
                }
              },
              "type": "object",
              "description": "Physical dimensions of this volume."
            },
            "printType": {
              "type": "string",
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
            },
            "categories": {
              "items": {
                "type": "string"
              },
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "type": "array"
            },
            "canonicalVolumeLink": {
              "type": "string",
              "description": "Canonical URL for a volume. (In LITE projection.)"
            },
            "contentVersion": {
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)",
              "type": "string"
            },
            "pageCount": {
              "format": "int32",
              "description": "Total number of pages as per publisher metadata.",
              "type": "integer"
            },
            "samplePageCount": {
              "description": "Total number of sample pages as per publisher metadata.",
              "format": "int32",
              "type": "integer"
            },
            "maturityRating": {
              "type": "string"
            },
            "printedPageCount": {
              "description": "Total number of printed pages in generated pdf representation.",
              "type": "integer",
              "format": "int32"
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "title": {
              "description": "Volume title. (In LITE projection.)",
              "type": "string"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "authors": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)"
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"
            },
            "readingModes": {
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "description": "The reading modes available for this volume.",
              "type": "object"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "comicsContent": {
              "type": "boolean",
              "description": "Whether the volume has comics content."
            },
            "subtitle": {
              "type": "string",
              "description": "Volume subtitle. (In LITE projection.)"
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            }
          },
          "type": "object",
          "description": "General volume information."
        },
        "layerInfo": {
          "properties": {
            "layers": {
              "type": "array",
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "items": {
                "type": "object",
                "properties": {
                  "volumeAnnotationsVersion": {
                    "type": "string",
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
                  },
                  "layerId": {
                    "description": "The layer id of this layer (e.g. \"geo\").",
                    "type": "string"
                  }
                }
              }
            }
          },
          "type": "object",
          "description": "What layers exist in this volume and high level information about them."
        }
      },
      "type": "object",
      "id": "Volume"
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "id": "BooksVolumesRecommendedRateResponse"
    },
    "Metadata": {
      "id": "Metadata",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "description": "A list of offline dictionary metadata.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "download_url": {
                "type": "string"
              },
              "size": {
                "type": "string",
                "format": "int64"
              },
              "version": {
                "format": "int64",
                "type": "string"
              }
            }
          }
        }
      },
      "type": "object"
    },
    "DownloadAccesses": {
      "properties": {
        "downloadAccessList": {
          "type": "array",
          "description": "A list of download access responses.",
          "items": {
            "$ref": "DownloadAccessRestriction"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DownloadAccesses"
    },
    "BooksCloudloadingResource": {
      "id": "BooksCloudloadingResource",
      "properties": {
        "author": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Geolayerdata": {
      "id": "Geolayerdata",
      "type": "object",
      "properties": {
        "geo": {
          "type": "object",
          "properties": {
            "mapType": {
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN",
              "type": "string"
            },
            "latitude": {
              "description": "The latitude of the location.",
              "type": "number",
              "format": "double"
            },
            "viewport": {
              "type": "object",
              "properties": {
                "hi": {
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                },
                "lo": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle."
            },
            "longitude": {
              "description": "The longitude of the location.",
              "format": "double",
              "type": "number"
            },
            "boundary": {
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "cachePolicy": {
              "type": "string",
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"
            },
            "countryCode": {
              "description": "The country code of the location.",
              "type": "string"
            },
            "zoom": {
              "format": "int32",
              "type": "integer",
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels"
            }
          }
        },
        "common": {
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            },
            "snippetUrl": {
              "type": "string",
              "description": "The URL for information for this location. Ex: wikipedia link."
            },
            "snippet": {
              "type": "string",
              "description": "The description for this location."
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "Seriesmembership": {
      "id": "Seriesmembership",
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "type": "object"
    },
    "Notification": {
      "type": "object",
      "properties": {
        "iconUrl": {
          "type": "string"
        },
        "crmExperimentIds": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "The list of crm experiment ids.",
          "type": "array"
        },
        "doc_type": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "timeToExpireMs": {
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "show_notification_settings_action": {
          "type": "boolean"
        }
      },
      "id": "Notification"
    },
    "Volumeannotation": {
      "id": "Volumeannotation",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id of this volume annotation."
        },
        "layerId": {
          "type": "string",
          "description": "The Layer this annotation is for."
        },
        "annotationType": {
          "description": "The type of annotation this is.",
          "type": "string"
        },
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "annotationDataId": {
          "type": "string",
          "description": "The annotation data id for this volume annotation."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "contentRanges": {
          "type": "object",
          "properties": {
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "description": "The content ranges to identify the selected text."
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Annotationsdata": {
      "properties": {
        "totalItems": {
          "format": "int32",
          "description": "The total number of volume annotations found.",
          "type": "integer"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "items": {
          "description": "A list of Annotation Data.",
          "type": "array",
          "items": {
            "$ref": "GeoAnnotationdata"
          }
        },
        "kind": {
          "description": "Resource type",
          "type": "string"
        }
      },
      "id": "Annotationsdata",
      "type": "object"
    },
    "DictionaryAnnotationdata": {
      "properties": {
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "encodedData": {
          "format": "byte",
          "type": "string",
          "description": "Base64 encoded data for this annotation data."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "data": {
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.",
          "$ref": "Dictlayerdata"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        }
      },
      "id": "DictionaryAnnotationdata",
      "type": "object"
    },
    "DownloadAccessRestriction": {
      "id": "DownloadAccessRestriction",
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "description": "Response signature."
        },
        "downloadsAcquired": {
          "format": "int32",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
          "type": "integer"
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "maxDownloadDevices": {
          "description": "If restricted, the maximum number of content download licenses for this volume.",
          "format": "int32",
          "type": "integer"
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        },
        "restricted": {
          "description": "Whether this volume has any download access restrictions.",
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "reasonCode": {
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        }
      }
    },
    "Volumes": {
      "id": "Volumes",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "totalItems": {
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Offers": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "items": {
                "items": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "coverUrl": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "gservicesKey": {
                "type": "string"
              },
              "artUrl": {
                "type": "string"
              }
            }
          },
          "description": "A list of offers.",
          "type": "array"
        }
      },
      "id": "Offers"
    },
    "Volumeannotations": {
      "type": "object",
      "properties": {
        "items": {
          "items": {
            "$ref": "Volumeannotation"
          },
          "type": "array",
          "description": "A list of volume annotations."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "version": {
          "type": "string",
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book)."
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of volume annotations found."
        }
      },
      "id": "Volumeannotations"
    },
    "GeoAnnotationdata": {
      "id": "GeoAnnotationdata",
      "type": "object",
      "properties": {
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "encodedData": {
          "type": "string",
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "data": {
          "$ref": "Geolayerdata",
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated."
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        }
      }
    },
    "ConcurrentAccessRestriction": {
      "id": "ConcurrentAccessRestriction",
      "type": "object",
      "properties": {
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "nonce": {
          "type": "string",
          "description": "Client nonce for verification. Download access and client-validation only."
        },
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "format": "int32",
          "type": "integer"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "maxConcurrentDevices": {
          "description": "The maximum number of concurrent access licenses for this volume.",
          "type": "integer",
          "format": "int32"
        },
        "restricted": {
          "description": "Whether this volume has any concurrent access restrictions.",
          "type": "boolean"
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "Whether access is granted for this (user, device, volume)."
        },
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        }
      }
    },
    "Layersummaries": {
      "type": "object",
      "properties": {
        "totalItems": {
          "type": "integer",
          "description": "The total number of layer summaries found.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Layersummary"
          },
          "description": "A list of layer summary items."
        }
      },
      "id": "Layersummaries"
    },
    "BooksAnnotationsRange": {
      "type": "object",
      "id": "BooksAnnotationsRange",
      "properties": {
        "startOffset": {
          "description": "The offset from the starting position.",
          "type": "string"
        },
        "endOffset": {
          "type": "string",
          "description": "The offset from the ending position."
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        },
        "startPosition": {
          "description": "The starting position for the range.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "myconfig": {
      "methods": {
        "updateUserSettings": {
          "response": {
            "$ref": "Usersettings"
          },
          "path": "books/v1/myconfig/updateUserSettings",
          "httpMethod": "POST",
          "parameters": {},
          "request": {
            "$ref": "Usersettings"
          },
          "id": "books.myconfig.updateUserSettings",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.",
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "parameterOrder": []
        },
        "releaseDownloadAccess": {
          "parameters": {
            "cpksver": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "The device/version ID from which to release the restriction."
            },
            "volumeIds": {
              "description": "The volume(s) to release restrictions for.",
              "required": true,
              "location": "query",
              "type": "string",
              "repeated": true
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            }
          },
          "id": "books.myconfig.releaseDownloadAccess",
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ],
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "description": "Release downloaded content access restriction.",
          "httpMethod": "POST"
        },
        "syncVolumeLicenses": {
          "httpMethod": "POST",
          "response": {
            "$ref": "Volumes"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "id": "books.myconfig.syncVolumeLicenses",
          "parameters": {
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string",
              "location": "query"
            },
            "volumeIds": {
              "location": "query",
              "type": "string",
              "description": "The volume(s) to request download restrictions for.",
              "repeated": true
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request.",
              "required": true
            },
            "features": {
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ],
              "location": "query",
              "type": "string",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "repeated": true,
              "description": "List of features supported by the client, i.e., 'RENTALS'"
            },
            "includeNonComicsSeries": {
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean"
            },
            "showPreorders": {
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "cpksver": {
              "type": "string",
              "location": "query",
              "description": "The device/version ID from which to release the restriction.",
              "required": true
            },
            "nonce": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "The client nonce value."
            }
          }
        },
        "requestAccess": {
          "response": {
            "$ref": "RequestAccessData"
          },
          "description": "Request concurrent and download access restrictions.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.requestAccess",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ],
          "parameters": {
            "licenseTypes": {
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "location": "query",
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ],
              "type": "string"
            },
            "cpksver": {
              "required": true,
              "description": "The device/version ID from which to request the restrictions.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "required": true,
              "location": "query"
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "nonce": {
              "description": "The client nonce value.",
              "location": "query",
              "type": "string",
              "required": true
            },
            "volumeId": {
              "type": "string",
              "description": "The volume to request concurrent/download restrictions for.",
              "required": true,
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "flatPath": "books/v1/myconfig/requestAccess",
          "path": "books/v1/myconfig/requestAccess"
        },
        "getUserSettings": {
          "description": "Gets the current settings for the user.",
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/getUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "parameters": {
            "country": {
              "location": "query",
              "type": "string",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement"
            }
          },
          "flatPath": "books/v1/myconfig/getUserSettings",
          "id": "books.myconfig.getUserSettings"
        }
      }
    },
    "promooffer": {
      "methods": {
        "get": {
          "id": "books.promooffer.get",
          "httpMethod": "GET",
          "description": "Returns a list of promo offers available to the user",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/get",
          "parameters": {
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "type": "string",
              "description": "device android_id",
              "location": "query"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "type": "string",
              "location": "query"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            },
            "serial": {
              "type": "string",
              "location": "query",
              "description": "device serial"
            }
          },
          "response": {
            "$ref": "Offers"
          },
          "parameterOrder": [],
          "path": "books/v1/promooffer/get"
        },
        "dismiss": {
          "parameterOrder": [],
          "parameters": {
            "device": {
              "type": "string",
              "location": "query",
              "description": "device device"
            },
            "manufacturer": {
              "location": "query",
              "type": "string",
              "description": "device manufacturer"
            },
            "androidId": {
              "type": "string",
              "description": "device android_id",
              "location": "query"
            },
            "offerId": {
              "description": "Offer to dimiss",
              "type": "string",
              "location": "query"
            },
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "model": {
              "description": "device model",
              "location": "query",
              "type": "string"
            },
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            }
          },
          "description": "Marks the promo offer as dismissed.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/promooffer/dismiss",
          "id": "books.promooffer.dismiss",
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "books/v1/promooffer/dismiss"
        },
        "accept": {
          "parameters": {
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            },
            "volumeId": {
              "description": "Volume id to exercise the offer",
              "location": "query",
              "type": "string"
            },
            "serial": {
              "location": "query",
              "type": "string",
              "description": "device serial"
            },
            "product": {
              "description": "device product",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "location": "query",
              "type": "string"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "books/v1/promooffer/accept",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "id": "books.promooffer.accept",
          "path": "books/v1/promooffer/accept",
          "httpMethod": "POST",
          "description": "Accepts the promo offer."
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "response": {
            "$ref": "Notification"
          },
          "description": "Returns notification details for a given notification id.",
          "flatPath": "books/v1/notification/get",
          "id": "books.notification.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/notification/get",
          "parameters": {
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body."
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "notification_id": {
              "type": "string",
              "description": "String to identify the notification.",
              "location": "query",
              "required": true
            }
          },
          "parameterOrder": [
            "notification_id"
          ]
        }
      }
    },
    "mylibrary": {
      "resources": {
        "annotations": {
          "methods": {
            "insert": {
              "parameterOrder": [],
              "parameters": {
                "showOnlySummaryInResponse": {
                  "location": "query",
                  "description": "Requests that only the summary of the specified layer be provided in the response.",
                  "type": "boolean"
                },
                "annotationId": {
                  "location": "query",
                  "description": "The ID for the annotation to insert.",
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "description": "Inserts a new annotation.",
              "id": "books.mylibrary.annotations.insert",
              "response": {
                "$ref": "Annotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/annotations",
              "flatPath": "books/v1/mylibrary/annotations",
              "request": {
                "$ref": "Annotation"
              }
            },
            "list": {
              "description": "Retrieves a list of annotations, possibly filtered.",
              "flatPath": "books/v1/mylibrary/annotations",
              "httpMethod": "GET",
              "parameterOrder": [],
              "path": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.list",
              "response": {
                "$ref": "Annotations"
              },
              "parameters": {
                "showDeleted": {
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query"
                },
                "layerId": {
                  "location": "query",
                  "description": "The layer ID to limit annotation by.",
                  "type": "string"
                },
                "updatedMin": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "description": "The volume to restrict annotations to.",
                  "location": "query",
                  "type": "string"
                },
                "contentVersion": {
                  "location": "query",
                  "description": "The content version for the requested volume.",
                  "type": "string"
                },
                "maxResults": {
                  "maximum": "40",
                  "type": "integer",
                  "location": "query",
                  "description": "Maximum number of results to return",
                  "minimum": "0",
                  "format": "uint32"
                },
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "layerIds": {
                  "repeated": true,
                  "description": "The layer ID(s) to limit annotation by.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "update": {
              "response": {
                "$ref": "Annotation"
              },
              "httpMethod": "PUT",
              "description": "Updates an existing annotation.",
              "id": "books.mylibrary.annotations.update",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "parameters": {
                "annotationId": {
                  "required": true,
                  "location": "path",
                  "description": "The ID for the annotation to update.",
                  "type": "string"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "Annotation"
              },
              "parameterOrder": [
                "annotationId"
              ],
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}"
            },
            "summary": {
              "path": "books/v1/mylibrary/annotations/summary",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "httpMethod": "POST",
              "description": "Gets the summary of specified layers.",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "id": "books.mylibrary.annotations.summary",
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "required": true,
                  "description": "Volume id to get the summary for."
                },
                "layerIds": {
                  "repeated": true,
                  "description": "Array of layer IDs to get the summary for.",
                  "type": "string",
                  "required": true,
                  "location": "query"
                }
              }
            },
            "delete": {
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "description": "Deletes an annotation.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "annotationId"
              ],
              "id": "books.mylibrary.annotations.delete",
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "annotationId": {
                  "required": true,
                  "type": "string",
                  "description": "The ID for the annotation to delete.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        },
        "bookshelves": {
          "methods": {
            "list": {
              "parameterOrder": [],
              "id": "books.mylibrary.bookshelves.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/mylibrary/bookshelves",
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "httpMethod": "GET",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "response": {
                "$ref": "Bookshelves"
              },
              "flatPath": "books/v1/mylibrary/bookshelves"
            },
            "addVolume": {
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameters": {
                "reason": {
                  "location": "query",
                  "description": "The reason for which the book is added to the library.",
                  "type": "string",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ]
                },
                "shelf": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "ID of bookshelf to which to add a volume."
                },
                "volumeId": {
                  "description": "ID of volume to add.",
                  "location": "query",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "httpMethod": "POST",
              "id": "books.mylibrary.bookshelves.addVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Adds a volume to a bookshelf.",
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume"
            },
            "moveVolume": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "POST",
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ],
              "description": "Moves a volume within a bookshelf.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "volumePosition": {
                  "format": "int32",
                  "location": "query",
                  "required": true,
                  "type": "integer",
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)"
                },
                "shelf": {
                  "type": "string",
                  "description": "ID of bookshelf with the volume.",
                  "location": "path",
                  "required": true
                },
                "volumeId": {
                  "type": "string",
                  "description": "ID of volume to move.",
                  "required": true,
                  "location": "query"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "id": "books.mylibrary.bookshelves.moveVolume"
            },
            "clearVolumes": {
              "parameterOrder": [
                "shelf"
              ],
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "parameters": {
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "shelf": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "ID of bookshelf from which to remove a volume."
                }
              },
              "description": "Clears all volumes from a bookshelf.",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "removeVolume": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "volumeId": {
                  "required": true,
                  "type": "string",
                  "description": "ID of volume to remove.",
                  "location": "query"
                },
                "reason": {
                  "description": "The reason for which the book is removed from the library.",
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ]
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                },
                "shelf": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "ID of bookshelf from which to remove a volume."
                }
              },
              "httpMethod": "POST",
              "description": "Removes a volume from a bookshelf.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "id": "books.mylibrary.bookshelves.removeVolume"
            },
            "get": {
              "httpMethod": "GET",
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "id": "books.mylibrary.bookshelves.get",
              "parameterOrder": [
                "shelf"
              ],
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user.",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "required": true,
                  "location": "path",
                  "description": "ID of bookshelf to retrieve.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Bookshelf"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "source": {
                      "type": "string",
                      "description": "String to identify the originator of this request.",
                      "location": "query"
                    },
                    "startIndex": {
                      "type": "integer",
                      "description": "Index of the first element to return (starts at 0)",
                      "location": "query",
                      "minimum": "0",
                      "format": "uint32"
                    },
                    "maxResults": {
                      "format": "uint32",
                      "description": "Maximum number of results to return",
                      "minimum": "0",
                      "location": "query",
                      "type": "integer"
                    },
                    "projection": {
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "type": "string",
                      "location": "query",
                      "description": "Restrict information returned to a set of selected fields.",
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ]
                    },
                    "showPreorders": {
                      "type": "boolean",
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "location": "query"
                    },
                    "country": {
                      "location": "query",
                      "type": "string",
                      "description": "ISO-3166-1 code to override the IP-based location."
                    },
                    "q": {
                      "type": "string",
                      "location": "query",
                      "description": "Full-text search query string in this bookshelf."
                    },
                    "shelf": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The bookshelf ID or name retrieve volumes for."
                    }
                  },
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "parameterOrder": [
                    "shelf"
                  ],
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "response": {
                    "$ref": "Volumes"
                  },
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ]
                }
              }
            }
          }
        },
        "readingpositions": {
          "methods": {
            "setPosition": {
              "httpMethod": "POST",
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.readingpositions.setPosition",
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "timestamp": {
                  "required": true,
                  "location": "query",
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "type": "string"
                },
                "action": {
                  "description": "Action that caused this reading position to be set.",
                  "location": "query",
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ]
                },
                "position": {
                  "required": true,
                  "description": "Position string for the new volume reading position.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "required": true,
                  "type": "string",
                  "description": "ID of volume for which to update the reading position.",
                  "location": "path"
                },
                "deviceCookie": {
                  "type": "string",
                  "location": "query",
                  "description": "Random persistent device cookie optional on set position."
                },
                "contentVersion": {
                  "description": "Volume content version for which this reading position applies.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "description": "Sets my reading position information for a volume.",
              "response": {
                "$ref": "Empty"
              }
            },
            "get": {
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume.",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "parameterOrder": [
                "volumeId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "description": "ID of volume for which to retrieve a reading position.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "contentVersion": {
                  "location": "query",
                  "description": "Volume content version for which this reading position is requested.",
                  "type": "string"
                }
              },
              "id": "books.mylibrary.readingpositions.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "ReadingPosition"
              }
            }
          }
        }
      }
    },
    "series": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Series"
          },
          "parameters": {
            "series_id": {
              "description": "String that identifies the series",
              "required": true,
              "location": "query",
              "repeated": true,
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "series_id"
          ],
          "flatPath": "books/v1/series/get",
          "id": "books.series.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Returns Series metadata for the given series ids.",
          "path": "books/v1/series/get"
        }
      },
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "series_id"
              ],
              "description": "Returns Series membership data given the series id.",
              "parameters": {
                "series_id": {
                  "description": "String that identifies the series",
                  "required": true,
                  "type": "string",
                  "location": "query"
                },
                "page_size": {
                  "format": "uint32",
                  "type": "integer",
                  "description": "Number of maximum results per page to be included in the response.",
                  "location": "query"
                },
                "page_token": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                }
              },
              "flatPath": "books/v1/series/membership/get",
              "id": "books.series.membership.get",
              "response": {
                "$ref": "Seriesmembership"
              },
              "path": "books/v1/series/membership/get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "path": "books/v1/personalizedstream/get",
          "parameterOrder": [],
          "id": "books.personalizedstream.get",
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
              "type": "string",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Discoveryclusters"
          },
          "flatPath": "books/v1/personalizedstream/get",
          "description": "Returns a stream of personalized book clusters",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "parameters": {
            "cpksver": {
              "description": "The device/version ID from which to request the data.",
              "location": "query",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "cpksver"
          ],
          "description": "Returns a list of offline dictionary metadata available",
          "response": {
            "$ref": "Metadata"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata",
          "id": "books.dictionary.listOfflineMetadata",
          "httpMethod": "GET"
        }
      }
    },
    "volumes": {
      "resources": {
        "associated": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/volumes/{volumeId}/associated",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.associated.list",
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "description": "Return a list of associated books.",
              "parameterOrder": [
                "volumeId"
              ],
              "parameters": {
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "association": {
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ],
                  "description": "Association type."
                },
                "maxAllowedMaturityRating": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ]
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "ID of the source volume."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "httpMethod": "GET"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "id": "books.volumes.useruploaded.list",
              "flatPath": "books/v1/volumes/useruploaded",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "repeated": true,
                  "location": "query",
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned."
                },
                "startIndex": {
                  "description": "Index of the first result to return (starts at 0)",
                  "location": "query",
                  "minimum": "0",
                  "format": "uint32",
                  "type": "integer"
                },
                "processingState": {
                  "type": "string",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "repeated": true,
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "location": "query"
                },
                "maxResults": {
                  "maximum": "40",
                  "type": "integer",
                  "minimum": "0",
                  "format": "uint32",
                  "description": "Maximum number of results to return.",
                  "location": "query"
                }
              },
              "description": "Return a list of books uploaded by the current user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": [],
              "path": "books/v1/volumes/useruploaded",
              "httpMethod": "GET"
            }
          }
        },
        "mybooks": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/mybooks",
              "parameters": {
                "country": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations."
                },
                "processingState": {
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "type": "string",
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "repeated": true,
                  "location": "query"
                },
                "acquireMethod": {
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "type": "string",
                  "location": "query",
                  "description": "How the book was acquired"
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "format": "uint32",
                  "minimum": "0",
                  "type": "integer",
                  "maximum": "100",
                  "location": "query"
                },
                "startIndex": {
                  "location": "query",
                  "minimum": "0",
                  "format": "uint32",
                  "type": "integer",
                  "description": "Index of the first result to return (starts at 0)"
                }
              },
              "parameterOrder": [],
              "description": "Return a list of books in My Library.",
              "flatPath": "books/v1/volumes/mybooks",
              "id": "books.volumes.mybooks.list",
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "id": "books.volumes.recommended.list",
              "httpMethod": "GET",
              "path": "books/v1/volumes/recommended",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "parameters": {
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "maxAllowedMaturityRating": {
                  "type": "string",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ]
                }
              },
              "description": "Return a list of recommended books for the current user.",
              "flatPath": "books/v1/volumes/recommended"
            },
            "rate": {
              "id": "books.volumes.recommended.rate",
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "httpMethod": "POST",
              "flatPath": "books/v1/volumes/recommended/rate",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "path": "books/v1/volumes/recommended/rate",
              "parameters": {
                "volumeId": {
                  "required": true,
                  "type": "string",
                  "location": "query",
                  "description": "ID of the source volume."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "rating": {
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "description": "Rating to be given to the volume.",
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "required": true,
                  "location": "query"
                }
              },
              "description": "Rate a recommended book for the current user."
            }
          }
        }
      },
      "methods": {
        "list": {
          "path": "books/v1/volumes",
          "parameters": {
            "maxAllowedMaturityRating": {
              "type": "string",
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out."
            },
            "download": {
              "type": "string",
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ],
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "location": "query",
              "description": "Restrict to volumes by download availability."
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "partner": {
              "location": "query",
              "description": "Restrict and brand results for partner ID.",
              "type": "string"
            },
            "libraryRestrict": {
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ],
              "description": "Restrict search to this user's library.",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ]
            },
            "showPreorders": {
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "projection": {
              "type": "string",
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "description": "Restrict information returned to a set of selected fields."
            },
            "q": {
              "type": "string",
              "location": "query",
              "required": true,
              "description": "Full-text search query string."
            },
            "maxResults": {
              "type": "integer",
              "minimum": "0",
              "location": "query",
              "maximum": "40",
              "format": "uint32",
              "description": "Maximum number of results to return."
            },
            "printType": {
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "description": "Restrict to books or magazines.",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ]
            },
            "filter": {
              "type": "string",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "description": "Filter search results.",
              "location": "query"
            },
            "orderBy": {
              "type": "string",
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "description": "Sort search results.",
              "location": "query",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ]
            },
            "langRestrict": {
              "type": "string",
              "description": "Restrict results to books with this language code.",
              "location": "query"
            },
            "startIndex": {
              "type": "integer",
              "description": "Index of the first result to return (starts at 0)",
              "location": "query",
              "format": "uint32",
              "minimum": "0"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "id": "books.volumes.list",
          "description": "Performs a book search.",
          "parameterOrder": [
            "q"
          ],
          "response": {
            "$ref": "Volumes"
          },
          "flatPath": "books/v1/volumes"
        },
        "get": {
          "httpMethod": "GET",
          "path": "books/v1/volumes/{volumeId}",
          "description": "Gets volume information for a single volume.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.volumes.get",
          "flatPath": "books/v1/volumes/{volumeId}",
          "parameterOrder": [
            "volumeId"
          ],
          "response": {
            "$ref": "Volume"
          },
          "parameters": {
            "country": {
              "location": "query",
              "type": "string",
              "description": "ISO-3166-1 code to override the IP-based location."
            },
            "volumeId": {
              "required": true,
              "location": "path",
              "description": "ID of volume to retrieve.",
              "type": "string"
            },
            "projection": {
              "location": "query",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "description": "Restrict information returned to a set of selected fields.",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string"
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "location": "query",
              "type": "string"
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "user_library_consistent_read": {
              "type": "boolean",
              "location": "query"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "string to identify the originator of this request."
            }
          }
        }
      }
    },
    "cloudloading": {
      "methods": {
        "addBook": {
          "parameterOrder": [],
          "flatPath": "books/v1/cloudloading/addBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.cloudloading.addBook",
          "path": "books/v1/cloudloading/addBook",
          "httpMethod": "POST",
          "parameters": {
            "mime_type": {
              "type": "string",
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "location": "query"
            },
            "drive_document_id": {
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set.",
              "location": "query"
            },
            "upload_client_token": {
              "description": "Scotty upload token.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            }
          },
          "description": "Add a user-upload volume and triggers processing.",
          "response": {
            "$ref": "BooksCloudloadingResource"
          }
        },
        "updateBook": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "flatPath": "books/v1/cloudloading/updateBook",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {},
          "path": "books/v1/cloudloading/updateBook",
          "description": "Updates a user-upload volume.",
          "id": "books.cloudloading.updateBook",
          "request": {
            "$ref": "BooksCloudloadingResource"
          }
        },
        "deleteBook": {
          "parameters": {
            "volumeId": {
              "type": "string",
              "location": "query",
              "required": true,
              "description": "The id of the book to be removed."
            }
          },
          "description": "Remove the book and its contents",
          "path": "books/v1/cloudloading/deleteBook",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "volumeId"
          ],
          "id": "books.cloudloading.deleteBook",
          "flatPath": "books/v1/cloudloading/deleteBook",
          "httpMethod": "POST"
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "response": {
            "$ref": "Volume2"
          },
          "parameters": {
            "maxAllowedMaturityRating": {
              "type": "string",
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out."
            },
            "pageSize": {
              "location": "query",
              "format": "uint32",
              "description": "Number of maximum results per page to be included in the response.",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            },
            "categoryId": {
              "description": "List of category ids requested.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            }
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.onboarding.listCategoryVolumes",
          "path": "books/v1/onboarding/listCategoryVolumes",
          "httpMethod": "GET",
          "description": "List available volumes under categories for onboarding experience.",
          "flatPath": "books/v1/onboarding/listCategoryVolumes"
        },
        "listCategories": {
          "parameterOrder": [],
          "description": "List categories for onboarding experience.",
          "path": "books/v1/onboarding/listCategories",
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "books/v1/onboarding/listCategories",
          "response": {
            "$ref": "Category"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.onboarding.listCategories"
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "parameters": {
                "startIndex": {
                  "format": "uint32",
                  "description": "Index of the first element to return (starts at 0)",
                  "type": "integer",
                  "minimum": "0",
                  "location": "query"
                },
                "shelf": {
                  "location": "path",
                  "required": true,
                  "description": "ID of bookshelf to retrieve volumes.",
                  "type": "string"
                },
                "showPreorders": {
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "location": "query",
                  "type": "boolean"
                },
                "maxResults": {
                  "location": "query",
                  "type": "integer",
                  "minimum": "0",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "userId": {
                  "location": "path",
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "type": "string",
                  "required": true
                }
              },
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.bookshelves.volumes.list",
              "httpMethod": "GET",
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes"
            }
          }
        }
      },
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.bookshelves.list",
          "path": "books/v1/users/{userId}/bookshelves",
          "response": {
            "$ref": "Bookshelves"
          },
          "parameterOrder": [
            "userId"
          ],
          "httpMethod": "GET",
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "userId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "ID of user for whom to retrieve bookshelves."
            }
          }
        },
        "get": {
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "userId": {
              "required": true,
              "type": "string",
              "description": "ID of user for whom to retrieve bookshelves.",
              "location": "path"
            },
            "shelf": {
              "description": "ID of bookshelf to retrieve.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Bookshelf"
          },
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "id": "books.bookshelves.get",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "httpMethod": "GET",
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}"
        }
      }
    },
    "familysharing": {
      "methods": {
        "unshare": {
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "docId": {
              "type": "string",
              "description": "The docid to unshare.",
              "location": "query"
            },
            "volumeId": {
              "description": "The volume to unshare.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "httpMethod": "POST",
          "path": "books/v1/familysharing/unshare",
          "id": "books.familysharing.unshare",
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "books/v1/familysharing/unshare"
        },
        "share": {
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "path": "books/v1/familysharing/share",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {
            "docId": {
              "location": "query",
              "type": "string",
              "description": "The docid to share."
            },
            "volumeId": {
              "description": "The volume to share.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "id": "books.familysharing.share",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/familysharing/share"
        },
        "getFamilyInfo": {
          "response": {
            "$ref": "FamilyInfo"
          },
          "id": "books.familysharing.getFamilyInfo",
          "path": "books/v1/familysharing/getFamilyInfo",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            }
          },
          "description": "Gets information regarding the family that the user is part of.",
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET"
        }
      }
    },
    "layers": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Layersummary"
          },
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "httpMethod": "GET",
          "id": "books.layers.get",
          "description": "Gets the layer summary for a volume.",
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "parameters": {
            "volumeId": {
              "location": "path",
              "type": "string",
              "description": "The volume to retrieve layers for.",
              "required": true
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "summaryId": {
              "location": "path",
              "type": "string",
              "description": "The ID for the layer to get the summary for.",
              "required": true
            },
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "location": "query",
              "type": "string"
            }
          }
        },
        "list": {
          "id": "books.layers.list",
          "parameterOrder": [
            "volumeId"
          ],
          "description": "List the layer summaries for a volume.",
          "parameters": {
            "contentVersion": {
              "type": "string",
              "description": "The content version for the requested volume.",
              "location": "query"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "required": true,
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string"
            },
            "maxResults": {
              "minimum": "0",
              "location": "query",
              "maximum": "200",
              "type": "integer",
              "description": "Maximum number of results to return",
              "format": "uint32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The value of the nextToken from the previous page."
            }
          },
          "response": {
            "$ref": "Layersummaries"
          },
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary"
        }
      },
      "resources": {
        "annotationData": {
          "methods": {
            "get": {
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ],
              "parameters": {
                "allowWebDefinitions": {
                  "type": "boolean",
                  "location": "query",
                  "description": "For the dictionary layer. Whether or not to allow web definitions."
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "locale": {
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string"
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "contentVersion": {
                  "required": true,
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the volume you are trying to retrieve."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "scale": {
                  "type": "integer",
                  "location": "query",
                  "minimum": "0",
                  "description": "The requested scale for the image.",
                  "format": "int32"
                },
                "h": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "location": "query"
                },
                "annotationDataId": {
                  "required": true,
                  "location": "path",
                  "description": "The ID of the annotation data to retrieve.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Gets the annotation data.",
              "id": "books.layers.annotationData.get",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Annotationsdata"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                },
                "h": {
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "maxResults": {
                  "type": "integer",
                  "description": "Maximum number of results to return",
                  "minimum": "0",
                  "maximum": "200",
                  "format": "uint32",
                  "location": "query"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotation data.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "scale": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The requested scale for the image.",
                  "minimum": "0"
                },
                "w": {
                  "location": "query",
                  "type": "integer",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "format": "int32"
                },
                "updatedMin": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "contentVersion": {
                  "required": true,
                  "location": "query",
                  "description": "The content version for the requested volume.",
                  "type": "string"
                },
                "annotationDataId": {
                  "location": "query",
                  "repeated": true,
                  "type": "string",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set."
                },
                "volumeId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The volume to retrieve annotation data for."
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                }
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "description": "Gets the annotation data for a volume and layer.",
              "httpMethod": "GET",
              "id": "books.layers.annotationData.list",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ]
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "list": {
              "id": "books.layers.volumeAnnotations.list",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "updatedMin": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."
                },
                "startOffset": {
                  "type": "string",
                  "location": "query",
                  "description": "The start offset to start retrieving data from."
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "type": "boolean"
                },
                "maxResults": {
                  "type": "integer",
                  "maximum": "200",
                  "format": "uint32",
                  "minimum": "0",
                  "location": "query",
                  "description": "Maximum number of results to return"
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "endPosition": {
                  "type": "string",
                  "location": "query",
                  "description": "The end position to end retrieving data from."
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "required": true,
                  "location": "query"
                },
                "startPosition": {
                  "description": "The start position to start retrieving data from.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "endOffset": {
                  "type": "string",
                  "description": "The end offset to end retrieving data from.",
                  "location": "query"
                },
                "layerId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true
                },
                "volumeAnnotationsVersion": {
                  "type": "string",
                  "description": "The version of the volume annotations that you are requesting.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "description": "Gets the volume annotations for a volume and layer.",
              "httpMethod": "GET",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "response": {
                "$ref": "Volumeannotations"
              }
            },
            "get": {
              "httpMethod": "GET",
              "description": "Gets the volume annotation.",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "response": {
                "$ref": "Volumeannotation"
              },
              "parameters": {
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string"
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotations.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "annotationId": {
                  "description": "The ID of the volume annotation to retrieve.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.layers.volumeAnnotations.get"
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "id": "books:v1",
  "rootUrl": "https://books.googleapis.com/",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "ownerName": "Google",
  "ownerDomain": "google.com"
}

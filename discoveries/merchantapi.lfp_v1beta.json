{
  "version": "lfp_v1beta",
  "mtlsRootUrl": "https://merchantapi.mtls.googleapis.com/",
  "basePath": "",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/content": {
          "description": "Manage your product listings and accounts for Google Shopping"
        }
      }
    }
  },
  "baseUrl": "https://merchantapi.googleapis.com/",
  "rootUrl": "https://merchantapi.googleapis.com/",
  "id": "merchantapi:lfp_v1beta",
  "revision": "20240611",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "description": "Programmatically manage your Merchant Center Accounts.",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "schemas": {
    "LfpInventory": {
      "id": "LfpInventory",
      "description": "Local Inventory for the merchant.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Identifier. The name for the `LfpInventory` resource. Format: `accounts/{account}/lfpInventories/{target_merchant}~{store_code}~{offer}`",
          "readOnly": true,
          "type": "string"
        },
        "targetAccount": {
          "description": "Required. The Merchant Center ID of the merchant to submit the inventory for.",
          "type": "string",
          "format": "int64"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either the store code inserted through `InsertLfpStore` or the store code in the Business Profile.",
          "type": "string"
        },
        "offerId": {
          "description": "Required. Immutable. A unique identifier for the product. If both inventories and sales are submitted for a merchant, this id should match for the same product. **Note**: if the merchant sells the same product new and used, they should have different IDs.",
          "type": "string"
        },
        "regionCode": {
          "description": "Required. The [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml) for the country where the product is sold.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "gtin": {
          "description": "Optional. The Global Trade Item Number of the product.",
          "type": "string"
        },
        "price": {
          "description": "Optional. The current price of the product.",
          "$ref": "Price"
        },
        "availability": {
          "description": "Required. Availability of the product at this store. For accepted attribute values, see the [local product inventory data specification](https://support.google.com/merchants/answer/3061342)",
          "type": "string"
        },
        "quantity": {
          "description": "Optional. Quantity of the product available at this store. Must be greater than or equal to zero.",
          "type": "string",
          "format": "int64"
        },
        "collectionTime": {
          "description": "Optional. The time when the inventory is collected. If not set, it will be set to the time when the inventory is submitted.",
          "type": "string",
          "format": "google-datetime"
        },
        "pickupMethod": {
          "description": "Optional. Supported pickup method for this offer. Unless the value is \"not supported\", this field must be submitted together with `pickupSla`. For accepted attribute values, see the [local product inventory data specification](https://support.google.com/merchants/answer/3061342).",
          "type": "string"
        },
        "pickupSla": {
          "description": "Optional. Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the [local product inventory data specification](https://support.google.com/merchants/answer/3061342).",
          "type": "string"
        },
        "feedLabel": {
          "description": "Optional. The [feed label](https://developers.google.com/shopping-content/guides/products/feed-labels) for the product. If this is not set, it will default to `regionCode`.",
          "type": "string"
        }
      }
    },
    "Price": {
      "id": "Price",
      "description": "The price represented as a number and currency.",
      "type": "object",
      "properties": {
        "amountMicros": {
          "description": "The price represented as a number in micros (1 million micros is an equivalent to one's currency standard unit, for example, 1 USD = 1000000 micros).",
          "type": "string",
          "format": "int64"
        },
        "currencyCode": {
          "description": "The currency of the price using three-letter acronyms according to [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217).",
          "type": "string"
        }
      }
    },
    "LfpSale": {
      "id": "LfpSale",
      "description": "A sale for the merchant.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Identifier. The name of the `LfpSale` resource. Format: `accounts/{account}/lfpSales/{sale}`",
          "readOnly": true,
          "type": "string"
        },
        "targetAccount": {
          "description": "Required. The Merchant Center ID of the merchant to submit the sale for.",
          "type": "string",
          "format": "int64"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in the Business Profile.",
          "type": "string"
        },
        "offerId": {
          "description": "Required. A unique identifier for the product. If both inventories and sales are submitted for a merchant, this id should match for the same product. **Note**: if the merchant sells the same product new and used, they should have different IDs.",
          "type": "string"
        },
        "regionCode": {
          "description": "Required. The [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml) for the country where the product is sold.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "gtin": {
          "description": "Required. The Global Trade Item Number of the sold product.",
          "type": "string"
        },
        "price": {
          "description": "Required. The unit price of the product.",
          "$ref": "Price"
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        },
        "saleTime": {
          "description": "Required. The timestamp for the sale.",
          "type": "string",
          "format": "google-datetime"
        },
        "uid": {
          "description": "Output only. System generated globally unique ID for the `LfpSale`.",
          "readOnly": true,
          "type": "string"
        },
        "feedLabel": {
          "description": "Optional. The [feed label](https://developers.google.com/shopping-content/guides/products/feed-labels) for the product. If this is not set, it will default to `regionCode`.",
          "type": "string"
        }
      }
    },
    "LfpStore": {
      "id": "LfpStore",
      "description": "A store for the merchant. This will be used to match to a store under the Google Business Profile of the target merchant. If a matching store can't be found, the inventories or sales submitted with the store code will not be used.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Identifier. The name of the `LfpStore` resource. Format: `accounts/{account}/lfpStores/{target_merchant}~{store_code}`",
          "readOnly": true,
          "type": "string"
        },
        "targetAccount": {
          "description": "Required. The Merchant Center id of the merchant to submit the store for.",
          "type": "string",
          "format": "int64"
        },
        "storeCode": {
          "description": "Required. Immutable. A store identifier that is unique for the target merchant.",
          "type": "string"
        },
        "storeAddress": {
          "description": "Required. The street address of the store. Example: 1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA.",
          "type": "string"
        },
        "storeName": {
          "description": "Optional. The merchant or store name.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Optional. The store phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. Example: `+15556767888`",
          "type": "string"
        },
        "websiteUri": {
          "description": "Optional. The website URL for the store or merchant.",
          "type": "string"
        },
        "gcidCategory": {
          "description": "Optional. [Google My Business category id](https://gcid-explorer.corp.google.com/static/gcid.html).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "placeId": {
          "description": "Optional. The [Google Place Id](https://developers.google.com/maps/documentation/places/web-service/place-id#id-overview) of the store location.",
          "type": "string"
        },
        "matchingState": {
          "description": "Optional. Output only. The state of matching to a Google Business Profile. See matchingStateHint for further details if no match is found.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Store matching state unspecified.",
            "The `LfpStore` is successfully matched with a Google Business Profile store.",
            "The `LfpStore` is not matched with a Google Business Profile store."
          ],
          "enum": [
            "STORE_MATCHING_STATE_UNSPECIFIED",
            "STORE_MATCHING_STATE_MATCHED",
            "STORE_MATCHING_STATE_FAILED"
          ]
        },
        "matchingStateHint": {
          "description": "Optional. Output only. The hint of why the matching has failed. This is only set when matchingState=`STORE_MATCHING_STATE_FAILED`. Possible values are: - \"`linked-store-not-found`\": There aren't any Google Business Profile stores available for matching. - \"`store-match-not-found`\": The provided `LfpStore` couldn't be matched to any of the connected Google Business Profile stores. Merchant Center account is connected correctly and stores are available on Google Business Profile, but the `LfpStore` location address does not match with Google Business Profile stores' addresses. Update the `LfpStore` address or Google Business Profile store address to match correctly. - \"`store-match-unverified`\": The provided `LfpStore` couldn't be matched to any of the connected Google Business Profile stores, as the matched Google Business Profile store is unverified. Go through the Google Business Profile verification process to match correctly.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "ListLfpStoresResponse": {
      "id": "ListLfpStoresResponse",
      "description": "Response message for the ListLfpStores method.",
      "type": "object",
      "properties": {
        "lfpStores": {
          "description": "The stores from the specified merchant.",
          "type": "array",
          "items": {
            "$ref": "LfpStore"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "ProductStatusChangeMessage": {
      "id": "ProductStatusChangeMessage",
      "description": "The message that the merchant will receive to notify about product status change event",
      "type": "object",
      "properties": {
        "account": {
          "description": "The target account that owns the entity that changed. Format : `accounts/{merchant_id}`",
          "type": "string"
        },
        "managingAccount": {
          "description": "The account that manages the merchant's account. can be the same as merchant id if it is standalone account. Format : `accounts/{service_provider_id}`",
          "type": "string"
        },
        "resourceType": {
          "description": "The resource that changed, in this case it will always be `Product`.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified resource",
            "Resource type : product"
          ],
          "enum": [
            "RESOURCE_UNSPECIFIED",
            "PRODUCT"
          ]
        },
        "attribute": {
          "description": "The attribute in the resource that changed, in this case it will be always `Status`.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified attribute",
            "Status of the changed entity"
          ],
          "enum": [
            "ATTRIBUTE_UNSPECIFIED",
            "STATUS"
          ]
        },
        "changes": {
          "description": "A message to describe the change that happened to the product",
          "type": "array",
          "items": {
            "$ref": "ProductChange"
          }
        },
        "resourceId": {
          "description": "The product id.",
          "type": "string"
        },
        "resource": {
          "description": "The product name. Format: `{product.name=accounts/{account}/products/{product}}`",
          "type": "string"
        }
      }
    },
    "ProductChange": {
      "id": "ProductChange",
      "description": "The change that happened to the product including old value, new value, country code as the region code and reporting context.",
      "type": "object",
      "properties": {
        "oldValue": {
          "description": "The old value of the changed resource or attribute.",
          "type": "string"
        },
        "newValue": {
          "description": "The new value of the changed resource or attribute.",
          "type": "string"
        },
        "regionCode": {
          "description": "Countries that have the change (if applicable)",
          "type": "string"
        },
        "reportingContext": {
          "description": "Reporting contexts that have the change (if applicable)",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "[Shopping ads](https://support.google.com/merchants/answer/6149970).",
            "Deprecated: Use `DEMAND_GEN_ADS` instead. [Discovery and Demand Gen ads](https://support.google.com/merchants/answer/13389785).",
            "[Demand Gen ads](https://support.google.com/merchants/answer/13389785).",
            "[Demand Gen ads on Discover surface](https://support.google.com/merchants/answer/13389785).",
            "[Video ads](https://support.google.com/google-ads/answer/6340491).",
            "[Display ads](https://support.google.com/merchants/answer/6069387).",
            "[Local inventory ads](https://support.google.com/merchants/answer/3271956).",
            "[Vehicle inventory ads](https://support.google.com/merchants/answer/11544533).",
            "[Free product listings](https://support.google.com/merchants/answer/9199328).",
            "[Free local product listings](https://support.google.com/merchants/answer/9825611).",
            "[Free local vehicle listings](https://support.google.com/merchants/answer/11544533).",
            "[YouTube Shopping](https://support.google.com/merchants/answer/13478370).",
            "[Cloud retail](https://cloud.google.com/solutions/retail).",
            "[Local cloud retail](https://cloud.google.com/solutions/retail)."
          ],
          "enumDeprecated": [
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
          ],
          "enum": [
            "REPORTING_CONTEXT_ENUM_UNSPECIFIED",
            "SHOPPING_ADS",
            "DISCOVERY_ADS",
            "DEMAND_GEN_ADS",
            "DEMAND_GEN_ADS_DISCOVER_SURFACE",
            "VIDEO_ADS",
            "DISPLAY_ADS",
            "LOCAL_INVENTORY_ADS",
            "VEHICLE_INVENTORY_ADS",
            "FREE_LISTINGS",
            "FREE_LOCAL_LISTINGS",
            "FREE_LOCAL_VEHICLE_LISTINGS",
            "YOUTUBE_SHOPPING",
            "CLOUD_RETAIL",
            "LOCAL_CLOUD_RETAIL"
          ]
        }
      }
    }
  },
  "title": "Merchant API",
  "ownerName": "Google",
  "version_module": true,
  "name": "merchantapi",
  "resources": {
    "accounts": {
      "resources": {
        "lfpInventories": {
          "methods": {
            "insert": {
              "id": "merchantapi.accounts.lfpInventories.insert",
              "path": "lfp/v1beta/{+parent}/lfpInventories:insert",
              "flatPath": "lfp/v1beta/accounts/{accountsId}/lfpInventories:insert",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The LFP provider account. Format: `accounts/{account}`",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "LfpInventory"
              },
              "response": {
                "$ref": "LfpInventory"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Inserts a `LfpInventory` resource for the given target merchant account. If the resource already exists, it will be replaced. The inventory automatically expires after 30 days."
            }
          }
        },
        "lfpSales": {
          "methods": {
            "insert": {
              "id": "merchantapi.accounts.lfpSales.insert",
              "path": "lfp/v1beta/{+parent}/lfpSales:insert",
              "flatPath": "lfp/v1beta/accounts/{accountsId}/lfpSales:insert",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The LFP provider account. Format: `accounts/{lfp_partner}`",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "LfpSale"
              },
              "response": {
                "$ref": "LfpSale"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Inserts a `LfpSale` for the given merchant."
            }
          }
        },
        "lfpStores": {
          "methods": {
            "get": {
              "id": "merchantapi.accounts.lfpStores.get",
              "path": "lfp/v1beta/{+name}",
              "flatPath": "lfp/v1beta/accounts/{accountsId}/lfpStores/{lfpStoresId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the store to retrieve. Format: `accounts/{account}/lfpStores/{target_merchant}~{store_code}`",
                  "pattern": "^accounts/[^/]+/lfpStores/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "LfpStore"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Retrieves information about a store."
            },
            "insert": {
              "id": "merchantapi.accounts.lfpStores.insert",
              "path": "lfp/v1beta/{+parent}/lfpStores:insert",
              "flatPath": "lfp/v1beta/accounts/{accountsId}/lfpStores:insert",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The LFP provider account Format: `accounts/{account}`",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "LfpStore"
              },
              "response": {
                "$ref": "LfpStore"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Inserts a store for the target merchant. If the store with the same store code already exists, it will be replaced."
            },
            "delete": {
              "id": "merchantapi.accounts.lfpStores.delete",
              "path": "lfp/v1beta/{+name}",
              "flatPath": "lfp/v1beta/accounts/{accountsId}/lfpStores/{lfpStoresId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the store to delete for the target merchant account. Format: `accounts/{account}/lfpStores/{target_merchant}~{store_code}`",
                  "pattern": "^accounts/[^/]+/lfpStores/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Deletes a store for a target merchant."
            },
            "list": {
              "id": "merchantapi.accounts.lfpStores.list",
              "path": "lfp/v1beta/{+parent}/lfpStores",
              "flatPath": "lfp/v1beta/accounts/{accountsId}/lfpStores",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The LFP partner. Format: `accounts/{account}`",
                  "pattern": "^accounts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "targetAccount": {
                  "description": "Required. The Merchant Center id of the merchant to list stores for.",
                  "location": "query",
                  "type": "string",
                  "format": "int64"
                },
                "pageSize": {
                  "description": "Optional. The maximum number of `LfpStore` resources for the given account to return. The service returns fewer than this value if the number of stores for the given account is less than the `pageSize`. The default value is 250. The maximum value is 1000; If a value higher than the maximum is specified, then the `pageSize` will default to the maximum.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional. A page token, received from a previous `ListLfpStoresRequest` call. Provide the page token to retrieve the subsequent page. When paginating, all other parameters provided to `ListLfpStoresRequest` must match the call that provided the page token. The token returned as nextPageToken in the response to the previous request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListLfpStoresResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Lists the stores of the target merchant, specified by the filter in `ListLfpStoresRequest`."
            }
          }
        }
      }
    }
  },
  "documentationLink": "https://developers.devsite.corp.google.com/merchant/api",
  "protocol": "rest",
  "canonicalName": "Merchant"
}

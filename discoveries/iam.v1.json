{
  "title": "Identity and Access Management (IAM) API",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "Aws": {
      "type": "object",
      "description": "Represents an Amazon Web Services identity provider.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Required. The AWS account ID."
        }
      },
      "id": "Aws"
    },
    "WorkloadIdentityPool": {
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use existing tokens to access resources. If the pool is re-enabled, existing tokens grant access again."
        },
        "displayName": {
          "description": "A display name for the pool. Cannot exceed 32 characters.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the pool."
        },
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The pool is active, and may be used in Google Cloud policies.",
            "The pool is soft-deleted. Soft-deleted pools are permanently deleted after approximately 30 days. You can restore a soft-deleted pool using UndeleteWorkloadIdentityPool. You cannot reuse the ID of a soft-deleted pool until it is permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or use existing tokens to access resources. If the pool is undeleted, existing tokens grant access again."
          ],
          "description": "Output only. The state of the pool.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETED"
          ],
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "A description of the pool. Cannot exceed 256 characters."
        }
      },
      "id": "WorkloadIdentityPool",
      "description": "Represents a collection of external workload identities. You can define IAM policies to grant these identities access to Google Cloud resources."
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "id": "Binding"
    },
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      },
      "type": "object"
    },
    "ListRolesResponse": {
      "properties": {
        "roles": {
          "items": {
            "$ref": "Role"
          },
          "type": "array",
          "description": "The Roles defined on this resource."
        },
        "nextPageToken": {
          "type": "string",
          "description": "To retrieve the next page of results, set `ListRolesRequest.page_token` to this value."
        }
      },
      "id": "ListRolesResponse",
      "description": "The response containing the roles defined under a resource.",
      "type": "object"
    },
    "DisableServiceAccountRequest": {
      "id": "DisableServiceAccountRequest",
      "properties": {},
      "type": "object",
      "description": "The service account disable request."
    },
    "LintResult": {
      "properties": {
        "severity": {
          "type": "string",
          "description": "The validation unit severity.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "NOTICE",
            "INFO",
            "DEPRECATED"
          ],
          "enumDescriptions": [
            "Severity is unspecified.",
            "A validation unit returns an error only for critical issues. If an attempt is made to set the problematic policy without rectifying the critical issue, it causes the `setPolicy` operation to fail.",
            "Any issue which is severe enough but does not cause an error. For example, suspicious constructs in the input object will not necessarily fail `setPolicy`, but there is a high likelihood that they won't behave as expected during policy evaluation in `checkPolicy`. This includes the following common scenarios: - Unsatisfiable condition: Expired timestamp in date/time condition. - Ineffective condition: Condition on a pair which is granted unconditionally in another binding of the same policy.",
            "Reserved for the issues that are not severe as `ERROR`/`WARNING`, but need special handling. For instance, messages about skipped validation units are issued as `NOTICE`.",
            "Any informative statement which is not severe enough to raise `ERROR`/`WARNING`/`NOTICE`, like auto-correction recommendations on the input content. Note that current version of the linter does not utilize `INFO`.",
            "Deprecated severity level."
          ]
        },
        "debugMessage": {
          "description": "Human readable debug message associated with the issue.",
          "type": "string"
        },
        "validationUnitName": {
          "type": "string",
          "description": "The validation unit name, for instance \"lintValidationUnits/ConditionComplexityCheck\"."
        },
        "fieldName": {
          "type": "string",
          "description": "The name of the field for which this lint result is about. For nested messages `field_name` consists of names of the embedded fields separated by period character. The top-level qualifier is the input object to lint in the request. For example, the `field_name` value `condition.expression` identifies a lint result for the `expression` field of the provided condition."
        },
        "level": {
          "type": "string",
          "enum": [
            "LEVEL_UNSPECIFIED",
            "CONDITION"
          ],
          "description": "The validation unit level.",
          "enumDescriptions": [
            "Level is unspecified.",
            "A validation unit which operates on an individual condition within a binding."
          ]
        },
        "locationOffset": {
          "type": "integer",
          "format": "int32",
          "description": "0-based character position of problematic construct within the object identified by `field_name`. Currently, this is populated only for condition expression."
        }
      },
      "description": "Structured response of a single validation unit.",
      "id": "LintResult",
      "type": "object"
    },
    "ListServiceAccountKeysResponse": {
      "type": "object",
      "properties": {
        "keys": {
          "items": {
            "$ref": "ServiceAccountKey"
          },
          "type": "array",
          "description": "The public keys for the service account."
        }
      },
      "id": "ListServiceAccountKeysResponse",
      "description": "The service account keys list response."
    },
    "AuditableService": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Public name of the service. For example, the service name for Cloud IAM is 'iam.googleapis.com'.",
          "type": "string"
        }
      },
      "description": "Contains information about an auditable service.",
      "id": "AuditableService"
    },
    "UndeleteWorkloadIdentityPoolRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for UndeleteWorkloadIdentityPool.",
      "id": "UndeleteWorkloadIdentityPoolRequest"
    },
    "QueryAuditableServicesRequest": {
      "description": "A request to get the list of auditable services for a resource.",
      "id": "QueryAuditableServicesRequest",
      "properties": {
        "fullResourceName": {
          "type": "string",
          "description": "Required. The full resource name to query from the list of auditable services. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`."
        }
      },
      "type": "object"
    },
    "QueryGrantableRolesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "To retrieve the next page of results, set `QueryGrantableRolesRequest.page_token` to this value."
        },
        "roles": {
          "items": {
            "$ref": "Role"
          },
          "description": "The list of matching roles.",
          "type": "array"
        }
      },
      "id": "QueryGrantableRolesResponse",
      "description": "The grantable role query response.",
      "type": "object"
    },
    "BindingDelta": {
      "description": "One delta entry for Binding. Each individual change (only one member in each entry) to a binding will be a separate entry.",
      "properties": {
        "action": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Addition of a Binding.",
            "Removal of a Binding."
          ],
          "description": "The action that was performed on a Binding. Required",
          "enum": [
            "ACTION_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ]
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required"
        },
        "condition": {
          "description": "The condition that is associated with this binding.",
          "$ref": "Expr"
        },
        "member": {
          "type": "string",
          "description": "A single identity requesting access for a Cloud Platform resource. Follows the same format of Binding.members. Required"
        }
      },
      "id": "BindingDelta",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      }
    },
    "SignJwtResponse": {
      "properties": {
        "keyId": {
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The id of the key used to sign the JWT.",
          "type": "string"
        },
        "signedJwt": {
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The signed JWT.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign JWT response.",
      "id": "SignJwtResponse"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        }
      }
    },
    "SignJwtRequest": {
      "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign JWT request.",
      "properties": {
        "payload": {
          "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The JWT payload to sign. Must be a serialized JSON object that contains a JWT Claims Set. For example: `{\"sub\": \"user@example.com\", \"iat\": 313435}` If the JWT Claims Set contains an expiration time (`exp`) claim, it must be an integer timestamp that is not in the past and no more than 12 hours in the future. If the JWT Claims Set does not contain an expiration time (`exp`) claim, this claim is added automatically, with a timestamp that is 1 hour in the future.",
          "type": "string"
        }
      },
      "id": "SignJwtRequest",
      "type": "object"
    },
    "UploadServiceAccountKeyRequest": {
      "properties": {
        "publicKeyData": {
          "description": "A field that allows clients to upload their own public key. If set, use this public key data to create a service account key for given service account. Please note, the expected format for this field is X509_PEM.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "UploadServiceAccountKeyRequest",
      "description": "The service account key upload request.",
      "type": "object"
    },
    "SignBlobRequest": {
      "properties": {
        "bytesToSign": {
          "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The bytes to sign.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign blob request.",
      "id": "SignBlobRequest",
      "type": "object"
    },
    "AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string"
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "id": "AuditLogConfig"
    },
    "QueryAuditableServicesResponse": {
      "id": "QueryAuditableServicesResponse",
      "description": "A response containing a list of auditable services for a resource.",
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "AuditableService"
          },
          "description": "The auditable services for a resource."
        }
      }
    },
    "Oidc": {
      "id": "Oidc",
      "description": "Represents an OpenId Connect 1.0 identity provider.",
      "type": "object",
      "properties": {
        "issuerUri": {
          "type": "string",
          "description": "Required. The OIDC issuer URL. Must be an HTTPS endpoint."
        },
        "allowedAudiences": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ``` //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ ```"
        }
      }
    },
    "PolicyDelta": {
      "properties": {
        "bindingDeltas": {
          "type": "array",
          "items": {
            "$ref": "BindingDelta"
          },
          "description": "The delta for Bindings between two policies."
        }
      },
      "type": "object",
      "id": "PolicyDelta",
      "description": "The difference delta between two policies."
    },
    "EnableServiceAccountRequest": {
      "description": "The service account enable request.",
      "type": "object",
      "id": "EnableServiceAccountRequest",
      "properties": {}
    },
    "AuditData": {
      "id": "AuditData",
      "properties": {
        "policyDelta": {
          "description": "Policy delta between the original policy and the newly set policy.",
          "$ref": "PolicyDelta"
        }
      },
      "type": "object",
      "description": "Audit log information specific to Cloud IAM. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message."
    },
    "UndeleteServiceAccountResponse": {
      "properties": {
        "restoredAccount": {
          "$ref": "ServiceAccount",
          "description": "Metadata for the restored service account."
        }
      },
      "type": "object",
      "id": "UndeleteServiceAccountResponse"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        }
      },
      "type": "object",
      "id": "Expr"
    },
    "UndeleteWorkloadIdentityPoolProviderRequest": {
      "description": "Request message for UndeleteWorkloadIdentityPoolProvider.",
      "type": "object",
      "properties": {},
      "id": "UndeleteWorkloadIdentityPoolProviderRequest"
    },
    "Role": {
      "type": "object",
      "description": "A role in the Identity and Access Management API.",
      "id": "Role",
      "properties": {
        "includedPermissions": {
          "type": "array",
          "description": "The names of the permissions this role grants when bound in an IAM policy.",
          "items": {
            "type": "string"
          }
        },
        "stage": {
          "description": "The current launch stage of the role. If the `ALPHA` launch stage has been selected for a role, the `stage` field will not be included in the returned definition for the role.",
          "type": "string",
          "enum": [
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED",
            "DISABLED",
            "EAP"
          ],
          "enumDescriptions": [
            "The user has indicated this role is currently in an Alpha phase. If this launch stage is selected, the `stage` field will not be included when requesting the definition for a given role.",
            "The user has indicated this role is currently in a Beta phase.",
            "The user has indicated this role is generally available.",
            "The user has indicated this role is being deprecated.",
            "This role is disabled and will not contribute permissions to any members it is granted to in policies.",
            "The user has indicated this role is currently in an EAP phase."
          ]
        },
        "deleted": {
          "description": "The current deleted state of the role. This field is read only. It will be ignored in calls to CreateRole and UpdateRole.",
          "type": "boolean"
        },
        "title": {
          "type": "string",
          "description": "Optional. A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes."
        },
        "name": {
          "description": "The name of the role. When Role is used in CreateRole, the role name must not be set. When Role is used in output and other input such as UpdateRole, the role name is the complete path, e.g., roles/logging.viewer for predefined roles and organizations/{ORGANIZATION_ID}/roles/logging.viewer for custom roles.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. A human-readable description for the role."
        },
        "etag": {
          "type": "string",
          "description": "Used to perform a consistent read-modify-write.",
          "format": "byte"
        }
      }
    },
    "SignBlobResponse": {
      "properties": {
        "signature": {
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The signed blob.",
          "type": "string",
          "format": "byte"
        },
        "keyId": {
          "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The id of the key used to sign the blob.",
          "type": "string"
        }
      },
      "id": "SignBlobResponse",
      "type": "object",
      "description": "Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The service account sign blob response."
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      }
    },
    "CreateRoleRequest": {
      "description": "The request to create a new role.",
      "id": "CreateRoleRequest",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "Role",
          "description": "The Role resource to create."
        },
        "roleId": {
          "description": "The role ID to use for this role. A role ID may contain alphanumeric characters, underscores (`_`), and periods (`.`). It must contain a minimum of 3 characters and a maximum of 64 characters.",
          "type": "string"
        }
      }
    },
    "CreateServiceAccountKeyRequest": {
      "description": "The service account key create request.",
      "id": "CreateServiceAccountKeyRequest",
      "type": "object",
      "properties": {
        "privateKeyType": {
          "description": "The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.",
          "enumDescriptions": [
            "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
            "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
            "Google Credentials File format."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PKCS12_FILE",
            "TYPE_GOOGLE_CREDENTIALS_FILE"
          ]
        },
        "keyAlgorithm": {
          "enum": [
            "KEY_ALG_UNSPECIFIED",
            "KEY_ALG_RSA_1024",
            "KEY_ALG_RSA_2048"
          ],
          "type": "string",
          "description": "Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.",
          "enumDescriptions": [
            "An unspecified key algorithm.",
            "1k RSA Key.",
            "2k RSA Key."
          ]
        }
      }
    },
    "Policy": {
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
        },
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        }
      },
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object"
    },
    "ServiceAccount": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. A user-specified, human-readable name for the service account. The maximum length is 100 UTF-8 bytes.",
          "type": "string"
        },
        "oauth2ClientId": {
          "description": "Output only. The OAuth 2.0 client ID for the service account.",
          "readOnly": true,
          "type": "string"
        },
        "etag": {
          "description": "Deprecated. Do not use.",
          "format": "byte",
          "type": "string"
        },
        "disabled": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the service account is disabled."
        },
        "projectId": {
          "type": "string",
          "description": "Output only. The ID of the project that owns the service account.",
          "readOnly": true
        },
        "uniqueId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique, stable numeric ID for the service account. Each service account retains its unique ID even if you delete the service account. For example, if you delete a service account, then create a new service account with the same name, the new service account has a different unique ID than the deleted service account."
        },
        "description": {
          "description": "Optional. A user-specified, human-readable description of the service account. The maximum length is 256 UTF-8 bytes.",
          "type": "string"
        },
        "email": {
          "readOnly": true,
          "description": "Output only. The email address of the service account.",
          "type": "string"
        }
      },
      "description": "An IAM service account. A service account is an account for an application or a virtual machine (VM) instance, not a person. You can use a service account to call Google APIs. To learn more, read the [overview of service accounts](https://cloud.google.com/iam/help/service-accounts/overview). When you create a service account, you specify the project ID that owns the service account, as well as a name that must be unique within the project. IAM uses these values to create an email address that identifies the service account.",
      "id": "ServiceAccount"
    },
    "ServiceAccountKey": {
      "description": "Represents a service account key. A service account has two sets of key-pairs: user-managed, and system-managed. User-managed key-pairs can be created and deleted by users. Users are responsible for rotating these keys periodically to ensure security of their service accounts. Users retain the private key of these key-pairs, and Google retains ONLY the public key. System-managed keys are automatically rotated by Google, and are used for signing for a maximum of two weeks. The rotation process is probabilistic, and usage of the new key will gradually ramp up and down over the key's lifetime. If you cache the public key set for a service account, we recommend that you update the cache every 15 minutes. User-managed keys can be added and removed at any time, so it is important to update the cache frequently. For Google-managed keys, Google will publish a key at least 6 hours before it is first used for signing and will keep publishing it for at least 6 hours after it was last used for signing. Public keys for all service accounts are also published at the OAuth2 Service Account API.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the service account key in the following format `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`."
        },
        "privateKeyType": {
          "enumDescriptions": [
            "Unspecified. Equivalent to `TYPE_GOOGLE_CREDENTIALS_FILE`.",
            "PKCS12 format. The password for the PKCS12 file is `notasecret`. For more information, see https://tools.ietf.org/html/rfc7292.",
            "Google Credentials File format."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_PKCS12_FILE",
            "TYPE_GOOGLE_CREDENTIALS_FILE"
          ],
          "description": "The output format for the private key. Only provided in `CreateServiceAccountKey` responses, not in `GetServiceAccountKey` or `ListServiceAccountKey` responses. Google never exposes system-managed private keys, and never retains user-managed private keys.",
          "type": "string"
        },
        "privateKeyData": {
          "type": "string",
          "format": "byte",
          "description": "The private key data. Only provided in `CreateServiceAccountKey` responses. Make sure to keep the private key data secure because it allows for the assertion of the service account identity. When base64 decoded, the private key data can be used to authenticate with Google API client libraries and with gcloud auth activate-service-account."
        },
        "validAfterTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The key can be used after this timestamp."
        },
        "keyType": {
          "enumDescriptions": [
            "Unspecified key type. The presence of this in the message will immediately result in an error.",
            "User-managed keys (managed and rotated by the user).",
            "System-managed keys (managed and rotated by Google)."
          ],
          "description": "The key type.",
          "type": "string",
          "enum": [
            "KEY_TYPE_UNSPECIFIED",
            "USER_MANAGED",
            "SYSTEM_MANAGED"
          ]
        },
        "publicKeyData": {
          "description": "The public key data. Only provided in `GetServiceAccountKey` responses.",
          "type": "string",
          "format": "byte"
        },
        "keyOrigin": {
          "type": "string",
          "enum": [
            "ORIGIN_UNSPECIFIED",
            "USER_PROVIDED",
            "GOOGLE_PROVIDED"
          ],
          "enumDescriptions": [
            "Unspecified key origin.",
            "Key is provided by user.",
            "Key is provided by Google."
          ],
          "description": "The key origin."
        },
        "keyAlgorithm": {
          "enum": [
            "KEY_ALG_UNSPECIFIED",
            "KEY_ALG_RSA_1024",
            "KEY_ALG_RSA_2048"
          ],
          "type": "string",
          "description": "Specifies the algorithm (and possibly key size) for the key.",
          "enumDescriptions": [
            "An unspecified key algorithm.",
            "1k RSA Key.",
            "2k RSA Key."
          ]
        },
        "validBeforeTime": {
          "type": "string",
          "description": "The key can be used before this timestamp. For system-managed key pairs, this timestamp is the end time for the private key signing operation. The public key could still be used for verification for a few hours after this time.",
          "format": "google-datetime"
        }
      },
      "id": "ServiceAccountKey"
    },
    "PermissionDelta": {
      "type": "object",
      "id": "PermissionDelta",
      "description": "A PermissionDelta message to record the added_permissions and removed_permissions inside a role.",
      "properties": {
        "addedPermissions": {
          "items": {
            "type": "string"
          },
          "description": "Added permissions.",
          "type": "array"
        },
        "removedPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Removed permissions."
        }
      }
    },
    "WorkloadIdentityPoolProvider": {
      "description": "A configuration for an external identity provider.",
      "id": "WorkloadIdentityPoolProvider",
      "properties": {
        "state": {
          "description": "Output only. The state of the provider.",
          "enumDescriptions": [
            "State unspecified.",
            "The provider is active, and may be used to validate authentication credentials.",
            "The provider is soft-deleted. Soft-deleted providers are permanently deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider. You cannot reuse the ID of a soft-deleted provider until it is permanently deleted."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETED"
          ]
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the provider."
        },
        "description": {
          "description": "A description for the provider. Cannot exceed 256 characters.",
          "type": "string"
        },
        "disabled": {
          "description": "Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access.",
          "type": "boolean"
        },
        "oidc": {
          "$ref": "Oidc",
          "description": "An OpenId Connect 1.0 identity provider."
        },
        "attributeCondition": {
          "type": "string",
          "description": "[A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credential are accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` \"'admins' in google.groups\" ```"
        },
        "attributeMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { \"google.subject\":\"assertion.arn\", \"attribute.aws_role\": \"assertion.arn.contains('assumed-role')\" \" ? assertion.arn.extract('{account_arn}assumed-role/')\" \" + 'assumed-role/'\" \" + assertion.arn.extract('assumed-role/{role_name}/')\" \" : assertion.arn\", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {\"google.subject\": \"assertion.sub\"} ```"
        },
        "displayName": {
          "description": "A display name for the provider. Cannot exceed 32 characters.",
          "type": "string"
        },
        "aws": {
          "$ref": "Aws",
          "description": "An Amazon Web Services identity provider."
        }
      },
      "type": "object"
    },
    "UndeleteServiceAccountRequest": {
      "id": "UndeleteServiceAccountRequest",
      "properties": {},
      "type": "object",
      "description": "The service account undelete request."
    },
    "CreateServiceAccountRequest": {
      "type": "object",
      "description": "The service account create request.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Required. The account id that is used to generate the service account email address and a stable unique id. It is unique within a project, must be 6-30 characters long, and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035."
        },
        "serviceAccount": {
          "$ref": "ServiceAccount",
          "description": "The ServiceAccount resource to create. Currently, only the following values are user assignable: `display_name` and `description`."
        }
      },
      "id": "CreateServiceAccountRequest"
    },
    "QueryTestablePermissionsResponse": {
      "id": "QueryTestablePermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "$ref": "Permission"
          },
          "type": "array",
          "description": "The Permissions testable on the requested resource."
        },
        "nextPageToken": {
          "description": "To retrieve the next page of results, set `QueryTestableRolesRequest.page_token` to this value.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The response containing permissions which can be tested on a resource."
    },
    "AdminAuditData": {
      "description": "Audit log information specific to Cloud IAM admin APIs. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.",
      "type": "object",
      "properties": {
        "permissionDelta": {
          "description": "The permission_delta when when creating or updating a Role.",
          "$ref": "PermissionDelta"
        }
      },
      "id": "AdminAuditData"
    },
    "ListServiceAccountsResponse": {
      "type": "object",
      "description": "The service account list response.",
      "id": "ListServiceAccountsResponse",
      "properties": {
        "accounts": {
          "items": {
            "$ref": "ServiceAccount"
          },
          "description": "The list of matching service accounts.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "To retrieve the next page of results, set ListServiceAccountsRequest.page_token to this value.",
          "type": "string"
        }
      }
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "id": "Status"
    },
    "ListWorkloadIdentityPoolProvidersResponse": {
      "description": "Response message for ListWorkloadIdentityPoolProviders.",
      "type": "object",
      "id": "ListWorkloadIdentityPoolProvidersResponse",
      "properties": {
        "workloadIdentityPoolProviders": {
          "description": "A list of providers.",
          "type": "array",
          "items": {
            "$ref": "WorkloadIdentityPoolProvider"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "LintPolicyResponse": {
      "description": "The response of a lint operation. An empty response indicates the operation was able to fully execute and no lint issue was found.",
      "type": "object",
      "id": "LintPolicyResponse",
      "properties": {
        "lintResults": {
          "type": "array",
          "items": {
            "$ref": "LintResult"
          },
          "description": "List of lint results sorted by `severity` in descending order."
        }
      }
    },
    "QueryTestablePermissionsRequest": {
      "properties": {
        "fullResourceName": {
          "type": "string",
          "description": "Required. The full resource name to query from the list of testable permissions. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`."
        },
        "pageToken": {
          "description": "Optional pagination token returned in an earlier QueryTestablePermissionsRequest.",
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Optional limit on the number of permissions to include in the response. The default is 100, and the maximum is 1,000."
        }
      },
      "description": "A request to get permissions which can be tested on a resource.",
      "type": "object",
      "id": "QueryTestablePermissionsRequest"
    },
    "Permission": {
      "description": "A permission which can be included by a role.",
      "properties": {
        "onlyInPredefinedRoles": {
          "type": "boolean"
        },
        "customRolesSupportLevel": {
          "enumDescriptions": [
            "Default state. Permission is fully supported for custom role use.",
            "Permission is being tested to check custom role compatibility.",
            "Permission is not supported for custom role use."
          ],
          "description": "The current custom role support level.",
          "type": "string",
          "enum": [
            "SUPPORTED",
            "TESTING",
            "NOT_SUPPORTED"
          ]
        },
        "primaryPermission": {
          "description": "The preferred name for this permission. If present, then this permission is an alias of, and equivalent to, the listed primary_permission.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of this Permission."
        },
        "stage": {
          "description": "The current launch stage of the permission.",
          "type": "string",
          "enum": [
            "ALPHA",
            "BETA",
            "GA",
            "DEPRECATED"
          ],
          "enumDescriptions": [
            "The permission is currently in an alpha phase.",
            "The permission is currently in a beta phase.",
            "The permission is generally available.",
            "The permission is being deprecated."
          ]
        },
        "title": {
          "description": "The title of this Permission.",
          "type": "string"
        },
        "apiDisabled": {
          "description": "The service API associated with the permission is not enabled.",
          "type": "boolean"
        },
        "description": {
          "description": "A brief description of what this Permission is used for. This permission can ONLY be used in predefined roles.",
          "type": "string"
        }
      },
      "id": "Permission",
      "type": "object"
    },
    "PatchServiceAccountRequest": {
      "properties": {
        "serviceAccount": {
          "$ref": "ServiceAccount"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "type": "object",
      "description": "The request for PatchServiceAccount. You can patch only the `display_name` and `description` fields. You must use the `update_mask` field to specify which of these fields you want to patch. Only the fields specified in the request are guaranteed to be returned in the response. Other fields may be empty in the response.",
      "id": "PatchServiceAccountRequest"
    },
    "UndeleteRoleRequest": {
      "properties": {
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "Used to perform a consistent read-modify-write."
        }
      },
      "id": "UndeleteRoleRequest",
      "description": "The request to undelete an existing role.",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "ListWorkloadIdentityPoolsResponse": {
      "id": "ListWorkloadIdentityPoolsResponse",
      "description": "Response message for ListWorkloadIdentityPools.",
      "type": "object",
      "properties": {
        "workloadIdentityPools": {
          "description": "A list of pools.",
          "items": {
            "$ref": "WorkloadIdentityPool"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "QueryGrantableRolesRequest": {
      "id": "QueryGrantableRolesRequest",
      "type": "object",
      "description": "The grantable role query request.",
      "properties": {
        "pageSize": {
          "format": "int32",
          "type": "integer",
          "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000."
        },
        "fullResourceName": {
          "type": "string",
          "description": "Required. The full resource name to query from the list of grantable roles. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`."
        },
        "view": {
          "enumDescriptions": [
            "Omits the `included_permissions` field. This is the default value.",
            "Returns all fields."
          ],
          "enum": [
            "BASIC",
            "FULL"
          ],
          "type": "string"
        },
        "pageToken": {
          "type": "string",
          "description": "Optional pagination token returned in an earlier QueryGrantableRolesResponse."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "LintPolicyRequest": {
      "id": "LintPolicyRequest",
      "description": "The request to lint a Cloud IAM policy object.",
      "type": "object",
      "properties": {
        "fullResourceName": {
          "type": "string",
          "description": "The full resource name of the policy this lint request is about. The name follows the Google Cloud Platform (GCP) resource format. For example, a GCP project with ID `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`. The resource name is not used to read the policy instance from the Cloud IAM database. The candidate policy for lint has to be provided in the same request object."
        },
        "condition": {
          "$ref": "Expr",
          "description": "google.iam.v1.Binding.condition object to be linted."
        }
      }
    }
  },
  "baseUrl": "https://iam.googleapis.com/",
  "version_module": true,
  "description": "Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls. ",
  "revision": "20210722",
  "resources": {
    "organizations": {
      "resources": {
        "roles": {
          "methods": {
            "patch": {
              "id": "iam.organizations.roles.patch",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Role"
              },
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "A mask describing which fields in the Role have changed.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "pattern": "^organizations/[^/]+/roles/[^/]+$"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}",
              "httpMethod": "PATCH",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Role"
              },
              "description": "Updates the definition of a custom Role."
            },
            "delete": {
              "description": "Deletes a custom Role. When you delete a custom role, the following changes occur immediately: * You cannot bind a member to the custom role in an IAM Policy. * Existing bindings to the custom role are not changed, but they have no effect. * By default, the response from ListRoles does not include the custom role. You have 7 days to undelete the custom role. After 7 days, the following changes occur: * The custom role is permanently deleted and cannot be recovered. * If an IAM policy contains a binding to the custom role, the binding is permanently removed.",
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}",
              "response": {
                "$ref": "Role"
              },
              "path": "v1/{+name}",
              "parameters": {
                "etag": {
                  "format": "byte",
                  "location": "query",
                  "description": "Used to perform a consistent read-modify-write.",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "required": true,
                  "pattern": "^organizations/[^/]+/roles/[^/]+$",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "iam.organizations.roles.delete",
              "httpMethod": "DELETE"
            },
            "undelete": {
              "parameters": {
                "name": {
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/roles/[^/]+$",
                  "required": true
                }
              },
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Undeletes a custom Role.",
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}:undelete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "path": "v1/{+name}:undelete",
              "request": {
                "$ref": "UndeleteRoleRequest"
              },
              "id": "iam.organizations.roles.undelete"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Role"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+/roles/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`roles`](/iam/reference/rest/v1/roles), [`projects`](/iam/reference/rest/v1/projects.roles), or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`. This method returns results from all [predefined roles](/iam/docs/understanding-roles#predefined_roles) in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID."
                }
              },
              "httpMethod": "GET",
              "id": "iam.organizations.roles.get",
              "description": "Gets the definition of a Role.",
              "flatPath": "v1/organizations/{organizationsId}/roles/{rolesId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "path": "v1/{+parent}/roles",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Role"
              },
              "flatPath": "v1/organizations/{organizationsId}/roles",
              "request": {
                "$ref": "CreateRoleRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "The `parent` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create): `projects/{PROJECT_ID}`. This method creates project-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create): `organizations/{ORGANIZATION_ID}`. This method creates organization-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+$"
                }
              },
              "description": "Creates a new custom Role.",
              "id": "iam.organizations.roles.create"
            },
            "list": {
              "path": "v1/{+parent}/roles",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.",
              "response": {
                "$ref": "ListRolesResponse"
              },
              "parameters": {
                "parent": {
                  "description": "The `parent` parameter's value depends on the target resource for the request, namely [`roles`](/iam/reference/rest/v1/roles), [`projects`](/iam/reference/rest/v1/projects.roles), or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string. This method doesn't require a resource; it simply returns all [predefined roles](/iam/docs/understanding-roles#predefined_roles) in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list): `projects/{PROJECT_ID}`. This method lists all project-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list): `organizations/{ORGANIZATION_ID}`. This method lists all organization-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000."
                },
                "pageToken": {
                  "description": "Optional pagination token returned in an earlier ListRolesResponse.",
                  "type": "string",
                  "location": "query"
                },
                "showDeleted": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Include Roles that have been deleted."
                },
                "view": {
                  "description": "Optional view for the returned Role objects. When `FULL` is specified, the `includedPermissions` field is returned, which includes a list of all permissions in the role. The default value is `BASIC`, which does not return the `includedPermissions` field.",
                  "location": "query",
                  "enum": [
                    "BASIC",
                    "FULL"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "Omits the `included_permissions` field. This is the default value.",
                    "Returns all fields."
                  ]
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/roles",
              "id": "iam.organizations.roles.list",
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "permissions": {
      "methods": {
        "queryTestablePermissions": {
          "response": {
            "$ref": "QueryTestablePermissionsResponse"
          },
          "flatPath": "v1/permissions:queryTestablePermissions",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists every permission that you can test on a resource. A permission is testable if you can check whether a member has that permission on the resource.",
          "path": "v1/permissions:queryTestablePermissions",
          "id": "iam.permissions.queryTestablePermissions",
          "parameters": {},
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "QueryTestablePermissionsRequest"
          }
        }
      }
    },
    "projects": {
      "resources": {
        "serviceAccounts": {
          "resources": {
            "keys": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the service account key in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account."
                    }
                  },
                  "id": "iam.projects.serviceAccounts.keys.delete",
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a ServiceAccountKey. Deleting a service account key does not revoke short-lived credentials that have been issued based on the service account key.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "list": {
                  "id": "iam.projects.serviceAccounts.keys.list",
                  "path": "v1/{+name}/keys",
                  "response": {
                    "$ref": "ListServiceAccountKeysResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists every ServiceAccountKey for a service account.",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID`, will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                    },
                    "keyTypes": {
                      "description": "Filters the types of keys the user wants to include in the list response. Duplicate key types are not allowed. If no key type is provided, all keys are returned.",
                      "enum": [
                        "KEY_TYPE_UNSPECIFIED",
                        "USER_MANAGED",
                        "SYSTEM_MANAGED"
                      ],
                      "enumDescriptions": [
                        "Unspecified key type. The presence of this in the message will immediately result in an error.",
                        "User-managed keys (managed and rotated by the user).",
                        "System-managed keys (managed and rotated by Google)."
                      ],
                      "location": "query",
                      "repeated": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "upload": {
                  "httpMethod": "POST",
                  "path": "v1/{+name}/keys:upload",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys:upload",
                  "request": {
                    "$ref": "UploadServiceAccountKeyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Creates a ServiceAccountKey, using a public key that you provide.",
                  "id": "iam.projects.serviceAccounts.keys.upload",
                  "response": {
                    "$ref": "ServiceAccountKey"
                  }
                },
                "get": {
                  "description": "Gets a ServiceAccountKey.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}",
                  "response": {
                    "$ref": "ServiceAccountKey"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "publicKeyType": {
                      "description": "The output format of the public key requested. X509_PEM is the default output format.",
                      "enum": [
                        "TYPE_NONE",
                        "TYPE_X509_PEM_FILE",
                        "TYPE_RAW_PUBLIC_KEY"
                      ],
                      "enumDescriptions": [
                        "Unspecified. Returns nothing here.",
                        "X509 PEM format.",
                        "Raw public key."
                      ],
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+/keys/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the service account key in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account."
                    }
                  },
                  "id": "iam.projects.serviceAccounts.keys.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CreateServiceAccountKeyRequest"
                  },
                  "response": {
                    "$ref": "ServiceAccountKey"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                      "description": "Required. The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account."
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys",
                  "description": "Creates a ServiceAccountKey.",
                  "path": "v1/{+name}/keys",
                  "id": "iam.projects.serviceAccounts.keys.create"
                }
              }
            }
          },
          "methods": {
            "patch": {
              "description": "Patches a ServiceAccount.",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "PatchServiceAccountRequest"
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "id": "iam.projects.serviceAccounts.patch",
              "path": "v1/{+name}",
              "response": {
                "$ref": "ServiceAccount"
              }
            },
            "setIamPolicy": {
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "parameters": {
                "resource": {
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                }
              },
              "description": "Sets the IAM policy that is attached to a ServiceAccount. Use this method to grant or revoke access to the service account. For example, you could grant a member the ability to impersonate the service account. This method does not enable the service account to access other resources. To grant roles to a service account on a resource, follow these steps: 1. Call the resource's `getIamPolicy` method to get its current IAM policy. 2. Edit the policy so that it binds the service account to an IAM role for the resource. 3. Call the resource's `setIamPolicy` method to update its IAM policy. For detailed instructions, see [Granting roles to a service account for specific resources](https://cloud.google.com/iam/help/service-accounts/granting-access-to-service-accounts).",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+resource}:setIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "id": "iam.projects.serviceAccounts.setIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST"
            },
            "getIamPolicy": {
              "description": "Gets the IAM policy that is attached to a ServiceAccount. This IAM policy specifies which members have access to the service account. This method does not tell you whether the service account has been granted any roles on other resources. To check whether a service account has role grants on a resource, use the `getIamPolicy` method for that resource. For example, to view the role grants for a project, call the Resource Manager API's [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy) method.",
              "id": "iam.projects.serviceAccounts.getIamPolicy",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "resource"
              ],
              "path": "v1/{+resource}:getIamPolicy",
              "parameters": {
                "resource": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                },
                "options.requestedPolicyVersion": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                }
              },
              "response": {
                "$ref": "Policy"
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:getIamPolicy"
            },
            "update": {
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "ServiceAccount"
              },
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "**Note:** We are in the process of deprecating this method. Use PatchServiceAccount instead. Updates a ServiceAccount. You can update only the `display_name` and `description` fields.",
              "response": {
                "$ref": "ServiceAccount"
              },
              "id": "iam.projects.serviceAccounts.update",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The resource name of the service account. Use one of the following formats: * `projects/{PROJECT_ID}/serviceAccounts/{EMAIL_ADDRESS}` * `projects/{PROJECT_ID}/serviceAccounts/{UNIQUE_ID}` As an alternative, you can use the `-` wildcard character instead of the project ID: * `projects/-/serviceAccounts/{EMAIL_ADDRESS}` * `projects/-/serviceAccounts/{UNIQUE_ID}` When possible, avoid using the `-` wildcard character, because it can cause response messages to contain misleading error codes. For example, if you try to get the service account `projects/-/serviceAccounts/fake@example.com`, which does not exist, the response contains an HTTP `403 Forbidden` error instead of a `404 Not Found` error.",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                }
              }
            },
            "signJwt": {
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                  "required": true
                }
              },
              "request": {
                "$ref": "SignJwtRequest"
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signJwt",
              "response": {
                "$ref": "SignJwtResponse"
              },
              "path": "v1/{+name}:signJwt",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "**Note:** This method is deprecated. Use the [`signJwt`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signJwt) method in the IAM Service Account Credentials API instead. If you currently use this method, see the [migration guide](https://cloud.google.com/iam/help/credentials/migrate-api) for instructions. Signs a JSON Web Token (JWT) using the system-managed private key for a ServiceAccount.",
              "id": "iam.projects.serviceAccounts.signJwt"
            },
            "testIamPermissions": {
              "path": "v1/{+resource}:testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Tests whether the caller has the specified permissions on a ServiceAccount.",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "id": "iam.projects.serviceAccounts.testIamPermissions",
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:testIamPermissions",
              "parameterOrder": [
                "resource"
              ]
            },
            "disable": {
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Disables a ServiceAccount immediately. If an application uses the service account to authenticate, that application can no longer call Google APIs or access Google Cloud resources. Existing access tokens for the service account are rejected, and requests for new access tokens will fail. To re-enable the service account, use EnableServiceAccount. After you re-enable the service account, its existing access tokens will be accepted, and you can request new access tokens. To help avoid unplanned outages, we recommend that you disable the service account before you delete it. Use this method to disable the service account, then wait at least 24 hours and watch for unintended consequences. If there are no unintended consequences, you can delete the service account with DeleteServiceAccount.",
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:disable",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "DisableServiceAccountRequest"
              },
              "id": "iam.projects.serviceAccounts.disable",
              "path": "v1/{+name}:disable"
            },
            "undelete": {
              "path": "v1/{+name}:undelete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "UndeleteServiceAccountRequest"
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:undelete",
              "parameters": {
                "name": {
                  "description": "The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_UNIQUE_ID}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account.",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "iam.projects.serviceAccounts.undelete",
              "httpMethod": "POST",
              "response": {
                "$ref": "UndeleteServiceAccountResponse"
              },
              "description": "Restores a deleted ServiceAccount. **Important:** It is not always possible to restore a deleted service account. Use this method only as a last resort. After you delete a service account, IAM permanently removes the service account 30 days later. There is no way to restore a deleted service account that has been permanently removed."
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Optional limit on the number of service accounts to include in the response. Further accounts can subsequently be obtained by including the ListServiceAccountsResponse.next_page_token in a subsequent request. The default is 20, and the maximum is 100."
                },
                "name": {
                  "location": "path",
                  "description": "Required. The resource name of the project associated with the service accounts, such as `projects/my-project-123`.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional pagination token returned in an earlier ListServiceAccountsResponse.next_page_token."
                }
              },
              "id": "iam.projects.serviceAccounts.list",
              "path": "v1/{+name}/serviceAccounts",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListServiceAccountsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts",
              "description": "Lists every ServiceAccount that belongs to a specific project.",
              "httpMethod": "GET"
            },
            "delete": {
              "id": "iam.projects.serviceAccounts.delete",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "required": true,
                  "description": "Required. The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                  "type": "string"
                }
              },
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a ServiceAccount. **Warning:** After you delete a service account, you might not be able to undelete it. If you know that you need to re-enable the service account in the future, use DisableServiceAccount instead. If you delete a service account, IAM permanently removes the service account 30 days later. Google Cloud cannot recover the service account after it is permanently removed, even if you file a support request. To help avoid unplanned outages, we recommend that you disable the service account before you delete it. Use DisableServiceAccount to disable the service account, then wait at least 24 hours and watch for unintended consequences. If there are no unintended consequences, you can delete the service account.",
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "path": "v1/{+name}",
              "response": {
                "$ref": "Empty"
              }
            },
            "create": {
              "id": "iam.projects.serviceAccounts.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/serviceAccounts",
              "request": {
                "$ref": "CreateServiceAccountRequest"
              },
              "description": "Creates a ServiceAccount.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "Required. The resource name of the project associated with the service accounts, such as `projects/my-project-123`.",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "ServiceAccount"
              },
              "path": "v1/{+name}/serviceAccounts"
            },
            "signBlob": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "iam.projects.serviceAccounts.signBlob",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SignBlobRequest"
              },
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signBlob",
              "parameters": {
                "name": {
                  "description": "Required. Deprecated. [Migrate to Service Account Credentials API](https://cloud.google.com/iam/help/credentials/migrate-api). The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "SignBlobResponse"
              },
              "description": "**Note:** This method is deprecated. Use the [`signBlob`](https://cloud.google.com/iam/help/rest-credentials/v1/projects.serviceAccounts/signBlob) method in the IAM Service Account Credentials API instead. If you currently use this method, see the [migration guide](https://cloud.google.com/iam/help/credentials/migrate-api) for instructions. Signs a blob using the system-managed private key for a ServiceAccount.",
              "path": "v1/{+name}:signBlob"
            },
            "get": {
              "response": {
                "$ref": "ServiceAccount"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "iam.projects.serviceAccounts.get",
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
              "description": "Gets a ServiceAccount.",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "enable": {
              "request": {
                "$ref": "EnableServiceAccountRequest"
              },
              "description": "Enables a ServiceAccount that was disabled by DisableServiceAccount. If the service account is already enabled, then this method has no effect. If the service account was disabled by other means—for example, if Google disabled the service account because it was compromised—you cannot use this method to enable the service account.",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "The resource name of the service account in the following format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}`. Using `-` as a wildcard for the `PROJECT_ID` will infer the project from the account. The `ACCOUNT` value can be the `email` address or the `unique_id` of the service account.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/serviceAccounts/[^/]+$",
                  "required": true
                }
              },
              "path": "v1/{+name}:enable",
              "id": "iam.projects.serviceAccounts.enable",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:enable",
              "response": {
                "$ref": "Empty"
              }
            }
          }
        },
        "locations": {
          "resources": {
            "workloadIdentityPools": {
              "methods": {
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "id": "iam.projects.locations.workloadIdentityPools.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the pool to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}",
                  "path": "v1/{+name}",
                  "description": "Deletes a WorkloadIdentityPool. You cannot use a deleted pool to exchange external credentials for Google Cloud credentials. However, deletion does not revoke credentials that have already been issued. Credentials issued for a deleted pool do not grant access to resources. If the pool is undeleted, and the credentials are not expired, they grant access again. You can undelete a pool for 30 days. After 30 days, deletion is permanent. You cannot update deleted pools. However, you can view and list them."
                },
                "create": {
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource to create the pool in. The only supported location is `global`."
                    },
                    "workloadIdentityPoolId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID to use for the pool, which becomes the final component of the resource name. This value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools",
                  "path": "v1/{+parent}/workloadIdentityPools",
                  "id": "iam.projects.locations.workloadIdentityPools.create",
                  "request": {
                    "$ref": "WorkloadIdentityPool"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new WorkloadIdentityPool. You cannot reuse the name of a deleted pool until 30 days after deletion."
                },
                "get": {
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "description": "Gets an individual WorkloadIdentityPool.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "iam.projects.locations.workloadIdentityPools.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
                      "description": "Required. The name of the pool to retrieve.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "WorkloadIdentityPool"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}"
                },
                "list": {
                  "response": {
                    "$ref": "ListWorkloadIdentityPoolsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of pools to return. If unspecified, at most 50 pools are returned. The maximum value is 1000; values above are 1000 truncated to 1000.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource to list pools for.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A page token, received from a previous `ListWorkloadIdentityPools` call. Provide this to retrieve the subsequent page."
                    },
                    "showDeleted": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Whether to return soft-deleted pools."
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools",
                  "id": "iam.projects.locations.workloadIdentityPools.list",
                  "path": "v1/{+parent}/workloadIdentityPools",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all non-deleted WorkloadIdentityPools in a project. If `show_deleted` is set to `true`, then deleted pools are also listed.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "undelete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
                      "description": "Required. The name of the pool to undelete."
                    }
                  },
                  "request": {
                    "$ref": "UndeleteWorkloadIdentityPoolRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "iam.projects.locations.workloadIdentityPools.undelete",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:undelete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}:undelete",
                  "description": "Undeletes a WorkloadIdentityPool, as long as it was deleted fewer than 30 days ago."
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "Required. The list of fields update.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The resource name of the pool.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates an existing WorkloadIdentityPool.",
                  "id": "iam.projects.locations.workloadIdentityPools.patch",
                  "request": {
                    "$ref": "WorkloadIdentityPool"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              },
              "resources": {
                "operations": {
                  "methods": {
                    "get": {
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "The name of the operation resource.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/operations/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "iam.projects.locations.workloadIdentityPools.operations.get",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/operations/{operationsId}"
                    }
                  }
                },
                "providers": {
                  "resources": {
                    "operations": {
                      "methods": {
                        "get": {
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}/operations/{operationsId}",
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1/{+name}",
                          "httpMethod": "GET",
                          "id": "iam.projects.locations.workloadIdentityPools.providers.operations.get",
                          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "description": "The name of the operation resource.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+/operations/[^/]+$",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ]
                        }
                      }
                    }
                  },
                  "methods": {
                    "undelete": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "iam.projects.locations.workloadIdentityPools.providers.undelete",
                      "description": "Undeletes a WorkloadIdentityPoolProvider, as long as it was deleted fewer than 30 days ago.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "UndeleteWorkloadIdentityPoolProviderRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:undelete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}:undelete",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the provider to undelete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "iam.projects.locations.workloadIdentityPools.providers.list",
                      "response": {
                        "$ref": "ListWorkloadIdentityPoolProvidersResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/providers",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The pool to list providers for.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
                          "required": true,
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A page token, received from a previous `ListWorkloadIdentityPoolProviders` call. Provide this to retrieve the subsequent page.",
                          "location": "query"
                        },
                        "showDeleted": {
                          "type": "boolean",
                          "description": "Whether to return soft-deleted providers.",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "The maximum number of providers to return. If unspecified, at most 50 providers are returned. The maximum value is 100; values above 100 are truncated to 100.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers",
                      "description": "Lists all non-deleted WorkloadIdentityPoolProviders in a WorkloadIdentityPool. If `show_deleted` is set to `true`, then deleted providers are also listed."
                    },
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "WorkloadIdentityPoolProvider"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new WorkloadIdentityPoolProvider in a WorkloadIdentityPool. You cannot reuse the name of a deleted provider until 30 days after deletion.",
                      "path": "v1/{+parent}/providers",
                      "id": "iam.projects.locations.workloadIdentityPools.providers.create",
                      "parameters": {
                        "parent": {
                          "description": "Required. The pool to create this provider in.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "workloadIdentityPoolProviderId": {
                          "location": "query",
                          "description": "Required. The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix `gcp-` is reserved for use by Google, and may not be specified.",
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "id": "iam.projects.locations.workloadIdentityPools.providers.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Deletes a WorkloadIdentityPoolProvider. Deleting a provider does not revoke credentials that have already been issued; they continue to grant access. You can undelete a provider for 30 days. After 30 days, deletion is permanent. You cannot update deleted providers. However, you can view and list them.",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the provider to delete.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$"
                        }
                      },
                      "httpMethod": "DELETE"
                    },
                    "get": {
                      "id": "iam.projects.locations.workloadIdentityPools.providers.get",
                      "response": {
                        "$ref": "WorkloadIdentityPoolProvider"
                      },
                      "description": "Gets an individual WorkloadIdentityPoolProvider.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the provider to retrieve.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workloadIdentityPools/{workloadIdentityPoolsId}/providers/{providersId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "WorkloadIdentityPoolProvider"
                      },
                      "id": "iam.projects.locations.workloadIdentityPools.providers.patch",
                      "description": "Updates an existing WorkloadIdentityPoolProvider.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/workloadIdentityPools/[^/]+/providers/[^/]+$",
                          "description": "Output only. The resource name of the provider.",
                          "type": "string"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "Required. The list of fields to update.",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "roles": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListRolesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.",
              "id": "iam.projects.roles.list",
              "flatPath": "v1/projects/{projectsId}/roles",
              "path": "v1/{+parent}/roles",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000."
                },
                "pageToken": {
                  "description": "Optional pagination token returned in an earlier ListRolesResponse.",
                  "location": "query",
                  "type": "string"
                },
                "view": {
                  "description": "Optional view for the returned Role objects. When `FULL` is specified, the `includedPermissions` field is returned, which includes a list of all permissions in the role. The default value is `BASIC`, which does not return the `includedPermissions` field.",
                  "enumDescriptions": [
                    "Omits the `included_permissions` field. This is the default value.",
                    "Returns all fields."
                  ],
                  "enum": [
                    "BASIC",
                    "FULL"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The `parent` parameter's value depends on the target resource for the request, namely [`roles`](/iam/reference/rest/v1/roles), [`projects`](/iam/reference/rest/v1/projects.roles), or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string. This method doesn't require a resource; it simply returns all [predefined roles](/iam/docs/understanding-roles#predefined_roles) in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list): `projects/{PROJECT_ID}`. This method lists all project-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list): `organizations/{ORGANIZATION_ID}`. This method lists all organization-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "type": "string"
                },
                "showDeleted": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Include Roles that have been deleted."
                }
              },
              "httpMethod": "GET"
            },
            "get": {
              "id": "iam.projects.roles.get",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/roles/[^/]+$",
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`roles`](/iam/reference/rest/v1/roles), [`projects`](/iam/reference/rest/v1/projects.roles), or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`. This method returns results from all [predefined roles](/iam/docs/understanding-roles#predefined_roles) in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the definition of a Role.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Role"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}"
            },
            "patch": {
              "response": {
                "$ref": "Role"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "iam.projects.roles.patch",
              "request": {
                "$ref": "Role"
              },
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates the definition of a custom Role.",
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "description": "A mask describing which fields in the Role have changed.",
                  "format": "google-fieldmask"
                },
                "name": {
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`projects.roles.patch()`](/iam/reference/rest/v1/projects.roles/patch): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.patch()`](/iam/reference/rest/v1/organizations.roles/patch): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method updates only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "pattern": "^projects/[^/]+/roles/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}"
            },
            "undelete": {
              "request": {
                "$ref": "UndeleteRoleRequest"
              },
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}:undelete",
              "path": "v1/{+name}:undelete",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`projects.roles.undelete()`](/iam/reference/rest/v1/projects.roles/undelete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.undelete()`](/iam/reference/rest/v1/organizations.roles/undelete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method undeletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "pattern": "^projects/[^/]+/roles/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "id": "iam.projects.roles.undelete",
              "response": {
                "$ref": "Role"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Undeletes a custom Role.",
              "httpMethod": "POST"
            },
            "delete": {
              "id": "iam.projects.roles.delete",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/roles/[^/]+$",
                  "description": "The `name` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`projects.roles.delete()`](/iam/reference/rest/v1/projects.roles/delete): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.delete()`](/iam/reference/rest/v1/organizations.roles/delete): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method deletes only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "required": true
                },
                "etag": {
                  "location": "query",
                  "type": "string",
                  "description": "Used to perform a consistent read-modify-write.",
                  "format": "byte"
                }
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/roles/{rolesId}",
              "response": {
                "$ref": "Role"
              },
              "httpMethod": "DELETE",
              "description": "Deletes a custom Role. When you delete a custom role, the following changes occur immediately: * You cannot bind a member to the custom role in an IAM Policy. * Existing bindings to the custom role are not changed, but they have no effect. * By default, the response from ListRoles does not include the custom role. You have 7 days to undelete the custom role. After 7 days, the following changes occur: * The custom role is permanently deleted and cannot be recovered. * If an IAM policy contains a binding to the custom role, the binding is permanently removed."
            },
            "create": {
              "httpMethod": "POST",
              "path": "v1/{+parent}/roles",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "iam.projects.roles.create",
              "description": "Creates a new custom Role.",
              "parameters": {
                "parent": {
                  "description": "The `parent` parameter's value depends on the target resource for the request, namely [`projects`](/iam/reference/rest/v1/projects.roles) or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [`projects.roles.create()`](/iam/reference/rest/v1/projects.roles/create): `projects/{PROJECT_ID}`. This method creates project-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [`organizations.roles.create()`](/iam/reference/rest/v1/organizations.roles/create): `organizations/{ORGANIZATION_ID}`. This method creates organization-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Role"
              },
              "flatPath": "v1/projects/{projectsId}/roles",
              "request": {
                "$ref": "CreateRoleRequest"
              }
            }
          }
        }
      }
    },
    "roles": {
      "methods": {
        "queryGrantableRoles": {
          "request": {
            "$ref": "QueryGrantableRolesRequest"
          },
          "parameterOrder": [],
          "id": "iam.roles.queryGrantableRoles",
          "description": "Lists roles that can be granted on a Google Cloud resource. A role is grantable if the IAM policy for the resource can contain bindings to the role.",
          "response": {
            "$ref": "QueryGrantableRolesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "POST",
          "flatPath": "v1/roles:queryGrantableRoles",
          "path": "v1/roles:queryGrantableRoles",
          "parameters": {}
        },
        "get": {
          "id": "iam.roles.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "description": "Gets the definition of a Role.",
          "response": {
            "$ref": "Role"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/roles/{rolesId}",
          "path": "v1/{+name}",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^roles/[^/]+$",
              "required": true,
              "type": "string",
              "description": "The `name` parameter's value depends on the target resource for the request, namely [`roles`](/iam/reference/rest/v1/roles), [`projects`](/iam/reference/rest/v1/projects.roles), or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `name` value format is described below: * [`roles.get()`](/iam/reference/rest/v1/roles/get): `roles/{ROLE_NAME}`. This method returns results from all [predefined roles](/iam/docs/understanding-roles#predefined_roles) in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles/{ROLE_NAME}` * [`projects.roles.get()`](/iam/reference/rest/v1/projects.roles/get): `projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the project level. Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles/{CUSTOM_ROLE_ID}` * [`organizations.roles.get()`](/iam/reference/rest/v1/organizations.roles/get): `organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}`. This method returns only [custom roles](/iam/docs/understanding-custom-roles) that have been created at the organization level. Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles/{CUSTOM_ROLE_ID}` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID."
            }
          }
        },
        "list": {
          "description": "Lists every predefined Role that IAM supports, or every custom role that is defined for an organization or project.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "iam.roles.list",
          "httpMethod": "GET",
          "flatPath": "v1/roles",
          "path": "v1/roles",
          "response": {
            "$ref": "ListRolesResponse"
          },
          "parameters": {
            "pageSize": {
              "type": "integer",
              "description": "Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000.",
              "location": "query",
              "format": "int32"
            },
            "showDeleted": {
              "description": "Include Roles that have been deleted.",
              "location": "query",
              "type": "boolean"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "Optional pagination token returned in an earlier ListRolesResponse."
            },
            "parent": {
              "description": "The `parent` parameter's value depends on the target resource for the request, namely [`roles`](/iam/reference/rest/v1/roles), [`projects`](/iam/reference/rest/v1/projects.roles), or [`organizations`](/iam/reference/rest/v1/organizations.roles). Each resource type's `parent` value format is described below: * [`roles.list()`](/iam/reference/rest/v1/roles/list): An empty string. This method doesn't require a resource; it simply returns all [predefined roles](/iam/docs/understanding-roles#predefined_roles) in Cloud IAM. Example request URL: `https://iam.googleapis.com/v1/roles` * [`projects.roles.list()`](/iam/reference/rest/v1/projects.roles/list): `projects/{PROJECT_ID}`. This method lists all project-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/projects/{PROJECT_ID}/roles` * [`organizations.roles.list()`](/iam/reference/rest/v1/organizations.roles/list): `organizations/{ORGANIZATION_ID}`. This method lists all organization-level [custom roles](/iam/docs/understanding-custom-roles). Example request URL: `https://iam.googleapis.com/v1/organizations/{ORGANIZATION_ID}/roles` Note: Wildcard (*) values are invalid; you must specify a complete project ID or organization ID.",
              "location": "query",
              "type": "string"
            },
            "view": {
              "enumDescriptions": [
                "Omits the `included_permissions` field. This is the default value.",
                "Returns all fields."
              ],
              "type": "string",
              "description": "Optional view for the returned Role objects. When `FULL` is specified, the `includedPermissions` field is returned, which includes a list of all permissions in the role. The default value is `BASIC`, which does not return the `includedPermissions` field.",
              "enum": [
                "BASIC",
                "FULL"
              ],
              "location": "query"
            }
          },
          "parameterOrder": []
        }
      }
    },
    "iamPolicies": {
      "methods": {
        "queryAuditableServices": {
          "id": "iam.iamPolicies.queryAuditableServices",
          "httpMethod": "POST",
          "response": {
            "$ref": "QueryAuditableServicesResponse"
          },
          "path": "v1/iamPolicies:queryAuditableServices",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "QueryAuditableServicesRequest"
          },
          "parameters": {},
          "flatPath": "v1/iamPolicies:queryAuditableServices",
          "parameterOrder": [],
          "description": "Returns a list of services that allow you to opt into audit logs that are not generated by default. To learn more about audit logs, see the [Logging documentation](https://cloud.google.com/logging/docs/audit)."
        },
        "lintPolicy": {
          "flatPath": "v1/iamPolicies:lintPolicy",
          "id": "iam.iamPolicies.lintPolicy",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "POST",
          "parameters": {},
          "path": "v1/iamPolicies:lintPolicy",
          "parameterOrder": [],
          "description": "Lints, or validates, an IAM policy. Currently checks the google.iam.v1.Binding.condition field, which contains a condition expression for a role binding. Successful calls to this method always return an HTTP `200 OK` status code, even if the linter detects an issue in the IAM policy.",
          "response": {
            "$ref": "LintPolicyResponse"
          },
          "request": {
            "$ref": "LintPolicyRequest"
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://iam.mtls.googleapis.com/",
  "id": "iam:v1",
  "version": "v1",
  "kind": "discovery#restDescription",
  "documentationLink": "https://cloud.google.com/iam/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "name": "iam",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    }
  },
  "servicePath": "",
  "canonicalName": "Iam",
  "basePath": "",
  "protocol": "rest",
  "rootUrl": "https://iam.googleapis.com/"
}

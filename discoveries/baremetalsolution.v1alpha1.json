{
  "parameters": {
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "type": "string",
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "revision": "20210802",
  "version_module": true,
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "schemas": {
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "instances": {
          "description": "The Instances in this project.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        }
      },
      "description": "Response for ListInstances.",
      "type": "object"
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "properties": {
        "volumeSnapshots": {
          "type": "array",
          "description": "The VolumeSnapshots for the volume.",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "ListVolumeSnapshotsResponse",
      "description": "Response for ListVolumeSnapshots."
    },
    "Instance": {
      "id": "Instance",
      "description": "An Instance.",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this Instance.",
          "type": "string"
        },
        "sshEnabled": {
          "type": "boolean",
          "description": "Is SSH enabled for this instance?"
        },
        "scheduledPowerResetTime": {
          "format": "google-datetime",
          "description": "The scheduled power reset time.",
          "type": "string"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "description": "The Luns attached to this instance",
          "type": "array"
        },
        "state": {
          "description": "The state of this Instance.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The Instance has been reserved.",
            "The Instance is being provisioned.",
            "The Instance has been provisioned.",
            "The Instance is being deprovisioned.",
            "The Instance has been deprovisioned.",
            "The Instance is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ]
        },
        "hyperthreadingEnabled": {
          "description": "Is hyperthreading enabled for this instance?",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ResetInstanceResponse": {
      "type": "object",
      "description": "Response for ResetInstance.",
      "properties": {},
      "id": "ResetInstanceResponse"
    },
    "RestoreVolumeSnapshotRequest": {
      "id": "RestoreVolumeSnapshotRequest",
      "properties": {},
      "description": "Request for RestoreVolumeSnapshot.",
      "type": "object"
    },
    "ListLunsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "The Luns in this project."
        }
      },
      "description": "Response for ListLuns.",
      "id": "ListLunsResponse"
    },
    "Schedule": {
      "id": "Schedule",
      "type": "object",
      "description": "A snapshot schedule.",
      "properties": {
        "prefix": {
          "description": "A string to prefix names of snapshots created under this Schedule.",
          "type": "string"
        },
        "retentionCount": {
          "format": "int32",
          "description": "The maximum number of snapshots to retain under this Schedule.",
          "type": "integer"
        },
        "crontabSpec": {
          "type": "string",
          "description": "The crontab-like specification that this Schedule will use to take snapshots."
        }
      }
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object"
    },
    "ResetInstanceRequest": {
      "properties": {},
      "description": "Request for ResetInstance.",
      "type": "object",
      "id": "ResetInstanceRequest"
    },
    "LunRange": {
      "id": "LunRange",
      "type": "object",
      "properties": {
        "sizeGb": {
          "description": "The requested size of each LUN, in GB.",
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "type": "integer",
          "description": "Number of LUNs to create.",
          "format": "int32"
        }
      },
      "description": "A LUN range."
    },
    "EnableInteractiveSerialConsoleResponse": {
      "type": "object",
      "properties": {},
      "description": "Response for EnableInteractiveSerialConsole.",
      "id": "EnableInteractiveSerialConsoleResponse"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "description": "VolumeSnapshot registered for given Volume",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of this Snapshot.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The Snapshot is currently being created.",
            "The Snapshot has been created, and can be used to restore."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "description": "The state of this Snapshot."
        },
        "sizeBytes": {
          "description": "The real size of this Snapshot, in bytes.",
          "format": "int64",
          "type": "string"
        },
        "creationTime": {
          "description": "The creation time of this Snapshot.",
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "description": "The description of this Snapshot.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DisableInteractiveSerialConsoleResponse": {
      "description": "Response for DisableInteractiveSerialConsole.",
      "type": "object",
      "id": "DisableInteractiveSerialConsoleResponse",
      "properties": {}
    },
    "SerialPortOutput": {
      "description": "Response for ReadSerialPortOutput.",
      "id": "SerialPortOutput",
      "type": "object",
      "properties": {
        "start": {
          "description": "The start byte index of the included contents.",
          "format": "int64",
          "type": "string"
        },
        "contents": {
          "type": "string",
          "description": "The serial port output."
        },
        "nextStartByte": {
          "type": "string",
          "format": "int64",
          "description": "The byte index to use in a subsequent call to ReadSerialPortOutput to get more output."
        }
      }
    },
    "ListSSHKeysResponse": {
      "type": "object",
      "id": "ListSSHKeysResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "type": "array",
          "description": "The SSH keys registered in this project."
        }
      },
      "description": "Response for ListSSHKeys."
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "description": "Response for ListVolumes.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "The volumes registered in this project."
        }
      },
      "type": "object"
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "The requested size of this volume, in GB. This will be updated in a later iteration with a generic size field."
        },
        "machineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "type": {
          "type": "string",
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "protocol": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ]
        },
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array"
        },
        "location": {
          "description": "Location where to deploy the volume.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VolumeConfig"
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "id": "ListSnapshotSchedulePoliciesResponse",
      "properties": {
        "snapshotSchedulePolicies": {
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "type": "array",
          "description": "The snapshot schedule policies registered in this project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "Response for ListSnapshotSchedulePolicies.",
      "type": "object"
    },
    "SetVolumeSnapshotSchedulePolicyRequest": {
      "properties": {
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "Required. The name of the policy to set on the volume."
        }
      },
      "type": "object",
      "description": "Request for SetVolumeSnapshotSchedulePolicy.",
      "id": "SetVolumeSnapshotSchedulePolicyRequest"
    },
    "ListProvisioningQuotasResponse": {
      "type": "object",
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "provisioningQuotas": {
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project."
        }
      },
      "description": "Response for ListProvisioningQuotas."
    },
    "EnableInteractiveSerialConsoleRequest": {
      "properties": {},
      "id": "EnableInteractiveSerialConsoleRequest",
      "description": "Request for EnableInteractiveSerialConsole.",
      "type": "object"
    },
    "Lun": {
      "type": "object",
      "id": "Lun",
      "description": "A storage Lun.",
      "properties": {
        "wwid": {
          "type": "string",
          "description": "World Wide IDentifier of this Lun"
        },
        "isBoot": {
          "description": "Whether this Lun is a boot Lun.",
          "type": "boolean"
        },
        "serialNumber": {
          "type": "string",
          "description": "The serial number of this Lun"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this Lun.",
          "type": "string"
        },
        "shareable": {
          "description": "Whether this Lun is allowed to be shared between multiple physical servers.",
          "type": "boolean"
        },
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The size of this Lun, in gigabytes."
        },
        "remoteVolume": {
          "$ref": "Volume",
          "description": "The storage volume that this Lun is attached to."
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The Lun has been reserved.",
            "The Lun is being provisioned.",
            "The Lun has been provisioned.",
            "The Lun is being deprovisioned.",
            "The Lun has been deprovisioned.",
            "The Lun is being updated."
          ],
          "type": "string",
          "description": "The state of this Lun.",
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ]
        },
        "multiprotocolType": {
          "description": "The multiprotocol type of this Lun.",
          "type": "string"
        }
      }
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "type": "object",
      "description": "An provisioning configuration.",
      "properties": {
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array",
          "description": "Instances to be created."
        },
        "networks": {
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created.",
          "type": "array"
        },
        "ticketId": {
          "description": "A reference to track the request.",
          "type": "string"
        },
        "volumes": {
          "items": {
            "$ref": "VolumeConfig"
          },
          "type": "array",
          "description": "Volumes to be created."
        }
      }
    },
    "SetVolumeSnapshotSchedulePolicyResponse": {
      "properties": {},
      "type": "object",
      "id": "SetVolumeSnapshotSchedulePolicyResponse",
      "description": "Response for SetVolumeSnapshotSchedulePolicy."
    },
    "SSHKey": {
      "type": "object",
      "description": "A public SSH key registered in the project. Used primarily for the interactive serial console feature.",
      "id": "SSHKey",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "The public SSH key."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of this SSH key.",
          "readOnly": true
        }
      }
    },
    "DisableInteractiveSerialConsoleRequest": {
      "properties": {},
      "id": "DisableInteractiveSerialConsoleRequest",
      "description": "Request for DisableInteractiveSerialConsole.",
      "type": "object"
    },
    "NfsExport": {
      "properties": {
        "noRootSquash": {
          "description": "Disable root squashing.",
          "type": "boolean"
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "type": "string",
          "description": "Export permissions."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "machineId": {
          "description": "A single machine, identified by an ID.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev."
        }
      },
      "type": "object",
      "id": "NfsExport",
      "description": "A NFS export entry."
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "type": "object",
      "description": "Configuration parameters for a new network.",
      "properties": {
        "location": {
          "description": "Location where to deploy the network.",
          "type": "string"
        },
        "serviceCidr": {
          "description": "Service CIDR, if any.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ]
        },
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "type": "array"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617)."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "description": "The type of this network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        }
      }
    },
    "SubmitProvisioningConfigRequest": {
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to submit.",
          "$ref": "ProvisioningConfig"
        }
      },
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigRequest"
    },
    "Volume": {
      "id": "Volume",
      "description": "Volume registered in the project.",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ]
        },
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLE",
            "OLDEST",
            "NEWEST"
          ],
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "type": "string",
          "description": "The behavior to use when snapshot reserved space is full."
        },
        "requestedSizeGb": {
          "type": "string",
          "format": "int64",
          "description": "The requested size of this Volume, in GB."
        },
        "currentSizeGb": {
          "description": "The current size of this Volume, in GB, including space reserved for snapshots. This size may be different than the requested size if the Volume has been configured with auto grow or auto shrink.",
          "format": "int64",
          "type": "string"
        },
        "snapshotReservedSpaceRemainingGb": {
          "format": "int64",
          "type": "string",
          "description": "The amount, in GB, of space available in this Volume's reserved snapshot space."
        },
        "snapshotReservedSpacePercent": {
          "description": "The percent of space on this Volume reserved for snapshots.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "The state of this Volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "DEPROVISIONING_REQUESTED",
            "DEPROVISIONING_COOLOFF"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The Volume has been provisioned.",
            "The Volume has been requested to be deprovisioned.",
            "The Volume is in deprovisioning cooloff: a deprovisioning has been requested, but data has not yet been deleted."
          ]
        },
        "autoGrownSizeGb": {
          "type": "string",
          "description": "The size, in GB, that this Volume has expanded as a result of an auto grow policy.",
          "format": "int64"
        },
        "name": {
          "description": "Output only. The name of this Volume.",
          "type": "string",
          "readOnly": true
        },
        "snapshotReservedSpaceUsedPercent": {
          "type": "integer",
          "format": "int32",
          "description": "The percent of reserved snapshot space on this Volume that is actually used by snapshot copies. This may be higher than 100% if snapshot copies are occupying more space than has been reserved on the Volume."
        },
        "remainingSpaceGb": {
          "type": "string",
          "description": "The space remaining in the Volume for new LUNs, in GB, excluding space reserved for snapshots.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "osImage": {
          "description": "OS image to initialize the instance.",
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "location": {
          "description": "Location where to deploy the instance.",
          "type": "string"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProvisioningQuota": {
      "properties": {
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        }
      },
      "id": "ProvisioningQuota",
      "description": "A provisioning quota for a given project.",
      "type": "object"
    },
    "InstanceQuota": {
      "properties": {
        "availableMachineCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of machines than can be created for the given location and instance_type."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type."
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        }
      },
      "id": "InstanceQuota",
      "type": "object",
      "description": "A resource budget."
    },
    "NetworkAddress": {
      "type": "object",
      "id": "NetworkAddress",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        },
        "address": {
          "type": "string",
          "description": "IP address to be assigned to the server."
        }
      },
      "description": "A network."
    },
    "VlanAttachment": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        }
      },
      "id": "VlanAttachment",
      "description": "A GCP vlan attachment.",
      "type": "object"
    },
    "SnapshotSchedulePolicy": {
      "description": "A snapshot schedule policy.",
      "type": "object",
      "properties": {
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "Schedule"
          },
          "description": "The snapshot Schedules contained in this Policy. At most 5 Schedules may be specified."
        },
        "volumes": {
          "items": {
            "type": "string"
          },
          "description": "The names of the Volumes this policy is associated with.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "The description of this SnapshotSchedulePolicy."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this SnapshotSchedulePolicy.",
          "type": "string"
        }
      },
      "id": "SnapshotSchedulePolicy"
    }
  },
  "basePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "submitProvisioningConfig": {
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:submitProvisioningConfig",
              "response": {
                "$ref": "ProvisioningConfig"
              },
              "path": "v1alpha1/{+project}/{+location}:submitProvisioningConfig",
              "request": {
                "$ref": "SubmitProvisioningConfigRequest"
              },
              "parameterOrder": [
                "project",
                "location"
              ],
              "parameters": {
                "project": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The target project of the provisioning request."
                },
                "location": {
                  "description": "Required. The target location of the provisioning request.",
                  "pattern": "^locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "baremetalsolution.projects.locations.submitProvisioningConfig",
              "description": "Submit a provisiong configuration for a given project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST"
            }
          },
          "resources": {
            "instances": {
              "methods": {
                "enableInteractiveSerialConsole": {
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "parameters": {
                    "instance": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the instance to enable the interactive serial console feature on."
                    }
                  },
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "path": "v1alpha1/{+instance}:enableInteractiveSerialConsole",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "EnableInteractiveSerialConsoleResponse"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "description": "Enable the interactive serial console feature on a specific machine.",
                  "parameterOrder": [
                    "instance"
                  ]
                },
                "resetInstance": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:resetInstance",
                  "description": "Perform an ungraceful, hard reset on a machine (equivalent to physically turning power off and then back on).",
                  "response": {
                    "$ref": "ResetInstanceResponse"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "path": "v1alpha1/{+instance}:resetInstance",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.resetInstance",
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the instance to reset."
                    }
                  },
                  "httpMethod": "POST"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List Instances (physical servers).",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The location to list Instances in.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+parent}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances"
                },
                "disableInteractiveSerialConsole": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "description": "Disable the interactive serial console feature on a specific machine.",
                  "response": {
                    "$ref": "DisableInteractiveSerialConsoleResponse"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "description": "Required. Name of the instance to disable the interactive serial console feature on.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+instance}:disableInteractiveSerialConsole"
                },
                "get": {
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. The name of the Instance to retrieve.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "description": "Get details for a specific named Instance."
                },
                "readSerialPortOutput": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Read the most recent serial port output from a machine.",
                  "path": "v1alpha1/{+instance}:readSerialPortOutput",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:readSerialPortOutput",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SerialPortOutput"
                  },
                  "parameters": {
                    "startByte": {
                      "format": "int64",
                      "description": "Optional. The start byte of the serial port output to return.",
                      "type": "string",
                      "location": "query"
                    },
                    "instance": {
                      "description": "Required. Name of the instance to get serial port output of.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.readSerialPortOutput"
                }
              }
            },
            "volumes": {
              "resources": {
                "snapshots": {
                  "methods": {
                    "delete": {
                      "path": "v1alpha1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the snapshot to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "description": "Delete specific named snapshot.",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "path": "v1alpha1/{+name}",
                      "description": "Get details for a specific named snapshot.",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the snapshot to retrieve.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      }
                    },
                    "create": {
                      "path": "v1alpha1/{+parent}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "type": "string"
                        }
                      },
                      "description": "Create snapshot of the specified Volume",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create"
                    },
                    "restore": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restore",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "description": "Restore a VolumeSnapshot.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the VolumeSnapshot to restore.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "path": "v1alpha1/{+name}:restore",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restore",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List the Snapshots for the specified Volume",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from a previous List request, if any."
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "location": "path"
                        },
                        "pageSize": {
                          "description": "The maximum number of items to return.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "path": "v1alpha1/{+parent}/snapshots",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "setVolumeSnapshotSchedulePolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyResponse"
                  },
                  "path": "v1alpha1/{+volume}:setVolumeSnapshotSchedulePolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:setVolumeSnapshotSchedulePolicy",
                  "description": "Sets the specified snapshot schedule policy on the specified volume.",
                  "id": "baremetalsolution.projects.locations.volumes.setVolumeSnapshotSchedulePolicy",
                  "parameterOrder": [
                    "volume"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "volume": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the volume to set snapshot schedule policy on."
                    }
                  },
                  "request": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyRequest"
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the Volume to retrieve.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details for a specific named Volume.",
                  "response": {
                    "$ref": "Volume"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "description": "List the volumes for the specified project",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The location to list Volumes in.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes",
                  "path": "v1alpha1/{+parent}/volumes"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of this Volume.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported field is `snapshot_auto_delete_behavior`.",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "description": "Update certain parameters on a Volume.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.volumes.patch"
                }
              }
            },
            "luns": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.luns.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List Luns.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The location to list Luns in."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListLunsResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns",
                  "path": "v1alpha1/{+parent}/luns"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns/{lunsId}",
                  "id": "baremetalsolution.projects.locations.luns.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+name}",
                  "description": "Get details for a specific named Lun.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/luns/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the Lun to retrieve."
                    }
                  },
                  "response": {
                    "$ref": "Lun"
                  }
                }
              }
            }
          }
        },
        "sshKeys": {
          "methods": {
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "description": "Create a new SSH key registration in the specified project.",
              "parameters": {
                "sshKeyId": {
                  "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value should be match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "Required. The parent project containing the SSH keys.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              },
              "request": {
                "$ref": "SSHKey"
              },
              "response": {
                "$ref": "SSHKey"
              },
              "id": "baremetalsolution.projects.sshKeys.create",
              "path": "v1alpha1/{+parent}/sshKeys",
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys"
            },
            "delete": {
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the SSH key to delete.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/sshKeys/[^/]+$"
                }
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys/{sshKeysId}",
              "id": "baremetalsolution.projects.sshKeys.delete",
              "description": "Delete an SSH key registration in the specified project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}"
            },
            "list": {
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys",
              "response": {
                "$ref": "ListSSHKeysResponse"
              },
              "description": "List the public SSH keys registered for the specified project.",
              "id": "baremetalsolution.projects.sshKeys.list",
              "path": "v1alpha1/{+parent}/sshKeys",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent project containing the SSH keys."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of items to return."
                }
              }
            }
          }
        },
        "provisioningQuotas": {
          "methods": {
            "list": {
              "path": "v1alpha1/{+parent}/provisioningQuotas",
              "response": {
                "$ref": "ListProvisioningQuotasResponse"
              },
              "description": "List the budget details to provision resources on a given project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.provisioningQuotas.list",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/provisioningQuotas",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The parent project containing the provisioning quotas.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of items to return.",
                  "format": "int32"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The next_page_token value returned from a previous List request, if any."
                }
              }
            }
          }
        },
        "snapshotSchedulePolicies": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.list",
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies",
              "response": {
                "$ref": "ListSnapshotSchedulePoliciesResponse"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of items to return."
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "List the snapshot schedule policies for the specified project",
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies"
            },
            "patch": {
              "description": "Update a SnapshotSchedulePolicy.",
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Output only. The name of this SnapshotSchedulePolicy.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "The list of fields to update.",
                  "format": "google-fieldmask"
                }
              },
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.patch"
            },
            "create": {
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent project containing the SnapshotSchedulePolicy.",
                  "location": "path",
                  "required": true
                },
                "snapshotSchedulePolicyId": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. Snapshot policy ID"
                }
              },
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.create",
              "description": "Create a SnapshotSchedulePolicy."
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the snapshot to delete."
                }
              },
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Delete removes named snapshot schedule policy",
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}"
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the policy to retrieve.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.get",
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "description": "Get details for a specific snapshot schedule policy",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}"
            }
          }
        }
      }
    }
  },
  "id": "baremetalsolution:v1alpha1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "title": "Bare Metal Solution API",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "version": "v1alpha1",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "name": "baremetalsolution"
}

{
  "name": "baremetalsolution",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query",
      "default": "true"
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "id": "baremetalsolution:v1alpha1",
  "discoveryVersion": "v1",
  "revision": "20210825",
  "basePath": "",
  "version_module": true,
  "kind": "discovery#restDescription",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "version": "v1alpha1",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "snapshotSchedulePolicies": {
          "methods": {
            "patch": {
              "path": "v1alpha1/{+name}",
              "description": "Update a SnapshotSchedulePolicy.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "The list of fields to update.",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "type": "string",
                  "description": "Output only. The name of this SnapshotSchedulePolicy.",
                  "required": true
                }
              },
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "httpMethod": "PATCH",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.patch",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}"
            },
            "get": {
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "description": "Required. The name of the policy to retrieve.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "description": "Get details for a specific snapshot schedule policy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.get",
              "path": "v1alpha1/{+name}"
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "description": "Delete removes named snapshot schedule policy",
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.delete",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the snapshot to delete.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "required": true
                }
              }
            },
            "create": {
              "parameters": {
                "parent": {
                  "description": "Required. The parent project containing the SnapshotSchedulePolicy.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "snapshotSchedulePolicyId": {
                  "location": "query",
                  "description": "Required. Snapshot policy ID",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies",
              "httpMethod": "POST",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.create",
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies",
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Create a SnapshotSchedulePolicy."
            },
            "list": {
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListSnapshotSchedulePoliciesResponse"
              },
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.list",
              "httpMethod": "GET",
              "description": "List the snapshot schedule policies for the specified project",
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of items to return.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                  "required": true
                },
                "pageToken": {
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies",
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "provisioningQuotas": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "flatPath": "v1alpha1/projects/{projectsId}/provisioningQuotas",
              "path": "v1alpha1/{+parent}/provisioningQuotas",
              "description": "List the budget details to provision resources on a given project.",
              "id": "baremetalsolution.projects.provisioningQuotas.list",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListProvisioningQuotasResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The parent project containing the provisioning quotas."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of items to return.",
                  "location": "query"
                }
              }
            }
          }
        },
        "locations": {
          "resources": {
            "luns": {
              "methods": {
                "get": {
                  "id": "baremetalsolution.projects.locations.luns.get",
                  "response": {
                    "$ref": "Lun"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns/{lunsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/luns/[^/]+$",
                      "description": "Required. The name of the Lun to retrieve.",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "description": "Get details for a specific named Lun."
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns",
                  "id": "baremetalsolution.projects.locations.luns.list",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/luns",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List Luns.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The location to list Luns in.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "ListLunsResponse"
                  }
                }
              }
            },
            "volumes": {
              "resources": {
                "snapshots": {
                  "methods": {
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "description": "Create snapshot of the specified Volume",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "httpMethod": "POST",
                      "path": "v1alpha1/{+parent}/snapshots"
                    },
                    "get": {
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Get details for a specific named snapshot.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot to retrieve.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string"
                        }
                      }
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "httpMethod": "GET",
                      "path": "v1alpha1/{+parent}/snapshots",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "description": "List the Snapshots for the specified Volume",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous List request, if any.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of items to return.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "description": "Delete specific named snapshot.",
                      "path": "v1alpha1/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "restore": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restore",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restore",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "description": "Required. Name of the VolumeSnapshot to restore.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1alpha1/{+name}:restore",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "description": "Restore a VolumeSnapshot."
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/volumes",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return."
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The location to list Volumes in.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "description": "List the volumes for the specified project"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of this Volume.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported field is `snapshot_auto_delete_behavior`.",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "Volume"
                  },
                  "request": {
                    "$ref": "Volume"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Update certain parameters on a Volume.",
                  "path": "v1alpha1/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.patch"
                },
                "get": {
                  "description": "Get details for a specific named Volume.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. The name of the Volume to retrieve.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}"
                },
                "setVolumeSnapshotSchedulePolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.setVolumeSnapshotSchedulePolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:setVolumeSnapshotSchedulePolicy",
                  "description": "Sets the specified snapshot schedule policy on the specified volume.",
                  "parameterOrder": [
                    "volume"
                  ],
                  "response": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyResponse"
                  },
                  "path": "v1alpha1/{+volume}:setVolumeSnapshotSchedulePolicy",
                  "parameters": {
                    "volume": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the volume to set snapshot schedule policy on."
                    }
                  },
                  "request": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyRequest"
                  },
                  "httpMethod": "POST"
                }
              }
            },
            "instances": {
              "methods": {
                "readSerialPortOutput": {
                  "parameters": {
                    "instance": {
                      "type": "string",
                      "description": "Required. Name of the instance to get serial port output of.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    },
                    "startByte": {
                      "format": "int64",
                      "location": "query",
                      "description": "Optional. The start byte of the serial port output to return.",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.readSerialPortOutput",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:readSerialPortOutput",
                  "path": "v1alpha1/{+instance}:readSerialPortOutput",
                  "description": "Read the most recent serial port output from a machine.",
                  "response": {
                    "$ref": "SerialPortOutput"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "resetInstance": {
                  "description": "Perform an ungraceful, hard reset on a machine (equivalent to physically turning power off and then back on).",
                  "id": "baremetalsolution.projects.locations.instances.resetInstance",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:resetInstance",
                  "parameterOrder": [
                    "instance"
                  ],
                  "response": {
                    "$ref": "ResetInstanceResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance to reset.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+instance}:resetInstance",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  }
                },
                "disableInteractiveSerialConsole": {
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "DisableInteractiveSerialConsoleResponse"
                  },
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance to disable the interactive serial console feature on.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+instance}:disableInteractiveSerialConsole",
                  "description": "Disable the interactive serial console feature on a specific machine.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The location to list Instances in.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return."
                    }
                  },
                  "description": "List Instances (physical servers).",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "path": "v1alpha1/{+parent}/instances",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "enableInteractiveSerialConsole": {
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "response": {
                    "$ref": "EnableInteractiveSerialConsoleResponse"
                  },
                  "path": "v1alpha1/{+instance}:enableInteractiveSerialConsole",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "parameters": {
                    "instance": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the instance to enable the interactive serial console feature on."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Enable the interactive serial console feature on a specific machine.",
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "parameterOrder": [
                    "instance"
                  ]
                },
                "get": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details for a specific named Instance.",
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. The name of the Instance to retrieve."
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "submitProvisioningConfig": {
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:submitProvisioningConfig",
              "httpMethod": "POST",
              "description": "Submit a provisiong configuration for a given project.",
              "path": "v1alpha1/{+project}/{+location}:submitProvisioningConfig",
              "request": {
                "$ref": "SubmitProvisioningConfigRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "project": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The target project of the provisioning request.",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "location": {
                  "description": "Required. The target location of the provisioning request.",
                  "pattern": "^locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "project",
                "location"
              ],
              "response": {
                "$ref": "ProvisioningConfig"
              },
              "id": "baremetalsolution.projects.locations.submitProvisioningConfig"
            }
          }
        },
        "sshKeys": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys",
              "parameters": {
                "parent": {
                  "description": "Required. The parent project containing the SSH keys.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of items to return."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "ListSSHKeysResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "baremetalsolution.projects.sshKeys.list",
              "httpMethod": "GET",
              "description": "List the public SSH keys registered for the specified project.",
              "path": "v1alpha1/{+parent}/sshKeys"
            },
            "create": {
              "request": {
                "$ref": "SSHKey"
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SSHKey"
              },
              "description": "Create a new SSH key registration in the specified project.",
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The parent project containing the SSH keys.",
                  "pattern": "^projects/[^/]+$"
                },
                "sshKeyId": {
                  "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value should be match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "v1alpha1/{+parent}/sshKeys",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys",
              "httpMethod": "POST",
              "id": "baremetalsolution.projects.sshKeys.create"
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys/{sshKeysId}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The name of the SSH key to delete.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/sshKeys/[^/]+$"
                }
              },
              "id": "baremetalsolution.projects.sshKeys.delete",
              "path": "v1alpha1/{+name}",
              "description": "Delete an SSH key registration in the specified project."
            }
          }
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerName": "Google",
  "title": "Bare Metal Solution API",
  "schemas": {
    "ProvisioningQuota": {
      "type": "object",
      "description": "A provisioning quota for a given project.",
      "id": "ProvisioningQuota",
      "properties": {
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        }
      }
    },
    "DisableInteractiveSerialConsoleResponse": {
      "properties": {},
      "type": "object",
      "description": "Response for DisableInteractiveSerialConsole.",
      "id": "DisableInteractiveSerialConsoleResponse"
    },
    "LunRange": {
      "description": "A LUN range.",
      "id": "LunRange",
      "properties": {
        "sizeGb": {
          "description": "The requested size of each LUN, in GB.",
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "description": "Number of LUNs to create."
        }
      },
      "type": "object"
    },
    "Volume": {
      "properties": {
        "currentSizeGb": {
          "format": "int64",
          "description": "The current size of this Volume, in GB, including space reserved for snapshots. This size may be different than the requested size if the Volume has been configured with auto grow or auto shrink.",
          "type": "string"
        },
        "snapshotReservedSpacePercent": {
          "format": "int32",
          "type": "integer",
          "description": "The percent of space on this Volume reserved for snapshots."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "DEPROVISIONING_REQUESTED",
            "DEPROVISIONING_COOLOFF"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The Volume has been provisioned.",
            "The Volume has been requested to be deprovisioned.",
            "The Volume is in deprovisioning cooloff: a deprovisioning has been requested, but data has not yet been deleted."
          ],
          "description": "The state of this Volume.",
          "type": "string"
        },
        "requestedSizeGb": {
          "type": "string",
          "format": "int64",
          "description": "The requested size of this Volume, in GB."
        },
        "snapshotReservedSpaceUsedPercent": {
          "type": "integer",
          "format": "int32",
          "description": "The percent of reserved snapshot space on this Volume that is actually used by snapshot copies. This may be higher than 100% if snapshot copies are occupying more space than has been reserved on the Volume."
        },
        "snapshotAutoDeleteBehavior": {
          "description": "The behavior to use when snapshot reserved space is full.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLE",
            "OLDEST",
            "NEWEST"
          ]
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of this Volume."
        },
        "remainingSpaceGb": {
          "type": "string",
          "format": "int64",
          "description": "The space remaining in the Volume for new LUNs, in GB, excluding space reserved for snapshots."
        },
        "autoGrownSizeGb": {
          "type": "string",
          "description": "The size, in GB, that this Volume has expanded as a result of an auto grow policy.",
          "format": "int64"
        },
        "snapshotReservedSpaceRemainingGb": {
          "type": "string",
          "format": "int64",
          "description": "The amount, in GB, of space available in this Volume's reserved snapshot space."
        }
      },
      "description": "Volume registered in the project.",
      "id": "Volume",
      "type": "object"
    },
    "EnableInteractiveSerialConsoleResponse": {
      "type": "object",
      "properties": {},
      "description": "Response for EnableInteractiveSerialConsole.",
      "id": "EnableInteractiveSerialConsoleResponse"
    },
    "VlanAttachment": {
      "description": "A GCP vlan attachment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      },
      "type": "object",
      "id": "VlanAttachment"
    },
    "ResetInstanceResponse": {
      "type": "object",
      "properties": {},
      "id": "ResetInstanceResponse",
      "description": "Response for ResetInstance."
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "id": "ListSnapshotSchedulePoliciesResponse",
      "properties": {
        "snapshotSchedulePolicies": {
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "description": "The snapshot schedule policies registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "Response for ListSnapshotSchedulePolicies.",
      "type": "object"
    },
    "Instance": {
      "properties": {
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "Is hyperthreading enabled for this instance?"
        },
        "sshEnabled": {
          "description": "Is SSH enabled for this instance?",
          "type": "boolean"
        },
        "scheduledPowerResetTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The scheduled power reset time."
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The Instance has been reserved.",
            "The Instance is being provisioned.",
            "The Instance has been provisioned.",
            "The Instance is being deprovisioned.",
            "The Instance has been deprovisioned.",
            "The Instance is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ],
          "type": "string",
          "description": "The state of this Instance."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this Instance.",
          "type": "string"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "The Luns attached to this instance"
        }
      },
      "id": "Instance",
      "description": "An Instance.",
      "type": "object"
    },
    "Lun": {
      "id": "Lun",
      "description": "A storage Lun.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The Lun has been reserved.",
            "The Lun is being provisioned.",
            "The Lun has been provisioned.",
            "The Lun is being deprovisioned.",
            "The Lun has been deprovisioned.",
            "The Lun is being updated."
          ],
          "type": "string",
          "description": "The state of this Lun."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of this Lun.",
          "readOnly": true
        },
        "remoteVolume": {
          "$ref": "Volume",
          "description": "The storage volume that this Lun is attached to."
        },
        "isBoot": {
          "type": "boolean",
          "description": "Whether this Lun is a boot Lun."
        },
        "sizeGb": {
          "format": "int64",
          "description": "The size of this Lun, in gigabytes.",
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number of this Lun",
          "type": "string"
        },
        "multiprotocolType": {
          "description": "The multiprotocol type of this Lun.",
          "type": "string"
        },
        "shareable": {
          "description": "Whether this Lun is allowed to be shared between multiple physical servers.",
          "type": "boolean"
        },
        "wwid": {
          "description": "World Wide IDentifier of this Lun",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListInstancesResponse": {
      "description": "Response for ListInstances.",
      "id": "ListInstancesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "instances": {
          "type": "array",
          "description": "The Instances in this project.",
          "items": {
            "$ref": "Instance"
          }
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "ListSSHKeysResponse": {
      "type": "object",
      "description": "Response for ListSSHKeys.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "description": "The SSH keys registered in this project.",
          "type": "array"
        }
      },
      "id": "ListSSHKeysResponse"
    },
    "NfsExport": {
      "description": "A NFS export entry.",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "noRootSquash": {
          "description": "Disable root squashing.",
          "type": "boolean"
        },
        "permissions": {
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "type": "string",
          "description": "Export permissions."
        },
        "allowDev": {
          "description": "Allow dev.",
          "type": "boolean"
        },
        "machineId": {
          "description": "A single machine, identified by an ID.",
          "type": "string"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        }
      },
      "type": "object",
      "id": "NfsExport"
    },
    "ListVolumesResponse": {
      "type": "object",
      "description": "Response for ListVolumes.",
      "id": "ListVolumesResponse",
      "properties": {
        "volumes": {
          "description": "The volumes registered in this project.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "SnapshotSchedulePolicy": {
      "properties": {
        "schedules": {
          "items": {
            "$ref": "Schedule"
          },
          "type": "array",
          "description": "The snapshot Schedules contained in this Policy. At most 5 Schedules may be specified."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of this SnapshotSchedulePolicy."
        },
        "description": {
          "description": "The description of this SnapshotSchedulePolicy.",
          "type": "string"
        },
        "volumes": {
          "items": {
            "type": "string"
          },
          "description": "The names of the Volumes this policy is associated with.",
          "type": "array"
        }
      },
      "description": "A snapshot schedule policy.",
      "type": "object",
      "id": "SnapshotSchedulePolicy"
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "id": "SubmitProvisioningConfigRequest",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to submit."
        }
      },
      "type": "object"
    },
    "VolumeConfig": {
      "id": "VolumeConfig",
      "type": "object",
      "properties": {
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "$ref": "LunRange"
          }
        },
        "location": {
          "description": "Location where to deploy the volume.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "type": "string"
        },
        "machineIds": {
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          }
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617)."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The requested size of this volume, in GB. This will be updated in a later iteration with a generic size field.",
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string"
        },
        "nfsExports": {
          "type": "array",
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          }
        }
      },
      "description": "Configuration parameters for a new volume."
    },
    "ResetInstanceRequest": {
      "properties": {},
      "type": "object",
      "id": "ResetInstanceRequest",
      "description": "Request for ResetInstance."
    },
    "ListLunsResponse": {
      "type": "object",
      "id": "ListLunsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "The Luns in this project."
        }
      },
      "description": "Response for ListLuns."
    },
    "ProvisioningConfig": {
      "type": "object",
      "description": "An provisioning configuration.",
      "properties": {
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "InstanceConfig"
          },
          "description": "Instances to be created."
        },
        "ticketId": {
          "type": "string",
          "description": "A reference to track the request."
        },
        "networks": {
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created.",
          "type": "array"
        }
      },
      "id": "ProvisioningConfig"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "type": "object",
      "id": "DisableInteractiveSerialConsoleRequest",
      "description": "Request for DisableInteractiveSerialConsole.",
      "properties": {}
    },
    "SetVolumeSnapshotSchedulePolicyRequest": {
      "description": "Request for SetVolumeSnapshotSchedulePolicy.",
      "type": "object",
      "properties": {
        "snapshotSchedulePolicy": {
          "description": "Required. The name of the policy to set on the volume.",
          "type": "string"
        }
      },
      "id": "SetVolumeSnapshotSchedulePolicyRequest"
    },
    "VolumeSnapshot": {
      "properties": {
        "name": {
          "description": "Output only. The name of this Snapshot.",
          "type": "string",
          "readOnly": true
        },
        "sizeBytes": {
          "description": "The real size of this Snapshot, in bytes.",
          "format": "int64",
          "type": "string"
        },
        "creationTime": {
          "format": "google-datetime",
          "description": "The creation time of this Snapshot.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The Snapshot is currently being created.",
            "The Snapshot has been created, and can be used to restore."
          ],
          "description": "The state of this Snapshot.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of this Snapshot."
        }
      },
      "id": "VolumeSnapshot",
      "description": "VolumeSnapshot registered for given Volume",
      "type": "object"
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "clientNetwork": {
          "description": "Client network address.",
          "$ref": "NetworkAddress"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type."
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the instance."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any."
        },
        "osImage": {
          "description": "OS image to initialize the instance.",
          "type": "string"
        }
      },
      "id": "InstanceConfig",
      "type": "object"
    },
    "ListVolumeSnapshotsResponse": {
      "properties": {
        "volumeSnapshots": {
          "description": "The VolumeSnapshots for the volume.",
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "ListVolumeSnapshotsResponse",
      "type": "object",
      "description": "Response for ListVolumeSnapshots."
    },
    "Schedule": {
      "type": "object",
      "description": "A snapshot schedule.",
      "properties": {
        "retentionCount": {
          "type": "integer",
          "description": "The maximum number of snapshots to retain under this Schedule.",
          "format": "int32"
        },
        "prefix": {
          "type": "string",
          "description": "A string to prefix names of snapshots created under this Schedule."
        },
        "crontabSpec": {
          "description": "The crontab-like specification that this Schedule will use to take snapshots.",
          "type": "string"
        }
      },
      "id": "Schedule"
    },
    "InstanceQuota": {
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Instance type."
        },
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource budget.",
      "id": "InstanceQuota"
    },
    "SerialPortOutput": {
      "properties": {
        "nextStartByte": {
          "format": "int64",
          "type": "string",
          "description": "The byte index to use in a subsequent call to ReadSerialPortOutput to get more output."
        },
        "contents": {
          "description": "The serial port output.",
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "int64",
          "description": "The start byte index of the included contents."
        }
      },
      "type": "object",
      "description": "Response for ReadSerialPortOutput.",
      "id": "SerialPortOutput"
    },
    "NetworkAddress": {
      "properties": {
        "address": {
          "description": "IP address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        }
      },
      "description": "A network.",
      "type": "object",
      "id": "NetworkAddress"
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string",
          "description": "Service CIDR, if any."
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the network."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "description": "The type of this network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "bandwidth": {
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        }
      },
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network."
    },
    "RestoreVolumeSnapshotRequest": {
      "description": "Request for RestoreVolumeSnapshot.",
      "type": "object",
      "id": "RestoreVolumeSnapshotRequest",
      "properties": {}
    },
    "SSHKey": {
      "id": "SSHKey",
      "description": "A public SSH key registered in the project. Used primarily for the interactive serial console feature.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of this SSH key.",
          "readOnly": true
        },
        "publicKey": {
          "type": "string",
          "description": "The public SSH key."
        }
      }
    },
    "ListProvisioningQuotasResponse": {
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "Response for ListProvisioningQuotas.",
      "id": "ListProvisioningQuotasResponse",
      "type": "object"
    },
    "SetVolumeSnapshotSchedulePolicyResponse": {
      "id": "SetVolumeSnapshotSchedulePolicyResponse",
      "description": "Response for SetVolumeSnapshotSchedulePolicy.",
      "properties": {},
      "type": "object"
    },
    "EnableInteractiveSerialConsoleRequest": {
      "description": "Request for EnableInteractiveSerialConsole.",
      "type": "object",
      "id": "EnableInteractiveSerialConsoleRequest",
      "properties": {}
    }
  },
  "batchPath": "batch"
}

{
  "resources": {
    "projects": {
      "resources": {
        "provisioningQuotas": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListProvisioningQuotasResponse"
              },
              "id": "baremetalsolution.projects.provisioningQuotas.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The parent project containing the provisioning quotas.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any."
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of items to return.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/provisioningQuotas",
              "path": "v1alpha1/{+parent}/provisioningQuotas",
              "description": "List the budget details to provision resources on a given project.",
              "httpMethod": "GET"
            }
          }
        },
        "sshKeys": {
          "methods": {
            "create": {
              "httpMethod": "POST",
              "id": "baremetalsolution.projects.sshKeys.create",
              "path": "v1alpha1/{+parent}/sshKeys",
              "request": {
                "$ref": "SSHKey"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys",
              "response": {
                "$ref": "SSHKey"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The parent project containing the SSH keys."
                },
                "sshKeyId": {
                  "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value should be match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Create a new SSH key registration in the specified project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "id": "baremetalsolution.projects.sshKeys.delete",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys/{sshKeysId}",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/sshKeys/[^/]+$",
                  "description": "Required. The name of the SSH key to delete.",
                  "location": "path"
                }
              },
              "description": "Delete an SSH key registration in the specified project."
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/sshKeys",
              "id": "baremetalsolution.projects.sshKeys.list",
              "description": "List the public SSH keys registered for the specified project.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of items to return."
                },
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent project containing the SSH keys."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys",
              "response": {
                "$ref": "ListSSHKeysResponse"
              }
            }
          }
        },
        "locations": {
          "resources": {
            "instances": {
              "methods": {
                "enableInteractiveSerialConsole": {
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "parameterOrder": [
                    "instance"
                  ],
                  "response": {
                    "$ref": "EnableInteractiveSerialConsoleResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "description": "Enable the interactive serial console feature on a specific machine.",
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance to enable the interactive serial console feature on.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+instance}:enableInteractiveSerialConsole",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "List Instances (physical servers).",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location to list Instances in.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/instances",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instances.list"
                },
                "readSerialPortOutput": {
                  "id": "baremetalsolution.projects.locations.instances.readSerialPortOutput",
                  "parameterOrder": [
                    "instance"
                  ],
                  "path": "v1alpha1/{+instance}:readSerialPortOutput",
                  "parameters": {
                    "instance": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the instance to get serial port output of.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    },
                    "startByte": {
                      "location": "query",
                      "format": "int64",
                      "type": "string",
                      "description": "Optional. The start byte of the serial port output to return."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "SerialPortOutput"
                  },
                  "httpMethod": "GET",
                  "description": "Read the most recent serial port output from a machine.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:readSerialPortOutput"
                },
                "disableInteractiveSerialConsole": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "DisableInteractiveSerialConsoleResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "parameterOrder": [
                    "instance"
                  ],
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "parameters": {
                    "instance": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the instance to disable the interactive serial console feature on.",
                      "type": "string"
                    }
                  },
                  "description": "Disable the interactive serial console feature on a specific machine.",
                  "path": "v1alpha1/{+instance}:disableInteractiveSerialConsole",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "httpMethod": "POST"
                },
                "get": {
                  "description": "Get details for a specific named Instance.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the Instance to retrieve.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "resetInstance": {
                  "parameterOrder": [
                    "instance"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.resetInstance",
                  "response": {
                    "$ref": "ResetInstanceResponse"
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:resetInstance",
                  "path": "v1alpha1/{+instance}:resetInstance",
                  "description": "Perform an ungraceful, hard reset on a machine (equivalent to physically turning power off and then back on).",
                  "httpMethod": "POST",
                  "parameters": {
                    "instance": {
                      "type": "string",
                      "description": "Required. Name of the instance to reset.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  }
                }
              }
            },
            "luns": {
              "methods": {
                "get": {
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Lun"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.luns.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/luns/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the Lun to retrieve.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Get details for a specific named Lun.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns/{lunsId}"
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+parent}/luns",
                  "response": {
                    "$ref": "ListLunsResponse"
                  },
                  "description": "List Luns.",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The location to list Luns in.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.luns.list",
                  "httpMethod": "GET"
                }
              }
            },
            "volumes": {
              "resources": {
                "snapshots": {
                  "methods": {
                    "delete": {
                      "description": "Delete specific named snapshot.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "path": "v1alpha1/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the snapshot to delete.",
                          "required": true
                        }
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "path": "v1alpha1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot to retrieve.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "description": "Get details for a specific named snapshot.",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "httpMethod": "GET"
                    },
                    "restore": {
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restore",
                      "response": {
                        "$ref": "Empty"
                      },
                      "httpMethod": "POST",
                      "path": "v1alpha1/{+name}:restore",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the VolumeSnapshot to restore.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restore",
                      "description": "Restore a VolumeSnapshot."
                    },
                    "create": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "location": "path"
                        }
                      },
                      "description": "Create snapshot of the specified Volume",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "path": "v1alpha1/{+parent}/snapshots",
                      "httpMethod": "POST",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from a previous List request, if any."
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of items to return.",
                          "type": "integer"
                        }
                      },
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "path": "v1alpha1/{+parent}/snapshots",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List the Snapshots for the specified Volume",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported field is `snapshot_reserved_space_percent`.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The name of this Volume."
                    }
                  },
                  "response": {
                    "$ref": "Volume"
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "description": "Update certain parameters on a Volume.",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}"
                },
                "setVolumeSnapshotSchedulePolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the specified snapshot schedule policy on the specified volume.",
                  "parameters": {
                    "volume": {
                      "type": "string",
                      "description": "Required. Name of the volume to set snapshot schedule policy on.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyResponse"
                  },
                  "parameterOrder": [
                    "volume"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.setVolumeSnapshotSchedulePolicy",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:setVolumeSnapshotSchedulePolicy",
                  "request": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyRequest"
                  },
                  "path": "v1alpha1/{+volume}:setVolumeSnapshotSchedulePolicy"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the Volume to retrieve.",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "description": "Get details for a specific named Volume.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Volume"
                  }
                },
                "list": {
                  "path": "v1alpha1/{+parent}/volumes",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The location to list Volumes in.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "description": "List the volumes for the specified project",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          },
          "methods": {
            "submitProvisioningConfig": {
              "httpMethod": "POST",
              "id": "baremetalsolution.projects.locations.submitProvisioningConfig",
              "description": "Submit a provisiong configuration for a given project.",
              "parameters": {
                "location": {
                  "required": true,
                  "pattern": "^locations/[^/]+$",
                  "description": "Required. The target location of the provisioning request.",
                  "location": "path",
                  "type": "string"
                },
                "project": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The target project of the provisioning request."
                }
              },
              "path": "v1alpha1/{+project}/{+location}:submitProvisioningConfig",
              "request": {
                "$ref": "SubmitProvisioningConfigRequest"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:submitProvisioningConfig",
              "parameterOrder": [
                "project",
                "location"
              ],
              "response": {
                "$ref": "ProvisioningConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "snapshotSchedulePolicies": {
          "methods": {
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.delete",
              "description": "Delete removes named snapshot schedule policy",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the snapshot to delete.",
                  "location": "path",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "patch": {
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.patch",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "The list of fields to update.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Output only. The name of this SnapshotSchedulePolicy.",
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Update a SnapshotSchedulePolicy.",
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}"
            },
            "get": {
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "description": "Get details for a specific snapshot schedule policy",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.get",
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the policy to retrieve."
                }
              }
            },
            "list": {
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies",
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies",
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of items to return.",
                  "location": "query",
                  "type": "integer"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "List the snapshot schedule policies for the specified project",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.list",
              "response": {
                "$ref": "ListSnapshotSchedulePoliciesResponse"
              }
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies",
              "httpMethod": "POST",
              "description": "Create a SnapshotSchedulePolicy.",
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The parent project containing the SnapshotSchedulePolicy."
                }
              },
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.create"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    }
  },
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "kind": "discovery#restDescription",
  "version_module": true,
  "revision": "20210706",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "schemas": {
    "Schedule": {
      "type": "object",
      "description": "A snapshot schedule.",
      "id": "Schedule",
      "properties": {
        "crontabSpec": {
          "description": "The crontab-like specification that this Schedule will use to take snapshots.",
          "type": "string"
        },
        "retentionCount": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of snapshots to retain under this Schedule."
        },
        "prefix": {
          "type": "string",
          "description": "A string to prefix names of snapshots created under this Schedule."
        }
      }
    },
    "ListVolumeSnapshotsResponse": {
      "id": "ListVolumeSnapshotsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "volumeSnapshots": {
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "description": "The VolumeSnapshots for the volume.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response for ListVolumeSnapshots."
    },
    "DisableInteractiveSerialConsoleResponse": {
      "properties": {},
      "id": "DisableInteractiveSerialConsoleResponse",
      "type": "object",
      "description": "Response for DisableInteractiveSerialConsole."
    },
    "NetworkConfig": {
      "description": "Configuration parameters for a new network.",
      "id": "NetworkConfig",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "type": "array"
        },
        "type": {
          "type": "string",
          "description": "The type of this network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "bandwidth": {
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the network."
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "type": "string",
          "description": "Service CIDR, if any.",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ]
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "description": "A network.",
      "properties": {
        "address": {
          "description": "IP address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Volume": {
      "description": "Volume registered in the project.",
      "type": "object",
      "properties": {
        "requestedSizeGb": {
          "description": "The requested size of this Volume, in GB.",
          "format": "int64",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ]
        },
        "snapshotReservedSpaceRemainingGb": {
          "description": "The amount, in GB, of space available in this Volume's reserved snapshot space.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of this Volume."
        },
        "currentSizeGb": {
          "description": "The current size of this Volume, in GB, including space reserved for snapshots. This size may be different than the requested size if the Volume has been configured with auto grow or auto shrink.",
          "type": "string",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "description": "The state of this Volume.",
          "enumDescriptions": [
            "The unspecified state.",
            "The Volume has been provisioned.",
            "The Volume has been requested to be deprovisioned.",
            "The Volume is in deprovisioning cooloff: a deprovisioning has been requested, but data has not yet been deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "DEPROVISIONING_REQUESTED",
            "DEPROVISIONING_COOLOFF"
          ]
        },
        "snapshotReservedSpaceUsedPercent": {
          "type": "integer",
          "description": "The percent of reserved snapshot space on this Volume that is actually used by snapshot copies. This may be higher than 100% if snapshot copies are occupying more space than has been reserved on the Volume.",
          "format": "int32"
        },
        "snapshotReservedSpacePercent": {
          "format": "int32",
          "type": "integer",
          "description": "The percent of space on this Volume reserved for snapshots."
        },
        "remainingSpaceGb": {
          "description": "The space remaining in the Volume for new LUNs, in GB, excluding space reserved for snapshots.",
          "format": "int64",
          "type": "string"
        },
        "autoGrownSizeGb": {
          "description": "The size, in GB, that this Volume has expanded as a result of an auto grow policy.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "Volume"
    },
    "SerialPortOutput": {
      "properties": {
        "nextStartByte": {
          "type": "string",
          "description": "The byte index to use in a subsequent call to ReadSerialPortOutput to get more output.",
          "format": "int64"
        },
        "start": {
          "type": "string",
          "description": "The start byte index of the included contents.",
          "format": "int64"
        },
        "contents": {
          "description": "The serial port output.",
          "type": "string"
        }
      },
      "id": "SerialPortOutput",
      "description": "Response for ReadSerialPortOutput.",
      "type": "object"
    },
    "ListInstancesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "instances": {
          "description": "The Instances in this project.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        }
      },
      "id": "ListInstancesResponse",
      "description": "Response for ListInstances.",
      "type": "object"
    },
    "LunRange": {
      "properties": {
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of each LUN, in GB."
        },
        "quantity": {
          "format": "int32",
          "description": "Number of LUNs to create.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A LUN range.",
      "id": "LunRange"
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "id": "ListSnapshotSchedulePoliciesResponse",
      "description": "Response for ListSnapshotSchedulePolicies.",
      "properties": {
        "snapshotSchedulePolicies": {
          "type": "array",
          "description": "The snapshot schedule policies registered in this project.",
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "InstanceConfig": {
      "properties": {
        "privateNetwork": {
          "description": "Private network address, if any.",
          "$ref": "NetworkAddress"
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "osImage": {
          "description": "OS image to initialize the instance.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        },
        "clientNetwork": {
          "description": "Client network address.",
          "$ref": "NetworkAddress"
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the instance."
        }
      },
      "type": "object",
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance."
    },
    "Lun": {
      "type": "object",
      "id": "Lun",
      "properties": {
        "shareable": {
          "type": "boolean",
          "description": "Whether this Lun is allowed to be shared between multiple physical servers."
        },
        "sizeGb": {
          "description": "The size of this Lun, in gigabytes.",
          "format": "int64",
          "type": "string"
        },
        "remoteVolume": {
          "description": "The storage volume that this Lun is attached to.",
          "$ref": "Volume"
        },
        "multiprotocolType": {
          "type": "string",
          "description": "The multiprotocol type of this Lun."
        },
        "isBoot": {
          "type": "boolean",
          "description": "Whether this Lun is a boot Lun."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of this Lun."
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The Lun has been reserved.",
            "The Lun is being provisioned.",
            "The Lun has been provisioned.",
            "The Lun is being deprovisioned.",
            "The Lun has been deprovisioned.",
            "The Lun is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ],
          "description": "The state of this Lun.",
          "type": "string"
        }
      },
      "description": "A storage Lun."
    },
    "SSHKey": {
      "type": "object",
      "properties": {
        "publicKey": {
          "description": "The public SSH key.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of this SSH key.",
          "readOnly": true
        }
      },
      "description": "A public SSH key registered in the project. Used primarily for the interactive serial console feature.",
      "id": "SSHKey"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "description": "Request for DisableInteractiveSerialConsole.",
      "id": "DisableInteractiveSerialConsoleRequest",
      "properties": {},
      "type": "object"
    },
    "ProvisioningConfig": {
      "properties": {
        "networks": {
          "type": "array",
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "instances": {
          "type": "array",
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "volumes": {
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          },
          "type": "array"
        },
        "ticketId": {
          "type": "string",
          "description": "A reference to track the request."
        }
      },
      "description": "An provisioning configuration.",
      "id": "ProvisioningConfig",
      "type": "object"
    },
    "NfsExport": {
      "properties": {
        "machineId": {
          "description": "A single machine, identified by an ID.",
          "type": "string"
        },
        "permissions": {
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ]
        },
        "noRootSquash": {
          "description": "Disable root squashing.",
          "type": "boolean"
        },
        "allowDev": {
          "description": "Allow dev.",
          "type": "boolean"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NfsExport",
      "description": "A NFS export entry."
    },
    "EnableInteractiveSerialConsoleResponse": {
      "properties": {},
      "type": "object",
      "description": "Response for EnableInteractiveSerialConsole.",
      "id": "EnableInteractiveSerialConsoleResponse"
    },
    "ListVolumesResponse": {
      "type": "object",
      "description": "Response for ListVolumes.",
      "properties": {
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "The volumes registered in this project."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "ListVolumesResponse"
    },
    "ResetInstanceResponse": {
      "id": "ResetInstanceResponse",
      "description": "Response for ResetInstance.",
      "type": "object",
      "properties": {}
    },
    "ListSSHKeysResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sshKeys": {
          "description": "The SSH keys registered in this project.",
          "items": {
            "$ref": "SSHKey"
          },
          "type": "array"
        }
      },
      "description": "Response for ListSSHKeys.",
      "id": "ListSSHKeysResponse",
      "type": "object"
    },
    "ListLunsResponse": {
      "type": "object",
      "properties": {
        "luns": {
          "type": "array",
          "description": "The Luns in this project.",
          "items": {
            "$ref": "Lun"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "Response for ListLuns.",
      "id": "ListLunsResponse"
    },
    "ProvisioningQuota": {
      "type": "object",
      "id": "ProvisioningQuota",
      "properties": {
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        }
      },
      "description": "A provisioning quota for a given project."
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the volume."
        },
        "lunRanges": {
          "type": "array",
          "items": {
            "$ref": "LunRange"
          },
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC."
        },
        "nfsExports": {
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS."
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "protocol": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ]
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB. This will be updated in a later iteration with a generic size field.",
          "format": "int32"
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        }
      },
      "id": "VolumeConfig",
      "type": "object"
    },
    "SnapshotSchedulePolicy": {
      "description": "A snapshot schedule policy.",
      "id": "SnapshotSchedulePolicy",
      "type": "object",
      "properties": {
        "volumes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The names of the Volumes this policy is associated with."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of this SnapshotSchedulePolicy."
        },
        "description": {
          "description": "The description of this SnapshotSchedulePolicy.",
          "type": "string"
        },
        "schedules": {
          "type": "array",
          "description": "The snapshot Schedules contained in this Policy. At most 5 Schedules may be specified.",
          "items": {
            "$ref": "Schedule"
          }
        }
      }
    },
    "SetVolumeSnapshotSchedulePolicyRequest": {
      "id": "SetVolumeSnapshotSchedulePolicyRequest",
      "description": "Request for SetVolumeSnapshotSchedulePolicy.",
      "type": "object",
      "properties": {
        "snapshotSchedulePolicy": {
          "description": "Required. The name of the policy to set on the volume.",
          "type": "string"
        }
      }
    },
    "SetVolumeSnapshotSchedulePolicyResponse": {
      "properties": {},
      "description": "Response for SetVolumeSnapshotSchedulePolicy.",
      "id": "SetVolumeSnapshotSchedulePolicyResponse",
      "type": "object"
    },
    "RestoreVolumeSnapshotRequest": {
      "type": "object",
      "properties": {},
      "description": "Request for RestoreVolumeSnapshot.",
      "id": "RestoreVolumeSnapshotRequest"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "description": "VolumeSnapshot registered for given Volume",
      "properties": {
        "state": {
          "description": "The state of this Snapshot.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The Snapshot is currently being created.",
            "The Snapshot has been created, and can be used to restore."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of this Snapshot.",
          "readOnly": true
        },
        "sizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "The real size of this Snapshot, in bytes."
        },
        "description": {
          "type": "string",
          "description": "The description of this Snapshot."
        }
      },
      "type": "object"
    },
    "ResetInstanceRequest": {
      "type": "object",
      "properties": {},
      "description": "Request for ResetInstance.",
      "id": "ResetInstanceRequest"
    },
    "EnableInteractiveSerialConsoleRequest": {
      "properties": {},
      "description": "Request for EnableInteractiveSerialConsole.",
      "type": "object",
      "id": "EnableInteractiveSerialConsoleRequest"
    },
    "VlanAttachment": {
      "description": "A GCP vlan attachment.",
      "properties": {
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        },
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        }
      },
      "type": "object",
      "id": "VlanAttachment"
    },
    "SubmitProvisioningConfigRequest": {
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to submit."
        }
      }
    },
    "Instance": {
      "id": "Instance",
      "properties": {
        "name": {
          "description": "Output only. The name of this Instance.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The Instance has been reserved.",
            "The Instance is being provisioned.",
            "The Instance has been provisioned.",
            "The Instance is being deprovisioned.",
            "The Instance has been deprovisioned.",
            "The Instance is being updated."
          ],
          "description": "The state of this Instance."
        },
        "hyperthreadingEnabled": {
          "description": "Is hyperthreading enabled for this instance?",
          "type": "boolean"
        },
        "sshEnabled": {
          "description": "Is SSH enabled for this instance?",
          "type": "boolean"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "The Luns attached to this instance"
        },
        "scheduledPowerResetTime": {
          "format": "google-datetime",
          "description": "The scheduled power reset time.",
          "type": "string"
        }
      },
      "description": "An Instance.",
      "type": "object"
    },
    "InstanceQuota": {
      "type": "object",
      "description": "A resource budget.",
      "properties": {
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32",
          "type": "integer"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type."
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        }
      },
      "id": "InstanceQuota"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "ListProvisioningQuotasResponse": {
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "Response for ListProvisioningQuotas.",
      "type": "object",
      "id": "ListProvisioningQuotasResponse"
    }
  },
  "batchPath": "batch",
  "basePath": "",
  "version": "v1alpha1",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "protocol": "rest",
  "name": "baremetalsolution",
  "id": "baremetalsolution:v1alpha1",
  "ownerDomain": "google.com",
  "title": "Bare Metal Solution API",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "rootUrl": "https://baremetalsolution.googleapis.com/"
}

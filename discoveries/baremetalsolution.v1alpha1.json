{
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "schemas": {
    "InstanceConfig": {
      "type": "object",
      "properties": {
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "location": {
          "description": "Location where to deploy the instance.",
          "type": "string"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any."
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        }
      },
      "description": "Configuration parameters for a new instance.",
      "id": "InstanceConfig"
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "ticketId": {
          "type": "string",
          "description": "A reference to track the request."
        },
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "InstanceConfig"
          },
          "description": "Instances to be created."
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created."
        }
      },
      "type": "object",
      "description": "An provisioning configuration."
    },
    "ProvisioningQuota": {
      "id": "ProvisioningQuota",
      "type": "object",
      "properties": {
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        }
      },
      "description": "A provisioning quota for a given project."
    },
    "NetworkConfig": {
      "type": "object",
      "id": "NetworkConfig",
      "properties": {
        "serviceCidr": {
          "description": "Service CIDR, if any.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ]
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "location": {
          "description": "Location where to deploy the network.",
          "type": "string"
        },
        "vlanAttachments": {
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "items": {
            "$ref": "VlanAttachment"
          },
          "type": "array"
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "type": "string",
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617)."
        }
      },
      "description": "Configuration parameters for a new network."
    },
    "SubmitProvisioningConfigRequest": {
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to submit.",
          "$ref": "ProvisioningConfig"
        }
      }
    },
    "ListProvisioningQuotasResponse": {
      "description": "Response for ListProvisioningQuotas.",
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VolumeConfig": {
      "type": "object",
      "properties": {
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617)."
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "type": "string",
          "description": "Volume protocol."
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array",
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS."
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB. This will be updated in a later iteration with a generic size field.",
          "type": "integer"
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the volume."
        },
        "type": {
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ]
        },
        "lunRanges": {
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          }
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        }
      },
      "description": "Configuration parameters for a new volume.",
      "id": "VolumeConfig"
    },
    "NfsExport": {
      "type": "object",
      "description": "A NFS export entry.",
      "properties": {
        "allowDev": {
          "description": "Allow dev.",
          "type": "boolean"
        },
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "permissions": {
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "type": "string",
          "description": "Export permissions.",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ]
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing."
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        }
      },
      "id": "NfsExport"
    },
    "VlanAttachment": {
      "id": "VlanAttachment",
      "description": "A GCP vlan attachment.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier of the VLAN attachment.",
          "type": "string"
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      }
    },
    "NetworkAddress": {
      "type": "object",
      "id": "NetworkAddress",
      "description": "A network.",
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address to be assigned to the server."
        },
        "networkId": {
          "description": "Name of the network to use, within the same ProvisioningConfig request. This represents a new network being provisioned in the same request. Can have any user-defined name like for eg, my-network-name. Mutually exclusive with existing_network_id.",
          "type": "string"
        },
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use. Will be of the format at--vlan for pre-intake UI networks like for eg, at-123456-vlan001 or any user-defined name like for eg, my-network-name for networks provisioned using intake UI. The field is exclusively filled only in case of an already existing network. Mutually exclusive with network_id."
        }
      }
    },
    "InstanceQuota": {
      "type": "object",
      "properties": {
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        },
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        }
      },
      "description": "A resource budget.",
      "id": "InstanceQuota"
    },
    "LunRange": {
      "description": "A LUN range.",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "The requested size of each LUN, in GB."
        },
        "quantity": {
          "description": "Number of LUNs to create.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "LunRange",
      "type": "object"
    }
  },
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "version": "v1alpha1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "baremetalsolution:v1alpha1",
  "title": "Bare Metal Solution API",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "revision": "20220524",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "ownerName": "Google",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "provisioningQuotas": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/provisioningQuotas",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListProvisioningQuotasResponse"
              },
              "path": "v1alpha1/{+parent}/provisioningQuotas",
              "id": "baremetalsolution.projects.provisioningQuotas.list",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of items to return.",
                  "format": "int32"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The parent project containing the provisioning quotas.",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "type": "string"
                }
              },
              "description": "List the budget details to provision resources on a given project.",
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "locations": {
          "methods": {
            "submitProvisioningConfig": {
              "request": {
                "$ref": "SubmitProvisioningConfigRequest"
              },
              "path": "v1alpha1/{+project}/{+location}:submitProvisioningConfig",
              "id": "baremetalsolution.projects.locations.submitProvisioningConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "project",
                "location"
              ],
              "parameters": {
                "project": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The target project of the provisioning request.",
                  "type": "string",
                  "location": "path"
                },
                "location": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^locations/[^/]+$",
                  "description": "Required. The target location of the provisioning request."
                }
              },
              "httpMethod": "POST",
              "description": "Submit a provisiong configuration for a given project.",
              "response": {
                "$ref": "ProvisioningConfig"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:submitProvisioningConfig"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    }
  },
  "basePath": "",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "servicePath": "",
  "name": "baremetalsolution"
}

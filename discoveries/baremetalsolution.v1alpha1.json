{
  "servicePath": "",
  "ownerDomain": "google.com",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "basePath": "",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "baremetalsolution:v1alpha1",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "revision": "20210701",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "luns": {
              "methods": {
                "get": {
                  "id": "baremetalsolution.projects.locations.luns.get",
                  "description": "Get details for a specific named Lun.",
                  "response": {
                    "$ref": "Lun"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns/{lunsId}",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/luns/[^/]+$",
                      "description": "Required. The name of the Lun to retrieve."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The location to list Luns in."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListLunsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List Luns.",
                  "id": "baremetalsolution.projects.locations.luns.list",
                  "path": "v1alpha1/{+parent}/luns",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/luns"
                }
              }
            },
            "volumes": {
              "resources": {
                "snapshots": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the snapshot to retrieve.",
                          "type": "string"
                        }
                      },
                      "description": "Get details for a specific named snapshot.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "path": "v1alpha1/{+name}"
                    },
                    "restore": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the VolumeSnapshot to restore.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restore",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Restore a VolumeSnapshot.",
                      "path": "v1alpha1/{+name}:restore",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restore",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      }
                    },
                    "delete": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "description": "Delete specific named snapshot.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot to delete.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1alpha1/{+parent}/snapshots",
                      "description": "Create snapshot of the specified Volume",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "VolumeSnapshot"
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of items to return.",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous List request, if any.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The Volume containing the VolumeSnapshots.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "path": "v1alpha1/{+parent}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List the Snapshots for the specified Volume",
                      "httpMethod": "GET"
                    }
                  }
                }
              },
              "methods": {
                "setVolumeSnapshotSchedulePolicy": {
                  "path": "v1alpha1/{+volume}:setVolumeSnapshotSchedulePolicy",
                  "id": "baremetalsolution.projects.locations.volumes.setVolumeSnapshotSchedulePolicy",
                  "parameters": {
                    "volume": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the volume to set snapshot schedule policy on."
                    }
                  },
                  "response": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyResponse"
                  },
                  "request": {
                    "$ref": "SetVolumeSnapshotSchedulePolicyRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Sets the specified snapshot schedule policy on the specified volume.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:setVolumeSnapshotSchedulePolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "volume"
                  ]
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported field is `snapshot_reserved_space_percent`.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The name of this Volume.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "request": {
                    "$ref": "Volume"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update certain parameters on a Volume.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The location to list Volumes in.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+parent}/volumes",
                  "description": "List the volumes for the specified project",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes"
                },
                "get": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. The name of the Volume to retrieve.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "description": "Get details for a specific named Volume.",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "instances": {
              "methods": {
                "list": {
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "parent": {
                      "description": "Required. The location to list Instances in.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/instances",
                  "description": "List Instances (physical servers).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "readSerialPortOutput": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "instance"
                  ],
                  "parameters": {
                    "instance": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the instance to get serial port output of."
                    },
                    "startByte": {
                      "location": "query",
                      "description": "Optional. The start byte of the serial port output to return.",
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.readSerialPortOutput",
                  "path": "v1alpha1/{+instance}:readSerialPortOutput",
                  "response": {
                    "$ref": "SerialPortOutput"
                  },
                  "description": "Read the most recent serial port output from a machine.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:readSerialPortOutput"
                },
                "enableInteractiveSerialConsole": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+instance}:enableInteractiveSerialConsole",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "instance"
                  ],
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance to enable the interactive serial console feature on.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "EnableInteractiveSerialConsoleResponse"
                  },
                  "description": "Enable the interactive serial console feature on a specific machine."
                },
                "resetInstance": {
                  "description": "Perform an ungraceful, hard reset on a machine (equivalent to physically turning power off and then back on).",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:resetInstance",
                  "id": "baremetalsolution.projects.locations.instances.resetInstance",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha1/{+instance}:resetInstance",
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the instance to reset.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "response": {
                    "$ref": "ResetInstanceResponse"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  }
                },
                "disableInteractiveSerialConsole": {
                  "path": "v1alpha1/{+instance}:disableInteractiveSerialConsole",
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Disable the interactive serial console feature on a specific machine.",
                  "parameters": {
                    "instance": {
                      "required": true,
                      "description": "Required. Name of the instance to disable the interactive serial console feature on.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "parameterOrder": [
                    "instance"
                  ],
                  "response": {
                    "$ref": "DisableInteractiveSerialConsoleResponse"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the Instance to retrieve.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details for a specific named Instance.",
                  "id": "baremetalsolution.projects.locations.instances.get"
                }
              }
            }
          },
          "methods": {
            "submitProvisioningConfig": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "SubmitProvisioningConfigRequest"
              },
              "httpMethod": "POST",
              "path": "v1alpha1/{+project}/{+location}:submitProvisioningConfig",
              "parameterOrder": [
                "project",
                "location"
              ],
              "parameters": {
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "Required. The target project of the provisioning request.",
                  "type": "string",
                  "required": true
                },
                "location": {
                  "pattern": "^locations/[^/]+$",
                  "type": "string",
                  "description": "Required. The target location of the provisioning request.",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "ProvisioningConfig"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}:submitProvisioningConfig",
              "description": "Submit a provisiong configuration for a given project.",
              "id": "baremetalsolution.projects.locations.submitProvisioningConfig"
            }
          }
        },
        "provisioningQuotas": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.provisioningQuotas.list",
              "flatPath": "v1alpha1/projects/{projectsId}/provisioningQuotas",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/provisioningQuotas",
              "description": "List the budget details to provision resources on a given project.",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListProvisioningQuotasResponse"
              },
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of items to return.",
                  "type": "integer",
                  "format": "int32"
                },
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The parent project containing the provisioning quotas."
                }
              }
            }
          }
        },
        "sshKeys": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The parent project containing the SSH keys.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The next_page_token value returned from a previous List request, if any."
                },
                "pageSize": {
                  "description": "The maximum number of items to return.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                }
              },
              "description": "List the public SSH keys registered for the specified project.",
              "response": {
                "$ref": "ListSSHKeysResponse"
              },
              "path": "v1alpha1/{+parent}/sshKeys",
              "id": "baremetalsolution.projects.sshKeys.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys"
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.sshKeys.delete",
              "path": "v1alpha1/{+name}",
              "description": "Delete an SSH key registration in the specified project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "DELETE",
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys/{sshKeysId}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the SSH key to delete.",
                  "pattern": "^projects/[^/]+/sshKeys/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create a new SSH key registration in the specified project.",
              "request": {
                "$ref": "SSHKey"
              },
              "response": {
                "$ref": "SSHKey"
              },
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/sshKeys",
              "id": "baremetalsolution.projects.sshKeys.create",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/sshKeys",
              "parameters": {
                "sshKeyId": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value should be match the regex: [a-zA-Z0-9@.\\-_]{1,64}"
                },
                "parent": {
                  "required": true,
                  "description": "Required. The parent project containing the SSH keys.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              }
            }
          }
        },
        "snapshotSchedulePolicies": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "description": "Get details for a specific snapshot schedule policy",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.get",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the policy to retrieve.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create a SnapshotSchedulePolicy.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent project containing the SnapshotSchedulePolicy.",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies",
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies"
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.delete",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the snapshot to delete."
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Delete removes named snapshot schedule policy"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "description": "List the snapshot schedule policies for the specified project",
              "response": {
                "$ref": "ListSnapshotSchedulePoliciesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.list",
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of items to return.",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous List request, if any."
                }
              },
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies",
              "path": "v1alpha1/{+parent}/snapshotSchedulePolicies"
            },
            "patch": {
              "flatPath": "v1alpha1/projects/{projectsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SnapshotSchedulePolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Update a SnapshotSchedulePolicy.",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/snapshotSchedulePolicies/[^/]+$",
                  "location": "path",
                  "description": "Output only. The name of this SnapshotSchedulePolicy.",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "The list of fields to update.",
                  "format": "google-fieldmask"
                }
              },
              "httpMethod": "PATCH",
              "id": "baremetalsolution.projects.snapshotSchedulePolicies.patch",
              "response": {
                "$ref": "SnapshotSchedulePolicy"
              }
            }
          }
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "schemas": {
    "Volume": {
      "type": "object",
      "description": "Volume registered in the project.",
      "id": "Volume",
      "properties": {
        "snapshotReservedSpaceUsedPercent": {
          "description": "The percent of reserved snapshot space on this Volume that is actually used by snapshot copies. This may be higher than 100% if snapshot copies are occupying more space than has been reserved on the Volume.",
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The Volume has been provisioned.",
            "The Volume has been requested to be deprovisioned.",
            "The Volume is in deprovisioning cooloff: a deprovisioning has been requested, but data has not yet been deleted."
          ],
          "description": "The state of this Volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "DEPROVISIONING_REQUESTED",
            "DEPROVISIONING_COOLOFF"
          ]
        },
        "snapshotReservedSpaceRemainingGb": {
          "type": "string",
          "description": "The amount, in GB, of space available in this Volume's reserved snapshot space.",
          "format": "int64"
        },
        "snapshotReservedSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "The percent of space on this Volume reserved for snapshots."
        },
        "autoGrownSizeGb": {
          "type": "string",
          "format": "int64",
          "description": "The size, in GB, that this Volume has expanded as a result of an auto grow policy."
        },
        "remainingSpaceGb": {
          "format": "int64",
          "type": "string",
          "description": "The space remaining in the Volume for new LUNs, in GB, excluding space reserved for snapshots."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of this Volume."
        },
        "requestedSizeGb": {
          "type": "string",
          "format": "int64",
          "description": "The requested size of this Volume, in GB."
        },
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "type": "string",
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "currentSizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The current size of this Volume, in GB, including space reserved for snapshots. This size may be different than the requested size if the Volume has been configured with auto grow or auto shrink."
        }
      }
    },
    "Instance": {
      "id": "Instance",
      "properties": {
        "hyperthreadingEnabled": {
          "description": "Is hyperthreading enabled for this instance?",
          "type": "boolean"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "The Luns attached to this instance"
        },
        "sshEnabled": {
          "type": "boolean",
          "description": "Is SSH enabled for this instance?"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The Instance has been reserved.",
            "The Instance is being provisioned.",
            "The Instance has been provisioned.",
            "The Instance is being deprovisioned.",
            "The Instance has been deprovisioned.",
            "The Instance is being updated."
          ],
          "description": "The state of this Instance."
        },
        "scheduledPowerResetTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The scheduled power reset time."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of this Instance.",
          "readOnly": true
        }
      },
      "description": "An Instance.",
      "type": "object"
    },
    "Lun": {
      "type": "object",
      "id": "Lun",
      "description": "A storage Lun.",
      "properties": {
        "shareable": {
          "type": "boolean",
          "description": "Whether this Lun is allowed to be shared between multiple physical servers."
        },
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The size of this Lun, in gigabytes."
        },
        "remoteVolume": {
          "$ref": "Volume",
          "description": "The storage volume that this Lun is attached to."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of this Lun."
        },
        "isBoot": {
          "description": "Whether this Lun is a boot Lun.",
          "type": "boolean"
        },
        "multiprotocolType": {
          "description": "The multiprotocol type of this Lun.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RESERVED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "DEPROVISIONED",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The Lun has been reserved.",
            "The Lun is being provisioned.",
            "The Lun has been provisioned.",
            "The Lun is being deprovisioned.",
            "The Lun has been deprovisioned.",
            "The Lun is being updated."
          ],
          "description": "The state of this Lun.",
          "type": "string"
        }
      }
    },
    "ListVolumeSnapshotsResponse": {
      "id": "ListVolumeSnapshotsResponse",
      "type": "object",
      "description": "Response for ListVolumeSnapshots.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "volumeSnapshots": {
          "description": "The VolumeSnapshots for the volume.",
          "type": "array",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        }
      }
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "type": "object",
      "properties": {
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array",
          "description": "Instances to be created."
        },
        "volumes": {
          "description": "Volumes to be created.",
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "networks": {
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array",
          "description": "Networks to be created."
        },
        "ticketId": {
          "type": "string",
          "description": "A reference to track the request."
        }
      },
      "description": "An provisioning configuration."
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "properties": {
        "address": {
          "description": "IP address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        }
      },
      "description": "A network.",
      "type": "object"
    },
    "VlanAttachment": {
      "description": "A GCP vlan attachment.",
      "id": "VlanAttachment",
      "properties": {
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        },
        "id": {
          "description": "Identifier of the VLAN attachment.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LunRange": {
      "description": "A LUN range.",
      "id": "LunRange",
      "type": "object",
      "properties": {
        "quantity": {
          "description": "Number of LUNs to create.",
          "type": "integer",
          "format": "int32"
        },
        "sizeGb": {
          "description": "The requested size of each LUN, in GB.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type."
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any."
        },
        "osImage": {
          "description": "OS image to initialize the instance.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the instance."
        }
      },
      "type": "object"
    },
    "DisableInteractiveSerialConsoleResponse": {
      "description": "Response for DisableInteractiveSerialConsole.",
      "id": "DisableInteractiveSerialConsoleResponse",
      "type": "object",
      "properties": {}
    },
    "DisableInteractiveSerialConsoleRequest": {
      "id": "DisableInteractiveSerialConsoleRequest",
      "type": "object",
      "description": "Request for DisableInteractiveSerialConsole.",
      "properties": {}
    },
    "VolumeConfig": {
      "properties": {
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume."
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the volume."
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB. This will be updated in a later iteration with a generic size field.",
          "type": "integer"
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          },
          "type": "array"
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "protocol": {
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ]
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        }
      },
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume.",
      "type": "object"
    },
    "SetVolumeSnapshotSchedulePolicyResponse": {
      "properties": {},
      "description": "Response for SetVolumeSnapshotSchedulePolicy.",
      "id": "SetVolumeSnapshotSchedulePolicyResponse",
      "type": "object"
    },
    "ListSSHKeysResponse": {
      "type": "object",
      "id": "ListSSHKeysResponse",
      "description": "Response for ListSSHKeys.",
      "properties": {
        "sshKeys": {
          "type": "array",
          "items": {
            "$ref": "SSHKey"
          },
          "description": "The SSH keys registered in this project."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "type": "object",
      "properties": {
        "instances": {
          "items": {
            "$ref": "Instance"
          },
          "description": "The Instances in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "Response for ListInstances."
    },
    "EnableInteractiveSerialConsoleResponse": {
      "type": "object",
      "properties": {},
      "description": "Response for EnableInteractiveSerialConsole.",
      "id": "EnableInteractiveSerialConsoleResponse"
    },
    "ResetInstanceResponse": {
      "description": "Response for ResetInstance.",
      "id": "ResetInstanceResponse",
      "type": "object",
      "properties": {}
    },
    "Schedule": {
      "id": "Schedule",
      "properties": {
        "prefix": {
          "description": "A string to prefix names of snapshots created under this Schedule.",
          "type": "string"
        },
        "crontabSpec": {
          "description": "The crontab-like specification that this Schedule will use to take snapshots.",
          "type": "string"
        },
        "retentionCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of snapshots to retain under this Schedule."
        }
      },
      "type": "object",
      "description": "A snapshot schedule."
    },
    "EnableInteractiveSerialConsoleRequest": {
      "id": "EnableInteractiveSerialConsoleRequest",
      "type": "object",
      "properties": {},
      "description": "Request for EnableInteractiveSerialConsole."
    },
    "NetworkConfig": {
      "description": "Configuration parameters for a new network.",
      "id": "NetworkConfig",
      "properties": {
        "bandwidth": {
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string",
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "serviceCidr": {
          "type": "string",
          "description": "Service CIDR, if any.",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ]
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location where to deploy the network."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        }
      },
      "type": "object"
    },
    "SetVolumeSnapshotSchedulePolicyRequest": {
      "properties": {
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "Required. The name of the policy to set on the volume."
        }
      },
      "id": "SetVolumeSnapshotSchedulePolicyRequest",
      "description": "Request for SetVolumeSnapshotSchedulePolicy.",
      "type": "object"
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "Response for ListProvisioningQuotas.",
      "type": "object"
    },
    "VolumeSnapshot": {
      "type": "object",
      "id": "VolumeSnapshot",
      "description": "VolumeSnapshot registered for given Volume",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of this Snapshot.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The Snapshot is currently being created.",
            "The Snapshot has been created, and can be used to restore."
          ]
        },
        "description": {
          "type": "string",
          "description": "The description of this Snapshot."
        },
        "sizeBytes": {
          "description": "The real size of this Snapshot, in bytes.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this Snapshot.",
          "type": "string"
        }
      }
    },
    "ProvisioningQuota": {
      "id": "ProvisioningQuota",
      "description": "A provisioning quota for a given project.",
      "properties": {
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        }
      },
      "type": "object"
    },
    "ResetInstanceRequest": {
      "description": "Request for ResetInstance.",
      "id": "ResetInstanceRequest",
      "type": "object",
      "properties": {}
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object"
    },
    "SnapshotSchedulePolicy": {
      "id": "SnapshotSchedulePolicy",
      "description": "A snapshot schedule policy.",
      "properties": {
        "schedules": {
          "items": {
            "$ref": "Schedule"
          },
          "description": "The snapshot Schedules contained in this Policy. At most 5 Schedules may be specified.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "The description of this SnapshotSchedulePolicy."
        },
        "volumes": {
          "items": {
            "type": "string"
          },
          "description": "The names of the Volumes this policy is associated with.",
          "type": "array"
        },
        "name": {
          "description": "Output only. The name of this SnapshotSchedulePolicy.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "SSHKey": {
      "description": "A public SSH key registered in the project. Used primarily for the interactive serial console feature.",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this SSH key.",
          "type": "string"
        },
        "publicKey": {
          "type": "string",
          "description": "The public SSH key."
        }
      },
      "id": "SSHKey",
      "type": "object"
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "description": "Response for ListVolumes.",
      "properties": {
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "description": "The volumes registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListLunsResponse": {
      "id": "ListLunsResponse",
      "description": "Response for ListLuns.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "luns": {
          "description": "The Luns in this project.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        }
      }
    },
    "SubmitProvisioningConfigRequest": {
      "id": "SubmitProvisioningConfigRequest",
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to submit."
        }
      },
      "description": "Request for SubmitProvisioningConfig."
    },
    "NfsExport": {
      "id": "NfsExport",
      "description": "A NFS export entry.",
      "type": "object",
      "properties": {
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        },
        "noRootSquash": {
          "description": "Disable root squashing.",
          "type": "boolean"
        },
        "machineId": {
          "description": "A single machine, identified by an ID.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev."
        },
        "permissions": {
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions.",
          "type": "string"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        }
      }
    },
    "SerialPortOutput": {
      "properties": {
        "nextStartByte": {
          "format": "int64",
          "description": "The byte index to use in a subsequent call to ReadSerialPortOutput to get more output.",
          "type": "string"
        },
        "start": {
          "format": "int64",
          "type": "string",
          "description": "The start byte index of the included contents."
        },
        "contents": {
          "type": "string",
          "description": "The serial port output."
        }
      },
      "type": "object",
      "description": "Response for ReadSerialPortOutput.",
      "id": "SerialPortOutput"
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "properties": {
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        },
        "availableMachineCount": {
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer"
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        }
      },
      "id": "InstanceQuota",
      "type": "object"
    },
    "RestoreVolumeSnapshotRequest": {
      "properties": {},
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object",
      "description": "Request for RestoreVolumeSnapshot."
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "description": "Response for ListSnapshotSchedulePolicies.",
      "id": "ListSnapshotSchedulePoliciesResponse",
      "properties": {
        "snapshotSchedulePolicies": {
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "type": "array",
          "description": "The snapshot schedule policies registered in this project."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "name": "baremetalsolution",
  "title": "Bare Metal Solution API",
  "ownerName": "Google",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "version_module": true,
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "version": "v1alpha1",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "baseUrl": "https://baremetalsolution.googleapis.com/"
}

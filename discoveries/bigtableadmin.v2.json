{
  "baseUrl": "https://bigtableadmin.googleapis.com/",
  "id": "bigtableadmin:v2",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster": {
          "description": "Administer your Cloud Bigtable clusters"
        },
        "https://www.googleapis.com/auth/cloud-bigtable.admin": {
          "description": "Administer your Cloud Bigtable tables and clusters"
        },
        "https://www.googleapis.com/auth/bigtable.admin.cluster": {
          "description": "Administer your Cloud Bigtable clusters"
        },
        "https://www.googleapis.com/auth/bigtable.admin.instance": {
          "description": "Administer your Cloud Bigtable clusters"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        },
        "https://www.googleapis.com/auth/cloud-bigtable.admin.table": {
          "description": "Administer your Cloud Bigtable tables"
        },
        "https://www.googleapis.com/auth/bigtable.admin.table": {
          "description": "Administer your Cloud Bigtable tables"
        },
        "https://www.googleapis.com/auth/bigtable.admin": {
          "description": "Administer your Cloud Bigtable tables and clusters"
        }
      }
    }
  },
  "batchPath": "batch",
  "canonicalName": "Bigtable Admin",
  "protocol": "rest",
  "mtlsRootUrl": "https://bigtableadmin.mtls.googleapis.com/",
  "version_module": true,
  "ownerName": "Google",
  "resources": {
    "operations": {
      "resources": {
        "projects": {
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "bigtableadmin.operations.projects.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v2/operations/projects/{projectsId}/operations",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}/operations",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^operations/projects/.*$",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation's parent resource."
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ]
                }
              }
            }
          }
        }
      },
      "methods": {
        "cancel": {
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "path": "v2/{+name}:cancel",
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "location": "path",
              "description": "The name of the operation resource to be cancelled.",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/bigtable.admin",
            "https://www.googleapis.com/auth/bigtable.admin.cluster",
            "https://www.googleapis.com/auth/bigtable.admin.instance",
            "https://www.googleapis.com/auth/cloud-bigtable.admin",
            "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v2/operations/{operationsId}:cancel",
          "id": "bigtableadmin.operations.cancel"
        },
        "delete": {
          "flatPath": "v2/operations/{operationsId}",
          "parameterOrder": [
            "name"
          ],
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "name": {
              "location": "path",
              "description": "The name of the operation resource to be deleted.",
              "required": true,
              "type": "string",
              "pattern": "^operations/.*$"
            }
          },
          "id": "bigtableadmin.operations.delete",
          "path": "v2/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/bigtable.admin",
            "https://www.googleapis.com/auth/bigtable.admin.cluster",
            "https://www.googleapis.com/auth/bigtable.admin.instance",
            "https://www.googleapis.com/auth/cloud-bigtable.admin",
            "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "get": {
          "path": "v2/{+name}",
          "flatPath": "v2/operations/{operationsId}",
          "response": {
            "$ref": "Operation"
          },
          "id": "bigtableadmin.operations.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "scopes": [
            "https://www.googleapis.com/auth/bigtable.admin",
            "https://www.googleapis.com/auth/bigtable.admin.cluster",
            "https://www.googleapis.com/auth/bigtable.admin.instance",
            "https://www.googleapis.com/auth/cloud-bigtable.admin",
            "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/cloud-platform.read-only"
          ],
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource.",
              "location": "path"
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "path": "v2/{+name}/locations",
              "id": "bigtableadmin.projects.locations.list",
              "flatPath": "v2/projects/{projectsId}/locations",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              }
            },
            "get": {
              "id": "bigtableadmin.projects.locations.get",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location."
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}"
            }
          }
        },
        "instances": {
          "methods": {
            "partialUpdateInstance": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "bigtableadmin.projects.instances.partialUpdateInstance",
              "httpMethod": "PATCH",
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "request": {
                "$ref": "Instance"
              },
              "description": "Partially updates an instance within a project. This method can modify all fields of an Instance and is the preferred way to update an Instance.",
              "parameters": {
                "name": {
                  "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "required": true
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Required. The subset of Instance fields which should be replaced. Must be explicitly set."
                }
              },
              "path": "v2/{+name}",
              "response": {
                "$ref": "Operation"
              }
            },
            "list": {
              "response": {
                "$ref": "ListInstancesResponse"
              },
              "description": "Lists information about instances in a project.",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "DEPRECATED: This field is unused and ignored."
                },
                "parent": {
                  "description": "Required. The unique name of the project for which a list of instances is requested. Values are of the form `projects/{project}`.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "parent"
              ],
              "id": "bigtableadmin.projects.instances.list",
              "path": "v2/{+parent}/instances",
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/instances"
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "description": "Delete an instance from a project.",
              "response": {
                "$ref": "Empty"
              },
              "path": "v2/{+name}",
              "id": "bigtableadmin.projects.instances.delete",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The unique name of the instance to be deleted. Values are of the form `projects/{project}/instances/{instance}`."
                }
              }
            },
            "create": {
              "id": "bigtableadmin.projects.instances.create",
              "path": "v2/{+parent}/instances",
              "httpMethod": "POST",
              "description": "Create an instance within a project. Note that exactly one of Cluster.serve_nodes and Cluster.cluster_config.cluster_autoscaling_config can be set. If serve_nodes is set to non-zero, then the cluster is manually scaled. If cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is enabled.",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "CreateInstanceRequest"
              },
              "flatPath": "v2/projects/{projectsId}/instances",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`.",
                  "pattern": "^projects/[^/]+$"
                }
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "bigtableadmin.projects.instances.get",
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The unique name of the requested instance. Values are of the form `projects/{project}/instances/{instance}`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$"
                }
              },
              "description": "Gets information about an instance.",
              "response": {
                "$ref": "Instance"
              },
              "httpMethod": "GET",
              "path": "v2/{+name}"
            },
            "getIamPolicy": {
              "path": "v2/{+resource}:getIamPolicy",
              "httpMethod": "POST",
              "description": "Gets the access control policy for an instance resource. Returns an empty policy if an instance exists but does not have a policy set.",
              "request": {
                "$ref": "GetIamPolicyRequest"
              },
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}:getIamPolicy",
              "response": {
                "$ref": "Policy"
              },
              "id": "bigtableadmin.projects.instances.getIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "resource"
              ]
            },
            "testIamPermissions": {
              "description": "Returns permissions that the caller has on the specified instance resource.",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "resource"
              ],
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}:testIamPermissions",
              "path": "v2/{+resource}:testIamPermissions",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "required": true,
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "bigtableadmin.projects.instances.testIamPermissions"
            },
            "setIamPolicy": {
              "path": "v2/{+resource}:setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on an instance resource. Replaces any existing policy.",
              "response": {
                "$ref": "Policy"
              },
              "httpMethod": "POST",
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}:setIamPolicy",
              "parameters": {
                "resource": {
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/instances/[^/]+$"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "bigtableadmin.projects.instances.setIamPolicy"
            },
            "update": {
              "flatPath": "v2/projects/{projectsId}/instances/{instancesId}",
              "description": "Updates an instance within a project. This method updates only the display name and type for an Instance. To update other Instance properties, such as labels, use PartialUpdateInstance.",
              "response": {
                "$ref": "Instance"
              },
              "scopes": [
                "https://www.googleapis.com/auth/bigtable.admin",
                "https://www.googleapis.com/auth/bigtable.admin.cluster",
                "https://www.googleapis.com/auth/bigtable.admin.instance",
                "https://www.googleapis.com/auth/cloud-bigtable.admin",
                "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}",
              "httpMethod": "PUT",
              "id": "bigtableadmin.projects.instances.update",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`."
                }
              },
              "request": {
                "$ref": "Instance"
              },
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "appProfiles": {
              "methods": {
                "get": {
                  "description": "Gets information about an app profile.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$",
                      "location": "path",
                      "description": "Required. The unique name of the requested app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}",
                  "path": "v2/{+name}",
                  "id": "bigtableadmin.projects.instances.appProfiles.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "AppProfile"
                  }
                },
                "delete": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}",
                  "id": "bigtableadmin.projects.instances.appProfiles.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes an app profile from an instance.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "ignoreWarnings": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Required. If true, ignore safety checks when deleting the app profile."
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The unique name of the app profile to be deleted. Values are of the form `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.",
                      "pattern": "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "path": "v2/{+parent}/appProfiles",
                  "id": "bigtableadmin.projects.instances.appProfiles.create",
                  "description": "Creates an app profile within an instance.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "description": "Required. The unique name of the instance in which to create the new app profile. Values are of the form `projects/{project}/instances/{instance}`.",
                      "type": "string",
                      "required": true
                    },
                    "appProfileId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The ID to be used when referring to the new app profile within its instance, e.g., just `myprofile` rather than `projects/myproject/instances/myinstance/appProfiles/myprofile`."
                    },
                    "ignoreWarnings": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If true, ignore safety checks when creating the app profile."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles",
                  "response": {
                    "$ref": "AppProfile"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "AppProfile"
                  }
                },
                "list": {
                  "description": "Lists information about app profiles in an instance.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles",
                  "path": "v2/{+parent}/appProfiles",
                  "id": "bigtableadmin.projects.instances.appProfiles.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The unique name of the instance for which a list of app profiles is requested. Values are of the form `projects/{project}/instances/{instance}`. Use `{instance} = '-'` to list AppProfiles for all Instances in a project, e.g., `projects/myproject/instances/-`."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value of `next_page_token` returned by a previous call."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum number of results per page. A page_size of zero lets the server choose the number of items to return. A page_size which is strictly positive will return at most that many items. A negative page_size will cause an error. Following the first request, subsequent paginated calls are not required to pass a page_size. If a page_size is set in subsequent calls, it must match the page_size given in the first request."
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListAppProfilesResponse"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "AppProfile"
                  },
                  "description": "Updates an app profile within an instance.",
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "ignoreWarnings": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If true, ignore safety checks when updating the app profile."
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. The subset of app profile fields which should be replaced. If unset, all fields will be replaced.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "bigtableadmin.projects.instances.appProfiles.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/appProfiles/{appProfilesId}"
                }
              }
            },
            "clusters": {
              "methods": {
                "update": {
                  "description": "Updates a cluster within an instance. Note that UpdateCluster does not support updating cluster_config.cluster_autoscaling_config. In order to update it, you must use PartialUpdateCluster.",
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "bigtableadmin.projects.instances.clusters.update",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PUT",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                      "location": "path",
                      "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets information about a cluster.",
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                      "description": "Required. The unique name of the requested cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "id": "bigtableadmin.projects.instances.clusters.get",
                  "response": {
                    "$ref": "Cluster"
                  }
                },
                "create": {
                  "request": {
                    "$ref": "Cluster"
                  },
                  "id": "bigtableadmin.projects.instances.clusters.create",
                  "path": "v2/{+parent}/clusters",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters",
                  "httpMethod": "POST",
                  "description": "Creates a cluster within an instance. Note that exactly one of Cluster.serve_nodes and Cluster.cluster_config.cluster_autoscaling_config can be set. If serve_nodes is set to non-zero, then the cluster is manually scaled. If cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is enabled.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "description": "Required. The unique name of the instance in which to create the new cluster. Values are of the form `projects/{project}/instances/{instance}`.",
                      "location": "path"
                    },
                    "clusterId": {
                      "description": "Required. The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigtableadmin.projects.instances.clusters.delete",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The unique name of the cluster to be deleted. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "description": "Deletes a cluster from an instance.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "bigtableadmin.projects.instances.clusters.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters",
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "DEPRECATED: This field is unused and ignored."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. The unique name of the instance for which a list of clusters is requested. Values are of the form `projects/{project}/instances/{instance}`. Use `{instance} = '-'` to list Clusters for all Instances in a project, e.g., `projects/myproject/instances/-`."
                    }
                  },
                  "path": "v2/{+parent}/clusters",
                  "description": "Lists information about clusters in an instance."
                },
                "partialUpdateCluster": {
                  "description": "Partially updates a cluster within a project. This method is the preferred way to update a Cluster. To enable and update autoscaling, set cluster_config.cluster_autoscaling_config. When autoscaling is enabled, serve_nodes is treated as an OUTPUT_ONLY field, meaning that updates to it are ignored. Note that an update cannot simultaneously set serve_nodes to non-zero and cluster_config.cluster_autoscaling_config to non-empty, and also specify both in the update_mask. To disable autoscaling, clear cluster_config.cluster_autoscaling_config, and explicitly set a serve_node count via the update_mask.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/bigtable.admin.instance",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "bigtableadmin.projects.instances.clusters.partialUpdateCluster",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. The subset of Cluster fields which should be replaced.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Cluster"
                  }
                }
              },
              "resources": {
                "hotTablets": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists hot tablets in a cluster, within the time range provided. Hot tablets are ordered based on CPU usage.",
                      "path": "v2/{+parent}/hotTablets",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/hotTablets",
                      "parameters": {
                        "endTime": {
                          "format": "google-datetime",
                          "description": "The end time to list hot tablets.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "The value of `next_page_token` returned by a previous call.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                          "description": "Required. The cluster name to list hot tablets. Value is in the following form: `projects/{project}/instances/{instance}/clusters/{cluster}`.",
                          "required": true
                        },
                        "startTime": {
                          "location": "query",
                          "description": "The start time to list hot tablets. The hot tablets in the response will have start times between the requested start time and end time. Start time defaults to Now if it is unset, and end time defaults to Now - 24 hours if it is unset. The start time should be less than the end time, and the maximum allowed time range between start time and end time is 48 hours. Start time and end time should have values between Now and Now - 14 days.",
                          "type": "string",
                          "format": "google-datetime"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Maximum number of results per page. A page_size that is empty or zero lets the server choose the number of items to return. A page_size which is strictly positive will return at most that many items. A negative page_size will cause an error. Following the first request, subsequent paginated calls do not need a page_size field. If a page_size is set in subsequent calls, it must match the page_size given in the first request.",
                          "format": "int32"
                        }
                      },
                      "id": "bigtableadmin.projects.instances.clusters.hotTablets.list",
                      "response": {
                        "$ref": "ListHotTabletsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.cluster",
                        "https://www.googleapis.com/auth/bigtable.admin.instance",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.cluster",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "backups": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/backups",
                      "description": "Lists Cloud Bigtable backups. Returns both completed and pending backups.",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups",
                      "id": "bigtableadmin.projects.instances.clusters.backups.list",
                      "parameters": {
                        "orderBy": {
                          "description": "An expression for specifying the sort order of the results of the request. The string value should specify one or more fields in Backup. The full syntax is described at https://aip.dev/132#ordering. Fields supported are: * name * source_table * expire_time * start_time * end_time * size_bytes * state For example, \"start_time\". The default sorting order is ascending. To specify descending order for the field, a suffix \" desc\" should be appended to the field name. For example, \"start_time desc\". Redundant space characters in the syntax are insigificant. If order_by is empty, results will be sorted by `start_time` in descending order starting from the most recently created backup.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "description": "A filter expression that filters backups listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be \u003c, \u003e, \u003c=, \u003e=, !=, =, or :. Colon ':' represents a HAS operator which is roughly synonymous with equality. Filter rules are case insensitive. The fields eligible for filtering are: * `name` * `source_table` * `state` * `start_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `end_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `expire_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `size_bytes` To filter on multiple expressions, provide each separate expression within parentheses. By default, each expression is an AND expression. However, you can include AND, OR, and NOT expressions explicitly. Some examples of using filters are: * `name:\"exact\"` --\u003e The backup's name is the string \"exact\". * `name:howl` --\u003e The backup's name contains the string \"howl\". * `source_table:prod` --\u003e The source_table's name contains the string \"prod\". * `state:CREATING` --\u003e The backup is pending creation. * `state:READY` --\u003e The backup is fully created and ready for use. * `(name:howl) AND (start_time \u003c \\\"2018-03-28T14:50:00Z\\\")` --\u003e The backup name contains the string \"howl\" and start_time of the backup is before 2018-03-28T14:50:00Z. * `size_bytes \u003e 10000000000` --\u003e The backup's size is greater than 10GB",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Number of backups to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.",
                          "type": "integer"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The cluster to list backups from. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`. Use `{cluster} = '-'` to list backups for all clusters in an instance, e.g., `projects/{project}/instances/{instance}/clusters/-`.",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "If non-empty, `page_token` should contain a next_page_token from a previous ListBackupsResponse to the same `parent` and with the same `filter`.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListBackupsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "setIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v2/{+resource}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "httpMethod": "POST",
                      "description": "Sets the access control policy on a Table resource. Replaces any existing policy.",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "id": "bigtableadmin.projects.instances.clusters.backups.setIamPolicy"
                    },
                    "copy": {
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups:copy",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the destination cluster that will contain the backup copy. The cluster must already exists. Values are of the form: `projects/{project}/instances/{instance}/clusters/{cluster}`.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Copy a Cloud Bigtable backup to a new backup in the destination cluster located in the destination instance and project.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "bigtableadmin.projects.instances.clusters.backups.copy",
                      "request": {
                        "$ref": "CopyBackupRequest"
                      },
                      "path": "v2/{+parent}/backups:copy"
                    },
                    "patch": {
                      "id": "bigtableadmin.projects.instances.clusters.backups.patch",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "request": {
                        "$ref": "Backup"
                      },
                      "response": {
                        "$ref": "Backup"
                      },
                      "httpMethod": "PATCH",
                      "description": "Updates a pending or completed Cloud Bigtable Backup.",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "Required. A mask specifying which fields (e.g. `expire_time`) in the Backup resource should be updated. This mask is relative to the Backup resource, not to the request message. The field mask must always be specified; this prevents any future fields from being erased accidentally by clients that do not know about them."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$",
                          "description": "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "bigtableadmin.projects.instances.clusters.backups.get",
                      "response": {
                        "$ref": "Backup"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the backup. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup}`.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets metadata on a pending or completed Cloud Bigtable Backup.",
                      "path": "v2/{+name}",
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}"
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$",
                          "description": "Required. This must be one of the clusters in the instance in which this table is located. The backup will be stored in this cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."
                        },
                        "backupId": {
                          "type": "string",
                          "description": "Required. The id of the backup to be created. The `backup_id` along with the parent `parent` are combined as {parent}/backups/{backup_id} to create the full backup name, of the form: `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*.",
                          "location": "query"
                        }
                      },
                      "description": "Starts creating a new Cloud Bigtable Backup. The returned backup long-running operation can be used to track creation of the backup. The metadata field type is CreateBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the creation and delete the backup.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "Backup"
                      },
                      "id": "bigtableadmin.projects.instances.clusters.backups.create",
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups",
                      "path": "v2/{+parent}/backups",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Returns permissions that the caller has on the specified table resource.",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "path": "v2/{+resource}:testIamPermissions",
                      "id": "bigtableadmin.projects.instances.clusters.backups.testIamPermissions"
                    },
                    "getIamPolicy": {
                      "path": "v2/{+resource}:getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GetIamPolicyRequest"
                      },
                      "description": "Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set.",
                      "id": "bigtableadmin.projects.instances.clusters.backups.getIamPolicy"
                    },
                    "delete": {
                      "id": "bigtableadmin.projects.instances.clusters.backups.delete",
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/clusters/{clustersId}/backups/{backupsId}",
                      "httpMethod": "DELETE",
                      "path": "v2/{+name}",
                      "description": "Deletes a pending or completed Cloud Bigtable backup.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/bigtable.admin",
                        "https://www.googleapis.com/auth/bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin",
                        "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the backup to delete. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup}`.",
                          "pattern": "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "tables": {
              "methods": {
                "patch": {
                  "description": "Updates a specified table.",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. The list of fields to update. A mask specifying which fields (e.g. `change_stream_config`) in the `table` field should be updated. This mask is relative to the `table` field, not to the request message. The wildcard (*) path is currently not supported. Currently UpdateTable is only supported for the following fields: * `change_stream_config` * `change_stream_config.retention_period` * `deletion_protection` If `column_families` is set in `update_mask`, it will return an UNIMPLEMENTED error."
                    },
                    "name": {
                      "description": "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Table"
                  },
                  "id": "bigtableadmin.projects.instances.tables.patch"
                },
                "checkConsistency": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:checkConsistency",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "CheckConsistencyResponse"
                  },
                  "path": "v2/{+name}:checkConsistency",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The unique name of the Table for which to check replication consistency. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`.",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "bigtableadmin.projects.instances.tables.checkConsistency",
                  "description": "Checks replication consistency based on a consistency token, that is, if replication has caught up based on the conditions specified in the token and the check request.",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CheckConsistencyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "dropRowRange": {
                  "path": "v2/{+name}:dropRowRange",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "bigtableadmin.projects.instances.tables.dropRowRange",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:dropRowRange",
                  "parameters": {
                    "name": {
                      "description": "Required. The unique name of the table on which to drop a range of rows. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "DropRowRangeRequest"
                  },
                  "description": "Permanently drop/delete a row range from a specified table. The request can specify whether to delete all rows in a table, or only those that match a particular prefix.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "restore": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables:restore",
                  "id": "bigtableadmin.projects.instances.tables.restore",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "RestoreTableRequest"
                  },
                  "path": "v2/{+parent}/tables:restore",
                  "description": "Create a new table by restoring from a completed backup. The returned table long-running operation can be used to track the progress of the operation, and to cancel it. The metadata field type is RestoreTableMetadata. The response type is Table, if successful.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the instance in which to create the restored table. Values are of the form `projects//instances/`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListTablesResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value of `next_page_token` returned by a previous call."
                    },
                    "view": {
                      "enumDescriptions": [
                        "Uses the default view for each method as documented in its request.",
                        "Only populates `name`.",
                        "Only populates `name` and fields related to the table's schema.",
                        "Only populates `name` and fields related to the table's replication state.",
                        "Only populates `name` and fields related to the table's encryption state.",
                        "Only populates `name` and fields related to the table's stats (e.g. TableStats and ColumnFamilyStats).",
                        "Populates all fields except for stats. See STATS_VIEW to request stats."
                      ],
                      "location": "query",
                      "type": "string",
                      "description": "The view to be applied to the returned tables' fields. Only NAME_ONLY view (default), REPLICATION_VIEW and ENCRYPTION_VIEW are supported.",
                      "enum": [
                        "VIEW_UNSPECIFIED",
                        "NAME_ONLY",
                        "SCHEMA_VIEW",
                        "REPLICATION_VIEW",
                        "ENCRYPTION_VIEW",
                        "STATS_VIEW",
                        "FULL"
                      ]
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of results per page. A page_size of zero lets the server choose the number of items to return. A page_size which is strictly positive will return at most that many items. A negative page_size will cause an error. Following the first request, subsequent paginated calls are not required to pass a page_size. If a page_size is set in subsequent calls, it must match the page_size given in the first request.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The unique name of the instance for which tables should be listed. Values are of the form `projects/{project}/instances/{instance}`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Lists all tables served from a specified instance.",
                  "path": "v2/{+parent}/tables",
                  "id": "bigtableadmin.projects.instances.tables.list"
                },
                "delete": {
                  "description": "Permanently deletes a specified table and all of its data.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "bigtableadmin.projects.instances.tables.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "required": true,
                      "description": "Required. The unique name of the table to be deleted. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "parameters": {
                    "view": {
                      "description": "The view to be applied to the returned table's fields. Defaults to `SCHEMA_VIEW` if unspecified.",
                      "type": "string",
                      "enumDescriptions": [
                        "Uses the default view for each method as documented in its request.",
                        "Only populates `name`.",
                        "Only populates `name` and fields related to the table's schema.",
                        "Only populates `name` and fields related to the table's replication state.",
                        "Only populates `name` and fields related to the table's encryption state.",
                        "Only populates `name` and fields related to the table's stats (e.g. TableStats and ColumnFamilyStats).",
                        "Populates all fields except for stats. See STATS_VIEW to request stats."
                      ],
                      "location": "query",
                      "enum": [
                        "VIEW_UNSPECIFIED",
                        "NAME_ONLY",
                        "SCHEMA_VIEW",
                        "REPLICATION_VIEW",
                        "ENCRYPTION_VIEW",
                        "STATS_VIEW",
                        "FULL"
                      ]
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "description": "Required. The unique name of the requested table. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}",
                  "id": "bigtableadmin.projects.instances.tables.get",
                  "response": {
                    "$ref": "Table"
                  },
                  "path": "v2/{+name}",
                  "description": "Gets metadata information about the specified table.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on a Table resource. Replaces any existing policy.",
                  "id": "bigtableadmin.projects.instances.tables.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "bigtableadmin.projects.instances.tables.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The unique name of the instance in which to create the table. Values are of the form `projects/{project}/instances/{instance}`.",
                      "pattern": "^projects/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables",
                  "path": "v2/{+parent}/tables",
                  "description": "Creates a new table in the specified instance. The table can be created with a full set of initial column families, specified in the request.",
                  "response": {
                    "$ref": "Table"
                  },
                  "request": {
                    "$ref": "CreateTableRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "getIamPolicy": {
                  "id": "bigtableadmin.projects.instances.tables.getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "description": "Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "path": "v2/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "generateConsistencyToken": {
                  "httpMethod": "POST",
                  "path": "v2/{+name}:generateConsistencyToken",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GenerateConsistencyTokenRequest"
                  },
                  "id": "bigtableadmin.projects.instances.tables.generateConsistencyToken",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Generates a consistency token for a Table, which can be used in CheckConsistency to check whether mutations to the table that finished before this call started have been replicated. The tokens will be available for 90 days.",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:generateConsistencyToken",
                  "response": {
                    "$ref": "GenerateConsistencyTokenResponse"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The unique name of the Table for which to create a consistency token. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`.",
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "required": true
                    }
                  }
                },
                "modifyColumnFamilies": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "bigtableadmin.projects.instances.tables.modifyColumnFamilies",
                  "path": "v2/{+name}:modifyColumnFamilies",
                  "request": {
                    "$ref": "ModifyColumnFamiliesRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Performs a series of column family modifications on the specified table. Either all or none of the modifications will occur before this method returns, but data requests received prior to that point may see a table where only some modifications have taken effect.",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:modifyColumnFamilies",
                  "response": {
                    "$ref": "Table"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "description": "Required. The unique name of the table whose families should be modified. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "undelete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "UndeleteTableRequest"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The unique name of the table to be restored. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:undelete",
                  "description": "Restores a specified table which was accidentally deleted.",
                  "path": "v2/{+name}:undelete",
                  "id": "bigtableadmin.projects.instances.tables.undelete"
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "path": "v2/{+resource}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/instances/[^/]+/tables/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "id": "bigtableadmin.projects.instances.tables.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v2/projects/{projectsId}/instances/{instancesId}/tables/{tablesId}:testIamPermissions",
                  "description": "Returns permissions that the caller has on the specified table resource.",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigtable.admin",
                    "https://www.googleapis.com/auth/bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin",
                    "https://www.googleapis.com/auth/cloud-bigtable.admin.table",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20221022",
  "kind": "discovery#restDescription",
  "schemas": {
    "EncryptionConfig": {
      "properties": {
        "kmsKeyName": {
          "description": "Describes the Cloud KMS encryption key that will be used to protect the destination Bigtable cluster. The requirements for this key are: 1) The Cloud Bigtable service account associated with the project that contains this cluster must be granted the `cloudkms.cryptoKeyEncrypterDecrypter` role on the CMEK key. 2) Only regional keys can be used and the region of the CMEK key must match the region of the cluster. Values are of the form `projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}`",
          "type": "string"
        }
      },
      "id": "EncryptionConfig",
      "description": "Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected cluster.",
      "type": "object"
    },
    "RestoreTableMetadata": {
      "id": "RestoreTableMetadata",
      "type": "object",
      "description": "Metadata type for the long-running operation returned by RestoreTable.",
      "properties": {
        "progress": {
          "description": "The progress of the RestoreTable operation.",
          "$ref": "OperationProgress"
        },
        "optimizeTableOperationName": {
          "description": "If exists, the name of the long-running operation that will be used to track the post-restore optimization process to optimize the performance of the restored table. The metadata type of the long-running operation is OptimizeRestoreTableMetadata. The response type is Empty. This long-running operation may be automatically created by the system if applicable after the RestoreTable long-running operation completes successfully. This operation may not be created if the table is already optimized or the restore was not successful.",
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "RESTORE_SOURCE_TYPE_UNSPECIFIED",
            "BACKUP"
          ],
          "enumDescriptions": [
            "No restore associated.",
            "A backup was used as the source of the restore."
          ],
          "description": "The type of the restore source."
        },
        "name": {
          "type": "string",
          "description": "Name of the table being created and restored to."
        },
        "backupInfo": {
          "$ref": "BackupInfo"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "properties": {
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object"
    },
    "UpdateClusterMetadata": {
      "type": "object",
      "description": "The metadata for the Operation returned by UpdateCluster.",
      "properties": {
        "requestTime": {
          "type": "string",
          "description": "The time at which the original request was received.",
          "format": "google-datetime"
        },
        "originalRequest": {
          "description": "The request that prompted the initiation of this UpdateCluster operation.",
          "$ref": "Cluster"
        },
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "UpdateClusterMetadata"
    },
    "OptimizeRestoredTableMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the restored table being optimized.",
          "type": "string"
        },
        "progress": {
          "$ref": "OperationProgress",
          "description": "The progress of the post-restore optimizations."
        }
      },
      "id": "OptimizeRestoredTableMetadata",
      "description": "Metadata type for the long-running operation used to track the progress of optimizations performed on a newly restored table. This long-running operation is automatically created by the system after the successful completion of a table restore, and cannot be cancelled."
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        }
      },
      "type": "object",
      "id": "Location"
    },
    "Modification": {
      "description": "A create, update, or delete of a particular column family.",
      "type": "object",
      "properties": {
        "create": {
          "$ref": "ColumnFamily",
          "description": "Create a new column family with the specified schema, or fail if one already exists with the given ID."
        },
        "update": {
          "description": "Update an existing column family to the specified schema, or fail if no column family exists with the given ID.",
          "$ref": "ColumnFamily"
        },
        "id": {
          "description": "The ID of the column family to be modified.",
          "type": "string"
        },
        "drop": {
          "description": "Drop (delete) the column family with the given ID, or fail if no such family exists.",
          "type": "boolean"
        }
      },
      "id": "Modification"
    },
    "MultiClusterRoutingUseAny": {
      "type": "object",
      "id": "MultiClusterRoutingUseAny",
      "properties": {
        "clusterIds": {
          "description": "The set of clusters to route to. The order is ignored; clusters will be tried in order of distance. If left empty, all clusters are eligible.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability."
    },
    "PartialUpdateClusterMetadata": {
      "description": "The metadata for the Operation returned by PartialUpdateCluster.",
      "id": "PartialUpdateClusterMetadata",
      "type": "object",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "$ref": "PartialUpdateClusterRequest",
          "description": "The original request for PartialUpdateCluster."
        },
        "requestTime": {
          "format": "google-datetime",
          "description": "The time at which the original request was received.",
          "type": "string"
        }
      }
    },
    "ListInstancesResponse": {
      "type": "object",
      "id": "ListInstancesResponse",
      "properties": {
        "nextPageToken": {
          "description": "DEPRECATED: This field is unused and ignored.",
          "type": "string"
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "Instance"
          },
          "description": "The list of requested instances."
        },
        "failedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations from which Instance information could not be retrieved, due to an outage or some other transient condition. Instances whose Clusters are all in one of the failed locations may be missing from `instances`, and Instances with at least one Cluster in a failed location may only have partial information returned. Values are of the form `projects//locations/`"
        }
      },
      "description": "Response message for BigtableInstanceAdmin.ListInstances."
    },
    "CheckConsistencyRequest": {
      "properties": {
        "consistencyToken": {
          "description": "Required. The token created using GenerateConsistencyToken for the Table.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CheckConsistencyRequest",
      "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency"
    },
    "Union": {
      "type": "object",
      "properties": {
        "rules": {
          "items": {
            "$ref": "GcRule"
          },
          "description": "Delete cells which would be deleted by any element of `rules`.",
          "type": "array"
        }
      },
      "description": "A GcRule which deletes cells matching any of the given rules.",
      "id": "Union"
    },
    "CreateTableRequest": {
      "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CreateTable",
      "properties": {
        "table": {
          "description": "Required. The Table to create.",
          "$ref": "Table"
        },
        "tableId": {
          "description": "Required. The name by which the new table should be referred to within the parent instance, e.g., `foobar` rather than `{parent}/tables/foobar`. Maximum 50 characters.",
          "type": "string"
        },
        "initialSplits": {
          "description": "The optional list of row keys that will be used to initially split the table into several tablets (tablets are similar to HBase regions). Given two split keys, `s1` and `s2`, three tablets will be created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`. Example: * Row keys := `[\"a\", \"apple\", \"custom\", \"customer_1\", \"customer_2\",` `\"other\", \"zz\"]` * initial_split_keys := `[\"apple\", \"customer_1\", \"customer_2\", \"other\"]` * Key assignment: - Tablet 1 `[, apple) =\u003e {\"a\"}.` - Tablet 2 `[apple, customer_1) =\u003e {\"apple\", \"custom\"}.` - Tablet 3 `[customer_1, customer_2) =\u003e {\"customer_1\"}.` - Tablet 4 `[customer_2, other) =\u003e {\"customer_2\"}.` - Tablet 5 `[other, ) =\u003e {\"other\", \"zz\"}.`",
          "type": "array",
          "items": {
            "$ref": "Split"
          }
        }
      },
      "type": "object",
      "id": "CreateTableRequest"
    },
    "ListHotTabletsResponse": {
      "id": "ListHotTabletsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Set if not all hot tablets could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.",
          "type": "string"
        },
        "hotTablets": {
          "items": {
            "$ref": "HotTablet"
          },
          "type": "array",
          "description": "List of hot tablets in the tables of the requested cluster that fall within the requested time range. Hot tablets are ordered by node cpu usage percent. If there are multiple hot tablets that correspond to the same tablet within a 15-minute interval, only the hot tablet with the highest node cpu usage will be included in the response."
        }
      },
      "type": "object",
      "description": "Response message for BigtableInstanceAdmin.ListHotTablets."
    },
    "ListBackupsResponse": {
      "properties": {
        "backups": {
          "description": "The list of matching backups.",
          "items": {
            "$ref": "Backup"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
          "type": "string"
        }
      },
      "description": "The response for ListBackups.",
      "type": "object",
      "id": "ListBackupsResponse"
    },
    "ListTablesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Set if not all tables could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results."
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "Table"
          },
          "description": "The tables present in the requested instance."
        }
      },
      "id": "ListTablesResponse",
      "type": "object",
      "description": "Response message for google.bigtable.admin.v2.BigtableTableAdmin.ListTables"
    },
    "CopyBackupRequest": {
      "type": "object",
      "description": "The request for CopyBackup.",
      "id": "CopyBackupRequest",
      "properties": {
        "expireTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Required. Required. The expiration time of the copied backup with microsecond granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup."
        },
        "backupId": {
          "type": "string",
          "description": "Required. The id of the new backup. The `backup_id` along with `parent` are combined as {parent}/backups/{backup_id} to create the full backup name, of the form: `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*."
        },
        "sourceBackup": {
          "description": "Required. The source backup to be copied from. The source backup needs to be in READY state for it to be copied. Copying a copied backup is not allowed. Once CopyBackup is in progress, the source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished. Values are of the form: `projects//instances//clusters//backups/`.",
          "type": "string"
        }
      }
    },
    "ClusterState": {
      "description": "The state of a table's data in a particular cluster.",
      "properties": {
        "encryptionInfo": {
          "items": {
            "$ref": "EncryptionInfo"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The encryption information for the table in this cluster. If the encryption key protecting this resource is customer managed, then its version can be rotated in Cloud Key Management Service (Cloud KMS). The primary version of the key and its status will be reflected here when changes propagate from Cloud KMS."
        },
        "replicationState": {
          "description": "Output only. The state of replication for the table in this cluster.",
          "type": "string",
          "enum": [
            "STATE_NOT_KNOWN",
            "INITIALIZING",
            "PLANNED_MAINTENANCE",
            "UNPLANNED_MAINTENANCE",
            "READY",
            "READY_OPTIMIZING"
          ],
          "enumDescriptions": [
            "The replication state of the table is unknown in this cluster.",
            "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests.",
            "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance.",
            "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance.",
            "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters.",
            "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."
          ],
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ClusterState"
    },
    "ModifyColumnFamiliesRequest": {
      "properties": {
        "modifications": {
          "items": {
            "$ref": "Modification"
          },
          "description": "Required. Modifications to be atomically applied to the specified table's families. Entries are applied in order, meaning that earlier modifications can be masked by later ones (in the case of repeated updates to the same family, for example).",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies",
      "id": "ModifyColumnFamiliesRequest"
    },
    "TableStats": {
      "id": "TableStats",
      "description": "Approximate statistics related to a table. These statistics are calculated infrequently, while simultaneously, data in the table can change rapidly. Thus the values reported here (e.g. row count) are very likely out-of date, even the instant they are received in this API. Thus, only treat these values as approximate. IMPORTANT: Everything below is approximate, unless otherwise specified.",
      "properties": {
        "averageCellsPerColumn": {
          "format": "double",
          "type": "number",
          "description": "How many cells are present per column (column family, column qualifier) combinations, averaged over all columns in all rows in the table. e.g. A table with 2 rows: * A row with 3 cells in \"family:col\" and 1 cell in \"other:col\" (4 cells / 2 columns) * A row with 1 cell in \"family:col\", 7 cells in \"family:other_col\", and 7 cells in \"other:data\" (15 cells / 3 columns) would report (4 + 15)/(2 + 3) = 3.8 in this field."
        },
        "averageColumnsPerRow": {
          "description": "How many (column family, column qualifier) combinations are present per row in the table, averaged over all rows in the table. e.g. A table with 2 rows: * A row with cells in \"family:col\" and \"other:col\" (2 distinct columns) * A row with cells in \"family:col\", \"family:other_col\", and \"other:data\" (3 distinct columns) would report (2 + 3)/2 = 2.5 in this field.",
          "type": "number",
          "format": "double"
        },
        "logicalDataBytes": {
          "type": "string",
          "format": "int64",
          "description": "This is roughly how many bytes would be needed to read the entire table (e.g. by streaming all contents out)."
        },
        "rowCount": {
          "format": "int64",
          "description": "How many rows are in the table.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UndeleteTableMetadata": {
      "description": "Metadata type for the operation returned by google.bigtable.admin.v2.BigtableTableAdmin.UndeleteTable.",
      "type": "object",
      "id": "UndeleteTableMetadata",
      "properties": {
        "name": {
          "description": "The name of the table being restored.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "The time at which this operation started.",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "If set, the time at which this operation finished or was cancelled.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "Table": {
      "properties": {
        "stats": {
          "$ref": "TableStats",
          "description": "Only available with STATS_VIEW, this includes summary statistics about the entire table contents. For statistics about a specific column family, see ColumnFamilyStats in the mapped ColumnFamily collection above."
        },
        "deletionProtection": {
          "type": "boolean",
          "description": "Set to true to make the table protected against data loss. i.e. deleting the following resources through Admin APIs are prohibited: - The table. - The column families in the table. - The instance containing the table. Note one can still delete the data stored in the table through Data APIs."
        },
        "restoreInfo": {
          "description": "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore.",
          "readOnly": true,
          "$ref": "RestoreInfo"
        },
        "columnFamilies": {
          "type": "object",
          "description": "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `STATS_VIEW`, `FULL`",
          "additionalProperties": {
            "$ref": "ColumnFamily"
          }
        },
        "granularity": {
          "type": "string",
          "enumDescriptions": [
            "The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used.",
            "The table keeps data versioned at a granularity of 1ms."
          ],
          "description": "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.",
          "enum": [
            "TIMESTAMP_GRANULARITY_UNSPECIFIED",
            "MILLIS"
          ]
        },
        "clusterStates": {
          "description": "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `ENCRYPTION_VIEW`, `FULL`",
          "type": "object",
          "additionalProperties": {
            "$ref": "ClusterState"
          },
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `STATS_VIEW`, `FULL`"
        }
      },
      "id": "Table",
      "description": "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster.",
      "type": "object"
    },
    "ClusterAutoscalingConfig": {
      "id": "ClusterAutoscalingConfig",
      "properties": {
        "autoscalingTargets": {
          "description": "Required. Autoscaling targets for this cluster.",
          "$ref": "AutoscalingTargets"
        },
        "autoscalingLimits": {
          "description": "Required. Autoscaling limits for this cluster.",
          "$ref": "AutoscalingLimits"
        }
      },
      "description": "Autoscaling config for a cluster.",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      }
    },
    "ColumnFamily": {
      "type": "object",
      "id": "ColumnFamily",
      "properties": {
        "gcRule": {
          "$ref": "GcRule",
          "description": "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family."
        },
        "stats": {
          "description": "Only available with STATS_VIEW, this includes summary statistics about column family contents. For statistics over an entire table, see TableStats above.",
          "$ref": "ColumnFamilyStats"
        }
      },
      "description": "A set of columns within a table which share a common configuration."
    },
    "AutoscalingLimits": {
      "properties": {
        "maxServeNodes": {
          "description": "Required. Maximum number of nodes to scale up to.",
          "type": "integer",
          "format": "int32"
        },
        "minServeNodes": {
          "description": "Required. Minimum number of nodes to scale down to.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "AutoscalingLimits",
      "description": "Limits for the number of nodes a Cluster can autoscale up/down to.",
      "type": "object"
    },
    "CreateBackupMetadata": {
      "type": "object",
      "properties": {
        "sourceTable": {
          "type": "string",
          "description": "The name of the table the backup is created from."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "If set, the time at which this operation finished or was cancelled."
        },
        "startTime": {
          "description": "The time at which this operation started.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "description": "The name of the backup being created.",
          "type": "string"
        }
      },
      "id": "CreateBackupMetadata",
      "description": "Metadata type for the operation returned by CreateBackup."
    },
    "CreateClusterMetadata": {
      "description": "The metadata for the Operation returned by CreateCluster.",
      "properties": {
        "requestTime": {
          "description": "The time at which the original request was received.",
          "format": "google-datetime",
          "type": "string"
        },
        "tables": {
          "type": "object",
          "description": "Keys: the full `name` of each table that existed in the instance when CreateCluster was first called, i.e. `projects//instances//tables/`. Any table added to the instance by a later API call will be created in the new cluster by that API call, not this one. Values: information on how much of a table's data has been copied to the newly-created cluster so far.",
          "additionalProperties": {
            "$ref": "TableProgress"
          }
        },
        "originalRequest": {
          "description": "The request that prompted the initiation of this CreateCluster operation.",
          "$ref": "CreateClusterRequest"
        },
        "finishTime": {
          "format": "google-datetime",
          "description": "The time at which the operation failed or was completed successfully.",
          "type": "string"
        }
      },
      "id": "CreateClusterMetadata",
      "type": "object"
    },
    "BackupInfo": {
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp."
        },
        "sourceBackup": {
          "description": "Output only. Name of the backup from which this backup was copied. If a backup is not created by copying a backup, this field will be empty. Values are of the form: projects//instances//backups/.",
          "readOnly": true,
          "type": "string"
        },
        "sourceTable": {
          "type": "string",
          "description": "Output only. Name of the table the backup was created from.",
          "readOnly": true
        },
        "backup": {
          "description": "Output only. Name of the backup.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about a backup.",
      "id": "BackupInfo"
    },
    "Split": {
      "properties": {
        "key": {
          "format": "byte",
          "description": "Row key to use as an initial tablet boundary.",
          "type": "string"
        }
      },
      "description": "An initial split point for a newly created table.",
      "id": "Split",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty"
    },
    "CopyBackupMetadata": {
      "type": "object",
      "description": "Metadata type for the google.longrunning.Operation returned by CopyBackup.",
      "id": "CopyBackupMetadata",
      "properties": {
        "progress": {
          "$ref": "OperationProgress",
          "description": "The progress of the CopyBackup operation."
        },
        "name": {
          "description": "The name of the backup being created through the copy operation. Values are of the form `projects//instances//clusters//backups/`.",
          "type": "string"
        },
        "sourceBackupInfo": {
          "description": "Information about the source backup that is being copied from.",
          "$ref": "BackupInfo"
        }
      }
    },
    "PartialUpdateInstanceRequest": {
      "description": "Request message for BigtableInstanceAdmin.PartialUpdateInstance.",
      "properties": {
        "instance": {
          "$ref": "Instance",
          "description": "Required. The Instance which will (partially) replace the current value."
        },
        "updateMask": {
          "description": "Required. The subset of Instance fields which should be replaced. Must be explicitly set.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PartialUpdateInstanceRequest"
    },
    "Cluster": {
      "properties": {
        "name": {
          "description": "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "The state of the cluster could not be determined.",
            "The cluster has been successfully created and is ready to serve requests.",
            "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created.",
            "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states.",
            "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."
          ],
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING",
            "RESIZING",
            "DISABLED"
          ],
          "description": "Output only. The current state of the cluster.",
          "type": "string"
        },
        "defaultStorageType": {
          "description": "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.",
          "enumDescriptions": [
            "The user did not specify a storage type.",
            "Flash (SSD) storage should be used.",
            "Magnetic drive (HDD) storage should be used."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "clusterConfig": {
          "$ref": "ClusterConfig",
          "description": "Configuration for this cluster."
        },
        "encryptionConfig": {
          "$ref": "EncryptionConfig",
          "description": "Immutable. The encryption configuration for CMEK-protected clusters."
        },
        "serveNodes": {
          "format": "int32",
          "description": "The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.",
          "type": "integer"
        },
        "location": {
          "description": "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Cluster",
      "description": "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance."
    },
    "SingleClusterRouting": {
      "type": "object",
      "description": "Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.",
      "id": "SingleClusterRouting",
      "properties": {
        "allowTransactionalWrites": {
          "description": "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.",
          "type": "boolean"
        },
        "clusterId": {
          "type": "string",
          "description": "The cluster to which read/write requests should be routed."
        }
      }
    },
    "GenerateConsistencyTokenRequest": {
      "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken",
      "properties": {},
      "id": "GenerateConsistencyTokenRequest",
      "type": "object"
    },
    "PartialUpdateClusterRequest": {
      "type": "object",
      "id": "PartialUpdateClusterRequest",
      "properties": {
        "cluster": {
          "$ref": "Cluster",
          "description": "Required. The Cluster which contains the partial updates to be applied, subject to the update_mask."
        },
        "updateMask": {
          "description": "Required. The subset of Cluster fields which should be replaced.",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "description": "Request message for BigtableInstanceAdmin.PartialUpdateCluster."
    },
    "Binding": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse"
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest"
    },
    "GenerateConsistencyTokenResponse": {
      "description": "Response message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken",
      "type": "object",
      "id": "GenerateConsistencyTokenResponse",
      "properties": {
        "consistencyToken": {
          "description": "The generated consistency token.",
          "type": "string"
        }
      }
    },
    "UpdateTableMetadata": {
      "type": "object",
      "id": "UpdateTableMetadata",
      "description": "Metadata type for the operation returned by UpdateTable.",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "The time at which this operation started.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the table being updated."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "If set, the time at which this operation finished or was canceled."
        }
      }
    },
    "ListClustersResponse": {
      "properties": {
        "clusters": {
          "type": "array",
          "description": "The list of requested clusters.",
          "items": {
            "$ref": "Cluster"
          }
        },
        "failedLocations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations from which Cluster information could not be retrieved, due to an outage or some other transient condition. Clusters from these locations may be missing from `clusters`, or may only have partial information returned. Values are of the form `projects//locations/`"
        },
        "nextPageToken": {
          "type": "string",
          "description": "DEPRECATED: This field is unused and ignored."
        }
      },
      "description": "Response message for BigtableInstanceAdmin.ListClusters.",
      "type": "object",
      "id": "ListClustersResponse"
    },
    "Expr": {
      "type": "object",
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      }
    },
    "UpdateAppProfileMetadata": {
      "type": "object",
      "description": "The metadata for the Operation returned by UpdateAppProfile.",
      "properties": {},
      "id": "UpdateAppProfileMetadata"
    },
    "AutoscalingTargets": {
      "type": "object",
      "properties": {
        "cpuUtilizationPercent": {
          "description": "The cpu utilization that the Autoscaler should be trying to achieve. This number is on a scale from 0 (no utilization) to 100 (total utilization), and is limited between 10 and 80, otherwise it will return INVALID_ARGUMENT error.",
          "format": "int32",
          "type": "integer"
        },
        "storageUtilizationGibPerNode": {
          "format": "int32",
          "description": "The storage utilization that the Autoscaler should be trying to achieve. This number is limited between 2560 (2.5TiB) and 5120 (5TiB) for a SSD cluster and between 8192 (8TiB) and 16384 (16TiB) for an HDD cluster, otherwise it will return INVALID_ARGUMENT error. If this value is set to 0, it will be treated as if it were set to the default value: 2560 for SSD, 8192 for HDD.",
          "type": "integer"
        }
      },
      "id": "AutoscalingTargets",
      "description": "The Autoscaling targets for a Cluster. These determine the recommended nodes."
    },
    "RestoreTableRequest": {
      "properties": {
        "backup": {
          "description": "Name of the backup from which to restore. Values are of the form `projects//instances//clusters//backups/`.",
          "type": "string"
        },
        "tableId": {
          "type": "string",
          "description": "Required. The id of the table to create and restore to. This table must not already exist. The `table_id` appended to `parent` forms the full table name of the form `projects//instances//tables/`."
        }
      },
      "id": "RestoreTableRequest",
      "description": "The request for RestoreTable.",
      "type": "object"
    },
    "CreateClusterRequest": {
      "description": "Request message for BigtableInstanceAdmin.CreateCluster.",
      "type": "object",
      "id": "CreateClusterRequest",
      "properties": {
        "parent": {
          "description": "Required. The unique name of the instance in which to create the new cluster. Values are of the form `projects/{project}/instances/{instance}`.",
          "type": "string"
        },
        "clusterId": {
          "description": "Required. The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`.",
          "type": "string"
        },
        "cluster": {
          "$ref": "Cluster",
          "description": "Required. The cluster to be created. Fields marked `OutputOnly` must be left blank."
        }
      }
    },
    "ColumnFamilyStats": {
      "type": "object",
      "description": "Approximate statistics related to a single column family within a table. This information may change rapidly, interpreting these values at a point in time may already preset out-of-date information. Everything below is approximate, unless otherwise specified.",
      "properties": {
        "averageColumnsPerRow": {
          "format": "double",
          "type": "number",
          "description": "How many column qualifiers are present in this column family, averaged over all rows in the table. e.g. For column family \"family\" in a table with 3 rows: * A row with cells in \"family:col\" and \"other:col\" (1 column in \"family\") * A row with cells in \"family:col\", \"family:other_col\", and \"other:data\" (2 columns in \"family\") * A row with cells in \"other:col\" (0 columns in \"family\", \"family\" not present) would report (1 + 2 + 0)/3 = 1.5 in this field."
        },
        "averageCellsPerColumn": {
          "description": "How many cells are present per column qualifier in this column family, averaged over all rows containing any column in the column family. e.g. For column family \"family\" in a table with 3 rows: * A row with 3 cells in \"family:col\" and 1 cell in \"other:col\" (3 cells / 1 column in \"family\") * A row with 1 cell in \"family:col\", 7 cells in \"family:other_col\", and 7 cells in \"other:data\" (8 cells / 2 columns in \"family\") * A row with 3 cells in \"other:col\" (0 columns in \"family\", \"family\" not present) would report (3 + 8 + 0)/(1 + 2 + 0) = 3.66 in this field.",
          "type": "number",
          "format": "double"
        },
        "logicalDataBytes": {
          "description": "How much space the data in the column family occupies. This is roughly how many bytes would be needed to read the contents of the entire column family (e.g. by streaming all contents out).",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "ColumnFamilyStats"
    },
    "DropRowRangeRequest": {
      "id": "DropRowRangeRequest",
      "properties": {
        "rowKeyPrefix": {
          "format": "byte",
          "type": "string",
          "description": "Delete all rows that start with this row key prefix. Prefix cannot be zero length."
        },
        "deleteAllDataFromTable": {
          "description": "Delete all rows in the table. Setting this to false is a no-op.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange"
    },
    "UndeleteTableRequest": {
      "id": "UndeleteTableRequest",
      "type": "object",
      "properties": {},
      "description": "Request message for google.bigtable.admin.v2.BigtableTableAdmin.UndeleteTable"
    },
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "id": "AuditConfig",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "type": "array",
          "description": "The configuration for logging of each type of permission."
        }
      }
    },
    "CreateInstanceMetadata": {
      "properties": {
        "finishTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the operation failed or was completed successfully."
        },
        "requestTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the original request was received."
        },
        "originalRequest": {
          "description": "The request that prompted the initiation of this CreateInstance operation.",
          "$ref": "CreateInstanceRequest"
        }
      },
      "description": "The metadata for the Operation returned by CreateInstance.",
      "id": "CreateInstanceMetadata",
      "type": "object"
    },
    "HotTablet": {
      "properties": {
        "nodeCpuUsagePercent": {
          "format": "float",
          "readOnly": true,
          "description": "Output only. The average CPU usage spent by a node on this tablet over the start_time to end_time time range. The percentage is the amount of CPU used by the node to serve the tablet, from 0% (tablet was not interacted with) to 100% (the node spent all cycles serving the hot tablet).",
          "type": "number"
        },
        "tableName": {
          "description": "Name of the table that contains the tablet. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`.",
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The end time of the hot tablet."
        },
        "startTime": {
          "readOnly": true,
          "description": "Output only. The start time of the hot tablet.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "The unique name of the hot tablet. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/hotTablets/[a-zA-Z0-9_-]*`.",
          "type": "string"
        },
        "endKey": {
          "type": "string",
          "description": "Tablet End Key (inclusive)."
        },
        "startKey": {
          "type": "string",
          "description": "Tablet Start Key (inclusive)."
        }
      },
      "id": "HotTablet",
      "type": "object",
      "description": "A tablet is a defined by a start and end key and is explained in https://cloud.google.com/bigtable/docs/overview#architecture and https://cloud.google.com/bigtable/docs/performance#optimization. A Hot tablet is a tablet that exhibits high average cpu usage during the time interval from start time to end time."
    },
    "EncryptionInfo": {
      "description": "Encryption information for a given resource. If this resource is protected with customer managed encryption, the in-use Cloud Key Management Service (Cloud KMS) key version is specified along with its status.",
      "properties": {
        "encryptionType": {
          "type": "string",
          "enumDescriptions": [
            "Encryption type was not specified, though data at rest remains encrypted.",
            "The data backing this resource is encrypted at rest with a key that is fully managed by Google. No key version or status will be populated. This is the default state.",
            "The data backing this resource is encrypted at rest with a key that is managed by the customer. The in-use version of the key and its status are populated for CMEK-protected tables. CMEK-protected backups are pinned to the key version that was in use at the time the backup was taken. This key version is populated but its status is not tracked and is reported as `UNKNOWN`."
          ],
          "description": "Output only. The type of encryption used to protect this resource.",
          "enum": [
            "ENCRYPTION_TYPE_UNSPECIFIED",
            "GOOGLE_DEFAULT_ENCRYPTION",
            "CUSTOMER_MANAGED_ENCRYPTION"
          ],
          "readOnly": true
        },
        "encryptionStatus": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest."
        },
        "kmsKeyVersion": {
          "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "EncryptionInfo"
    },
    "Intersection": {
      "id": "Intersection",
      "type": "object",
      "properties": {
        "rules": {
          "description": "Only delete cells which would be deleted by every element of `rules`.",
          "type": "array",
          "items": {
            "$ref": "GcRule"
          }
        }
      },
      "description": "A GcRule which deletes cells matching all of the given rules."
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        },
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "description": "The log type that this config enables."
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "CreateInstanceRequest": {
      "id": "CreateInstanceRequest",
      "type": "object",
      "description": "Request message for BigtableInstanceAdmin.CreateInstance.",
      "properties": {
        "clusters": {
          "type": "object",
          "description": "Required. The clusters to be created within the instance, mapped by desired cluster ID, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`. Fields marked `OutputOnly` must be left blank.",
          "additionalProperties": {
            "$ref": "Cluster"
          }
        },
        "instanceId": {
          "type": "string",
          "description": "Required. The ID to be used when referring to the new instance within its project, e.g., just `myinstance` rather than `projects/myproject/instances/myinstance`."
        },
        "parent": {
          "description": "Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`.",
          "type": "string"
        },
        "instance": {
          "description": "Required. The instance to create. Fields marked `OutputOnly` must be left blank.",
          "$ref": "Instance"
        }
      }
    },
    "UpdateInstanceMetadata": {
      "description": "The metadata for the Operation returned by UpdateInstance.",
      "id": "UpdateInstanceMetadata",
      "properties": {
        "finishTime": {
          "description": "The time at which the operation failed or was completed successfully.",
          "format": "google-datetime",
          "type": "string"
        },
        "originalRequest": {
          "$ref": "PartialUpdateInstanceRequest",
          "description": "The request that prompted the initiation of this UpdateInstance operation."
        },
        "requestTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time at which the original request was received."
        }
      },
      "type": "object"
    },
    "GetIamPolicyRequest": {
      "properties": {
        "options": {
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.",
          "$ref": "GetPolicyOptions"
        }
      },
      "type": "object",
      "description": "Request message for `GetIamPolicy` method.",
      "id": "GetIamPolicyRequest"
    },
    "ListAppProfilesResponse": {
      "type": "object",
      "description": "Response message for BigtableInstanceAdmin.ListAppProfiles.",
      "id": "ListAppProfilesResponse",
      "properties": {
        "failedLocations": {
          "items": {
            "type": "string"
          },
          "description": "Locations from which AppProfile information could not be retrieved, due to an outage or some other transient condition. AppProfiles from these locations may be missing from `app_profiles`. Values are of the form `projects//locations/`",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Set if not all app profiles could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.",
          "type": "string"
        },
        "appProfiles": {
          "type": "array",
          "description": "The list of requested app profiles.",
          "items": {
            "$ref": "AppProfile"
          }
        }
      }
    },
    "AppProfile": {
      "type": "object",
      "description": "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.",
      "properties": {
        "singleClusterRouting": {
          "$ref": "SingleClusterRouting",
          "description": "Use a single-cluster routing policy."
        },
        "description": {
          "description": "Long form description of the use case for this AppProfile.",
          "type": "string"
        },
        "multiClusterRoutingUseAny": {
          "description": "Use a multi-cluster routing policy.",
          "$ref": "MultiClusterRoutingUseAny"
        },
        "etag": {
          "type": "string",
          "description": "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details."
        },
        "name": {
          "description": "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.",
          "type": "string"
        }
      },
      "id": "AppProfile"
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        }
      }
    },
    "GetPolicyOptions": {
      "id": "GetPolicyOptions",
      "properties": {
        "requestedPolicyVersion": {
          "format": "int32",
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        }
      },
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object"
    },
    "Instance": {
      "type": "object",
      "description": "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. A server-assigned timestamp representing when this Instance was created. For instances created before this field was added (August 2021), this value is `seconds: 0, nanos: 1`."
        },
        "type": {
          "description": "The type of the instance. Defaults to `PRODUCTION`.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRODUCTION",
            "DEVELOPMENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged.",
            "An instance meant for production use. `serve_nodes` must be set on the cluster.",
            "DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT."
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion."
        },
        "satisfiesPzs": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Reserved for future use."
        },
        "labels": {
          "description": "Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "state": {
          "type": "string",
          "description": "Output only. The current state of the instance.",
          "readOnly": true,
          "enum": [
            "STATE_NOT_KNOWN",
            "READY",
            "CREATING"
          ],
          "enumDescriptions": [
            "The state of the instance could not be determined.",
            "The instance has been successfully created and can serve requests to its tables.",
            "The instance is currently being created, and may be destroyed if the creation process encounters an error."
          ]
        },
        "name": {
          "type": "string",
          "description": "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`."
        }
      },
      "id": "Instance"
    },
    "TableProgress": {
      "type": "object",
      "properties": {
        "estimatedSizeBytes": {
          "description": "Estimate of the size of the table to be copied.",
          "type": "string",
          "format": "int64"
        },
        "estimatedCopiedBytes": {
          "description": "Estimate of the number of bytes copied so far for this table. This will eventually reach 'estimated_size_bytes' unless the table copy is CANCELLED.",
          "format": "int64",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "COPYING",
            "COMPLETED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "",
            "The table has not yet begun copying to the new cluster.",
            "The table is actively being copied to the new cluster.",
            "The table has been fully copied to the new cluster.",
            "The table was deleted before it finished copying to the new cluster. Note that tables deleted after completion will stay marked as COMPLETED, not CANCELLED."
          ],
          "type": "string"
        }
      },
      "id": "TableProgress",
      "description": "Progress info for copying a table's data to the new cluster."
    },
    "Backup": {
      "description": "A backup of a Cloud Bigtable table.",
      "properties": {
        "state": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state.",
            "The backup is complete and ready for use."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY"
          ],
          "description": "Output only. The current state of the backup."
        },
        "sourceTable": {
          "type": "string",
          "description": "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`."
        },
        "sizeBytes": {
          "description": "Output only. Size of the backup in bytes.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."
        },
        "encryptionInfo": {
          "readOnly": true,
          "$ref": "EncryptionInfo",
          "description": "Output only. The encryption information for the backup."
        },
        "sourceBackup": {
          "description": "Output only. Name of the backup from which this backup was copied. If a backup is not created by copying a backup, this field will be empty. Values are of the form: projects//instances//backups/.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp.",
          "format": "google-datetime",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp.",
          "readOnly": true
        },
        "expireTime": {
          "description": "Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "Backup",
      "type": "object"
    },
    "ClusterConfig": {
      "properties": {
        "clusterAutoscalingConfig": {
          "$ref": "ClusterAutoscalingConfig",
          "description": "Autoscaling configuration for this cluster."
        }
      },
      "type": "object",
      "description": "Configuration for a cluster.",
      "id": "ClusterConfig"
    },
    "OperationProgress": {
      "description": "Encapsulates progress related information for a Cloud Bigtable long running operation.",
      "id": "OperationProgress",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "If set, the time at which this operation failed or was completed successfully."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time the request was received."
        },
        "progressPercent": {
          "description": "Percent completion of the operation. Values are between 0 and 100 inclusive.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RestoreInfo": {
      "type": "object",
      "properties": {
        "backupInfo": {
          "$ref": "BackupInfo",
          "description": "Information about the backup used to restore the table. The backup may no longer exist."
        },
        "sourceType": {
          "enum": [
            "RESTORE_SOURCE_TYPE_UNSPECIFIED",
            "BACKUP"
          ],
          "type": "string",
          "description": "The type of the restore source.",
          "enumDescriptions": [
            "No restore associated.",
            "A backup was used as the source of the restore."
          ]
        }
      },
      "description": "Information about a table restore.",
      "id": "RestoreInfo"
    },
    "GcRule": {
      "properties": {
        "intersection": {
          "description": "Delete cells that would be deleted by every nested rule.",
          "$ref": "Intersection"
        },
        "union": {
          "$ref": "Union",
          "description": "Delete cells that would be deleted by any nested rule."
        },
        "maxNumVersions": {
          "description": "Delete all cells in a column except the most recent N.",
          "format": "int32",
          "type": "integer"
        },
        "maxAge": {
          "type": "string",
          "description": "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity.",
          "format": "google-duration"
        }
      },
      "description": "Rule for determining which cells to delete during garbage collection.",
      "id": "GcRule",
      "type": "object"
    },
    "CheckConsistencyResponse": {
      "description": "Response message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency",
      "type": "object",
      "id": "CheckConsistencyResponse",
      "properties": {
        "consistent": {
          "type": "boolean",
          "description": "True only if the token is consistent. A token is consistent if replication has caught up with the restrictions specified in the request."
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "name": "bigtableadmin",
  "version": "v2",
  "rootUrl": "https://bigtableadmin.googleapis.com/",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "discoveryVersion": "v1",
  "description": "Administer your Cloud Bigtable tables and instances.",
  "basePath": "",
  "title": "Cloud Bigtable Admin API",
  "documentationLink": "https://cloud.google.com/bigtable/",
  "ownerDomain": "google.com",
  "servicePath": ""
}

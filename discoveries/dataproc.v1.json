{
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "autoscalingPolicies": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The \"resource name\" of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.create, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.create, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "required": true
                    }
                  },
                  "id": "dataproc.projects.locations.autoscalingPolicies.create",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies",
                  "request": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/autoscalingPolicies",
                  "description": "Creates new autoscaling policy.",
                  "response": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "id": "dataproc.projects.locations.autoscalingPolicies.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions"
                },
                "getIamPolicy": {
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "dataproc.projects.locations.autoscalingPolicies.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by one or more clusters.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.delete, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies.delete, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "id": "dataproc.projects.locations.autoscalingPolicies.delete",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}"
                },
                "update": {
                  "request": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PUT",
                  "description": "Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be full replacements.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dataproc.projects.locations.autoscalingPolicies.update",
                  "response": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$"
                    }
                  }
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.locations.autoscalingPolicies.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListAutoscalingPoliciesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The \"resource name\" of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.list, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.list, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum number of results to return in each response. Must be less than or equal to 1000. Defaults to 100.",
                      "format": "int32"
                    }
                  },
                  "path": "v1/{+parent}/autoscalingPolicies",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies",
                  "id": "dataproc.projects.locations.autoscalingPolicies.list",
                  "description": "Lists autoscaling policies in the project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.get, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies.get, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/autoscalingPolicies/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "description": "Retrieves autoscaling policy.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/autoscalingPolicies/{autoscalingPoliciesId}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.locations.autoscalingPolicies.get"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "dataproc.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "cancel": {
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:cancel"
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations$",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.locations.operations.list",
                  "path": "v1/{+name}"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "id": "dataproc.projects.locations.operations.delete"
                }
              }
            },
            "workflowTemplates": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dataproc.projects.locations.workflowTemplates.list",
                  "path": "v1/{+parent}/workflowTemplates",
                  "description": "Lists workflows that match the specified filter in the request.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results."
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of results to return in each response.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,list, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.list, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListWorkflowTemplatesResponse"
                  }
                },
                "setIamPolicy": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "dataproc.projects.locations.workflowTemplates.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy"
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "id": "dataproc.projects.locations.workflowTemplates.testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions"
                },
                "instantiateInline": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates:instantiateInline",
                  "description": "Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/workflowTemplates:instantiateInline",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,instantiateinline, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.instantiateinline, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dataproc.projects.locations.workflowTemplates.instantiateInline"
                },
                "getIamPolicy": {
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "dataproc.projects.locations.workflowTemplates.getIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "update": {
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "id": "dataproc.projects.locations.workflowTemplates.update",
                  "path": "v1/{+name}",
                  "httpMethod": "PUT",
                  "description": "Updates (replaces) workflow template. The updated template must contain version that matches the current server version."
                },
                "instantiate": {
                  "request": {
                    "$ref": "InstantiateWorkflowTemplateRequest"
                  },
                  "id": "dataproc.projects.locations.workflowTemplates.instantiate",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}:instantiate",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
                  "path": "v1/{+name}:instantiate",
                  "httpMethod": "POST"
                },
                "delete": {
                  "description": "Deletes a workflow template. It does not cancel in-progress workflows.",
                  "id": "dataproc.projects.locations.workflowTemplates.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.delete, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Optional. The version of workflow template to delete. If specified, will only delete the template if the current server version matches specified version.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.",
                  "parameters": {
                    "version": {
                      "type": "integer",
                      "description": "Optional. The version of workflow template to retrieve. Only previously instantiated versions can be retrieved.If unspecified, retrieves the current version.",
                      "location": "query",
                      "format": "int32"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/workflowTemplates/[^/]+$",
                      "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.get, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.get, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates/{workflowTemplatesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "dataproc.projects.locations.workflowTemplates.get"
                },
                "create": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/workflowTemplates",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/workflowTemplates",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "id": "dataproc.projects.locations.workflowTemplates.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.create, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.create, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates new workflow template."
                }
              }
            },
            "batches": {
              "methods": {
                "get": {
                  "id": "dataproc.projects.locations.batches.get",
                  "parameters": {
                    "name": {
                      "description": "Required. The fully qualified name of the batch to retrieve in the format \"projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+/batches/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batches/{batchesId}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the batch workload resource representation.",
                  "response": {
                    "$ref": "Batch"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batches/{batchesId}",
                  "parameters": {
                    "name": {
                      "description": "Required. The fully qualified name of the batch to retrieve in the format \"projects/PROJECT_ID/locations/DATAPROC_REGION/batches/BATCH_ID\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/batches/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "dataproc.projects.locations.batches.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes the batch workload resource. If the batch is not in terminal state, the delete fails and the response returns FAILED_PRECONDITION.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a batch workload that executes asynchronously.",
                  "request": {
                    "$ref": "Batch"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/batches",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "dataproc.projects.locations.batches.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batches",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A unique ID used to identify the request. If the service receives two CreateBatchRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateBatchRequest)s with the same request_id, the second request is ignored and the Operation that corresponds to the first Batch created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "batchId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The ID to use for the batch, which will become the final component of the batch's resource name.This value must be 4-63 characters. Valid characters are /[a-z][0-9]-/."
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource where this batch will be created.",
                      "required": true
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/batches",
                  "description": "Lists batch workloads.",
                  "id": "dataproc.projects.locations.batches.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum number of batches to return in each response. The service may return fewer than this value. The default page size is 20; the maximum page size is 1000.",
                      "type": "integer"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent, which owns this collection of batches."
                    },
                    "pageToken": {
                      "description": "Optional. A page token received from a previous ListBatches call. Provide this token to retrieve the subsequent page.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListBatchesResponse"
                  },
                  "path": "v1/{+parent}/batches"
                }
              }
            }
          }
        },
        "regions": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "dataproc.projects.regions.operations.cancel",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:cancel",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "dataproc.projects.regions.operations.setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST"
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "id": "dataproc.projects.regions.operations.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "dataproc.projects.regions.operations.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}:getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  }
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dataproc.projects.regions.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "dataproc.projects.regions.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/regions/[^/]+/operations$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns UNIMPLEMENTED.NOTE: the name binding allows API services to override the binding to use different resource name schemes, such as users/*/operations. To override the binding, API services can add a binding such as \"/v1/{name=users/*}/operations\" to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.regions.operations.list",
                  "path": "v1/{+name}"
                }
              }
            },
            "workflowTemplates": {
              "methods": {
                "update": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}",
                  "path": "v1/{+name}",
                  "id": "dataproc.projects.regions.workflowTemplates.update",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates (replaces) workflow template. The updated template must contain version that matches the current server version.",
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "description": "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "PUT",
                  "response": {
                    "$ref": "WorkflowTemplate"
                  }
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "dataproc.projects.regions.workflowTemplates.setIamPolicy"
                },
                "delete": {
                  "description": "Deletes a workflow template. It does not cancel in-progress workflows.",
                  "id": "dataproc.projects.regions.workflowTemplates.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "version": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The version of workflow template to delete. If specified, will only delete the template if the current server version matches specified version."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.delete, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.create, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.create, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "required": true
                    }
                  },
                  "id": "dataproc.projects.regions.workflowTemplates.create",
                  "description": "Creates new workflow template.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "path": "v1/{+parent}/workflowTemplates"
                },
                "instantiateInline": {
                  "id": "dataproc.projects.regions.workflowTemplates.instantiateInline",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,instantiateinline, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.instantiateinline, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "WorkflowTemplate"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates:instantiateInline",
                  "path": "v1/{+parent}/workflowTemplates:instantiateInline"
                },
                "get": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.",
                  "response": {
                    "$ref": "WorkflowTemplate"
                  },
                  "parameters": {
                    "version": {
                      "description": "Optional. The version of workflow template to retrieve. Only previously instantiated versions can be retrieved.If unspecified, retrieves the current version.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.get, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.get, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dataproc.projects.regions.workflowTemplates.get",
                  "httpMethod": "GET"
                },
                "instantiate": {
                  "id": "dataproc.projects.regions.workflowTemplates.instantiate",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:instantiate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "InstantiateWorkflowTemplateRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:instantiate"
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "id": "dataproc.projects.regions.workflowTemplates.getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:getIamPolicy"
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates/{workflowTemplatesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.regions.workflowTemplates.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/regions/[^/]+/workflowTemplates/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/workflowTemplates",
                  "path": "v1/{+parent}/workflowTemplates",
                  "id": "dataproc.projects.regions.workflowTemplates.list",
                  "response": {
                    "$ref": "ListWorkflowTemplatesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists workflows that match the specified filter in the request.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,list, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.list, the resource name of the location has the following format: projects/{project_id}/locations/{location}"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum number of results to return in each response."
                    }
                  }
                }
              }
            },
            "clusters": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "Cluster"
                  },
                  "parameters": {
                    "clusterName": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The cluster name."
                    },
                    "projectId": {
                      "type": "string",
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "required": true,
                      "location": "path"
                    },
                    "region": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "required": true
                    }
                  },
                  "id": "dataproc.projects.regions.clusters.get",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the resource representation for a cluster in a project.",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ]
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "dataproc.projects.regions.clusters.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:setIamPolicy"
                },
                "stop": {
                  "request": {
                    "$ref": "StopClusterRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
                      "type": "string"
                    },
                    "region": {
                      "type": "string",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true
                    },
                    "clusterName": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The cluster name.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "dataproc.projects.regions.clusters.stop",
                  "description": "Stops a cluster in a project.",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:stop"
                },
                "patch": {
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "description": "Updates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). The cluster must be in a RUNNING state or an error is returned.",
                  "id": "dataproc.projects.regions.clusters.patch",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two UpdateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.UpdateClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Specifies the path, relative to Cluster, of the field to update. For example, to change the number of workers in a cluster to 5, the update_mask parameter would be specified as config.worker_config.num_instances, and the PATCH request body would specify the new value, as follows: { \"config\":{ \"workerConfig\":{ \"numInstances\":\"5\" } } } Similarly, to change the number of preemptible workers in a cluster to 5, the update_mask parameter would be config.secondary_worker_config.num_instances, and the PATCH request body would be set as follows: { \"config\":{ \"secondaryWorkerConfig\":{ \"numInstances\":\"5\" } } } *Note:* Currently, only the following fields can be updated: *Mask* *Purpose* *labels* Update labels *config.worker_config.num_instances* Resize primary worker group *config.secondary_worker_config.num_instances* Resize secondary worker group config.autoscaling_config.policy_uri Use, stop using, or change autoscaling policies ",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "gracefulDecommissionTimeout": {
                      "location": "query",
                      "description": "Optional. Timeout for graceful YARN decomissioning. Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress. Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only supported on Dataproc image versions 1.2 and higher.",
                      "type": "string",
                      "format": "google-duration"
                    },
                    "region": {
                      "location": "path",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "type": "string",
                      "required": true
                    },
                    "clusterName": {
                      "required": true,
                      "description": "Required. The cluster name.",
                      "type": "string",
                      "location": "path"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Cluster"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "httpMethod": "PATCH"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists all regions/{region}/clusters in a project alphabetically.",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "Optional. A filter constraining the clusters to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is one of status.state, clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be one of the following: ACTIVE, INACTIVE, CREATING, RUNNING, ERROR, DELETING, or UPDATING. ACTIVE contains the CREATING, UPDATING, and RUNNING states. INACTIVE contains the DELETING and ERROR states. clusterName is the name of the cluster provided at creation time. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND clusterName = mycluster AND labels.env = staging AND labels.starred = *",
                      "location": "query"
                    },
                    "region": {
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "Optional. The standard List page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The standard List page size.",
                      "type": "integer"
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "dataproc.projects.regions.clusters.list",
                  "response": {
                    "$ref": "ListClustersResponse"
                  },
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters"
                },
                "testIamPermissions": {
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "dataproc.projects.regions.clusters.testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "dataproc.projects.regions.clusters.getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/regions/[^/]+/clusters/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  }
                },
                "create": {
                  "description": "Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.regions.clusters.create",
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two CreateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "actionOnFailedPrimaryWorkers": {
                      "enum": [
                        "FAILURE_ACTION_UNSPECIFIED",
                        "NO_ACTION",
                        "DELETE"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "When FailureAction is unspecified, failure action defaults to NO_ACTION.",
                        "Take no action on failure to create a cluster resource. NO_ACTION is the default.",
                        "Delete the failed cluster resource."
                      ],
                      "description": "Optional. Failure action when primary worker creation fails.",
                      "location": "query"
                    },
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to."
                    },
                    "region": {
                      "location": "path",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Cluster"
                  },
                  "httpMethod": "POST"
                },
                "start": {
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:start",
                  "id": "dataproc.projects.regions.clusters.start",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:start",
                  "parameters": {
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "region": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The Dataproc region in which to handle the request."
                    },
                    "clusterName": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The cluster name.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "StartClusterRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Starts a cluster in a project."
                },
                "repair": {
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:repair",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:repair",
                  "description": "Repairs a cluster.",
                  "id": "dataproc.projects.regions.clusters.repair",
                  "httpMethod": "POST",
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to.",
                      "type": "string",
                      "required": true
                    },
                    "region": {
                      "location": "path",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "required": true,
                      "type": "string"
                    },
                    "clusterName": {
                      "location": "path",
                      "description": "Required. The cluster name.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "request": {
                    "$ref": "RepairClusterRequest"
                  }
                },
                "injectCredentials": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "InjectCredentialsRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/clusters/{clustersId}:injectCredentials",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "project",
                    "region",
                    "cluster"
                  ],
                  "parameters": {
                    "cluster": {
                      "description": "Required. The cluster, in the form clusters/.",
                      "required": true,
                      "type": "string",
                      "pattern": "^clusters/[^/]+$",
                      "location": "path"
                    },
                    "region": {
                      "description": "Required. The region containing the cluster, of the form regions/.",
                      "location": "path",
                      "required": true,
                      "pattern": "^regions/[^/]+$",
                      "type": "string"
                    },
                    "project": {
                      "type": "string",
                      "pattern": "^projects/[^/]+$",
                      "description": "Required. The ID of the Google Cloud Platform project the cluster belongs to, of the form projects/.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a personal auth cluster assigned to the user who is issuing the RPC.",
                  "id": "dataproc.projects.regions.clusters.injectCredentials",
                  "path": "v1/{+project}/{+region}/{+cluster}:injectCredentials"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to.",
                      "location": "path",
                      "required": true
                    },
                    "clusterUuid": {
                      "location": "query",
                      "description": "Optional. Specifying the cluster_uuid means the RPC should fail (with error NOT_FOUND) if cluster with specified UUID does not exist.",
                      "type": "string"
                    },
                    "clusterName": {
                      "description": "Required. The cluster name.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two DeleteClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "region": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The Dataproc region in which to handle the request."
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}",
                  "id": "dataproc.projects.regions.clusters.delete",
                  "description": "Deletes a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}"
                },
                "diagnose": {
                  "request": {
                    "$ref": "DiagnoseClusterRequest"
                  },
                  "flatPath": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose",
                  "parameters": {
                    "clusterName": {
                      "description": "Required. The cluster name.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The ID of the Google Cloud Platform project that the cluster belongs to."
                    },
                    "region": {
                      "required": true,
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "clusterName"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.regions.clusters.diagnose",
                  "description": "Gets cluster diagnostic information. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#diagnoseclusterresults).",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose"
                }
              }
            },
            "autoscalingPolicies": {
              "methods": {
                "get": {
                  "id": "dataproc.projects.regions.autoscalingPolicies.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.get, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies.get, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}",
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "description": "Retrieves autoscaling policy.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}",
                  "httpMethod": "GET"
                },
                "update": {
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "location": "path",
                      "description": "Output only. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "id": "dataproc.projects.regions.autoscalingPolicies.update",
                  "description": "Updates (replaces) autoscaling policy.Disabled check for update_mask, because all updates will be full replacements.",
                  "httpMethod": "PUT",
                  "response": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes an autoscaling policy. It is an error to delete an autoscaling policy that is in use by one or more clusters.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "type": "string",
                      "description": "Required. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.delete, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies.delete, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "dataproc.projects.regions.autoscalingPolicies.delete"
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "dataproc.projects.regions.autoscalingPolicies.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:testIamPermissions"
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "id": "dataproc.projects.regions.autoscalingPolicies.setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "response": {
                    "$ref": "AutoscalingPolicy"
                  },
                  "description": "Creates new autoscaling policy.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies",
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.autoscalingPolicies.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/autoscalingPolicies",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The \"resource name\" of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.create, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.create, the resource name of the location has the following format: projects/{project_id}/locations/{location}",
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/regions/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The \"resource name\" of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.list, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.list, the resource name of the location has the following format: projects/{project_id}/locations/{location}"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. The maximum number of results to return in each response. Must be less than or equal to 1000. Defaults to 100.",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results."
                    }
                  },
                  "description": "Lists autoscaling policies in the project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/autoscalingPolicies",
                  "response": {
                    "$ref": "ListAutoscalingPoliciesResponse"
                  },
                  "id": "dataproc.projects.regions.autoscalingPolicies.list",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies"
                },
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/regions/[^/]+/autoscalingPolicies/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/autoscalingPolicies/{autoscalingPoliciesId}:getIamPolicy",
                  "id": "dataproc.projects.regions.autoscalingPolicies.getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  }
                }
              }
            },
            "jobs": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "path": "v1/projects/{projectId}/regions/{region}/jobs",
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "parameters": {
                    "clusterName": {
                      "description": "Optional. If set, the returned jobs list includes only jobs that were submitted to the named cluster.",
                      "location": "query",
                      "type": "string"
                    },
                    "projectId": {
                      "location": "path",
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "type": "string",
                      "required": true
                    },
                    "filter": {
                      "description": "Optional. A filter constraining the jobs to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is status.state or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be either ACTIVE or NON_ACTIVE. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *",
                      "location": "query",
                      "type": "string"
                    },
                    "jobStateMatcher": {
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "ALL",
                        "ACTIVE",
                        "NON_ACTIVE"
                      ],
                      "description": "Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).If filter is provided, jobStateMatcher will be ignored.",
                      "enumDescriptions": [
                        "Match all jobs, regardless of state.",
                        "Only match jobs in non-terminal states: PENDING, RUNNING, or CANCEL_PENDING.",
                        "Only match jobs in terminal states: CANCELLED, DONE, or ERROR."
                      ]
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. The page token, returned by a previous call, to request the next page of results.",
                      "type": "string"
                    },
                    "region": {
                      "required": true,
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Optional. The number of results to return in each response.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "id": "dataproc.projects.regions.jobs.list",
                  "description": "Lists regions/{region}/jobs in a project.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "description": "Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or regions/{region}/jobs.get (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).",
                  "response": {
                    "$ref": "Job"
                  },
                  "parameters": {
                    "region": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "required": true
                    },
                    "jobId": {
                      "location": "path",
                      "description": "Required. The job ID.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to."
                    }
                  },
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel",
                  "request": {
                    "$ref": "CancelJobRequest"
                  },
                  "id": "dataproc.projects.regions.jobs.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ]
                },
                "get": {
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "response": {
                    "$ref": "Job"
                  },
                  "id": "dataproc.projects.regions.jobs.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "projectId": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path"
                    },
                    "jobId": {
                      "location": "path",
                      "description": "Required. The job ID.",
                      "required": true,
                      "type": "string"
                    },
                    "region": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "description": "Gets the resource representation for a job in a project."
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "dataproc.projects.regions.jobs.setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "submit": {
                  "request": {
                    "$ref": "SubmitJobRequest"
                  },
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "response": {
                    "$ref": "Job"
                  },
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs:submit",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs:submit",
                  "parameters": {
                    "projectId": {
                      "type": "string",
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "required": true
                    },
                    "region": {
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "dataproc.projects.regions.jobs.submit",
                  "description": "Submits a job to a cluster."
                },
                "testIamPermissions": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "dataproc.projects.regions.jobs.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/regions/{regionsId}/jobs/{jobsId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/regions/[^/]+/jobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "dataproc.projects.regions.jobs.getIamPolicy"
                },
                "patch": {
                  "description": "Updates a job in a project.",
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "response": {
                    "$ref": "Job"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "id": "dataproc.projects.regions.jobs.patch",
                  "parameters": {
                    "jobId": {
                      "location": "path",
                      "description": "Required. The job ID.",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. Specifies the path, relative to Job, of the field to update. For example, to update the labels of a Job the update_mask parameter would be specified as labels, and the PATCH request body would specify the new value. *Note:* Currently, labels is the only field that can be updated.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "region": {
                      "type": "string",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "request": {
                    "$ref": "Job"
                  }
                },
                "delete": {
                  "id": "dataproc.projects.regions.jobs.delete",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.",
                  "parameterOrder": [
                    "projectId",
                    "region",
                    "jobId"
                  ],
                  "path": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "parameters": {
                    "region": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "required": true
                    },
                    "projectId": {
                      "required": true,
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to.",
                      "location": "path",
                      "type": "string"
                    },
                    "jobId": {
                      "description": "Required. The job ID.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs/{jobId}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "submitAsOperation": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "region"
                  ],
                  "path": "v1/projects/{projectId}/regions/{region}/jobs:submitAsOperation",
                  "flatPath": "v1/projects/{projectId}/regions/{region}/jobs:submitAsOperation",
                  "httpMethod": "POST",
                  "description": "Submits job to a cluster.",
                  "request": {
                    "$ref": "SubmitJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The ID of the Google Cloud Platform project that the job belongs to."
                    },
                    "region": {
                      "description": "Required. The Dataproc region in which to handle the request.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "dataproc.projects.regions.jobs.submitAsOperation"
                }
              }
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://dataproc.mtls.googleapis.com/",
  "rootUrl": "https://dataproc.googleapis.com/",
  "baseUrl": "https://dataproc.googleapis.com/",
  "ownerDomain": "google.com",
  "schemas": {
    "InstantiateWorkflowTemplateRequest": {
      "type": "object",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Map from parameter names to values that should be used for those parameters. Values may not exceed 1000 characters."
        },
        "version": {
          "format": "int32",
          "description": "Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.This option cannot be used to instantiate a previous version of workflow template.",
          "type": "integer"
        },
        "requestId": {
          "description": "Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
          "type": "string"
        }
      },
      "description": "A request to instantiate a workflow template.",
      "id": "InstantiateWorkflowTemplateRequest"
    },
    "CancelJobRequest": {
      "description": "A request to cancel a job.",
      "id": "CancelJobRequest",
      "type": "object",
      "properties": {}
    },
    "DataprocMetricConfig": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "Metric"
          },
          "description": "Required. Metrics sources to enable."
        }
      },
      "id": "DataprocMetricConfig",
      "description": "Dataproc metric config."
    },
    "StopClusterRequest": {
      "type": "object",
      "description": "A request to stop a cluster.",
      "id": "StopClusterRequest",
      "properties": {
        "clusterUuid": {
          "type": "string",
          "description": "Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. A unique ID used to identify the request. If the server receives two StopClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StopClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
        }
      }
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } ",
      "type": "object",
      "id": "Empty"
    },
    "ReservationAffinity": {
      "properties": {
        "key": {
          "description": "Optional. Corresponds to the label key of reservation resource.",
          "type": "string"
        },
        "consumeReservationType": {
          "description": "Optional. Type of reservation to consume",
          "type": "string",
          "enumDescriptions": [
            "",
            "Do not consume from any allocated capacity.",
            "Consume any reservation available.",
            "Must consume from a specific reservation. Must specify key value fields for specifying the reservations."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "NO_RESERVATION",
            "ANY_RESERVATION",
            "SPECIFIC_RESERVATION"
          ]
        },
        "values": {
          "type": "array",
          "description": "Optional. Corresponds to the label values of reservation resource.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Reservation Affinity for consuming Zonal reservation.",
      "type": "object",
      "id": "ReservationAffinity"
    },
    "Metric": {
      "id": "Metric",
      "properties": {
        "metricOverrides": {
          "type": "array",
          "description": "Optional. Specify one or more available OSS metrics (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) to collect for the metric course (for the SPARK metric source, any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics will be collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics will not be collected. The collection of the default metrics for other OSS metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all default YARN metrics will be collected.",
          "items": {
            "type": "string"
          }
        },
        "metricSource": {
          "type": "string",
          "description": "Required. Default metrics are collected unless metricOverrides are specified for the metric source (see Available OSS metrics (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) for more information).",
          "enumDescriptions": [
            "Required unspecified metric source.",
            "Default monitoring agent metrics. If this source is enabled, Dataproc enables the monitoring agent in Compute Engine, and collects default monitoring agent metrics, which are published with an agent.googleapis.com prefix.",
            "HDFS metric source.",
            "Spark metric source.",
            "YARN metric source.",
            "Spark History Server metric source.",
            "Hiveserver2 metric source."
          ],
          "enum": [
            "METRIC_SOURCE_UNSPECIFIED",
            "MONITORING_AGENT_DEFAULTS",
            "HDFS",
            "SPARK",
            "YARN",
            "SPARK_HISTORY_SERVER",
            "HIVESERVER2"
          ]
        }
      },
      "description": "A Dataproc OSS metric.",
      "type": "object"
    },
    "JobMetadata": {
      "id": "JobMetadata",
      "properties": {
        "operationType": {
          "type": "string",
          "description": "Output only. Operation type.",
          "readOnly": true
        },
        "jobId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The job id."
        },
        "startTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Job submission time."
        },
        "status": {
          "$ref": "JobStatus",
          "description": "Output only. Most recent job status.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Job Operation metadata."
    },
    "ClusterConfig": {
      "type": "object",
      "id": "ClusterConfig",
      "description": "The cluster config.",
      "properties": {
        "workerConfig": {
          "$ref": "InstanceGroupConfig",
          "description": "Optional. The Compute Engine config settings for the cluster's worker instances."
        },
        "initializationActions": {
          "description": "Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi ",
          "items": {
            "$ref": "NodeInitializationAction"
          },
          "type": "array"
        },
        "encryptionConfig": {
          "description": "Optional. Encryption settings for the cluster.",
          "$ref": "EncryptionConfig"
        },
        "metastoreConfig": {
          "$ref": "MetastoreConfig",
          "description": "Optional. Metastore configuration."
        },
        "masterConfig": {
          "$ref": "InstanceGroupConfig",
          "description": "Optional. The Compute Engine config settings for the cluster's master instance."
        },
        "securityConfig": {
          "$ref": "SecurityConfig",
          "description": "Optional. Security settings for the cluster."
        },
        "configBucket": {
          "description": "Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
          "type": "string"
        },
        "endpointConfig": {
          "description": "Optional. Port/endpoint configuration for this cluster",
          "$ref": "EndpointConfig"
        },
        "gkeClusterConfig": {
          "$ref": "GkeClusterConfig",
          "description": "Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. These config settings are mutually exclusive with Compute Engine-based options, such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config."
        },
        "dataprocMetricConfig": {
          "description": "Optional. The config for Dataproc metrics.",
          "$ref": "DataprocMetricConfig"
        },
        "softwareConfig": {
          "$ref": "SoftwareConfig",
          "description": "Optional. The config settings for cluster software."
        },
        "secondaryWorkerConfig": {
          "description": "Optional. The Compute Engine config settings for a cluster's secondary worker instances",
          "$ref": "InstanceGroupConfig"
        },
        "lifecycleConfig": {
          "$ref": "LifecycleConfig",
          "description": "Optional. Lifecycle setting for the cluster."
        },
        "gceClusterConfig": {
          "$ref": "GceClusterConfig",
          "description": "Optional. The shared Compute Engine config settings for all instances in a cluster."
        },
        "autoscalingConfig": {
          "description": "Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.",
          "$ref": "AutoscalingConfig"
        },
        "tempBucket": {
          "type": "string",
          "description": "Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket."
        }
      }
    },
    "HiveJob": {
      "type": "object",
      "description": "A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.",
      "id": "HiveJob",
      "properties": {
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "continueOnFailure": {
          "type": "boolean",
          "description": "Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries."
        },
        "scriptVariables": {
          "description": "Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name=\"value\";).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queryFileUri": {
          "type": "string",
          "description": "The HCFS URI of the script that contains Hive queries."
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.",
          "type": "object"
        }
      }
    },
    "SparkRBatch": {
      "type": "object",
      "description": "A configuration for running an Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) batch workload.",
      "properties": {
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "archiveUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array"
        },
        "mainRFileUri": {
          "description": "Required. The HCFS URI of the main R file to use as the driver. Must be a .R or .r file.",
          "type": "string"
        },
        "args": {
          "description": "Optional. The arguments to pass to the Spark driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "SparkRBatch"
    },
    "GceClusterConfig": {
      "description": "Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.",
      "properties": {
        "serviceAccount": {
          "description": "Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.",
          "type": "string"
        },
        "internalIpOnly": {
          "description": "Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.",
          "type": "boolean"
        },
        "networkUri": {
          "description": "Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the \"default\" network of the project is used, if it exists. Cannot be a \"Custom Subnet Network\" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default projects/[project_id]/regions/global/default default",
          "type": "string"
        },
        "zoneUri": {
          "description": "Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the \"global\" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] us-central1-f",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata))."
        },
        "tags": {
          "description": "The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shieldedInstanceConfig": {
          "$ref": "ShieldedInstanceConfig",
          "description": "Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm)."
        },
        "serviceAccountScopes": {
          "description": "Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reservationAffinity": {
          "$ref": "ReservationAffinity",
          "description": "Optional. Reservation Affinity for consuming Zonal reservation."
        },
        "nodeGroupAffinity": {
          "$ref": "NodeGroupAffinity",
          "description": "Optional. Node Group Affinity for sole-tenant clusters."
        },
        "subnetworkUri": {
          "type": "string",
          "description": "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0 projects/[project_id]/regions/us-east1/subnetworks/sub0 sub0"
        },
        "confidentialInstanceConfig": {
          "$ref": "ConfidentialInstanceConfig",
          "description": "Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)."
        },
        "privateIpv6GoogleAccess": {
          "enumDescriptions": [
            "If unspecified, Compute Engine default behavior will apply, which is the same as INHERIT_FROM_SUBNETWORK.",
            "Private access to and from Google Services configuration inherited from the subnetwork configuration. This is the default Compute Engine behavior.",
            "Enables outbound private IPv6 access to Google Services from the Dataproc cluster.",
            "Enables bidirectional private IPv6 access between Google Services and the Dataproc cluster."
          ],
          "type": "string",
          "description": "Optional. The type of IPv6 access for a cluster.",
          "enum": [
            "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED",
            "INHERIT_FROM_SUBNETWORK",
            "OUTBOUND",
            "BIDIRECTIONAL"
          ]
        }
      },
      "type": "object",
      "id": "GceClusterConfig"
    },
    "RegexValidation": {
      "properties": {
        "regexes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient)."
        }
      },
      "type": "object",
      "id": "RegexValidation",
      "description": "Validation based on regular expressions."
    },
    "BatchOperationMetadata": {
      "id": "BatchOperationMetadata",
      "description": "Metadata describing the Batch operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time when the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Short description of the operation."
        },
        "doneTime": {
          "description": "The time when the operation finished.",
          "format": "google-datetime",
          "type": "string"
        },
        "operationType": {
          "enum": [
            "BATCH_OPERATION_TYPE_UNSPECIFIED",
            "BATCH"
          ],
          "type": "string",
          "description": "The operation type.",
          "enumDescriptions": [
            "Batch operation type is unknown.",
            "Batch operation type."
          ]
        },
        "warnings": {
          "items": {
            "type": "string"
          },
          "description": "Warnings encountered during operation execution.",
          "type": "array"
        },
        "labels": {
          "description": "Labels associated with the operation.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "batchUuid": {
          "type": "string",
          "description": "Batch UUID for the operation."
        },
        "batch": {
          "type": "string",
          "description": "Name of the batch for the operation."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for TestIamPermissions method.",
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array"
        }
      }
    },
    "IdentityConfig": {
      "properties": {
        "userServiceAccountMapping": {
          "description": "Required. Map of user to service account.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Identity related configuration, including service account based secure multi-tenancy user mappings.",
      "type": "object",
      "id": "IdentityConfig"
    },
    "AutoscalingConfig": {
      "id": "AutoscalingConfig",
      "properties": {
        "policyUri": {
          "type": "string",
          "description": "Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region."
        }
      },
      "description": "Autoscaling Policy config associated with the cluster.",
      "type": "object"
    },
    "WorkflowTemplate": {
      "properties": {
        "jobs": {
          "description": "Required. The Directed Acyclic Graph of Jobs to submit.",
          "type": "array",
          "items": {
            "$ref": "OrderedJob"
          }
        },
        "id": {
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.",
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time template was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "placement": {
          "$ref": "WorkflowTemplatePlacement",
          "description": "Required. WorkflowTemplate scheduling information."
        },
        "createTime": {
          "description": "Output only. The time template was created.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "TemplateParameter"
          },
          "description": "Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated."
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request."
        },
        "dagTimeout": {
          "description": "Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes (\"600s\") to 24 hours (\"86400s\"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.",
          "format": "google-duration",
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "A Dataproc workflow template resource.",
      "id": "WorkflowTemplate",
      "type": "object"
    },
    "ClusterOperation": {
      "properties": {
        "operationId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The id of the cluster operation."
        },
        "error": {
          "description": "Output only. Error, if operation failed.",
          "readOnly": true,
          "type": "string"
        },
        "done": {
          "description": "Output only. Indicates the operation is done.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "ClusterOperation",
      "description": "The cluster operation triggered by a workflow."
    },
    "RuntimeConfig": {
      "id": "RuntimeConfig",
      "type": "object",
      "description": "Runtime configuration for a workload.",
      "properties": {
        "containerImage": {
          "description": "Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.",
          "type": "string"
        },
        "properties": {
          "description": "Optional. A mapping of property names to values, which are used to configure workload execution.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "version": {
          "type": "string",
          "description": "Optional. Version of the batch runtime."
        }
      }
    },
    "BasicAutoscalingAlgorithm": {
      "description": "Basic algorithm for autoscaling.",
      "type": "object",
      "properties": {
        "yarnConfig": {
          "$ref": "BasicYarnAutoscalingConfig",
          "description": "Optional. YARN autoscaling configuration."
        },
        "cooldownPeriod": {
          "format": "google-duration",
          "description": "Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.",
          "type": "string"
        },
        "sparkStandaloneConfig": {
          "description": "Optional. Spark Standalone autoscaling configuration",
          "$ref": "SparkStandaloneAutoscalingConfig"
        }
      },
      "id": "BasicAutoscalingAlgorithm"
    },
    "PrestoJob": {
      "properties": {
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI"
        },
        "continueOnFailure": {
          "description": "Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "queryFileUri": {
          "type": "string",
          "description": "The HCFS URI of the script that contains SQL queries."
        },
        "outputFormat": {
          "description": "Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats",
          "type": "string"
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "clientTags": {
          "type": "array",
          "description": "Optional. Presto client tags to attach to this query",
          "items": {
            "type": "string"
          }
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        }
      },
      "type": "object",
      "description": "A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.",
      "id": "PrestoJob"
    },
    "SparkBatch": {
      "properties": {
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "mainClass": {
          "description": "Optional. The name of the driver main class. The jar file that contains the class must be in the classpath or specified in jar_file_uris.",
          "type": "string"
        },
        "archiveUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array"
        },
        "mainJarFileUri": {
          "description": "Optional. The HCFS URI of the jar file that contains the main class.",
          "type": "string"
        },
        "args": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.",
          "type": "array"
        },
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "SparkBatch",
      "type": "object",
      "description": "A configuration for running an Apache Spark (https://spark.apache.org/) batch workload."
    },
    "DiskConfig": {
      "id": "DiskConfig",
      "type": "object",
      "description": "Specifies the config of disk options for a group of VM instances.",
      "properties": {
        "bootDiskSizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Size in GB of the boot disk (default is 500GB)."
        },
        "localSsdInterface": {
          "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).",
          "type": "string"
        },
        "numLocalSsds": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected."
        },
        "bootDiskType": {
          "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).",
          "type": "string"
        }
      }
    },
    "ShieldedInstanceConfig": {
      "id": "ShieldedInstanceConfig",
      "properties": {
        "enableVtpm": {
          "description": "Optional. Defines whether instances have the vTPM enabled.",
          "type": "boolean"
        },
        "enableSecureBoot": {
          "type": "boolean",
          "description": "Optional. Defines whether instances have Secure Boot enabled."
        },
        "enableIntegrityMonitoring": {
          "description": "Optional. Defines whether instances have integrity monitoring enabled.",
          "type": "boolean"
        }
      },
      "description": "Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).",
      "type": "object"
    },
    "InstanceGroupAutoscalingPolicyConfig": {
      "id": "InstanceGroupAutoscalingPolicyConfig",
      "description": "Configuration for the size bounds of an instance group, including its proportional size to other groups.",
      "properties": {
        "minInstances": {
          "format": "int32",
          "description": "Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0.",
          "type": "integer"
        },
        "weight": {
          "description": "Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers.",
          "format": "int32",
          "type": "integer"
        },
        "maxInstances": {
          "description": "Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SessionOperationMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the operation was created."
        },
        "sessionUuid": {
          "type": "string",
          "description": "Session UUID for the operation."
        },
        "description": {
          "description": "Short description of the operation.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels associated with the operation."
        },
        "doneTime": {
          "description": "The time when the operation was finished.",
          "format": "google-datetime",
          "type": "string"
        },
        "warnings": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Warnings encountered during operation execution."
        },
        "operationType": {
          "enumDescriptions": [
            "Session operation type is unknown.",
            "Create Session operation type.",
            "Terminate Session operation type.",
            "Delete Session operation type."
          ],
          "description": "The operation type.",
          "enum": [
            "SESSION_OPERATION_TYPE_UNSPECIFIED",
            "CREATE",
            "TERMINATE",
            "DELETE"
          ],
          "type": "string"
        },
        "session": {
          "description": "Name of the session for the operation.",
          "type": "string"
        }
      },
      "id": "SessionOperationMetadata",
      "description": "Metadata describing the Session operation."
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "id": "Expr",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      }
    },
    "ClusterOperationStatus": {
      "id": "ClusterOperationStatus",
      "description": "The status of the operation.",
      "properties": {
        "stateStartTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this state was entered."
        },
        "state": {
          "description": "Output only. A message containing the operation state.",
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ],
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "readOnly": true
        },
        "innerState": {
          "readOnly": true,
          "description": "Output only. A message containing the detailed operation state.",
          "type": "string"
        },
        "details": {
          "readOnly": true,
          "description": "Output only. A message containing any operation metadata details.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListAutoscalingPoliciesResponse": {
      "type": "object",
      "properties": {
        "policies": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Autoscaling policies list.",
          "items": {
            "$ref": "AutoscalingPolicy"
          }
        },
        "nextPageToken": {
          "description": "Output only. This token is included in the response if there are more results to fetch.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A response to a request to list autoscaling policies in a project.",
      "id": "ListAutoscalingPoliciesResponse"
    },
    "Binding": {
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com.",
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Binding",
      "description": "Associates members, or principals, with a role."
    },
    "GkeNodePoolConfig": {
      "id": "GkeNodePoolConfig",
      "type": "object",
      "properties": {
        "autoscaling": {
          "description": "Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.",
          "$ref": "GkeNodePoolAutoscalingConfig"
        },
        "locations": {
          "type": "array",
          "description": "Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.",
          "items": {
            "type": "string"
          }
        },
        "config": {
          "$ref": "GkeNodeConfig",
          "description": "Optional. The node pool configuration."
        }
      },
      "description": "The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster)."
    },
    "ListClustersResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListClustersRequest.",
          "readOnly": true,
          "type": "string"
        },
        "clusters": {
          "items": {
            "$ref": "Cluster"
          },
          "description": "Output only. The clusters in the project.",
          "readOnly": true,
          "type": "array"
        }
      },
      "description": "The list of all clusters in a project.",
      "id": "ListClustersResponse"
    },
    "ListWorkflowTemplatesResponse": {
      "id": "ListWorkflowTemplatesResponse",
      "description": "A response to a request to list workflow templates in a project.",
      "type": "object",
      "properties": {
        "templates": {
          "items": {
            "$ref": "WorkflowTemplate"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. WorkflowTemplates list."
        },
        "nextPageToken": {
          "description": "Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListWorkflowTemplatesRequest.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of TestPermissionsRequest.permissions that the caller is allowed."
        }
      },
      "description": "Response message for TestIamPermissions method.",
      "type": "object",
      "id": "TestIamPermissionsResponse"
    },
    "ExecutionConfig": {
      "type": "object",
      "description": "Execution configuration for a workload.",
      "id": "ExecutionConfig",
      "properties": {
        "idleTtl": {
          "format": "google-duration",
          "type": "string",
          "description": "Optional. The duration to keep the session alive while it's idling. Passing this threshold will cause the session to be terminated. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 10 minutes if not set."
        },
        "networkTags": {
          "type": "array",
          "description": "Optional. Tags used for network traffic control.",
          "items": {
            "type": "string"
          }
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. Service account that used to execute workload."
        },
        "networkUri": {
          "type": "string",
          "description": "Optional. Network URI to connect workload to."
        },
        "kmsKey": {
          "description": "Optional. The Cloud KMS key to use for encryption.",
          "type": "string"
        },
        "subnetworkUri": {
          "description": "Optional. Subnetwork URI to connect workload to.",
          "type": "string"
        }
      }
    },
    "NamespacedGkeDeploymentTarget": {
      "description": "Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.",
      "id": "NamespacedGkeDeploymentTarget",
      "type": "object",
      "properties": {
        "targetGkeCluster": {
          "description": "Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'",
          "type": "string"
        },
        "clusterNamespace": {
          "type": "string",
          "description": "Optional. A namespace within the GKE cluster to deploy into."
        }
      }
    },
    "NodePool": {
      "properties": {
        "id": {
          "description": "Required. A unique id of the node pool. Primary and Secondary workers can be specified using special reserved ids PRIMARY_WORKER_POOL and SECONDARY_WORKER_POOL respectively. Aux node pools can be referenced using corresponding pool id.",
          "type": "string"
        },
        "repairAction": {
          "enumDescriptions": [
            "No action will be taken by default.",
            "delete the specified list of nodes."
          ],
          "type": "string",
          "description": "Required. Repair action to take on specified resources of the node pool.",
          "enum": [
            "REPAIR_ACTION_UNSPECIFIED",
            "DELETE"
          ]
        },
        "instanceNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Name of instances to be repaired. These instances must belong to specified node pool."
        }
      },
      "type": "object",
      "description": "indicating a list of workers of same type",
      "id": "NodePool"
    },
    "KubernetesSoftwareConfig": {
      "properties": {
        "componentVersion": {
          "type": "object",
          "description": "The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties)."
        }
      },
      "description": "The software configuration for this Dataproc cluster running on Kubernetes.",
      "id": "KubernetesSoftwareConfig",
      "type": "object"
    },
    "ConfidentialInstanceConfig": {
      "description": "Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)",
      "properties": {
        "enableConfidentialCompute": {
          "description": "Optional. Defines whether the instance should have confidential compute enabled.",
          "type": "boolean"
        }
      },
      "id": "ConfidentialInstanceConfig",
      "type": "object"
    },
    "SparkSqlJob": {
      "description": "A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.",
      "type": "object",
      "id": "SparkSqlJob",
      "properties": {
        "queryFileUri": {
          "type": "string",
          "description": "The HCFS URI of the script that contains SQL queries."
        },
        "scriptVariables": {
          "description": "Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\"value\";).",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "jarFileUris": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH."
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API may be overwritten.",
          "type": "object"
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        }
      }
    },
    "WorkflowNode": {
      "type": "object",
      "id": "WorkflowNode",
      "description": "The workflow node.",
      "properties": {
        "prerequisiteStepIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Node's prerequisite nodes.",
          "readOnly": true
        },
        "jobId": {
          "description": "Output only. The job id; populated after the node enters RUNNING state.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The node state.",
          "enum": [
            "NODE_STATE_UNSPECIFIED",
            "BLOCKED",
            "RUNNABLE",
            "RUNNING",
            "COMPLETED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State is unspecified.",
            "The node is awaiting prerequisite node to finish.",
            "The node is runnable but not running.",
            "The node is running.",
            "The node completed successfully.",
            "The node failed. A node can be marked FAILED because its ancestor or peer failed."
          ]
        },
        "error": {
          "type": "string",
          "description": "Output only. The error detail.",
          "readOnly": true
        },
        "stepId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the node."
        }
      }
    },
    "DiagnoseClusterResults": {
      "type": "object",
      "description": "The location of diagnostic output.",
      "properties": {
        "outputUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics."
        }
      },
      "id": "DiagnoseClusterResults"
    },
    "PySparkJob": {
      "properties": {
        "archiveUris": {
          "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pythonFileUris": {
          "type": "array",
          "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
          "items": {
            "type": "string"
          }
        },
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.",
          "type": "array"
        },
        "loggingConfig": {
          "description": "Optional. The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission."
        },
        "mainPythonFileUri": {
          "type": "string",
          "description": "Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file."
        },
        "properties": {
          "type": "object",
          "description": "Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.",
      "id": "PySparkJob"
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      },
      "description": "Request message for SetIamPolicy method.",
      "id": "SetIamPolicyRequest",
      "type": "object"
    },
    "MetastoreConfig": {
      "description": "Specifies a Metastore configuration.",
      "id": "MetastoreConfig",
      "type": "object",
      "properties": {
        "dataprocMetastoreService": {
          "type": "string",
          "description": "Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]"
        }
      }
    },
    "Job": {
      "description": "A Dataproc job resource.",
      "type": "object",
      "properties": {
        "pysparkJob": {
          "description": "Optional. Job is a PySpark job.",
          "$ref": "PySparkJob"
        },
        "placement": {
          "description": "Required. Job information, including how, when, and where to run the job.",
          "$ref": "JobPlacement"
        },
        "sparkJob": {
          "$ref": "SparkJob",
          "description": "Optional. Job is a Spark job."
        },
        "scheduling": {
          "$ref": "JobScheduling",
          "description": "Optional. Job scheduling configuration."
        },
        "statusHistory": {
          "description": "Output only. The previous job status.",
          "items": {
            "$ref": "JobStatus"
          },
          "readOnly": true,
          "type": "array"
        },
        "driverControlFilesUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri."
        },
        "hiveJob": {
          "description": "Optional. Job is a Hive job.",
          "$ref": "HiveJob"
        },
        "driverOutputResourceUri": {
          "type": "string",
          "description": "Output only. A URI pointing to the location of the stdout of the job's driver program.",
          "readOnly": true
        },
        "trinoJob": {
          "$ref": "TrinoJob",
          "description": "Optional. Job is a Trino job."
        },
        "jobUuid": {
          "type": "string",
          "description": "Output only. A UUID that uniquely identifies a job within the project over time. This is in contrast to a user-settable reference.job_id that may be reused over time.",
          "readOnly": true
        },
        "sparkRJob": {
          "$ref": "SparkRJob",
          "description": "Optional. Job is a SparkR job."
        },
        "status": {
          "$ref": "JobStatus",
          "description": "Output only. The job status. Additional application-specific status information may be contained in the type_job and yarn_applications fields.",
          "readOnly": true
        },
        "reference": {
          "description": "Optional. The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a job_id.",
          "$ref": "JobReference"
        },
        "labels": {
          "description": "Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "yarnApplications": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
          "items": {
            "$ref": "YarnApplication"
          }
        },
        "pigJob": {
          "$ref": "PigJob",
          "description": "Optional. Job is a Pig job."
        },
        "hadoopJob": {
          "description": "Optional. Job is a Hadoop job.",
          "$ref": "HadoopJob"
        },
        "done": {
          "description": "Output only. Indicates whether the job is completed. If the value is false, the job is still in progress. If true, the job is completed, and status.state field will indicate if it was successful, failed, or cancelled.",
          "type": "boolean",
          "readOnly": true
        },
        "prestoJob": {
          "description": "Optional. Job is a Presto job.",
          "$ref": "PrestoJob"
        },
        "sparkSqlJob": {
          "$ref": "SparkSqlJob",
          "description": "Optional. Job is a SparkSql job."
        }
      },
      "id": "Job"
    },
    "RepairClusterRequest": {
      "id": "RepairClusterRequest",
      "description": "A request to repair a cluster.",
      "properties": {
        "nodePools": {
          "items": {
            "$ref": "NodePool"
          },
          "description": "Optional. Node pools and corresponding repair action to be taken. All node pools should be unique in this request. i.e. Multiple entries for the same node pool id are not allowed.",
          "type": "array"
        },
        "gracefulDecommissionTimeout": {
          "description": "Optional. Timeout for graceful YARN decomissioning. Graceful decommissioning facilitates the removal of cluster nodes without interrupting jobs in progress. The timeout specifies the amount of time to wait for jobs finish before forcefully removing nodes. The default timeout is 0 for forceful decommissioning, and the maximum timeout period is 1 day. (see JSON Mapping—Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).graceful_decommission_timeout is supported in Dataproc image versions 1.2+.",
          "type": "string",
          "format": "google-duration"
        },
        "requestId": {
          "type": "string",
          "description": "Optional. A unique ID used to identify the request. If the server receives two RepairClusterRequests with the same ID, the second request is ignored, and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
        },
        "parentOperationId": {
          "type": "string",
          "description": "Optional. operation id of the parent operation sending the repair request"
        },
        "clusterUuid": {
          "description": "Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualClusterConfig": {
      "properties": {
        "auxiliaryServicesConfig": {
          "description": "Optional. Configuration of auxiliary services used by this cluster.",
          "$ref": "AuxiliaryServicesConfig"
        },
        "kubernetesClusterConfig": {
          "$ref": "KubernetesClusterConfig",
          "description": "Required. The configuration for running the Dataproc cluster on Kubernetes."
        },
        "stagingBucket": {
          "description": "Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.",
          "type": "string"
        }
      },
      "description": "The Dataproc cluster config for a cluster that does not directly control the underlying compute resources, such as a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke).",
      "type": "object",
      "id": "VirtualClusterConfig"
    },
    "ListJobsResponse": {
      "description": "A list of jobs in a project.",
      "id": "ListJobsResponse",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "Output only. Jobs list.",
          "type": "array",
          "items": {
            "$ref": "Job"
          },
          "readOnly": true
        },
        "nextPageToken": {
          "type": "string",
          "description": "Optional. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListJobsRequest."
        }
      }
    },
    "GetIamPolicyRequest": {
      "description": "Request message for GetIamPolicy method.",
      "properties": {
        "options": {
          "$ref": "GetPolicyOptions",
          "description": "OPTIONAL: A GetPolicyOptions object for specifying options to GetIamPolicy."
        }
      },
      "type": "object",
      "id": "GetIamPolicyRequest"
    },
    "StateHistory": {
      "id": "StateHistory",
      "properties": {
        "stateStartTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time when the batch entered the historical state."
        },
        "state": {
          "enumDescriptions": [
            "The batch state is unknown.",
            "The batch is created before running.",
            "The batch is running.",
            "The batch is cancelling.",
            "The batch cancellation was successful.",
            "The batch completed successfully.",
            "The batch is no longer running due to an error."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED",
            "FAILED"
          ],
          "readOnly": true,
          "description": "Output only. The state of the batch at this point in history.",
          "type": "string"
        },
        "stateMessage": {
          "readOnly": true,
          "description": "Output only. Details about the state at this point in history.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Historical state information."
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    },
    "ListBatchesResponse": {
      "id": "ListBatchesResponse",
      "properties": {
        "batches": {
          "description": "The batches from the specified collection.",
          "type": "array",
          "items": {
            "$ref": "Batch"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "description": "A list of batch workloads."
    },
    "AcceleratorConfig": {
      "properties": {
        "acceleratorTypeUri": {
          "type": "string",
          "description": "Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).Examples: https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80."
        },
        "acceleratorCount": {
          "type": "integer",
          "description": "The number of the accelerator cards of this type exposed to this instance.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "AcceleratorConfig",
      "description": "Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/)."
    },
    "InjectCredentialsRequest": {
      "type": "object",
      "properties": {
        "clusterUuid": {
          "type": "string",
          "description": "Required. The cluster UUID."
        },
        "credentialsCiphertext": {
          "type": "string",
          "description": "Required. The encrypted credentials being injected in to the cluster.The client is responsible for encrypting the credentials in a way that is supported by the cluster.A wrapped value is used here so that the actual contents of the encrypted credentials are not written to audit logs."
        }
      },
      "id": "InjectCredentialsRequest",
      "description": "A request to inject credentials into a cluster."
    },
    "SparkJob": {
      "description": "A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.",
      "id": "SparkJob",
      "properties": {
        "archiveUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
        },
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainClass": {
          "type": "string",
          "description": "The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris."
        },
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission."
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code."
        },
        "loggingConfig": {
          "description": "Optional. The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        },
        "mainJarFileUri": {
          "description": "The HCFS URI of the jar file that contains the main class.",
          "type": "string"
        },
        "jarFileUris": {
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "PySparkBatch": {
      "type": "object",
      "id": "PySparkBatch",
      "properties": {
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "archiveUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "type": "array"
        },
        "args": {
          "description": "Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "jarFileUris": {
          "type": "array",
          "description": "Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.",
          "items": {
            "type": "string"
          }
        },
        "mainPythonFileUri": {
          "description": "Required. The HCFS URI of the main Python file to use as the Spark driver. Must be a .py file.",
          "type": "string"
        },
        "pythonFileUris": {
          "type": "array",
          "description": "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A configuration for running an Apache PySpark (https://spark.apache.org/docs/latest/api/python/getting_started/quickstart.html) batch workload."
    },
    "NodeGroupAffinity": {
      "properties": {
        "nodeGroupUri": {
          "description": "Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1 node-group-1",
          "type": "string"
        }
      },
      "id": "NodeGroupAffinity",
      "type": "object",
      "description": "Node Group Affinity for clusters using sole-tenant node groups."
    },
    "EnvironmentConfig": {
      "type": "object",
      "properties": {
        "peripheralsConfig": {
          "description": "Optional. Peripherals configuration that workload has access to.",
          "$ref": "PeripheralsConfig"
        },
        "executionConfig": {
          "description": "Optional. Execution configuration for a workload.",
          "$ref": "ExecutionConfig"
        }
      },
      "id": "EnvironmentConfig",
      "description": "Environment configuration for a workload."
    },
    "TrinoJob": {
      "id": "TrinoJob",
      "description": "A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.",
      "type": "object",
      "properties": {
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "properties": {
          "description": "Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "queryFileUri": {
          "description": "The HCFS URI of the script that contains SQL queries.",
          "type": "string"
        },
        "clientTags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Trino client tags to attach to this query"
        },
        "loggingConfig": {
          "description": "Optional. The runtime log config for job execution.",
          "$ref": "LoggingConfig"
        },
        "outputFormat": {
          "description": "Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats",
          "type": "string"
        },
        "continueOnFailure": {
          "description": "Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        }
      }
    },
    "SparkStandaloneAutoscalingConfig": {
      "description": "Basic autoscaling configurations for Spark Standalone.",
      "id": "SparkStandaloneAutoscalingConfig",
      "type": "object",
      "properties": {
        "gracefulDecommissionTimeout": {
          "description": "Required. Timeout for Spark graceful decommissioning of spark workers. Specifies the duration to wait for spark worker to complete spark decomissioning tasks before forcefully removing workers. Only applicable to downscaling operations.Bounds: 0s, 1d.",
          "format": "google-duration",
          "type": "string"
        },
        "scaleUpMinWorkerFraction": {
          "format": "double",
          "type": "number",
          "description": "Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0."
        },
        "scaleDownFactor": {
          "description": "Required. Fraction of required executors to remove from Spark Serverless clusters. A scale-down factor of 1.0 will result in scaling down so that there are no more executors for the Spark Job.(more aggressive scaling). A scale-down factor closer to 0 will result in a smaller magnitude of scaling donw (less aggressive scaling).Bounds: 0.0, 1.0.",
          "format": "double",
          "type": "number"
        },
        "scaleDownMinWorkerFraction": {
          "description": "Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.",
          "type": "number",
          "format": "double"
        },
        "scaleUpFactor": {
          "type": "number",
          "format": "double",
          "description": "Required. Fraction of required workers to add to Spark Standalone clusters. A scale-up factor of 1.0 will result in scaling up so that there are no more required workers for the Spark Job (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling).Bounds: 0.0, 1.0."
        }
      }
    },
    "QueryList": {
      "type": "object",
      "description": "A list of queries to run on a cluster.",
      "properties": {
        "queries": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } } "
        }
      },
      "id": "QueryList"
    },
    "Cluster": {
      "description": "Describes the identifying information, config, and status of a Dataproc cluster",
      "type": "object",
      "properties": {
        "statusHistory": {
          "items": {
            "$ref": "ClusterStatus"
          },
          "description": "Output only. The previous cluster status.",
          "type": "array",
          "readOnly": true
        },
        "metrics": {
          "description": "Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
          "$ref": "ClusterMetrics",
          "readOnly": true
        },
        "status": {
          "description": "Output only. Cluster status.",
          "$ref": "ClusterStatus",
          "readOnly": true
        },
        "clusterUuid": {
          "readOnly": true,
          "description": "Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.",
          "type": "string"
        },
        "virtualClusterConfig": {
          "description": "Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.",
          "$ref": "VirtualClusterConfig"
        },
        "clusterName": {
          "description": "Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.",
          "type": "string"
        },
        "projectId": {
          "description": "Required. The Google Cloud Platform project ID that the cluster belongs to.",
          "type": "string"
        },
        "config": {
          "$ref": "ClusterConfig",
          "description": "Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified."
        },
        "labels": {
          "description": "Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "Cluster"
    },
    "DiagnoseClusterRequest": {
      "id": "DiagnoseClusterRequest",
      "description": "A request to collect cluster diagnostic information.",
      "properties": {},
      "type": "object"
    },
    "ManagedGroupConfig": {
      "type": "object",
      "id": "ManagedGroupConfig",
      "properties": {
        "instanceGroupManagerName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the Instance Group Manager for this group."
        },
        "instanceTemplateName": {
          "description": "Output only. The name of the Instance Template used for the Managed Instance Group.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Specifies the resources used to actively manage an instance group."
    },
    "JobPlacement": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "description": "Required. The name of the cluster where the job will be submitted."
        },
        "clusterUuid": {
          "description": "Output only. A cluster UUID generated by the Dataproc service when the job is submitted.",
          "readOnly": true,
          "type": "string"
        },
        "clusterLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Cluster labels to identify a cluster where the job will be submitted."
        }
      },
      "description": "Dataproc job config.",
      "id": "JobPlacement"
    },
    "SecurityConfig": {
      "description": "Security related configuration, including encryption, Kerberos, etc.",
      "properties": {
        "identityConfig": {
          "$ref": "IdentityConfig",
          "description": "Optional. Identity related configuration, including service account based secure multi-tenancy user mappings."
        },
        "kerberosConfig": {
          "description": "Optional. Kerberos related configuration.",
          "$ref": "KerberosConfig"
        }
      },
      "type": "object",
      "id": "SecurityConfig"
    },
    "WorkflowMetadata": {
      "properties": {
        "startTime": {
          "description": "Output only. Workflow start time.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "template": {
          "type": "string",
          "description": "Output only. The resource name of the workflow template as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}",
          "readOnly": true
        },
        "clusterUuid": {
          "description": "Output only. The UUID of target cluster.",
          "type": "string",
          "readOnly": true
        },
        "dagStartTime": {
          "readOnly": true,
          "description": "Output only. DAG start time, only set for workflows with dag_timeout when DAG begins.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Workflow end time.",
          "format": "google-datetime"
        },
        "dagTimeout": {
          "readOnly": true,
          "description": "Output only. The timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
          "type": "string",
          "format": "google-duration"
        },
        "graph": {
          "description": "Output only. The workflow graph.",
          "$ref": "WorkflowGraph",
          "readOnly": true
        },
        "createCluster": {
          "description": "Output only. The create cluster operation metadata.",
          "readOnly": true,
          "$ref": "ClusterOperation"
        },
        "dagEndTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. DAG end time, only set for workflows with dag_timeout when DAG ends."
        },
        "parameters": {
          "description": "Map from parameter names to values that were used for those parameters.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "clusterName": {
          "readOnly": true,
          "description": "Output only. The name of the target cluster.",
          "type": "string"
        },
        "deleteCluster": {
          "readOnly": true,
          "description": "Output only. The delete cluster operation metadata.",
          "$ref": "ClusterOperation"
        },
        "state": {
          "description": "Output only. The workflow state.",
          "enum": [
            "UNKNOWN",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Unused.",
            "The operation has been created.",
            "The operation is running.",
            "The operation is done; either cancelled or completed."
          ]
        },
        "version": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The version of template at the time of workflow instantiation."
        }
      },
      "id": "WorkflowMetadata",
      "description": "A Dataproc workflow template resource.",
      "type": "object"
    },
    "Policy": {
      "id": "Policy",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy."
        },
        "etag": {
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/)."
    },
    "ClusterSelector": {
      "description": "A selector that chooses target cluster for jobs based on metadata.",
      "id": "ClusterSelector",
      "properties": {
        "zone": {
          "type": "string",
          "description": "Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used."
        },
        "clusterLabels": {
          "description": "Required. The cluster labels. Cluster must have all labels to match.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "SparkHistoryServerConfig": {
      "description": "Spark History Server configuration for the workload.",
      "id": "SparkHistoryServerConfig",
      "properties": {
        "dataprocCluster": {
          "type": "string",
          "description": "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]"
        }
      },
      "type": "object"
    },
    "LifecycleConfig": {
      "id": "LifecycleConfig",
      "description": "Specifies the cluster auto-delete schedule configuration.",
      "type": "object",
      "properties": {
        "autoDeleteTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json))."
        },
        "autoDeleteTtl": {
          "description": "Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
          "type": "string",
          "format": "google-duration"
        },
        "idleDeleteTtl": {
          "format": "google-duration",
          "description": "Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
          "type": "string"
        },
        "idleStartTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).",
          "format": "google-datetime"
        }
      }
    },
    "Batch": {
      "id": "Batch",
      "properties": {
        "state": {
          "enumDescriptions": [
            "The batch state is unknown.",
            "The batch is created before running.",
            "The batch is running.",
            "The batch is cancelling.",
            "The batch cancellation was successful.",
            "The batch completed successfully.",
            "The batch is no longer running due to an error."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "CANCELLING",
            "CANCELLED",
            "SUCCEEDED",
            "FAILED"
          ],
          "description": "Output only. The state of the batch.",
          "readOnly": true
        },
        "uuid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch."
        },
        "sparkSqlBatch": {
          "description": "Optional. SparkSql batch config.",
          "$ref": "SparkSqlBatch"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the batch."
        },
        "pysparkBatch": {
          "$ref": "PySparkBatch",
          "description": "Optional. PySpark batch config."
        },
        "stateMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Batch state details, such as a failure description if the state is FAILED."
        },
        "runtimeConfig": {
          "description": "Optional. Runtime configuration for the batch execution.",
          "$ref": "RuntimeConfig"
        },
        "operation": {
          "type": "string",
          "description": "Output only. The resource name of the operation associated with this batch.",
          "readOnly": true
        },
        "sparkBatch": {
          "$ref": "SparkBatch",
          "description": "Optional. Spark batch config."
        },
        "environmentConfig": {
          "$ref": "EnvironmentConfig",
          "description": "Optional. Environment configuration for the batch execution."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time when the batch was created."
        },
        "sparkRBatch": {
          "$ref": "SparkRBatch",
          "description": "Optional. SparkR batch config."
        },
        "stateTime": {
          "description": "Output only. The time when the batch entered a current state.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "creator": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The email address of the user who created the batch."
        },
        "runtimeInfo": {
          "$ref": "RuntimeInfo",
          "description": "Output only. Runtime information about batch execution.",
          "readOnly": true
        },
        "labels": {
          "description": "Optional. The labels to associate with this batch. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a batch.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "stateHistory": {
          "items": {
            "$ref": "StateHistory"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Historical state information for the batch."
        }
      },
      "type": "object",
      "description": "A representation of a batch workload in the service."
    },
    "GkeClusterConfig": {
      "description": "The cluster's GKE config.",
      "properties": {
        "gkeClusterTarget": {
          "description": "Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'",
          "type": "string"
        },
        "namespacedGkeDeploymentTarget": {
          "description": "Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.",
          "$ref": "NamespacedGkeDeploymentTarget"
        },
        "nodePoolTarget": {
          "description": "Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.",
          "type": "array",
          "items": {
            "$ref": "GkeNodePoolTarget"
          }
        }
      },
      "type": "object",
      "id": "GkeClusterConfig"
    },
    "EndpointConfig": {
      "id": "EndpointConfig",
      "description": "Endpoint config for this cluster",
      "properties": {
        "httpPorts": {
          "readOnly": true,
          "type": "object",
          "description": "Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableHttpPortAccess": {
          "type": "boolean",
          "description": "Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false."
        }
      },
      "type": "object"
    },
    "YarnApplication": {
      "type": "object",
      "description": "A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
      "properties": {
        "name": {
          "description": "Required. The application name.",
          "type": "string"
        },
        "progress": {
          "format": "float",
          "description": "Required. The numerical progress of the application, from 1 to 100.",
          "type": "number"
        },
        "trackingUrl": {
          "description": "Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.",
          "type": "string"
        },
        "state": {
          "description": "Required. The application state.",
          "type": "string",
          "enumDescriptions": [
            "Status is unspecified.",
            "Status is NEW.",
            "Status is NEW_SAVING.",
            "Status is SUBMITTED.",
            "Status is ACCEPTED.",
            "Status is RUNNING.",
            "Status is FINISHED.",
            "Status is FAILED.",
            "Status is KILLED."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NEW",
            "NEW_SAVING",
            "SUBMITTED",
            "ACCEPTED",
            "RUNNING",
            "FINISHED",
            "FAILED",
            "KILLED"
          ]
        }
      },
      "id": "YarnApplication"
    },
    "NodeInitializationAction": {
      "type": "object",
      "properties": {
        "executionTimeout": {
          "format": "google-duration",
          "type": "string",
          "description": "Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period."
        },
        "executableFile": {
          "type": "string",
          "description": "Required. Cloud Storage URI of executable file."
        }
      },
      "description": "Specifies an executable to run on a fully configured node and a timeout period for executable completion.",
      "id": "NodeInitializationAction"
    },
    "InstanceGroupConfig": {
      "id": "InstanceGroupConfig",
      "description": "The config settings for Compute Engine resources in an instance group, such as a master or worker group.",
      "properties": {
        "machineTypeUri": {
          "type": "string",
          "description": "Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2."
        },
        "diskConfig": {
          "$ref": "DiskConfig",
          "description": "Optional. Disk option config settings."
        },
        "numInstances": {
          "description": "Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.",
          "type": "integer",
          "format": "int32"
        },
        "minCpuPlatform": {
          "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -\u003e Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).",
          "type": "string"
        },
        "instanceReferences": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "InstanceReference"
          },
          "description": "Output only. List of references to Compute Engine instances."
        },
        "preemptibility": {
          "enum": [
            "PREEMPTIBILITY_UNSPECIFIED",
            "NON_PREEMPTIBLE",
            "PREEMPTIBLE",
            "SPOT"
          ],
          "description": "Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.",
          "type": "string",
          "enumDescriptions": [
            "Preemptibility is unspecified, the system will choose the appropriate setting for each instance group.",
            "Instances are non-preemptible.This option is allowed for all instance groups and is the only valid value for Master and Worker instance groups.",
            "Instances are preemptible (https://cloud.google.com/compute/docs/instances/preemptible).This option is allowed only for secondary worker (https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms) groups.",
            "Instances are Spot VMs (https://cloud.google.com/compute/docs/instances/spot).This option is allowed only for secondary worker (https://cloud.google.com/dataproc/docs/concepts/compute/secondary-vms) groups. Spot VMs are the latest version of preemptible VMs (https://cloud.google.com/compute/docs/instances/preemptible), and provide additional features."
          ]
        },
        "managedGroupConfig": {
          "readOnly": true,
          "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
          "$ref": "ManagedGroupConfig"
        },
        "isPreemptible": {
          "description": "Output only. Specifies that this instance group contains preemptible instances.",
          "readOnly": true,
          "type": "boolean"
        },
        "accelerators": {
          "type": "array",
          "description": "Optional. The Compute Engine accelerator configuration for these instances.",
          "items": {
            "$ref": "AcceleratorConfig"
          }
        },
        "imageUri": {
          "type": "string",
          "description": "Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default."
        },
        "instanceNames": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "InstanceReference": {
      "type": "object",
      "description": "A reference to a Compute Engine instance.",
      "id": "InstanceReference",
      "properties": {
        "instanceName": {
          "type": "string",
          "description": "The user-friendly name of the Compute Engine instance."
        },
        "publicEciesKey": {
          "type": "string",
          "description": "The public ECIES key used for sharing data with this instance."
        },
        "instanceId": {
          "type": "string",
          "description": "The unique identifier of the Compute Engine instance."
        },
        "publicKey": {
          "type": "string",
          "description": "The public RSA key used for sharing data with this instance."
        }
      }
    },
    "SubmitJobRequest": {
      "id": "SubmitJobRequest",
      "description": "A request to submit a job.",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "Job",
          "description": "Required. The job resource."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest)s with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
        }
      }
    },
    "ValueValidation": {
      "properties": {
        "values": {
          "description": "Required. List of allowed values for the parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "ValueValidation",
      "description": "Validation based on a list of allowed values."
    },
    "GkeNodePoolAcceleratorConfig": {
      "id": "GkeNodePoolAcceleratorConfig",
      "description": "A GkeNodeConfigAcceleratorConfig represents a Hardware Accelerator request for a node pool.",
      "properties": {
        "acceleratorCount": {
          "format": "int64",
          "description": "The number of accelerator cards exposed to an instance.",
          "type": "string"
        },
        "acceleratorType": {
          "type": "string",
          "description": "The accelerator type resource namename (see GPUs on Compute Engine)."
        },
        "gpuPartitionSize": {
          "type": "string",
          "description": "Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)."
        }
      },
      "type": "object"
    },
    "GkeNodeConfig": {
      "type": "object",
      "description": "Parameters that describe cluster nodes.",
      "properties": {
        "machineType": {
          "type": "string",
          "description": "Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types)."
        },
        "accelerators": {
          "type": "array",
          "description": "Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.",
          "items": {
            "$ref": "GkeNodePoolAcceleratorConfig"
          }
        },
        "spot": {
          "description": "Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).",
          "type": "boolean"
        },
        "bootDiskKmsKey": {
          "type": "string",
          "description": "Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME."
        },
        "localSsdCount": {
          "type": "integer",
          "description": "Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).",
          "format": "int32"
        },
        "preemptible": {
          "description": "Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).",
          "type": "boolean"
        },
        "minCpuPlatform": {
          "description": "Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as \"Intel Haswell\"` or Intel Sandy Bridge\".",
          "type": "string"
        }
      },
      "id": "GkeNodeConfig"
    },
    "ClusterMetrics": {
      "description": "Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release.",
      "type": "object",
      "id": "ClusterMetrics",
      "properties": {
        "yarnMetrics": {
          "description": "YARN metrics.",
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "type": "object"
        },
        "hdfsMetrics": {
          "type": "object",
          "description": "The HDFS metrics.",
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          }
        }
      }
    },
    "UsageMetrics": {
      "properties": {
        "shuffleStorageGbSeconds": {
          "format": "int64",
          "description": "Optional. Shuffle storage usage in (GB x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).",
          "type": "string"
        },
        "milliDcuSeconds": {
          "type": "string",
          "format": "int64",
          "description": "Optional. DCU (Dataproc Compute Units) usage in (milliDCU x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))."
        }
      },
      "type": "object",
      "id": "UsageMetrics",
      "description": "Usage metrics represent approximate total resources consumed by a workload."
    },
    "JobScheduling": {
      "id": "JobScheduling",
      "description": "Job scheduling options.",
      "type": "object",
      "properties": {
        "maxFailuresPerHour": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.Note: Currently, this restartable job option is not supported in Dataproc workflow template (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template) jobs."
        },
        "maxFailuresTotal": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow template (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template) jobs."
        }
      }
    },
    "PeripheralsConfig": {
      "properties": {
        "metastoreService": {
          "description": "Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]",
          "type": "string"
        },
        "sparkHistoryServerConfig": {
          "description": "Optional. The Spark History Server configuration for the workload.",
          "$ref": "SparkHistoryServerConfig"
        }
      },
      "description": "Auxiliary services configuration for a workload.",
      "type": "object",
      "id": "PeripheralsConfig"
    },
    "PigJob": {
      "properties": {
        "queryFileUri": {
          "type": "string",
          "description": "The HCFS URI of the script that contains the Pig queries."
        },
        "queryList": {
          "description": "A list of queries.",
          "$ref": "QueryList"
        },
        "continueOnFailure": {
          "description": "Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.",
          "type": "boolean"
        },
        "properties": {
          "description": "Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "jarFileUris": {
          "items": {
            "type": "string"
          },
          "description": "Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.",
          "type": "array"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "scriptVariables": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value])."
        }
      },
      "id": "PigJob",
      "description": "A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.",
      "type": "object"
    },
    "OrderedJob": {
      "description": "A job executed by the workflow.",
      "type": "object",
      "id": "OrderedJob",
      "properties": {
        "sparkRJob": {
          "$ref": "SparkRJob",
          "description": "Optional. Job is a SparkR job."
        },
        "pysparkJob": {
          "description": "Optional. Job is a PySpark job.",
          "$ref": "PySparkJob"
        },
        "hiveJob": {
          "$ref": "HiveJob",
          "description": "Optional. Job is a Hive job."
        },
        "prerequisiteStepIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow."
        },
        "sparkSqlJob": {
          "description": "Optional. Job is a SparkSql job.",
          "$ref": "SparkSqlJob"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 32 labels can be associated with a given job.",
          "type": "object"
        },
        "trinoJob": {
          "description": "Optional. Job is a Trino job.",
          "$ref": "TrinoJob"
        },
        "scheduling": {
          "description": "Optional. Job scheduling configuration.",
          "$ref": "JobScheduling"
        },
        "sparkJob": {
          "$ref": "SparkJob",
          "description": "Optional. Job is a Spark job."
        },
        "prestoJob": {
          "$ref": "PrestoJob",
          "description": "Optional. Job is a Presto job."
        },
        "hadoopJob": {
          "$ref": "HadoopJob",
          "description": "Optional. Job is a Hadoop job."
        },
        "stepId": {
          "type": "string",
          "description": "Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters."
        },
        "pigJob": {
          "$ref": "PigJob",
          "description": "Optional. Job is a Pig job."
        }
      }
    },
    "ClusterOperationMetadata": {
      "description": "Metadata describing the operation.",
      "type": "object",
      "properties": {
        "operationType": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The operation type."
        },
        "description": {
          "readOnly": true,
          "description": "Output only. Short description of operation.",
          "type": "string"
        },
        "childOperationIds": {
          "readOnly": true,
          "description": "Output only. Child operation ids",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "clusterUuid": {
          "description": "Output only. Cluster UUID for the operation.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Output only. Labels associated with the operation",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "readOnly": true
        },
        "status": {
          "description": "Output only. Current operation status.",
          "readOnly": true,
          "$ref": "ClusterOperationStatus"
        },
        "statusHistory": {
          "items": {
            "$ref": "ClusterOperationStatus"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The previous operation status."
        },
        "warnings": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. Errors encountered during operation execution."
        },
        "clusterName": {
          "readOnly": true,
          "description": "Output only. Name of the cluster for the operation.",
          "type": "string"
        }
      },
      "id": "ClusterOperationMetadata"
    },
    "JobReference": {
      "properties": {
        "jobId": {
          "description": "Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.",
          "type": "string"
        },
        "projectId": {
          "description": "Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.",
          "type": "string"
        }
      },
      "description": "Encapsulates the full scoping used to reference a job.",
      "type": "object",
      "id": "JobReference"
    },
    "SparkSqlBatch": {
      "type": "object",
      "id": "SparkSqlBatch",
      "description": "A configuration for running Apache Spark SQL (https://spark.apache.org/sql/) queries as a batch workload.",
      "properties": {
        "jarFileUris": {
          "type": "array",
          "description": "Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.",
          "items": {
            "type": "string"
          }
        },
        "queryFileUri": {
          "type": "string",
          "description": "Required. The HCFS URI of the script that contains Spark SQL queries to execute."
        },
        "queryVariables": {
          "type": "object",
          "description": "Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name=\"value\";).",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TemplateParameter": {
      "type": "object",
      "description": "A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)",
      "properties": {
        "validation": {
          "$ref": "ParameterValidation",
          "description": "Optional. Validation rules to be applied to this parameter's value."
        },
        "name": {
          "description": "Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Brief description of the parameter. Must not exceed 1024 characters.",
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args"
        }
      },
      "id": "TemplateParameter"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}."
        }
      }
    },
    "AuxiliaryServicesConfig": {
      "type": "object",
      "id": "AuxiliaryServicesConfig",
      "properties": {
        "metastoreConfig": {
          "$ref": "MetastoreConfig",
          "description": "Optional. The Hive Metastore configuration for this workload."
        },
        "sparkHistoryServerConfig": {
          "description": "Optional. The Spark History Server configuration for the workload.",
          "$ref": "SparkHistoryServerConfig"
        }
      },
      "description": "Auxiliary services configuration for a Cluster."
    },
    "ParameterValidation": {
      "type": "object",
      "description": "Configuration for parameter validation.",
      "properties": {
        "regex": {
          "description": "Validation based on regular expressions.",
          "$ref": "RegexValidation"
        },
        "values": {
          "description": "Validation based on a list of allowed values.",
          "$ref": "ValueValidation"
        }
      },
      "id": "ParameterValidation"
    },
    "JobStatus": {
      "id": "JobStatus",
      "properties": {
        "substate": {
          "description": "Output only. Additional state information, which includes status reported by the agent.",
          "enumDescriptions": [
            "The job substate is unknown.",
            "The Job is submitted to the agent.Applies to RUNNING state.",
            "The Job has been received and is awaiting execution (it may be waiting for a condition to be met). See the \"details\" field for the reason for the delay.Applies to RUNNING state.",
            "The agent-reported status is out of date, which may be caused by a loss of communication between the agent and Dataproc. If the agent does not send a timely update, the job will fail.Applies to RUNNING state."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED",
            "SUBMITTED",
            "QUEUED",
            "STALE_STATUS"
          ],
          "readOnly": true
        },
        "details": {
          "readOnly": true,
          "description": "Optional. Output only. Job state details, such as an error description if the state is ERROR.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "SETUP_DONE",
            "RUNNING",
            "CANCEL_PENDING",
            "CANCEL_STARTED",
            "CANCELLED",
            "DONE",
            "ERROR",
            "ATTEMPT_FAILURE"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "The job state is unknown.",
            "The job is pending; it has been submitted, but is not yet running.",
            "Job has been received by the service and completed initial setup; it will soon be submitted to the cluster.",
            "The job is running on the cluster.",
            "A CancelJob request has been received, but is pending.",
            "Transient in-flight resources have been canceled, and the request to cancel the running job has been issued to the cluster.",
            "The job cancellation was successful.",
            "The job has completed successfully.",
            "The job has completed, but encountered an error.",
            "Job attempt has failed. The detail field contains failure details for this attempt.Applies to restartable jobs only."
          ],
          "type": "string",
          "description": "Output only. A state message specifying the overall job state."
        },
        "stateStartTime": {
          "description": "Output only. The time when this state was entered.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Dataproc job status.",
      "type": "object"
    },
    "WorkflowTemplatePlacement": {
      "description": "Specifies workflow execution target.Either managed_cluster or cluster_selector is required.",
      "id": "WorkflowTemplatePlacement",
      "type": "object",
      "properties": {
        "managedCluster": {
          "description": "A cluster that is managed by the workflow.",
          "$ref": "ManagedCluster"
        },
        "clusterSelector": {
          "description": "Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.",
          "$ref": "ClusterSelector"
        }
      }
    },
    "KerberosConfig": {
      "properties": {
        "keystoreUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate."
        },
        "truststorePasswordUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc."
        },
        "crossRealmTrustAdminServer": {
          "description": "Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
          "type": "string"
        },
        "crossRealmTrustRealm": {
          "description": "Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.",
          "type": "string"
        },
        "kmsKeyUri": {
          "description": "Optional. The uri of the KMS key used to encrypt various sensitive files.",
          "type": "string"
        },
        "crossRealmTrustSharedPasswordUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship."
        },
        "rootPrincipalPasswordUri": {
          "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.",
          "type": "string"
        },
        "keyPasswordUri": {
          "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.",
          "type": "string"
        },
        "realm": {
          "type": "string",
          "description": "Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm."
        },
        "enableKerberos": {
          "type": "boolean",
          "description": "Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster."
        },
        "tgtLifetimeHours": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used."
        },
        "truststoreUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate."
        },
        "kdcDbKeyUri": {
          "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.",
          "type": "string"
        },
        "crossRealmTrustKdc": {
          "type": "string",
          "description": "Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship."
        },
        "keystorePasswordUri": {
          "type": "string",
          "description": "Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc."
        }
      },
      "type": "object",
      "description": "Specifies Kerberos related configuration.",
      "id": "KerberosConfig"
    },
    "LoggingConfig": {
      "type": "object",
      "id": "LoggingConfig",
      "properties": {
        "driverLogLevels": {
          "additionalProperties": {
            "enumDescriptions": [
              "Level is unspecified. Use default level for log4j.",
              "Use ALL level for log4j.",
              "Use TRACE level for log4j.",
              "Use DEBUG level for log4j.",
              "Use INFO level for log4j.",
              "Use WARN level for log4j.",
              "Use ERROR level for log4j.",
              "Use FATAL level for log4j.",
              "Turn off log4j."
            ],
            "type": "string",
            "enum": [
              "LEVEL_UNSPECIFIED",
              "ALL",
              "TRACE",
              "DEBUG",
              "INFO",
              "WARN",
              "ERROR",
              "FATAL",
              "OFF"
            ]
          },
          "description": "The per-package log levels for the driver. This may include \"root\" package name to configure rootLogger. Examples: 'com.google = FATAL', 'root = INFO', 'org.apache = DEBUG'",
          "type": "object"
        }
      },
      "description": "The runtime logging config of the job."
    },
    "GetPolicyOptions": {
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "id": "GetPolicyOptions",
      "properties": {
        "requestedPolicyVersion": {
          "description": "Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "KubernetesClusterConfig": {
      "description": "The configuration for running the Dataproc cluster on Kubernetes.",
      "id": "KubernetesClusterConfig",
      "properties": {
        "gkeClusterConfig": {
          "$ref": "GkeClusterConfig",
          "description": "Required. The configuration for running the Dataproc cluster on GKE."
        },
        "kubernetesNamespace": {
          "description": "Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.",
          "type": "string"
        },
        "kubernetesSoftwareConfig": {
          "$ref": "KubernetesSoftwareConfig",
          "description": "Optional. The software configuration for this Dataproc cluster running on Kubernetes."
        }
      },
      "type": "object"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "AutoscalingPolicy": {
      "id": "AutoscalingPolicy",
      "type": "object",
      "description": "Describes an autoscaling policy for Dataproc cluster autoscaler.",
      "properties": {
        "workerConfig": {
          "description": "Required. Describes how the autoscaler will operate for primary workers.",
          "$ref": "InstanceGroupAutoscalingPolicyConfig"
        },
        "id": {
          "type": "string",
          "description": "Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters."
        },
        "labels": {
          "description": "Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}",
          "type": "string",
          "readOnly": true
        },
        "basicAlgorithm": {
          "$ref": "BasicAutoscalingAlgorithm"
        },
        "secondaryWorkerConfig": {
          "description": "Optional. Describes how the autoscaler will operate for secondary workers.",
          "$ref": "InstanceGroupAutoscalingPolicyConfig"
        }
      }
    },
    "HadoopJob": {
      "description": "A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).",
      "type": "object",
      "properties": {
        "fileUris": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks."
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision may occur that causes an incorrect job submission."
        },
        "mainClass": {
          "description": "The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.",
          "type": "string"
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "archiveUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip."
        },
        "mainJarFileUri": {
          "type": "string",
          "description": "The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'"
        },
        "jarFileUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks."
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.",
          "type": "object"
        }
      },
      "id": "HadoopJob"
    },
    "ManagedCluster": {
      "id": "ManagedCluster",
      "properties": {
        "config": {
          "description": "Required. The cluster configuration.",
          "$ref": "ClusterConfig"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster.",
          "type": "object"
        },
        "clusterName": {
          "type": "string",
          "description": "Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters."
        }
      },
      "description": "Cluster that is managed by the workflow.",
      "type": "object"
    },
    "StartClusterRequest": {
      "id": "StartClusterRequest",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Optional. A unique ID used to identify the request. If the server receives two StartClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StartClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
          "type": "string"
        },
        "clusterUuid": {
          "type": "string",
          "description": "Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist."
        }
      },
      "description": "A request to start a cluster."
    },
    "BasicYarnAutoscalingConfig": {
      "type": "object",
      "id": "BasicYarnAutoscalingConfig",
      "description": "Basic autoscaling configurations for YARN.",
      "properties": {
        "scaleDownFactor": {
          "format": "double",
          "description": "Required. Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0.",
          "type": "number"
        },
        "scaleUpMinWorkerFraction": {
          "description": "Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.",
          "type": "number",
          "format": "double"
        },
        "scaleDownMinWorkerFraction": {
          "description": "Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0.",
          "type": "number",
          "format": "double"
        },
        "gracefulDecommissionTimeout": {
          "description": "Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d.",
          "type": "string",
          "format": "google-duration"
        },
        "scaleUpFactor": {
          "type": "number",
          "format": "double",
          "description": "Required. Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0."
        }
      }
    },
    "NodeGroupOperationMetadata": {
      "properties": {
        "labels": {
          "description": "Output only. Labels associated with the operation.",
          "type": "object",
          "readOnly": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "readOnly": true,
          "description": "Output only. Current operation status.",
          "$ref": "ClusterOperationStatus"
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Short description of operation."
        },
        "warnings": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Errors encountered during operation execution."
        },
        "operationType": {
          "description": "The operation type.",
          "enumDescriptions": [
            "Node group operation type is unknown.",
            "Create node group operation type.",
            "Update node group operation type.",
            "Delete node group operation type.",
            "Resize node group operation type."
          ],
          "enum": [
            "NODE_GROUP_OPERATION_TYPE_UNSPECIFIED",
            "CREATE",
            "UPDATE",
            "DELETE",
            "RESIZE"
          ],
          "type": "string"
        },
        "clusterUuid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Cluster UUID associated with the node group operation."
        },
        "statusHistory": {
          "description": "Output only. The previous operation status.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ClusterOperationStatus"
          }
        },
        "nodeGroupId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Node group ID for the operation."
        }
      },
      "description": "Metadata describing the node group operation.",
      "id": "NodeGroupOperationMetadata",
      "type": "object"
    },
    "EncryptionConfig": {
      "type": "object",
      "description": "Encryption settings for the cluster.",
      "properties": {
        "gcePdKmsKeyName": {
          "description": "Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.",
          "type": "string"
        }
      },
      "id": "EncryptionConfig"
    },
    "ClusterStatus": {
      "properties": {
        "detail": {
          "description": "Optional. Output only. Details of cluster's state.",
          "readOnly": true,
          "type": "string"
        },
        "substate": {
          "enumDescriptions": [
            "The cluster substate is unknown.",
            "The cluster is known to be in an unhealthy state (for example, critical daemons are not running or HDFS capacity is exhausted).Applies to RUNNING state.",
            "The agent-reported status is out of date (may occur if Dataproc loses communication with Agent).Applies to RUNNING state."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. Additional state information that includes status reported by the agent.",
          "enum": [
            "UNSPECIFIED",
            "UNHEALTHY",
            "STALE_STATUS"
          ]
        },
        "state": {
          "enumDescriptions": [
            "The cluster state is unknown.",
            "The cluster is being created and set up. It is not ready for use.",
            "The cluster is currently running and healthy. It is ready for use.Note: The cluster state changes from \"creating\" to \"running\" status after the master node(s), first two primary worker nodes (and the last primary worker node if primary workers \u003e 2) are running.",
            "The cluster encountered an error. It is not ready for use.",
            "The cluster has encountered an error while being updated. Jobs can be submitted to the cluster, but the cluster cannot be updated.",
            "The cluster is being deleted. It cannot be used.",
            "The cluster is being updated. It continues to accept and process jobs.",
            "The cluster is being stopped. It cannot be used.",
            "The cluster is currently stopped. It is not ready for use.",
            "The cluster is being started. It is not ready for use.",
            "The cluster is being repaired. It is not ready for use."
          ],
          "enum": [
            "UNKNOWN",
            "CREATING",
            "RUNNING",
            "ERROR",
            "ERROR_DUE_TO_UPDATE",
            "DELETING",
            "UPDATING",
            "STOPPING",
            "STOPPED",
            "STARTING",
            "REPAIRING"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The cluster's state."
        },
        "stateStartTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json))."
        }
      },
      "type": "object",
      "id": "ClusterStatus",
      "description": "The status of a cluster and its instances."
    },
    "RuntimeInfo": {
      "description": "Runtime information about workload execution.",
      "properties": {
        "approximateUsage": {
          "$ref": "UsageMetrics",
          "readOnly": true,
          "description": "Output only. Approximate workload resource usage calculated after workload finishes (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))."
        },
        "diagnosticOutputUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A URI pointing to the location of the diagnostics tarball."
        },
        "endpoints": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.",
          "readOnly": true
        },
        "outputUri": {
          "description": "Output only. A URI pointing to the location of the stdout and stderr of the workload.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "id": "RuntimeInfo"
    },
    "SparkRJob": {
      "id": "SparkRJob",
      "type": "object",
      "description": "A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.",
      "properties": {
        "fileUris": {
          "description": "Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loggingConfig": {
          "$ref": "LoggingConfig",
          "description": "Optional. The runtime log config for job execution."
        },
        "mainRFileUri": {
          "description": "Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.",
          "type": "string"
        },
        "archiveUris": {
          "description": "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "args": {
          "type": "array",
          "description": "Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.",
          "type": "object"
        }
      }
    },
    "GkeNodePoolTarget": {
      "properties": {
        "nodePoolConfig": {
          "description": "Input only. The configuration for the GKE node pool.If specified, Dataproc attempts to create a node pool with the specified shape. If one with the same name already exists, it is verified against all specified fields. If a field differs, the virtual cluster creation will fail.If omitted, any node pool with the specified name is used. If a node pool with the specified name does not exist, Dataproc create a node pool with default values.This is an input only field. It will not be returned by the API.",
          "$ref": "GkeNodePoolConfig"
        },
        "roles": {
          "items": {
            "enumDescriptions": [
              "Role is unspecified.",
              "At least one node pool must have the DEFAULT role. Work assigned to a role that is not associated with a node pool is assigned to the node pool with the DEFAULT role. For example, work assigned to the CONTROLLER role will be assigned to the node pool with the DEFAULT role if no node pool has the CONTROLLER role.",
              "Run work associated with the Dataproc control plane (for example, controllers and webhooks). Very low resource requirements.",
              "Run work associated with a Spark driver of a job.",
              "Run work associated with a Spark executor of a job."
            ],
            "type": "string",
            "enum": [
              "ROLE_UNSPECIFIED",
              "DEFAULT",
              "CONTROLLER",
              "SPARK_DRIVER",
              "SPARK_EXECUTOR"
            ]
          },
          "type": "array",
          "description": "Required. The roles associated with the GKE node pool."
        },
        "nodePool": {
          "type": "string",
          "description": "Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'"
        }
      },
      "type": "object",
      "id": "GkeNodePoolTarget",
      "description": "GKE node pools that Dataproc workloads run on."
    },
    "SoftwareConfig": {
      "properties": {
        "optionalComponents": {
          "items": {
            "enumDescriptions": [
              "Unspecified component. Specifying this will cause Cluster creation to fail.",
              "The Anaconda python distribution. The Anaconda component is not supported in the Dataproc 2.0 image. The 2.0 image is pre-installed with Miniconda.",
              "Docker",
              "The Druid query engine. (alpha)",
              "Flink",
              "HBase. (beta)",
              "The Hive Web HCatalog (the REST service for accessing HCatalog).",
              "The Jupyter Notebook.",
              "The Presto query engine.",
              "The Trino query engine.",
              "The Ranger service.",
              "The Solr service.",
              "The Zeppelin notebook.",
              "The Zookeeper service."
            ],
            "type": "string",
            "enum": [
              "COMPONENT_UNSPECIFIED",
              "ANACONDA",
              "DOCKER",
              "DRUID",
              "FLINK",
              "HBASE",
              "HIVE_WEBHCAT",
              "JUPYTER",
              "PRESTO",
              "TRINO",
              "RANGER",
              "SOLR",
              "ZEPPELIN",
              "ZOOKEEPER"
            ]
          },
          "type": "array",
          "description": "Optional. The set of components to activate on the cluster."
        },
        "properties": {
          "description": "Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "imageVersion": {
          "description": "Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as \"1.2\" (including a subminor version, such as \"1.2.29\"), or the \"preview\" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SoftwareConfig",
      "description": "Specifies the selection and config of software inside the cluster."
    },
    "WorkflowGraph": {
      "id": "WorkflowGraph",
      "type": "object",
      "description": "The workflow graph.",
      "properties": {
        "nodes": {
          "readOnly": true,
          "items": {
            "$ref": "WorkflowNode"
          },
          "type": "array",
          "description": "Output only. The workflow nodes."
        }
      }
    },
    "GkeNodePoolAutoscalingConfig": {
      "properties": {
        "maxNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of nodes in the node pool. Must be \u003e= min_node_count, and must be \u003e 0. Note: Quota must be sufficient to scale up the cluster."
        },
        "minNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of nodes in the node pool. Must be \u003e= 0 and \u003c= max_node_count."
        }
      },
      "type": "object",
      "id": "GkeNodePoolAutoscalingConfig",
      "description": "GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage."
    }
  },
  "version": "v1",
  "description": "Manages Hadoop-based clusters and jobs on Google Cloud Platform.",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/dataproc/",
  "parameters": {
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    }
  },
  "name": "dataproc",
  "title": "Cloud Dataproc API",
  "fullyEncodeReservedExpansion": true,
  "id": "dataproc:v1",
  "canonicalName": "Dataproc",
  "protocol": "rest",
  "revision": "20221114"
}

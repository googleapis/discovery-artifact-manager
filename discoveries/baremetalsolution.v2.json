{
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    }
  },
  "basePath": "",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "revision": "20230807",
  "version": "v2",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "kind": "discovery#restDescription",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "batchPath": "batch",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "title": "Bare Metal Solution API",
  "name": "baremetalsolution",
  "protocol": "rest",
  "schemas": {
    "NetworkAddress": {
      "description": "A network.",
      "type": "object",
      "id": "NetworkAddress",
      "properties": {
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "properties": {
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "description": "Interface type.",
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "description": "If true, interface must have network connected."
        }
      },
      "type": "object",
      "description": "Logical interface."
    },
    "RenameInstanceRequest": {
      "description": "Message requesting rename of a server.",
      "id": "RenameInstanceRequest",
      "type": "object",
      "properties": {
        "newInstanceId": {
          "type": "string",
          "description": "Required. The new `id` of the instance."
        }
      }
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "Status"
    },
    "RenameNetworkRequest": {
      "id": "RenameNetworkRequest",
      "description": "Message requesting rename of a server.",
      "type": "object",
      "properties": {
        "newNetworkId": {
          "description": "Required. The new `id` of the network.",
          "type": "string"
        }
      }
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "properties": {
        "volumeSnapshots": {
          "description": "The list of snapshots.",
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListVolumeSnapshotsResponse",
      "description": "Response message containing the list of volume snapshots."
    },
    "StartInstanceResponse": {
      "type": "object",
      "id": "StartInstanceResponse",
      "properties": {},
      "description": "Response message from starting a server."
    },
    "ListSSHKeysResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "description": "The SSH keys registered in the project.",
          "type": "array"
        }
      },
      "description": "Message for response of ListSSHKeys.",
      "type": "object",
      "id": "ListSSHKeysResponse"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "ListLunsResponse": {
      "properties": {
        "luns": {
          "description": "The list of luns.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message containing the list of storage volume luns.",
      "id": "ListLunsResponse",
      "type": "object"
    },
    "EnableInteractiveSerialConsoleResponse": {
      "id": "EnableInteractiveSerialConsoleResponse",
      "properties": {},
      "description": "Message for response of EnableInteractiveSerialConsole.",
      "type": "object"
    },
    "StartInstanceRequest": {
      "description": "Message requesting to start a server.",
      "id": "StartInstanceRequest",
      "properties": {},
      "type": "object"
    },
    "Instance": {
      "id": "Instance",
      "properties": {
        "machineType": {
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses."
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "type": "array"
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "loginInfo": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Text field about info for logging in."
        },
        "luns": {
          "type": "array",
          "description": "Immutable. List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          }
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Create a time stamp."
        },
        "firmwareVersion": {
          "description": "Output only. The firmware version for the instance.",
          "type": "string",
          "readOnly": true
        },
        "interactiveSerialConsoleEnabled": {
          "readOnly": true,
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Update a time stamp."
        },
        "id": {
          "readOnly": true,
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "type": "string"
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "description": "Output only. List of networks associated with this server.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "description": "Output only. The state of the server.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ]
        },
        "workloadProfile": {
          "type": "string",
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "WORKLOAD_PROFILE_GENERIC",
            "WORKLOAD_PROFILE_HANA"
          ],
          "description": "The workload profile for the instance.",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ]
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        }
      },
      "description": "A server.",
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32",
          "type": "integer"
        },
        "reservedSpaceGib": {
          "type": "string",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64"
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "format": "int64"
        },
        "reservedSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true."
        }
      },
      "type": "object",
      "id": "SnapshotReservationDetail",
      "description": "Details about snapshot space reservation and usage on the storage volume."
    },
    "NfsExport": {
      "id": "NfsExport",
      "type": "object",
      "description": "A NFS export entry.",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "permissions": {
          "type": "string",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        }
      }
    },
    "NetworkMountPoint": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "Ip address of the server."
        },
        "logicalInterface": {
          "description": "Logical interface to detach from.",
          "type": "string"
        },
        "instance": {
          "type": "string",
          "description": "Instance to attach network to."
        },
        "defaultGateway": {
          "description": "Network should be a default gateway.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Mount point for a network.",
      "id": "NetworkMountPoint"
    },
    "RenameNfsShareRequest": {
      "type": "object",
      "id": "RenameNfsShareRequest",
      "description": "Message requesting rename of a server.",
      "properties": {
        "newNfsshareId": {
          "type": "string",
          "description": "Required. The new `id` of the nfsshare."
        }
      }
    },
    "ListOSImagesResponse": {
      "description": "Request for getting all available OS images.",
      "id": "ListOSImagesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "osImages": {
          "description": "The OS images available.",
          "items": {
            "$ref": "OSImage"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "type": "object",
      "properties": {
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "type": "array"
        },
        "interfaceIndex": {
          "deprecated": true,
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location"
    },
    "ResetInstanceRequest": {
      "type": "object",
      "properties": {},
      "id": "ResetInstanceRequest",
      "description": "Message requesting to reset a server."
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "properties": {
        "serviceCidr": {
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any.",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "description": "The type of this network, either Client or Private.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string",
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ]
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the network config."
        }
      },
      "type": "object",
      "description": "Configuration parameters for a new network."
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "description": "A provisioning configuration.",
      "type": "object",
      "properties": {
        "vpcScEnabled": {
          "description": "If true, VPC SC is enabled for the cluster.",
          "type": "boolean"
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Last update timestamp."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "readOnly": true
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "customId": {
          "description": "Optional. The user-defined identifier of the provisioning config.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "email": {
          "type": "string",
          "deprecated": true,
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages."
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "instances": {
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array"
        },
        "networks": {
          "description": "Networks to be created.",
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "cloudConsoleUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI to Cloud Console UI view of this provisioning config."
        }
      }
    },
    "RestoreVolumeSnapshotRequest": {
      "description": "Message for restoring a volume snapshot.",
      "type": "object",
      "properties": {},
      "id": "RestoreVolumeSnapshotRequest"
    },
    "NfsShare": {
      "id": "NfsShare",
      "properties": {
        "volume": {
          "readOnly": true,
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning.",
          "type": "string"
        },
        "allowedClients": {
          "type": "array",
          "items": {
            "$ref": "AllowedClient"
          },
          "description": "List of allowed access points."
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "Immutable. The storage type of the underlying volume.",
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "nfsShareId": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The name of the NFS share.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "readOnly": true,
          "description": "Output only. The state of the NFS share.",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ]
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        }
      },
      "description": "An NFS share.",
      "type": "object"
    },
    "LogicalNetworkInterface": {
      "type": "object",
      "id": "LogicalNetworkInterface",
      "properties": {
        "networkType": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "description": "Type of network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "network": {
          "type": "string",
          "description": "Name of the network"
        }
      },
      "description": "Each logical network interface is effectively a network and IP pair."
    },
    "NetworkAddressReservation": {
      "description": "A reservation of one or more addresses in a network.",
      "type": "object",
      "id": "NetworkAddressReservation",
      "properties": {
        "endAddress": {
          "type": "string",
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        }
      }
    },
    "Lun": {
      "type": "object",
      "properties": {
        "expireTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time after which LUN will be fully deleted. It is filled only for LUNs in COOL_OFF state."
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN.",
          "type": "string",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ]
        },
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING",
            "COOL_OFF"
          ],
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted.",
            "The LUN is in cool off state. It will be deleted after `expire_time`."
          ]
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the LUN."
        },
        "wwid": {
          "description": "The WWID for this LUN.",
          "type": "string"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The size of this LUN, in gigabytes.",
          "type": "string",
          "format": "int64"
        },
        "multiprotocolType": {
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "type": "string",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ]
        },
        "instances": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Instances this Lun is attached to.",
          "items": {
            "type": "string"
          }
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        }
      },
      "id": "Lun",
      "description": "A storage volume logical unit number (LUN)."
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "description": "Network template.",
      "type": "object",
      "properties": {
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to.",
          "type": "array"
        },
        "name": {
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "readOnly": true,
          "type": "string"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "description": "Logical interfaces.",
          "type": "array"
        }
      }
    },
    "EvictLunRequest": {
      "description": "Request for skip lun cooloff and delete it.",
      "type": "object",
      "id": "EvictLunRequest",
      "properties": {}
    },
    "Operation": {
      "type": "object",
      "properties": {
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "StopInstanceResponse": {
      "id": "StopInstanceResponse",
      "type": "object",
      "properties": {},
      "description": "Response message from stopping a server."
    },
    "RenameVolumeRequest": {
      "description": "Message requesting rename of a server.",
      "id": "RenameVolumeRequest",
      "type": "object",
      "properties": {
        "newVolumeId": {
          "description": "Required. The new `id` of the volume.",
          "type": "string"
        }
      }
    },
    "EvictVolumeRequest": {
      "type": "object",
      "properties": {},
      "id": "EvictVolumeRequest",
      "description": "Request for skip volume cooloff and delete it."
    },
    "SubmitProvisioningConfigRequest": {
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        }
      },
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigRequest"
    },
    "LunRange": {
      "type": "object",
      "description": "A LUN(Logical Unit Number) range.",
      "id": "LunRange",
      "properties": {
        "quantity": {
          "format": "int32",
          "description": "Number of LUNs to create.",
          "type": "integer"
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of each LUN, in GB.",
          "type": "integer"
        }
      }
    },
    "DisableInteractiveSerialConsoleResponse": {
      "type": "object",
      "properties": {},
      "id": "DisableInteractiveSerialConsoleResponse",
      "description": "Message for response of DisableInteractiveSerialConsole."
    },
    "SSHKey": {
      "id": "SSHKey",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\"."
        },
        "publicKey": {
          "type": "string",
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format."
        }
      },
      "description": "An SSH key, used for authorizing with the interactive serial console feature."
    },
    "ListNetworksResponse": {
      "id": "ListNetworksResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks.",
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      },
      "description": "Response message containing the list of networks."
    },
    "AllowedClient": {
      "type": "object",
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient",
      "properties": {
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "mountPermissions": {
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string"
        },
        "nfsPath": {
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "readOnly": true,
          "type": "string"
        },
        "shareIp": {
          "type": "string",
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "readOnly": true
        }
      }
    },
    "ListVolumesResponse": {
      "properties": {
        "volumes": {
          "description": "The list of storage volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes."
    },
    "OSImage": {
      "description": "Operation System image.",
      "type": "object",
      "id": "OSImage",
      "properties": {
        "supportedNetworkTemplates": {
          "description": "Network templates that can be used with this OS Image.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "array"
        },
        "name": {
          "description": "Output only. OS Image's unique name.",
          "type": "string",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        }
      }
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "description": "A snapshot of a volume. Only boot volumes can have snapshots.",
      "type": "object",
      "properties": {
        "storageVolume": {
          "type": "string",
          "description": "Output only. The name of the volume which this snapshot belongs to.",
          "readOnly": true
        },
        "description": {
          "description": "The description of the snapshot.",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An identifier for the snapshot, generated by the backend."
        },
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The creation time of the snapshot.",
          "type": "string"
        }
      }
    },
    "EnableInteractiveSerialConsoleRequest": {
      "id": "EnableInteractiveSerialConsoleRequest",
      "properties": {},
      "description": "Message for enabling the interactive serial console on an instance.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "ResetInstanceResponse": {
      "description": "Response message from resetting a server.",
      "id": "ResetInstanceResponse",
      "properties": {},
      "type": "object"
    },
    "InstanceConfig": {
      "type": "object",
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "sshKeyNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of names of ssh keys used to provision the instance."
        },
        "networkTemplate": {
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
          "type": "string"
        },
        "networkConfig": {
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "type": "string",
          "description": "The type of network configuration on the instance."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "accountNetworksEnabled": {
          "description": "If true networks can be from different projects of the same vendor account.",
          "type": "boolean"
        },
        "privateNetwork": {
          "deprecated": true,
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "deprecated": true,
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the instance config."
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        }
      }
    },
    "DisableInteractiveSerialConsoleRequest": {
      "description": "Message for disabling the interactive serial console on an instance.",
      "id": "DisableInteractiveSerialConsoleRequest",
      "type": "object",
      "properties": {}
    },
    "QosPolicy": {
      "type": "object",
      "id": "QosPolicy",
      "properties": {
        "bandwidthGbps": {
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number",
          "format": "double"
        }
      },
      "description": "QOS policy parameters."
    },
    "ListNetworkUsageResponse": {
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs."
        }
      },
      "description": "Response with Networks with IPs",
      "type": "object",
      "id": "ListNetworkUsageResponse"
    },
    "VRF": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "description": "The possible state of VRF."
        },
        "vlanAttachments": {
          "type": "array",
          "description": "The list of VLAN attachments for the VRF.",
          "items": {
            "$ref": "VlanAttachment"
          }
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility."
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        }
      },
      "description": "A network VRF.",
      "id": "VRF",
      "type": "object"
    },
    "ResizeVolumeRequest": {
      "description": "Request for emergency resize Volume.",
      "type": "object",
      "properties": {
        "sizeGib": {
          "type": "string",
          "format": "int64",
          "description": "New Volume size, in GiB."
        }
      },
      "id": "ResizeVolumeRequest"
    },
    "ListNfsSharesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nfsShares": {
          "type": "array",
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "type": "object",
      "description": "Response message containing the list of NFS shares.",
      "id": "ListNfsSharesResponse"
    },
    "SubmitProvisioningConfigResponse": {
      "id": "SubmitProvisioningConfigResponse",
      "description": "Response for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "type": "object"
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "provisioningQuotas": {
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project."
        }
      },
      "type": "object",
      "description": "Response message for the list of provisioning quotas."
    },
    "VolumeConfig": {
      "type": "object",
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol."
        },
        "performanceTier": {
          "description": "Performance tier of the Volume. Default is SHARED.",
          "type": "string",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ]
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "name": {
          "description": "Output only. The name of the volume config.",
          "type": "string",
          "readOnly": true
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume."
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array"
        },
        "lunRanges": {
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          }
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB.",
          "format": "int32"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "storageAggregatePool": {
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.",
          "type": "string"
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        }
      },
      "id": "VolumeConfig"
    },
    "Network": {
      "properties": {
        "macAddress": {
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "pod": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Pod name."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "type": "array"
        },
        "gatewayIp": {
          "type": "string",
          "description": "Output only. Gateway ip address.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "mountPoints": {
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "description": "Input only. List of mount points to attach the network to.",
          "type": "array"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "description": "The Network state."
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        }
      },
      "id": "Network",
      "description": "A Network.",
      "type": "object"
    },
    "IntakeVlanAttachment": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier of the VLAN attachment.",
          "type": "string"
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      },
      "description": "A GCP vlan attachment.",
      "id": "IntakeVlanAttachment"
    },
    "StopInstanceRequest": {
      "properties": {},
      "id": "StopInstanceRequest",
      "description": "Message requesting to stop a server.",
      "type": "object"
    },
    "VlanAttachment": {
      "id": "VlanAttachment",
      "type": "object",
      "description": "VLAN attachment details.",
      "properties": {
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "peerVlanId": {
          "type": "string",
          "format": "int64",
          "description": "The peer vlan ID of the attachment."
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "id": {
          "description": "Immutable. The identifier of the attachment within vrf.",
          "type": "string"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        },
        "interconnectAttachment": {
          "description": "Optional. The name of the vlan attachment within vrf. This is of the form projects/{project_number}/regions/{region}/interconnectAttachments/{interconnect_attachment}",
          "type": "string"
        }
      }
    },
    "InstanceQuota": {
      "type": "object",
      "id": "InstanceQuota",
      "description": "A resource budget.",
      "properties": {
        "availableMachineCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of machines than can be created for the given location and instance_type."
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the instance quota.",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type. Deprecated: use gcp_service.",
          "type": "string",
          "deprecated": true
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        }
      }
    },
    "NetworkUsage": {
      "properties": {
        "network": {
          "$ref": "Network",
          "description": "Network."
        },
        "usedIps": {
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Network with all used IP addresses.",
      "id": "NetworkUsage"
    },
    "DetachLunRequest": {
      "id": "DetachLunRequest",
      "type": "object",
      "description": "Message for detach specific LUN from an Instance.",
      "properties": {
        "skipReboot": {
          "description": "If true, performs lun unmapping without instance reboot.",
          "type": "boolean"
        },
        "lun": {
          "description": "Required. Name of the Lun to detach.",
          "type": "string"
        }
      }
    },
    "ListInstancesResponse": {
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "instances": {
          "items": {
            "$ref": "Instance"
          },
          "type": "array",
          "description": "The list of servers."
        }
      }
    },
    "Volume": {
      "type": "object",
      "properties": {
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "workloadProfile": {
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "GENERIC",
            "HANA"
          ],
          "description": "The workload profile for the volume.",
          "type": "string",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ]
        },
        "maxSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB."
        },
        "state": {
          "description": "The state of this storage volume.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "COOL_OFF"
          ],
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated.",
            "The storage volume is in cool off state. It will be deleted after `expire_time`."
          ]
        },
        "expireTime": {
          "description": "Output only. Time after which volume will be fully deleted. It is filled only for volumes in COOLOFF state.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "currentSizeGib": {
          "type": "string",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64"
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "description": "The behavior to use when snapshot reserved space is full."
        },
        "remainingSpaceGib": {
          "format": "int64",
          "type": "string",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots."
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        },
        "protocol": {
          "type": "string",
          "description": "Output only. Storage protocol for the Volume.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ]
        },
        "instances": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Instances this Volume is attached to. This field is set only in Get requests.",
          "items": {
            "type": "string"
          }
        },
        "performanceTier": {
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "type": "string",
          "description": "Immutable. Performance tier of the Volume. Default is SHARED."
        },
        "storageAggregatePool": {
          "type": "string",
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes."
        },
        "requestedSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "The requested size of this storage volume, in GiB."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "attached": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Is the Volume attached at at least one instance. This field is a lightweight counterpart of `instances` field. It is filled in List responses as well."
        },
        "bootVolume": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN."
        },
        "autoGrownSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0."
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "notes": {
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.",
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this volume.",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "emergencySizeGib": {
          "type": "string",
          "format": "int64",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "originallyRequestedSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Originally requested size, in GiB."
        }
      },
      "id": "Volume",
      "description": "A storage volume."
    },
    "ProvisioningQuota": {
      "type": "object",
      "properties": {
        "networkBandwidth": {
          "format": "int64",
          "type": "string",
          "description": "Network bandwidth, Gbps"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "storageGib": {
          "description": "Storage size (GB).",
          "format": "int64",
          "type": "string"
        },
        "assetType": {
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "description": "The asset type of this provisioning quota."
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "serverCount": {
          "type": "string",
          "description": "Server count.",
          "format": "int64"
        },
        "name": {
          "description": "Output only. The name of the provisioning quota.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "ProvisioningQuota",
      "description": "A provisioning quota for a given project."
    }
  },
  "id": "baremetalsolution:v2",
  "version_module": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "baremetalsolution.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/locations",
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "path": "v2/{+name}/locations"
            },
            "get": {
              "response": {
                "$ref": "Location"
              },
              "id": "baremetalsolution.projects.locations.get",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string"
                }
              },
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET"
            }
          },
          "resources": {
            "nfsShares": {
              "methods": {
                "create": {
                  "path": "v2/{+parent}/nfsShares",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create an NFS share."
                },
                "rename": {
                  "path": "v2/{+name}:rename",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RenameNfsShareRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "RenameNfsShare sets a new name for an nfsshare. Use with caution, previous names become immediately invalidated.",
                  "id": "baremetalsolution.projects.locations.nfsShares.rename",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The `name` field is used to identify the nfsshare. Format: projects/{project}/locations/{location}/nfsshares/{nfsshare}",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:rename"
                },
                "patch": {
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "description": "Update details of a single NFS share.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Immutable. The name of the NFS share.",
                      "required": true
                    }
                  },
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/nfsShares",
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List NFS shares.",
                  "parameters": {
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. The name of the NFS share to delete.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "httpMethod": "DELETE",
                  "description": "Delete an NFS share. The underlying volume is automatically deleted."
                },
                "get": {
                  "description": "Get details of a single NFS share.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "path": "v2/{+name}"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "List the budget details to provision resources on a given project.",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "path": "v2/{+parent}/provisioningQuotas",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "osImages": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListOSImagesResponse"
                  },
                  "path": "v2/{+parent}/osImages",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/osImages",
                  "description": "Retrieves the list of OS images which are currently approved.",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.osImages.list"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the ProvisioningConfig."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Get ProvisioningConfig by name.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "httpMethod": "GET"
                },
                "submit": {
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Submit a provisiong configuration for a given project."
                },
                "create": {
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "path": "v2/{+parent}/provisioningConfigs",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Create new ProvisioningConfig."
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    },
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update existing ProvisioningConfig.",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "detachLun": {
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "path": "v2/{+instance}:detachLun",
                  "description": "Detach LUN from Instance."
                },
                "get": {
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details about a single server.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "path": "v2/{+name}"
                },
                "enableInteractiveSerialConsole": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Enable the interactive serial console feature on an instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single server.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "description": "List servers in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default."
                    }
                  }
                },
                "rename": {
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. The `name` field is used to identify the instance. Format: projects/{project}/locations/{location}/instances/{instance}",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "RenameInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.rename",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}:rename",
                  "description": "RenameInstance sets a new name for an instance. Use with caution, previous names become immediately invalidated.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "disableInteractiveSerialConsole": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "path": "v2/{+name}:disableInteractiveSerialConsole",
                  "description": "Disable the interactive serial console feature on an instance."
                },
                "reset": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "path": "v2/{+name}:reset"
                },
                "start": {
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:start",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "description": "Starts a server that was shutdown.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  }
                },
                "stop": {
                  "description": "Stop a running server.",
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "path": "v2/{+name}:stop",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Get details about an operation.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            },
            "volumes": {
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "description": "Required. Name of the resource."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "response": {
                        "$ref": "Lun"
                      }
                    },
                    "list": {
                      "path": "v2/{+parent}/luns",
                      "description": "List storage volume luns for given storage volume.",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results from the server.",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "required": true,
                          "location": "path"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListLunsResponse"
                      }
                    },
                    "evict": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "EvictLunRequest"
                      },
                      "path": "v2/{+name}:evict",
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.luns.evict",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the lun."
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Skips lun's cooloff and deletes it now. Lun must be in cooloff state."
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "create": {
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "path": "v2/{+parent}/snapshots",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The volume to snapshot.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "path": "v2/{+parent}/snapshots",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list"
                    },
                    "get": {
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "description": "Required. The name of the snapshot."
                        }
                      },
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "restoreVolumeSnapshot": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "parameters": {
                        "volumeSnapshot": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume.",
                          "location": "path",
                          "required": true
                        }
                      }
                    },
                    "delete": {
                      "path": "v2/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "description": "Required. The name of the snapshot to delete.",
                          "location": "path"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "description": "Get details of a single storage volume.",
                  "response": {
                    "$ref": "Volume"
                  }
                },
                "evict": {
                  "id": "baremetalsolution.projects.locations.volumes.evict",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "EvictVolumeRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Skips volume's cooloff and deletes it now. Volume must be in cooloff state.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the Volume.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:evict",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict"
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "path": "v2/{+parent}/volumes",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "description": "List storage volumes in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "description": "Update details of a single storage volume.",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Volume"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'"
                    }
                  }
                },
                "rename": {
                  "response": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename",
                  "request": {
                    "$ref": "RenameVolumeRequest"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.rename",
                  "description": "RenameVolume sets a new name for a volume. Use with caution, previous names become immediately invalidated.",
                  "path": "v2/{+name}:rename",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The `name` field is used to identify the volume. Format: projects/{project}/locations/{location}/volumes/{volume}"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "resize": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "parameterOrder": [
                    "volume"
                  ],
                  "description": "Emergency Volume resize.",
                  "parameters": {
                    "volume": {
                      "description": "Required. Volume to resize.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+volume}:resize",
                  "id": "baremetalsolution.projects.locations.volumes.resize"
                }
              }
            },
            "sshKeys": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$",
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "description": "Deletes a public SSH key registered in the specified project."
                },
                "create": {
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "SSHKey"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent containing the SSH keys.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "sshKeyId": {
                      "location": "query",
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "path": "v2/{+parent}/sshKeys",
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SSHKey"
                  }
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "path": "v2/{+parent}/sshKeys",
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.sshKeys.list",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\".",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  }
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/networks",
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "description": "List network in a given project and location.",
                  "httpMethod": "GET"
                },
                "patch": {
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Network"
                  },
                  "description": "Update details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "PATCH"
                },
                "listNetworkUsage": {
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "parameterOrder": [
                    "location"
                  ],
                  "parameters": {
                    "location": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value (project and location)."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "path": "v2/{+location}/networks:listNetworkUsage"
                },
                "rename": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RenameNetworkRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "RenameNetwork sets a new name for a network. Use with caution, previous names become immediately invalidated.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The `name` field is used to identify the network. Format: projects/{project}/locations/{location}/networks/{network}",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  },
                  "path": "v2/{+name}:rename",
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.networks.rename",
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename"
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "description": "Get details of a single network.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Network"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "servicePath": "",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}

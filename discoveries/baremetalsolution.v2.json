{
  "name": "baremetalsolution",
  "fullyEncodeReservedExpansion": true,
  "servicePath": "",
  "discoveryVersion": "v1",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/bare-metal",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version": "v2",
  "schemas": {
    "NetworkAddressReservation": {
      "description": "A reservation of one or more addresses in a network.",
      "properties": {
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        },
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        }
      },
      "id": "NetworkAddressReservation",
      "type": "object"
    },
    "Volume": {
      "type": "object",
      "description": "A storage volume.",
      "properties": {
        "pod": {
          "description": "Immutable. Pod name.",
          "type": "string"
        },
        "bootVolume": {
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.",
          "readOnly": true,
          "type": "boolean"
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "description": "Originally requested size, in GiB.",
          "format": "int64"
        },
        "emergencySizeGib": {
          "type": "string",
          "format": "int64",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value."
        },
        "currentSizeGib": {
          "type": "string",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64"
        },
        "maxSizeGib": {
          "type": "string",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64"
        },
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "type": "string"
        },
        "storageType": {
          "description": "The storage type for this volume.",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64",
          "type": "string"
        },
        "requestedSizeGib": {
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true
        },
        "protocol": {
          "type": "string",
          "description": "Output only. Storage protocol for the Volume.",
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "readOnly": true
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "description": "The state of this storage volume."
        }
      },
      "id": "Volume"
    },
    "Network": {
      "description": "A Network.",
      "id": "Network",
      "type": "object",
      "properties": {
        "state": {
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned."
          ],
          "type": "string",
          "description": "The Network state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING"
          ]
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "macAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of physical interfaces."
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "reservations": {
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "type": "array",
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        }
      }
    },
    "DetachLunRequest": {
      "id": "DetachLunRequest",
      "description": "Message for detach specific LUN from an Instance.",
      "properties": {
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        },
        "lun": {
          "description": "Required. Name of the Lun to detach.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "id": "SnapshotReservationDetail",
      "type": "object",
      "properties": {
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "format": "int32",
          "type": "integer"
        },
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64",
          "type": "string"
        },
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Location": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location"
    },
    "ProvisioningQuota": {
      "description": "A provisioning quota for a given project.",
      "type": "object",
      "properties": {
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "type": "string",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ]
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "networkBandwidth": {
          "format": "int64",
          "type": "string",
          "description": "Network bandwidth, Gbps"
        },
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "storageGib": {
          "format": "int64",
          "type": "string",
          "description": "Storage size (GB)."
        },
        "serverCount": {
          "type": "string",
          "description": "Server count.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota."
        }
      },
      "id": "ProvisioningQuota"
    },
    "StopInstanceRequest": {
      "type": "object",
      "id": "StopInstanceRequest",
      "properties": {},
      "description": "Message requesting to stop a server."
    },
    "StartInstanceRequest": {
      "id": "StartInstanceRequest",
      "type": "object",
      "description": "Message requesting to start a server.",
      "properties": {}
    },
    "ListProvisioningQuotasResponse": {
      "description": "Response message for the list of provisioning quotas.",
      "id": "ListProvisioningQuotasResponse",
      "type": "object",
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "LogicalNetworkInterface": {
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair.",
      "properties": {
        "network": {
          "description": "Name of the network",
          "type": "string"
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "ipAddress": {
          "description": "IP address in the network",
          "type": "string"
        },
        "networkType": {
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string"
        }
      },
      "id": "LogicalNetworkInterface"
    },
    "ListInstancesResponse": {
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse",
      "properties": {
        "instances": {
          "description": "The list of servers.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "VolumeConfig": {
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "The requested size of this volume, in GB."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string",
          "description": "Volume protocol.",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ]
        },
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC."
        },
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the volume config.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ListNfsSharesResponse": {
      "description": "Response message containing the list of NFS shares.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "nfsShares": {
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListNfsSharesResponse"
    },
    "ServerNetworkTemplate": {
      "properties": {
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "description": "Logical interfaces."
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Instance types this template is applicable to."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\"."
        }
      },
      "description": "Network template.",
      "id": "ServerNetworkTemplate",
      "type": "object"
    },
    "ListLunsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "luns": {
          "description": "The list of luns.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        }
      },
      "description": "Response message containing the list of storage volume luns.",
      "type": "object",
      "id": "ListLunsResponse"
    },
    "Lun": {
      "type": "object",
      "description": "A storage volume logical unit number (LUN).",
      "properties": {
        "multiprotocolType": {
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "type": "string",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ]
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN.",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the LUN."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the LUN, generated by the backend."
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "wwid": {
          "description": "The WWID for this LUN.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ]
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "sizeGb": {
          "type": "string",
          "format": "int64",
          "description": "The size of this LUN, in gigabytes."
        }
      },
      "id": "Lun"
    },
    "ListVolumesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "volumes": {
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        }
      },
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes.",
      "type": "object"
    },
    "ListNetworksResponse": {
      "description": "Response message containing the list of networks.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "networks": {
          "description": "The list of networks.",
          "items": {
            "$ref": "Network"
          },
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      },
      "id": "ListNetworksResponse"
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "id": "FetchInstanceProvisioningSettingsResponse",
      "properties": {
        "images": {
          "description": "The OS images available.",
          "type": "array",
          "items": {
            "$ref": "OSImage"
          }
        }
      },
      "type": "object",
      "description": "Response with all provisioning settings."
    },
    "VRF": {
      "type": "object",
      "description": "A network VRF.",
      "id": "VRF",
      "properties": {
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        },
        "state": {
          "description": "The possible state of VRF.",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        }
      }
    },
    "IntakeVlanAttachment": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        }
      },
      "id": "IntakeVlanAttachment",
      "type": "object",
      "description": "A GCP vlan attachment."
    },
    "NetworkUsage": {
      "properties": {
        "network": {
          "description": "Network.",
          "$ref": "Network"
        },
        "usedIps": {
          "type": "array",
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Network with all used IP addresses.",
      "type": "object",
      "id": "NetworkUsage"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata from a long-running operation.",
      "properties": {
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the action executed by the operation."
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used with the operation."
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ProvisioningConfig": {
      "description": "A provisioning configuration.",
      "type": "object",
      "properties": {
        "networks": {
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array"
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "description": "Instances to be created.",
          "type": "array"
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "vpcScEnabled": {
          "description": "If true, VPC SC is enabled for the cluster.",
          "type": "boolean"
        },
        "statusMessage": {
          "description": "Optional status messages associated with the FAILED state.",
          "type": "string"
        },
        "ticketId": {
          "type": "string",
          "description": "A generated ticket id to track provisioning request."
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "volumes": {
          "description": "Volumes to be created.",
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "description": "Output only. State of ProvisioningConfig."
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning config."
        }
      },
      "id": "ProvisioningConfig"
    },
    "NetworkAddress": {
      "type": "object",
      "id": "NetworkAddress",
      "properties": {
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        }
      },
      "description": "A network."
    },
    "OSImage": {
      "id": "OSImage",
      "properties": {
        "name": {
          "description": "Output only. OS Image's unique name.",
          "type": "string",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "supportedNetworkTemplates": {
          "description": "Network templates that can be used with this OS Image.",
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          }
        },
        "description": {
          "description": "OS Image description.",
          "type": "string"
        }
      },
      "description": "Operation System image.",
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response with Networks with IPs"
    },
    "ResetInstanceRequest": {
      "id": "ResetInstanceRequest",
      "properties": {},
      "type": "object",
      "description": "Message requesting to reset a server."
    },
    "ResizeVolumeRequest": {
      "properties": {
        "sizeGib": {
          "format": "int64",
          "type": "string",
          "description": "New Volume size, in GiB."
        }
      },
      "description": "Request for emergency resize Volume.",
      "type": "object",
      "id": "ResizeVolumeRequest"
    },
    "Instance": {
      "type": "object",
      "id": "Instance",
      "description": "A server.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
        },
        "loginInfo": {
          "type": "string",
          "description": "Output only. Text field about info for logging in.",
          "readOnly": true
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only."
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "id": {
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "readOnly": true,
          "type": "string"
        },
        "networks": {
          "readOnly": true,
          "items": {
            "$ref": "Network"
          },
          "description": "Output only. List of networks associated with this server.",
          "type": "array"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Update a time stamp."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Create a time stamp.",
          "type": "string"
        },
        "interactiveSerialConsoleEnabled": {
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "readOnly": true,
          "type": "boolean"
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.",
          "type": "array"
        },
        "state": {
          "description": "Output only. The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "Immutable. List of LUNs associated with this server."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled."
        }
      }
    },
    "LunRange": {
      "description": "A LUN(Logical Unit Number) range.",
      "properties": {
        "quantity": {
          "type": "integer",
          "description": "Number of LUNs to create.",
          "format": "int32"
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of each LUN, in GB.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "LunRange"
    },
    "NfsShare": {
      "id": "NfsShare",
      "properties": {
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true,
          "type": "string"
        },
        "requestedSizeGib": {
          "format": "int64",
          "description": "The requested size, in GiB.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allowedClients": {
          "items": {
            "$ref": "AllowedClient"
          },
          "type": "array",
          "description": "List of allowed access points."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "description": "The state of the NFS share."
        },
        "volume": {
          "type": "string",
          "description": "The volume containing the share."
        },
        "nfsShareId": {
          "readOnly": true,
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the NFS share.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "An NFS share."
    },
    "SubmitProvisioningConfigResponse": {
      "description": "Response for SubmitProvisioningConfig.",
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      },
      "id": "SubmitProvisioningConfigResponse"
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number",
          "format": "double"
        }
      },
      "description": "QOS policy parameters.",
      "type": "object",
      "id": "QosPolicy"
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "type": "object",
      "properties": {
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the instance config.",
          "type": "string"
        },
        "networkConfig": {
          "type": "string",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "description": "The type of network configuration on the instance.",
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ]
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "networkTemplate": {
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
          "type": "string"
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        }
      },
      "description": "Configuration parameters for a new instance."
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "properties": {
        "name": {
          "description": "Output only. The name of the instance quota.",
          "readOnly": true,
          "type": "string"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        },
        "availableMachineCount": {
          "type": "integer",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        }
      },
      "id": "InstanceQuota",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "description": "Logical interface.",
      "properties": {
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "type": {
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "description": "Interface type."
        },
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        }
      }
    },
    "AllowedClient": {
      "properties": {
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        },
        "nfsPath": {
          "readOnly": true,
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "type": "string"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "shareIp": {
          "description": "The IP address of the share on this network.",
          "type": "string"
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "mountPermissions": {
          "description": "Mount permissions.",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "type": "object",
      "properties": {
        "vlanSameProject": {
          "type": "boolean",
          "description": "Whether the VLAN attachment pair is located in the same project."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the network config.",
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "vlanAttachments": {
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array"
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ]
        },
        "serviceCidr": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        }
      },
      "description": "Configuration parameters for a new network."
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "properties": {
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "interfaceIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."
        },
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "type": "array",
          "items": {
            "$ref": "LogicalNetworkInterface"
          }
        }
      },
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "type": "object"
    },
    "NfsExport": {
      "id": "NfsExport",
      "type": "object",
      "description": "A NFS export entry.",
      "properties": {
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions.",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "type": "string"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        }
      }
    },
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "VlanAttachment": {
      "description": "VLAN attachment details.",
      "id": "VlanAttachment",
      "properties": {
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "format": "int64",
          "type": "string"
        },
        "peerIp": {
          "type": "string",
          "description": "The peer IP of the attachment."
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    }
  },
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "protocol": "rest",
  "id": "baremetalsolution:v2",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "baremetalsolution.projects.locations.get",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Location"
              },
              "path": "v2/{+name}",
              "httpMethod": "GET"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "id": "baremetalsolution.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "path": "v2/{+name}/locations",
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "resize": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Emergency Volume resize.",
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "parameters": {
                    "volume": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "description": "Required. Volume to resize.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+volume}:resize",
                  "parameterOrder": [
                    "volume"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single storage volume.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}"
                },
                "patch": {
                  "request": {
                    "$ref": "Volume"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Update details of a single storage volume.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "path": "v2/{+parent}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "httpMethod": "GET",
                  "description": "List storage volumes in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "path": "v2/{+name}",
                      "httpMethod": "GET",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "type": "string"
                        }
                      },
                      "description": "Get details of a single storage logical unit number(LUN)."
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results from the server.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "description": "List storage volume luns for given storage volume.",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "path": "v2/{+parent}/luns",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              }
            },
            "nfsShares": {
              "methods": {
                "list": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "path": "v2/{+parent}/nfsShares",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List NFS shares.",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Get details of a single NFS share.",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "path": "v2/{+name}"
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string",
                      "description": "Output only. The name of the NFS share."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "description": "Update details of a single NFS share."
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "description": "List the budget details to provision resources on a given project.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "path": "v2/{+parent}/provisioningQuotas",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "description": "The name of the operation resource."
                    }
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "start": {
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}:start",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Starts a server that was shutdown.",
                  "id": "baremetalsolution.projects.locations.instances.start"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`"
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "description": "Update details of a single server.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                },
                "reset": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+name}:reset",
                  "id": "baremetalsolution.projects.locations.instances.reset"
                },
                "stop": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}:stop",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Stop a running server.",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "description": "Get details about a single server.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "detachLun": {
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "description": "Required. Name of the instance.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "description": "Detach LUN from Instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+instance}:detachLun",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "DetachLunRequest"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent project and location."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "path": "v2/{+parent}/instances",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Create an Instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "request": {
                    "$ref": "Instance"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List servers in a given project and location.",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Update existing ProvisioningConfig.",
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The name of the provisioning config.",
                      "required": true
                    },
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}"
                },
                "get": {
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "description": "Get ProvisioningConfig by name.",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "httpMethod": "GET"
                },
                "submit": {
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "description": "Submit a provisiong configuration for a given project.",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "path": "v2/{+parent}/provisioningConfigs",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Create new ProvisioningConfig.",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true
                    }
                  }
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "httpMethod": "GET",
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "location"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "parameters": {
                    "location": {
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch"
                }
              }
            },
            "networks": {
              "methods": {
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Update details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Network"
                  }
                },
                "get": {
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Get details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.get"
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "List network in a given project and location.",
                  "parameters": {
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "path": "v2/{+parent}/networks",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "listNetworkUsage": {
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value (project and location).",
                      "location": "path"
                    }
                  },
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                }
              }
            }
          }
        }
      }
    }
  },
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "batchPath": "batch",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "kind": "discovery#restDescription",
  "title": "Bare Metal Solution API",
  "ownerDomain": "google.com",
  "revision": "20220731"
}

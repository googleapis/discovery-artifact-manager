{
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "kind": "discovery#restDescription",
  "version": "v2",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "basePath": "",
  "revision": "20230306",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "id": "baremetalsolution:v2",
  "fullyEncodeReservedExpansion": true,
  "title": "Bare Metal Solution API",
  "name": "baremetalsolution",
  "schemas": {
    "Network": {
      "properties": {
        "mountPoints": {
          "type": "array",
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "description": "Input only. List of mount points to attach the network to."
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "gatewayIp": {
          "description": "Output only. Gateway ip address.",
          "type": "string",
          "readOnly": true
        },
        "pod": {
          "type": "string",
          "description": "Output only. Pod name.",
          "readOnly": true
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "reservations": {
          "type": "array",
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "items": {
            "$ref": "NetworkAddressReservation"
          }
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "description": "The Network state."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string"
        },
        "macAddress": {
          "description": "List of physical interfaces.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network."
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "Whether network uses standard frames or jumbo ones."
        }
      },
      "type": "object",
      "description": "A Network.",
      "id": "Network"
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true."
        },
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64",
          "type": "string"
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "format": "int64"
        },
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "id": "SnapshotReservationDetail"
    },
    "ListSSHKeysResponse": {
      "description": "Message for response of ListSSHKeys.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "type": "array",
          "description": "The SSH keys registered in the project."
        }
      },
      "id": "ListSSHKeysResponse"
    },
    "InstanceQuota": {
      "id": "InstanceQuota",
      "type": "object",
      "description": "A resource budget.",
      "properties": {
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32",
          "type": "integer"
        },
        "instanceType": {
          "description": "Instance type. Deprecated: use gcp_service.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance quota.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        }
      }
    },
    "VRF": {
      "description": "A network VRF.",
      "id": "VRF",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility."
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "type": "string",
          "description": "The possible state of VRF.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ]
        },
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array"
        }
      }
    },
    "ProvisioningQuota": {
      "properties": {
        "networkBandwidth": {
          "type": "string",
          "format": "int64",
          "description": "Network bandwidth, Gbps"
        },
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ]
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota.",
          "type": "string"
        },
        "storageGib": {
          "type": "string",
          "format": "int64",
          "description": "Storage size (GB)."
        },
        "serverCount": {
          "description": "Server count.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "ProvisioningQuota",
      "description": "A provisioning quota for a given project.",
      "type": "object"
    },
    "NfsShare": {
      "id": "NfsShare",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The name of the NFS share.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The state of the NFS share.",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ]
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          },
          "type": "array"
        },
        "volume": {
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning.",
          "readOnly": true,
          "type": "string"
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "Immutable. The storage type of the underlying volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size, in GiB.",
          "format": "int64"
        },
        "nfsShareId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead."
        }
      },
      "description": "An NFS share."
    },
    "RenameVolumeRequest": {
      "properties": {
        "newVolumeId": {
          "type": "string",
          "description": "Required. The new `id` of the volume."
        }
      },
      "id": "RenameVolumeRequest",
      "type": "object",
      "description": "Message requesting rename of a server."
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      }
    },
    "StartInstanceRequest": {
      "id": "StartInstanceRequest",
      "description": "Message requesting to start a server.",
      "type": "object",
      "properties": {}
    },
    "RenameNfsShareRequest": {
      "description": "Message requesting rename of a server.",
      "properties": {
        "newNfsshareId": {
          "type": "string",
          "description": "Required. The new `id` of the nfsshare."
        }
      },
      "type": "object",
      "id": "RenameNfsShareRequest"
    },
    "OSImage": {
      "type": "object",
      "description": "Operation System image.",
      "properties": {
        "supportedNetworkTemplates": {
          "description": "Network templates that can be used with this OS Image.",
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. OS Image's unique name.",
          "type": "string"
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        }
      },
      "id": "OSImage"
    },
    "NetworkMountPoint": {
      "id": "NetworkMountPoint",
      "description": "Mount point for a network.",
      "properties": {
        "ipAddress": {
          "description": "Ip address of the server.",
          "type": "string"
        },
        "logicalInterface": {
          "type": "string",
          "description": "Logical interface to detach from."
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Network should be a default gateway."
        },
        "instance": {
          "description": "Instance to attach network to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VolumeSnapshot": {
      "properties": {
        "storageVolume": {
          "type": "string",
          "description": "Output only. The name of the volume which this snapshot belongs to.",
          "readOnly": true
        },
        "type": {
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the snapshot, generated by the backend.",
          "readOnly": true
        },
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The creation time of the snapshot."
        },
        "description": {
          "description": "The description of the snapshot.",
          "type": "string"
        }
      },
      "description": "A snapshot of a volume. Only boot volumes can have snapshots.",
      "id": "VolumeSnapshot",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "LogicalNetworkInterface": {
      "id": "LogicalNetworkInterface",
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair.",
      "properties": {
        "network": {
          "type": "string",
          "description": "Name of the network"
        },
        "ipAddress": {
          "description": "IP address in the network",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "networkType": {
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "description": "Logical interface.",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "properties": {
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        },
        "type": {
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "description": "Interface type."
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        }
      },
      "type": "object"
    },
    "RenameInstanceRequest": {
      "description": "Message requesting rename of a server.",
      "id": "RenameInstanceRequest",
      "type": "object",
      "properties": {
        "newInstanceId": {
          "type": "string",
          "description": "Required. The new `id` of the instance."
        }
      }
    },
    "StopInstanceRequest": {
      "description": "Message requesting to stop a server.",
      "properties": {},
      "type": "object",
      "id": "StopInstanceRequest"
    },
    "NetworkAddress": {
      "type": "object",
      "id": "NetworkAddress",
      "description": "A network.",
      "properties": {
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        }
      }
    },
    "DisableInteractiveSerialConsoleRequest": {
      "id": "DisableInteractiveSerialConsoleRequest",
      "properties": {},
      "type": "object",
      "description": "Message for disabling the interactive serial console on an instance."
    },
    "EvictLunRequest": {
      "properties": {},
      "id": "EvictLunRequest",
      "type": "object",
      "description": "Request for skip lun cooloff and delete it."
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "instances": {
          "description": "Instances to be created.",
          "type": "array",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "networks": {
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "customId": {
          "description": "Optional. The user-defined identifier of the provisioning config.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "readOnly": true
        },
        "statusMessage": {
          "description": "Optional status messages associated with the FAILED state.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "volumes": {
          "items": {
            "$ref": "VolumeConfig"
          },
          "type": "array",
          "description": "Volumes to be created."
        },
        "name": {
          "type": "string",
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "readOnly": true
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A provisioning configuration.",
      "type": "object"
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        }
      }
    },
    "NfsExport": {
      "description": "A NFS export entry.",
      "properties": {
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "permissions": {
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "type": "string",
          "description": "Export permissions.",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ]
        }
      },
      "id": "NfsExport",
      "type": "object"
    },
    "ResetInstanceRequest": {
      "id": "ResetInstanceRequest",
      "description": "Message requesting to reset a server.",
      "type": "object",
      "properties": {}
    },
    "ListInstancesResponse": {
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse",
      "properties": {
        "instances": {
          "description": "The list of servers.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Instance": {
      "id": "Instance",
      "properties": {
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses."
        },
        "machineType": {
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Create a time stamp.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Update a time stamp."
        },
        "networks": {
          "description": "Output only. List of networks associated with this server.",
          "readOnly": true,
          "items": {
            "$ref": "Network"
          },
          "type": "array"
        },
        "loginInfo": {
          "readOnly": true,
          "description": "Output only. Text field about info for logging in.",
          "type": "string"
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "workloadProfile": {
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "WORKLOAD_PROFILE_GENERIC",
            "WORKLOAD_PROFILE_HANA"
          ],
          "description": "The workload profile for the instance.",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        },
        "luns": {
          "description": "Immutable. List of LUNs associated with this server.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        },
        "id": {
          "readOnly": true,
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "networkTemplate": {
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "description": "Output only. The state of the server."
        },
        "firmwareVersion": {
          "description": "Output only. The firmware version for the instance.",
          "type": "string",
          "readOnly": true
        },
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false."
        }
      },
      "type": "object",
      "description": "A server."
    },
    "ListNetworksResponse": {
      "description": "Response message containing the list of networks.",
      "type": "object",
      "properties": {
        "networks": {
          "description": "The list of networks.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "ListNetworksResponse"
    },
    "RenameNetworkRequest": {
      "description": "Message requesting rename of a server.",
      "properties": {
        "newNetworkId": {
          "description": "Required. The new `id` of the network.",
          "type": "string"
        }
      },
      "id": "RenameNetworkRequest",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "type": "object",
      "properties": {
        "interfaceIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."
        },
        "logicalNetworkInterfaces": {
          "type": "array",
          "description": "List of logical network interfaces within a logical interface.",
          "items": {
            "$ref": "LogicalNetworkInterface"
          }
        },
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        }
      },
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface"
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "description": "Response message for the list of provisioning quotas.",
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "type": "array",
          "description": "The provisioning quotas registered in this project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "type": "object",
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs.",
          "type": "array"
        }
      },
      "description": "Response with Networks with IPs"
    },
    "NetworkConfig": {
      "description": "Configuration parameters for a new network.",
      "type": "object",
      "id": "NetworkConfig",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the network config.",
          "type": "string"
        },
        "bandwidth": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "type": {
          "description": "The type of this network, either Client or Private.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "vlanSameProject": {
          "type": "boolean",
          "description": "Whether the VLAN attachment pair is located in the same project."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "serviceCidr": {
          "type": "string",
          "description": "Service CIDR, if any.",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ]
        }
      }
    },
    "Volume": {
      "id": "Volume",
      "description": "A storage volume.",
      "properties": {
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true,
          "type": "string"
        },
        "storageType": {
          "description": "The storage type for this volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "Originally requested size, in GiB."
        },
        "autoGrownSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0."
        },
        "bootVolume": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "expireTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time after which volume will be fully deleted. It is filled only for volumes in COOLOFF state."
        },
        "protocol": {
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "description": "Output only. Storage protocol for the Volume.",
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "readOnly": true
        },
        "performanceTier": {
          "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ]
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated.",
            "The storage volume is in cool off state. It will be deleted after `expire_time`."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "COOL_OFF"
          ]
        },
        "remainingSpaceGib": {
          "format": "int64",
          "type": "string",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots."
        },
        "maxSizeGib": {
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "notes": {
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.",
          "type": "string"
        },
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "type": "string"
        },
        "workloadProfile": {
          "type": "string",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "GENERIC",
            "HANA"
          ],
          "description": "The workload profile for the volume."
        },
        "requestedSizeGib": {
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string"
        },
        "currentSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "emergencySizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value."
        },
        "storageAggregatePool": {
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.",
          "type": "string"
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        }
      },
      "type": "object"
    },
    "ServerNetworkTemplate": {
      "description": "Network template.",
      "properties": {
        "logicalInterfaces": {
          "description": "Logical interfaces.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "type": "array"
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Instance types this template is applicable to."
        },
        "name": {
          "type": "string",
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "readOnly": true
        }
      },
      "id": "ServerNetworkTemplate",
      "type": "object"
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "description": "Response with all provisioning settings.",
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "description": "The OS images available.",
          "items": {
            "$ref": "OSImage"
          }
        }
      },
      "id": "FetchInstanceProvisioningSettingsResponse"
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "RestoreVolumeSnapshotRequest": {
      "properties": {},
      "description": "Message for restoring a volume snapshot.",
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object"
    },
    "SSHKey": {
      "id": "SSHKey",
      "type": "object",
      "description": "An SSH key, used for authorizing with the interactive serial console feature.",
      "properties": {
        "publicKey": {
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\".",
          "type": "string"
        }
      }
    },
    "DetachLunRequest": {
      "id": "DetachLunRequest",
      "type": "object",
      "properties": {
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        },
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        }
      },
      "description": "Message for detach specific LUN from an Instance."
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nfsShares": {
          "items": {
            "$ref": "NfsShare"
          },
          "type": "array",
          "description": "The list of NFS shares."
        }
      },
      "type": "object",
      "description": "Response message containing the list of NFS shares."
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "id": "InstanceConfig",
      "type": "object",
      "properties": {
        "accountNetworksEnabled": {
          "description": "If true networks can be from different projects of the same vendor account.",
          "type": "boolean"
        },
        "networkConfig": {
          "type": "string",
          "description": "The type of network configuration on the instance.",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ]
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "type": "array"
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance config."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        }
      }
    },
    "AllowedClient": {
      "type": "object",
      "description": "Represents an 'access point' for the share.",
      "properties": {
        "nfsPath": {
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "type": "string",
          "readOnly": true
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "shareIp": {
          "type": "string",
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "readOnly": true
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "mountPermissions": {
          "type": "string",
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ]
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        }
      },
      "id": "AllowedClient"
    },
    "ResizeVolumeRequest": {
      "id": "ResizeVolumeRequest",
      "type": "object",
      "description": "Request for emergency resize Volume.",
      "properties": {
        "sizeGib": {
          "description": "New Volume size, in GiB.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "EvictVolumeRequest": {
      "id": "EvictVolumeRequest",
      "type": "object",
      "description": "Request for skip volume cooloff and delete it.",
      "properties": {}
    },
    "ListVolumeSnapshotsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumeSnapshots": {
          "description": "The list of snapshots.",
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message containing the list of volume snapshots.",
      "type": "object",
      "id": "ListVolumeSnapshotsResponse"
    },
    "ListLunsResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "description": "The list of luns.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListLunsResponse",
      "description": "Response message containing the list of storage volume luns."
    },
    "ListVolumesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "volumes": {
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        }
      },
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes.",
      "type": "object"
    },
    "VlanAttachment": {
      "id": "VlanAttachment",
      "properties": {
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level."
        },
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "peerVlanId": {
          "type": "string",
          "format": "int64",
          "description": "The peer vlan ID of the attachment."
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "id": {
          "type": "string",
          "description": "Immutable. The identifier of the attachment within vrf."
        }
      },
      "type": "object",
      "description": "VLAN attachment details."
    },
    "Status": {
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "SubmitProvisioningConfigResponse": {
      "description": "Response for SubmitProvisioningConfig.",
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "id": "SubmitProvisioningConfigResponse"
    },
    "EnableInteractiveSerialConsoleRequest": {
      "properties": {},
      "description": "Message for enabling the interactive serial console on an instance.",
      "type": "object",
      "id": "EnableInteractiveSerialConsoleRequest"
    },
    "Lun": {
      "properties": {
        "storageType": {
          "description": "The storage type for this LUN.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ]
        },
        "multiprotocolType": {
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system."
        },
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "sizeGb": {
          "type": "string",
          "format": "int64",
          "description": "The size of this LUN, in gigabytes."
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the LUN."
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "expireTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time after which LUN will be fully deleted. It is filled only for LUNs in COOL_OFF state."
        },
        "state": {
          "description": "The state of this storage volume.",
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted.",
            "The LUN is in cool off state. It will be deleted after `expire_time`."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING",
            "COOL_OFF"
          ]
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        }
      },
      "description": "A storage volume logical unit number (LUN).",
      "id": "Lun",
      "type": "object"
    },
    "QosPolicy": {
      "description": "QOS policy parameters.",
      "type": "object",
      "id": "QosPolicy",
      "properties": {
        "bandwidthGbps": {
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "VolumeConfig": {
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume.",
          "type": "string"
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "protocol": {
          "description": "Volume protocol.",
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ]
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB.",
          "type": "integer"
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "storageAggregatePool": {
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.",
          "type": "string"
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "performanceTier": {
          "description": "Performance tier of the Volume. Default is SHARED.",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ]
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the volume config.",
          "readOnly": true
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "NetworkUsage": {
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses.",
      "type": "object",
      "properties": {
        "usedIps": {
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "network": {
          "$ref": "Network",
          "description": "Network."
        }
      }
    },
    "NetworkAddressReservation": {
      "properties": {
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        },
        "endAddress": {
          "type": "string",
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        }
      },
      "type": "object",
      "id": "NetworkAddressReservation",
      "description": "A reservation of one or more addresses in a network."
    },
    "LunRange": {
      "id": "LunRange",
      "description": "A LUN(Logical Unit Number) range.",
      "type": "object",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of each LUN, in GB.",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "description": "Number of LUNs to create.",
          "format": "int32"
        }
      }
    },
    "IntakeVlanAttachment": {
      "description": "A GCP vlan attachment.",
      "type": "object",
      "id": "IntakeVlanAttachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "volumes": {
              "resources": {
                "snapshots": {
                  "methods": {
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the snapshot to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true
                        }
                      }
                    },
                    "get": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the snapshot.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "httpMethod": "GET",
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume."
                    },
                    "create": {
                      "path": "v2/{+parent}/snapshots",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. The volume to snapshot."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST"
                    },
                    "restoreVolumeSnapshot": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "volumeSnapshot": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot"
                    },
                    "list": {
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "path": "v2/{+parent}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results from the server.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      }
                    }
                  }
                },
                "luns": {
                  "methods": {
                    "get": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the resource."
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Lun"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Get details of a single storage logical unit number(LUN)."
                    },
                    "evict": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the lun."
                        }
                      },
                      "description": "Skips lun's cooloff and deletes it now. Lun must be in cooloff state.",
                      "path": "v2/{+name}:evict",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict",
                      "request": {
                        "$ref": "EvictLunRequest"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.evict"
                    },
                    "list": {
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+parent}/luns",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. Parent value for ListLunsRequest.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List storage volume luns for given storage volume.",
                      "httpMethod": "GET"
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "location": "query"
                    },
                    "name": {
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single storage volume.",
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "list": {
                  "path": "v2/{+parent}/volumes",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List storage volumes in a given project and location.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "resize": {
                  "httpMethod": "POST",
                  "parameters": {
                    "volume": {
                      "type": "string",
                      "description": "Required. Volume to resize.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "description": "Emergency Volume resize.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "volume"
                  ],
                  "path": "v2/{+volume}:resize",
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "evict": {
                  "path": "v2/{+name}:evict",
                  "id": "baremetalsolution.projects.locations.volumes.evict",
                  "request": {
                    "$ref": "EvictVolumeRequest"
                  },
                  "description": "Skips volume's cooloff and deletes it now. Volume must be in cooloff state.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the Volume.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict"
                },
                "rename": {
                  "path": "v2/{+name}:rename",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "RenameVolume sets a new name for a volume. Use with caution, previous names become immediately invalidated.",
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The `name` field is used to identify the volume. Format: projects/{project}/locations/{location}/volumes/{volume}",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.rename",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RenameVolumeRequest"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Volume"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "path": "v2/{+name}",
                  "description": "Get details of a single storage volume.",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "nfsshares": {
              "methods": {
                "rename": {
                  "path": "v2/{+name}:rename",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsshares/{nfssharesId}:rename",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsshares.rename",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsshares/[^/]+$",
                      "description": "Required. The `name` field is used to identify the nfsshare. Format: projects/{project}/locations/{location}/nfsshares/{nfsshare}",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "request": {
                    "$ref": "RenameNfsShareRequest"
                  },
                  "description": "RenameNfsShare sets a new name for an nfsshare. Use with caution, previous names become immediately invalidated.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "description": "Update existing ProvisioningConfig.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. The list of fields to update.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format."
                    }
                  }
                },
                "create": {
                  "path": "v2/{+parent}/provisioningConfigs",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create new ProvisioningConfig.",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "submit": {
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "description": "Submit a provisiong configuration for a given project.",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the ProvisioningConfig."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Get ProvisioningConfig by name."
                }
              }
            },
            "instances": {
              "methods": {
                "detachLun": {
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "description": "Detach LUN from Instance.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "parameterOrder": [
                    "instance"
                  ],
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+instance}:detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "description": "Create an Instance.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "reset": {
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}:reset",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "disableInteractiveSerialConsole": {
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "path": "v2/{+name}:disableInteractiveSerialConsole",
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Disable the interactive serial console feature on an instance.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource."
                    }
                  }
                },
                "stop": {
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+name}:stop",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "description": "Stop a running server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "enableInteractiveSerialConsole": {
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Enable the interactive serial console feature on an instance.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "rename": {
                  "response": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}:rename",
                  "id": "baremetalsolution.projects.locations.instances.rename",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. The `name` field is used to identify the instance. Format: projects/{project}/locations/{location}/instances/{instance}",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename",
                  "request": {
                    "$ref": "RenameInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "description": "RenameInstance sets a new name for an instance. Use with caution, previous names become immediately invalidated.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single server.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  }
                },
                "start": {
                  "httpMethod": "POST",
                  "description": "Starts a server that was shutdown.",
                  "path": "v2/{+name}:start",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  }
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "path": "v2/{+parent}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List servers in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "description": "Get details about a single server."
                }
              }
            },
            "networks": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Network"
                  }
                },
                "patch": {
                  "description": "Update details of a single network.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "request": {
                    "$ref": "Network"
                  },
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "type": "string",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`"
                    }
                  }
                },
                "listNetworkUsage": {
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "parameters": {
                    "location": {
                      "required": true,
                      "description": "Required. Parent value (project and location).",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "path": "v2/{+location}/networks:listNetworkUsage"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List network in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    }
                  },
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "path": "v2/{+parent}/networks"
                },
                "rename": {
                  "description": "RenameNetwork sets a new name for a network. Use with caution, previous names become immediately invalidated.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:rename",
                  "id": "baremetalsolution.projects.locations.networks.rename",
                  "response": {
                    "$ref": "Network"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename",
                  "request": {
                    "$ref": "RenameNetworkRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The `name` field is used to identify the network. Format: projects/{project}/locations/{location}/networks/{network}"
                    }
                  },
                  "httpMethod": "POST"
                }
              }
            },
            "nfsShares": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/nfsShares",
                  "description": "Create an NFS share.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "path": "v2/{+parent}/nfsShares",
                  "description": "List NFS shares.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the NFS share to delete.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "description": "Update details of a single NFS share.",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "description": "Immutable. The name of the NFS share."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "sshKeys": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/sshKeys",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "parameters": {
                    "sshKeyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent containing the SSH keys."
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "response": {
                    "$ref": "SSHKey"
                  },
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys"
                },
                "list": {
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of items to return."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\".",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/sshKeys",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "id": "baremetalsolution.projects.locations.sshKeys.list"
                },
                "delete": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$",
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\"."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "description": "Get details about an operation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$"
                    }
                  },
                  "path": "v2/{+name}"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "description": "List the budget details to provision resources on a given project.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/provisioningQuotas",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list"
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "parameterOrder": [
                    "location"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "parameters": {
                    "location": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "location": "path",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "path": "v2/{+name}",
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true
                }
              },
              "id": "baremetalsolution.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}"
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "v2/projects/{projectsId}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "path": "v2/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "version_module": true,
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "batchPath": "batch",
  "ownerName": "Google",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center."
}

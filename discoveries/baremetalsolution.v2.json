{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "revision": "20220615",
  "batchPath": "batch",
  "schemas": {
    "SubmitProvisioningConfigResponse": {
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "description": "Response for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigResponse"
    },
    "Volume": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "type": "string",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ]
        },
        "storageType": {
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this volume."
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "description": "Originally requested size, in GiB.",
          "format": "int64"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "emergencySizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value."
        },
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64"
        },
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ]
        },
        "remainingSpaceGib": {
          "type": "string",
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots."
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "currentSizeGib": {
          "format": "int64",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string"
        },
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true,
          "type": "string"
        },
        "maxSizeGib": {
          "type": "string",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64"
        },
        "pod": {
          "description": "Immutable. Pod name.",
          "type": "string"
        }
      },
      "description": "A storage volume.",
      "type": "object",
      "id": "Volume"
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpaceGib": {
          "type": "string",
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB."
        },
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        },
        "reservedSpaceUsedPercent": {
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32"
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "SnapshotReservationDetail",
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "type": "object"
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "InstanceQuota": {
      "id": "InstanceQuota",
      "description": "A resource budget.",
      "properties": {
        "instanceType": {
          "type": "string",
          "description": "Instance type."
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Output only. The name of the instance quota.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "NfsShare": {
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "description": "The state of the NFS share.",
          "type": "string",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned."
          ]
        },
        "nfsShareId": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend.",
          "readOnly": true
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "volume": {
          "type": "string",
          "description": "The volume containing the share."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          },
          "type": "array"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the NFS share."
        }
      },
      "id": "NfsShare",
      "description": "An NFS share."
    },
    "StartInstanceRequest": {
      "id": "StartInstanceRequest",
      "description": "Message requesting to start a server.",
      "type": "object",
      "properties": {}
    },
    "ListNetworksResponse": {
      "description": "Response message containing the list of networks.",
      "id": "ListNetworksResponse",
      "properties": {
        "networks": {
          "description": "The list of networks.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "type": "object"
    },
    "Network": {
      "description": "A Network.",
      "id": "Network",
      "properties": {
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server."
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ],
          "description": "The Network state."
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
        },
        "macAddress": {
          "type": "array",
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          }
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        }
      },
      "type": "object"
    },
    "NetworkUsage": {
      "id": "NetworkUsage",
      "type": "object",
      "properties": {
        "network": {
          "$ref": "Network",
          "description": "Network."
        },
        "usedIps": {
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Network with all used IP addresses."
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "id": "FetchInstanceProvisioningSettingsResponse",
      "type": "object",
      "properties": {
        "images": {
          "items": {
            "$ref": "OSImage"
          },
          "description": "The OS images available.",
          "type": "array"
        }
      },
      "description": "Response with all provisioning settings."
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "description": "Interface type.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ]
        },
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "description": "Logical interface."
    },
    "NetworkConfig": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "The JumboFramesEnabled option for customer to set."
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string",
          "description": "Service CIDR, if any."
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "vlanAttachments": {
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the network config.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network.",
      "type": "object"
    },
    "Lun": {
      "id": "Lun",
      "properties": {
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "type": "string",
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ]
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the LUN, generated by the backend."
        },
        "sizeGb": {
          "description": "The size of this LUN, in gigabytes.",
          "type": "string",
          "format": "int64"
        },
        "wwid": {
          "description": "The WWID for this LUN.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "description": "The state of this storage volume."
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "storageType": {
          "description": "The storage type for this LUN.",
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ]
        },
        "name": {
          "description": "Output only. The name of the LUN.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "A storage volume logical unit number (LUN)."
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "description": "Networks with IPs.",
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "QosPolicy": {
      "type": "object",
      "description": "QOS policy parameters.",
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "type": "number",
          "description": "The bandwidth permitted by the QOS policy, in gbps."
        }
      },
      "id": "QosPolicy"
    },
    "LogicalNetworkInterface": {
      "description": "Each logical network interface is effectively a network and IP pair.",
      "type": "object",
      "properties": {
        "networkType": {
          "description": "Type of network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "ipAddress": {
          "description": "IP address in the network",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "Name of the network"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        }
      },
      "id": "LogicalNetworkInterface"
    },
    "OSImage": {
      "id": "OSImage",
      "type": "object",
      "properties": {
        "supportedNetworkTemplates": {
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "description": "Network templates that can be used with this OS Image."
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        },
        "applicableInstanceTypes": {
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "description": "OS Image description.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. OS Image's unique name."
        }
      },
      "description": "Operation System image."
    },
    "ProvisioningQuota": {
      "id": "ProvisioningQuota",
      "description": "A provisioning quota for a given project.",
      "properties": {
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "storageGib": {
          "type": "string",
          "description": "Storage size (GB).",
          "format": "int64"
        },
        "assetType": {
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string",
          "description": "The asset type of this provisioning quota.",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ]
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "format": "int32",
          "type": "integer"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning quota."
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "serverCount": {
          "format": "int64",
          "description": "Server count.",
          "type": "string"
        },
        "networkBandwidth": {
          "type": "string",
          "description": "Network bandwidth, Gbps",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "OperationMetadata": {
      "type": "object",
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used with the operation."
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the action executed by the operation."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Represents the metadata from a long-running operation.",
      "id": "OperationMetadata"
    },
    "NfsExport": {
      "type": "object",
      "properties": {
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "permissions": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        }
      },
      "description": "A NFS export entry.",
      "id": "NfsExport"
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes.",
      "properties": {
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "description": "The list of storage volumes.",
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      }
    },
    "NetworkAddress": {
      "properties": {
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        }
      },
      "id": "NetworkAddress",
      "type": "object",
      "description": "A network."
    },
    "DetachLunRequest": {
      "type": "object",
      "id": "DetachLunRequest",
      "description": "Message for detach specific LUN from an Instance.",
      "properties": {
        "lun": {
          "description": "Required. Name of the Lun to detach.",
          "type": "string"
        }
      }
    },
    "AllowedClient": {
      "type": "object",
      "properties": {
        "mountPermissions": {
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string",
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ]
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "shareIp": {
          "type": "string",
          "description": "The IP address of the share on this network."
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        }
      },
      "id": "AllowedClient",
      "description": "Represents an 'access point' for the share."
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        },
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SubmitProvisioningConfigRequest"
    },
    "VRF": {
      "description": "A network VRF.",
      "type": "object",
      "id": "VRF",
      "properties": {
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF."
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "type": "string",
          "description": "The possible state of VRF.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ]
        }
      }
    },
    "ListProvisioningQuotasResponse": {
      "description": "Response message for the list of provisioning quotas.",
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "id": "ListProvisioningQuotasResponse"
    },
    "ListNfsSharesResponse": {
      "properties": {
        "nfsShares": {
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message containing the list of NFS shares.",
      "id": "ListNfsSharesResponse"
    },
    "ResizeVolumeRequest": {
      "properties": {
        "sizeGib": {
          "description": "New Volume size, in GiB.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ResizeVolumeRequest",
      "description": "Request for emergency resize Volume."
    },
    "IntakeVlanAttachment": {
      "type": "object",
      "id": "IntakeVlanAttachment",
      "description": "A GCP vlan attachment.",
      "properties": {
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        },
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        }
      }
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "description": "Network template.",
      "properties": {
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "type": "array",
          "description": "Logical interfaces."
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to.",
          "type": "array"
        },
        "name": {
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "type": "object",
      "properties": {
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "networkTemplate": {
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
          "type": "string"
        },
        "logicalInterfaces": {
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "networkConfig": {
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "description": "The type of network configuration on the instance.",
          "type": "string",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "name": {
          "description": "Output only. The name of the instance config.",
          "type": "string",
          "readOnly": true
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false."
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        }
      },
      "id": "InstanceConfig"
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "id": "ResetInstanceRequest",
      "properties": {},
      "type": "object"
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "type": "object",
      "properties": {
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. State of ProvisioningConfig.",
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ]
        },
        "networks": {
          "type": "array",
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the provisioning config.",
          "readOnly": true
        },
        "ticketId": {
          "type": "string",
          "description": "A generated ticket id to track provisioning request."
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          },
          "description": "Volumes to be created."
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array",
          "description": "Instances to be created."
        },
        "statusMessage": {
          "description": "Optional status messages associated with the FAILED state.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Last update timestamp.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "A provisioning configuration."
    },
    "ListLunsResponse": {
      "id": "ListLunsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "The list of luns."
        }
      },
      "type": "object",
      "description": "Response message containing the list of storage volume luns."
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "type": "object",
      "properties": {
        "interfaceIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."
        },
        "logicalNetworkInterfaces": {
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "type": "array",
          "description": "List of logical network interfaces within a logical interface."
        },
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        }
      },
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface."
    },
    "VlanAttachment": {
      "properties": {
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "format": "int64",
          "type": "string",
          "description": "The peer vlan ID of the attachment."
        },
        "peerIp": {
          "type": "string",
          "description": "The peer IP of the attachment."
        }
      },
      "description": "VLAN attachment details.",
      "type": "object",
      "id": "VlanAttachment"
    },
    "Instance": {
      "properties": {
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Update a time stamp.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "description": "The state of the server.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ]
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array"
        },
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false."
        },
        "machineType": {
          "type": "string",
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Instance`, generated by the backend."
        },
        "networks": {
          "description": "List of networks associated with this server.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "List of LUNs associated with this server."
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Create a time stamp.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "Instance",
      "type": "object",
      "description": "A server."
    },
    "StopInstanceRequest": {
      "description": "Message requesting to stop a server.",
      "properties": {},
      "type": "object",
      "id": "StopInstanceRequest"
    },
    "LunRange": {
      "id": "LunRange",
      "description": "A LUN(Logical Unit Number) range.",
      "type": "object",
      "properties": {
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of each LUN, in GB.",
          "type": "integer"
        },
        "quantity": {
          "format": "int32",
          "description": "Number of LUNs to create.",
          "type": "integer"
        }
      }
    },
    "VolumeConfig": {
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ]
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          },
          "type": "array"
        },
        "machineIds": {
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          }
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "protocol": {
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string"
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of this volume, in GB."
        },
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the volume config.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "NetworkAddressReservation": {
      "properties": {
        "endAddress": {
          "type": "string",
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "startAddress": {
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        }
      },
      "description": "A reservation of one or more addresses in a network.",
      "type": "object",
      "id": "NetworkAddressReservation"
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "description": "Response message for the list of servers.",
      "type": "object",
      "properties": {
        "instances": {
          "description": "The list of servers.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      }
    }
  },
  "title": "Bare Metal Solution API",
  "ownerDomain": "google.com",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    }
  },
  "id": "baremetalsolution:v2",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "version_module": true,
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "provisioningConfigs": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/provisioningConfigs",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "description": "Create new ProvisioningConfig.",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "email": {
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query"
                    }
                  }
                },
                "get": {
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ProvisioningConfig.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    }
                  },
                  "description": "Get ProvisioningConfig by name.",
                  "httpMethod": "GET"
                },
                "submit": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "description": "Submit a provisiong configuration for a given project.",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the provisioning config.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "Required. The list of fields to update."
                    },
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    }
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update existing ProvisioningConfig."
                }
              }
            },
            "nfsShares": {
              "methods": {
                "list": {
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    }
                  },
                  "description": "List NFS shares.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "path": "v2/{+parent}/nfsShares",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "path": "v2/{+name}",
                  "description": "Get details of a single NFS share.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The name of the NFS share.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "path": "v2/{+name}",
                  "description": "Update details of a single NFS share.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "httpMethod": "GET"
                }
              }
            },
            "volumes": {
              "methods": {
                "resize": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "description": "Emergency Volume resize.",
                  "parameterOrder": [
                    "volume"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "volume": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Volume to resize."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+volume}:resize"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "description": "Get details of a single storage volume.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListVolumesRequest."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "path": "v2/{+parent}/volumes",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "description": "List storage volumes in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Volume"
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "description": "Update details of a single storage volume.",
                  "id": "baremetalsolution.projects.locations.volumes.patch"
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "location": "path"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+name}"
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "List storage volume luns for given storage volume.",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "path": "v2/{+parent}/luns",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results from the server.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns"
                    }
                  }
                }
              }
            },
            "networks": {
              "methods": {
                "get": {
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "description": "Get details of a single network.",
                  "response": {
                    "$ref": "Network"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "listNetworkUsage": {
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value (project and location)."
                    }
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project."
                },
                "patch": {
                  "request": {
                    "$ref": "Network"
                  },
                  "description": "Update details of a single network.",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "description": "List network in a given project and location.",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/networks",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  }
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "path": "v2/{+parent}/provisioningQuotas",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported."
                    }
                  },
                  "description": "List the budget details to provision resources on a given project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas"
                }
              }
            },
            "instances": {
              "methods": {
                "detachLun": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Detach LUN from Instance.",
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+instance}:detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "instance"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "httpMethod": "POST"
                },
                "list": {
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "description": "List servers in a given project and location.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.list"
                },
                "get": {
                  "description": "Get details about a single server.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                },
                "stop": {
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:stop",
                  "description": "Stop a running server.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "description": "Update details of a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "start": {
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "description": "Starts a server that was shutdown.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}:start",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "reset": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "httpMethod": "POST",
                  "path": "v2/{+name}:reset",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service.",
              "path": "v2/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "httpMethod": "GET",
              "id": "baremetalsolution.projects.locations.list",
              "flatPath": "v2/projects/{projectsId}/locations"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "httpMethod": "GET",
              "id": "baremetalsolution.projects.locations.get",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}"
            }
          }
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "name": "baremetalsolution",
  "servicePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "documentationLink": "https://cloud.google.com/bare-metal",
  "protocol": "rest",
  "basePath": "",
  "version": "v2",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "fullyEncodeReservedExpansion": true
}

{
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "ownerName": "Google",
  "name": "baremetalsolution",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    }
  },
  "id": "baremetalsolution:v2",
  "protocol": "rest",
  "basePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "description": "List the budget details to provision resources on a given project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "path": "v2/{+parent}/provisioningQuotas",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list"
                }
              }
            },
            "networks": {
              "methods": {
                "get": {
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  },
                  "description": "Get details of a single network.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Network"
                  }
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "description": "List network in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "path": "v2/{+parent}/networks",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "listNetworkUsage": {
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value (project and location).",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v2/{+location}/networks:listNetworkUsage"
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Network"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single network.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.patch"
                }
              }
            },
            "volumes": {
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "path": "v2/{+name}",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}"
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string",
                          "description": "Required. Parent value for ListLunsRequest."
                        },
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results from the server.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "description": "List storage volume luns for given storage volume.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/luns",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list"
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "get": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "description": "Get details of a single storage volume snapshot.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "required": true
                        }
                      },
                      "path": "v2/{+name}"
                    },
                    "restoreVolumeSnapshot": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "description": "Restore a storage volume snapshot to its containing volume.",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "volumeSnapshot": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "type": "string"
                        }
                      }
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "httpMethod": "GET",
                      "description": "List storage volume snapshots for given storage volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "description": "A token identifying a page of results from the server.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        }
                      },
                      "path": "v2/{+parent}/snapshots"
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "description": "Required. The volume to snapshot.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Create a storage volume snapshot in a containing volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "path": "v2/{+parent}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      }
                    },
                    "delete": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the snapshot to delete."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "description": "Deletes a storage volume snapshot for a given volume.",
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "description": "List storage volumes in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/volumes",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  }
                },
                "patch": {
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'requested_size_gib' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "description": "Update details of a single storage volume.",
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "description": "Get details of a single storage volume.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Volume"
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "path": "v2/{+parent}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List servers in a given project and location."
                },
                "start": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "description": "Starts a server that was shutdown.",
                  "path": "v2/{+name}:start",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start"
                },
                "reset": {
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}:reset",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  }
                },
                "stop": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "path": "v2/{+name}:stop",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "description": "Stop a running server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.stop"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "response": {
                    "$ref": "Instance"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details about a single server."
                },
                "patch": {
                  "description": "Update details of a single server.",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `hyperthreading_enabled`",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "httpMethod": "PATCH"
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "httpMethod": "GET",
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "parameters": {
                    "location": {
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Get ProvisioningConfig by name.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "path": "v2/{+name}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. The list of fields to update."
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "description": "Output only. The name of the provisioning config."
                    },
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Update existing ProvisioningConfig."
                },
                "create": {
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "path": "v2/{+parent}/provisioningConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Create new ProvisioningConfig.",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "type": "string"
                    },
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    }
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "submit": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Submit a provisiong configuration for a given project.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  }
                }
              }
            },
            "nfsShares": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "httpMethod": "GET",
                  "description": "List NFS shares.",
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "path": "v2/{+parent}/nfsShares",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "description": "Get details of a single NFS share.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The name of the NFS share.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "description": "Update details of a single NFS share.",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH"
                }
              }
            },
            "snapshotSchedulePolicies": {
              "methods": {
                "patch": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Output only. The name of the snapshot schedule policy."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. The list of fields to update.",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "description": "Update a snapshot schedule policy in the specified project.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "description": "Delete a named snapshot schedule policy.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the snapshot schedule policy to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    }
                  },
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "description": "List snapshot schedule policies in a given project and location.",
                  "response": {
                    "$ref": "ListSnapshotSchedulePoliciesResponse"
                  },
                  "httpMethod": "GET"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "description": "Get details of a single snapshot schedule policy.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.get",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Create a snapshot schedule policy in the specified project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameters": {
                    "snapshotSchedulePolicyId": {
                      "type": "string",
                      "description": "Required. Snapshot policy ID",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent project and location containing the SnapshotSchedulePolicy.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.create"
                }
              }
            }
          },
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable."
                }
              },
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v2/projects/{projectsId}/locations",
              "path": "v2/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.locations.list"
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "baremetalsolution.projects.locations.get"
            }
          }
        }
      }
    }
  },
  "title": "Bare Metal Solution API",
  "version": "v2",
  "version_module": true,
  "ownerDomain": "google.com",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "revision": "20220418",
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "schemas": {
    "IntakeVlanAttachment": {
      "id": "IntakeVlanAttachment",
      "properties": {
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        }
      },
      "type": "object",
      "description": "A GCP vlan attachment."
    },
    "VlanAttachment": {
      "properties": {
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "format": "int64",
          "type": "string"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        }
      },
      "id": "VlanAttachment",
      "description": "VLAN attachment details.",
      "type": "object"
    },
    "AllowedClient": {
      "type": "object",
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient",
      "properties": {
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "mountPermissions": {
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "description": "Mount permissions.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "shareIp": {
          "type": "string",
          "description": "The IP address of the share on this network."
        }
      }
    },
    "ListLunsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "luns": {
          "description": "The list of luns.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message containing the list of storage volume luns.",
      "id": "ListLunsResponse"
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "description": "Response message containing the list of NFS shares.",
      "type": "object",
      "properties": {
        "nfsShares": {
          "type": "array",
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      }
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "description": "Response message for the list of provisioning quotas.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "provisioningQuotas": {
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project."
        }
      }
    },
    "Volume": {
      "properties": {
        "storageType": {
          "description": "The storage type for this volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "type": "string",
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ]
        },
        "autoGrownSizeGib": {
          "type": "string",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64"
        },
        "currentSizeGib": {
          "type": "string",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64"
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true,
          "type": "string"
        },
        "requestedSizeGib": {
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "state": {
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "type": "string"
        },
        "remainingSpaceGib": {
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string"
        },
        "emergencySizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value."
        }
      },
      "type": "object",
      "description": "A storage volume.",
      "id": "Volume"
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "type": "object",
      "description": "Response message for the list of servers.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "Instance"
          },
          "description": "The list of servers."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      }
    },
    "NfsExport": {
      "description": "A NFS export entry.",
      "type": "object",
      "properties": {
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "type": "string",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions."
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        }
      },
      "id": "NfsExport"
    },
    "NetworkUsage": {
      "description": "Network with all used IP addresses.",
      "id": "NetworkUsage",
      "type": "object",
      "properties": {
        "network": {
          "description": "Network.",
          "$ref": "Network"
        },
        "usedIps": {
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network.",
          "type": "array"
        }
      }
    },
    "LogicalInterface": {
      "properties": {
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        },
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Interface type.",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface ytpe."
          ]
        }
      },
      "id": "LogicalInterface",
      "type": "object",
      "description": "Logical interface."
    },
    "ListVolumesResponse": {
      "type": "object",
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "The list of storage volumes."
        }
      }
    },
    "LunRange": {
      "id": "LunRange",
      "properties": {
        "sizeGb": {
          "description": "The requested size of each LUN, in GB.",
          "format": "int32",
          "type": "integer"
        },
        "quantity": {
          "description": "Number of LUNs to create.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A LUN(Logical Unit Number) range.",
      "type": "object"
    },
    "NetworkAddress": {
      "description": "A network.",
      "type": "object",
      "properties": {
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        }
      },
      "id": "NetworkAddress"
    },
    "StartInstanceRequest": {
      "id": "StartInstanceRequest",
      "description": "Message requesting to start a server.",
      "type": "object",
      "properties": {}
    },
    "SnapshotReservationDetail": {
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "properties": {
        "reservedSpacePercent": {
          "format": "int32",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer"
        },
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer",
          "format": "int32"
        },
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64",
          "type": "string"
        },
        "reservedSpaceRemainingGib": {
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "SnapshotReservationDetail",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "description": "The OS images available.",
          "type": "array",
          "items": {
            "$ref": "OSImage"
          }
        }
      },
      "id": "FetchInstanceProvisioningSettingsResponse",
      "description": "Response with all provisioning settings.",
      "type": "object"
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "type": "object",
      "id": "ResetInstanceRequest",
      "properties": {}
    },
    "ListNetworksResponse": {
      "description": "Response message containing the list of networks.",
      "properties": {
        "networks": {
          "type": "array",
          "description": "The list of networks.",
          "items": {
            "$ref": "Network"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "ListNetworksResponse"
    },
    "Schedule": {
      "properties": {
        "crontabSpec": {
          "type": "string",
          "description": "A crontab-like specification that the schedule uses to take snapshots."
        },
        "retentionCount": {
          "type": "integer",
          "description": "The maximum number of snapshots to retain in this schedule.",
          "format": "int32"
        },
        "prefix": {
          "type": "string",
          "description": "A list of snapshot names created in this schedule."
        }
      },
      "description": "A snapshot schedule.",
      "type": "object",
      "id": "Schedule"
    },
    "VolumeSnapshot": {
      "type": "object",
      "id": "VolumeSnapshot",
      "description": "Snapshot registered for a given storage volume.",
      "properties": {
        "sizeBytes": {
          "description": "The size of the storage volume snapshot, in bytes.",
          "type": "string",
          "format": "int64"
        },
        "description": {
          "description": "The description of the storage volume snapshot.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot, generated by the backend."
        },
        "storageVolume": {
          "description": "The storage volume this snapshot belongs to.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the storage volume snapshot."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The creation time of the storage volume snapshot."
        }
      }
    },
    "Lun": {
      "description": "A storage volume logical unit number (LUN).",
      "id": "Lun",
      "type": "object",
      "properties": {
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "wwid": {
          "description": "The WWID for this LUN.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The size of this LUN, in gigabytes.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "type": "string"
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "description": "The storage type for this LUN."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ]
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the LUN.",
          "type": "string"
        }
      }
    },
    "SnapshotSchedulePolicy": {
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot schedule policy, generated by the backend."
        },
        "description": {
          "type": "string",
          "description": "The description of the snapshot schedule policy."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The policy is in an unknown state.",
            "The policy is been provisioned."
          ],
          "type": "string",
          "description": "The state of the snapshot schedule policy."
        },
        "name": {
          "description": "Output only. The name of the snapshot schedule policy.",
          "readOnly": true,
          "type": "string"
        },
        "schedules": {
          "description": "The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.",
          "type": "array",
          "items": {
            "$ref": "Schedule"
          }
        }
      },
      "description": "A snapshot schedule policy.",
      "type": "object",
      "id": "SnapshotSchedulePolicy"
    },
    "Location": {
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location"
    },
    "Network": {
      "id": "Network",
      "description": "A Network.",
      "properties": {
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ],
          "description": "The Network state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ]
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "macAddress": {
          "type": "array",
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          }
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Instance": {
      "id": "Instance",
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Create a time stamp."
        },
        "machineType": {
          "type": "string",
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "interactiveSerialConsoleEnabled": {
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "description": "The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Instance`, generated by the backend."
        },
        "networks": {
          "type": "array",
          "description": "List of networks associated with this server.",
          "items": {
            "$ref": "Network"
          }
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "List of LUNs associated with this server."
        },
        "updateTime": {
          "description": "Output only. Update a time stamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        }
      },
      "description": "A server.",
      "type": "object"
    },
    "Status": {
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "VRF": {
      "type": "object",
      "description": "A network VRF.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        },
        "state": {
          "description": "The possible state of VRF.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ]
        },
        "vlanAttachments": {
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          }
        }
      },
      "id": "VRF"
    },
    "ProvisioningQuota": {
      "description": "A provisioning quota for a given project.",
      "id": "ProvisioningQuota",
      "properties": {
        "name": {
          "description": "Output only. The name of the provisioning quota.",
          "type": "string",
          "readOnly": true
        },
        "networkBandwidth": {
          "format": "int64",
          "type": "string",
          "description": "Network bandwidth, Gbps"
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "storageGib": {
          "format": "int64",
          "type": "string",
          "description": "Storage size (GB)."
        },
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string"
        },
        "serverCount": {
          "type": "string",
          "description": "Server count.",
          "format": "int64"
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        }
      },
      "type": "object"
    },
    "QosPolicy": {
      "description": "QOS policy parameters.",
      "type": "object",
      "id": "QosPolicy",
      "properties": {
        "bandwidthGbps": {
          "type": "number",
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps."
        }
      }
    },
    "OSImage": {
      "type": "object",
      "id": "OSImage",
      "description": "Operation System image.",
      "properties": {
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. OS Image's unique name."
        },
        "applicableInstanceTypes": {
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "supportedNetworkTemplates": {
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "description": "Network templates that can be used with this OS Image.",
          "type": "array"
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        }
      }
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array",
          "description": "Networks with IPs."
        }
      },
      "type": "object",
      "id": "ListNetworkUsageResponse"
    },
    "VolumeConfig": {
      "type": "object",
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "protocol": {
          "description": "Volume protocol.",
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ]
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the volume config.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume."
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB.",
          "format": "int32"
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617)."
        },
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC."
        }
      }
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume snapshots.",
      "id": "ListVolumeSnapshotsResponse",
      "properties": {
        "volumeSnapshots": {
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      }
    },
    "ProvisioningConfig": {
      "description": "A provisioning configuration.",
      "id": "ProvisioningConfig",
      "type": "object",
      "properties": {
        "cloudConsoleUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI to Cloud Console UI view of this provisioning config."
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime"
        },
        "instances": {
          "type": "array",
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "networks": {
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array",
          "description": "Networks to be created."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled."
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED"
          ],
          "type": "string"
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        },
        "ticketId": {
          "type": "string",
          "description": "A generated buganizer id to track provisioning request."
        }
      }
    },
    "StopInstanceRequest": {
      "type": "object",
      "description": "Message requesting to stop a server.",
      "id": "StopInstanceRequest",
      "properties": {}
    },
    "NetworkConfig": {
      "properties": {
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The type of this network, either Client or Private.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "serviceCidr": {
          "description": "Service CIDR, if any.",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "name": {
          "description": "Output only. The name of the network config.",
          "readOnly": true,
          "type": "string"
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "bandwidth": {
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "type": "string",
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ]
        }
      },
      "type": "object",
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "description": "Response message containing the list of snapshot schedule policies.",
      "id": "ListSnapshotSchedulePoliciesResponse",
      "properties": {
        "snapshotSchedulePolicies": {
          "description": "The snapshot schedule policies registered in this project.",
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NfsShare": {
      "properties": {
        "name": {
          "description": "Output only. The name of the NFS share.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned."
          ],
          "description": "The state of the NFS share."
        },
        "nfsShareId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend."
        },
        "allowedClients": {
          "type": "array",
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          }
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "volume": {
          "description": "The volume containing the share.",
          "type": "string"
        }
      },
      "description": "An NFS share.",
      "id": "NfsShare",
      "type": "object"
    },
    "InstanceConfig": {
      "type": "object",
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the instance config.",
          "type": "string"
        },
        "privateNetwork": {
          "description": "Private network address, if any.",
          "$ref": "NetworkAddress"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        }
      }
    },
    "SubmitProvisioningConfigResponse": {
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      },
      "id": "SubmitProvisioningConfigResponse",
      "type": "object",
      "description": "Response for SubmitProvisioningConfig."
    },
    "InstanceQuota": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance quota.",
          "readOnly": true
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type."
        },
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A resource budget.",
      "type": "object",
      "id": "InstanceQuota"
    },
    "RestoreVolumeSnapshotRequest": {
      "properties": {},
      "type": "object",
      "id": "RestoreVolumeSnapshotRequest",
      "description": "Message for restoring a volume snapshot."
    },
    "SubmitProvisioningConfigRequest": {
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        },
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        }
      },
      "description": "Request for SubmitProvisioningConfig.",
      "id": "SubmitProvisioningConfigRequest"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Template's unique name."
        },
        "logicalInterfaces": {
          "description": "Logical interfaces.",
          "items": {
            "$ref": "LogicalInterface"
          },
          "type": "array"
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to."
        }
      },
      "description": "Network template."
    }
  },
  "documentationLink": "https://cloud.google.com/bare-metal",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "servicePath": ""
}

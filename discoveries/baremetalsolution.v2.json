{
  "revision": "20220725",
  "schemas": {
    "OperationMetadata": {
      "type": "object",
      "properties": {
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used with the operation.",
          "type": "string"
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the action executed by the operation.",
          "type": "string"
        }
      },
      "description": "Represents the metadata from a long-running operation.",
      "id": "OperationMetadata"
    },
    "ResizeVolumeRequest": {
      "properties": {
        "sizeGib": {
          "format": "int64",
          "type": "string",
          "description": "New Volume size, in GiB."
        }
      },
      "type": "object",
      "description": "Request for emergency resize Volume.",
      "id": "ResizeVolumeRequest"
    },
    "LunRange": {
      "properties": {
        "sizeGb": {
          "description": "The requested size of each LUN, in GB.",
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "description": "Number of LUNs to create.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "A LUN(Logical Unit Number) range.",
      "type": "object",
      "id": "LunRange"
    },
    "NetworkAddressReservation": {
      "type": "object",
      "id": "NetworkAddressReservation",
      "description": "A reservation of one or more addresses in a network.",
      "properties": {
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        }
      }
    },
    "OSImage": {
      "id": "OSImage",
      "description": "Operation System image.",
      "type": "object",
      "properties": {
        "supportedNetworkTemplates": {
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "type": "array",
          "description": "Network templates that can be used with this OS Image."
        },
        "name": {
          "type": "string",
          "description": "Output only. OS Image's unique name.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        }
      }
    },
    "ProvisioningQuota": {
      "properties": {
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota."
        },
        "networkBandwidth": {
          "description": "Network bandwidth, Gbps",
          "format": "int64",
          "type": "string"
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "type": "integer",
          "format": "int32"
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "serverCount": {
          "description": "Server count.",
          "format": "int64",
          "type": "string"
        },
        "assetType": {
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "description": "The asset type of this provisioning quota.",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string"
        },
        "storageGib": {
          "format": "int64",
          "type": "string",
          "description": "Storage size (GB)."
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        }
      },
      "description": "A provisioning quota for a given project.",
      "id": "ProvisioningQuota",
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs.",
          "type": "array"
        }
      },
      "id": "ListNetworkUsageResponse",
      "type": "object",
      "description": "Response with Networks with IPs"
    },
    "SubmitProvisioningConfigResponse": {
      "description": "Response for SubmitProvisioningConfig.",
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "id": "SubmitProvisioningConfigResponse"
    },
    "ProvisioningConfig": {
      "description": "A provisioning configuration.",
      "id": "ProvisioningConfig",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning config."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. State of ProvisioningConfig.",
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ]
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "networks": {
          "type": "array",
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "instances": {
          "type": "array",
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI to Cloud Console UI view of this provisioning config."
        },
        "volumes": {
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          },
          "type": "array"
        },
        "vpcScEnabled": {
          "description": "If true, VPC SC is enabled for the cluster.",
          "type": "boolean"
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages."
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "id": "SnapshotReservationDetail",
      "properties": {
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "type": "string"
        },
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64",
          "type": "string"
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer",
          "format": "int32"
        },
        "reservedSpaceUsedPercent": {
          "format": "int32",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "NetworkAddress": {
      "type": "object",
      "properties": {
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        }
      },
      "description": "A network.",
      "id": "NetworkAddress"
    },
    "NetworkConfig": {
      "description": "Configuration parameters for a new network.",
      "type": "object",
      "id": "NetworkConfig",
      "properties": {
        "vlanAttachments": {
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          }
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the network config.",
          "readOnly": true
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "The JumboFramesEnabled option for customer to set."
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any.",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "bandwidth": {
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      }
    },
    "VRF": {
      "id": "VRF",
      "description": "A network VRF.",
      "type": "object",
      "properties": {
        "vlanAttachments": {
          "type": "array",
          "description": "The list of VLAN attachments for the VRF.",
          "items": {
            "$ref": "VlanAttachment"
          }
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF."
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "description": "The possible state of VRF.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ]
        }
      }
    },
    "IntakeVlanAttachment": {
      "type": "object",
      "properties": {
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        }
      },
      "description": "A GCP vlan attachment.",
      "id": "IntakeVlanAttachment"
    },
    "Network": {
      "id": "Network",
      "type": "object",
      "description": "A Network.",
      "properties": {
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server."
        },
        "state": {
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING"
          ],
          "description": "The Network state."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "type": {
          "type": "string",
          "description": "The type of this network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "macAddress": {
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        }
      }
    },
    "NetworkUsage": {
      "type": "object",
      "description": "Network with all used IP addresses.",
      "properties": {
        "network": {
          "description": "Network.",
          "$ref": "Network"
        },
        "usedIps": {
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "NetworkUsage"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "description": "Interface type.",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ]
        },
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        }
      },
      "type": "object",
      "description": "Logical interface.",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "Instance": {
      "id": "Instance",
      "description": "A server.",
      "properties": {
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "description": "Output only. The state of the server.",
          "readOnly": true,
          "type": "string"
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "networkTemplate": {
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "loginInfo": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Text field about info for logging in."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Update a time stamp.",
          "type": "string"
        },
        "luns": {
          "type": "array",
          "description": "Immutable. List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          }
        },
        "createTime": {
          "description": "Output only. Create a time stamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
        },
        "networks": {
          "description": "Output only. List of networks associated with this server.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "Network"
          }
        },
        "volumes": {
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "readOnly": true
        },
        "machineType": {
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "type": "array"
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NfsShare": {
      "properties": {
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "type": "string",
          "description": "The state of the NFS share."
        },
        "nfsShareId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the NFS share."
        },
        "volume": {
          "type": "string",
          "description": "The volume containing the share."
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          },
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        }
      },
      "id": "NfsShare",
      "description": "An NFS share.",
      "type": "object"
    },
    "VolumeConfig": {
      "type": "object",
      "description": "Configuration parameters for a new volume.",
      "id": "VolumeConfig",
      "properties": {
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The requested size of this volume, in GB.",
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the volume config.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        }
      }
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "id": "QosPolicy",
      "description": "QOS policy parameters.",
      "type": "object"
    },
    "StartInstanceRequest": {
      "description": "Message requesting to start a server.",
      "properties": {},
      "type": "object",
      "id": "StartInstanceRequest"
    },
    "SubmitProvisioningConfigRequest": {
      "id": "SubmitProvisioningConfigRequest",
      "properties": {
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        },
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        }
      },
      "type": "object",
      "description": "Request for SubmitProvisioningConfig."
    },
    "Lun": {
      "properties": {
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The size of this LUN, in gigabytes."
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the LUN."
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ]
        },
        "multiprotocolType": {
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the LUN, generated by the backend."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN."
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        }
      },
      "description": "A storage volume logical unit number (LUN).",
      "id": "Lun",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "properties": {
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "type": "array",
          "items": {
            "$ref": "LogicalNetworkInterface"
          }
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        },
        "interfaceIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."
        }
      },
      "type": "object",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface."
    },
    "LogicalNetworkInterface": {
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair.",
      "properties": {
        "network": {
          "description": "Name of the network",
          "type": "string"
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "networkType": {
          "description": "Type of network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        }
      },
      "id": "LogicalNetworkInterface"
    },
    "InstanceConfig": {
      "type": "object",
      "description": "Configuration parameters for a new instance.",
      "id": "InstanceConfig",
      "properties": {
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the instance config."
        },
        "logicalInterfaces": {
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "privateNetwork": {
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "networkConfig": {
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "description": "The type of network configuration on the instance.",
          "type": "string",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        }
      }
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "description": "Network template.",
      "properties": {
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to.",
          "type": "array"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "description": "Logical interfaces.",
          "type": "array"
        },
        "name": {
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "DetachLunRequest": {
      "id": "DetachLunRequest",
      "type": "object",
      "properties": {
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        },
        "skipReboot": {
          "description": "If true, performs lun unmapping without instance reboot.",
          "type": "boolean"
        }
      },
      "description": "Message for detach specific LUN from an Instance."
    },
    "NfsExport": {
      "description": "A NFS export entry.",
      "properties": {
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "type": "string",
          "description": "Export permissions.",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ]
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        }
      },
      "id": "NfsExport",
      "type": "object"
    },
    "Volume": {
      "properties": {
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64"
        },
        "state": {
          "description": "The state of this storage volume.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ]
        },
        "autoGrownSizeGib": {
          "format": "int64",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "type": "string"
        },
        "maxSizeGib": {
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "protocol": {
          "description": "Output only. Storage protocol for the Volume.",
          "readOnly": true,
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ]
        },
        "originallyRequestedSizeGib": {
          "description": "Originally requested size, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string",
          "format": "int64"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "description": "The storage type for this volume."
        },
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "emergencySizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        }
      },
      "id": "Volume",
      "type": "object",
      "description": "A storage volume."
    },
    "ListVolumesResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "The list of storage volumes."
        }
      },
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes.",
      "type": "object"
    },
    "InstanceQuota": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "availableMachineCount": {
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        },
        "name": {
          "description": "Output only. The name of the instance quota.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A resource budget.",
      "id": "InstanceQuota"
    },
    "StopInstanceRequest": {
      "id": "StopInstanceRequest",
      "type": "object",
      "description": "Message requesting to stop a server.",
      "properties": {}
    },
    "AllowedClient": {
      "type": "object",
      "properties": {
        "mountPermissions": {
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "description": "Mount permissions."
        },
        "shareIp": {
          "description": "The IP address of the share on this network.",
          "type": "string"
        },
        "nfsPath": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\""
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        }
      },
      "id": "AllowedClient",
      "description": "Represents an 'access point' for the share."
    },
    "VlanAttachment": {
      "properties": {
        "peerIp": {
          "type": "string",
          "description": "The peer IP of the attachment."
        },
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "VLAN attachment details.",
      "type": "object",
      "id": "VlanAttachment"
    },
    "ListNetworksResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "networks": {
          "type": "array",
          "description": "The list of networks.",
          "items": {
            "$ref": "Network"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "description": "Response message containing the list of networks.",
      "id": "ListNetworksResponse"
    },
    "ListLunsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume luns.",
      "properties": {
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "The list of luns."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListLunsResponse"
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "nfsShares": {
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          },
          "type": "array"
        }
      },
      "description": "Response message containing the list of NFS shares."
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "type": "array",
          "description": "The OS images available.",
          "items": {
            "$ref": "OSImage"
          }
        }
      },
      "type": "object",
      "id": "FetchInstanceProvisioningSettingsResponse",
      "description": "Response with all provisioning settings."
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "description": "Response message for the list of provisioning quotas.",
      "type": "object",
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "properties": {},
      "id": "ResetInstanceRequest",
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "ListInstancesResponse": {
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "$ref": "Instance"
          },
          "description": "The list of servers."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse"
    }
  },
  "name": "baremetalsolution",
  "fullyEncodeReservedExpansion": true,
  "title": "Bare Metal Solution API",
  "basePath": "",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "servicePath": "",
  "ownerName": "Google",
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    }
  },
  "batchPath": "batch",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "id": "baremetalsolution:v2",
  "discoveryVersion": "v1",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "version_module": true,
  "version": "v2",
  "kind": "discovery#restDescription",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "id": "baremetalsolution.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "path": "v2/{+name}"
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer"
                }
              },
              "path": "v2/{+name}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/locations",
              "httpMethod": "GET"
            }
          },
          "resources": {
            "networks": {
              "methods": {
                "listNetworkUsage": {
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value (project and location).",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project."
                },
                "patch": {
                  "request": {
                    "$ref": "Network"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`"
                    }
                  },
                  "path": "v2/{+name}",
                  "description": "Update details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.patch"
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "description": "Get details of a single network.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "response": {
                    "$ref": "Network"
                  },
                  "path": "v2/{+name}"
                },
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "description": "List network in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "path": "v2/{+parent}/networks",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true
                    }
                  }
                }
              }
            },
            "volumes": {
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "Lun"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "location": "path"
                        }
                      },
                      "description": "Get details of a single storage logical unit number(LUN)."
                    },
                    "list": {
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "description": "List storage volume luns for given storage volume.",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "path": "v2/{+parent}/luns",
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "description": "Required. Parent value for ListLunsRequest.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "description": "Get details of a single storage volume.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single storage volume.",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "path": "v2/{+parent}/volumes",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for ListVolumesRequest."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "description": "List storage volumes in a given project and location.",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  }
                },
                "resize": {
                  "httpMethod": "POST",
                  "description": "Emergency Volume resize.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "volume": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "description": "Required. Volume to resize.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+volume}:resize",
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "parameterOrder": [
                    "volume"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  }
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "description": "List the budget details to provision resources on a given project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "path": "v2/{+parent}/provisioningQuotas",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "location": "path"
                    }
                  },
                  "description": "Get ProvisioningConfig by name.",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "path": "v2/{+parent}/provisioningConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "parameters": {
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Create new ProvisioningConfig.",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "description": "Update existing ProvisioningConfig.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The name of the provisioning config."
                    },
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "submit": {
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "description": "Submit a provisiong configuration for a given project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "instances": {
              "methods": {
                "list": {
                  "path": "v2/{+parent}/instances",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListInstancesRequest."
                    }
                  },
                  "description": "List servers in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "start": {
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "path": "v2/{+name}:start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "description": "Starts a server that was shutdown."
                },
                "reset": {
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}:reset",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "httpMethod": "POST"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Get details about a single server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.instances.get"
                },
                "create": {
                  "description": "Create an Instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "request": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent project and location.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances"
                },
                "stop": {
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:stop",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "description": "Stop a running server.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "description": "Update details of a single server.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  }
                },
                "detachLun": {
                  "description": "Detach LUN from Instance.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "parameters": {
                    "instance": {
                      "required": true,
                      "description": "Required. Name of the instance.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "path": "v2/{+instance}:detachLun"
                }
              }
            },
            "nfsShares": {
              "methods": {
                "patch": {
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single NFS share.",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "description": "Output only. The name of the NFS share.",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Get details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "response": {
                    "$ref": "NfsShare"
                  }
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "description": "List NFS shares.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "path": "v2/{+parent}/nfsShares"
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "httpMethod": "GET"
                }
              }
            }
          }
        }
      }
    }
  }
}

{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.locations.get",
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location."
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.locations.list",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v2/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v2/projects/{projectsId}/locations"
            }
          },
          "resources": {
            "nfsShares": {
              "methods": {
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Output only. The name of the NFS share."
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "format": "google-fieldmask"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "description": "Update details of a single NFS share.",
                  "request": {
                    "$ref": "NfsShare"
                  }
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "description": "Get details of a single NFS share.",
                  "httpMethod": "GET"
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "description": "List NFS shares.",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/nfsShares",
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "networks": {
              "methods": {
                "patch": {
                  "path": "v2/{+name}",
                  "description": "Update details of a single network.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "request": {
                    "$ref": "Network"
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true,
                      "location": "path"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "List network in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "path": "v2/{+parent}/networks",
                  "id": "baremetalsolution.projects.locations.networks.list"
                },
                "listNetworkUsage": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "description": "Required. Parent value (project and location).",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage"
                },
                "get": {
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "description": "Get details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Network"
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "volumes": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "description": "Get details of a single storage volume.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}"
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    }
                  },
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "path": "v2/{+parent}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List storage volumes in a given project and location."
                },
                "resize": {
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+volume}:resize",
                  "httpMethod": "POST",
                  "parameters": {
                    "volume": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "description": "Required. Volume to resize.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "volume"
                  ],
                  "description": "Emergency Volume resize.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  }
                },
                "patch": {
                  "description": "Update details of a single storage volume.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Volume"
                  }
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "description": "Required. Name of the resource."
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "path": "v2/{+name}"
                    },
                    "list": {
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/luns",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListLunsRequest."
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results from the server.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "description": "List storage volume luns for given storage volume."
                    }
                  }
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "parameterOrder": [
                    "location"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "instances": {
              "methods": {
                "get": {
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details about a single server."
                },
                "reset": {
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "path": "v2/{+name}:reset",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "start": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:start",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "httpMethod": "POST",
                  "description": "Starts a server that was shutdown.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`"
                    }
                  },
                  "description": "Update details of a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch"
                },
                "stop": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "description": "Stop a running server.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}:stop",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "detachLun": {
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Detach LUN from Instance.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "path": "v2/{+instance}:detachLun",
                  "parameters": {
                    "instance": {
                      "type": "string",
                      "description": "Required. Name of the instance.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List servers in a given project and location.",
                  "path": "v2/{+parent}/instances",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "patch": {
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. The list of fields to update.",
                      "location": "query"
                    },
                    "name": {
                      "description": "Output only. The name of the provisioning config.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    },
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Update existing ProvisioningConfig.",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "description": "Get ProvisioningConfig by name.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}"
                },
                "submit": {
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Submit a provisiong configuration for a given project.",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit"
                },
                "create": {
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "httpMethod": "POST",
                  "description": "Create new ProvisioningConfig.",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    }
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/provisioningConfigs"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "httpMethod": "GET"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "List the budget details to provision resources on a given project.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "path": "v2/{+parent}/provisioningQuotas"
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": "",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "baremetalsolution:v2",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "location": "query"
    }
  },
  "schemas": {
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "description": "The OS images available.",
          "type": "array",
          "items": {
            "$ref": "OSImage"
          }
        }
      },
      "description": "Response with all provisioning settings.",
      "type": "object",
      "id": "FetchInstanceProvisioningSettingsResponse"
    },
    "LogicalNetworkInterface": {
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair.",
      "id": "LogicalNetworkInterface",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "networkType": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string",
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "network": {
          "description": "Name of the network",
          "type": "string"
        }
      }
    },
    "ListVolumesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "The list of storage volumes."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message containing the list of storage volumes.",
      "id": "ListVolumesResponse",
      "type": "object"
    },
    "OSImage": {
      "properties": {
        "supportedNetworkTemplates": {
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "description": "Network templates that can be used with this OS Image."
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        },
        "applicableInstanceTypes": {
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. OS Image's unique name.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        }
      },
      "type": "object",
      "description": "Operation System image.",
      "id": "OSImage"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        },
        "required": {
          "type": "boolean",
          "description": "If true, interface must have network connected."
        },
        "type": {
          "type": "string",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "description": "Interface type."
        }
      },
      "description": "Logical interface.",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "type": "object"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "AllowedClient": {
      "properties": {
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "mountPermissions": {
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string"
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "shareIp": {
          "description": "The IP address of the share on this network.",
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        }
      },
      "type": "object",
      "id": "AllowedClient",
      "description": "Represents an 'access point' for the share."
    },
    "SnapshotReservationDetail": {
      "id": "SnapshotReservationDetail",
      "properties": {
        "reservedSpaceGib": {
          "type": "string",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64"
        },
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32",
          "type": "integer"
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "format": "int64"
        },
        "reservedSpacePercent": {
          "format": "int32",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Details about snapshot space reservation and usage on the storage volume."
    },
    "ListNfsSharesResponse": {
      "type": "object",
      "id": "ListNfsSharesResponse",
      "description": "Response message containing the list of NFS shares.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nfsShares": {
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      }
    },
    "NetworkAddressReservation": {
      "type": "object",
      "properties": {
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        },
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        }
      },
      "id": "NetworkAddressReservation",
      "description": "A reservation of one or more addresses in a network."
    },
    "IntakeVlanAttachment": {
      "id": "IntakeVlanAttachment",
      "type": "object",
      "description": "A GCP vlan attachment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      }
    },
    "NetworkUsage": {
      "description": "Network with all used IP addresses.",
      "properties": {
        "usedIps": {
          "type": "array",
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          }
        },
        "network": {
          "description": "Network.",
          "$ref": "Network"
        }
      },
      "id": "NetworkUsage",
      "type": "object"
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "type": "object",
      "properties": {
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the volume config.",
          "type": "string"
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol."
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array"
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB.",
          "format": "int32"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        }
      },
      "id": "VolumeConfig"
    },
    "VlanAttachment": {
      "type": "object",
      "description": "VLAN attachment details.",
      "properties": {
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "format": "int64",
          "description": "The peer vlan ID of the attachment.",
          "type": "string"
        }
      },
      "id": "VlanAttachment"
    },
    "ListProvisioningQuotasResponse": {
      "description": "Response message for the list of provisioning quotas.",
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "provisioningQuotas": {
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "id": "ListNetworkUsageResponse",
      "description": "Response with Networks with IPs",
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs."
        }
      }
    },
    "SubmitProvisioningConfigRequest": {
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        },
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        }
      },
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig."
    },
    "Status": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "DetachLunRequest": {
      "id": "DetachLunRequest",
      "properties": {
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        },
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        }
      },
      "description": "Message for detach specific LUN from an Instance.",
      "type": "object"
    },
    "SubmitProvisioningConfigResponse": {
      "id": "SubmitProvisioningConfigResponse",
      "type": "object",
      "description": "Response for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      }
    },
    "ProvisioningQuota": {
      "description": "A provisioning quota for a given project.",
      "type": "object",
      "id": "ProvisioningQuota",
      "properties": {
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "serverCount": {
          "description": "Server count.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the provisioning quota.",
          "readOnly": true
        },
        "networkBandwidth": {
          "type": "string",
          "format": "int64",
          "description": "Network bandwidth, Gbps"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "storageGib": {
          "description": "Storage size (GB).",
          "type": "string",
          "format": "int64"
        },
        "assetType": {
          "type": "string",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "description": "The asset type of this provisioning quota.",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ]
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VRF": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "type": "string",
          "description": "The possible state of VRF."
        },
        "vlanAttachments": {
          "type": "array",
          "description": "The list of VLAN attachments for the VRF.",
          "items": {
            "$ref": "VlanAttachment"
          }
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF."
        }
      },
      "id": "VRF",
      "description": "A network VRF."
    },
    "ResizeVolumeRequest": {
      "type": "object",
      "description": "Request for emergency resize Volume.",
      "properties": {
        "sizeGib": {
          "description": "New Volume size, in GiB.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "ResizeVolumeRequest"
    },
    "NetworkConfig": {
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the network config.",
          "type": "string"
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "bandwidth": {
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "type": "string"
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "type": {
          "description": "The type of this network, either Client or Private.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "type": "string",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any."
        }
      },
      "description": "Configuration parameters for a new network.",
      "id": "NetworkConfig",
      "type": "object"
    },
    "StopInstanceRequest": {
      "properties": {},
      "description": "Message requesting to stop a server.",
      "id": "StopInstanceRequest",
      "type": "object"
    },
    "ListNetworksResponse": {
      "id": "ListNetworksResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "networks": {
          "type": "array",
          "description": "The list of networks.",
          "items": {
            "$ref": "Network"
          }
        }
      },
      "type": "object",
      "description": "Response message containing the list of networks."
    },
    "InstanceConfig": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the instance config.",
          "readOnly": true,
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "networkTemplate": {
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
          "type": "string"
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "logicalInterfaces": {
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "networkConfig": {
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "description": "The type of network configuration on the instance."
        }
      },
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance."
    },
    "Lun": {
      "properties": {
        "multiprotocolType": {
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string",
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ]
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the LUN.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ]
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The size of this LUN, in gigabytes."
        },
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN."
        }
      },
      "type": "object",
      "description": "A storage volume logical unit number (LUN).",
      "id": "Lun"
    },
    "Instance": {
      "type": "object",
      "description": "A server.",
      "id": "Instance",
      "properties": {
        "name": {
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "readOnly": true,
          "type": "string"
        },
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "description": "List of networks associated with this server."
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Update a time stamp."
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Instance`, generated by the backend."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Create a time stamp."
        },
        "state": {
          "type": "string",
          "description": "The state of the server.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ]
        },
        "machineType": {
          "type": "string",
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false."
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "List of LUNs associated with this server."
        }
      }
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "description": "The list of servers.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        }
      },
      "description": "Response message for the list of servers.",
      "type": "object"
    },
    "NetworkAddress": {
      "description": "A network.",
      "properties": {
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        },
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        }
      },
      "type": "object",
      "id": "NetworkAddress"
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "description": "QOS policy parameters.",
      "type": "object",
      "id": "QosPolicy"
    },
    "Volume": {
      "properties": {
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "originallyRequestedSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Originally requested size, in GiB."
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ]
        },
        "snapshotAutoDeleteBehavior": {
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "type": "string",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ]
        },
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64",
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "description": "The storage type for this volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "remainingSpaceGib": {
          "type": "string",
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots."
        },
        "maxSizeGib": {
          "type": "string",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64"
        },
        "emergencySizeGib": {
          "format": "int64",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "type": "string"
        },
        "requestedSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "The requested size of this storage volume, in GiB."
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true
        }
      },
      "description": "A storage volume.",
      "type": "object",
      "id": "Volume"
    },
    "Operation": {
      "properties": {
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "ListLunsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume luns.",
      "id": "ListLunsResponse",
      "properties": {
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "description": "The list of luns.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      }
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "description": "Network template.",
      "type": "object",
      "properties": {
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to.",
          "type": "array"
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "description": "Logical interfaces."
        },
        "name": {
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "properties": {
        "logicalNetworkInterfaces": {
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "type": "array",
          "description": "List of logical network interfaces within a logical interface."
        },
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "interfaceIndex": {
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "type": "object"
    },
    "ResetInstanceRequest": {
      "id": "ResetInstanceRequest",
      "type": "object",
      "properties": {},
      "description": "Message requesting to reset a server."
    },
    "ProvisioningConfig": {
      "description": "A provisioning configuration.",
      "type": "object",
      "id": "ProvisioningConfig",
      "properties": {
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Last update timestamp.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning config."
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "instances": {
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array"
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "volumes": {
          "description": "Volumes to be created.",
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "networks": {
          "description": "Networks to be created.",
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "type": "string",
          "description": "Output only. State of ProvisioningConfig.",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ]
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        }
      }
    },
    "OperationMetadata": {
      "description": "Represents the metadata from a long-running operation.",
      "properties": {
        "verb": {
          "description": "Output only. Name of the action executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "description": "Output only. API version used with the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OperationMetadata"
    },
    "Location": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "Network": {
      "type": "object",
      "id": "Network",
      "properties": {
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "macAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of physical interfaces."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "state": {
          "description": "The Network state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned."
          ],
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "type": "array"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string",
          "description": "The type of this network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string"
        }
      },
      "description": "A Network."
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "id": "InstanceQuota",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "availableMachineCount": {
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer"
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the instance quota."
        }
      }
    },
    "NfsShare": {
      "id": "NfsShare",
      "type": "object",
      "description": "An NFS share.",
      "properties": {
        "allowedClients": {
          "description": "List of allowed access points.",
          "type": "array",
          "items": {
            "$ref": "AllowedClient"
          }
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the NFS share."
        },
        "nfsShareId": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "readOnly": true
        },
        "volume": {
          "type": "string",
          "description": "The volume containing the share."
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "description": "The state of the NFS share."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        }
      }
    },
    "LunRange": {
      "description": "A LUN(Logical Unit Number) range.",
      "type": "object",
      "properties": {
        "quantity": {
          "format": "int32",
          "type": "integer",
          "description": "Number of LUNs to create."
        },
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "The requested size of each LUN, in GB."
        }
      },
      "id": "LunRange"
    },
    "NfsExport": {
      "properties": {
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "permissions": {
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        }
      },
      "description": "A NFS export entry.",
      "id": "NfsExport",
      "type": "object"
    },
    "StartInstanceRequest": {
      "properties": {},
      "type": "object",
      "description": "Message requesting to start a server.",
      "id": "StartInstanceRequest"
    }
  },
  "title": "Bare Metal Solution API",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "revision": "20220706",
  "servicePath": "",
  "name": "baremetalsolution",
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "version": "v2",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal"
}

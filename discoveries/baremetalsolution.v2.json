{
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "baremetalsolution",
  "revision": "20220314",
  "title": "Bare Metal Solution API",
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "version": "v2",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "discoveryVersion": "v1",
  "version_module": true,
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "schemas": {
    "SnapshotSchedulePolicy": {
      "properties": {
        "schedules": {
          "description": "The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.",
          "items": {
            "$ref": "Schedule"
          },
          "type": "array"
        },
        "description": {
          "description": "The description of the snapshot schedule policy.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the snapshot schedule policy.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot schedule policy, generated by the backend."
        },
        "state": {
          "enumDescriptions": [
            "The policy is in an unknown state.",
            "The policy is been provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "type": "string",
          "description": "The state of the snapshot schedule policy."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        }
      },
      "description": "A snapshot schedule policy.",
      "type": "object",
      "id": "SnapshotSchedulePolicy"
    },
    "VRF": {
      "id": "VRF",
      "type": "object",
      "description": "A network VRF.",
      "properties": {
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "type": "array",
          "description": "The list of VLAN attachments for the VRF."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "description": "The possible state of VRF.",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        }
      }
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "type": "object",
      "properties": {
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance quota.",
          "readOnly": true
        }
      },
      "id": "InstanceQuota"
    },
    "ListNetworksResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "description": "The list of networks."
        }
      },
      "id": "ListNetworksResponse",
      "type": "object",
      "description": "Response message containing the list of networks."
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "type": "object",
      "id": "QosPolicy",
      "description": "QOS policy parameters."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified."
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED"
          ],
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "volumes": {
          "items": {
            "$ref": "VolumeConfig"
          },
          "description": "Volumes to be created.",
          "type": "array"
        },
        "instances": {
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. The name of the provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "cloudConsoleUri": {
          "readOnly": true,
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created."
        },
        "ticketId": {
          "description": "A generated buganizer id to track provisioning request.",
          "type": "string"
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A provisioning configuration."
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "id": "Location"
    },
    "RestoreVolumeSnapshotRequest": {
      "properties": {},
      "type": "object",
      "id": "RestoreVolumeSnapshotRequest",
      "description": "Message for restoring a volume snapshot."
    },
    "VlanAttachment": {
      "id": "VlanAttachment",
      "description": "VLAN attachment details.",
      "properties": {
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "peerVlanId": {
          "format": "int64",
          "description": "The peer vlan ID of the attachment.",
          "type": "string"
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Schedule": {
      "id": "Schedule",
      "properties": {
        "retentionCount": {
          "description": "The maximum number of snapshots to retain in this schedule.",
          "format": "int32",
          "type": "integer"
        },
        "prefix": {
          "description": "A list of snapshot names created in this schedule.",
          "type": "string"
        },
        "crontabSpec": {
          "description": "A crontab-like specification that the schedule uses to take snapshots.",
          "type": "string"
        }
      },
      "description": "A snapshot schedule.",
      "type": "object"
    },
    "Network": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "macAddress": {
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "description": "The Network state.",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string",
          "description": "The type of this network."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "Network",
      "description": "A Network."
    },
    "Instance": {
      "properties": {
        "interactiveSerialConsoleEnabled": {
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "List of LUNs associated with this server."
        },
        "machineType": {
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "networks": {
          "description": "List of networks associated with this server.",
          "items": {
            "$ref": "Network"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "description": "The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Instance`, generated by the backend.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Update a time stamp.",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "Output only. Create a time stamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false."
        }
      },
      "description": "A server.",
      "id": "Instance",
      "type": "object"
    },
    "NfsExport": {
      "description": "A NFS export entry.",
      "type": "object",
      "id": "NfsExport",
      "properties": {
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions.",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "type": "object",
      "description": "A network.",
      "properties": {
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        },
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        }
      }
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "serviceCidr": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any."
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617)."
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "bandwidth": {
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ]
        },
        "name": {
          "description": "Output only. The name of the network config.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "type": {
          "description": "The type of this network, either Client or Private.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        }
      },
      "description": "Configuration parameters for a new network.",
      "id": "NetworkConfig"
    },
    "SubmitProvisioningConfigResponse": {
      "type": "object",
      "description": "Response for SubmitProvisioningConfig.",
      "id": "SubmitProvisioningConfigResponse",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      }
    },
    "Volume": {
      "type": "object",
      "description": "A storage volume.",
      "properties": {
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        },
        "remainingSpaceGib": {
          "format": "int64",
          "type": "string",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "The storage type for this volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string"
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64",
          "type": "string"
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "description": "The behavior to use when snapshot reserved space is full."
        },
        "requestedSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "The requested size of this storage volume, in GiB."
        },
        "state": {
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ]
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "Volume"
    },
    "ProvisioningQuota": {
      "type": "object",
      "description": "A provisioning quota for a given project.",
      "properties": {
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "assetType": {
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "description": "The asset type of this provisioning quota."
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the provisioning quota.",
          "readOnly": true
        }
      },
      "id": "ProvisioningQuota"
    },
    "SubmitProvisioningConfigRequest": {
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        },
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        }
      },
      "type": "object"
    },
    "StartInstanceRequest": {
      "properties": {},
      "type": "object",
      "description": "Message requesting to start a server.",
      "id": "StartInstanceRequest"
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "The list of storage volumes."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SnapshotReservationDetail": {
      "id": "SnapshotReservationDetail",
      "type": "object",
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "properties": {
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer",
          "format": "int32"
        },
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        },
        "reservedSpaceGib": {
          "type": "string",
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB."
        },
        "reservedSpacePercent": {
          "type": "integer",
          "format": "int32",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true."
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "type": "object",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "IntakeVlanAttachment": {
      "id": "IntakeVlanAttachment",
      "type": "object",
      "description": "A GCP vlan attachment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      }
    },
    "NetworkUsage": {
      "description": "Network with all used IP addresses.",
      "id": "NetworkUsage",
      "properties": {
        "usedIps": {
          "description": "All used IP addresses in this network.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "network": {
          "description": "Network.",
          "$ref": "Network"
        }
      },
      "type": "object"
    },
    "ListNfsSharesResponse": {
      "properties": {
        "nfsShares": {
          "description": "The list of NFS shares.",
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "type": "object",
      "id": "ListNfsSharesResponse",
      "description": "Response message containing the list of NFS shares."
    },
    "ListVolumeSnapshotsResponse": {
      "description": "Response message containing the list of storage volume snapshots.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "volumeSnapshots": {
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "type": "array",
          "description": "The list of storage volumes."
        }
      },
      "type": "object",
      "id": "ListVolumeSnapshotsResponse"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "type": "object",
      "description": "Snapshot registered for a given storage volume.",
      "properties": {
        "id": {
          "description": "An identifier for the snapshot, generated by the backend.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the storage volume snapshot.",
          "type": "string",
          "readOnly": true
        },
        "storageVolume": {
          "description": "The storage volume this snapshot belongs to.",
          "type": "string"
        },
        "sizeBytes": {
          "description": "The size of the storage volume snapshot, in bytes.",
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The creation time of the storage volume snapshot.",
          "format": "google-datetime",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the storage volume snapshot."
        }
      }
    },
    "AllowedClient": {
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient",
      "type": "object",
      "properties": {
        "shareIp": {
          "type": "string",
          "description": "The IP address of the share on this network."
        },
        "mountPermissions": {
          "type": "string",
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ]
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        }
      }
    },
    "ListLunsResponse": {
      "type": "object",
      "id": "ListLunsResponse",
      "properties": {
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "The list of luns."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      },
      "description": "Response message containing the list of storage volume luns."
    },
    "Lun": {
      "id": "Lun",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the LUN.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "type": "string",
          "description": "The state of this storage volume."
        },
        "sizeGb": {
          "description": "The size of this LUN, in gigabytes.",
          "type": "string",
          "format": "int64"
        },
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "type": "string",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ]
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "description": "The storage type for this LUN.",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ]
        }
      },
      "description": "A storage volume logical unit number (LUN).",
      "type": "object"
    },
    "VolumeConfig": {
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "Volume protocol.",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ]
        },
        "nfsExports": {
          "type": "array",
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the volume config.",
          "type": "string"
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          },
          "type": "array"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "sizeGb": {
          "description": "The requested size of this volume, in GB.",
          "type": "integer",
          "format": "int32"
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "type": {
          "type": "string",
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ]
        }
      },
      "type": "object"
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "description": "Response message containing the list of snapshot schedule policies.",
      "type": "object",
      "id": "ListSnapshotSchedulePoliciesResponse",
      "properties": {
        "snapshotSchedulePolicies": {
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "description": "The snapshot schedule policies registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "LunRange": {
      "type": "object",
      "description": "A LUN(Logical Unit Number) range.",
      "id": "LunRange",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Number of LUNs to create."
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of each LUN, in GB."
        }
      }
    },
    "ListInstancesResponse": {
      "type": "object",
      "description": "Response message for the list of servers.",
      "properties": {
        "instances": {
          "description": "The list of servers.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListInstancesResponse"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "NfsShare": {
      "id": "NfsShare",
      "type": "object",
      "properties": {
        "volume": {
          "description": "The volume containing the share.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the NFS share.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned."
          ],
          "type": "string",
          "description": "The state of the NFS share.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ]
        },
        "nfsShareId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "type": "array",
          "items": {
            "$ref": "AllowedClient"
          }
        }
      },
      "description": "An NFS share."
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "type": "object",
      "id": "ResetInstanceRequest",
      "properties": {}
    },
    "ListNetworkUsageResponse": {
      "type": "object",
      "id": "ListNetworkUsageResponse",
      "description": "Response with Networks with IPs",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs."
        }
      }
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "type": "object",
      "id": "InstanceConfig",
      "properties": {
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance config."
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "accountNetworksEnabled": {
          "description": "If true networks can be from different projects of the same vendor account.",
          "type": "boolean"
        }
      }
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "provisioningQuotas": {
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "type": "array"
        }
      },
      "description": "Response message for the list of provisioning quotas.",
      "type": "object"
    }
  },
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "id": "baremetalsolution:v2",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "id": "baremetalsolution.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Resource name for the location.",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "baremetalsolution.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "path": "v2/{+name}/locations",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v2/projects/{projectsId}/locations"
            }
          },
          "resources": {
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "description": "List the budget details to provision resources on a given project.",
                  "path": "v2/{+parent}/provisioningQuotas",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  }
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "path": "v2/{+parent}/networks",
                  "description": "List network in a given project and location.",
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "type": "string"
                    },
                    "name": {
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Network"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "description": "Update details of a single network."
                },
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Get details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}"
                },
                "listNetworkUsage": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "parameters": {
                    "location": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value (project and location).",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "path": "v2/{+location}/networks:listNetworkUsage"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Get ProvisioningConfig by name.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+name}"
                },
                "submit": {
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "description": "Submit a provisiong configuration for a given project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit"
                },
                "patch": {
                  "description": "Update existing ProvisioningConfig.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "description": "Output only. The name of the provisioning config."
                    },
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameters": {
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Create new ProvisioningConfig.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+parent}/provisioningConfigs",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "volumes": {
              "methods": {
                "list": {
                  "description": "List storage volumes in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "path": "v2/{+parent}/volumes",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET"
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "description": "Get details of a single storage volume.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Update details of a single storage volume.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'requested_size_gib' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  }
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "path": "v2/{+name}",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "response": {
                        "$ref": "Lun"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the resource."
                        }
                      }
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "description": "List storage volume luns for given storage volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query",
                          "format": "int32"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListLunsRequest."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results from the server.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/luns",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list"
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "get": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "description": "Get details of a single storage volume snapshot.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      }
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The volume to snapshot.",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "description": "Create a storage volume snapshot in a containing volume.",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "path": "v2/{+parent}/snapshots",
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "httpMethod": "POST"
                    },
                    "delete": {
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a storage volume snapshot for a given volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot to delete.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "httpMethod": "DELETE"
                    },
                    "restoreVolumeSnapshot": {
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "description": "Restore a storage volume snapshot to its containing volume.",
                      "parameters": {
                        "volumeSnapshot": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the resource."
                        }
                      },
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "httpMethod": "POST"
                    },
                    "list": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        },
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        }
                      },
                      "path": "v2/{+parent}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "description": "List storage volume snapshots for given storage volume.",
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "patch": {
                  "description": "Update details of a single server.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Get details about a single server.",
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "start": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "description": "Starts a server that was shutdown.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}:start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "List servers in a given project and location.",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "reset": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}:reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "snapshotSchedulePolicies": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListSnapshotSchedulePoliciesResponse"
                  },
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.list",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    }
                  },
                  "description": "List snapshot schedule policies in a given project and location.",
                  "httpMethod": "GET"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.create",
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent project and location containing the SnapshotSchedulePolicy.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "snapshotSchedulePolicyId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Snapshot policy ID"
                    }
                  },
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "httpMethod": "POST",
                  "description": "Create a snapshot schedule policy in the specified project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "description": "Get details of a single snapshot schedule policy.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "patch": {
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.patch",
                  "description": "Update a snapshot schedule policy in the specified project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Output only. The name of the snapshot schedule policy.",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the snapshot schedule policy to delete.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Delete a named snapshot schedule policy.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.delete",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "nfsShares": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "path": "v2/{+parent}/nfsShares",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List NFS shares.",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "path": "v2/{+name}",
                  "description": "Update details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The name of the NFS share."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "description": "Get details of a single NFS share.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}

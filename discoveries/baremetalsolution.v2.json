{
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "batchPath": "batch",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "version": "v2",
  "schemas": {
    "OSImage": {
      "properties": {
        "supportedNetworkTemplates": {
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "description": "Network templates that can be used with this OS Image."
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. OS Image's unique name.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        }
      },
      "description": "Operation System image.",
      "type": "object",
      "id": "OSImage"
    },
    "QosPolicy": {
      "id": "QosPolicy",
      "type": "object",
      "description": "QOS policy parameters.",
      "properties": {
        "bandwidthGbps": {
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "format": "double",
          "type": "number"
        }
      }
    },
    "ProvisioningQuota": {
      "properties": {
        "networkBandwidth": {
          "type": "string",
          "description": "Network bandwidth, Gbps",
          "format": "int64"
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "type": "integer",
          "format": "int32"
        },
        "storageGib": {
          "type": "string",
          "format": "int64",
          "description": "Storage size (GB)."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning quota."
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "assetType": {
          "type": "string",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "description": "The asset type of this provisioning quota."
        },
        "serverCount": {
          "description": "Server count.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "A provisioning quota for a given project.",
      "id": "ProvisioningQuota",
      "type": "object"
    },
    "VolumeConfig": {
      "type": "object",
      "properties": {
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB.",
          "format": "int32"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC."
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array"
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the volume config.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume.",
          "type": "string"
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        }
      },
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume."
    },
    "InstanceQuota": {
      "properties": {
        "availableMachineCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of machines than can be created for the given location and instance_type."
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance quota."
        }
      },
      "type": "object",
      "id": "InstanceQuota",
      "description": "A resource budget."
    },
    "Network": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network.",
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          }
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "description": "The Network state.",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ],
          "type": "string"
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "readOnly": true,
          "type": "string"
        },
        "macAddress": {
          "items": {
            "type": "string"
          },
          "description": "List of physical interfaces.",
          "type": "array"
        }
      },
      "id": "Network",
      "type": "object",
      "description": "A Network."
    },
    "NfsExport": {
      "type": "object",
      "properties": {
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        },
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "type": "string",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        }
      },
      "id": "NfsExport",
      "description": "A NFS export entry."
    },
    "NfsShare": {
      "description": "An NFS share.",
      "id": "NfsShare",
      "type": "object",
      "properties": {
        "volume": {
          "type": "string",
          "description": "The volume containing the share."
        },
        "requestedSizeGib": {
          "format": "int64",
          "description": "The requested size, in GiB.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned."
          ],
          "description": "The state of the NFS share."
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "type": "array",
          "items": {
            "$ref": "AllowedClient"
          }
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "nfsShareId": {
          "description": "Output only. An identifier for the NFS share, generated by the backend.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the NFS share.",
          "type": "string"
        }
      }
    },
    "NetworkUsage": {
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses.",
      "properties": {
        "network": {
          "$ref": "Network",
          "description": "Network."
        },
        "usedIps": {
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "properties": {
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "type": "array",
          "items": {
            "$ref": "LogicalNetworkInterface"
          }
        },
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "interfaceIndex": {
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface"
    },
    "SubmitProvisioningConfigRequest": {
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        }
      },
      "type": "object",
      "description": "Request for SubmitProvisioningConfig.",
      "id": "SubmitProvisioningConfigRequest"
    },
    "IntakeVlanAttachment": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      },
      "id": "IntakeVlanAttachment",
      "type": "object",
      "description": "A GCP vlan attachment."
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      }
    },
    "Lun": {
      "properties": {
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "sizeGb": {
          "type": "string",
          "description": "The size of this LUN, in gigabytes.",
          "format": "int64"
        },
        "wwid": {
          "description": "The WWID for this LUN.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the LUN.",
          "readOnly": true,
          "type": "string"
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "description": "The storage type for this LUN.",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ]
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ]
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string"
        }
      },
      "id": "Lun",
      "type": "object",
      "description": "A storage volume logical unit number (LUN)."
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "nfsShares": {
          "items": {
            "$ref": "NfsShare"
          },
          "type": "array",
          "description": "The list of NFS shares."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message containing the list of NFS shares."
    },
    "VRF": {
      "description": "A network VRF.",
      "id": "VRF",
      "properties": {
        "vlanAttachments": {
          "type": "array",
          "description": "The list of VLAN attachments for the VRF.",
          "items": {
            "$ref": "VlanAttachment"
          }
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "description": "The possible state of VRF.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServerNetworkTemplate": {
      "properties": {
        "applicableInstanceTypes": {
          "type": "array",
          "description": "Instance types this template is applicable to.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "description": "Logical interfaces.",
          "type": "array"
        }
      },
      "id": "ServerNetworkTemplate",
      "type": "object",
      "description": "Network template."
    },
    "ResizeVolumeRequest": {
      "type": "object",
      "description": "Request for emergency resize Volume.",
      "id": "ResizeVolumeRequest",
      "properties": {
        "sizeGib": {
          "type": "string",
          "format": "int64",
          "description": "New Volume size, in GiB."
        }
      }
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "id": "InstanceConfig",
      "type": "object",
      "properties": {
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the instance config."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false."
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true."
        },
        "networkConfig": {
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "type": "string",
          "description": "The type of network configuration on the instance.",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        }
      }
    },
    "NetworkAddress": {
      "type": "object",
      "properties": {
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        }
      },
      "description": "A network.",
      "id": "NetworkAddress"
    },
    "LogicalNetworkInterface": {
      "properties": {
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address in the network",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "Name of the network"
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "networkType": {
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string"
        }
      },
      "id": "LogicalNetworkInterface",
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair."
    },
    "ProvisioningConfig": {
      "properties": {
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "description": "Instances to be created.",
          "type": "array"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Last update timestamp."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning config."
        },
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "ticketId": {
          "type": "string",
          "description": "A generated ticket id to track provisioning request."
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "readOnly": true,
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "type": "string"
        },
        "networks": {
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created.",
          "type": "array"
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled."
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED"
          ]
        }
      },
      "id": "ProvisioningConfig",
      "type": "object",
      "description": "A provisioning configuration."
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "AllowedClient": {
      "id": "AllowedClient",
      "description": "Represents an 'access point' for the share.",
      "properties": {
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "shareIp": {
          "description": "The IP address of the share on this network.",
          "type": "string"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "mountPermissions": {
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string",
          "description": "Mount permissions."
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        }
      },
      "type": "object"
    },
    "Instance": {
      "id": "Instance",
      "description": "A server.",
      "properties": {
        "name": {
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string",
          "readOnly": true
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "description": "List of LUNs associated with this server.",
          "type": "array"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Create a time stamp.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "description": "The state of the server.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ]
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "machineType": {
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Instance`, generated by the backend."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Update a time stamp.",
          "type": "string",
          "format": "google-datetime"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "description": "List of networks associated with this server."
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        },
        "networkTemplate": {
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false."
        }
      },
      "type": "object"
    },
    "Location": {
      "properties": {
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "Volume": {
      "description": "A storage volume.",
      "id": "Volume",
      "type": "object",
      "properties": {
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "emergencySizeGib": {
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "type": "string",
          "format": "int64"
        },
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "type": "string",
          "format": "int64"
        },
        "originallyRequestedSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Originally requested size, in GiB."
        },
        "requestedSizeGib": {
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "The storage type for this volume.",
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true,
          "type": "string"
        },
        "maxSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB."
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "snapshotAutoDeleteBehavior": {
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "type": "string",
          "description": "The behavior to use when snapshot reserved space is full."
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ]
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes.",
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "The list of storage volumes."
        }
      }
    },
    "ListLunsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume luns.",
      "id": "ListLunsResponse",
      "properties": {
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "The list of luns."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      }
    },
    "DetachLunRequest": {
      "properties": {
        "lun": {
          "description": "Required. Name of the Lun to detach.",
          "type": "string"
        }
      },
      "description": "Message for detach specific LUN from an Instance.",
      "id": "DetachLunRequest",
      "type": "object"
    },
    "StopInstanceRequest": {
      "properties": {},
      "type": "object",
      "id": "StopInstanceRequest",
      "description": "Message requesting to stop a server."
    },
    "ListInstancesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "instances": {
          "description": "The list of servers.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "type": "object",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "If true, interface must have network connected."
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "description": "Interface type.",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "type": "string"
        }
      },
      "description": "Logical interface."
    },
    "NetworkConfig": {
      "type": "object",
      "id": "NetworkConfig",
      "properties": {
        "serviceCidr": {
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "description": "Service CIDR, if any."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "bandwidth": {
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ]
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "The JumboFramesEnabled option for customer to set."
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the network config.",
          "readOnly": true
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "type": "string"
        }
      },
      "description": "Configuration parameters for a new network."
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs.",
          "type": "array"
        }
      },
      "id": "ListNetworkUsageResponse",
      "type": "object"
    },
    "ListNetworksResponse": {
      "properties": {
        "networks": {
          "description": "The list of networks.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "description": "Response message containing the list of networks.",
      "id": "ListNetworksResponse",
      "type": "object"
    },
    "ListProvisioningQuotasResponse": {
      "type": "object",
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "ListProvisioningQuotasResponse",
      "description": "Response message for the list of provisioning quotas."
    },
    "ResetInstanceRequest": {
      "properties": {},
      "id": "ResetInstanceRequest",
      "type": "object",
      "description": "Message requesting to reset a server."
    },
    "NetworkAddressReservation": {
      "description": "A reservation of one or more addresses in a network.",
      "properties": {
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        },
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        }
      },
      "id": "NetworkAddressReservation",
      "type": "object"
    },
    "SubmitProvisioningConfigResponse": {
      "id": "SubmitProvisioningConfigResponse",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      },
      "type": "object",
      "description": "Response for SubmitProvisioningConfig."
    },
    "LunRange": {
      "properties": {
        "quantity": {
          "description": "Number of LUNs to create.",
          "format": "int32",
          "type": "integer"
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of each LUN, in GB.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "LunRange",
      "description": "A LUN(Logical Unit Number) range."
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpaceRemainingGib": {
          "type": "string",
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        },
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer",
          "format": "int32"
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "format": "int32",
          "type": "integer"
        },
        "reservedSpaceGib": {
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SnapshotReservationDetail",
      "description": "Details about snapshot space reservation and usage on the storage volume."
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "items": {
            "$ref": "OSImage"
          },
          "description": "The OS images available.",
          "type": "array"
        }
      },
      "id": "FetchInstanceProvisioningSettingsResponse",
      "type": "object",
      "description": "Response with all provisioning settings."
    },
    "StartInstanceRequest": {
      "id": "StartInstanceRequest",
      "type": "object",
      "description": "Message requesting to start a server.",
      "properties": {}
    },
    "VlanAttachment": {
      "type": "object",
      "properties": {
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "type": "string",
          "format": "int64"
        },
        "peerIp": {
          "type": "string",
          "description": "The peer IP of the attachment."
        }
      },
      "id": "VlanAttachment",
      "description": "VLAN attachment details."
    }
  },
  "id": "baremetalsolution:v2",
  "title": "Bare Metal Solution API",
  "name": "baremetalsolution",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "version_module": true,
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "nfsShares": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "description": "List NFS shares.",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "description": "Update details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Output only. The name of the NFS share."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "description": "Get details of a single NFS share.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "response": {
                    "$ref": "NfsShare"
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "patch": {
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "path": "v2/{+name}",
                  "parameters": {
                    "email": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "Required. The list of fields to update."
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true,
                      "description": "Output only. The name of the provisioning config."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update existing ProvisioningConfig.",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "get": {
                  "description": "Get ProvisioningConfig by name.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ProvisioningConfig.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "description": "Create new ProvisioningConfig.",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "submit": {
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Submit a provisiong configuration for a given project.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit"
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "description": "List network in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/networks"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Network"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "description": "Update details of a single network.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "description": "Get details of a single network.",
                  "path": "v2/{+name}"
                },
                "listNetworkUsage": {
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "parameters": {
                    "location": {
                      "location": "path",
                      "description": "Required. Parent value (project and location).",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage"
                }
              }
            },
            "instances": {
              "methods": {
                "reset": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "path": "v2/{+name}:reset",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset"
                },
                "start": {
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:start",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "description": "Starts a server that was shutdown."
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single server.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "path": "v2/{+name}"
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details about a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET"
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "description": "List servers in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "detachLun": {
                  "parameterOrder": [
                    "instance"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "path": "v2/{+instance}:detachLun",
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Detach LUN from Instance.",
                  "parameters": {
                    "instance": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the instance.",
                      "location": "path"
                    }
                  }
                },
                "stop": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "description": "Stop a running server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:stop",
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  }
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "List the budget details to provision resources on a given project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "path": "v2/{+parent}/provisioningQuotas"
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "volumes": {
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "httpMethod": "GET",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}"
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest."
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "path": "v2/{+parent}/luns",
                      "httpMethod": "GET",
                      "description": "List storage volume luns for given storage volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "resize": {
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "parameters": {
                    "volume": {
                      "location": "path",
                      "description": "Required. Volume to resize.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Emergency Volume resize.",
                  "parameterOrder": [
                    "volume"
                  ],
                  "path": "v2/{+volume}:resize",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Get details of a single storage volume."
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/volumes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "description": "List storage volumes in a given project and location."
                },
                "patch": {
                  "description": "Update details of a single storage volume.",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'"
                    }
                  },
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Volume"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v2/projects/{projectsId}/locations",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              }
            },
            "get": {
              "response": {
                "$ref": "Location"
              },
              "id": "baremetalsolution.projects.locations.get",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "required": true,
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/bare-metal",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "servicePath": "",
  "revision": "20220603",
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/"
}

{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "basePath": "",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerName": "Google",
  "title": "Bare Metal Solution API",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "volumes": {
              "methods": {
                "rename": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.rename",
                  "description": "RenameVolume sets a new name for a volume. Use with caution, previous names become immediately invalidated.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "RenameVolumeRequest"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The `name` field is used to identify the volume. Format: projects/{project}/locations/{location}/volumes/{volume}"
                    }
                  },
                  "response": {
                    "$ref": "Volume"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename",
                  "path": "v2/{+name}:rename",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single storage volume.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single storage volume.",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Volume"
                  }
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListVolumesRequest."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "List storage volumes in a given project and location.",
                  "path": "v2/{+parent}/volumes",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "resize": {
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "description": "Emergency Volume resize.",
                  "path": "v2/{+volume}:resize",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "volume": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Volume to resize.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "volume"
                  ]
                },
                "evict": {
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict",
                  "request": {
                    "$ref": "EvictVolumeRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Volume.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Skips volume's cooloff and deletes it now. Volume must be in cooloff state.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:evict",
                  "id": "baremetalsolution.projects.locations.volumes.evict"
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. Parent value for ListLunsRequest.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results from the server.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "description": "List storage volume luns for given storage volume.",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/luns",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list"
                    },
                    "get": {
                      "response": {
                        "$ref": "Lun"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "path": "v2/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "evict": {
                      "path": "v2/{+name}:evict",
                      "request": {
                        "$ref": "EvictLunRequest"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.evict",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "description": "Skips lun's cooloff and deletes it now. Lun must be in cooloff state.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "description": "Required. The name of the lun."
                        }
                      }
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "list": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "type": "string",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        }
                      },
                      "path": "v2/{+parent}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      }
                    },
                    "delete": {
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the snapshot to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Empty"
                      },
                      "path": "v2/{+name}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete"
                    },
                    "get": {
                      "path": "v2/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the snapshot.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      }
                    },
                    "restoreVolumeSnapshot": {
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "volumeSnapshot": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume.",
                          "type": "string",
                          "location": "path"
                        }
                      }
                    },
                    "create": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "path": "v2/{+parent}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The volume to snapshot.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "httpMethod": "POST"
                    }
                  }
                }
              }
            },
            "nfsShares": {
              "methods": {
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "description": "Create an NFS share.",
                  "path": "v2/{+parent}/nfsShares"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the NFS share to delete."
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Immutable. The name of the NFS share."
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "httpMethod": "PATCH",
                  "description": "Update details of a single NFS share.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single NFS share.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "path": "v2/{+name}"
                },
                "rename": {
                  "parameters": {
                    "name": {
                      "description": "Required. The `name` field is used to identify the nfsshare. Format: projects/{project}/locations/{location}/nfsshares/{nfsshare}",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:rename",
                  "id": "baremetalsolution.projects.locations.nfsShares.rename",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "description": "RenameNfsShare sets a new name for an nfsshare. Use with caution, previous names become immediately invalidated.",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:rename",
                  "request": {
                    "$ref": "RenameNfsShareRequest"
                  }
                },
                "list": {
                  "path": "v2/{+parent}/nfsShares",
                  "description": "List NFS shares.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "description": "List network in a given project and location.",
                  "path": "v2/{+parent}/networks",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "id": "baremetalsolution.projects.locations.networks.list"
                },
                "rename": {
                  "id": "baremetalsolution.projects.locations.networks.rename",
                  "description": "RenameNetwork sets a new name for a network. Use with caution, previous names become immediately invalidated.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "description": "Required. The `name` field is used to identify the network. Format: projects/{project}/locations/{location}/networks/{network}"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:rename",
                  "response": {
                    "$ref": "Network"
                  },
                  "request": {
                    "$ref": "RenameNetworkRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename"
                },
                "listNetworkUsage": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value (project and location).",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  }
                },
                "patch": {
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "request": {
                    "$ref": "Network"
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single network."
                },
                "get": {
                  "response": {
                    "$ref": "Network"
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Get details of a single network.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "httpMethod": "GET"
                }
              }
            },
            "sshKeys": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.sshKeys.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of items to return.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "parent": {
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\".",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/sshKeys",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "httpMethod": "GET"
                },
                "create": {
                  "path": "v2/{+parent}/sshKeys",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "sshKeyId": {
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent containing the SSH keys.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "SSHKey"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature."
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$"
                    }
                  },
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "httpMethod": "DELETE",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}"
                }
              }
            },
            "instances": {
              "methods": {
                "start": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "description": "Starts a server that was shutdown.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:start",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.start"
                },
                "enableInteractiveSerialConsole": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Enable the interactive serial console feature on an instance.",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "path": "v2/{+name}",
                  "description": "Get details about a single server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.get"
                },
                "detachLun": {
                  "description": "Detach LUN from Instance.",
                  "path": "v2/{+instance}:detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "instance"
                  ],
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the instance.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun"
                },
                "reset": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset"
                },
                "stop": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Stop a running server.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:stop"
                },
                "disableInteractiveSerialConsole": {
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "httpMethod": "POST",
                  "description": "Disable the interactive serial console feature on an instance.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:disableInteractiveSerialConsole"
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Parent value for ListInstancesRequest."
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v2/{+parent}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List servers in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "rename": {
                  "path": "v2/{+name}:rename",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The `name` field is used to identify the instance. Format: projects/{project}/locations/{location}/instances/{instance}",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "RenameInstance sets a new name for an instance. Use with caution, previous names become immediately invalidated.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename",
                  "id": "baremetalsolution.projects.locations.instances.rename",
                  "request": {
                    "$ref": "RenameInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Instance"
                  }
                },
                "patch": {
                  "description": "Update details of a single server.",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image` `ssh_keys` `kms_key_version`",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Instance"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "path": "v2/{+name}",
                  "description": "Get details about an operation.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List the budget details to provision resources on a given project.",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "path": "v2/{+parent}/provisioningQuotas",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "format": "int32"
                    }
                  }
                }
              }
            },
            "osImages": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/osImages/[^/]+$",
                      "description": "Required. Name of the OS image.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.osImages.get",
                  "response": {
                    "$ref": "OSImage"
                  },
                  "path": "v2/{+name}",
                  "description": "Get details of a single OS image.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/osImages/{osImagesId}",
                  "httpMethod": "GET"
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.osImages.list",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent value for ListOSImagesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported."
                    }
                  },
                  "description": "Retrieves the list of OS images which are currently approved.",
                  "path": "v2/{+parent}/osImages",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOSImagesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/osImages",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get ProvisioningConfig by name."
                },
                "submit": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Submit a provisiong configuration for a given project.",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  }
                },
                "create": {
                  "parameters": {
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "httpMethod": "POST",
                  "description": "Create new ProvisioningConfig."
                },
                "patch": {
                  "parameters": {
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "name": {
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. The list of fields to update.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Update existing ProvisioningConfig.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch"
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v2/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET",
              "id": "baremetalsolution.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "https://cloud.google.com/bare-metal",
  "batchPath": "batch",
  "id": "baremetalsolution:v2",
  "version": "v2",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "name": "baremetalsolution",
  "schemas": {
    "RenameNetworkRequest": {
      "id": "RenameNetworkRequest",
      "properties": {
        "newNetworkId": {
          "type": "string",
          "description": "Required. The new `id` of the network."
        }
      },
      "type": "object",
      "description": "Message requesting rename of a server."
    },
    "StopInstanceResponse": {
      "id": "StopInstanceResponse",
      "type": "object",
      "description": "Response message from stopping a server.",
      "properties": {}
    },
    "NetworkUsage": {
      "description": "Network with all used IP addresses.",
      "type": "object",
      "id": "NetworkUsage",
      "properties": {
        "usedIps": {
          "description": "All used IP addresses in this network.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "network": {
          "description": "Network.",
          "$ref": "Network"
        }
      }
    },
    "StopInstanceRequest": {
      "id": "StopInstanceRequest",
      "description": "Message requesting to stop a server.",
      "properties": {},
      "type": "object"
    },
    "ListOSImagesResponse": {
      "description": "Request for getting all available OS images.",
      "id": "ListOSImagesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "osImages": {
          "type": "array",
          "items": {
            "$ref": "OSImage"
          },
          "description": "The OS images available."
        }
      }
    },
    "Network": {
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "macAddress": {
          "type": "array",
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          }
        },
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server."
        },
        "mountPoints": {
          "type": "array",
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "description": "Input only. List of mount points to attach the network to."
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string",
          "readOnly": true
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Network can only be connected to the assets (instances, nfsshares) allocated in the same pod."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string"
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "gatewayIp": {
          "description": "Output only. Gateway ip address.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "The Network state.",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ]
        }
      },
      "description": "A Network.",
      "type": "object",
      "id": "Network"
    },
    "RenameInstanceRequest": {
      "description": "Message requesting rename of a server.",
      "id": "RenameInstanceRequest",
      "type": "object",
      "properties": {
        "newInstanceId": {
          "type": "string",
          "description": "Required. The new `id` of the instance."
        }
      }
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "id": "VolumeConfig",
      "type": "object",
      "properties": {
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the volume config.",
          "type": "string"
        },
        "performanceTier": {
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "description": "Performance tier of the Volume. Default is SHARED.",
          "type": "string",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ]
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "protocol": {
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "description": "Volume protocol.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of this volume, in GB."
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        }
      }
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "vlanAttachments": {
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          }
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "description": "Service CIDR, if any.",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string"
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "name": {
          "description": "Output only. The name of the network config.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "description": "The type of this network, either Client or Private."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        }
      },
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network."
    },
    "RenameNfsShareRequest": {
      "properties": {
        "newNfsshareId": {
          "description": "Required. The new `id` of the nfsshare.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Message requesting rename of a server.",
      "id": "RenameNfsShareRequest"
    },
    "ListNfsSharesResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "nfsShares": {
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares."
        }
      },
      "id": "ListNfsSharesResponse",
      "description": "Response message containing the list of NFS shares.",
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty"
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "name": {
          "description": "The name of the instance config.",
          "type": "string"
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress",
          "deprecated": true
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "id": {
          "deprecated": true,
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "type": "array"
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "networkConfig": {
          "description": "The type of network configuration on the instance.",
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "type": "string",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "sshKeyNames": {
          "description": "Optional. List of names of ssh keys used to provision the instance.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privateNetwork": {
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false.",
          "deprecated": true,
          "$ref": "NetworkAddress"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        }
      },
      "type": "object",
      "id": "InstanceConfig"
    },
    "AllowedClient": {
      "description": "Represents an 'access point' for the share.",
      "properties": {
        "nfsPath": {
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "readOnly": true,
          "type": "string"
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "shareIp": {
          "readOnly": true,
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "type": "string"
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "mountPermissions": {
          "type": "string",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ]
        }
      },
      "type": "object",
      "id": "AllowedClient"
    },
    "EnableInteractiveSerialConsoleRequest": {
      "description": "Message for enabling the interactive serial console on an instance.",
      "id": "EnableInteractiveSerialConsoleRequest",
      "type": "object",
      "properties": {}
    },
    "NetworkAddressReservation": {
      "id": "NetworkAddressReservation",
      "description": "A reservation of one or more addresses in a network.",
      "type": "object",
      "properties": {
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        },
        "startAddress": {
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        }
      }
    },
    "Lun": {
      "id": "Lun",
      "properties": {
        "sizeGb": {
          "description": "The size of this LUN, in gigabytes.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the LUN.",
          "type": "string"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "instances": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. Instances this Lun is attached to."
        },
        "storageType": {
          "description": "The storage type for this LUN.",
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ]
        },
        "wwid": {
          "description": "The WWID for this LUN.",
          "type": "string"
        },
        "expireTime": {
          "description": "Output only. Time after which LUN will be fully deleted. It is filled only for LUNs in COOL_OFF state.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING",
            "COOL_OFF"
          ],
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted.",
            "The LUN is in cool off state. It will be deleted after `expire_time`."
          ],
          "description": "The state of this storage volume."
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string"
        }
      },
      "description": "A storage volume logical unit number (LUN).",
      "type": "object"
    },
    "ResizeVolumeRequest": {
      "type": "object",
      "properties": {
        "sizeGib": {
          "type": "string",
          "description": "New Volume size, in GiB.",
          "format": "int64"
        }
      },
      "description": "Request for emergency resize Volume.",
      "id": "ResizeVolumeRequest"
    },
    "DisableInteractiveSerialConsoleResponse": {
      "properties": {},
      "description": "Message for response of DisableInteractiveSerialConsole.",
      "id": "DisableInteractiveSerialConsoleResponse",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "type": "object",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "properties": {
        "interfaceIndex": {
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "format": "int32",
          "type": "integer",
          "deprecated": true
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        },
        "logicalNetworkInterfaces": {
          "type": "array",
          "description": "List of logical network interfaces within a logical interface.",
          "items": {
            "$ref": "LogicalNetworkInterface"
          }
        }
      }
    },
    "ProvisioningConfig": {
      "type": "object",
      "description": "A provisioning configuration.",
      "id": "ProvisioningConfig",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format."
        },
        "customId": {
          "type": "string",
          "description": "Optional. The user-defined identifier of the provisioning config."
        },
        "pod": {
          "description": "Optional. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes, nfsshares) allocated in the same pod only.",
          "type": "string"
        },
        "email": {
          "deprecated": true,
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "statusMessage": {
          "description": "Optional status messages associated with the FAILED state.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "cloudConsoleUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. URI to Cloud Console UI view of this provisioning config."
        },
        "volumes": {
          "items": {
            "$ref": "VolumeConfig"
          },
          "type": "array",
          "description": "Volumes to be created."
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "networks": {
          "type": "array",
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "ticketId": {
          "type": "string",
          "description": "A generated ticket id to track provisioning request."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "type": "string"
        },
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array",
          "description": "Instances to be created."
        }
      }
    },
    "Volume": {
      "id": "Volume",
      "type": "object",
      "properties": {
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Volume can only be connected to the instances allocated in the same pod."
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        },
        "bootVolume": {
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.",
          "readOnly": true,
          "type": "boolean"
        },
        "instances": {
          "description": "Output only. Instances this Volume is attached to. This field is set only in Get requests.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64"
        },
        "state": {
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated.",
            "The storage volume is in cool off state. It will be deleted after `expire_time`."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "COOL_OFF"
          ]
        },
        "protocol": {
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "readOnly": true,
          "description": "Output only. Storage protocol for the Volume."
        },
        "notes": {
          "type": "string",
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention."
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string",
          "format": "int64"
        },
        "maxSizeGib": {
          "format": "int64",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "type": "string"
        },
        "workloadProfile": {
          "description": "The workload profile for the volume.",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "type": "string",
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "GENERIC",
            "HANA"
          ]
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "performanceTier": {
          "type": "string",
          "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ]
        },
        "attached": {
          "type": "boolean",
          "description": "Output only. Is the Volume attached at at least one instance. This field is a lightweight counterpart of `instances` field. It is filled in List responses as well.",
          "readOnly": true
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "Originally requested size, in GiB."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Volume`, generated by the backend."
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ]
        },
        "expireTime": {
          "description": "Output only. Time after which volume will be fully deleted. It is filled only for volumes in COOLOFF state.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this volume.",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "emergencySizeGib": {
          "type": "string",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "format": "int64"
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "autoGrownSizeGib": {
          "type": "string",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64"
        },
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true,
          "type": "string"
        },
        "remainingSpaceGib": {
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string"
        }
      },
      "description": "A storage volume."
    },
    "LogicalNetworkInterface": {
      "properties": {
        "networkType": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string",
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "network": {
          "type": "string",
          "description": "Name of the network"
        },
        "defaultGateway": {
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.",
          "type": "boolean"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair.",
      "id": "LogicalNetworkInterface"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "properties": {
        "type": {
          "readOnly": true,
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "type": "string",
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ]
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The creation time of the snapshot.",
          "format": "google-datetime"
        },
        "storageVolume": {
          "description": "Output only. The name of the volume which this snapshot belongs to.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the snapshot, generated by the backend."
        },
        "description": {
          "description": "The description of the snapshot.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the snapshot."
        }
      },
      "type": "object",
      "description": "A snapshot of a volume. Only boot volumes can have snapshots."
    },
    "Status": {
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "EvictLunRequest": {
      "id": "EvictLunRequest",
      "properties": {},
      "description": "Request for skip lun cooloff and delete it.",
      "type": "object"
    },
    "ListLunsResponse": {
      "id": "ListLunsResponse",
      "properties": {
        "luns": {
          "description": "The list of luns.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message containing the list of storage volume luns.",
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      }
    },
    "SubmitProvisioningConfigRequest": {
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        }
      }
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "properties": {
        "applicableInstanceTypes": {
          "description": "Instance types this template is applicable to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "logicalInterfaces": {
          "description": "Logical interfaces.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          }
        }
      },
      "type": "object",
      "description": "Network template."
    },
    "ResetInstanceResponse": {
      "type": "object",
      "description": "Response message from resetting a server.",
      "id": "ResetInstanceResponse",
      "properties": {}
    },
    "StartInstanceRequest": {
      "id": "StartInstanceRequest",
      "properties": {},
      "description": "Message requesting to start a server.",
      "type": "object"
    },
    "InstanceQuota": {
      "id": "InstanceQuota",
      "description": "A resource budget.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance quota.",
          "readOnly": true
        },
        "availableMachineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type."
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "instanceType": {
          "description": "Instance type. Deprecated: use gcp_service.",
          "deprecated": true,
          "type": "string"
        }
      }
    },
    "IntakeVlanAttachment": {
      "type": "object",
      "description": "A GCP vlan attachment.",
      "properties": {
        "id": {
          "description": "Identifier of the VLAN attachment.",
          "type": "string"
        },
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        }
      },
      "id": "IntakeVlanAttachment"
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "description": "Response message containing the list of volume snapshots.",
      "properties": {
        "volumeSnapshots": {
          "description": "The list of snapshots.",
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListVolumeSnapshotsResponse"
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "description": "Response message for the list of provisioning quotas.",
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "VRF": {
      "type": "object",
      "id": "VRF",
      "description": "A network VRF.",
      "properties": {
        "state": {
          "type": "string",
          "description": "The possible state of VRF.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ]
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility."
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array"
        }
      }
    },
    "SnapshotReservationDetail": {
      "id": "SnapshotReservationDetail",
      "properties": {
        "reservedSpacePercent": {
          "type": "integer",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "format": "int32"
        },
        "reservedSpaceUsedPercent": {
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32"
        },
        "reservedSpaceRemainingGib": {
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "type": "string",
          "format": "int64"
        },
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Details about snapshot space reservation and usage on the storage volume."
    },
    "ListInstancesResponse": {
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "instances": {
          "items": {
            "$ref": "Instance"
          },
          "type": "array",
          "description": "The list of servers."
        }
      }
    },
    "NetworkAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        },
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        }
      },
      "description": "A network.",
      "id": "NetworkAddress"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "type": "object",
      "properties": {},
      "description": "Message for disabling the interactive serial console on an instance.",
      "id": "DisableInteractiveSerialConsoleRequest"
    },
    "StartInstanceResponse": {
      "description": "Response message from starting a server.",
      "type": "object",
      "id": "StartInstanceResponse",
      "properties": {}
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array",
          "description": "Networks with IPs."
        }
      },
      "id": "ListNetworkUsageResponse",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "properties": {
        "type": {
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "type": "string",
          "description": "Interface type."
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        },
        "required": {
          "type": "boolean",
          "description": "If true, interface must have network connected."
        }
      },
      "type": "object",
      "description": "Logical interface.",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
    },
    "EnableInteractiveSerialConsoleResponse": {
      "properties": {},
      "type": "object",
      "description": "Message for response of EnableInteractiveSerialConsole.",
      "id": "EnableInteractiveSerialConsoleResponse"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "DetachLunRequest": {
      "properties": {
        "lun": {
          "description": "Required. Name of the Lun to detach.",
          "type": "string"
        },
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        }
      },
      "type": "object",
      "id": "DetachLunRequest",
      "description": "Message for detach specific LUN from an Instance."
    },
    "OSImage": {
      "properties": {
        "supportedNetworkTemplates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Network templates that can be used with this OS Image."
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "applicableInstanceTypes": {
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. OS Image's unique name.",
          "type": "string"
        }
      },
      "id": "OSImage",
      "description": "Operation System image.",
      "type": "object"
    },
    "ResetInstanceRequest": {
      "properties": {},
      "description": "Message requesting to reset a server.",
      "id": "ResetInstanceRequest",
      "type": "object"
    },
    "ListVolumesResponse": {
      "description": "Response message containing the list of storage volumes.",
      "id": "ListVolumesResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "description": "The list of storage volumes.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "NfsShare": {
      "type": "object",
      "id": "NfsShare",
      "description": "An NFS share.",
      "properties": {
        "nfsShareId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "volume": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning."
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. NFSShare can only be connected to the assets (networks, instances) allocated in the same pod.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true
        },
        "allowedClients": {
          "type": "array",
          "items": {
            "$ref": "AllowedClient"
          },
          "description": "List of allowed access points."
        },
        "state": {
          "type": "string",
          "description": "Output only. The state of the NFS share.",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of the NFS share."
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "Immutable. The storage type of the underlying volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string"
        }
      }
    },
    "ListSSHKeysResponse": {
      "type": "object",
      "id": "ListSSHKeysResponse",
      "properties": {
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "description": "The SSH keys registered in the project.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "Message for response of ListSSHKeys."
    },
    "RenameVolumeRequest": {
      "description": "Message requesting rename of a server.",
      "id": "RenameVolumeRequest",
      "properties": {
        "newVolumeId": {
          "type": "string",
          "description": "Required. The new `id` of the volume."
        }
      },
      "type": "object"
    },
    "ListNetworksResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "networks": {
          "description": "The list of networks.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response message containing the list of networks.",
      "id": "ListNetworksResponse"
    },
    "SSHKey": {
      "id": "SSHKey",
      "type": "object",
      "properties": {
        "publicKey": {
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\".",
          "type": "string"
        }
      },
      "description": "An SSH key, used for authorizing with the interactive serial console feature."
    },
    "QosPolicy": {
      "type": "object",
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "id": "QosPolicy",
      "description": "QOS policy parameters."
    },
    "VlanAttachment": {
      "properties": {
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Immutable. The identifier of the attachment within vrf."
        },
        "interconnectAttachment": {
          "type": "string",
          "description": "Optional. The name of the vlan attachment within vrf. This is of the form projects/{project_number}/regions/{region}/interconnectAttachments/{interconnect_attachment}"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        }
      },
      "description": "VLAN attachment details.",
      "id": "VlanAttachment",
      "type": "object"
    },
    "LunRange": {
      "description": "A LUN(Logical Unit Number) range.",
      "type": "object",
      "properties": {
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of each LUN, in GB."
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "description": "Number of LUNs to create."
        }
      },
      "id": "LunRange"
    },
    "NfsExport": {
      "type": "object",
      "id": "NfsExport",
      "properties": {
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        },
        "permissions": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        }
      },
      "description": "A NFS export entry."
    },
    "SubmitProvisioningConfigResponse": {
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "id": "SubmitProvisioningConfigResponse",
      "description": "Response for SubmitProvisioningConfig."
    },
    "Instance": {
      "type": "object",
      "id": "Instance",
      "properties": {
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can only be connected to the assets (networks, volumes) allocated in the same pod."
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Update a time stamp.",
          "readOnly": true,
          "type": "string"
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "networks": {
          "description": "Output only. List of networks associated with this server.",
          "readOnly": true,
          "items": {
            "$ref": "Network"
          },
          "type": "array"
        },
        "loginInfo": {
          "description": "Output only. Text field about info for logging in.",
          "readOnly": true,
          "type": "string"
        },
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false."
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "readOnly": true
        },
        "machineType": {
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "networkTemplate": {
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "firmwareVersion": {
          "description": "Output only. The firmware version for the instance.",
          "type": "string",
          "readOnly": true
        },
        "luns": {
          "description": "Immutable. List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        },
        "state": {
          "description": "Output only. The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ],
          "readOnly": true
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "type": "array"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Create a time stamp.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "workloadProfile": {
          "description": "The workload profile for the instance.",
          "type": "string",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "WORKLOAD_PROFILE_GENERIC",
            "WORKLOAD_PROFILE_HANA"
          ]
        },
        "interactiveSerialConsoleEnabled": {
          "readOnly": true,
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        }
      },
      "description": "A server."
    },
    "NetworkMountPoint": {
      "description": "Mount point for a network.",
      "type": "object",
      "properties": {
        "defaultGateway": {
          "description": "Network should be a default gateway.",
          "type": "boolean"
        },
        "ipAddress": {
          "description": "Ip address of the server.",
          "type": "string"
        },
        "logicalInterface": {
          "type": "string",
          "description": "Logical interface to detach from."
        },
        "instance": {
          "type": "string",
          "description": "Instance to attach network to."
        }
      },
      "id": "NetworkMountPoint"
    },
    "EvictVolumeRequest": {
      "type": "object",
      "properties": {},
      "id": "EvictVolumeRequest",
      "description": "Request for skip volume cooloff and delete it."
    },
    "ProvisioningQuota": {
      "type": "object",
      "description": "A provisioning quota for a given project.",
      "properties": {
        "networkBandwidth": {
          "type": "string",
          "format": "int64",
          "description": "Network bandwidth, Gbps"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning quota."
        },
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "type": "string"
        },
        "serverCount": {
          "format": "int64",
          "type": "string",
          "description": "Server count."
        },
        "storageGib": {
          "description": "Storage size (GB).",
          "format": "int64",
          "type": "string"
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "availableCount": {
          "format": "int32",
          "description": "The available count of the provisioning quota.",
          "type": "integer"
        }
      },
      "id": "ProvisioningQuota"
    },
    "RestoreVolumeSnapshotRequest": {
      "properties": {},
      "description": "Message for restoring a volume snapshot.",
      "type": "object",
      "id": "RestoreVolumeSnapshotRequest"
    }
  },
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "revision": "20231009",
  "version_module": true,
  "servicePath": ""
}

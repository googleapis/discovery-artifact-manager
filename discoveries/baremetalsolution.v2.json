{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "basePath": "",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    }
  },
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "servicePath": "",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "SnapshotReservationDetail": {
      "id": "SnapshotReservationDetail",
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "type": "object",
      "properties": {
        "reservedSpaceUsedPercent": {
          "format": "int32",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer"
        },
        "reservedSpaceGib": {
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string"
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "format": "int64"
        },
        "reservedSpacePercent": {
          "format": "int32",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer"
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "description": "Logical interface.",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "properties": {
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        },
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "type": "string",
          "description": "Interface type.",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ]
        }
      },
      "type": "object"
    },
    "ResetInstanceRequest": {
      "id": "ResetInstanceRequest",
      "type": "object",
      "properties": {},
      "description": "Message requesting to reset a server."
    },
    "OSImage": {
      "description": "Operation System image.",
      "id": "OSImage",
      "properties": {
        "description": {
          "description": "OS Image description.",
          "type": "string"
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "array"
        },
        "supportedNetworkTemplates": {
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "type": "array",
          "description": "Network templates that can be used with this OS Image."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. OS Image's unique name."
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        }
      },
      "type": "object"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object"
    },
    "VolumeConfig": {
      "properties": {
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. The name of the volume config.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "protocol": {
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ]
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "performanceTier": {
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "description": "Performance tier of the Volume. Default is SHARED.",
          "type": "string",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ]
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "$ref": "LunRange"
          }
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB.",
          "format": "int32"
        },
        "nfsExports": {
          "type": "array",
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          }
        }
      },
      "type": "object",
      "description": "Configuration parameters for a new volume.",
      "id": "VolumeConfig"
    },
    "Instance": {
      "type": "object",
      "properties": {
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Create a time stamp.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ],
          "description": "Output only. The state of the server.",
          "readOnly": true,
          "type": "string"
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "type": "array"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Update a time stamp.",
          "type": "string",
          "readOnly": true
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "id": {
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "Network"
          },
          "description": "Output only. List of networks associated with this server.",
          "readOnly": true
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only."
        },
        "luns": {
          "type": "array",
          "description": "Immutable. List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          }
        },
        "loginInfo": {
          "description": "Output only. Text field about info for logging in.",
          "type": "string",
          "readOnly": true
        },
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false."
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        }
      },
      "description": "A server.",
      "id": "Instance"
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "description": "Network template.",
      "properties": {
        "logicalInterfaces": {
          "description": "Logical interfaces.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          }
        },
        "applicableInstanceTypes": {
          "description": "Instance types this template is applicable to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\"."
        }
      },
      "type": "object"
    },
    "ListVolumesResponse": {
      "description": "Response message containing the list of storage volumes.",
      "id": "ListVolumesResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "volumes": {
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "type": "object",
      "properties": {
        "vlanAttachments": {
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "type": "string",
          "description": "The type of this network, either Client or Private."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the network config."
        },
        "bandwidth": {
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ]
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any.",
          "type": "string"
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "vlanSameProject": {
          "type": "boolean",
          "description": "Whether the VLAN attachment pair is located in the same project."
        }
      },
      "description": "Configuration parameters for a new network."
    },
    "SubmitProvisioningConfigResponse": {
      "type": "object",
      "description": "Response for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      },
      "id": "SubmitProvisioningConfigResponse"
    },
    "InstanceQuota": {
      "properties": {
        "availableMachineCount": {
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        },
        "name": {
          "description": "Output only. The name of the instance quota.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        }
      },
      "id": "InstanceQuota",
      "description": "A resource budget.",
      "type": "object"
    },
    "NetworkAddressReservation": {
      "id": "NetworkAddressReservation",
      "properties": {
        "startAddress": {
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "endAddress": {
          "type": "string",
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A reservation of one or more addresses in a network."
    },
    "ListSSHKeysResponse": {
      "type": "object",
      "id": "ListSSHKeysResponse",
      "description": "Message for response of ListSSHKeys.",
      "properties": {
        "sshKeys": {
          "type": "array",
          "items": {
            "$ref": "SSHKey"
          },
          "description": "The SSH keys registered in the project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "volumes": {
          "items": {
            "$ref": "VolumeConfig"
          },
          "description": "Volumes to be created.",
          "type": "array"
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "instances": {
          "description": "Instances to be created.",
          "type": "array",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "type": "string",
          "readOnly": true
        },
        "customId": {
          "description": "Optional. The user-defined identifier of the provisioning config.",
          "type": "string"
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created."
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "description": "Output only. State of ProvisioningConfig.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A provisioning configuration."
    },
    "LogicalNetworkInterface": {
      "type": "object",
      "id": "LogicalNetworkInterface",
      "properties": {
        "networkType": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "Type of network.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "network": {
          "description": "Name of the network",
          "type": "string"
        }
      },
      "description": "Each logical network interface is effectively a network and IP pair."
    },
    "ListNetworksResponse": {
      "description": "Response message containing the list of networks.",
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks.",
          "type": "array"
        }
      },
      "id": "ListNetworksResponse"
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "type": "array",
          "description": "Networks with IPs.",
          "items": {
            "$ref": "NetworkUsage"
          }
        }
      },
      "type": "object"
    },
    "ListProvisioningQuotasResponse": {
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "Response message for the list of provisioning quotas.",
      "type": "object",
      "id": "ListProvisioningQuotasResponse"
    },
    "ListNfsSharesResponse": {
      "properties": {
        "nfsShares": {
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListNfsSharesResponse",
      "type": "object",
      "description": "Response message containing the list of NFS shares."
    },
    "IntakeVlanAttachment": {
      "properties": {
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        },
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        }
      },
      "description": "A GCP vlan attachment.",
      "type": "object",
      "id": "IntakeVlanAttachment"
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "type": "object",
      "id": "FetchInstanceProvisioningSettingsResponse",
      "properties": {
        "images": {
          "description": "The OS images available.",
          "items": {
            "$ref": "OSImage"
          },
          "type": "array"
        }
      },
      "description": "Response with all provisioning settings."
    },
    "OperationMetadata": {
      "description": "Represents the metadata from a long-running operation.",
      "properties": {
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "apiVersion": {
          "description": "Output only. API version used with the operation.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "description": "Output only. Name of the action executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "OperationMetadata"
    },
    "ProvisioningQuota": {
      "properties": {
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "assetType": {
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string",
          "description": "The asset type of this provisioning quota."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the provisioning quota.",
          "readOnly": true
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "networkBandwidth": {
          "description": "Network bandwidth, Gbps",
          "format": "int64",
          "type": "string"
        },
        "storageGib": {
          "format": "int64",
          "description": "Storage size (GB).",
          "type": "string"
        },
        "serverCount": {
          "format": "int64",
          "description": "Server count.",
          "type": "string"
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "A provisioning quota for a given project.",
      "id": "ProvisioningQuota",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "LunRange": {
      "id": "LunRange",
      "properties": {
        "quantity": {
          "format": "int32",
          "description": "Number of LUNs to create.",
          "type": "integer"
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of each LUN, in GB."
        }
      },
      "type": "object",
      "description": "A LUN(Logical Unit Number) range."
    },
    "NfsShare": {
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true
        },
        "volume": {
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning.",
          "readOnly": true,
          "type": "string"
        },
        "allowedClients": {
          "items": {
            "$ref": "AllowedClient"
          },
          "description": "List of allowed access points.",
          "type": "array"
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "state": {
          "description": "Output only. The state of the NFS share.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of the NFS share."
        },
        "nfsShareId": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "readOnly": true,
          "type": "string"
        },
        "storageType": {
          "description": "Immutable. The storage type of the underlying volume.",
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        }
      },
      "id": "NfsShare",
      "type": "object",
      "description": "An NFS share."
    },
    "Lun": {
      "id": "Lun",
      "description": "A storage volume logical unit number (LUN).",
      "properties": {
        "storageType": {
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN.",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ]
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "type": "string"
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "type": "string",
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ]
        },
        "sizeGb": {
          "type": "string",
          "description": "The size of this LUN, in gigabytes.",
          "format": "int64"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the LUN."
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        }
      },
      "type": "object"
    },
    "StopInstanceRequest": {
      "properties": {},
      "id": "StopInstanceRequest",
      "type": "object",
      "description": "Message requesting to stop a server."
    },
    "VRF": {
      "description": "A network VRF.",
      "type": "object",
      "id": "VRF",
      "properties": {
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array"
        },
        "state": {
          "description": "The possible state of VRF.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "type": "string"
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility."
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        }
      }
    },
    "ResizeVolumeRequest": {
      "description": "Request for emergency resize Volume.",
      "id": "ResizeVolumeRequest",
      "properties": {
        "sizeGib": {
          "format": "int64",
          "description": "New Volume size, in GiB.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NfsExport": {
      "id": "NfsExport",
      "description": "A NFS export entry.",
      "properties": {
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "permissions": {
          "type": "string",
          "description": "Export permissions.",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ]
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        }
      },
      "type": "object"
    },
    "Volume": {
      "properties": {
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "format": "int64",
          "type": "string"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ]
        },
        "requestedSizeGib": {
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Volume`, generated by the backend."
        },
        "protocol": {
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "description": "Output only. Storage protocol for the Volume.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true
        },
        "performanceTier": {
          "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
          "type": "string",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ]
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64",
          "type": "string"
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "The storage type for this volume."
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "description": "Originally requested size, in GiB.",
          "format": "int64"
        },
        "bootVolume": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN."
        },
        "notes": {
          "type": "string",
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "emergencySizeGib": {
          "format": "int64",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        },
        "maxSizeGib": {
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "autoGrownSizeGib": {
          "format": "int64",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "type": "string"
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ]
        },
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        }
      },
      "description": "A storage volume.",
      "type": "object",
      "id": "Volume"
    },
    "NetworkUsage": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "Network",
          "description": "Network."
        },
        "usedIps": {
          "type": "array",
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses."
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "QosPolicy",
      "description": "QOS policy parameters.",
      "type": "object"
    },
    "StartInstanceRequest": {
      "description": "Message requesting to start a server.",
      "type": "object",
      "id": "StartInstanceRequest",
      "properties": {}
    },
    "EnableInteractiveSerialConsoleRequest": {
      "type": "object",
      "description": "Message for enabling the interactive serial console on an instance.",
      "properties": {},
      "id": "EnableInteractiveSerialConsoleRequest"
    },
    "AllowedClient": {
      "id": "AllowedClient",
      "description": "Represents an 'access point' for the share.",
      "properties": {
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "mountPermissions": {
          "description": "Mount permissions.",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ]
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "shareIp": {
          "type": "string",
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "readOnly": true
        },
        "nfsPath": {
          "readOnly": true,
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        }
      },
      "type": "object"
    },
    "DetachLunRequest": {
      "type": "object",
      "properties": {
        "skipReboot": {
          "description": "If true, performs lun unmapping without instance reboot.",
          "type": "boolean"
        },
        "lun": {
          "description": "Required. Name of the Lun to detach.",
          "type": "string"
        }
      },
      "id": "DetachLunRequest",
      "description": "Message for detach specific LUN from an Instance."
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "properties": {
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        }
      },
      "type": "object",
      "description": "A network."
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "Instance"
          },
          "description": "The list of servers."
        }
      },
      "description": "Response message for the list of servers.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "NetworkMountPoint": {
      "id": "NetworkMountPoint",
      "properties": {
        "defaultGateway": {
          "type": "boolean",
          "description": "Network should be a default gateway."
        },
        "ipAddress": {
          "description": "Ip address of the server.",
          "type": "string"
        },
        "instance": {
          "type": "string",
          "description": "Instance to attach network to."
        },
        "logicalInterface": {
          "type": "string",
          "description": "Logical interface to detach from."
        }
      },
      "description": "Mount point for a network.",
      "type": "object"
    },
    "SSHKey": {
      "type": "object",
      "id": "SSHKey",
      "description": "An SSH key, used for authorizing with the interactive serial console feature.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\".",
          "readOnly": true
        },
        "publicKey": {
          "type": "string",
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format."
        }
      }
    },
    "InstanceConfig": {
      "type": "object",
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "name": {
          "description": "Output only. The name of the instance config.",
          "type": "string",
          "readOnly": true
        },
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "networkConfig": {
          "description": "The type of network configuration on the instance.",
          "type": "string",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ]
        },
        "logicalInterfaces": {
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false."
        }
      }
    },
    "ListLunsResponse": {
      "description": "Response message containing the list of storage volume luns.",
      "id": "ListLunsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "The list of luns."
        }
      },
      "type": "object"
    },
    "Network": {
      "id": "Network",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "gatewayIp": {
          "readOnly": true,
          "description": "Output only. Gateway ip address.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "description": "The Network state.",
          "type": "string"
        },
        "macAddress": {
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of this network.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "pod": {
          "description": "Output only. Pod name.",
          "type": "string",
          "readOnly": true
        },
        "mountPoints": {
          "type": "array",
          "description": "Input only. List of mount points to attach the network to.",
          "items": {
            "$ref": "NetworkMountPoint"
          }
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          }
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        }
      },
      "description": "A Network.",
      "type": "object"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "properties": {},
      "description": "Message for disabling the interactive serial console on an instance.",
      "id": "DisableInteractiveSerialConsoleRequest",
      "type": "object"
    },
    "SubmitProvisioningConfigRequest": {
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        },
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        }
      },
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigRequest"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "properties": {
        "interfaceIndex": {
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        },
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface"
    },
    "VlanAttachment": {
      "id": "VlanAttachment",
      "description": "VLAN attachment details.",
      "properties": {
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "peerVlanId": {
          "format": "int64",
          "description": "The peer vlan ID of the attachment.",
          "type": "string"
        },
        "id": {
          "description": "Immutable. The identifier of the attachment within vrf.",
          "type": "string"
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level."
        }
      },
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "type": "object"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "baremetalsolution:v2",
  "version": "v2",
  "version_module": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable."
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.locations.list",
              "path": "v2/{+name}/locations"
            },
            "get": {
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.locations.get",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "httpMethod": "GET"
            }
          },
          "resources": {
            "nfsShares": {
              "methods": {
                "create": {
                  "httpMethod": "POST",
                  "description": "Create an NFS share.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "path": "v2/{+parent}/nfsShares",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "description": "Get details of a single NFS share.",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "path": "v2/{+parent}/nfsShares",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List NFS shares.",
                  "id": "baremetalsolution.projects.locations.nfsShares.list"
                },
                "delete": {
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "httpMethod": "DELETE",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the NFS share to delete.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.delete"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "description": "Update details of a single NFS share.",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string",
                      "description": "Immutable. The name of the NFS share.",
                      "required": true
                    }
                  }
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/provisioningQuotas",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "description": "List the budget details to provision resources on a given project.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "volumes": {
              "resources": {
                "luns": {
                  "methods": {
                    "list": {
                      "description": "List storage volume luns for given storage volume.",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest.",
                          "location": "path"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results from the server.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "path": "v2/{+parent}/luns",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "path": "v2/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "resize": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "path": "v2/{+volume}:resize",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "volume": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Volume to resize.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "description": "Emergency Volume resize.",
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "parameterOrder": [
                    "volume"
                  ]
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for ListVolumesRequest."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "path": "v2/{+parent}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "description": "List storage volumes in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single storage volume.",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "description": "Get details of a single storage volume.",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "id": "baremetalsolution.projects.locations.volumes.get"
                }
              }
            },
            "instances": {
              "methods": {
                "disableInteractiveSerialConsole": {
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "description": "Disable the interactive serial console feature on an instance.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "path": "v2/{+name}:disableInteractiveSerialConsole"
                },
                "patch": {
                  "request": {
                    "$ref": "Instance"
                  },
                  "description": "Update details of a single server.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "detachLun": {
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Detach LUN from Instance.",
                  "parameterOrder": [
                    "instance"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+instance}:detachLun",
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the instance.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    }
                  },
                  "description": "List servers in a given project and location."
                },
                "start": {
                  "description": "Starts a server that was shutdown.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:start",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  }
                },
                "enableInteractiveSerialConsole": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "description": "Enable the interactive serial console feature on an instance.",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "description": "Create an Instance.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+parent}/instances",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location.",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "stop": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Stop a running server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "path": "v2/{+name}:stop"
                },
                "reset": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}:reset"
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details about a single server.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "submit": {
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Submit a provisiong configuration for a given project.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "path": "v2/{+parent}/provisioningConfigs:submit"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path",
                      "required": true
                    },
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create new ProvisioningConfig."
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "description": "Get ProvisioningConfig by name.",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the ProvisioningConfig.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}"
                },
                "patch": {
                  "description": "Update existing ProvisioningConfig.",
                  "parameters": {
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "name": {
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  }
                }
              }
            },
            "sshKeys": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "type": "integer"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\"."
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "id": "baremetalsolution.projects.locations.sshKeys.list",
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/sshKeys",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/sshKeys",
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent containing the SSH keys."
                    },
                    "sshKeyId": {
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "response": {
                    "$ref": "SSHKey"
                  }
                },
                "delete": {
                  "path": "v2/{+name}",
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$",
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "httpMethod": "DELETE"
                }
              }
            },
            "networks": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single network.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Network"
                  }
                },
                "listNetworkUsage": {
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value (project and location).",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage"
                },
                "patch": {
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Network"
                  },
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "description": "Update details of a single network.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
                    }
                  },
                  "httpMethod": "PATCH"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/networks",
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "description": "List network in a given project and location.",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "parameters": {
                    "location": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "path": "v2/{+name}",
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20220921",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "protocol": "rest",
  "name": "baremetalsolution",
  "ownerName": "Google",
  "batchPath": "batch",
  "title": "Bare Metal Solution API",
  "discoveryVersion": "v1"
}

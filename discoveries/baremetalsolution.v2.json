{
  "batchPath": "batch",
  "id": "baremetalsolution:v2",
  "basePath": "",
  "title": "Bare Metal Solution API",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                }
              },
              "id": "baremetalsolution.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "path": "v2/{+name}/locations",
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Location"
              },
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "id": "baremetalsolution.projects.locations.get",
              "description": "Gets information about a location.",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "nfsShares": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "List NFS shares.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "path": "v2/{+parent}/nfsShares",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/nfsShares",
                  "description": "Create an NFS share.",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.create"
                },
                "delete": {
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the NFS share to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "description": "Immutable. The name of the NFS share.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "description": "Update details of a single NFS share."
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Get details of a single NFS share.",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "instances": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "List servers in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/instances"
                },
                "stop": {
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "description": "Stop a running server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "path": "v2/{+name}:stop"
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Instance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "description": "Get details about a single server.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "reset": {
                  "path": "v2/{+name}:reset",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "start": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "httpMethod": "POST",
                  "description": "Starts a server that was shutdown.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}:start",
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/instances",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Create an Instance.",
                  "id": "baremetalsolution.projects.locations.instances.create"
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "description": "Update details of a single server.",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "httpMethod": "PATCH"
                },
                "disableInteractiveSerialConsole": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "description": "Disable the interactive serial console feature on an instance.",
                  "path": "v2/{+name}:disableInteractiveSerialConsole",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "detachLun": {
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "description": "Required. Name of the instance.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Detach LUN from Instance.",
                  "parameterOrder": [
                    "instance"
                  ],
                  "path": "v2/{+instance}:detachLun",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "enableInteractiveSerialConsole": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Enable the interactive serial console feature on an instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "path": "v2/{+name}:enableInteractiveSerialConsole"
                }
              }
            },
            "volumes": {
              "methods": {
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single storage volume.",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}"
                },
                "resize": {
                  "parameters": {
                    "volume": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Volume to resize.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Emergency Volume resize.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+volume}:resize",
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "volume"
                  ],
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Get details of a single storage volume.",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}"
                },
                "list": {
                  "description": "List storage volumes in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "path": "v2/{+parent}/volumes",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListVolumesRequest."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  }
                }
              },
              "resources": {
                "snapshots": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the snapshot to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "path": "v2/{+parent}/snapshots",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The volume to snapshot."
                        }
                      }
                    },
                    "restoreVolumeSnapshot": {
                      "parameters": {
                        "volumeSnapshot": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume.",
                          "required": true
                        }
                      },
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "list": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "type": "string",
                          "location": "path"
                        },
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "path": "v2/{+parent}/snapshots",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the snapshot.",
                          "type": "string"
                        }
                      },
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    }
                  }
                },
                "luns": {
                  "methods": {
                    "get": {
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the resource."
                        }
                      },
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "description": "List storage volume luns for given storage volume.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/luns",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns"
                    }
                  }
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "description": "List network in a given project and location.",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "path": "v2/{+parent}/networks",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks"
                },
                "listNetworkUsage": {
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "location"
                  ],
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameters": {
                    "location": {
                      "description": "Required. Parent value (project and location).",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "response": {
                    "$ref": "Network"
                  },
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "description": "Get details of a single network.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}"
                },
                "patch": {
                  "description": "Update details of a single network.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "request": {
                    "$ref": "Network"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}"
                }
              }
            },
            "sshKeys": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "sshKeyId": {
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent containing the SSH keys.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "SSHKey"
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/sshKeys",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}",
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "httpMethod": "DELETE",
                  "path": "v2/{+name}"
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/sshKeys",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.list",
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\"."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "description": "Create new ProvisioningConfig.",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "email": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs"
                },
                "patch": {
                  "description": "Update existing ProvisioningConfig.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    },
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "Required. The list of fields to update."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "description": "Get ProvisioningConfig by name.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}"
                },
                "submit": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Submit a provisiong configuration for a given project.",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  }
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "path": "v2/{+parent}/provisioningQuotas",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "description": "List the budget details to provision resources on a given project.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "parameterOrder": [
                    "location"
                  ],
                  "parameters": {
                    "location": {
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch"
                }
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "ownerName": "Google",
  "revision": "20221201",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "NetworkMountPoint": {
      "id": "NetworkMountPoint",
      "description": "Mount point for a network.",
      "properties": {
        "logicalInterface": {
          "description": "Logical interface to detach from.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip address of the server."
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Network should be a default gateway."
        },
        "instance": {
          "description": "Instance to attach network to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StartInstanceRequest": {
      "description": "Message requesting to start a server.",
      "properties": {},
      "type": "object",
      "id": "StartInstanceRequest"
    },
    "ListInstancesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "Instance"
          },
          "description": "The list of servers."
        }
      },
      "type": "object",
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse"
    },
    "AllowedClient": {
      "description": "Represents an 'access point' for the share.",
      "type": "object",
      "properties": {
        "mountPermissions": {
          "description": "Mount permissions.",
          "type": "string",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ]
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "nfsPath": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\""
        },
        "shareIp": {
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "readOnly": true,
          "type": "string"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        }
      },
      "id": "AllowedClient"
    },
    "ListNetworkUsageResponse": {
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array",
          "description": "Networks with IPs."
        }
      },
      "description": "Response with Networks with IPs",
      "type": "object",
      "id": "ListNetworkUsageResponse"
    },
    "LunRange": {
      "id": "LunRange",
      "description": "A LUN(Logical Unit Number) range.",
      "properties": {
        "quantity": {
          "description": "Number of LUNs to create.",
          "type": "integer",
          "format": "int32"
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of each LUN, in GB.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "id": "InstanceConfig",
      "type": "object",
      "properties": {
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "networkConfig": {
          "description": "The type of network configuration on the instance.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "accountNetworksEnabled": {
          "description": "If true networks can be from different projects of the same vendor account.",
          "type": "boolean"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the instance config."
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array"
        },
        "networkTemplate": {
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
          "type": "string"
        }
      }
    },
    "ListNetworksResponse": {
      "properties": {
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListNetworksResponse",
      "type": "object",
      "description": "Response message containing the list of networks."
    },
    "NetworkAddress": {
      "description": "A network.",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        },
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        }
      },
      "type": "object",
      "id": "NetworkAddress"
    },
    "Operation": {
      "type": "object",
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      }
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        },
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        }
      },
      "id": "SubmitProvisioningConfigRequest",
      "type": "object"
    },
    "RestoreVolumeSnapshotRequest": {
      "properties": {},
      "description": "Message for restoring a volume snapshot.",
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "id": "Status"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "type": "object",
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "properties": {
        "interfaceIndex": {
          "type": "integer",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "format": "int32"
        },
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        }
      }
    },
    "ListVolumesResponse": {
      "description": "Response message containing the list of storage volumes.",
      "id": "ListVolumesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          }
        }
      }
    },
    "Network": {
      "type": "object",
      "description": "A Network.",
      "id": "Network",
      "properties": {
        "gatewayIp": {
          "description": "Output only. Gateway ip address.",
          "type": "string",
          "readOnly": true
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "mountPoints": {
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "description": "Input only. List of mount points to attach the network to.",
          "type": "array"
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "description": "The Network state.",
          "type": "string",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ]
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "readOnly": true,
          "type": "string"
        },
        "pod": {
          "readOnly": true,
          "description": "Output only. Pod name.",
          "type": "string"
        },
        "macAddress": {
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "The type of this network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        }
      }
    },
    "LogicalNetworkInterface": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "networkType": {
          "type": "string",
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ]
        },
        "network": {
          "description": "Name of the network",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance."
        }
      },
      "id": "LogicalNetworkInterface",
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair."
    },
    "VRF": {
      "type": "object",
      "description": "A network VRF.",
      "id": "VRF",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "description": "The possible state of VRF."
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility."
        },
        "vlanAttachments": {
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          }
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        }
      }
    },
    "NetworkUsage": {
      "type": "object",
      "properties": {
        "usedIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network."
        },
        "network": {
          "description": "Network.",
          "$ref": "Network"
        }
      },
      "description": "Network with all used IP addresses.",
      "id": "NetworkUsage"
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "nfsShares": {
          "description": "The list of NFS shares.",
          "type": "array",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message containing the list of NFS shares."
    },
    "Instance": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
        },
        "volumes": {
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ],
          "description": "Output only. The state of the server."
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false."
        },
        "interactiveSerialConsoleEnabled": {
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "readOnly": true,
          "type": "boolean"
        },
        "loginInfo": {
          "type": "string",
          "description": "Output only. Text field about info for logging in.",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Update a time stamp.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. Create a time stamp.",
          "format": "google-datetime",
          "type": "string"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "Immutable. List of LUNs associated with this server."
        },
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "readOnly": true
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled."
        },
        "workloadProfile": {
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "WORKLOAD_PROFILE_GENERIC",
            "WORKLOAD_PROFILE_HANA"
          ],
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "description": "The workload profile for the instance.",
          "type": "string"
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "Output only. List of networks associated with this server.",
          "type": "array",
          "readOnly": true
        }
      },
      "description": "A server.",
      "type": "object",
      "id": "Instance"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "id": "DisableInteractiveSerialConsoleRequest",
      "type": "object",
      "properties": {},
      "description": "Message for disabling the interactive serial console on an instance."
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "properties": {
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the action executed by the operation."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used with the operation."
        }
      },
      "description": "Represents the metadata from a long-running operation.",
      "type": "object"
    },
    "NetworkAddressReservation": {
      "description": "A reservation of one or more addresses in a network.",
      "id": "NetworkAddressReservation",
      "properties": {
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        },
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        }
      },
      "type": "object"
    },
    "VolumeSnapshot": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Output only. An identifier for the snapshot, generated by the backend.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of the snapshot."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation time of the snapshot."
        },
        "type": {
          "readOnly": true,
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "type": "string",
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ]
        },
        "storageVolume": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the volume which this snapshot belongs to."
        },
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        }
      },
      "id": "VolumeSnapshot",
      "description": "A snapshot of a volume. Only boot volumes can have snapshots."
    },
    "ResetInstanceRequest": {
      "properties": {},
      "description": "Message requesting to reset a server.",
      "type": "object",
      "id": "ResetInstanceRequest"
    },
    "Location": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "InstanceQuota": {
      "id": "InstanceQuota",
      "type": "object",
      "description": "A resource budget.",
      "properties": {
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "availableMachineCount": {
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance quota."
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        }
      }
    },
    "NfsShare": {
      "id": "NfsShare",
      "properties": {
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true,
          "type": "string"
        },
        "requestedSizeGib": {
          "description": "The requested size, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "volume": {
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The name of the NFS share.",
          "type": "string"
        },
        "allowedClients": {
          "items": {
            "$ref": "AllowedClient"
          },
          "description": "List of allowed access points.",
          "type": "array"
        },
        "storageType": {
          "description": "Immutable. The storage type of the underlying volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "nfsShareId": {
          "type": "string",
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "type": "string",
          "description": "Output only. The state of the NFS share.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "An NFS share."
    },
    "ResizeVolumeRequest": {
      "properties": {
        "sizeGib": {
          "description": "New Volume size, in GiB.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "ResizeVolumeRequest",
      "description": "Request for emergency resize Volume."
    },
    "OSImage": {
      "description": "Operation System image.",
      "type": "object",
      "id": "OSImage",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. OS Image's unique name."
        },
        "code": {
          "type": "string",
          "description": "OS Image code."
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "applicableInstanceTypes": {
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "supportedNetworkTemplates": {
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "description": "Network templates that can be used with this OS Image.",
          "type": "array"
        }
      }
    },
    "StopInstanceRequest": {
      "type": "object",
      "description": "Message requesting to stop a server.",
      "id": "StopInstanceRequest",
      "properties": {}
    },
    "ListSSHKeysResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "type": "array",
          "description": "The SSH keys registered in the project."
        }
      },
      "id": "ListSSHKeysResponse",
      "description": "Message for response of ListSSHKeys."
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "The JumboFramesEnabled option for customer to set."
        },
        "serviceCidr": {
          "description": "Service CIDR, if any.",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "bandwidth": {
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string"
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the network config."
        },
        "gcpService": {
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        }
      },
      "description": "Configuration parameters for a new network.",
      "id": "NetworkConfig"
    },
    "SnapshotReservationDetail": {
      "id": "SnapshotReservationDetail",
      "type": "object",
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "properties": {
        "reservedSpaceUsedPercent": {
          "format": "int32",
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume."
        },
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "type": "string"
        },
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string",
          "format": "int64"
        },
        "reservedSpacePercent": {
          "format": "int32",
          "type": "integer",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true."
        }
      }
    },
    "Volume": {
      "description": "A storage volume.",
      "properties": {
        "protocol": {
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "description": "Output only. Storage protocol for the Volume."
        },
        "workloadProfile": {
          "description": "The workload profile for the volume.",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "GENERIC",
            "HANA"
          ],
          "type": "string"
        },
        "maxSizeGib": {
          "format": "int64",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "pod": {
          "description": "Immutable. Pod name.",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64",
          "type": "string"
        },
        "originallyRequestedSizeGib": {
          "description": "Originally requested size, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention."
        },
        "emergencySizeGib": {
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "format": "int64",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING"
          ],
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated."
          ],
          "type": "string"
        },
        "performanceTier": {
          "type": "string",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "description": "Immutable. Performance tier of the Volume. Default is SHARED."
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "description": "The behavior to use when snapshot reserved space is full."
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        },
        "remainingSpaceGib": {
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string"
        },
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "The storage type for this volume."
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "bootVolume": {
          "readOnly": true,
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.",
          "type": "boolean"
        }
      },
      "id": "Volume",
      "type": "object"
    },
    "ListProvisioningQuotasResponse": {
      "type": "object",
      "id": "ListProvisioningQuotasResponse",
      "properties": {
        "provisioningQuotas": {
          "description": "The provisioning quotas registered in this project.",
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "Response message for the list of provisioning quotas."
    },
    "ProvisioningQuota": {
      "properties": {
        "networkBandwidth": {
          "description": "Network bandwidth, Gbps",
          "format": "int64",
          "type": "string"
        },
        "storageGib": {
          "type": "string",
          "format": "int64",
          "description": "Storage size (GB)."
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota."
        },
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ]
        },
        "serverCount": {
          "type": "string",
          "description": "Server count.",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "A provisioning quota for a given project.",
      "id": "ProvisioningQuota"
    },
    "NfsExport": {
      "properties": {
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions.",
          "type": "string"
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A NFS export entry.",
      "id": "NfsExport"
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "id": "ListVolumeSnapshotsResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumeSnapshots": {
          "type": "array",
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "description": "The list of snapshots."
        }
      },
      "description": "Response message containing the list of volume snapshots."
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty"
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\"."
        },
        "applicableInstanceTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Instance types this template is applicable to."
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "type": "array",
          "description": "Logical interfaces."
        }
      },
      "description": "Network template.",
      "type": "object"
    },
    "SubmitProvisioningConfigResponse": {
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "description": "Response for SubmitProvisioningConfig.",
      "id": "SubmitProvisioningConfigResponse"
    },
    "Lun": {
      "properties": {
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "state": {
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "type": "string"
        },
        "sizeGb": {
          "type": "string",
          "description": "The size of this LUN, in gigabytes.",
          "format": "int64"
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the LUN.",
          "type": "string"
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "type": "string"
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "storageType": {
          "type": "string",
          "description": "The storage type for this LUN.",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        }
      },
      "type": "object",
      "id": "Lun",
      "description": "A storage volume logical unit number (LUN)."
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "type": "object",
      "description": "Response with all provisioning settings.",
      "id": "FetchInstanceProvisioningSettingsResponse",
      "properties": {
        "images": {
          "type": "array",
          "description": "The OS images available.",
          "items": {
            "$ref": "OSImage"
          }
        }
      }
    },
    "ProvisioningConfig": {
      "type": "object",
      "properties": {
        "vpcScEnabled": {
          "description": "If true, VPC SC is enabled for the cluster.",
          "type": "boolean"
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "updateTime": {
          "description": "Output only. Last update timestamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "name": {
          "type": "string",
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "readOnly": true
        },
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array",
          "description": "Instances to be created."
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "customId": {
          "type": "string",
          "description": "Optional. The user-defined identifier of the provisioning config."
        },
        "statusMessage": {
          "description": "Optional status messages associated with the FAILED state.",
          "type": "string"
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "networks": {
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array",
          "description": "Networks to be created."
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          },
          "description": "Volumes to be created."
        },
        "state": {
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "description": "Output only. State of ProvisioningConfig."
        }
      },
      "description": "A provisioning configuration.",
      "id": "ProvisioningConfig"
    },
    "SSHKey": {
      "id": "SSHKey",
      "properties": {
        "name": {
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\".",
          "readOnly": true,
          "type": "string"
        },
        "publicKey": {
          "type": "string",
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format."
        }
      },
      "type": "object",
      "description": "An SSH key, used for authorizing with the interactive serial console feature."
    },
    "VlanAttachment": {
      "properties": {
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Immutable. The identifier of the attachment within vrf."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VlanAttachment",
      "description": "VLAN attachment details."
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "properties": {
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        },
        "type": {
          "description": "Interface type.",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "type": "string"
        }
      },
      "description": "Logical interface.",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "type": "object"
    },
    "ListLunsResponse": {
      "id": "ListLunsResponse",
      "description": "Response message containing the list of storage volume luns.",
      "type": "object",
      "properties": {
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "description": "The list of luns.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      }
    },
    "VolumeConfig": {
      "properties": {
        "performanceTier": {
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "description": "Performance tier of the Volume. Default is SHARED.",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the volume config."
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of this volume, in GB."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "protocol": {
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ]
        },
        "type": {
          "description": "The type of this Volume.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ]
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "nfsExports": {
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS."
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          },
          "type": "array"
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VolumeConfig",
      "description": "Configuration parameters for a new volume."
    },
    "IntakeVlanAttachment": {
      "type": "object",
      "description": "A GCP vlan attachment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        }
      },
      "id": "IntakeVlanAttachment"
    },
    "DetachLunRequest": {
      "properties": {
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        },
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        }
      },
      "type": "object",
      "id": "DetachLunRequest",
      "description": "Message for detach specific LUN from an Instance."
    },
    "QosPolicy": {
      "description": "QOS policy parameters.",
      "type": "object",
      "id": "QosPolicy",
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "type": "number",
          "description": "The bandwidth permitted by the QOS policy, in gbps."
        }
      }
    },
    "EnableInteractiveSerialConsoleRequest": {
      "id": "EnableInteractiveSerialConsoleRequest",
      "description": "Message for enabling the interactive serial console on an instance.",
      "type": "object",
      "properties": {}
    }
  },
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "servicePath": "",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version": "v2",
  "name": "baremetalsolution",
  "protocol": "rest",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center."
}

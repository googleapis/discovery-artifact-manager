{
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "id": "baremetalsolution:v2",
  "servicePath": "",
  "revision": "20230426",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "path": "v2/{+name}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                }
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "id": "baremetalsolution.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location."
                }
              },
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "parameters": {
                    "location": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningSettings."
                    }
                  }
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "description": "List the budget details to provision resources on a given project.",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "path": "v2/{+parent}/provisioningQuotas",
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "description": "Get details about an operation.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "nfsShares": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the NFS share to delete."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "rename": {
                  "parameters": {
                    "name": {
                      "description": "Required. The `name` field is used to identify the nfsshare. Format: projects/{project}/locations/{location}/nfsshares/{nfsshare}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.rename",
                  "description": "RenameNfsShare sets a new name for an nfsshare. Use with caution, previous names become immediately invalidated.",
                  "path": "v2/{+name}:rename",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:rename",
                  "request": {
                    "$ref": "RenameNfsShareRequest"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Immutable. The name of the NFS share.",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Update details of a single NFS share.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.patch"
                },
                "get": {
                  "description": "Get details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListNfsSharesRequest."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "description": "List NFS shares.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/nfsShares"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent project and location.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "description": "Create an NFS share.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "networks": {
              "methods": {
                "listNetworkUsage": {
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value (project and location).",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "List network in a given project and location.",
                  "path": "v2/{+parent}/networks",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "id": "baremetalsolution.projects.locations.networks.list"
                },
                "rename": {
                  "httpMethod": "POST",
                  "description": "RenameNetwork sets a new name for a network. Use with caution, previous names become immediately invalidated.",
                  "id": "baremetalsolution.projects.locations.networks.rename",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The `name` field is used to identify the network. Format: projects/{project}/locations/{location}/networks/{network}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename",
                  "path": "v2/{+name}:rename",
                  "request": {
                    "$ref": "RenameNetworkRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single network.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Update details of a single network.",
                  "request": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}"
                }
              }
            },
            "instances": {
              "methods": {
                "detachLun": {
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Detach LUN from Instance.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+instance}:detachLun",
                  "parameters": {
                    "instance": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the instance.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "parameterOrder": [
                    "instance"
                  ],
                  "request": {
                    "$ref": "DetachLunRequest"
                  }
                },
                "stop": {
                  "httpMethod": "POST",
                  "path": "v2/{+name}:stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "description": "Stop a running server.",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  }
                },
                "enableInteractiveSerialConsole": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "description": "Enable the interactive serial console feature on an instance.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "rename": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:rename",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RenameInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.rename",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The `name` field is used to identify the instance. Format: projects/{project}/locations/{location}/instances/{instance}",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename",
                  "httpMethod": "POST",
                  "description": "RenameInstance sets a new name for an instance. Use with caution, previous names become immediately invalidated."
                },
                "disableInteractiveSerialConsole": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "path": "v2/{+name}:disableInteractiveSerialConsole",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "description": "Disable the interactive serial console feature on an instance.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "httpMethod": "GET",
                  "description": "Get details about a single server.",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  }
                },
                "reset": {
                  "httpMethod": "POST",
                  "path": "v2/{+name}:reset",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+parent}/instances",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "Create an Instance.",
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "List servers in a given project and location.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "path": "v2/{+parent}/instances"
                },
                "start": {
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:start",
                  "description": "Starts a server that was shutdown."
                },
                "patch": {
                  "request": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "httpMethod": "PATCH",
                  "description": "Update details of a single server.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                }
              }
            },
            "volumes": {
              "resources": {
                "luns": {
                  "methods": {
                    "evict": {
                      "path": "v2/{+name}:evict",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the lun.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Skips lun's cooloff and deletes it now. Lun must be in cooloff state.",
                      "request": {
                        "$ref": "EvictLunRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.evict",
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "List storage volume luns for given storage volume.",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+parent}/luns",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results from the server.",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+name}",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+parent}/snapshots",
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameters": {
                        "pageToken": {
                          "description": "A token identifying a page of results from the server.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. Parent value for ListVolumesRequest."
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      }
                    },
                    "restoreVolumeSnapshot": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "parameters": {
                        "volumeSnapshot": {
                          "required": true,
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "path": "v2/{+name}",
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "delete": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the snapshot to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "path": "v2/{+parent}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "description": "Required. The volume to snapshot."
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single storage volume.",
                  "response": {
                    "$ref": "Volume"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "type": "string"
                    },
                    "name": {
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update details of a single storage volume.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "Volume"
                  }
                },
                "list": {
                  "path": "v2/{+parent}/volumes",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "description": "List storage volumes in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    }
                  }
                },
                "evict": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "EvictVolumeRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict",
                  "id": "baremetalsolution.projects.locations.volumes.evict",
                  "path": "v2/{+name}:evict",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. The name of the Volume."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Skips volume's cooloff and deletes it now. Volume must be in cooloff state."
                },
                "resize": {
                  "parameters": {
                    "volume": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Volume to resize.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "volume"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "httpMethod": "POST",
                  "description": "Emergency Volume resize.",
                  "path": "v2/{+volume}:resize",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  }
                },
                "rename": {
                  "id": "baremetalsolution.projects.locations.volumes.rename",
                  "path": "v2/{+name}:rename",
                  "httpMethod": "POST",
                  "description": "RenameVolume sets a new name for a volume. Use with caution, previous names become immediately invalidated.",
                  "response": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RenameVolumeRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename",
                  "parameters": {
                    "name": {
                      "description": "Required. The `name` field is used to identify the volume. Format: projects/{project}/locations/{location}/volumes/{volume}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                }
              }
            },
            "sshKeys": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "parameters": {
                    "sshKeyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent containing the SSH keys."
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "path": "v2/{+parent}/sshKeys",
                  "response": {
                    "$ref": "SSHKey"
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.create"
                },
                "delete": {
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}"
                },
                "list": {
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\".",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of items to return."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    }
                  },
                  "path": "v2/{+parent}/sshKeys",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.sshKeys.list"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "description": "Get ProvisioningConfig by name.",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the ProvisioningConfig."
                    }
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "email": {
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Create new ProvisioningConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/provisioningConfigs",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create"
                },
                "submit": {
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Submit a provisiong configuration for a given project.",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Update existing ProvisioningConfig."
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "batchPath": "batch",
  "protocol": "rest",
  "version": "v2",
  "fullyEncodeReservedExpansion": true,
  "title": "Bare Metal Solution API",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "schemas": {
    "RenameVolumeRequest": {
      "type": "object",
      "description": "Message requesting rename of a server.",
      "properties": {
        "newVolumeId": {
          "description": "Required. The new `id` of the volume.",
          "type": "string"
        }
      },
      "id": "RenameVolumeRequest"
    },
    "RenameInstanceRequest": {
      "description": "Message requesting rename of a server.",
      "properties": {
        "newInstanceId": {
          "type": "string",
          "description": "Required. The new `id` of the instance."
        }
      },
      "type": "object",
      "id": "RenameInstanceRequest"
    },
    "ListInstancesResponse": {
      "properties": {
        "instances": {
          "description": "The list of servers.",
          "items": {
            "$ref": "Instance"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "id": "ListInstancesResponse",
      "type": "object",
      "description": "Response message for the list of servers."
    },
    "ListProvisioningQuotasResponse": {
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for the list of provisioning quotas.",
      "id": "ListProvisioningQuotasResponse"
    },
    "SSHKey": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format."
        },
        "name": {
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\".",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An SSH key, used for authorizing with the interactive serial console feature.",
      "id": "SSHKey"
    },
    "ProvisioningConfig": {
      "type": "object",
      "id": "ProvisioningConfig",
      "properties": {
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "instances": {
          "type": "array",
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "cloudConsoleUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI to Cloud Console UI view of this provisioning config."
        },
        "name": {
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "type": "string",
          "readOnly": true
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "customId": {
          "description": "Optional. The user-defined identifier of the provisioning config.",
          "type": "string"
        },
        "volumes": {
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          },
          "type": "array"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Last update timestamp."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "vpcScEnabled": {
          "description": "If true, VPC SC is enabled for the cluster.",
          "type": "boolean"
        },
        "state": {
          "description": "Output only. State of ProvisioningConfig.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ]
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "networks": {
          "type": "array",
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          }
        }
      },
      "description": "A provisioning configuration."
    },
    "NetworkMountPoint": {
      "description": "Mount point for a network.",
      "type": "object",
      "id": "NetworkMountPoint",
      "properties": {
        "logicalInterface": {
          "type": "string",
          "description": "Logical interface to detach from."
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip address of the server."
        },
        "instance": {
          "type": "string",
          "description": "Instance to attach network to."
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Network should be a default gateway."
        }
      }
    },
    "LogicalNetworkInterface": {
      "id": "LogicalNetworkInterface",
      "description": "Each logical network interface is effectively a network and IP pair.",
      "properties": {
        "network": {
          "description": "Name of the network",
          "type": "string"
        },
        "networkType": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "Type of network.",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance."
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "ListLunsResponse": {
      "id": "ListLunsResponse",
      "description": "Response message containing the list of storage volume luns.",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "luns": {
          "description": "The list of luns.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        }
      }
    },
    "OSImage": {
      "description": "Operation System image.",
      "type": "object",
      "id": "OSImage",
      "properties": {
        "description": {
          "type": "string",
          "description": "OS Image description."
        },
        "applicableInstanceTypes": {
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedNetworkTemplates": {
          "description": "Network templates that can be used with this OS Image.",
          "type": "array",
          "items": {
            "$ref": "ServerNetworkTemplate"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. OS Image's unique name."
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "type": "object",
      "description": "A network.",
      "properties": {
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        }
      }
    },
    "Network": {
      "description": "A Network.",
      "properties": {
        "state": {
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "description": "The Network state.",
          "type": "string"
        },
        "macAddress": {
          "type": "array",
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          }
        },
        "gatewayIp": {
          "type": "string",
          "description": "Output only. Gateway ip address.",
          "readOnly": true
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          }
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "readOnly": true
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "pod": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Pod name."
        },
        "type": {
          "type": "string",
          "description": "The type of this network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ]
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "mountPoints": {
          "description": "Input only. List of mount points to attach the network to.",
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "type": "array"
        }
      },
      "id": "Network",
      "type": "object"
    },
    "ProvisioningQuota": {
      "properties": {
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota.",
          "type": "string"
        },
        "networkBandwidth": {
          "format": "int64",
          "description": "Network bandwidth, Gbps",
          "type": "string"
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "type": "integer",
          "format": "int32"
        },
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ]
        },
        "storageGib": {
          "type": "string",
          "format": "int64",
          "description": "Storage size (GB)."
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "serverCount": {
          "format": "int64",
          "description": "Server count.",
          "type": "string"
        }
      },
      "id": "ProvisioningQuota",
      "type": "object",
      "description": "A provisioning quota for a given project."
    },
    "ListVolumesResponse": {
      "type": "object",
      "id": "ListVolumesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "description": "Response message containing the list of storage volumes."
    },
    "StartInstanceRequest": {
      "type": "object",
      "properties": {},
      "id": "StartInstanceRequest",
      "description": "Message requesting to start a server."
    },
    "Lun": {
      "id": "Lun",
      "properties": {
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "state": {
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted.",
            "The LUN is in cool off state. It will be deleted after `expire_time`."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING",
            "COOL_OFF"
          ],
          "type": "string",
          "description": "The state of this storage volume."
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "expireTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Time after which LUN will be fully deleted. It is filled only for LUNs in COOL_OFF state."
        },
        "multiprotocolType": {
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system."
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "instances": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Instances this Lun is attached to."
        },
        "sizeGb": {
          "format": "int64",
          "description": "The size of this LUN, in gigabytes.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the LUN.",
          "type": "string"
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "description": "The storage type for this LUN.",
          "type": "string"
        }
      },
      "description": "A storage volume logical unit number (LUN).",
      "type": "object"
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "description": "A resource that represents a Google Cloud location."
    },
    "ListNfsSharesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nfsShares": {
          "type": "array",
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "description": "Response message containing the list of NFS shares.",
      "id": "ListNfsSharesResponse",
      "type": "object"
    },
    "LunRange": {
      "type": "object",
      "description": "A LUN(Logical Unit Number) range.",
      "id": "LunRange",
      "properties": {
        "sizeGb": {
          "format": "int32",
          "type": "integer",
          "description": "The requested size of each LUN, in GB."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Number of LUNs to create."
        }
      }
    },
    "ListNetworkUsageResponse": {
      "type": "object",
      "properties": {
        "networks": {
          "description": "Networks with IPs.",
          "type": "array",
          "items": {
            "$ref": "NetworkUsage"
          }
        }
      },
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse"
    },
    "EvictLunRequest": {
      "description": "Request for skip lun cooloff and delete it.",
      "type": "object",
      "properties": {},
      "id": "EvictLunRequest"
    },
    "RenameNfsShareRequest": {
      "id": "RenameNfsShareRequest",
      "type": "object",
      "properties": {
        "newNfsshareId": {
          "type": "string",
          "description": "Required. The new `id` of the nfsshare."
        }
      },
      "description": "Message requesting rename of a server."
    },
    "ListSSHKeysResponse": {
      "id": "ListSSHKeysResponse",
      "description": "Message for response of ListSSHKeys.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sshKeys": {
          "items": {
            "$ref": "SSHKey"
          },
          "type": "array",
          "description": "The SSH keys registered in the project."
        }
      },
      "type": "object"
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "id": "ListVolumeSnapshotsResponse",
      "description": "Response message containing the list of volume snapshots.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "volumeSnapshots": {
          "type": "array",
          "description": "The list of snapshots.",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        }
      }
    },
    "VRF": {
      "properties": {
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF."
        },
        "state": {
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "description": "The possible state of VRF.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility.",
          "$ref": "QosPolicy"
        }
      },
      "description": "A network VRF.",
      "id": "VRF",
      "type": "object"
    },
    "SubmitProvisioningConfigResponse": {
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "id": "SubmitProvisioningConfigResponse",
      "description": "Response for SubmitProvisioningConfig.",
      "type": "object"
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "properties": {
        "name": {
          "description": "Output only. The name of the network config.",
          "readOnly": true,
          "type": "string"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "description": "The type of this network, either Client or Private.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "bandwidth": {
          "type": "string",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string",
          "description": "Service CIDR, if any."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        }
      },
      "description": "Configuration parameters for a new network.",
      "type": "object"
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "OSImage"
          },
          "description": "The OS images available."
        }
      },
      "description": "Response with all provisioning settings.",
      "type": "object",
      "id": "FetchInstanceProvisioningSettingsResponse"
    },
    "DetachLunRequest": {
      "description": "Message for detach specific LUN from an Instance.",
      "type": "object",
      "properties": {
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        },
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        }
      },
      "id": "DetachLunRequest"
    },
    "ResetInstanceRequest": {
      "properties": {},
      "id": "ResetInstanceRequest",
      "type": "object",
      "description": "Message requesting to reset a server."
    },
    "IntakeVlanAttachment": {
      "id": "IntakeVlanAttachment",
      "properties": {
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        },
        "id": {
          "description": "Identifier of the VLAN attachment.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A GCP vlan attachment."
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpaceUsedPercent": {
          "format": "int32",
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume."
        },
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        },
        "reservedSpaceGib": {
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string"
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "id": "SnapshotReservationDetail"
    },
    "DisableInteractiveSerialConsoleRequest": {
      "description": "Message for disabling the interactive serial console on an instance.",
      "type": "object",
      "properties": {},
      "id": "DisableInteractiveSerialConsoleRequest"
    },
    "EnableInteractiveSerialConsoleRequest": {
      "description": "Message for enabling the interactive serial console on an instance.",
      "id": "EnableInteractiveSerialConsoleRequest",
      "properties": {},
      "type": "object"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "description": "A snapshot of a volume. Only boot volumes can have snapshots.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the snapshot."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the snapshot, generated by the backend."
        },
        "storageVolume": {
          "type": "string",
          "description": "Output only. The name of the volume which this snapshot belongs to.",
          "readOnly": true
        },
        "description": {
          "description": "The description of the snapshot.",
          "type": "string"
        },
        "type": {
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The creation time of the snapshot.",
          "format": "google-datetime"
        }
      }
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "type": "object",
      "properties": {
        "logicalInterfaces": {
          "description": "Logical interfaces.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "readOnly": true
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to."
        }
      },
      "description": "Network template."
    },
    "Instance": {
      "id": "Instance",
      "type": "object",
      "description": "A server.",
      "properties": {
        "interactiveSerialConsoleEnabled": {
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean",
          "readOnly": true
        },
        "firmwareVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The firmware version for the instance."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Create a time stamp.",
          "type": "string"
        },
        "loginInfo": {
          "readOnly": true,
          "description": "Output only. Text field about info for logging in.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.",
          "items": {
            "$ref": "Volume"
          }
        },
        "id": {
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "type": "string",
          "readOnly": true
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of networks associated with this server."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Update a time stamp."
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "type": "string",
          "description": "Output only. The state of the server.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ]
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "type": "array"
        },
        "workloadProfile": {
          "description": "The workload profile for the instance.",
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "WORKLOAD_PROFILE_GENERIC",
            "WORKLOAD_PROFILE_HANA"
          ],
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "description": "Immutable. List of LUNs associated with this server.",
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "networkTemplate": {
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only."
        }
      }
    },
    "RestoreVolumeSnapshotRequest": {
      "description": "Message for restoring a volume snapshot.",
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object",
      "properties": {}
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "StopInstanceRequest": {
      "properties": {},
      "description": "Message requesting to stop a server.",
      "id": "StopInstanceRequest",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "properties": {
        "name": {
          "description": "Interface name. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "interfaceIndex": {
          "type": "integer",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "format": "int32"
        },
        "logicalNetworkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "description": "List of logical network interfaces within a logical interface."
        }
      },
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "type": "object",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface"
    },
    "Operation": {
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      }
    },
    "VlanAttachment": {
      "type": "object",
      "id": "VlanAttachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "Immutable. The identifier of the attachment within vrf."
        },
        "pairingKey": {
          "description": "Input only. Pairing key.",
          "type": "string"
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "format": "int64",
          "type": "string",
          "description": "The peer vlan ID of the attachment."
        },
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level."
        }
      },
      "description": "VLAN attachment details."
    },
    "ResizeVolumeRequest": {
      "properties": {
        "sizeGib": {
          "format": "int64",
          "description": "New Volume size, in GiB.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ResizeVolumeRequest",
      "description": "Request for emergency resize Volume."
    },
    "VolumeConfig": {
      "properties": {
        "name": {
          "description": "Output only. The name of the volume config.",
          "readOnly": true,
          "type": "string"
        },
        "performanceTier": {
          "description": "Performance tier of the Volume. Default is SHARED.",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB.",
          "type": "integer"
        },
        "machineIds": {
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "description": "The type of this Volume."
        },
        "protocol": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "description": "Volume protocol."
        },
        "nfsExports": {
          "type": "array",
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "storageAggregatePool": {
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.",
          "type": "string"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "lunRanges": {
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          }
        }
      },
      "description": "Configuration parameters for a new volume.",
      "type": "object",
      "id": "VolumeConfig"
    },
    "NetworkUsage": {
      "type": "object",
      "properties": {
        "usedIps": {
          "type": "array",
          "description": "All used IP addresses in this network.",
          "items": {
            "type": "string"
          }
        },
        "network": {
          "description": "Network.",
          "$ref": "Network"
        }
      },
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses."
    },
    "RenameNetworkRequest": {
      "description": "Message requesting rename of a server.",
      "id": "RenameNetworkRequest",
      "type": "object",
      "properties": {
        "newNetworkId": {
          "type": "string",
          "description": "Required. The new `id` of the network."
        }
      }
    },
    "QosPolicy": {
      "type": "object",
      "id": "QosPolicy",
      "properties": {
        "bandwidthGbps": {
          "type": "number",
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps."
        }
      },
      "description": "QOS policy parameters."
    },
    "NfsExport": {
      "type": "object",
      "description": "A NFS export entry.",
      "properties": {
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "permissions": {
          "type": "string",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions."
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        }
      },
      "id": "NfsExport"
    },
    "AllowedClient": {
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient",
      "type": "object",
      "properties": {
        "shareIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr."
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "nfsPath": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\""
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "mountPermissions": {
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "description": "Mount permissions.",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        }
      }
    },
    "InstanceQuota": {
      "type": "object",
      "description": "A resource budget.",
      "id": "InstanceQuota",
      "properties": {
        "availableMachineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance quota."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        }
      }
    },
    "NfsShare": {
      "description": "An NFS share.",
      "type": "object",
      "id": "NfsShare",
      "properties": {
        "volume": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of the NFS share."
        },
        "requestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The requested size, in GiB."
        },
        "nfsShareId": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "type": "string",
          "readOnly": true
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "description": "Immutable. The storage type of the underlying volume."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "description": "Output only. The state of the NFS share.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allowedClients": {
          "type": "array",
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          }
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name."
        },
        "type": {
          "type": "string",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "description": "Interface type."
        },
        "required": {
          "description": "If true, interface must have network connected.",
          "type": "boolean"
        }
      },
      "description": "Logical interface."
    },
    "EvictVolumeRequest": {
      "description": "Request for skip volume cooloff and delete it.",
      "properties": {},
      "type": "object",
      "id": "EvictVolumeRequest"
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "type": "object",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false."
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance config."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "networkConfig": {
          "description": "The type of network configuration on the instance.",
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "type": "string",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        }
      }
    },
    "Status": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "NetworkAddressReservation": {
      "id": "NetworkAddressReservation",
      "description": "A reservation of one or more addresses in a network.",
      "properties": {
        "startAddress": {
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        },
        "endAddress": {
          "type": "string",
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        }
      },
      "type": "object"
    },
    "SubmitProvisioningConfigRequest": {
      "id": "SubmitProvisioningConfigRequest",
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        },
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request for SubmitProvisioningConfig."
    },
    "ListNetworksResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks."
        }
      },
      "description": "Response message containing the list of networks.",
      "id": "ListNetworksResponse",
      "type": "object"
    },
    "Volume": {
      "description": "A storage volume.",
      "id": "Volume",
      "type": "object",
      "properties": {
        "bootVolume": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN."
        },
        "storageType": {
          "description": "The storage type for this volume.",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "performanceTier": {
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
          "type": "string",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ]
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "protocol": {
          "type": "string",
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "readOnly": true,
          "description": "Output only. Storage protocol for the Volume."
        },
        "attached": {
          "type": "boolean",
          "description": "Output only. Is the Volume attached at at least one instance. This field is a lightweight counterpart of `instances` field. It is filled in List responses as well.",
          "readOnly": true
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "description": "The behavior to use when snapshot reserved space is full.",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ]
        },
        "maxSizeGib": {
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "expireTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time after which volume will be fully deleted. It is filled only for volumes in COOLOFF state."
        },
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string",
          "readOnly": true
        },
        "emergencySizeGib": {
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "type": "string",
          "format": "int64"
        },
        "remainingSpaceGib": {
          "type": "string",
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots."
        },
        "notes": {
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention.",
          "type": "string"
        },
        "requestedSizeGib": {
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string"
        },
        "autoGrownSizeGib": {
          "type": "string",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64"
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "pod": {
          "description": "Immutable. Pod name.",
          "type": "string"
        },
        "instances": {
          "readOnly": true,
          "description": "Output only. Instances this Volume is attached to. This field is set only in Get requests.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentSizeGib": {
          "format": "int64",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string"
        },
        "storageAggregatePool": {
          "type": "string",
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes."
        },
        "workloadProfile": {
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "description": "The workload profile for the volume.",
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "GENERIC",
            "HANA"
          ],
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "originallyRequestedSizeGib": {
          "format": "int64",
          "description": "Originally requested size, in GiB.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated.",
            "The storage volume is in cool off state. It will be deleted after `expire_time`."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "COOL_OFF"
          ],
          "description": "The state of this storage volume."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    }
  },
  "version_module": true,
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "ownerName": "Google",
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "name": "baremetalsolution",
  "basePath": ""
}

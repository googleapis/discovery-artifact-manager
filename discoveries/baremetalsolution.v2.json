{
  "batchPath": "batch",
  "servicePath": "",
  "ownerName": "Google",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "basePath": "",
  "schemas": {
    "Operation": {
      "id": "Operation",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "NetworkUsage": {
      "properties": {
        "usedIps": {
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network.",
          "type": "array"
        },
        "network": {
          "description": "Network.",
          "$ref": "Network"
        }
      },
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses.",
      "type": "object"
    },
    "DetachLunRequest": {
      "type": "object",
      "properties": {
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        },
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        }
      },
      "id": "DetachLunRequest",
      "description": "Message for detach specific LUN from an Instance."
    },
    "AllowedClient": {
      "type": "object",
      "id": "AllowedClient",
      "properties": {
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "shareIp": {
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "readOnly": true,
          "type": "string"
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "mountPermissions": {
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "type": "string"
        },
        "nfsPath": {
          "type": "string",
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "readOnly": true
        }
      },
      "description": "Represents an 'access point' for the share."
    },
    "ListProvisioningQuotasResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "provisioningQuotas": {
          "type": "array",
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project."
        }
      },
      "description": "Response message for the list of provisioning quotas.",
      "id": "ListProvisioningQuotasResponse"
    },
    "StartInstanceRequest": {
      "type": "object",
      "id": "StartInstanceRequest",
      "properties": {},
      "description": "Message requesting to start a server."
    },
    "Instance": {
      "description": "A server.",
      "properties": {
        "createTime": {
          "description": "Output only. Create a time stamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "networks": {
          "readOnly": true,
          "description": "Output only. List of networks associated with this server.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        },
        "luns": {
          "type": "array",
          "description": "Immutable. List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          }
        },
        "updateTime": {
          "description": "Output only. Update a time stamp.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "volumes": {
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "interactiveSerialConsoleEnabled": {
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "readOnly": true,
          "type": "boolean"
        },
        "id": {
          "description": "Output only. An identifier for the `Instance`, generated by the backend.",
          "readOnly": true,
          "type": "string"
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "machineType": {
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only."
        },
        "state": {
          "description": "Output only. The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ]
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "type": "array"
        },
        "loginInfo": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Text field about info for logging in."
        }
      },
      "id": "Instance",
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "type": "object",
      "properties": {
        "reservedSpaceGib": {
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64",
          "type": "string"
        },
        "reservedSpacePercent": {
          "format": "int32",
          "type": "integer",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true."
        },
        "reservedSpaceRemainingGib": {
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "type": "string"
        },
        "reservedSpaceUsedPercent": {
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "SnapshotReservationDetail",
      "description": "Details about snapshot space reservation and usage on the storage volume."
    },
    "NfsExport": {
      "id": "NfsExport",
      "properties": {
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "permissions": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions.",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ]
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        }
      },
      "description": "A NFS export entry.",
      "type": "object"
    },
    "NetworkConfig": {
      "properties": {
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string",
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ]
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "The JumboFramesEnabled option for customer to set."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private.",
          "type": "string"
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the network config."
        },
        "serviceCidr": {
          "description": "Service CIDR, if any.",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "type": "string",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ]
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        }
      },
      "description": "Configuration parameters for a new network.",
      "type": "object",
      "id": "NetworkConfig"
    },
    "OSImage": {
      "type": "object",
      "description": "Operation System image.",
      "id": "OSImage",
      "properties": {
        "supportedNetworkTemplates": {
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "type": "array",
          "description": "Network templates that can be used with this OS Image."
        },
        "name": {
          "description": "Output only. OS Image's unique name.",
          "type": "string",
          "readOnly": true
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "description": {
          "type": "string",
          "description": "OS Image description."
        }
      }
    },
    "ResetInstanceRequest": {
      "type": "object",
      "description": "Message requesting to reset a server.",
      "properties": {},
      "id": "ResetInstanceRequest"
    },
    "NetworkAddressReservation": {
      "description": "A reservation of one or more addresses in a network.",
      "id": "NetworkAddressReservation",
      "properties": {
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "startAddress": {
          "type": "string",
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2."
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LogicalNetworkInterface": {
      "description": "Each logical network interface is effectively a network and IP pair.",
      "type": "object",
      "id": "LogicalNetworkInterface",
      "properties": {
        "defaultGateway": {
          "type": "boolean",
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance."
        },
        "networkType": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "Type of network.",
          "type": "string"
        },
        "network": {
          "description": "Name of the network",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address in the network",
          "type": "string"
        }
      }
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "type": "object",
      "description": "QOS policy parameters.",
      "id": "QosPolicy"
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "description": "Response message for the list of servers.",
      "properties": {
        "instances": {
          "items": {
            "$ref": "Instance"
          },
          "description": "The list of servers.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "type": "object"
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "type": "object",
      "id": "InstanceConfig",
      "properties": {
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false."
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "networkConfig": {
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "type": "string",
          "description": "The type of network configuration on the instance."
        },
        "logicalInterfaces": {
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the instance config.",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "privateNetwork": {
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        }
      }
    },
    "ListNetworksResponse": {
      "type": "object",
      "description": "Response message containing the list of networks.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks.",
          "type": "array"
        }
      },
      "id": "ListNetworksResponse"
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "volumes": {
          "items": {
            "$ref": "VolumeConfig"
          },
          "type": "array",
          "description": "Volumes to be created."
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Last update timestamp."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "state": {
          "description": "Output only. State of ProvisioningConfig.",
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ]
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "instances": {
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the provisioning config."
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "networks": {
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array"
        }
      },
      "description": "A provisioning configuration.",
      "type": "object"
    },
    "ServerNetworkTemplate": {
      "description": "Network template.",
      "id": "ServerNetworkTemplate",
      "properties": {
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this template is applicable to."
        },
        "name": {
          "type": "string",
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "readOnly": true
        },
        "logicalInterfaces": {
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "type": "array",
          "description": "Logical interfaces."
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "type": "object",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "type": "object",
      "id": "VolumeConfig",
      "properties": {
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "$ref": "LunRange"
          }
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the volume config.",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB.",
          "format": "int32"
        },
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "protocol": {
          "description": "Volume protocol.",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ]
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "type": "string",
          "description": "The type of this Volume."
        }
      }
    },
    "ListVolumesResponse": {
      "type": "object",
      "id": "ListVolumesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "volumes": {
          "description": "The list of storage volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      },
      "description": "Response message containing the list of storage volumes."
    },
    "SubmitProvisioningConfigRequest": {
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig.",
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        }
      }
    },
    "ProvisioningQuota": {
      "description": "A provisioning quota for a given project.",
      "id": "ProvisioningQuota",
      "properties": {
        "location": {
          "type": "string",
          "description": "The specific location of the provisioining quota."
        },
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ]
        },
        "serverCount": {
          "format": "int64",
          "description": "Server count.",
          "type": "string"
        },
        "networkBandwidth": {
          "type": "string",
          "format": "int64",
          "description": "Network bandwidth, Gbps"
        },
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "storageGib": {
          "description": "Storage size (GB).",
          "format": "int64",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning quota."
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        }
      },
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "type": "object",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "properties": {
        "logicalNetworkInterfaces": {
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "type": "array",
          "description": "List of logical network interfaces within a logical interface."
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        },
        "interfaceIndex": {
          "format": "int32",
          "type": "integer",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."
        }
      }
    },
    "OperationMetadata": {
      "type": "object",
      "id": "OperationMetadata",
      "properties": {
        "apiVersion": {
          "description": "Output only. API version used with the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "verb": {
          "description": "Output only. Name of the action executed by the operation.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Represents the metadata from a long-running operation."
    },
    "ResizeVolumeRequest": {
      "description": "Request for emergency resize Volume.",
      "properties": {
        "sizeGib": {
          "format": "int64",
          "type": "string",
          "description": "New Volume size, in GiB."
        }
      },
      "type": "object",
      "id": "ResizeVolumeRequest"
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "VlanAttachment": {
      "description": "VLAN attachment details.",
      "type": "object",
      "id": "VlanAttachment",
      "properties": {
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "type": "string",
          "format": "int64"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        }
      }
    },
    "VRF": {
      "id": "VRF",
      "properties": {
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "vlanAttachments": {
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          }
        },
        "state": {
          "description": "The possible state of VRF.",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "type": "string"
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility.",
          "$ref": "QosPolicy"
        }
      },
      "type": "object",
      "description": "A network VRF."
    },
    "SubmitProvisioningConfigResponse": {
      "type": "object",
      "id": "SubmitProvisioningConfigResponse",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "description": "Response for SubmitProvisioningConfig."
    },
    "NetworkMountPoint": {
      "description": "Mount point for a network.",
      "type": "object",
      "id": "NetworkMountPoint",
      "properties": {
        "instance": {
          "description": "Instance to attach network to.",
          "type": "string"
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Network should be a default gateway."
        },
        "ipAddress": {
          "description": "Ip address of the server.",
          "type": "string"
        },
        "logicalInterface": {
          "description": "Logical interface to detach from.",
          "type": "string"
        }
      }
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      }
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "type": "object",
      "properties": {
        "images": {
          "items": {
            "$ref": "OSImage"
          },
          "type": "array",
          "description": "The OS images available."
        }
      },
      "description": "Response with all provisioning settings.",
      "id": "FetchInstanceProvisioningSettingsResponse"
    },
    "Lun": {
      "description": "A storage volume logical unit number (LUN).",
      "id": "Lun",
      "properties": {
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the LUN.",
          "readOnly": true
        },
        "state": {
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "type": "string"
        },
        "sizeGb": {
          "type": "string",
          "description": "The size of this LUN, in gigabytes.",
          "format": "int64"
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "multiprotocolType": {
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "type": "string",
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ]
        },
        "storageType": {
          "description": "The storage type for this LUN.",
          "type": "string",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        }
      },
      "type": "object"
    },
    "StopInstanceRequest": {
      "id": "StopInstanceRequest",
      "description": "Message requesting to stop a server.",
      "type": "object",
      "properties": {}
    },
    "InstanceQuota": {
      "type": "object",
      "id": "InstanceQuota",
      "description": "A resource budget.",
      "properties": {
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the instance quota.",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type. Deprecated: use gcp_service.",
          "type": "string"
        },
        "availableMachineCount": {
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer"
        }
      }
    },
    "ListNfsSharesResponse": {
      "description": "Response message containing the list of NFS shares.",
      "id": "ListNfsSharesResponse",
      "properties": {
        "nfsShares": {
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares.",
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array",
          "description": "Networks with IPs."
        }
      },
      "type": "object"
    },
    "IntakeVlanAttachment": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        }
      },
      "id": "IntakeVlanAttachment",
      "description": "A GCP vlan attachment.",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "If true, interface must have network connected."
        },
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Interface type.",
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ]
        }
      },
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "description": "Logical interface."
    },
    "NfsShare": {
      "id": "NfsShare",
      "description": "An NFS share.",
      "type": "object",
      "properties": {
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "Immutable. The storage type of the underlying volume.",
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "allowedClients": {
          "type": "array",
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          }
        },
        "nfsShareId": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "volume": {
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning.",
          "type": "string",
          "readOnly": true
        },
        "requestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The requested size, in GiB."
        },
        "name": {
          "description": "Immutable. The name of the NFS share.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Output only. The state of the NFS share.",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ]
        },
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Volume": {
      "id": "Volume",
      "properties": {
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "description": "The storage type for this volume."
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64",
          "type": "string"
        },
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64"
        },
        "pod": {
          "description": "Immutable. Pod name.",
          "type": "string"
        },
        "emergencySizeGib": {
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "format": "int64",
          "type": "string"
        },
        "protocol": {
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. Storage protocol for the Volume.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ]
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "Originally requested size, in GiB."
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "format": "int64",
          "type": "string"
        },
        "bootVolume": {
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.",
          "type": "boolean",
          "readOnly": true
        },
        "snapshotAutoDeleteBehavior": {
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "type": "string",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ]
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
        },
        "autoGrownSizeGib": {
          "format": "int64",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "type": "string",
          "description": "The state of this storage volume."
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "maxSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB."
        }
      },
      "type": "object",
      "description": "A storage volume."
    },
    "NetworkAddress": {
      "description": "A network.",
      "properties": {
        "networkId": {
          "type": "string",
          "description": "Id of the network to use, within the same ProvisioningConfig request."
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NetworkAddress"
    },
    "Network": {
      "type": "object",
      "id": "Network",
      "description": "A Network.",
      "properties": {
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "mountPoints": {
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "type": "array",
          "description": "Input only. List of mount points to attach the network to."
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "pod": {
          "description": "Output only. Pod name.",
          "readOnly": true,
          "type": "string"
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "macAddress": {
          "type": "array",
          "description": "List of physical interfaces.",
          "items": {
            "type": "string"
          }
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network.",
          "type": "string"
        },
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
        },
        "state": {
          "description": "The Network state.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned."
          ]
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "Whether network uses standard frames or jumbo ones."
        }
      }
    },
    "ListLunsResponse": {
      "type": "object",
      "properties": {
        "luns": {
          "type": "array",
          "description": "The list of luns.",
          "items": {
            "$ref": "Lun"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message containing the list of storage volume luns.",
      "id": "ListLunsResponse"
    },
    "LunRange": {
      "properties": {
        "quantity": {
          "description": "Number of LUNs to create.",
          "type": "integer",
          "format": "int32"
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of each LUN, in GB.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "A LUN(Logical Unit Number) range.",
      "id": "LunRange"
    }
  },
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "version": "v2",
  "discoveryVersion": "v1",
  "name": "baremetalsolution",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20220822",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "id": "baremetalsolution:v2",
  "title": "Bare Metal Solution API",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/bare-metal",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                }
              },
              "path": "v2/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.locations.list"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "baremetalsolution.projects.locations.get",
              "path": "v2/{+name}"
            }
          },
          "resources": {
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest."
                    }
                  },
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "description": "List the budget details to provision resources on a given project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "path": "v2/{+parent}/provisioningQuotas"
                }
              }
            },
            "instances": {
              "methods": {
                "detachLun": {
                  "description": "Detach LUN from Instance.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "parameterOrder": [
                    "instance"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "path": "v2/{+instance}:detachLun",
                  "httpMethod": "POST",
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the instance."
                    }
                  }
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "httpMethod": "GET",
                  "description": "List servers in a given project and location.",
                  "path": "v2/{+parent}/instances",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for ListInstancesRequest."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "request": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v2/{+parent}/instances",
                  "id": "baremetalsolution.projects.locations.instances.create",
                  "httpMethod": "POST",
                  "description": "Create an Instance.",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "start": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:start",
                  "description": "Starts a server that was shutdown.",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "reset": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}:reset",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.reset"
                },
                "stop": {
                  "description": "Stop a running server.",
                  "path": "v2/{+name}:stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details about a single server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Instance"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "description": "Update details of a single server.",
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "path": "v2/{+name}"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Get ProvisioningConfig by name.",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "description": "Create new ProvisioningConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "path": "v2/{+parent}/provisioningConfigs",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "email": {
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create"
                },
                "submit": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "description": "Submit a provisiong configuration for a given project.",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "description": "Update existing ProvisioningConfig.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The name of the provisioning config.",
                      "required": true
                    },
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch"
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "parameterOrder": [
                    "location"
                  ],
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "parameters": {
                    "location": {
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758)."
                }
              }
            },
            "networks": {
              "methods": {
                "patch": {
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "description": "Update details of a single network.",
                  "request": {
                    "$ref": "Network"
                  },
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "description": "List network in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "path": "v2/{+parent}/networks"
                },
                "listNetworkUsage": {
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "parameters": {
                    "location": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value (project and location).",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "description": "Get details of a single network.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Network"
                  }
                }
              }
            },
            "nfsShares": {
              "methods": {
                "delete": {
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the NFS share to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "path": "v2/{+parent}/nfsShares",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListNfsSharesRequest."
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "description": "List NFS shares."
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "description": "Create an NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "NfsShare"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "description": "Get details of a single NFS share.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "path": "v2/{+name}",
                  "description": "Update details of a single NFS share.",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "description": "Immutable. The name of the NFS share.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                }
              }
            },
            "volumes": {
              "methods": {
                "resize": {
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "volume": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Volume to resize.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "parameterOrder": [
                    "volume"
                  ],
                  "httpMethod": "POST",
                  "path": "v2/{+volume}:resize",
                  "description": "Emergency Volume resize.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Volume"
                  },
                  "description": "Update details of a single storage volume.",
                  "httpMethod": "PATCH"
                },
                "list": {
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "description": "List storage volumes in a given project and location.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/volumes",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "description": "Get details of a single storage volume.",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "list": {
                      "description": "List storage volume luns for given storage volume.",
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "httpMethod": "GET",
                      "path": "v2/{+parent}/luns",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "path": "v2/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "description": "Required. Name of the resource."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription"
}

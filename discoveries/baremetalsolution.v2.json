{
  "batchPath": "batch",
  "title": "Bare Metal Solution API",
  "schemas": {
    "ListLunsResponse": {
      "id": "ListLunsResponse",
      "properties": {
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "The list of luns."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message containing the list of storage volume luns."
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "snapshotSchedulePolicies": {
          "description": "The snapshot schedule policies registered in this project.",
          "type": "array",
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          }
        }
      },
      "id": "ListSnapshotSchedulePoliciesResponse",
      "type": "object",
      "description": "Response message containing the list of snapshot schedule policies."
    },
    "Lun": {
      "id": "Lun",
      "description": "A storage volume logical unit number (LUN).",
      "properties": {
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN.",
          "type": "string"
        },
        "multiprotocolType": {
          "type": "string",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system."
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "type": "string",
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ]
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the LUN.",
          "type": "string",
          "readOnly": true
        },
        "sizeGb": {
          "description": "The size of this LUN, in gigabytes.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "id": "Empty",
      "properties": {}
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpaceGib": {
          "type": "string",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64"
        },
        "reservedSpaceRemainingGib": {
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "format": "int64",
          "type": "string"
        },
        "reservedSpaceUsedPercent": {
          "format": "int32",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer"
        }
      },
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "id": "SnapshotReservationDetail",
      "type": "object"
    },
    "ListVolumesResponse": {
      "description": "Response message containing the list of storage volumes.",
      "type": "object",
      "id": "ListVolumesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "The list of storage volumes."
        }
      }
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "id": "ResetInstanceRequest",
      "properties": {},
      "type": "object"
    },
    "Volume": {
      "id": "Volume",
      "description": "A storage volume.",
      "properties": {
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "type": "string",
          "format": "int64"
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string",
          "format": "int64"
        },
        "snapshotAutoDeleteBehavior": {
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "type": "string"
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "description": "The storage type for this volume."
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Volume`, generated by the backend."
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        },
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "requestedSizeGib": {
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ]
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "description": "Snapshot registered for a given storage volume.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The name of the storage volume snapshot.",
          "readOnly": true,
          "type": "string"
        },
        "storageVolume": {
          "type": "string",
          "description": "The storage volume this snapshot belongs to."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot, generated by the backend."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation time of the storage volume snapshot.",
          "readOnly": true
        },
        "sizeBytes": {
          "description": "The size of the storage volume snapshot, in bytes.",
          "type": "string",
          "format": "int64"
        },
        "description": {
          "description": "The description of the storage volume snapshot.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        }
      }
    },
    "VlanAttachment": {
      "type": "object",
      "properties": {
        "peerVlanId": {
          "format": "int64",
          "description": "The peer vlan ID of the attachment.",
          "type": "string"
        },
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        }
      },
      "description": "VLAN attachment details.",
      "id": "VlanAttachment"
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        }
      }
    },
    "Schedule": {
      "properties": {
        "retentionCount": {
          "description": "The maximum number of snapshots to retain in this schedule.",
          "type": "integer",
          "format": "int32"
        },
        "crontabSpec": {
          "description": "A crontab-like specification that the schedule uses to take snapshots.",
          "type": "string"
        },
        "prefix": {
          "type": "string",
          "description": "A list of snapshot names created in this schedule."
        }
      },
      "description": "A snapshot schedule.",
      "id": "Schedule",
      "type": "object"
    },
    "ListVolumeSnapshotsResponse": {
      "id": "ListVolumeSnapshotsResponse",
      "type": "object",
      "description": "Response message containing the list of storage volume snapshots.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volumeSnapshots": {
          "description": "The list of storage volumes.",
          "type": "array",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        }
      }
    },
    "Instance": {
      "id": "Instance",
      "type": "object",
      "properties": {
        "machineType": {
          "type": "string",
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "luns": {
          "description": "List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Instance`, generated by the backend."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "List of networks associated with this server.",
          "type": "array"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Update a time stamp.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Create a time stamp.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "description": "The state of the server.",
          "type": "string"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        }
      },
      "description": "A server."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "id": "Operation",
      "type": "object"
    },
    "QosPolicy": {
      "id": "QosPolicy",
      "description": "QOS policy parameters.",
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ListNetworksResponse": {
      "type": "object",
      "description": "Response message containing the list of networks.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListNetworksResponse"
    },
    "Network": {
      "properties": {
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "macAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of physical interfaces."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network.",
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string"
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "state": {
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "description": "The Network state.",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A Network.",
      "id": "Network"
    },
    "RestoreVolumeSnapshotRequest": {
      "description": "Message for restoring a volume snapshot.",
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object",
      "properties": {}
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        }
      },
      "type": "object"
    },
    "ListInstancesResponse": {
      "type": "object",
      "description": "Response message for the list of servers.",
      "id": "ListInstancesResponse",
      "properties": {
        "instances": {
          "items": {
            "$ref": "Instance"
          },
          "type": "array",
          "description": "The list of servers."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VRF": {
      "properties": {
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "description": "The possible state of VRF."
        }
      },
      "type": "object",
      "description": "A network VRF.",
      "id": "VRF"
    },
    "SnapshotSchedulePolicy": {
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot schedule policy, generated by the backend."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The name of the snapshot schedule policy.",
          "readOnly": true,
          "type": "string"
        },
        "schedules": {
          "items": {
            "$ref": "Schedule"
          },
          "description": "The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "The description of the snapshot schedule policy."
        }
      },
      "type": "object",
      "id": "SnapshotSchedulePolicy",
      "description": "A snapshot schedule policy."
    }
  },
  "id": "baremetalsolution:v2",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "revision": "20220119",
  "name": "baremetalsolution",
  "basePath": "",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "description": "V1 error format."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    }
  },
  "servicePath": "",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "id": "baremetalsolution.projects.locations.get",
              "description": "Gets information about a location.",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              }
            },
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "path": "v2/{+name}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "flatPath": "v2/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "patch": {
                  "description": "Update details of a single storage volume.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels'",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Volume"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "path": "v2/{+name}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "description": "Get details of a single storage volume.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Volume"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "path": "v2/{+parent}/volumes",
                  "description": "List storage volumes in a given project and location.",
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.list"
                }
              },
              "resources": {
                "snapshots": {
                  "methods": {
                    "restoreVolumeSnapshot": {
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "parameters": {
                        "volumeSnapshot": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "description": "Restore a storage volume snapshot to its containing volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "volumeSnapshot"
                      ]
                    },
                    "delete": {
                      "path": "v2/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "response": {
                        "$ref": "Empty"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "description": "Required. The name of the snapshot to delete.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes a storage volume snapshot for a given volume."
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+parent}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "parameters": {
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "A token identifying a page of results from the server.",
                          "type": "string"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "description": "List storage volume snapshots for given storage volume."
                    },
                    "create": {
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "description": "Create a storage volume snapshot in a containing volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. The volume to snapshot.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "v2/{+parent}/snapshots",
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "description": "Get details of a single storage volume snapshot.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+name}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                },
                "luns": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "path": "v2/{+name}"
                    },
                    "list": {
                      "description": "List storage volume luns for given storage volume.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "pageToken": {
                          "description": "A token identifying a page of results from the server.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest."
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "path": "v2/{+parent}/luns",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns"
                    }
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "reset": {
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}:reset"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "description": "Get details about a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}"
                },
                "patch": {
                  "description": "Update details of a single server.",
                  "request": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "description": "List servers in a given project and location.",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/instances",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "required": true,
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances"
                }
              }
            },
            "snapshotSchedulePolicies": {
              "methods": {
                "delete": {
                  "description": "Delete a named snapshot schedule policy.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "description": "Required. The name of the snapshot schedule policy to delete.",
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.delete",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "description": "Create a snapshot schedule policy in the specified project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the SnapshotSchedulePolicy.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "snapshotSchedulePolicyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Snapshot policy ID"
                    }
                  },
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.create"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.get",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Get details of a single snapshot schedule policy.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListSnapshotSchedulePoliciesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List snapshot schedule policies in a given project and location.",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent project containing the Snapshot Schedule Policies."
                    }
                  }
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update a snapshot schedule policy in the specified project.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.patch",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the snapshot schedule policy.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "location": "path"
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. The list of fields to update.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}"
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "path": "v2/{+parent}/networks",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true
                    }
                  },
                  "description": "List network in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "httpMethod": "GET"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "description": "Update details of a single network.",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`"
                    }
                  },
                  "request": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "response": {
                    "$ref": "Network"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Get details of a single network."
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "version_module": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "protocol": "rest",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "version": "v2",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center."
}

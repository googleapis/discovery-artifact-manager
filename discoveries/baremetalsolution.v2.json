{
  "basePath": "",
  "name": "baremetalsolution",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "version_module": true,
  "schemas": {
    "StopInstanceRequest": {
      "type": "object",
      "id": "StopInstanceRequest",
      "properties": {},
      "description": "Message requesting to stop a server."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse"
    },
    "NfsShare": {
      "type": "object",
      "description": "An NFS share.",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "state": {
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "readOnly": true,
          "description": "Output only. The state of the NFS share.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ]
        },
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "readOnly": true,
          "type": "string"
        },
        "requestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The requested size, in GiB."
        },
        "allowedClients": {
          "type": "array",
          "items": {
            "$ref": "AllowedClient"
          },
          "description": "List of allowed access points."
        },
        "nfsShareId": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "type": "string",
          "readOnly": true
        },
        "volume": {
          "type": "string",
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning.",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The name of the NFS share.",
          "type": "string"
        },
        "storageType": {
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "Immutable. The storage type of the underlying volume.",
          "type": "string"
        }
      },
      "id": "NfsShare"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object"
    },
    "Network": {
      "id": "Network",
      "description": "A Network.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The type of this network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ]
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "gatewayIp": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Gateway ip address."
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string",
          "readOnly": true
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "reservations": {
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "type": "array",
          "items": {
            "$ref": "NetworkAddressReservation"
          }
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned.",
            "The Network is being updated."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING",
            "UPDATING"
          ],
          "description": "The Network state."
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "macAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of physical interfaces."
        },
        "mountPoints": {
          "type": "array",
          "items": {
            "$ref": "NetworkMountPoint"
          },
          "description": "Input only. List of mount points to attach the network to."
        },
        "pod": {
          "readOnly": true,
          "description": "Output only. Pod name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface",
      "properties": {
        "logicalNetworkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "LogicalNetworkInterface"
          },
          "description": "List of logical network interfaces within a logical interface."
        },
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        },
        "interfaceIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.",
          "deprecated": true
        }
      },
      "type": "object",
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface."
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "id": "VolumeConfig",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the volume config."
        },
        "storageAggregatePool": {
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes.",
          "type": "string"
        },
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of this volume, in GB.",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol.",
          "type": "string"
        },
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "machineIds": {
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "type": "string"
          }
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "type": "string",
          "description": "The type of this Volume."
        },
        "performanceTier": {
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "description": "Performance tier of the Volume. Default is SHARED.",
          "type": "string"
        },
        "nfsExports": {
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        }
      }
    },
    "AllowedClient": {
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient",
      "properties": {
        "mountPermissions": {
          "description": "Mount permissions.",
          "type": "string",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ]
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "shareIp": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr."
        },
        "nfsPath": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\""
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        }
      },
      "type": "object"
    },
    "ListSSHKeysResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sshKeys": {
          "type": "array",
          "description": "The SSH keys registered in the project.",
          "items": {
            "$ref": "SSHKey"
          }
        }
      },
      "description": "Message for response of ListSSHKeys.",
      "type": "object",
      "id": "ListSSHKeysResponse"
    },
    "NfsExport": {
      "type": "object",
      "description": "A NFS export entry.",
      "properties": {
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "permissions": {
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions.",
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "type": "string"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        }
      },
      "id": "NfsExport"
    },
    "SSHKey": {
      "id": "SSHKey",
      "type": "object",
      "description": "An SSH key, used for authorizing with the interactive serial console feature.",
      "properties": {
        "name": {
          "description": "Output only. The name of this SSH key. Currently, the only valid value for the location is \"global\".",
          "type": "string",
          "readOnly": true
        },
        "publicKey": {
          "type": "string",
          "description": "The public SSH key. This must be in OpenSSH .authorized_keys format."
        }
      }
    },
    "DisableInteractiveSerialConsoleRequest": {
      "properties": {},
      "type": "object",
      "id": "DisableInteractiveSerialConsoleRequest",
      "description": "Message for disabling the interactive serial console on an instance."
    },
    "Lun": {
      "type": "object",
      "properties": {
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "state": {
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted.",
            "The LUN is in cool off state. It will be deleted after `expire_time`."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING",
            "COOL_OFF"
          ],
          "description": "The state of this storage volume.",
          "type": "string"
        },
        "instances": {
          "description": "Output only. Instances this Lun is attached to.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "readOnly": true
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Time after which LUN will be fully deleted. It is filled only for LUNs in COOL_OFF state.",
          "readOnly": true
        },
        "sizeGb": {
          "type": "string",
          "description": "The size of this LUN, in gigabytes.",
          "format": "int64"
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the LUN.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "An identifier for the LUN, generated by the backend."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "The storage type for this LUN."
        },
        "multiprotocolType": {
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "type": "string",
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ]
        }
      },
      "id": "Lun",
      "description": "A storage volume logical unit number (LUN)."
    },
    "NetworkMountPoint": {
      "properties": {
        "defaultGateway": {
          "type": "boolean",
          "description": "Network should be a default gateway."
        },
        "logicalInterface": {
          "description": "Logical interface to detach from.",
          "type": "string"
        },
        "instance": {
          "type": "string",
          "description": "Instance to attach network to."
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip address of the server."
        }
      },
      "id": "NetworkMountPoint",
      "type": "object",
      "description": "Mount point for a network."
    },
    "ListInstancesResponse": {
      "type": "object",
      "id": "ListInstancesResponse",
      "description": "Response message for the list of servers.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "Instance"
          },
          "description": "The list of servers."
        }
      }
    },
    "RenameNetworkRequest": {
      "id": "RenameNetworkRequest",
      "description": "Message requesting rename of a server.",
      "type": "object",
      "properties": {
        "newNetworkId": {
          "type": "string",
          "description": "Required. The new `id` of the network."
        }
      }
    },
    "StopInstanceResponse": {
      "properties": {},
      "type": "object",
      "id": "StopInstanceResponse",
      "description": "Response message from stopping a server."
    },
    "InstanceConfig": {
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the instance config."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true."
        },
        "privateNetwork": {
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false.",
          "deprecated": true,
          "$ref": "NetworkAddress"
        },
        "networkConfig": {
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "description": "The type of network configuration on the instance.",
          "type": "string",
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ]
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true."
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "sshKeyNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of names of ssh keys used to provision the instance."
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "deprecated": true,
          "$ref": "NetworkAddress"
        }
      },
      "id": "InstanceConfig",
      "type": "object"
    },
    "RenameInstanceRequest": {
      "description": "Message requesting rename of a server.",
      "properties": {
        "newInstanceId": {
          "description": "Required. The new `id` of the instance.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "RenameInstanceRequest"
    },
    "QosPolicy": {
      "id": "QosPolicy",
      "description": "QOS policy parameters.",
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "VRF": {
      "type": "object",
      "id": "VRF",
      "description": "A network VRF.",
      "properties": {
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF."
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility.",
          "$ref": "QosPolicy"
        },
        "state": {
          "type": "string",
          "description": "The possible state of VRF.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ]
        }
      }
    },
    "ListLunsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume luns.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "luns": {
          "description": "The list of luns.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListLunsResponse"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "type": "object",
      "description": "A snapshot of a volume. Only boot volumes can have snapshots.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Output only. An identifier for the snapshot, generated by the backend.",
          "readOnly": true
        },
        "type": {
          "description": "Output only. The type of the snapshot which indicates whether it was scheduled or manual/ad-hoc.",
          "enumDescriptions": [
            "Type is not specified.",
            "Snapshot was taken manually by user.",
            "Snapshot was taken automatically as a part of a snapshot schedule."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "SNAPSHOT_TYPE_UNSPECIFIED",
            "AD_HOC",
            "SCHEDULED"
          ]
        },
        "description": {
          "description": "The description of the snapshot.",
          "type": "string"
        },
        "storageVolume": {
          "description": "Output only. The name of the volume which this snapshot belongs to.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the snapshot."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation time of the snapshot."
        }
      }
    },
    "ResetInstanceResponse": {
      "id": "ResetInstanceResponse",
      "properties": {},
      "description": "Response message from resetting a server.",
      "type": "object"
    },
    "NetworkAddressReservation": {
      "properties": {
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "startAddress": {
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "description": "A note about this reservation, intended for human consumption.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A reservation of one or more addresses in a network.",
      "id": "NetworkAddressReservation"
    },
    "ProvisioningQuota": {
      "properties": {
        "networkBandwidth": {
          "type": "string",
          "format": "int64",
          "description": "Network bandwidth, Gbps"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota."
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "type": "integer",
          "format": "int32"
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "serverCount": {
          "type": "string",
          "format": "int64",
          "description": "Server count."
        },
        "assetType": {
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "description": "The asset type of this provisioning quota.",
          "type": "string"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "storageGib": {
          "format": "int64",
          "type": "string",
          "description": "Storage size (GB)."
        }
      },
      "type": "object",
      "id": "ProvisioningQuota",
      "description": "A provisioning quota for a given project."
    },
    "InstanceQuota": {
      "properties": {
        "instanceType": {
          "deprecated": true,
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance quota.",
          "readOnly": true
        },
        "availableMachineCount": {
          "type": "integer",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "format": "int32"
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        }
      },
      "type": "object",
      "description": "A resource budget.",
      "id": "InstanceQuota"
    },
    "DetachLunRequest": {
      "properties": {
        "skipReboot": {
          "type": "boolean",
          "description": "If true, performs lun unmapping without instance reboot."
        },
        "lun": {
          "type": "string",
          "description": "Required. Name of the Lun to detach."
        }
      },
      "id": "DetachLunRequest",
      "type": "object",
      "description": "Message for detach specific LUN from an Instance."
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer",
          "format": "int32"
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        },
        "reservedSpaceUsedPercent": {
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32"
        },
        "reservedSpaceGib": {
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string"
        }
      },
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "type": "object",
      "id": "SnapshotReservationDetail"
    },
    "Status": {
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "IntakeVlanAttachment": {
      "description": "A GCP vlan attachment.",
      "type": "object",
      "id": "IntakeVlanAttachment",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      }
    },
    "ResetInstanceRequest": {
      "id": "ResetInstanceRequest",
      "description": "Message requesting to reset a server.",
      "properties": {},
      "type": "object"
    },
    "StartInstanceResponse": {
      "id": "StartInstanceResponse",
      "description": "Response message from starting a server.",
      "properties": {},
      "type": "object"
    },
    "StartInstanceRequest": {
      "properties": {},
      "id": "StartInstanceRequest",
      "description": "Message requesting to start a server.",
      "type": "object"
    },
    "Volume": {
      "description": "A storage volume.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the `Volume`, generated by the backend."
        },
        "emergencySizeGib": {
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "format": "int64",
          "type": "string"
        },
        "notes": {
          "type": "string",
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention."
        },
        "storageType": {
          "description": "The storage type for this volume.",
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "workloadProfile": {
          "type": "string",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "description": "The workload profile for the volume.",
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "GENERIC",
            "HANA"
          ]
        },
        "bootVolume": {
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN.",
          "readOnly": true,
          "type": "boolean"
        },
        "snapshotEnabled": {
          "description": "Whether snapshots are enabled.",
          "type": "boolean"
        },
        "currentSizeGib": {
          "format": "int64",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string"
        },
        "performanceTier": {
          "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_ASSIGNED",
            "VOLUME_PERFORMANCE_TIER_HT"
          ],
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Assigned aggregates.",
            "High throughput aggregates."
          ],
          "type": "string"
        },
        "instances": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. Instances this Volume is attached to. This field is set only in Get requests.",
          "type": "array"
        },
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "requestedSizeGib": {
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string"
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "format": "int64",
          "type": "string"
        },
        "originallyRequestedSizeGib": {
          "type": "string",
          "description": "Originally requested size, in GiB.",
          "format": "int64"
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "description": "Output only. Storage protocol for the Volume."
        },
        "storageAggregatePool": {
          "type": "string",
          "description": "Input only. Name of the storage aggregate pool to allocate the volume in. Can be used only for VOLUME_PERFORMANCE_TIER_ASSIGNED volumes."
        },
        "state": {
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted.",
            "The storage volume is being updated.",
            "The storage volume is in cool off state. It will be deleted after `expire_time`."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "COOL_OFF"
          ],
          "description": "The state of this storage volume.",
          "type": "string"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string"
        },
        "maxSizeGib": {
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "format": "int64",
          "type": "string"
        },
        "attached": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Is the Volume attached at at least one instance. This field is a lightweight counterpart of `instances` field. It is filled in List responses as well."
        },
        "autoGrownSizeGib": {
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64",
          "type": "string"
        },
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "type": "string",
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ]
        },
        "expireTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Time after which volume will be fully deleted. It is filled only for volumes in COOLOFF state."
        }
      },
      "id": "Volume"
    },
    "RenameNfsShareRequest": {
      "description": "Message requesting rename of a server.",
      "type": "object",
      "properties": {
        "newNfsshareId": {
          "type": "string",
          "description": "Required. The new `id` of the nfsshare."
        }
      },
      "id": "RenameNfsShareRequest"
    },
    "SubmitProvisioningConfigResponse": {
      "id": "SubmitProvisioningConfigResponse",
      "description": "Response for SubmitProvisioningConfig.",
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      }
    },
    "ListVolumeSnapshotsResponse": {
      "properties": {
        "volumeSnapshots": {
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "description": "The list of snapshots.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "type": "object",
      "description": "Response message containing the list of volume snapshots.",
      "id": "ListVolumeSnapshotsResponse"
    },
    "NetworkUsage": {
      "properties": {
        "usedIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network."
        },
        "network": {
          "$ref": "Network",
          "description": "Network."
        }
      },
      "type": "object",
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses."
    },
    "RestoreVolumeSnapshotRequest": {
      "id": "RestoreVolumeSnapshotRequest",
      "properties": {},
      "description": "Message for restoring a volume snapshot.",
      "type": "object"
    },
    "ListNetworksResponse": {
      "type": "object",
      "id": "ListNetworksResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "networks": {
          "description": "The list of networks.",
          "items": {
            "$ref": "Network"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message containing the list of networks."
    },
    "VlanAttachment": {
      "type": "object",
      "description": "VLAN attachment details.",
      "id": "VlanAttachment",
      "properties": {
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        },
        "id": {
          "type": "string",
          "description": "Immutable. The identifier of the attachment within vrf."
        },
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "pairingKey": {
          "description": "Input only. Pairing key.",
          "type": "string"
        },
        "peerVlanId": {
          "format": "int64",
          "type": "string",
          "description": "The peer vlan ID of the attachment."
        }
      }
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "id": "Location",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "ListNetworkUsageResponse": {
      "id": "ListNetworkUsageResponse",
      "description": "Response with Networks with IPs",
      "properties": {
        "networks": {
          "description": "Networks with IPs.",
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EnableInteractiveSerialConsoleRequest": {
      "type": "object",
      "description": "Message for enabling the interactive serial console on an instance.",
      "properties": {},
      "id": "EnableInteractiveSerialConsoleRequest"
    },
    "Instance": {
      "properties": {
        "updateTime": {
          "description": "Output only. Update a time stamp.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of networks associated with this server."
        },
        "networkTemplate": {
          "type": "string",
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\"."
        },
        "luns": {
          "description": "Immutable. List of LUNs associated with this server.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Create a time stamp."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. An identifier for the `Instance`, generated by the backend."
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "loginInfo": {
          "type": "string",
          "description": "Output only. Text field about info for logging in.",
          "readOnly": true
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "osImage": {
          "description": "The OS image currently installed on the server.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED",
            "UPDATING",
            "STARTING",
            "STOPPING",
            "SHUTDOWN"
          ],
          "description": "Output only. The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted.",
            "The server is being updated.",
            "The server is starting.",
            "The server is stopping.",
            "The server is shutdown."
          ],
          "type": "string",
          "readOnly": true
        },
        "workloadProfile": {
          "description": "The workload profile for the instance.",
          "type": "string",
          "enumDescriptions": [
            "The workload profile is in an unknown state.",
            "The workload profile is generic.",
            "The workload profile is hana."
          ],
          "enum": [
            "WORKLOAD_PROFILE_UNSPECIFIED",
            "WORKLOAD_PROFILE_GENERIC",
            "WORKLOAD_PROFILE_HANA"
          ]
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses."
        },
        "firmwareVersion": {
          "description": "Output only. The firmware version for the instance.",
          "readOnly": true,
          "type": "string"
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled."
        },
        "interactiveSerialConsoleEnabled": {
          "readOnly": true,
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "A server.",
      "id": "Instance"
    },
    "SubmitProvisioningConfigRequest": {
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        },
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig."
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "type": "object",
      "description": "Response message for the list of provisioning quotas.",
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "description": "The provisioning quotas registered in this project.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "NetworkAddress": {
      "properties": {
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        },
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NetworkAddress",
      "description": "A network."
    },
    "RenameVolumeRequest": {
      "type": "object",
      "id": "RenameVolumeRequest",
      "properties": {
        "newVolumeId": {
          "description": "Required. The new `id` of the volume.",
          "type": "string"
        }
      },
      "description": "Message requesting rename of a server."
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format.",
          "readOnly": true
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created."
        },
        "customId": {
          "type": "string",
          "description": "Optional. The user-defined identifier of the provisioning config."
        },
        "location": {
          "type": "string",
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period."
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "description": "Output only. State of ProvisioningConfig."
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "email": {
          "type": "string",
          "deprecated": true,
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Last update timestamp."
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "description": "Instances to be created.",
          "type": "array"
        }
      },
      "description": "A provisioning configuration.",
      "type": "object"
    },
    "EvictLunRequest": {
      "description": "Request for skip lun cooloff and delete it.",
      "properties": {},
      "type": "object",
      "id": "EvictLunRequest"
    },
    "EvictVolumeRequest": {
      "id": "EvictVolumeRequest",
      "type": "object",
      "description": "Request for skip volume cooloff and delete it.",
      "properties": {}
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "nfsShares": {
          "items": {
            "$ref": "NfsShare"
          },
          "description": "The list of NFS shares.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Response message containing the list of NFS shares.",
      "type": "object"
    },
    "NetworkConfig": {
      "type": "object",
      "description": "Configuration parameters for a new network.",
      "id": "NetworkConfig",
      "properties": {
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the network config.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "type": {
          "description": "The type of this network, either Client or Private.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "bandwidth": {
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string",
          "description": "Interconnect bandwidth. Set only when type is CLIENT."
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "vlanAttachments": {
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "jumboFramesEnabled": {
          "type": "boolean",
          "description": "The JumboFramesEnabled option for customer to set."
        },
        "serviceCidr": {
          "description": "Service CIDR, if any.",
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "type": "string"
        }
      }
    },
    "ResizeVolumeRequest": {
      "properties": {
        "sizeGib": {
          "type": "string",
          "description": "New Volume size, in GiB.",
          "format": "int64"
        }
      },
      "id": "ResizeVolumeRequest",
      "type": "object",
      "description": "Request for emergency resize Volume."
    },
    "LunRange": {
      "properties": {
        "quantity": {
          "type": "integer",
          "description": "Number of LUNs to create.",
          "format": "int32"
        },
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "The requested size of each LUN, in GB."
        }
      },
      "id": "LunRange",
      "description": "A LUN(Logical Unit Number) range.",
      "type": "object"
    },
    "ListVolumesResponse": {
      "description": "Response message containing the list of storage volumes.",
      "id": "ListVolumesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volumes": {
          "description": "The list of storage volumes.",
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        }
      }
    },
    "Operation": {
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation"
    },
    "LogicalNetworkInterface": {
      "properties": {
        "ipAddress": {
          "description": "IP address in the network",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "network": {
          "description": "Name of the network",
          "type": "string"
        },
        "networkType": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "Type of network."
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance."
        }
      },
      "id": "LogicalNetworkInterface",
      "type": "object",
      "description": "Each logical network interface is effectively a network and IP pair."
    }
  },
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "id": "baremetalsolution:v2",
  "title": "Bare Metal Solution API",
  "kind": "discovery#restDescription",
  "version": "v2",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "parameters": {
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "volumes": {
              "methods": {
                "patch": {
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Volume"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "type": "string"
                    }
                  },
                  "description": "Update details of a single storage volume.",
                  "id": "baremetalsolution.projects.locations.volumes.patch"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single storage volume.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "path": "v2/{+name}"
                },
                "list": {
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "description": "List storage volumes in a given project and location.",
                  "path": "v2/{+parent}/volumes",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListVolumesRequest."
                    }
                  }
                },
                "resize": {
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "volume"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "parameters": {
                    "volume": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Volume to resize.",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Emergency Volume resize.",
                  "path": "v2/{+volume}:resize",
                  "id": "baremetalsolution.projects.locations.volumes.resize"
                },
                "evict": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "EvictVolumeRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:evict",
                  "path": "v2/{+name}:evict",
                  "httpMethod": "POST",
                  "description": "Skips volume's cooloff and deletes it now. Volume must be in cooloff state.",
                  "id": "baremetalsolution.projects.locations.volumes.evict",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Volume.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "rename": {
                  "description": "RenameVolume sets a new name for a volume. Use with caution, previous names become immediately invalidated.",
                  "response": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.rename",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "RenameVolumeRequest"
                  },
                  "path": "v2/{+name}:rename",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:rename",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The `name` field is used to identify the volume. Format: projects/{project}/locations/{location}/volumes/{volume}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "type": "string"
                    }
                  }
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "evict": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}:evict",
                      "request": {
                        "$ref": "EvictLunRequest"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "description": "Required. The name of the lun.",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Skips lun's cooloff and deletes it now. Lun must be in cooloff state.",
                      "path": "v2/{+name}:evict",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.evict",
                      "httpMethod": "POST"
                    },
                    "list": {
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "path": "v2/{+parent}/luns",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List storage volume luns for given storage volume.",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "location": "path"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32",
                          "type": "integer"
                        }
                      }
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "description": "Deletes a volume snapshot. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "httpMethod": "DELETE",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete"
                    },
                    "restoreVolumeSnapshot": {
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "parameters": {
                        "volumeSnapshot": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the snapshot which will be used to restore its parent volume.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Uses the specified snapshot to restore its parent volume. Returns INVALID_ARGUMENT if called for a non-boot volume."
                    },
                    "create": {
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "description": "Takes a snapshot of a boot volume. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "parameters": {
                        "parent": {
                          "description": "Required. The volume to snapshot.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "v2/{+parent}/snapshots",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        },
                        "pageSize": {
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "httpMethod": "GET",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Retrieves the list of snapshots for the specified volume. Returns a response with an empty list of snapshots if called for a non-boot volume.",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/snapshots"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the snapshot.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "description": "Returns the specified snapshot resource. Returns INVALID_ARGUMENT if called for a non-boot volume.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "submit": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "description": "Submit a provisiong configuration for a given project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get ProvisioningConfig by name.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the ProvisioningConfig.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Output only. The system-generated name of the provisioning config. This follows the UUID format."
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "httpMethod": "PATCH",
                  "description": "Update existing ProvisioningConfig."
                },
                "create": {
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "description": "Create new ProvisioningConfig.",
                  "path": "v2/{+parent}/provisioningConfigs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    }
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "stop": {
                  "path": "v2/{+name}:stop",
                  "httpMethod": "POST",
                  "description": "Stop a running server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  }
                },
                "reset": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "httpMethod": "POST",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "path": "v2/{+name}:reset",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string"
                    }
                  }
                },
                "rename": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RenameInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.instances.rename",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:rename",
                  "path": "v2/{+name}:rename",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The `name` field is used to identify the instance. Format: projects/{project}/locations/{location}/instances/{instance}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "RenameInstance sets a new name for an instance. Use with caution, previous names become immediately invalidated.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Instance"
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update details of a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                },
                "detachLun": {
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "instance"
                  ],
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "parameters": {
                    "instance": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the instance.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "description": "Detach LUN from Instance.",
                  "httpMethod": "POST",
                  "path": "v2/{+instance}:detachLun"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "description": "Get details about a single server.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  }
                },
                "disableInteractiveSerialConsole": {
                  "path": "v2/{+name}:disableInteractiveSerialConsole",
                  "description": "Disable the interactive serial console feature on an instance.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:disableInteractiveSerialConsole",
                  "id": "baremetalsolution.projects.locations.instances.disableInteractiveSerialConsole",
                  "request": {
                    "$ref": "DisableInteractiveSerialConsoleRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "start": {
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:start",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts a server that was shutdown.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "List servers in a given project and location.",
                  "path": "v2/{+parent}/instances",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListInstancesRequest."
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "enableInteractiveSerialConsole": {
                  "description": "Enable the interactive serial console feature on an instance.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.enableInteractiveSerialConsole",
                  "request": {
                    "$ref": "EnableInteractiveSerialConsoleRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:enableInteractiveSerialConsole",
                  "path": "v2/{+name}:enableInteractiveSerialConsole",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/provisioningQuotas",
                  "description": "List the budget details to provision resources on a given project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "description": "Get details about an operation."
                }
              }
            },
            "nfsShares": {
              "methods": {
                "delete": {
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. The name of the NFS share to delete.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "description": "Delete an NFS share. The underlying volume is automatically deleted.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single NFS share.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "path": "v2/{+parent}/nfsShares",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List NFS shares."
                },
                "rename": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. The `name` field is used to identify the nfsshare. Format: projects/{project}/locations/{location}/nfsshares/{nfsshare}",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "request": {
                    "$ref": "RenameNfsShareRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "RenameNfsShare sets a new name for an nfsshare. Use with caution, previous names become immediately invalidated.",
                  "id": "baremetalsolution.projects.locations.nfsShares.rename",
                  "path": "v2/{+name}:rename",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}:rename",
                  "httpMethod": "POST"
                },
                "patch": {
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "httpMethod": "PATCH",
                  "description": "Update details of a single NFS share.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Immutable. The name of the NFS share.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "description": "Create an NFS share.",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "request": {
                    "$ref": "NfsShare"
                  }
                }
              }
            },
            "networks": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "path": "v2/{+parent}/networks",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List network in a given project and location.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    }
                  },
                  "httpMethod": "GET"
                },
                "rename": {
                  "description": "RenameNetwork sets a new name for a network. Use with caution, previous names become immediately invalidated.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "RenameNetworkRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}:rename",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "description": "Required. The `name` field is used to identify the network. Format: projects/{project}/locations/{location}/networks/{network}",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.networks.rename",
                  "response": {
                    "$ref": "Network"
                  },
                  "path": "v2/{+name}:rename"
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Network"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`, `vrf.vlan_attachments`",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    }
                  },
                  "description": "Update details of a single network."
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "response": {
                    "$ref": "Network"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}",
                  "description": "Get details of a single network.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "listNetworkUsage": {
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "httpMethod": "GET",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "location": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value (project and location)."
                    }
                  }
                }
              }
            },
            "sshKeys": {
              "methods": {
                "create": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent containing the SSH keys.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "sshKeyId": {
                      "type": "string",
                      "description": "Required. The ID to use for the key, which will become the final component of the key's resource name. This value must match the regex: [a-zA-Z0-9@.\\-_]{1,64}",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "SSHKey"
                  },
                  "id": "baremetalsolution.projects.locations.sshKeys.create",
                  "description": "Register a public SSH key in the specified project for use with the interactive serial console feature.",
                  "path": "v2/{+parent}/sshKeys",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "SSHKey"
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys/{sshKeysId}",
                  "httpMethod": "DELETE",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the SSH key to delete. Currently, the only valid value for the location is \"global\".",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/sshKeys/[^/]+$"
                    }
                  },
                  "description": "Deletes a public SSH key registered in the specified project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.sshKeys.delete",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListSSHKeysResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists the public SSH keys registered for the specified project. These SSH keys are used only for the interactive serial console feature.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of items to return."
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent containing the SSH keys. Currently, the only valid value for the location is \"global\".",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/sshKeys",
                  "id": "baremetalsolution.projects.locations.sshKeys.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/sshKeys"
                }
              }
            }
          },
          "methods": {
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.locations.list",
              "path": "v2/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              },
              "flatPath": "v2/projects/{projectsId}/locations",
              "httpMethod": "GET"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "response": {
                "$ref": "Location"
              },
              "id": "baremetalsolution.projects.locations.get",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}"
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "revision": "20230628",
  "servicePath": "",
  "protocol": "rest"
}

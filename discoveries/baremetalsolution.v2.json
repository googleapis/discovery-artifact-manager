{
  "schemas": {
    "Network": {
      "description": "A Network.",
      "properties": {
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "macAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of physical interfaces."
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "vlanId": {
          "type": "string",
          "description": "The vlan id of the Network."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ],
          "description": "The Network state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ]
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ]
        }
      },
      "id": "Network",
      "type": "object"
    },
    "ProvisioningConfig": {
      "properties": {
        "name": {
          "description": "Output only. The name of the provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "instances": {
          "items": {
            "$ref": "InstanceConfig"
          },
          "description": "Instances to be created.",
          "type": "array"
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        },
        "volumes": {
          "items": {
            "$ref": "VolumeConfig"
          },
          "description": "Volumes to be created.",
          "type": "array"
        },
        "ticketId": {
          "description": "A generated buganizer id to track provisioning request.",
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkConfig"
          },
          "description": "Networks to be created."
        }
      },
      "type": "object",
      "id": "ProvisioningConfig",
      "description": "A provisioning configuration."
    },
    "ListProvisioningQuotasResponse": {
      "properties": {
        "provisioningQuotas": {
          "items": {
            "$ref": "ProvisioningQuota"
          },
          "type": "array",
          "description": "The provisioning quotas registered in this project."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "ListProvisioningQuotasResponse",
      "type": "object",
      "description": "Response message for the list of provisioning quotas."
    },
    "SubmitProvisioningConfigResponse": {
      "type": "object",
      "id": "SubmitProvisioningConfigResponse",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "description": "Response for SubmitProvisioningConfig."
    },
    "VolumeSnapshot": {
      "type": "object",
      "id": "VolumeSnapshot",
      "description": "Snapshot registered for a given storage volume.",
      "properties": {
        "id": {
          "description": "An identifier for the snapshot, generated by the backend.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time of the storage volume snapshot.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the storage volume snapshot.",
          "readOnly": true,
          "type": "string"
        },
        "sizeBytes": {
          "description": "The size of the storage volume snapshot, in bytes.",
          "format": "int64",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of the storage volume snapshot."
        },
        "storageVolume": {
          "description": "The storage volume this snapshot belongs to.",
          "type": "string"
        }
      }
    },
    "RestoreVolumeSnapshotRequest": {
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object",
      "description": "Message for restoring a volume snapshot.",
      "properties": {}
    },
    "InstanceQuota": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the instance quota."
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "InstanceQuota",
      "description": "A resource budget."
    },
    "NetworkConfig": {
      "type": "object",
      "properties": {
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string",
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ]
        },
        "vlanAttachments": {
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          }
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the network config.",
          "readOnly": true
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        }
      },
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network."
    },
    "VlanAttachment": {
      "type": "object",
      "id": "VlanAttachment",
      "properties": {
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "format": "int64",
          "description": "The peer vlan ID of the attachment.",
          "type": "string"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        }
      },
      "description": "VLAN attachment details."
    },
    "SnapshotSchedulePolicy": {
      "description": "A snapshot schedule policy.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the snapshot schedule policy."
        },
        "schedules": {
          "type": "array",
          "description": "The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.",
          "items": {
            "$ref": "Schedule"
          }
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "description": "The state of the snapshot schedule policy.",
          "type": "string",
          "enumDescriptions": [
            "The policy is in an unknown state.",
            "The policy is been provisioned."
          ]
        },
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot schedule policy, generated by the backend."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The name of the snapshot schedule policy.",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "SnapshotSchedulePolicy"
    },
    "Operation": {
      "type": "object",
      "id": "Operation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "ListInstancesResponse": {
      "description": "Response message for the list of servers.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "instances": {
          "type": "array",
          "description": "The list of servers.",
          "items": {
            "$ref": "Instance"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListInstancesResponse"
    },
    "StartInstanceRequest": {
      "type": "object",
      "id": "StartInstanceRequest",
      "properties": {},
      "description": "Message requesting to start a server."
    },
    "Instance": {
      "type": "object",
      "description": "A server.",
      "properties": {
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Update a time stamp.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "machineType": {
          "type": "string",
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "id": {
          "description": "An identifier for the `Instance`, generated by the backend.",
          "type": "string"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "List of LUNs associated with this server."
        },
        "interactiveSerialConsoleEnabled": {
          "type": "boolean",
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Create a time stamp.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "description": "The state of the server.",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "type": "string"
        },
        "networks": {
          "description": "List of networks associated with this server.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        }
      },
      "id": "Instance"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "Schedule": {
      "description": "A snapshot schedule.",
      "type": "object",
      "id": "Schedule",
      "properties": {
        "prefix": {
          "description": "A list of snapshot names created in this schedule.",
          "type": "string"
        },
        "retentionCount": {
          "description": "The maximum number of snapshots to retain in this schedule.",
          "format": "int32",
          "type": "integer"
        },
        "crontabSpec": {
          "type": "string",
          "description": "A crontab-like specification that the schedule uses to take snapshots."
        }
      }
    },
    "SubmitProvisioningConfigRequest": {
      "id": "SubmitProvisioningConfigRequest",
      "type": "object",
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        },
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        }
      },
      "description": "Request for SubmitProvisioningConfig."
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListNfsSharesResponse": {
      "id": "ListNfsSharesResponse",
      "description": "Response message containing the list of NFS shares.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "nfsShares": {
          "type": "array",
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance config."
        },
        "privateNetwork": {
          "description": "Private network address, if any.",
          "$ref": "NetworkAddress"
        },
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VRF": {
      "properties": {
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "state": {
          "description": "The possible state of VRF.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ]
        },
        "vlanAttachments": {
          "items": {
            "$ref": "VlanAttachment"
          },
          "type": "array",
          "description": "The list of VLAN attachments for the VRF."
        }
      },
      "description": "A network VRF.",
      "type": "object",
      "id": "VRF"
    },
    "ListNetworkUsageResponse": {
      "id": "ListNetworkUsageResponse",
      "type": "object",
      "description": "Response with Networks with IPs",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "NetworkUsage"
          },
          "description": "Networks with IPs."
        }
      }
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "id": "ResetInstanceRequest",
      "properties": {},
      "type": "object"
    },
    "ListNetworksResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "description": "The list of networks."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListNetworksResponse",
      "type": "object",
      "description": "Response message containing the list of networks."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "ProvisioningQuota": {
      "properties": {
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "assetType": {
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "type": "string",
          "description": "The asset type of this provisioning quota."
        },
        "availableCount": {
          "type": "integer",
          "format": "int32",
          "description": "The available count of the provisioning quota."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota.",
          "type": "string"
        }
      },
      "id": "ProvisioningQuota",
      "type": "object",
      "description": "A provisioning quota for a given project."
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "id": "VolumeConfig",
      "properties": {
        "protocol": {
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "type": "string"
        },
        "nfsExports": {
          "type": "array",
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS."
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB.",
          "type": "integer"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617)."
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        },
        "lunRanges": {
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "items": {
            "$ref": "LunRange"
          }
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the volume config."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListLunsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume luns.",
      "id": "ListLunsResponse",
      "properties": {
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "type": "array",
          "description": "The list of luns."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Volume": {
      "type": "object",
      "properties": {
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "requestedSizeGib": {
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB.",
          "type": "string"
        },
        "snapshotAutoDeleteBehavior": {
          "type": "string",
          "description": "The behavior to use when snapshot reserved space is full.",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ]
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "currentSizeGib": {
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ]
        },
        "remainingSpaceGib": {
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "format": "int64",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        },
        "autoGrownSizeGib": {
          "type": "string",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0.",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Volume`, generated by the backend."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "type": "string",
          "description": "The storage type for this volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        }
      },
      "description": "A storage volume.",
      "id": "Volume"
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "snapshotSchedulePolicies": {
          "type": "array",
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "description": "The snapshot schedule policies registered in this project."
        }
      },
      "id": "ListSnapshotSchedulePoliciesResponse",
      "description": "Response message containing the list of snapshot schedule policies.",
      "type": "object"
    },
    "AllowedClient": {
      "type": "object",
      "id": "AllowedClient",
      "properties": {
        "shareIp": {
          "description": "The IP address of the share on this network.",
          "type": "string"
        },
        "mountPermissions": {
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ]
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "allowedClientsCidr": {
          "type": "string",
          "description": "The subnet of IP addresses permitted to access the share."
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        }
      },
      "description": "Represents an 'access point' for the share."
    },
    "Lun": {
      "description": "A storage volume logical unit number (LUN).",
      "properties": {
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "multiprotocolType": {
          "type": "string",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ]
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "name": {
          "description": "Output only. The name of the LUN.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "type": "string",
          "description": "The storage type for this LUN.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "state": {
          "description": "The state of this storage volume.",
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ]
        },
        "wwid": {
          "description": "The WWID for this LUN.",
          "type": "string"
        },
        "sizeGb": {
          "type": "string",
          "format": "int64",
          "description": "The size of this LUN, in gigabytes."
        }
      },
      "id": "Lun",
      "type": "object"
    },
    "NetworkUsage": {
      "properties": {
        "network": {
          "$ref": "Network",
          "description": "Network."
        },
        "usedIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network."
        }
      },
      "type": "object",
      "description": "Network with all used IP addresses.",
      "id": "NetworkUsage"
    },
    "IntakeVlanAttachment": {
      "type": "object",
      "id": "IntakeVlanAttachment",
      "properties": {
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        }
      },
      "description": "A GCP vlan attachment."
    },
    "NfsExport": {
      "id": "NfsExport",
      "properties": {
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag in NfsShare AllowedClientsRequest."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "networkId": {
          "type": "string",
          "description": "Network to use to publish the export."
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "description": "Export permissions.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A NFS export entry."
    },
    "NetworkAddress": {
      "properties": {
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        },
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A network.",
      "id": "NetworkAddress"
    },
    "ListVolumeSnapshotsResponse": {
      "id": "ListVolumeSnapshotsResponse",
      "description": "Response message containing the list of storage volume snapshots.",
      "properties": {
        "volumeSnapshots": {
          "description": "The list of storage volumes.",
          "type": "array",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "type": "object"
    },
    "NfsShare": {
      "id": "NfsShare",
      "type": "object",
      "description": "An NFS share.",
      "properties": {
        "volume": {
          "description": "The volume containing the share.",
          "type": "string"
        },
        "nfsShareId": {
          "readOnly": true,
          "description": "Output only. An identifier for the NFS share, generated by the backend.",
          "type": "string"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the NFS share.",
          "type": "string"
        },
        "state": {
          "description": "The state of the NFS share.",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "type": "string"
        },
        "allowedClients": {
          "items": {
            "$ref": "AllowedClient"
          },
          "description": "List of allowed access points.",
          "type": "array"
        }
      }
    },
    "ListVolumesResponse": {
      "id": "ListVolumesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volumes": {
          "type": "array",
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "description": "Response message containing the list of storage volumes."
    },
    "LunRange": {
      "type": "object",
      "id": "LunRange",
      "properties": {
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of each LUN, in GB.",
          "type": "integer"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Number of LUNs to create."
        }
      },
      "description": "A LUN(Logical Unit Number) range."
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "type": "number",
          "format": "double",
          "description": "The bandwidth permitted by the QOS policy, in gbps."
        }
      },
      "description": "QOS policy parameters.",
      "id": "QosPolicy",
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "properties": {
        "reservedSpaceGib": {
          "type": "string",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64"
        },
        "reservedSpaceUsedPercent": {
          "format": "int32",
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume."
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        }
      },
      "id": "SnapshotReservationDetail",
      "type": "object"
    }
  },
  "version_module": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v2/{+name}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/locations",
              "id": "baremetalsolution.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                }
              },
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "id": "baremetalsolution.projects.locations.get",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              }
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get details of a single storage volume."
                },
                "patch": {
                  "request": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Update details of a single storage volume.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'requested_size_gib'",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "path": "v2/{+name}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List storage volumes in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    }
                  },
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "path": "v2/{+parent}/volumes"
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "location": "path"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "httpMethod": "GET",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}"
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        }
                      },
                      "path": "v2/{+parent}/luns",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "httpMethod": "GET",
                      "description": "List storage volume luns for given storage volume."
                    }
                  }
                },
                "snapshots": {
                  "methods": {
                    "create": {
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The volume to snapshot.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Create a storage volume snapshot in a containing volume.",
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "path": "v2/{+parent}/snapshots",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Get details of a single storage volume snapshot.",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      }
                    },
                    "restoreVolumeSnapshot": {
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "description": "Restore a storage volume snapshot to its containing volume.",
                      "parameters": {
                        "volumeSnapshot": {
                          "description": "Required. Name of the resource.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "path": "v2/{+parent}/snapshots",
                      "parameters": {
                        "pageToken": {
                          "description": "A token identifying a page of results from the server.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "List storage volume snapshots for given storage volume.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a storage volume snapshot for a given volume.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the snapshot to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "Empty"
                      }
                    }
                  }
                }
              }
            },
            "nfsShares": {
              "methods": {
                "list": {
                  "path": "v2/{+parent}/nfsShares",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "List NFS shares.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares"
                },
                "get": {
                  "description": "Get details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  }
                },
                "patch": {
                  "path": "v2/{+name}",
                  "description": "Update details of a single NFS share.",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "required": true,
                      "description": "Output only. The name of the NFS share."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                }
              }
            },
            "instances": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Get details about a single server.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}"
                },
                "list": {
                  "path": "v2/{+parent}/instances",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "description": "List servers in a given project and location.",
                  "httpMethod": "GET"
                },
                "start": {
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts a server that was shutdown.",
                  "path": "v2/{+name}:start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single server.",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "request": {
                    "$ref": "Instance"
                  },
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "reset": {
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}:reset",
                  "httpMethod": "POST"
                }
              }
            },
            "networks": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "Network"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Update details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
                    }
                  }
                },
                "listNetworkUsage": {
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "parameters": {
                    "location": {
                      "description": "Required. Parent value (project and location).",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ]
                },
                "get": {
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "path": "v2/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Get details of a single network.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Network"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "description": "List network in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "path": "v2/{+parent}/networks"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "submit": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "description": "Submit a provisiong configuration for a given project.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "path": "v2/{+parent}/provisioningConfigs:submit"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List the budget details to provision resources on a given project.",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/provisioningQuotas",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest."
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list"
                }
              }
            },
            "snapshotSchedulePolicies": {
              "methods": {
                "list": {
                  "description": "List snapshot schedule policies in a given project and location.",
                  "response": {
                    "$ref": "ListSnapshotSchedulePoliciesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "parameters": {
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                      "required": true,
                      "location": "path"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "httpMethod": "GET"
                },
                "create": {
                  "description": "Create a snapshot schedule policy in the specified project.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.create",
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameters": {
                    "snapshotSchedulePolicyId": {
                      "location": "query",
                      "description": "Required. Snapshot policy ID",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent project and location containing the SnapshotSchedulePolicy.",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "httpMethod": "POST"
                },
                "patch": {
                  "description": "Update a snapshot schedule policy in the specified project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "description": "Output only. The name of the snapshot schedule policy.",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.patch"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the snapshot schedule policy to delete.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Delete a named snapshot schedule policy.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "description": "Get details of a single snapshot schedule policy.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.get",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": "",
  "version": "v2",
  "servicePath": "",
  "name": "baremetalsolution",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "title": "Bare Metal Solution API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "revision": "20220209",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "ownerName": "Google",
  "parameters": {
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  },
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "id": "baremetalsolution:v2",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}

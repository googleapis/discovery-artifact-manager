{
  "version": "v2",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "id": "baremetalsolution:v2",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Location"
              },
              "path": "v2/{+name}",
              "id": "baremetalsolution.projects.locations.get",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "id": "baremetalsolution.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}/locations",
              "flatPath": "v2/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET"
            }
          },
          "resources": {
            "volumes": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'requested_size_gib' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update details of a single storage volume.",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "request": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "List storage volumes in a given project and location.",
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. Parent value for ListVolumesRequest.",
                      "required": true
                    },
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "path": "v2/{+parent}/volumes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListVolumesResponse"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "path": "v2/{+name}",
                  "description": "Get details of a single storage volume."
                }
              },
              "resources": {
                "snapshots": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "description": "List storage volume snapshots for given storage volume.",
                      "path": "v2/{+parent}/snapshots",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "type": "string"
                        }
                      }
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "description": "Required. The volume to snapshot.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Create a storage volume snapshot in a containing volume.",
                      "path": "v2/{+parent}/snapshots",
                      "httpMethod": "POST",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "VolumeSnapshot"
                      }
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes a storage volume snapshot for a given volume.",
                      "response": {
                        "$ref": "Empty"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the snapshot to delete.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "description": "Get details of a single storage volume snapshot.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "restoreVolumeSnapshot": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Restore a storage volume snapshot to its containing volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot",
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "parameters": {
                        "volumeSnapshot": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST"
                    }
                  }
                },
                "luns": {
                  "methods": {
                    "get": {
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "httpMethod": "GET",
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "path": "v2/{+parent}/luns",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "type": "integer",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "description": "List storage volume luns for given storage volume.",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              }
            },
            "nfsShares": {
              "methods": {
                "patch": {
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single NFS share.",
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Output only. The name of the NFS share.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Get details of a single NFS share.",
                  "httpMethod": "GET",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "path": "v2/{+parent}/nfsShares",
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List NFS shares.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results from the server.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "List filter."
                    }
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "patch": {
                  "request": {
                    "$ref": "Instance"
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update details of a single server.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Instance"
                  },
                  "description": "Get details about a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "reset": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}:reset",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "start": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:start",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "description": "Starts a server that was shutdown.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "parameters": {
                    "parent": {
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List servers in a given project and location.",
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/instances",
                  "httpMethod": "GET"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List the budget details to provision resources on a given project.",
                  "path": "v2/{+parent}/provisioningQuotas"
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the ProvisioningConfig."
                    }
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "description": "Get ProvisioningConfig by name."
                },
                "submit": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Submit a provisiong configuration for a given project.",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "path": "v2/{+name}",
                  "parameters": {
                    "email": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "name": {
                      "description": "Output only. The name of the provisioning config.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query",
                      "description": "Required. The list of fields to update."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update existing ProvisioningConfig.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch"
                },
                "create": {
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "path": "v2/{+parent}/provisioningConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameters": {
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Create new ProvisioningConfig."
                }
              }
            },
            "networks": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Get details of a single network.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Network"
                  },
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "path": "v2/{+parent}/networks",
                  "httpMethod": "GET",
                  "description": "List network in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "location": "path",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.networks.list"
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Network"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Update details of a single network.",
                  "id": "baremetalsolution.projects.locations.networks.patch"
                },
                "listNetworkUsage": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "parameters": {
                    "location": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value (project and location).",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "snapshotSchedulePolicies": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List snapshot schedule policies in a given project and location.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.list",
                  "httpMethod": "GET",
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "response": {
                    "$ref": "ListSnapshotSchedulePoliciesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of items to return."
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies"
                },
                "create": {
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent project and location containing the SnapshotSchedulePolicy."
                    },
                    "snapshotSchedulePolicyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Snapshot policy ID"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.create",
                  "description": "Create a snapshot schedule policy in the specified project.",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/snapshotSchedulePolicies"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "description": "Get details of a single snapshot schedule policy.",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "description": "Required. The name of the snapshot schedule policy to delete."
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v2/{+name}",
                  "description": "Delete a named snapshot schedule policy.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.patch",
                  "description": "Update a snapshot schedule policy in the specified project.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Output only. The name of the snapshot schedule policy.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. The list of fields to update.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "schemas": {
    "ListNetworksResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "description": "The list of networks.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListNetworksResponse",
      "description": "Response message containing the list of networks."
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "properties": {
        "osImage": {
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "id": {
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request.",
          "type": "string"
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "privateNetwork": {
          "$ref": "NetworkAddress",
          "description": "Private network address, if any."
        },
        "accountNetworksEnabled": {
          "type": "boolean",
          "description": "If true networks can be from different projects of the same vendor account."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance config.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Configuration parameters for a new instance."
    },
    "ResetInstanceRequest": {
      "properties": {},
      "id": "ResetInstanceRequest",
      "type": "object",
      "description": "Message requesting to reset a server."
    },
    "SnapshotSchedulePolicy": {
      "description": "A snapshot schedule policy.",
      "id": "SnapshotSchedulePolicy",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "description": {
          "type": "string",
          "description": "The description of the snapshot schedule policy."
        },
        "state": {
          "enumDescriptions": [
            "The policy is in an unknown state.",
            "The policy is been provisioned."
          ],
          "description": "The state of the snapshot schedule policy.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ]
        },
        "schedules": {
          "description": "The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.",
          "items": {
            "$ref": "Schedule"
          },
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot schedule policy, generated by the backend."
        },
        "name": {
          "description": "Output only. The name of the snapshot schedule policy.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "description": "A provisioning configuration.",
      "properties": {
        "instances": {
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          },
          "type": "array"
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "networks": {
          "type": "array",
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          }
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Last update timestamp.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "Output only. State of ProvisioningConfig.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED"
          ],
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified."
          ]
        },
        "ticketId": {
          "type": "string",
          "description": "A generated buganizer id to track provisioning request."
        },
        "handoverServiceAccount": {
          "description": "A service account to enable customers to access instance credentials upon handover.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "type": "string",
          "readOnly": true
        },
        "volumes": {
          "description": "Volumes to be created.",
          "type": "array",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkConfig": {
      "id": "NetworkConfig",
      "description": "Configuration parameters for a new network.",
      "properties": {
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "bandwidth": {
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "type": "string"
        },
        "serviceCidr": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any."
        },
        "type": {
          "description": "The type of this network, either Client or Private.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ]
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the network config."
        },
        "vlanAttachments": {
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "type": "array",
          "items": {
            "$ref": "IntakeVlanAttachment"
          }
        }
      },
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "snapshotSchedulePolicies": {
          "type": "array",
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "description": "The snapshot schedule policies registered in this project."
        }
      },
      "description": "Response message containing the list of snapshot schedule policies.",
      "type": "object",
      "id": "ListSnapshotSchedulePoliciesResponse"
    },
    "VRF": {
      "type": "object",
      "description": "A network VRF.",
      "id": "VRF",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "description": "The possible state of VRF.",
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ]
        },
        "vlanAttachments": {
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          },
          "description": "The list of VLAN attachments for the VRF."
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        }
      }
    },
    "Location": {
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "type": "object"
    },
    "ListLunsResponse": {
      "description": "Response message containing the list of storage volume luns.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "The list of luns."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListLunsResponse"
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "type": "object",
      "id": "InstanceQuota",
      "properties": {
        "availableMachineCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type."
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the instance quota."
        }
      }
    },
    "NfsShare": {
      "description": "An NFS share.",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the NFS share.",
          "type": "string"
        },
        "volume": {
          "type": "string",
          "description": "The volume containing the share."
        },
        "labels": {
          "type": "object",
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          },
          "type": "array"
        },
        "nfsShareId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An identifier for the NFS share, generated by the backend."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "type": "string",
          "description": "The state of the NFS share.",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned."
          ]
        }
      },
      "type": "object",
      "id": "NfsShare"
    },
    "Status": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      }
    },
    "LunRange": {
      "description": "A LUN(Logical Unit Number) range.",
      "properties": {
        "quantity": {
          "format": "int32",
          "type": "integer",
          "description": "Number of LUNs to create."
        },
        "sizeGb": {
          "description": "The requested size of each LUN, in GB.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "LunRange",
      "type": "object"
    },
    "NfsExport": {
      "id": "NfsExport",
      "type": "object",
      "properties": {
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "cidr": {
          "type": "string",
          "description": "A CIDR range."
        },
        "permissions": {
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions.",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "type": "string"
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        },
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        }
      },
      "description": "A NFS export entry."
    },
    "SubmitProvisioningConfigRequest": {
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "description": "Request for SubmitProvisioningConfig.",
      "properties": {
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        },
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        }
      }
    },
    "NetworkAddress": {
      "description": "A network.",
      "properties": {
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "IPv4 address to be assigned to the server."
        }
      },
      "id": "NetworkAddress",
      "type": "object"
    },
    "Schedule": {
      "description": "A snapshot schedule.",
      "type": "object",
      "id": "Schedule",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "A list of snapshot names created in this schedule."
        },
        "crontabSpec": {
          "description": "A crontab-like specification that the schedule uses to take snapshots.",
          "type": "string"
        },
        "retentionCount": {
          "description": "The maximum number of snapshots to retain in this schedule.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AllowedClient": {
      "id": "AllowedClient",
      "properties": {
        "allowSuid": {
          "type": "boolean",
          "description": "Allow the setuid flag."
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "shareIp": {
          "type": "string",
          "description": "The IP address of the share on this network."
        },
        "allowDev": {
          "description": "Allow dev flag. Which controls whether to allow creation of devices.",
          "type": "boolean"
        },
        "mountPermissions": {
          "type": "string",
          "description": "Mount permissions.",
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ]
        }
      },
      "type": "object",
      "description": "Represents an 'access point' for the share."
    },
    "IntakeVlanAttachment": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the VLAN attachment."
        },
        "pairingKey": {
          "type": "string",
          "description": "Attachment pairing key."
        }
      },
      "id": "IntakeVlanAttachment",
      "type": "object",
      "description": "A GCP vlan attachment."
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "description": "Response message for the list of provisioning quotas.",
      "type": "object",
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "ProvisioningQuota": {
      "properties": {
        "assetType": {
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "description": "The asset type of this provisioning quota."
        },
        "name": {
          "description": "Output only. The name of the provisioning quota.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "serverCount": {
          "type": "string",
          "format": "int64",
          "description": "Server count."
        },
        "networkBandwidth": {
          "format": "int64",
          "type": "string",
          "description": "Network bandwidth, Gbps"
        },
        "instanceQuota": {
          "$ref": "InstanceQuota",
          "description": "Instance quota."
        },
        "storageGib": {
          "format": "int64",
          "description": "Storage size (GB).",
          "type": "string"
        },
        "availableCount": {
          "format": "int32",
          "description": "The available count of the provisioning quota.",
          "type": "integer"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        }
      },
      "id": "ProvisioningQuota",
      "type": "object",
      "description": "A provisioning quota for a given project."
    },
    "ListNfsSharesResponse": {
      "type": "object",
      "description": "Response message containing the list of NFS shares.",
      "id": "ListNfsSharesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "nfsShares": {
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListVolumeSnapshotsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume snapshots.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "volumeSnapshots": {
          "items": {
            "$ref": "VolumeSnapshot"
          },
          "description": "The list of storage volumes.",
          "type": "array"
        }
      },
      "id": "ListVolumeSnapshotsResponse"
    },
    "RestoreVolumeSnapshotRequest": {
      "type": "object",
      "description": "Message for restoring a volume snapshot.",
      "id": "RestoreVolumeSnapshotRequest",
      "properties": {}
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "StartInstanceRequest": {
      "description": "Message requesting to start a server.",
      "properties": {},
      "type": "object",
      "id": "StartInstanceRequest"
    },
    "QosPolicy": {
      "properties": {
        "bandwidthGbps": {
          "type": "number",
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "format": "double"
        }
      },
      "description": "QOS policy parameters.",
      "type": "object",
      "id": "QosPolicy"
    },
    "NetworkUsage": {
      "type": "object",
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses.",
      "properties": {
        "network": {
          "$ref": "Network",
          "description": "Network."
        },
        "usedIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network."
        }
      }
    },
    "Lun": {
      "id": "Lun",
      "description": "A storage volume logical unit number (LUN).",
      "type": "object",
      "properties": {
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "multiprotocolType": {
          "type": "string",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ],
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system."
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the LUN.",
          "readOnly": true
        },
        "storageType": {
          "description": "The storage type for this LUN.",
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "shareable": {
          "type": "boolean",
          "description": "Display if this LUN can be shared between multiple physical servers."
        },
        "state": {
          "description": "The state of this storage volume.",
          "type": "string",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ]
        },
        "bootLun": {
          "description": "Display if this LUN is a boot LUN.",
          "type": "boolean"
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "sizeGb": {
          "description": "The size of this LUN, in gigabytes.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "VlanAttachment": {
      "id": "VlanAttachment",
      "description": "VLAN attachment details.",
      "properties": {
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "type": "string",
          "format": "int64"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        },
        "peerIp": {
          "type": "string",
          "description": "The peer IP of the attachment."
        }
      },
      "type": "object"
    },
    "ListInstancesResponse": {
      "type": "object",
      "id": "ListInstancesResponse",
      "properties": {
        "instances": {
          "description": "The list of servers.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "description": "Response message for the list of servers."
    },
    "Network": {
      "description": "A Network.",
      "type": "object",
      "id": "Network",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        },
        "servicesCidr": {
          "description": "IP range for reserved for services (e.g. NFS).",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "description": "The type of this network.",
          "type": "string"
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ],
          "type": "string",
          "description": "The Network state."
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "type": "string",
          "readOnly": true
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "macAddress": {
          "items": {
            "type": "string"
          },
          "description": "List of physical interfaces.",
          "type": "array"
        },
        "ipAddress": {
          "description": "IP address configured.",
          "type": "string"
        }
      }
    },
    "VolumeSnapshot": {
      "description": "Snapshot registered for a given storage volume.",
      "id": "VolumeSnapshot",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the storage volume snapshot."
        },
        "description": {
          "type": "string",
          "description": "The description of the storage volume snapshot."
        },
        "id": {
          "description": "An identifier for the snapshot, generated by the backend.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The creation time of the storage volume snapshot.",
          "type": "string"
        },
        "storageVolume": {
          "description": "The storage volume this snapshot belongs to.",
          "type": "string"
        },
        "sizeBytes": {
          "type": "string",
          "description": "The size of the storage volume snapshot, in bytes.",
          "format": "int64"
        }
      }
    },
    "SubmitProvisioningConfigResponse": {
      "type": "object",
      "id": "SubmitProvisioningConfigResponse",
      "description": "Response for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      }
    },
    "Volume": {
      "properties": {
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "snapshotAutoDeleteBehavior": {
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "type": "string"
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "description": "The storage type for this volume."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "readOnly": true
        },
        "autoGrownSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0."
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "currentSizeGib": {
          "type": "string",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink.",
          "format": "int64"
        },
        "state": {
          "description": "The state of this storage volume.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "type": "string"
        },
        "requestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB."
        },
        "remainingSpaceGib": {
          "format": "int64",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        }
      },
      "description": "A storage volume.",
      "id": "Volume",
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "id": "SnapshotReservationDetail",
      "type": "object",
      "properties": {
        "reservedSpaceUsedPercent": {
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32"
        },
        "reservedSpacePercent": {
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "type": "integer",
          "format": "int32"
        },
        "reservedSpaceRemainingGib": {
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "format": "int64",
          "type": "string"
        },
        "reservedSpaceGib": {
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string"
        }
      },
      "description": "Details about snapshot space reservation and usage on the storage volume."
    },
    "Instance": {
      "id": "Instance",
      "type": "object",
      "description": "A server.",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Update a time stamp.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "description": "The state of the server."
        },
        "networks": {
          "description": "List of networks associated with this server.",
          "type": "array",
          "items": {
            "$ref": "Network"
          }
        },
        "hyperthreadingEnabled": {
          "type": "boolean",
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false."
        },
        "luns": {
          "type": "array",
          "description": "List of LUNs associated with this server.",
          "items": {
            "$ref": "Lun"
          }
        },
        "id": {
          "description": "An identifier for the `Instance`, generated by the backend.",
          "type": "string"
        },
        "machineType": {
          "type": "string",
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Create a time stamp.",
          "readOnly": true,
          "type": "string"
        },
        "interactiveSerialConsoleEnabled": {
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "ListVolumesResponse": {
      "description": "Response message containing the list of storage volumes.",
      "id": "ListVolumesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "The list of storage volumes."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      }
    },
    "ListNetworkUsageResponse": {
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "description": "Networks with IPs.",
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response with Networks with IPs"
    },
    "VolumeConfig": {
      "description": "Configuration parameters for a new volume.",
      "properties": {
        "machineIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "snapshotsEnabled": {
          "type": "boolean",
          "description": "Whether snapshots should be enabled."
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB.",
          "type": "integer"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "type": "string",
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ]
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "protocol": {
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "type": "string",
          "description": "Volume protocol."
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "$ref": "LunRange"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the volume config.",
          "type": "string"
        },
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "VolumeConfig"
    }
  },
  "revision": "20220322",
  "discoveryVersion": "v1",
  "basePath": "",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version_module": true,
  "batchPath": "batch",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    }
  },
  "title": "Bare Metal Solution API",
  "kind": "discovery#restDescription",
  "name": "baremetalsolution",
  "servicePath": "",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "protocol": "rest",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  }
}

{
  "parameters": {
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "title": "Bare Metal Solution API",
  "version": "v2",
  "documentationLink": "https://cloud.google.com/bare-metal",
  "revision": "20220829",
  "ownerName": "Google",
  "schemas": {
    "OSImage": {
      "id": "OSImage",
      "description": "Operation System image.",
      "type": "object",
      "properties": {
        "supportedNetworkTemplates": {
          "items": {
            "$ref": "ServerNetworkTemplate"
          },
          "type": "array",
          "description": "Network templates that can be used with this OS Image."
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. OS Image's unique name.",
          "type": "string"
        },
        "description": {
          "description": "OS Image description.",
          "type": "string"
        }
      }
    },
    "InstanceQuota": {
      "properties": {
        "availableMachineCount": {
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "Output only. The name of the instance quota.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Location where the quota applies."
        },
        "instanceType": {
          "type": "string",
          "description": "Instance type. Deprecated: use gcp_service."
        },
        "gcpService": {
          "description": "The gcp service of the provisioning quota.",
          "type": "string"
        }
      },
      "id": "InstanceQuota",
      "description": "A resource budget.",
      "type": "object"
    },
    "ListNetworksResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "networks": {
          "description": "The list of networks.",
          "items": {
            "$ref": "Network"
          },
          "type": "array"
        }
      },
      "id": "ListNetworksResponse",
      "description": "Response message containing the list of networks."
    },
    "LogicalNetworkInterface": {
      "description": "Each logical network interface is effectively a network and IP pair.",
      "properties": {
        "network": {
          "description": "Name of the network",
          "type": "string"
        },
        "networkType": {
          "description": "Type of network.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ]
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address in the network"
        }
      },
      "type": "object",
      "id": "LogicalNetworkInterface"
    },
    "SubmitProvisioningConfigResponse": {
      "id": "SubmitProvisioningConfigResponse",
      "properties": {
        "provisioningConfig": {
          "description": "The submitted provisioning config.",
          "$ref": "ProvisioningConfig"
        }
      },
      "type": "object",
      "description": "Response for SubmitProvisioningConfig."
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "id": "ResetInstanceRequest",
      "properties": {},
      "type": "object"
    },
    "VRF": {
      "description": "A network VRF.",
      "properties": {
        "qosPolicy": {
          "$ref": "QosPolicy",
          "description": "The QOS policy applied to this VRF. The value is only meaningful when all the vlan attachments have the same QoS. This field should not be used for new integrations, use vlan attachment level qos instead. The field is left for backward-compatibility."
        },
        "name": {
          "type": "string",
          "description": "The name of the VRF."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "description": "The possible state of VRF."
        },
        "vlanAttachments": {
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          }
        }
      },
      "id": "VRF",
      "type": "object"
    },
    "ListProvisioningQuotasResponse": {
      "description": "Response message for the list of provisioning quotas.",
      "type": "object",
      "properties": {
        "provisioningQuotas": {
          "type": "array",
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "ListProvisioningQuotasResponse"
    },
    "ListNfsSharesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "nfsShares": {
          "type": "array",
          "description": "The list of NFS shares.",
          "items": {
            "$ref": "NfsShare"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListNfsSharesResponse",
      "description": "Response message containing the list of NFS shares."
    },
    "NetworkConfig": {
      "type": "object",
      "id": "NetworkConfig",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network, either Client or Private.",
          "type": "string"
        },
        "cidr": {
          "type": "string",
          "description": "CIDR range of the network."
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the network config."
        },
        "bandwidth": {
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ]
        },
        "serviceCidr": {
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ],
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "description": "Service CIDR, if any.",
          "type": "string"
        },
        "vlanAttachments": {
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).",
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array"
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "jumboFramesEnabled": {
          "description": "The JumboFramesEnabled option for customer to set.",
          "type": "boolean"
        }
      },
      "description": "Configuration parameters for a new network."
    },
    "ListInstancesResponse": {
      "id": "ListInstancesResponse",
      "type": "object",
      "description": "Response message for the list of servers.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "description": "The list of servers.",
          "type": "array",
          "items": {
            "$ref": "Instance"
          }
        }
      }
    },
    "LunRange": {
      "id": "LunRange",
      "type": "object",
      "properties": {
        "sizeGb": {
          "description": "The requested size of each LUN, in GB.",
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "format": "int32",
          "description": "Number of LUNs to create.",
          "type": "integer"
        }
      },
      "description": "A LUN(Logical Unit Number) range."
    },
    "VolumeConfig": {
      "properties": {
        "nfsExports": {
          "items": {
            "$ref": "NfsExport"
          },
          "type": "array",
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS."
        },
        "protocol": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "description": "Volume protocol."
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "performanceTier": {
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_DEDICATED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Dedicated (assigned) aggregates."
          ],
          "description": "Performance tier of the Volume. Default is SHARED."
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "lunRanges": {
          "items": {
            "$ref": "LunRange"
          },
          "type": "array",
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC."
        },
        "sizeGb": {
          "description": "The requested size of this volume, in GB.",
          "type": "integer",
          "format": "int32"
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC."
        },
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the volume config."
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "type": {
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "description": "The type of this Volume."
        }
      },
      "description": "Configuration parameters for a new volume.",
      "id": "VolumeConfig",
      "type": "object"
    },
    "AllowedClient": {
      "type": "object",
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient",
      "properties": {
        "nfsPath": {
          "type": "string",
          "description": "Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like \"10.0.0.0:/g123456789-nfs001\"",
          "readOnly": true
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "mountPermissions": {
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ],
          "type": "string",
          "description": "Mount permissions."
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        },
        "noRootSquash": {
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.",
          "type": "boolean"
        },
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "network": {
          "type": "string",
          "description": "The network the access point sits on."
        },
        "shareIp": {
          "description": "Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationMetadata": {
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user requested the cancellation of the operation. Operations that have been successfully cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the action executed by the operation.",
          "type": "string"
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used with the operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents the metadata from a long-running operation.",
      "id": "OperationMetadata"
    },
    "ProvisioningQuota": {
      "id": "ProvisioningQuota",
      "description": "A provisioning quota for a given project.",
      "properties": {
        "serverCount": {
          "format": "int64",
          "description": "Server count.",
          "type": "string"
        },
        "storageGib": {
          "type": "string",
          "format": "int64",
          "description": "Storage size (GB)."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the provisioning quota.",
          "type": "string"
        },
        "networkBandwidth": {
          "format": "int64",
          "description": "Network bandwidth, Gbps",
          "type": "string"
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "assetType": {
          "description": "The asset type of this provisioning quota.",
          "type": "string",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ],
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ]
        },
        "availableCount": {
          "description": "The available count of the provisioning quota.",
          "type": "integer",
          "format": "int32"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        }
      },
      "type": "object"
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "type": "object",
      "description": "Configuration parameters for a new instance.",
      "properties": {
        "accountNetworksEnabled": {
          "description": "If true networks can be from different projects of the same vendor account.",
          "type": "boolean"
        },
        "privateNetwork": {
          "description": "Private network address, if any. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          },
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true."
        },
        "networkTemplate": {
          "description": "Server network template name. Filled if InstanceConfig.multivlan_config is true.",
          "type": "string"
        },
        "hyperthreading": {
          "description": "Whether the instance should be provisioned with Hyperthreading enabled.",
          "type": "boolean"
        },
        "clientNetwork": {
          "description": "Client network address. Filled if InstanceConfig.multivlan_config is false.",
          "$ref": "NetworkAddress"
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "networkConfig": {
          "enum": [
            "NETWORKCONFIG_UNSPECIFIED",
            "SINGLE_VLAN",
            "MULTI_VLAN"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified network configuration.",
            "Instance part of single client network and single private network.",
            "Instance part of multiple (or single) client networks and private networks."
          ],
          "description": "The type of network configuration on the instance."
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team .",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance config.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        }
      }
    },
    "NetworkUsage": {
      "properties": {
        "usedIps": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "All used IP addresses in this network."
        },
        "network": {
          "description": "Network.",
          "$ref": "Network"
        }
      },
      "id": "NetworkUsage",
      "description": "Network with all used IP addresses.",
      "type": "object"
    },
    "Volume": {
      "description": "A storage volume.",
      "type": "object",
      "properties": {
        "snapshotAutoDeleteBehavior": {
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "description": "The behavior to use when snapshot reserved space is full.",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ],
          "type": "string"
        },
        "currentSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink."
        },
        "notes": {
          "type": "string",
          "description": "Input only. User-specified notes for new Volume. Used to provision Volumes that require manual intervention."
        },
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size of this storage volume, in GiB.",
          "format": "int64"
        },
        "pod": {
          "type": "string",
          "description": "Immutable. Pod name."
        },
        "remainingSpaceGib": {
          "type": "string",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots.",
          "format": "int64"
        },
        "bootVolume": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this volume is a boot volume. A boot volume is one which contains a boot LUN."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "snapshotSchedulePolicy": {
          "type": "string",
          "description": "The name of the snapshot schedule policy in use for this volume, if any."
        },
        "protocol": {
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Value is not specified.",
            "Fibre Channel protocol.",
            "NFS protocol means Volume is a NFS Share volume. Such volumes cannot be manipulated via Volumes API."
          ],
          "description": "Output only. Storage protocol for the Volume.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "FIBRE_CHANNEL",
            "NFS"
          ]
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ],
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "type": "string"
        },
        "performanceTier": {
          "enumDescriptions": [
            "Value is not specified.",
            "Regular volumes, shared aggregates.",
            "Dedicated (assigned) aggregates."
          ],
          "description": "Immutable. Performance tier of the Volume. Default is SHARED.",
          "enum": [
            "VOLUME_PERFORMANCE_TIER_UNSPECIFIED",
            "VOLUME_PERFORMANCE_TIER_SHARED",
            "VOLUME_PERFORMANCE_TIER_DEDICATED"
          ],
          "type": "string"
        },
        "emergencySizeGib": {
          "type": "string",
          "description": "Additional emergency size that was requested for this Volume, in GiB. current_size_gib includes this value.",
          "format": "int64"
        },
        "snapshotReservationDetail": {
          "$ref": "SnapshotReservationDetail",
          "description": "Details about snapshot space reservation and usage on the storage volume."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string"
        },
        "autoGrownSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0."
        },
        "maxSizeGib": {
          "description": "Maximum size volume can be expanded to in case of evergency, in GiB.",
          "type": "string",
          "format": "int64"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "description": "The storage type for this volume."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "originallyRequestedSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "Originally requested size, in GiB."
        }
      },
      "id": "Volume"
    },
    "ProvisioningConfig": {
      "id": "ProvisioningConfig",
      "properties": {
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "state": {
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified.",
            "ProvisioningConfig was in the provisioning state. Initially this state comes from the work order table in big query when SNOW is used. Later this field can be set by the work order API.",
            "ProvisioningConfig was provisioned, meaning the resources exist.",
            "ProvisioningConfig was validated. A validation tool will be run to set this state.",
            "ProvisioningConfig was canceled.",
            "The request is submitted for provisioning, with error return."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED",
            "PROVISIONING",
            "PROVISIONED",
            "VALIDATED",
            "CANCELLED",
            "FAILED"
          ],
          "readOnly": true,
          "description": "Output only. State of ProvisioningConfig.",
          "type": "string"
        },
        "networks": {
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array"
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Last update timestamp."
        },
        "vpcScEnabled": {
          "type": "boolean",
          "description": "If true, VPC SC is enabled for the cluster."
        },
        "ticketId": {
          "description": "A generated ticket id to track provisioning request.",
          "type": "string"
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        },
        "cloudConsoleUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. URI to Cloud Console UI view of this provisioning config."
        },
        "statusMessage": {
          "type": "string",
          "description": "Optional status messages associated with the FAILED state."
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "InstanceConfig"
          },
          "description": "Instances to be created."
        },
        "name": {
          "description": "Output only. The name of the provisioning config.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A provisioning configuration."
    },
    "ResizeVolumeRequest": {
      "id": "ResizeVolumeRequest",
      "description": "Request for emergency resize Volume.",
      "type": "object",
      "properties": {
        "sizeGib": {
          "type": "string",
          "description": "New Volume size, in GiB.",
          "format": "int64"
        }
      }
    },
    "NetworkAddress": {
      "properties": {
        "existingNetworkId": {
          "type": "string",
          "description": "Name of the existing network to use."
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        },
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NetworkAddress",
      "description": "A network."
    },
    "NfsExport": {
      "id": "NfsExport",
      "type": "object",
      "description": "A NFS export entry.",
      "properties": {
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        },
        "machineId": {
          "type": "string",
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs."
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "permissions": {
          "description": "Export permissions.",
          "type": "string",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ]
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        }
      }
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "Network": {
      "properties": {
        "cidr": {
          "description": "The cidr of the Network.",
          "type": "string"
        },
        "vrf": {
          "$ref": "VRF",
          "description": "The vrf for the Network."
        },
        "mountPoints": {
          "description": "Input only. List of mount points to attach the network to.",
          "type": "array",
          "items": {
            "$ref": "NetworkMountPoint"
          }
        },
        "macAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of physical interfaces."
        },
        "pod": {
          "type": "string",
          "description": "Output only. Pod name.",
          "readOnly": true
        },
        "reservations": {
          "items": {
            "$ref": "NetworkAddressReservation"
          },
          "description": "List of IP address reservations in this network. When updating this field, an error will be generated if a reservation conflicts with an IP address already allocated to a physical server.",
          "type": "array"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "description": "The type of this network."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        },
        "jumboFramesEnabled": {
          "description": "Whether network uses standard frames or jumbo ones.",
          "type": "boolean"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED",
            "DEPROVISIONING"
          ],
          "description": "The Network state.",
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned.",
            "The Network is being deprovisioned."
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "id": {
          "type": "string",
          "description": "An identifier for the `Network`, generated by the backend."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        }
      },
      "id": "Network",
      "type": "object",
      "description": "A Network."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "type": "object"
    },
    "ListLunsResponse": {
      "type": "object",
      "description": "Response message containing the list of storage volume luns.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "luns": {
          "description": "The list of luns.",
          "type": "array",
          "items": {
            "$ref": "Lun"
          }
        }
      },
      "id": "ListLunsResponse"
    },
    "GoogleCloudBaremetalsolutionV2LogicalInterface": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Interface name. This is of syntax or and forms part of the network template name."
        },
        "interfaceIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated."
        },
        "logicalNetworkInterfaces": {
          "description": "List of logical network interfaces within a logical interface.",
          "type": "array",
          "items": {
            "$ref": "LogicalNetworkInterface"
          }
        }
      },
      "description": "Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.",
      "id": "GoogleCloudBaremetalsolutionV2LogicalInterface"
    },
    "StartInstanceRequest": {
      "type": "object",
      "description": "Message requesting to start a server.",
      "properties": {},
      "id": "StartInstanceRequest"
    },
    "SnapshotReservationDetail": {
      "properties": {
        "reservedSpaceUsedPercent": {
          "format": "int32",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "type": "integer"
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "format": "int64",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space."
        },
        "reservedSpaceGib": {
          "type": "string",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "format": "int64"
        },
        "reservedSpacePercent": {
          "type": "integer",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true.",
          "format": "int32"
        }
      },
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "id": "SnapshotReservationDetail",
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "type": "object",
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "description": "Networks with IPs.",
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array"
        }
      }
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "items": {
            "$ref": "OSImage"
          },
          "type": "array",
          "description": "The OS images available."
        }
      },
      "description": "Response with all provisioning settings.",
      "id": "FetchInstanceProvisioningSettingsResponse",
      "type": "object"
    },
    "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface": {
      "description": "Logical interface.",
      "id": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface",
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "If true, interface must have network connected."
        },
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate. This is of syntax or and forms part of the network template name.",
          "type": "string"
        },
        "type": {
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface type."
          ],
          "description": "Interface type."
        }
      }
    },
    "ListVolumesResponse": {
      "properties": {
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array",
          "description": "The list of storage volumes."
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListVolumesResponse",
      "description": "Response message containing the list of storage volumes."
    },
    "VlanAttachment": {
      "properties": {
        "routerIp": {
          "type": "string",
          "description": "The router IP of the attachment."
        },
        "id": {
          "type": "string",
          "description": "Immutable. The identifier of the attachment within vrf."
        },
        "peerVlanId": {
          "format": "int64",
          "type": "string",
          "description": "The peer vlan ID of the attachment."
        },
        "qosPolicy": {
          "description": "The QOS policy applied to this VLAN attachment. This value should be preferred to using qos at vrf level.",
          "$ref": "QosPolicy"
        },
        "pairingKey": {
          "type": "string",
          "description": "Input only. Pairing key."
        },
        "peerIp": {
          "type": "string",
          "description": "The peer IP of the attachment."
        }
      },
      "type": "object",
      "description": "VLAN attachment details.",
      "id": "VlanAttachment"
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServerNetworkTemplate": {
      "id": "ServerNetworkTemplate",
      "description": "Network template.",
      "type": "object",
      "properties": {
        "logicalInterfaces": {
          "description": "Logical interfaces.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of \"bond\" or \"nic\".",
          "readOnly": true,
          "type": "string"
        },
        "applicableInstanceTypes": {
          "description": "Instance types this template is applicable to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IntakeVlanAttachment": {
      "id": "IntakeVlanAttachment",
      "properties": {
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        },
        "id": {
          "description": "Identifier of the VLAN attachment.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A GCP vlan attachment."
    },
    "NetworkMountPoint": {
      "id": "NetworkMountPoint",
      "properties": {
        "instance": {
          "type": "string",
          "description": "Instance to attach network to."
        },
        "defaultGateway": {
          "type": "boolean",
          "description": "Network should be a default gateway."
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip address of the server."
        },
        "logicalInterface": {
          "type": "string",
          "description": "Logical interface to detach from."
        }
      },
      "type": "object",
      "description": "Mount point for a network."
    },
    "NfsShare": {
      "properties": {
        "volume": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The underlying volume of the share. Created automatically during provisioning."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "nfsShareId": {
          "readOnly": true,
          "description": "Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.",
          "type": "string"
        },
        "id": {
          "description": "Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "Output only. The state of the NFS share.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED",
            "CREATING",
            "UPDATING",
            "DELETING"
          ],
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned.",
            "The NFS Share is being created.",
            "The NFS Share is being updated.",
            "The NFS Share has been requested to be deleted."
          ],
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The name of the NFS share."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ],
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "description": "Immutable. The storage type of the underlying volume.",
          "type": "string"
        },
        "allowedClients": {
          "items": {
            "$ref": "AllowedClient"
          },
          "description": "List of allowed access points.",
          "type": "array"
        },
        "requestedSizeGib": {
          "type": "string",
          "description": "The requested size, in GiB.",
          "format": "int64"
        }
      },
      "id": "NfsShare",
      "type": "object",
      "description": "An NFS share."
    },
    "DetachLunRequest": {
      "description": "Message for detach specific LUN from an Instance.",
      "properties": {
        "skipReboot": {
          "description": "If true, performs lun unmapping without instance reboot.",
          "type": "boolean"
        },
        "lun": {
          "description": "Required. Name of the Lun to detach.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DetachLunRequest"
    },
    "Operation": {
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "id": "SubmitProvisioningConfigRequest",
      "properties": {
        "provisioningConfig": {
          "description": "Required. The ProvisioningConfig to create.",
          "$ref": "ProvisioningConfig"
        },
        "email": {
          "type": "string",
          "description": "Optional. Email provided to send a confirmation with provisioning config to."
        }
      }
    },
    "NetworkAddressReservation": {
      "id": "NetworkAddressReservation",
      "description": "A reservation of one or more addresses in a network.",
      "type": "object",
      "properties": {
        "startAddress": {
          "description": "The first address of this reservation block. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "A note about this reservation, intended for human consumption."
        },
        "endAddress": {
          "description": "The last address of this reservation block, inclusive. I.e., for cases when reservations are only single addresses, end_address and start_address will be the same. Must be specified as a single IPv4 address, e.g. 10.1.2.2.",
          "type": "string"
        }
      }
    },
    "Instance": {
      "properties": {
        "state": {
          "description": "Output only. The state of the server.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Create a time stamp.",
          "type": "string"
        },
        "interactiveSerialConsoleEnabled": {
          "readOnly": true,
          "description": "Output only. True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An identifier for the `Instance`, generated by the backend."
        },
        "machineType": {
          "type": "string",
          "description": "Immutable. The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "networkTemplate": {
          "description": "Instance network template name. For eg, bondaa-bondaa, bondab-nic, etc. Generally, the template name follows the syntax of \"bond\" or \"nic\".",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Update a time stamp.",
          "format": "google-datetime"
        },
        "pod": {
          "description": "Immutable. Pod name. Pod is an independent part of infrastructure. Instance can be connected to the assets (networks, volumes) allocated in the same pod only.",
          "type": "string"
        },
        "luns": {
          "items": {
            "$ref": "Lun"
          },
          "description": "Immutable. List of LUNs associated with this server.",
          "type": "array"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "networks": {
          "description": "Output only. List of networks associated with this server.",
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "readOnly": true
        },
        "loginInfo": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Text field about info for logging in."
        },
        "name": {
          "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string"
        },
        "logicalInterfaces": {
          "type": "array",
          "description": "List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. For the non-multivlan configurations (for eg, existing servers) that use existing default network template (bondaa-bondaa), both the Instance.networks field and the Instance.logical_interfaces fields will be filled to ensure backward compatibility. For the others, only Instance.logical_interfaces will be filled.",
          "items": {
            "$ref": "GoogleCloudBaremetalsolutionV2LogicalInterface"
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "Input only. List of Volumes to attach to this Instance on creation. This field won't be populated in Get/List responses."
        },
        "osImage": {
          "type": "string",
          "description": "The OS image currently installed on the server."
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        }
      },
      "description": "A server.",
      "id": "Instance",
      "type": "object"
    },
    "QosPolicy": {
      "type": "object",
      "properties": {
        "bandwidthGbps": {
          "format": "double",
          "type": "number",
          "description": "The bandwidth permitted by the QOS policy, in gbps."
        }
      },
      "description": "QOS policy parameters.",
      "id": "QosPolicy"
    },
    "StopInstanceRequest": {
      "description": "Message requesting to stop a server.",
      "id": "StopInstanceRequest",
      "type": "object",
      "properties": {}
    },
    "Lun": {
      "type": "object",
      "description": "A storage volume logical unit number (LUN).",
      "properties": {
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "storageVolume": {
          "type": "string",
          "description": "Display the storage volume for this LUN."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the LUN."
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The size of this LUN, in gigabytes."
        },
        "id": {
          "description": "An identifier for the LUN, generated by the backend.",
          "type": "string"
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "type": "string",
          "description": "The storage type for this LUN.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ]
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "multiprotocolType": {
          "type": "string",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ]
        },
        "state": {
          "type": "string",
          "description": "The state of this storage volume.",
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ]
        }
      },
      "id": "Lun"
    }
  },
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "servicePath": "",
  "rootUrl": "https://baremetalsolution.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "provisioningConfigs": {
              "methods": {
                "submit": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Submit a provisiong configuration for a given project.",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v2/{+parent}/provisioningConfigs:submit"
                },
                "create": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "parameters": {
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningConfig."
                    }
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create new ProvisioningConfig.",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/provisioningConfigs"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "description": "Update existing ProvisioningConfig.",
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "email": {
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The name of the provisioning config."
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  }
                },
                "get": {
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get ProvisioningConfig by name.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the ProvisioningConfig.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "required": true
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/.*$",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "path": "v2/{+name}",
                  "description": "Get details about an operation. This method used only to work around CCFE lack of passthrough LRO support (b/221498758).",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "baremetalsolution.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "instances": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default."
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results from the server."
                    }
                  },
                  "response": {
                    "$ref": "ListInstancesResponse"
                  },
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/instances",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "description": "List servers in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "description": "Get details about a single server.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Instance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}"
                },
                "start": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "path": "v2/{+name}:start",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "description": "Starts a server that was shutdown.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST"
                },
                "create": {
                  "path": "v2/{+parent}/instances",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent project and location.",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "description": "Create an Instance.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "id": "baremetalsolution.projects.locations.instances.create"
                },
                "detachLun": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.detachLun",
                  "request": {
                    "$ref": "DetachLunRequest"
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "path": "v2/{+instance}:detachLun",
                  "description": "Detach LUN from Instance.",
                  "parameters": {
                    "instance": {
                      "description": "Required. Name of the instance.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:detachLun",
                  "httpMethod": "POST"
                },
                "patch": {
                  "description": "Update details of a single server.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "path": "v2/{+name}",
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The currently supported fields are: `labels` `hyperthreading_enabled` `os_image`",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Immutable. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "stop": {
                  "path": "v2/{+name}:stop",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:stop",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Stop a running server.",
                  "request": {
                    "$ref": "StopInstanceRequest"
                  },
                  "httpMethod": "POST"
                },
                "reset": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "path": "v2/{+name}:reset",
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset"
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "parameters": {
                    "location": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent project and location containing the ProvisioningSettings."
                    }
                  },
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "location"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch"
                }
              }
            },
            "nfsShares": {
              "methods": {
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the NFS share to delete."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.delete",
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Delete an NFS share. The underlying volume is automatically deleted."
                },
                "list": {
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "description": "List NFS shares.",
                  "path": "v2/{+parent}/nfsShares",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "id": "baremetalsolution.projects.locations.nfsShares.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single NFS share.",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels` `allowed_clients`",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Immutable. The name of the NFS share.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single NFS share.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "id": "baremetalsolution.projects.locations.nfsShares.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "NfsShare"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent project and location.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "description": "Create an NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.create",
                  "path": "v2/{+parent}/nfsShares"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "description": "List the budget details to provision resources on a given project.",
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "required": true
                    }
                  },
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/provisioningQuotas",
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas"
                }
              }
            },
            "networks": {
              "methods": {
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single network.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the resource.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Network"
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Network"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$"
                    },
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`, `reservations`",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.networks.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "description": "Update details of a single network."
                },
                "list": {
                  "path": "v2/{+parent}/networks",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListNetworksRequest.",
                      "location": "path",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List network in a given project and location.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "httpMethod": "GET"
                },
                "listNetworkUsage": {
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "parameters": {
                    "location": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value (project and location).",
                      "type": "string"
                    }
                  },
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  }
                }
              }
            },
            "volumes": {
              "methods": {
                "resize": {
                  "parameters": {
                    "volume": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Volume to resize.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "ResizeVolumeRequest"
                  },
                  "path": "v2/{+volume}:resize",
                  "httpMethod": "POST",
                  "id": "baremetalsolution.projects.locations.volumes.resize",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}:resize",
                  "parameterOrder": [
                    "volume"
                  ],
                  "description": "Emergency Volume resize."
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Volume"
                  },
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                    }
                  },
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "description": "Get details of a single storage volume."
                },
                "patch": {
                  "description": "Update details of a single storage volume.",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: 'labels'",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "request": {
                    "$ref": "Volume"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "description": "List storage volumes in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "path": "v2/{+parent}/volumes",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "parameters": {
                    "filter": {
                      "description": "List filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Parent value for ListVolumesRequest."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    }
                  }
                }
              },
              "resources": {
                "luns": {
                  "methods": {
                    "list": {
                      "description": "List storage volume luns for given storage volume.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. Parent value for ListLunsRequest.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "path": "v2/{+parent}/luns",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "id": "baremetalsolution.projects.locations.volumes.luns.list"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the resource.",
                          "location": "path"
                        }
                      },
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Lun"
                      },
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "id": "baremetalsolution.projects.locations.get",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "path": "v2/{+name}",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "baremetalsolution.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "path": "v2/{+name}/locations",
              "flatPath": "v2/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "name": "baremetalsolution",
  "ownerDomain": "google.com",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "id": "baremetalsolution:v2",
  "version_module": true,
  "discoveryVersion": "v1"
}

{
  "name": "baremetalsolution",
  "revision": "20220405",
  "title": "Bare Metal Solution API",
  "ownerName": "Google",
  "version": "v2",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/bare-metal",
  "basePath": "",
  "protocol": "rest",
  "schemas": {
    "ListNfsSharesResponse": {
      "type": "object",
      "id": "ListNfsSharesResponse",
      "description": "Response message containing the list of NFS shares.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nfsShares": {
          "items": {
            "$ref": "NfsShare"
          },
          "type": "array",
          "description": "The list of NFS shares."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      }
    },
    "NetworkUsage": {
      "properties": {
        "network": {
          "description": "Network.",
          "$ref": "Network"
        },
        "usedIps": {
          "items": {
            "type": "string"
          },
          "description": "All used IP addresses in this network.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Network with all used IP addresses.",
      "id": "NetworkUsage"
    },
    "ServerNetworkTemplate": {
      "description": "Network template.",
      "properties": {
        "logicalInterfaces": {
          "type": "array",
          "items": {
            "$ref": "LogicalInterface"
          },
          "description": "Logical interfaces."
        },
        "applicableInstanceTypes": {
          "description": "Instance types this template is applicable to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Template's unique name."
        }
      },
      "id": "ServerNetworkTemplate",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse",
      "type": "object"
    },
    "IntakeVlanAttachment": {
      "properties": {
        "id": {
          "description": "Identifier of the VLAN attachment.",
          "type": "string"
        },
        "pairingKey": {
          "description": "Attachment pairing key.",
          "type": "string"
        }
      },
      "description": "A GCP vlan attachment.",
      "type": "object",
      "id": "IntakeVlanAttachment"
    },
    "InstanceQuota": {
      "description": "A resource budget.",
      "id": "InstanceQuota",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The name of the instance quota.",
          "readOnly": true
        },
        "availableMachineCount": {
          "format": "int32",
          "description": "Number of machines than can be created for the given location and instance_type.",
          "type": "integer"
        },
        "location": {
          "description": "Location where the quota applies.",
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Lun": {
      "id": "Lun",
      "properties": {
        "id": {
          "type": "string",
          "description": "An identifier for the LUN, generated by the backend."
        },
        "sizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The size of this LUN, in gigabytes."
        },
        "multiprotocolType": {
          "description": "The LUN multiprotocol type ensures the characteristics of the LUN are optimized for each operating system.",
          "type": "string",
          "enumDescriptions": [
            "Server has no OS specified.",
            "Server with Linux OS."
          ],
          "enum": [
            "MULTIPROTOCOL_TYPE_UNSPECIFIED",
            "LINUX"
          ]
        },
        "bootLun": {
          "type": "boolean",
          "description": "Display if this LUN is a boot LUN."
        },
        "shareable": {
          "description": "Display if this LUN can be shared between multiple physical servers.",
          "type": "boolean"
        },
        "state": {
          "enumDescriptions": [
            "The LUN is in an unknown state.",
            "The LUN is being created.",
            "The LUN is being updated.",
            "The LUN is ready for use.",
            "The LUN has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "UPDATING",
            "READY",
            "DELETING"
          ],
          "type": "string",
          "description": "The state of this storage volume."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the LUN."
        },
        "storageVolume": {
          "description": "Display the storage volume for this LUN.",
          "type": "string"
        },
        "wwid": {
          "type": "string",
          "description": "The WWID for this LUN."
        },
        "storageType": {
          "enumDescriptions": [
            "The storage type for this LUN is unknown.",
            "This storage type for this LUN is SSD.",
            "This storage type for this LUN is HDD."
          ],
          "description": "The storage type for this LUN.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string"
        }
      },
      "description": "A storage volume logical unit number (LUN).",
      "type": "object"
    },
    "NetworkConfig": {
      "properties": {
        "serviceCidr": {
          "enum": [
            "SERVICE_CIDR_UNSPECIFIED",
            "DISABLED",
            "HIGH_26",
            "HIGH_27",
            "HIGH_28"
          ],
          "type": "string",
          "description": "Service CIDR, if any.",
          "enumDescriptions": [
            "Unspecified value.",
            "Services are disabled for the given network.",
            "Use the highest /26 block of the network to host services.",
            "Use the highest /27 block of the network to host services.",
            "Use the highest /28 block of the network to host services."
          ]
        },
        "vlanSameProject": {
          "description": "Whether the VLAN attachment pair is located in the same project.",
          "type": "boolean"
        },
        "cidr": {
          "description": "CIDR range of the network.",
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "type": {
          "description": "The type of this network, either Client or Private.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, that is a network peered to a GCP VPC.",
            "Private network, that is a network local to the BMS POD."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "vlanAttachments": {
          "items": {
            "$ref": "IntakeVlanAttachment"
          },
          "type": "array",
          "description": "List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan)."
        },
        "bandwidth": {
          "enumDescriptions": [
            "Unspecified value.",
            "1 Gbps.",
            "2 Gbps.",
            "5 Gbps.",
            "10 Gbps."
          ],
          "description": "Interconnect bandwidth. Set only when type is CLIENT.",
          "enum": [
            "BANDWIDTH_UNSPECIFIED",
            "BW_1_GBPS",
            "BW_2_GBPS",
            "BW_5_GBPS",
            "BW_10_GBPS"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The name of the network config."
        },
        "gcpService": {
          "type": "string",
          "description": "The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning."
        }
      },
      "description": "Configuration parameters for a new network.",
      "id": "NetworkConfig",
      "type": "object"
    },
    "ListVolumeSnapshotsResponse": {
      "properties": {
        "volumeSnapshots": {
          "description": "The list of storage volumes.",
          "type": "array",
          "items": {
            "$ref": "VolumeSnapshot"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "description": "Response message containing the list of storage volume snapshots.",
      "id": "ListVolumeSnapshotsResponse",
      "type": "object"
    },
    "ListNetworksResponse": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "description": "The list of networks.",
          "items": {
            "$ref": "Network"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        }
      },
      "description": "Response message containing the list of networks.",
      "id": "ListNetworksResponse"
    },
    "VolumeConfig": {
      "type": "object",
      "id": "VolumeConfig",
      "properties": {
        "protocol": {
          "enumDescriptions": [
            "Unspecified value.",
            "Fibre channel.",
            "Network file system."
          ],
          "description": "Volume protocol.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "PROTOCOL_FC",
            "PROTOCOL_NFS"
          ],
          "type": "string"
        },
        "id": {
          "description": "A transient unique identifier to identify a volume within an ProvisioningConfig request.",
          "type": "string"
        },
        "sizeGb": {
          "format": "int32",
          "description": "The requested size of this volume, in GB.",
          "type": "integer"
        },
        "machineIds": {
          "items": {
            "type": "string"
          },
          "description": "Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.",
          "type": "array"
        },
        "nfsExports": {
          "type": "array",
          "description": "NFS exports. Set only when protocol is PROTOCOL_NFS.",
          "items": {
            "$ref": "NfsExport"
          }
        },
        "lunRanges": {
          "description": "LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.",
          "type": "array",
          "items": {
            "$ref": "LunRange"
          }
        },
        "name": {
          "description": "Output only. The name of the volume config.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of this Volume.",
          "enumDescriptions": [
            "The unspecified type.",
            "This Volume is on flash.",
            "This Volume is on disk."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "FLASH",
            "DISK"
          ],
          "type": "string"
        },
        "userNote": {
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).",
          "type": "string"
        },
        "snapshotsEnabled": {
          "description": "Whether snapshots should be enabled.",
          "type": "boolean"
        },
        "gcpService": {
          "description": "The GCP service of the storage volume. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.",
          "type": "string"
        }
      },
      "description": "Configuration parameters for a new volume."
    },
    "SnapshotSchedulePolicy": {
      "type": "object",
      "description": "A snapshot schedule policy.",
      "properties": {
        "schedules": {
          "type": "array",
          "description": "The snapshot schedules contained in this policy. You can specify a maximum of 5 schedules.",
          "items": {
            "$ref": "Schedule"
          }
        },
        "id": {
          "type": "string",
          "description": "An identifier for the snapshot schedule policy, generated by the backend."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "type": "string",
          "description": "The state of the snapshot schedule policy.",
          "enumDescriptions": [
            "The policy is in an unknown state.",
            "The policy is been provisioned."
          ]
        },
        "description": {
          "description": "The description of the snapshot schedule policy.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the snapshot schedule policy.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels as key value pairs."
        }
      },
      "id": "SnapshotSchedulePolicy"
    },
    "InstanceConfig": {
      "id": "InstanceConfig",
      "properties": {
        "instanceType": {
          "description": "Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "hyperthreading": {
          "type": "boolean",
          "description": "Whether the instance should be provisioned with Hyperthreading enabled."
        },
        "osImage": {
          "type": "string",
          "description": "OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "userNote": {
          "type": "string",
          "description": "User note field, it can be used by customers to add additional information for the BMS Ops team ."
        },
        "clientNetwork": {
          "$ref": "NetworkAddress",
          "description": "Client network address."
        },
        "accountNetworksEnabled": {
          "description": "If true networks can be from different projects of the same vendor account.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "description": "A transient unique identifier to idenfity an instance within an ProvisioningConfig request."
        },
        "privateNetwork": {
          "description": "Private network address, if any.",
          "$ref": "NetworkAddress"
        },
        "name": {
          "description": "Output only. The name of the instance config.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "Configuration parameters for a new instance."
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Location"
    },
    "ProvisioningQuota": {
      "id": "ProvisioningQuota",
      "type": "object",
      "properties": {
        "networkBandwidth": {
          "format": "int64",
          "description": "Network bandwidth, Gbps",
          "type": "string"
        },
        "assetType": {
          "enumDescriptions": [
            "The unspecified type.",
            "The server asset type.",
            "The storage asset type.",
            "The network asset type."
          ],
          "type": "string",
          "description": "The asset type of this provisioning quota.",
          "enum": [
            "ASSET_TYPE_UNSPECIFIED",
            "ASSET_TYPE_SERVER",
            "ASSET_TYPE_STORAGE",
            "ASSET_TYPE_NETWORK"
          ]
        },
        "location": {
          "description": "The specific location of the provisioining quota.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The name of the provisioning quota.",
          "type": "string",
          "readOnly": true
        },
        "availableCount": {
          "type": "integer",
          "description": "The available count of the provisioning quota.",
          "format": "int32"
        },
        "gcpService": {
          "type": "string",
          "description": "The gcp service of the provisioning quota."
        },
        "instanceQuota": {
          "description": "Instance quota.",
          "$ref": "InstanceQuota"
        },
        "storageGib": {
          "format": "int64",
          "description": "Storage size (GB).",
          "type": "string"
        },
        "serverCount": {
          "type": "string",
          "description": "Server count.",
          "format": "int64"
        }
      },
      "description": "A provisioning quota for a given project."
    },
    "Instance": {
      "type": "object",
      "description": "A server.",
      "properties": {
        "id": {
          "description": "An identifier for the `Instance`, generated by the backend.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. Update a time stamp.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
          "type": "string",
          "readOnly": true
        },
        "hyperthreadingEnabled": {
          "description": "True if you enable hyperthreading for the server, otherwise false. The default value is false.",
          "type": "boolean"
        },
        "machineType": {
          "description": "The server type. [Available server types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)",
          "type": "string"
        },
        "luns": {
          "type": "array",
          "items": {
            "$ref": "Lun"
          },
          "description": "List of LUNs associated with this server."
        },
        "networks": {
          "items": {
            "$ref": "Network"
          },
          "type": "array",
          "description": "List of networks associated with this server."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "DELETED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The server is in an unknown state.",
            "The server is being provisioned.",
            "The server is running.",
            "The server has been deleted."
          ],
          "description": "The state of the server."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Create a time stamp.",
          "readOnly": true,
          "type": "string"
        },
        "interactiveSerialConsoleEnabled": {
          "description": "True if the interactive serial console feature is enabled for the instance, false otherwise. The default value is false.",
          "type": "boolean"
        }
      },
      "id": "Instance"
    },
    "ResetInstanceRequest": {
      "description": "Message requesting to reset a server.",
      "properties": {},
      "type": "object",
      "id": "ResetInstanceRequest"
    },
    "VolumeSnapshot": {
      "id": "VolumeSnapshot",
      "type": "object",
      "description": "Snapshot registered for a given storage volume.",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The creation time of the storage volume snapshot.",
          "type": "string",
          "format": "google-datetime"
        },
        "id": {
          "description": "An identifier for the snapshot, generated by the backend.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The name of the storage volume snapshot.",
          "type": "string"
        },
        "storageVolume": {
          "description": "The storage volume this snapshot belongs to.",
          "type": "string"
        },
        "sizeBytes": {
          "description": "The size of the storage volume snapshot, in bytes.",
          "format": "int64",
          "type": "string"
        },
        "description": {
          "description": "The description of the storage volume snapshot.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "NfsExport": {
      "id": "NfsExport",
      "type": "object",
      "properties": {
        "machineId": {
          "description": "Either a single machine, identified by an ID, or a comma-separated list of machine IDs.",
          "type": "string"
        },
        "networkId": {
          "description": "Network to use to publish the export.",
          "type": "string"
        },
        "permissions": {
          "type": "string",
          "enum": [
            "PERMISSIONS_UNSPECIFIED",
            "READ_ONLY",
            "READ_WRITE"
          ],
          "enumDescriptions": [
            "Unspecified value.",
            "Read-only permission.",
            "Read-write permission."
          ],
          "description": "Export permissions."
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "cidr": {
          "description": "A CIDR range.",
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "allowDev": {
          "description": "Allow dev flag in NfsShare AllowedClientsRequest.",
          "type": "boolean"
        }
      },
      "description": "A NFS export entry."
    },
    "Network": {
      "type": "object",
      "properties": {
        "servicesCidr": {
          "type": "string",
          "description": "IP range for reserved for services (e.g. NFS)."
        },
        "macAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of physical interfaces."
        },
        "cidr": {
          "type": "string",
          "description": "The cidr of the Network."
        },
        "name": {
          "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels as key value pairs."
        },
        "vlanId": {
          "description": "The vlan id of the Network.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address configured."
        },
        "state": {
          "description": "The Network state.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "enumDescriptions": [
            "The Network is in an unknown state.",
            "The Network is provisioning.",
            "The Network has been provisioned."
          ]
        },
        "type": {
          "description": "The type of this network.",
          "enumDescriptions": [
            "Unspecified value.",
            "Client network, a network peered to a Google Cloud VPC.",
            "Private network, a network local to the Bare Metal Solution environment."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "CLIENT",
            "PRIVATE"
          ],
          "type": "string"
        },
        "vrf": {
          "description": "The vrf for the Network.",
          "$ref": "VRF"
        },
        "id": {
          "description": "An identifier for the `Network`, generated by the backend.",
          "type": "string"
        }
      },
      "description": "A Network.",
      "id": "Network"
    },
    "NfsShare": {
      "id": "NfsShare",
      "description": "An NFS share.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONED"
          ],
          "description": "The state of the NFS share.",
          "enumDescriptions": [
            "The share is in an unknown state.",
            "The share has been provisioned."
          ],
          "type": "string"
        },
        "allowedClients": {
          "description": "List of allowed access points.",
          "items": {
            "$ref": "AllowedClient"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. The name of the NFS share.",
          "type": "string",
          "readOnly": true
        },
        "volume": {
          "type": "string",
          "description": "The volume containing the share."
        },
        "nfsShareId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An identifier for the NFS share, generated by the backend."
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SnapshotReservationDetail": {
      "type": "object",
      "id": "SnapshotReservationDetail",
      "description": "Details about snapshot space reservation and usage on the storage volume.",
      "properties": {
        "reservedSpaceUsedPercent": {
          "type": "integer",
          "description": "The percent of snapshot space on this storage volume actually being used by the snapshot copies. This value might be higher than 100% if the snapshot copies have overflowed into the data portion of the storage volume.",
          "format": "int32"
        },
        "reservedSpacePercent": {
          "format": "int32",
          "type": "integer",
          "description": "Percent of the total Volume size reserved for snapshot copies. Enabling snapshots requires reserving 20% or more of the storage volume space for snapshots. Maximum reserved space for snapshots is 40%. Setting this field will effectively set snapshot_enabled to true."
        },
        "reservedSpaceRemainingGib": {
          "type": "string",
          "description": "The amount, in GiB, of available space in this storage volume's reserved snapshot space.",
          "format": "int64"
        },
        "reservedSpaceGib": {
          "format": "int64",
          "description": "The space on this storage volume reserved for snapshots, shown in GiB.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object"
    },
    "ListNetworkUsageResponse": {
      "description": "Response with Networks with IPs",
      "id": "ListNetworkUsageResponse",
      "properties": {
        "networks": {
          "description": "Networks with IPs.",
          "items": {
            "$ref": "NetworkUsage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProvisioningConfig": {
      "description": "A provisioning configuration.",
      "id": "ProvisioningConfig",
      "properties": {
        "cloudConsoleUri": {
          "description": "Output only. URI to Cloud Console UI view of this provisioning config.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "Output only. State of ProvisioningConfig.",
          "enumDescriptions": [
            "State wasn't specified.",
            "ProvisioningConfig is a draft and can be freely modified.",
            "ProvisioningConfig was already submitted and cannot be modified."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "SUBMITTED"
          ],
          "type": "string",
          "readOnly": true
        },
        "ticketId": {
          "type": "string",
          "description": "A generated buganizer id to track provisioning request."
        },
        "handoverServiceAccount": {
          "type": "string",
          "description": "A service account to enable customers to access instance credentials upon handover."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the provisioning config."
        },
        "email": {
          "description": "Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.",
          "type": "string"
        },
        "instances": {
          "type": "array",
          "description": "Instances to be created.",
          "items": {
            "$ref": "InstanceConfig"
          }
        },
        "volumes": {
          "type": "array",
          "description": "Volumes to be created.",
          "items": {
            "$ref": "VolumeConfig"
          }
        },
        "networks": {
          "description": "Networks to be created.",
          "items": {
            "$ref": "NetworkConfig"
          },
          "type": "array"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Last update timestamp.",
          "format": "google-datetime"
        },
        "location": {
          "description": "Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListProvisioningQuotasResponse": {
      "id": "ListProvisioningQuotasResponse",
      "description": "Response message for the list of provisioning quotas.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "provisioningQuotas": {
          "type": "array",
          "description": "The provisioning quotas registered in this project.",
          "items": {
            "$ref": "ProvisioningQuota"
          }
        }
      }
    },
    "SubmitProvisioningConfigRequest": {
      "description": "Request for SubmitProvisioningConfig.",
      "type": "object",
      "properties": {
        "email": {
          "description": "Optional. Email provided to send a confirmation with provisioning config to.",
          "type": "string"
        },
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "Required. The ProvisioningConfig to create."
        }
      },
      "id": "SubmitProvisioningConfigRequest"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      },
      "id": "Status"
    },
    "LogicalInterface": {
      "type": "object",
      "description": "Logical interface.",
      "id": "LogicalInterface",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "If true, interface must have network connected."
        },
        "name": {
          "description": "Interface name. This is not a globally unique identifier. Name is unique only inside the ServerNetworkTemplate.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified value.",
            "Bond interface type.",
            "NIC interface ytpe."
          ],
          "enum": [
            "INTERFACE_TYPE_UNSPECIFIED",
            "BOND",
            "NIC"
          ],
          "description": "Interface type."
        }
      }
    },
    "RestoreVolumeSnapshotRequest": {
      "id": "RestoreVolumeSnapshotRequest",
      "type": "object",
      "description": "Message for restoring a volume snapshot.",
      "properties": {}
    },
    "VRF": {
      "properties": {
        "qosPolicy": {
          "description": "The QOS policy applied to this VRF.",
          "$ref": "QosPolicy"
        },
        "name": {
          "description": "The name of the VRF.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "PROVISIONED"
          ],
          "type": "string",
          "description": "The possible state of VRF.",
          "enumDescriptions": [
            "The unspecified state.",
            "The vrf is provisioning.",
            "The vrf is provisioned."
          ]
        },
        "vlanAttachments": {
          "description": "The list of VLAN attachments for the VRF.",
          "type": "array",
          "items": {
            "$ref": "VlanAttachment"
          }
        }
      },
      "description": "A network VRF.",
      "type": "object",
      "id": "VRF"
    },
    "StartInstanceRequest": {
      "description": "Message requesting to start a server.",
      "properties": {},
      "type": "object",
      "id": "StartInstanceRequest"
    },
    "Schedule": {
      "description": "A snapshot schedule.",
      "id": "Schedule",
      "properties": {
        "crontabSpec": {
          "description": "A crontab-like specification that the schedule uses to take snapshots.",
          "type": "string"
        },
        "prefix": {
          "description": "A list of snapshot names created in this schedule.",
          "type": "string"
        },
        "retentionCount": {
          "description": "The maximum number of snapshots to retain in this schedule.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "ListLunsResponse": {
      "type": "object",
      "id": "ListLunsResponse",
      "description": "Response message containing the list of storage volume luns.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results from the server."
        },
        "luns": {
          "description": "The list of luns.",
          "items": {
            "$ref": "Lun"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LunRange": {
      "type": "object",
      "id": "LunRange",
      "properties": {
        "sizeGb": {
          "type": "integer",
          "description": "The requested size of each LUN, in GB.",
          "format": "int32"
        },
        "quantity": {
          "format": "int32",
          "description": "Number of LUNs to create.",
          "type": "integer"
        }
      },
      "description": "A LUN(Logical Unit Number) range."
    },
    "SubmitProvisioningConfigResponse": {
      "description": "Response for SubmitProvisioningConfig.",
      "properties": {
        "provisioningConfig": {
          "$ref": "ProvisioningConfig",
          "description": "The submitted provisioning config."
        }
      },
      "type": "object",
      "id": "SubmitProvisioningConfigResponse"
    },
    "AllowedClient": {
      "type": "object",
      "description": "Represents an 'access point' for the share.",
      "id": "AllowedClient",
      "properties": {
        "allowedClientsCidr": {
          "description": "The subnet of IP addresses permitted to access the share.",
          "type": "string"
        },
        "shareIp": {
          "description": "The IP address of the share on this network.",
          "type": "string"
        },
        "noRootSquash": {
          "type": "boolean",
          "description": "Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication."
        },
        "network": {
          "description": "The network the access point sits on.",
          "type": "string"
        },
        "mountPermissions": {
          "enum": [
            "MOUNT_PERMISSIONS_UNSPECIFIED",
            "READ",
            "READ_WRITE"
          ],
          "description": "Mount permissions.",
          "type": "string",
          "enumDescriptions": [
            "Permissions were not specified.",
            "NFS share can be mount with read-only permissions.",
            "NFS share can be mount with read-write permissions."
          ]
        },
        "allowSuid": {
          "description": "Allow the setuid flag.",
          "type": "boolean"
        },
        "allowDev": {
          "type": "boolean",
          "description": "Allow dev flag. Which controls whether to allow creation of devices."
        }
      }
    },
    "NetworkAddress": {
      "id": "NetworkAddress",
      "type": "object",
      "properties": {
        "networkId": {
          "description": "Id of the network to use, within the same ProvisioningConfig request.",
          "type": "string"
        },
        "existingNetworkId": {
          "description": "Name of the existing network to use.",
          "type": "string"
        },
        "address": {
          "description": "IPv4 address to be assigned to the server.",
          "type": "string"
        }
      },
      "description": "A network."
    },
    "Volume": {
      "properties": {
        "snapshotEnabled": {
          "type": "boolean",
          "description": "Whether snapshots are enabled."
        },
        "requestedSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The requested size of this storage volume, in GiB."
        },
        "name": {
          "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "description": "Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "The state of this storage volume.",
          "type": "string",
          "enumDescriptions": [
            "The storage volume is in an unknown state.",
            "The storage volume is being created.",
            "The storage volume is ready for use.",
            "The storage volume has been requested to be deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING"
          ]
        },
        "snapshotAutoDeleteBehavior": {
          "description": "The behavior to use when snapshot reserved space is full.",
          "enum": [
            "SNAPSHOT_AUTO_DELETE_BEHAVIOR_UNSPECIFIED",
            "DISABLED",
            "OLDEST_FIRST",
            "NEWEST_FIRST"
          ],
          "type": "string",
          "enumDescriptions": [
            "The unspecified behavior.",
            "Don't delete any snapshots. This disables new snapshot creation, as long as the snapshot reserved space is full.",
            "Delete the oldest snapshots first.",
            "Delete the newest snapshots first."
          ]
        },
        "remainingSpaceGib": {
          "format": "int64",
          "type": "string",
          "description": "The space remaining in the storage volume for new LUNs, in GiB, excluding space reserved for snapshots."
        },
        "snapshotSchedulePolicy": {
          "description": "The name of the snapshot schedule policy in use for this volume, if any.",
          "type": "string"
        },
        "snapshotReservationDetail": {
          "description": "Details about snapshot space reservation and usage on the storage volume.",
          "$ref": "SnapshotReservationDetail"
        },
        "autoGrownSizeGib": {
          "type": "string",
          "format": "int64",
          "description": "The size, in GiB, that this storage volume has expanded as a result of an auto grow policy. In the absence of auto-grow, the value is 0."
        },
        "id": {
          "description": "An identifier for the `Volume`, generated by the backend.",
          "type": "string"
        },
        "storageType": {
          "description": "The storage type for this volume.",
          "enum": [
            "STORAGE_TYPE_UNSPECIFIED",
            "SSD",
            "HDD"
          ],
          "type": "string",
          "enumDescriptions": [
            "The storage type for this volume is unknown.",
            "The storage type for this volume is SSD.",
            "This storage type for this volume is HDD."
          ]
        },
        "currentSizeGib": {
          "format": "int64",
          "type": "string",
          "description": "The current size of this storage volume, in GiB, including space reserved for snapshots. This size might be different than the requested size if the storage volume has been configured with auto grow or auto shrink."
        }
      },
      "type": "object",
      "description": "A storage volume.",
      "id": "Volume"
    },
    "QosPolicy": {
      "type": "object",
      "id": "QosPolicy",
      "description": "QOS policy parameters.",
      "properties": {
        "bandwidthGbps": {
          "description": "The bandwidth permitted by the QOS policy, in gbps.",
          "format": "double",
          "type": "number"
        }
      }
    },
    "FetchInstanceProvisioningSettingsResponse": {
      "properties": {
        "images": {
          "description": "The OS images available.",
          "type": "array",
          "items": {
            "$ref": "OSImage"
          }
        }
      },
      "id": "FetchInstanceProvisioningSettingsResponse",
      "description": "Response with all provisioning settings.",
      "type": "object"
    },
    "ListInstancesResponse": {
      "properties": {
        "instances": {
          "items": {
            "$ref": "Instance"
          },
          "type": "array",
          "description": "The list of servers."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        }
      },
      "id": "ListInstancesResponse",
      "description": "Response message for the list of servers.",
      "type": "object"
    },
    "OSImage": {
      "id": "OSImage",
      "properties": {
        "name": {
          "description": "Output only. OS Image's unique name.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "OS Image description.",
          "type": "string"
        },
        "applicableInstanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Instance types this image is applicable to. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)"
        },
        "code": {
          "description": "OS Image code.",
          "type": "string"
        },
        "supportedNetworkTemplates": {
          "type": "array",
          "description": "Network templates that can be used with this OS Image.",
          "items": {
            "$ref": "ServerNetworkTemplate"
          }
        }
      },
      "description": "Operation System image.",
      "type": "object"
    },
    "VlanAttachment": {
      "type": "object",
      "description": "VLAN attachment details.",
      "id": "VlanAttachment",
      "properties": {
        "peerIp": {
          "description": "The peer IP of the attachment.",
          "type": "string"
        },
        "peerVlanId": {
          "description": "The peer vlan ID of the attachment.",
          "format": "int64",
          "type": "string"
        },
        "routerIp": {
          "description": "The router IP of the attachment.",
          "type": "string"
        }
      }
    },
    "ListSnapshotSchedulePoliciesResponse": {
      "id": "ListSnapshotSchedulePoliciesResponse",
      "description": "Response message containing the list of snapshot schedule policies.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "snapshotSchedulePolicies": {
          "items": {
            "$ref": "SnapshotSchedulePolicy"
          },
          "description": "The snapshot schedule policies registered in this project.",
          "type": "array"
        }
      }
    },
    "ListVolumesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results from the server.",
          "type": "string"
        },
        "volumes": {
          "type": "array",
          "description": "The list of storage volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message containing the list of storage volumes.",
      "id": "ListVolumesResponse"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "servicePath": "",
  "description": "Provides ways to manage Bare Metal Solution hardware installed in a regional extension located near a Google Cloud data center.",
  "baseUrl": "https://baremetalsolution.googleapis.com/",
  "mtlsRootUrl": "https://baremetalsolution.mtls.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "version_module": true,
  "kind": "discovery#restDescription",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "path": "v2/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "baremetalsolution.projects.locations.list",
              "flatPath": "v2/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              }
            },
            "get": {
              "id": "baremetalsolution.projects.locations.get",
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "path": "v2/{+name}",
              "response": {
                "$ref": "Location"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "volumes": {
              "resources": {
                "snapshots": {
                  "methods": {
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "description": "Deletes a storage volume snapshot for a given volume.",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the snapshot to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$"
                        }
                      },
                      "path": "v2/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.delete",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "restoreVolumeSnapshot": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}:restoreVolumeSnapshot",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "volumeSnapshot": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "description": "Required. Name of the resource.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "path": "v2/{+volumeSnapshot}:restoreVolumeSnapshot",
                      "parameterOrder": [
                        "volumeSnapshot"
                      ],
                      "request": {
                        "$ref": "RestoreVolumeSnapshotRequest"
                      },
                      "description": "Restore a storage volume snapshot to its containing volume.",
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.restoreVolumeSnapshot"
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "path": "v2/{+parent}/snapshots",
                      "request": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. The volume to snapshot.",
                          "location": "path"
                        }
                      },
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.create",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "description": "Create a storage volume snapshot in a containing volume.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/snapshots/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the resource.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots/{snapshotsId}",
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "VolumeSnapshot"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.get",
                      "httpMethod": "GET",
                      "description": "Get details of a single storage volume snapshot."
                    },
                    "list": {
                      "description": "List storage volume snapshots for given storage volume.",
                      "path": "v2/{+parent}/snapshots",
                      "response": {
                        "$ref": "ListVolumeSnapshotsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "A token identifying a page of results from the server.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "required": true,
                          "description": "Required. Parent value for ListVolumesRequest.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/snapshots",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "baremetalsolution.projects.locations.volumes.snapshots.list"
                    }
                  }
                },
                "luns": {
                  "methods": {
                    "get": {
                      "description": "Get details of a single storage logical unit number(LUN).",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the resource.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+/luns/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Lun"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+name}",
                      "id": "baremetalsolution.projects.locations.volumes.luns.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns/{lunsId}",
                      "httpMethod": "GET"
                    },
                    "list": {
                      "path": "v2/{+parent}/luns",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}/luns",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List storage volume luns for given storage volume.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListLunsResponse"
                      },
                      "id": "baremetalsolution.projects.locations.volumes.luns.list",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A token identifying a page of results from the server."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                          "description": "Required. Parent value for ListLunsRequest.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "id": "baremetalsolution.projects.locations.volumes.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/volumes",
                  "httpMethod": "GET",
                  "description": "List storage volumes in a given project and location.",
                  "response": {
                    "$ref": "ListVolumesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Parent value for ListVolumesRequest."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "List filter."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Volume"
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "id": "baremetalsolution.projects.locations.volumes.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get details of a single storage volume."
                },
                "patch": {
                  "request": {
                    "$ref": "Volume"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/volumes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Output only. The resource name of this `Volume`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/volumes/{volume}`"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `snapshot_auto_delete_behavior` `snapshot_schedule_policy_name` 'labels' 'requested_size_gib' 'snapshot_enabled' 'snapshot_reservation_detail.reserved_space_percent'",
                      "format": "google-fieldmask"
                    }
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.volumes.patch",
                  "description": "Update details of a single storage volume.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/volumes/{volumesId}",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "instances": {
              "methods": {
                "get": {
                  "path": "v2/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Instance"
                  },
                  "id": "baremetalsolution.projects.locations.instances.get",
                  "description": "Get details about a single server.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "description": "Required. Name of the resource.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances",
                  "path": "v2/{+parent}/instances",
                  "description": "List servers in a given project and location.",
                  "id": "baremetalsolution.projects.locations.instances.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListInstancesRequest.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, the server will pick an appropriate default.",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListInstancesResponse"
                  }
                },
                "reset": {
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ResetInstanceRequest"
                  },
                  "id": "baremetalsolution.projects.locations.instances.reset",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}:reset",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:reset",
                  "description": "Perform an ungraceful, hard reset on a server. Equivalent to shutting the power off and then turning it back on."
                },
                "patch": {
                  "id": "baremetalsolution.projects.locations.instances.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update details of a single server.",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}",
                  "request": {
                    "$ref": "Instance"
                  },
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Output only. The resource name of this `Instance`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/instances/{instance}`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "start": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StartInstanceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.instances.start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Starts a server that was shutdown.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the resource."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instances/{instancesId}:start",
                  "httpMethod": "POST",
                  "path": "v2/{+name}:start"
                }
              }
            },
            "snapshotSchedulePolicies": {
              "methods": {
                "patch": {
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "description": "Required. The list of fields to update.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "type": "string",
                      "description": "Output only. The name of the snapshot schedule policy.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}",
                  "description": "Update a snapshot schedule policy in the specified project.",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}"
                },
                "list": {
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "description": "List snapshot schedule policies in a given project and location.",
                  "response": {
                    "$ref": "ListSnapshotSchedulePoliciesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent project containing the Snapshot Schedule Policies.",
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "description": "List filter.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the snapshot schedule policy to delete.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Delete a named snapshot schedule policy.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+name}",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.delete",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies",
                  "description": "Create a snapshot schedule policy in the specified project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.create",
                  "path": "v2/{+parent}/snapshotSchedulePolicies",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "SnapshotSchedulePolicy"
                  },
                  "parameters": {
                    "snapshotSchedulePolicyId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. Snapshot policy ID"
                    },
                    "parent": {
                      "description": "Required. The parent project and location containing the SnapshotSchedulePolicy.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/snapshotSchedulePolicies/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/snapshotSchedulePolicies/{snapshotSchedulePoliciesId}",
                  "id": "baremetalsolution.projects.locations.snapshotSchedulePolicies.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Get details of a single snapshot schedule policy.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SnapshotSchedulePolicy"
                  }
                }
              }
            },
            "instanceProvisioningSettings": {
              "methods": {
                "fetch": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/instanceProvisioningSettings:fetch",
                  "response": {
                    "$ref": "FetchInstanceProvisioningSettingsResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "location"
                  ],
                  "id": "baremetalsolution.projects.locations.instanceProvisioningSettings.fetch",
                  "parameters": {
                    "location": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent project and location containing the ProvisioningSettings.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v2/{+location}/instanceProvisioningSettings:fetch",
                  "description": "Get instance provisioning settings for a given project. This is hidden method used by UI only.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "nfsShares": {
              "methods": {
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "description": "The list of fields to update. The only currently supported fields are: `labels`",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Output only. The name of the NFS share.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$"
                    }
                  },
                  "httpMethod": "PATCH",
                  "description": "Update details of a single NFS share.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "NfsShare"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.patch"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.nfsShares.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. Parent value for ListNfsSharesRequest.",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A token identifying a page of results from the server.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "List filter.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v2/{+parent}/nfsShares",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares",
                  "description": "List NFS shares.",
                  "response": {
                    "$ref": "ListNfsSharesResponse"
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/nfsShares/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "NfsShare"
                  },
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/nfsShares/{nfsSharesId}",
                  "description": "Get details of a single NFS share.",
                  "id": "baremetalsolution.projects.locations.nfsShares.get"
                }
              }
            },
            "provisioningQuotas": {
              "methods": {
                "list": {
                  "path": "v2/{+parent}/provisioningQuotas",
                  "id": "baremetalsolution.projects.locations.provisioningQuotas.list",
                  "description": "List the budget details to provision resources on a given project.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListProvisioningQuotasResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default. Notice that page_size field is not supported and won't be respected in the API request for now, will be updated when pagination is supported.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A token identifying a page of results from the server."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value for ListProvisioningQuotasRequest.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningQuotas",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "provisioningConfigs": {
              "methods": {
                "submit": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs:submit",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "SubmitProvisioningConfigResponse"
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/provisioningConfigs:submit",
                  "request": {
                    "$ref": "SubmitProvisioningConfigRequest"
                  },
                  "description": "Submit a provisiong configuration for a given project.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.submit",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "description": "Get ProvisioningConfig by name.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "path": "v2/{+parent}/provisioningConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "email": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent project and location containing the ProvisioningConfig.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs",
                  "description": "Create new ProvisioningConfig.",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "request": {
                    "$ref": "ProvisioningConfig"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "ProvisioningConfig"
                  },
                  "description": "Update existing ProvisioningConfig.",
                  "response": {
                    "$ref": "ProvisioningConfig"
                  },
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/provisioningConfigs/{provisioningConfigsId}",
                  "parameters": {
                    "name": {
                      "description": "Output only. The name of the provisioning config.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/provisioningConfigs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Required. The list of fields to update.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "email": {
                      "location": "query",
                      "description": "Optional. Email provided to send a confirmation with provisioning config to.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "id": "baremetalsolution.projects.locations.provisioningConfigs.patch",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "networks": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "The list of fields to update. The only currently supported fields are: `labels`"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Output only. The resource name of this `Network`. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. Format: `projects/{project}/locations/{location}/networks/{network}`"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "request": {
                    "$ref": "Network"
                  },
                  "path": "v2/{+name}",
                  "description": "Update details of a single network.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "baremetalsolution.projects.locations.networks.patch"
                },
                "list": {
                  "id": "baremetalsolution.projects.locations.networks.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks",
                  "response": {
                    "$ref": "ListNetworksResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+parent}/networks",
                  "parameters": {
                    "pageToken": {
                      "description": "A token identifying a page of results from the server.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent value for ListNetworksRequest."
                    },
                    "filter": {
                      "location": "query",
                      "description": "List filter.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. The server might return fewer items than requested. If unspecified, server will pick an appropriate default.",
                      "format": "int32"
                    }
                  },
                  "description": "List network in a given project and location.",
                  "httpMethod": "GET"
                },
                "get": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks/{networksId}",
                  "id": "baremetalsolution.projects.locations.networks.get",
                  "path": "v2/{+name}",
                  "description": "Get details of a single network.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/networks/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Network"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "listNetworkUsage": {
                  "response": {
                    "$ref": "ListNetworkUsageResponse"
                  },
                  "id": "baremetalsolution.projects.locations.networks.listNetworkUsage",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/networks:listNetworkUsage",
                  "description": "List all Networks (and used IPs for each Network) in the vendor account associated with the specified project.",
                  "path": "v2/{+location}/networks:listNetworkUsage",
                  "parameterOrder": [
                    "location"
                  ],
                  "parameters": {
                    "location": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent value (project and location)."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "id": "baremetalsolution:v2",
  "parameters": {
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "batchPath": "batch",
  "rootUrl": "https://baremetalsolution.googleapis.com/"
}

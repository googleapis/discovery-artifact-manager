{
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "schemas": {
    "AddTargetedSitesRequest": {
      "description": "A request to start targeting the provided sites in a specific pretargeting configuration. The pretargeting configuration itself specifies how these sites are targeted in PretargetingConfig.webTargeting.",
      "id": "AddTargetedSitesRequest",
      "properties": {
        "targetingMode": {
          "enumDescriptions": [
            "Placeholder for undefined targeting mode.",
            "The inclusive list type. Inventory must match an item in this list to be targeted.",
            "The exclusive list type. Inventory must not match any item in this list to be targeted."
          ],
          "description": "Required. The targeting mode that should be applied to the list of site URLs. If there are existing targeted sites, must be equal to the existing PretargetingConfig.webTargeting.targetingMode or a 400 bad request error will be returned.",
          "enum": [
            "TARGETING_MODE_UNSPECIFIED",
            "INCLUSIVE",
            "EXCLUSIVE"
          ],
          "type": "string"
        },
        "sites": {
          "items": {
            "type": "string"
          },
          "description": "A list of site URLs to target in the pretargeting configuration. These values will be added to the list of targeted URLs in PretargetingConfig.webTargeting.values.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListBiddersResponse": {
      "properties": {
        "bidders": {
          "description": "List of bidders.",
          "type": "array",
          "items": {
            "$ref": "Bidder"
          }
        },
        "nextPageToken": {
          "description": "A token which can be passed to a subsequent call to the `ListBidders` method to retrieve the next page of results in ListBiddersRequest.pageToken.",
          "type": "string"
        }
      },
      "id": "ListBiddersResponse",
      "description": "A response containing bidders.",
      "type": "object"
    },
    "WatchCreativesRequest": {
      "description": "A request to receive push notifications when any of the creatives belonging to the bidder changes status.",
      "properties": {},
      "type": "object",
      "id": "WatchCreativesRequest"
    },
    "Buyer": {
      "type": "object",
      "description": "RTB Buyer account information.",
      "id": "Buyer",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the buyer resource that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` is the account ID of the buyer account whose information is to be received. One can get their account ID on the Authorized Buyers or Open Bidding UI, or by contacting their Google account manager."
        },
        "billingIds": {
          "description": "Output only. A list of billing IDs associated with this account. These IDs appear on: 1. A bid request, to signal which buyers are eligible to bid on a given opportunity, and which pretargeting configurations were matched for each eligible buyer. 2. The bid response, to attribute a winning impression to a specific account for billing, reporting, policy and publisher block enforcement.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "activeCreativeCount": {
          "description": "Output only. The number of creatives that this buyer submitted via the API or bid with in the last 30 days. This is counted against the maximum number of active creatives.",
          "type": "string",
          "format": "int64",
          "readOnly": true
        },
        "bidder": {
          "type": "string",
          "description": "Output only. The name of the bidder resource that is responsible for receiving bidding traffic for this account. The bidder name must follow the pattern `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of the bidder receiving traffic for this buyer.",
          "readOnly": true
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The diplay name associated with this buyer account, as visible to sellers."
        },
        "maximumActiveCreativeCount": {
          "type": "string",
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The maximum number of active creatives that this buyer can have."
        }
      }
    },
    "RemoveTargetedSitesRequest": {
      "properties": {
        "sites": {
          "description": "A list of site URLs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted URLs in PretargetingConfig.webTargeting.values.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A request to stop targeting sites in a specific pretargeting configuration. The pretargeting configuration itself specifies how these sites are targeted in PretargetingConfig.webTargeting.",
      "id": "RemoveTargetedSitesRequest"
    },
    "AddTargetedPublishersRequest": {
      "type": "object",
      "id": "AddTargetedPublishersRequest",
      "properties": {
        "publisherIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of publisher IDs to target in the pretargeting configuration. These values will be added to the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details."
        },
        "targetingMode": {
          "enum": [
            "TARGETING_MODE_UNSPECIFIED",
            "INCLUSIVE",
            "EXCLUSIVE"
          ],
          "enumDescriptions": [
            "Placeholder for undefined targeting mode.",
            "The inclusive list type. Inventory must match an item in this list to be targeted.",
            "The exclusive list type. Inventory must not match any item in this list to be targeted."
          ],
          "description": "Required. The targeting mode that should be applied to the list of publisher IDs. If are existing publisher IDs, must be equal to the existing PretargetingConfig.publisherTargeting.targetingMode or a 400 bad request error will be returned.",
          "type": "string"
        }
      },
      "description": "A request to start targeting the provided publishers in a specific pretargeting configuration. The pretargeting configuration itself specifies how these publishers are targeted in PretargetingConfig.publisherTargeting."
    },
    "UrlRestriction": {
      "type": "object",
      "properties": {
        "endDate": {
          "$ref": "Date",
          "description": "End date (if specified) of the URL restriction. End date should be later than the start date for the date range to be valid."
        },
        "url": {
          "description": "Required. The URL to use for applying the restriction on the user list.",
          "type": "string"
        },
        "restrictionType": {
          "enum": [
            "RESTRICTION_TYPE_UNSPECIFIED",
            "CONTAINS",
            "EQUALS",
            "STARTS_WITH",
            "ENDS_WITH",
            "DOES_NOT_EQUAL",
            "DOES_NOT_CONTAIN",
            "DOES_NOT_START_WITH",
            "DOES_NOT_END_WITH"
          ],
          "description": "The restriction type for the specified URL.",
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "The tag URL (as recorded by the pixel callback) contains the specified URL.",
            "The tag URL (as recorded by the pixel callback) exactly matches the specified URL.",
            "The tag URL (as recorded by the pixel callback) starts with the specified URL.",
            "The tag URL (as recorded by the pixel callback) ends with the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not equal the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not contain the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not start with the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not end with the specified URL."
          ]
        },
        "startDate": {
          "description": "Start date (if specified) of the URL restriction.",
          "$ref": "Date"
        }
      },
      "description": "Represents the URL restriction (for the URL captured by the pixel callback) for a user list.",
      "id": "UrlRestriction"
    },
    "RemoveTargetedPublishersRequest": {
      "description": "A request to stop targeting publishers in a specific configuration. The pretargeting configuration itself specifies how these publishers are targeted in PretargetingConfig.publisherTargeting.",
      "type": "object",
      "id": "RemoveTargetedPublishersRequest",
      "properties": {
        "publisherIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of publisher IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted publisher IDs in PretargetingConfig.publisherTargeting.values. Publishers are identified by their publisher ID from ads.txt / app-ads.txt. See https://iabtechlab.com/ads-txt/ and https://iabtechlab.com/app-ads-txt/ for more details."
        }
      }
    },
    "PolicyTopicEvidence": {
      "type": "object",
      "properties": {
        "destinationNotWorking": {
          "description": "The creative's destination URL did not function properly or was incorrectly set up.",
          "$ref": "DestinationNotWorkingEvidence"
        },
        "httpCookie": {
          "$ref": "HttpCookieEvidence",
          "description": "Evidence for HTTP cookie-related policy violations."
        },
        "destinationUrl": {
          "description": "URL of the actual landing page.",
          "$ref": "DestinationUrlEvidence"
        },
        "domainCall": {
          "$ref": "DomainCallEvidence",
          "description": "Number of HTTP calls made by the creative, broken down by domain."
        },
        "downloadSize": {
          "description": "Total download size and URL-level download size breakdown for resources in a creative.",
          "$ref": "DownloadSizeEvidence"
        },
        "destinationNotCrawlable": {
          "description": "The creative's destination URL was not crawlable by Google.",
          "$ref": "DestinationNotCrawlableEvidence"
        },
        "httpCall": {
          "$ref": "HttpCallEvidence",
          "description": "HTTP calls made by the creative that resulted in policy violations."
        }
      },
      "description": "Evidence associated with a policy topic entry.",
      "id": "PolicyTopicEvidence"
    },
    "Creative": {
      "properties": {
        "apiUpdateTime": {
          "description": "Output only. The last update timestamp of the creative via API.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "creativeId": {
          "type": "string",
          "description": "Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes."
        },
        "version": {
          "description": "Output only. The version of this creative. Version for a new creative is 1 and it increments during subsequent creative updates.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "creativeFormat": {
          "enumDescriptions": [
            "The format is unknown.",
            "HTML creative.",
            "Video creative.",
            "Native creative."
          ],
          "type": "string",
          "description": "Output only. The format of this creative. Can be used to filter the response of the creatives.list method.",
          "readOnly": true,
          "enum": [
            "CREATIVE_FORMAT_UNSPECIFIED",
            "HTML",
            "VIDEO",
            "NATIVE"
          ]
        },
        "agencyId": {
          "format": "int64",
          "type": "string",
          "description": "The agency ID for this creative."
        },
        "advertiserName": {
          "description": "The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "impressionTrackingUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of URLs to be called to record an impression."
        },
        "video": {
          "description": "A video creative.",
          "$ref": "VideoContent"
        },
        "native": {
          "$ref": "NativeContent",
          "description": "A native creative."
        },
        "declaredRestrictedCategories": {
          "items": {
            "enumDescriptions": [
              "Default value that should never be used.",
              "The alcohol restricted category."
            ],
            "type": "string",
            "enum": [
              "RESTRICTED_CATEGORY_UNSPECIFIED",
              "ALCOHOL"
            ]
          },
          "type": "array",
          "description": "All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method."
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.",
          "readOnly": true
        },
        "dealIds": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method."
        },
        "restrictedCategories": {
          "items": {
            "enum": [
              "RESTRICTED_CATEGORY_UNSPECIFIED",
              "ALCOHOL"
            ],
            "type": "string",
            "enumDescriptions": [
              "Default value that should never be used.",
              "The alcohol restricted category."
            ]
          },
          "type": "array",
          "description": "All restricted categories for the ads that may be shown from this creative."
        },
        "accountId": {
          "format": "int64",
          "description": "Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check.",
          "readOnly": true,
          "type": "string"
        },
        "adChoicesDestinationUrl": {
          "type": "string",
          "description": "The link to AdChoices destination page. This is only supported for native ads."
        },
        "declaredAttributes": {
          "items": {
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IMAGE_RICH_MEDIA",
              "ADOBE_FLASH_FLV",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "CREATIVE_TYPE_HTML",
              "CREATIVE_TYPE_VAST_VIDEO",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
              "SKIPPABLE_INSTREAM_VIDEO",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NON_SKIPPABLE_INSTREAM_VIDEO",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NON_VPAID",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "ANY_INTERSTITIAL",
              "NON_INTERSTITIAL",
              "IN_BANNER_VIDEO",
              "RENDERING_SIZELESS_ADX",
              "OMSDK_1_0"
            ],
            "enumDescriptions": [
              "Do not use. This is a placeholder value only.",
              "The creative is of type image/rich media. For pretargeting.",
              "The creative is of video type Adobe Flash FLV. For pretargeting.",
              "The creative is tagged.",
              "The creative is cookie targeted.",
              "The creative is user interest targeted.",
              "The creative does not expand.",
              "The creative expands up.",
              "The creative expands down.",
              "The creative expands left.",
              "The creative expands right.",
              "The creative expands up and left.",
              "The creative expands up and right.",
              "The creative expands down and left.",
              "The creative expands down and right.",
              "The creative type is HTML.",
              "The creative type is VAST video.",
              "The creative expands up or down.",
              "The creative expands left or right.",
              "The creative expands on any diagonal.",
              "The creative expands when rolled over.",
              "The instream vast video type is vpaid flash.",
              "The creative is MRAID.",
              "The creative is Flash.",
              "The creative is HTML5.",
              "The creative has an instream VAST video type of skippable instream video. For pretargeting.",
              "The creative is SSL.",
              "The creative is non-SSL.",
              "The creative is an interstitial.",
              "The creative has an instream VAST video type of non-skippable instream video. For pretargeting.",
              "The creative is eligible for native.",
              "The creative has an instream VAST video type of non-VPAID. For pretargeting.",
              "The creative is not eligible for native.",
              "The creative has an interstitial size of any interstitial. For pretargeting.",
              "The creative has an interstitial size of non interstitial. For pretargeting.",
              "The video type is in-banner video.",
              "The creative can dynamically resize to fill a variety of slot sizes.",
              "The open measurement SDK is supported."
            ],
            "type": "string"
          },
          "description": "All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto\") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
          "type": "array"
        },
        "creativeServingDecision": {
          "$ref": "CreativeServingDecision",
          "description": "Output only. Top level status and detected attributes of a creative (for example domain, language, advertiser, product category, etc.) that affect whether (status) and where (context) a creative will be allowed to serve.",
          "readOnly": true
        },
        "html": {
          "description": "An HTML creative.",
          "$ref": "HtmlContent"
        },
        "declaredVendorIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "description": "IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method."
        },
        "declaredClickThroughUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method."
        }
      },
      "type": "object",
      "id": "Creative",
      "description": "A creative and its classification data."
    },
    "DestinationUrlEvidence": {
      "id": "DestinationUrlEvidence",
      "description": "The full landing page URL of the destination.",
      "properties": {
        "destinationUrl": {
          "description": "The full landing page URL of the destination.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UrlDownloadSize": {
      "id": "UrlDownloadSize",
      "type": "object",
      "description": "The URL-level breakdown for the download size.",
      "properties": {
        "downloadSizeKb": {
          "description": "Download size of the URL in kilobytes.",
          "format": "int32",
          "type": "integer"
        },
        "normalizedUrl": {
          "type": "string",
          "description": "The normalized URL with query parameters and fragment removed."
        }
      }
    },
    "AdvertiserAndBrand": {
      "type": "object",
      "description": "Detected advertiser and brand information.",
      "properties": {
        "brandName": {
          "type": "string",
          "description": "Brand name. Can be used to filter the response of the creatives.list method."
        },
        "advertiserName": {
          "description": "Advertiser name. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "brandId": {
          "format": "int64",
          "type": "string",
          "description": "Detected brand ID or zero if no brand has been detected. See https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list of possible values. Can be used to filter the response of the creatives.list method."
        },
        "advertiserId": {
          "description": "See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for the list of possible values. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "AdvertiserAndBrand"
    },
    "CloseUserListRequest": {
      "id": "CloseUserListRequest",
      "description": "A request to close a specified user list.",
      "properties": {},
      "type": "object"
    },
    "DomainCallEvidence": {
      "properties": {
        "totalHttpCallCount": {
          "type": "integer",
          "description": "The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains.",
          "format": "int32"
        },
        "topHttpCallDomains": {
          "items": {
            "$ref": "DomainCalls"
          },
          "type": "array",
          "description": "Breakdown of the most frequent domains called via HTTP by the creative."
        }
      },
      "description": "Number of HTTP calls made by a creative, broken down by domain.",
      "id": "DomainCallEvidence",
      "type": "object"
    },
    "Bidder": {
      "properties": {
        "dealsBillingId": {
          "description": "Output only. The billing ID for the deals pretargeting config. This billing ID is sent on the bid request for guaranteed and nonguaranteed deals matched in pretargeting.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Output only. Name of the bidder resource that must follow the pattern `bidders/{bidderAccountId}`, where `{bidderAccountId}` is the account ID of the bidder whose information is to be received. One can get their account ID on the Authorized Buyers or Open Bidding UI, or by contacting their Google account manager.",
          "type": "string",
          "readOnly": true
        },
        "cookieMatchingUrl": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The base URL used in cookie match requests. Refer to https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information."
        },
        "cookieMatchingNetworkId": {
          "type": "string",
          "description": "Output only. The buyer's network ID used for cookie matching. This ID corresponds to the `google_nid` parameter in the URL used in cookie match requests. Refer to https://developers.google.com/authorized-buyers/rtb/cookie-guide for further information.",
          "readOnly": true
        },
        "bypassNonguaranteedDealsPretargeting": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. A flag to bypass pretargeting for private auctions and preferred deals. When true, bid requests from these nonguaranteed deals will always be sent. When false, bid requests will be subject to regular pretargeting configurations. Programmatic Guaranteed deals will always be sent to the bidder, regardless of the value for this flag. Auction packages are not impacted by this value and are subject to the regular pretargeting configurations."
        }
      },
      "id": "Bidder",
      "description": "Bidder settings.",
      "type": "object"
    },
    "CreativeServingDecision": {
      "id": "CreativeServingDecision",
      "properties": {
        "detectedVendorIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "description": "IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
          "type": "array"
        },
        "networkPolicyCompliance": {
          "$ref": "PolicyCompliance",
          "description": "Policy compliance of this creative when bidding in open auction, private auction, or auction packages (outside of Russia and China)."
        },
        "detectedAttributes": {
          "items": {
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IMAGE_RICH_MEDIA",
              "ADOBE_FLASH_FLV",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "CREATIVE_TYPE_HTML",
              "CREATIVE_TYPE_VAST_VIDEO",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
              "SKIPPABLE_INSTREAM_VIDEO",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NON_SKIPPABLE_INSTREAM_VIDEO",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NON_VPAID",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "ANY_INTERSTITIAL",
              "NON_INTERSTITIAL",
              "IN_BANNER_VIDEO",
              "RENDERING_SIZELESS_ADX",
              "OMSDK_1_0"
            ],
            "type": "string",
            "enumDescriptions": [
              "Do not use. This is a placeholder value only.",
              "The creative is of type image/rich media. For pretargeting.",
              "The creative is of video type Adobe Flash FLV. For pretargeting.",
              "The creative is tagged.",
              "The creative is cookie targeted.",
              "The creative is user interest targeted.",
              "The creative does not expand.",
              "The creative expands up.",
              "The creative expands down.",
              "The creative expands left.",
              "The creative expands right.",
              "The creative expands up and left.",
              "The creative expands up and right.",
              "The creative expands down and left.",
              "The creative expands down and right.",
              "The creative type is HTML.",
              "The creative type is VAST video.",
              "The creative expands up or down.",
              "The creative expands left or right.",
              "The creative expands on any diagonal.",
              "The creative expands when rolled over.",
              "The instream vast video type is vpaid flash.",
              "The creative is MRAID.",
              "The creative is Flash.",
              "The creative is HTML5.",
              "The creative has an instream VAST video type of skippable instream video. For pretargeting.",
              "The creative is SSL.",
              "The creative is non-SSL.",
              "The creative is an interstitial.",
              "The creative has an instream VAST video type of non-skippable instream video. For pretargeting.",
              "The creative is eligible for native.",
              "The creative has an instream VAST video type of non-VPAID. For pretargeting.",
              "The creative is not eligible for native.",
              "The creative has an interstitial size of any interstitial. For pretargeting.",
              "The creative has an interstitial size of non interstitial. For pretargeting.",
              "The video type is in-banner video.",
              "The creative can dynamically resize to fill a variety of slot sizes.",
              "The open measurement SDK is supported."
            ]
          },
          "type": "array",
          "description": "Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction."
        },
        "detectedProductCategories": {
          "description": "Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "dealsPolicyCompliance": {
          "$ref": "PolicyCompliance",
          "description": "Policy compliance of this creative when bidding on Programmatic Guaranteed and Preferred Deals (outside of Russia and China)."
        },
        "detectedLanguages": {
          "description": "The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "detectedClickThroughUrls": {
          "description": "The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "russiaPolicyCompliance": {
          "description": "The policy compliance of this creative in Russia. When approved or disapproved, this applies to both deals and open auction in Russia. When pending review, this creative is allowed to serve for deals but not for open auction.",
          "$ref": "PolicyCompliance"
        },
        "detectedSensitiveCategories": {
          "description": "Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "detectedDomains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The detected domains for this creative."
        },
        "adTechnologyProviders": {
          "$ref": "AdTechnologyProviders",
          "description": "The detected ad technology providers."
        },
        "lastStatusUpdate": {
          "type": "string",
          "description": "The last time the creative status was updated. Can be used to filter the response of the creatives.list method.",
          "format": "google-datetime"
        },
        "detectedAdvertisers": {
          "type": "array",
          "description": "Detected advertisers and brands.",
          "items": {
            "$ref": "AdvertiserAndBrand"
          }
        },
        "platformPolicyCompliance": {
          "$ref": "PolicyCompliance",
          "description": "Policy compliance of this creative when bidding in Open Bidding (outside of Russia and China). For the list of platform policies, see: https://support.google.com/platformspolicy/answer/3013851."
        },
        "chinaPolicyCompliance": {
          "description": "The policy compliance of this creative in China. When approved or disapproved, this applies to both deals and open auction in China. When pending review, this creative is allowed to serve for deals but not for open auction.",
          "$ref": "PolicyCompliance"
        }
      },
      "type": "object",
      "description": "Top level status and detected attributes of a creative."
    },
    "PublisherConnection": {
      "type": "object",
      "properties": {
        "displayName": {
          "readOnly": true,
          "description": "Output only. Publisher display name.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which the publisher initiated a connection with the bidder (irrespective of if or when the bidder approves it). This is subsequently updated if the publisher revokes and re-initiates the connection.",
          "format": "google-datetime"
        },
        "publisherPlatform": {
          "enum": [
            "PUBLISHER_PLATFORM_UNSPECIFIED",
            "GOOGLE_AD_MANAGER",
            "ADMOB"
          ],
          "type": "string",
          "enumDescriptions": [
            "An unspecified publisher platform.",
            "A Google Ad Manager publisher.",
            "An AdMob publisher."
          ],
          "description": "Output only. Whether the publisher is an Ad Manager or AdMob publisher.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the publisher connection. This follows the pattern `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}` represents the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.",
          "readOnly": true
        },
        "biddingState": {
          "type": "string",
          "description": "Whether the publisher has been approved by the bidder.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "REJECTED",
            "APPROVED"
          ],
          "enumDescriptions": [
            "An unspecified bidding status.",
            "Indicates a request for connection from the publisher that the bidder needs to review.",
            "Indicates that the publisher was rejected.",
            "Indicates that the publisher was approved."
          ]
        }
      },
      "id": "PublisherConnection",
      "description": "An Open Bidding exchange's connection to a publisher. This is initiated by the publisher for the bidder to review. If approved by the bidder, this means that the bidder agrees to receive bid requests from the publisher."
    },
    "BatchRejectPublisherConnectionsResponse": {
      "type": "object",
      "properties": {
        "publisherConnections": {
          "items": {
            "$ref": "PublisherConnection"
          },
          "type": "array",
          "description": "The publisher connections that have been rejected."
        }
      },
      "id": "BatchRejectPublisherConnectionsResponse",
      "description": "A response for the request to reject a batch of publisher connections."
    },
    "ListBuyersResponse": {
      "id": "ListBuyersResponse",
      "description": "A response containing buyer account information.",
      "properties": {
        "buyers": {
          "description": "List of buyers.",
          "type": "array",
          "items": {
            "$ref": "Buyer"
          }
        },
        "nextPageToken": {
          "description": "A token which can be passed to a subsequent call to the `ListBuyers` method to retrieve the next page of results in ListBuyersRequest.pageToken.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListUserListsResponse": {
      "properties": {
        "userLists": {
          "type": "array",
          "description": "List of user lists from the search.",
          "items": {
            "$ref": "UserList"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation page token to send back to the server in a subsequent request. Due to a currently known issue, it is recommended that the caller keep invoking the list method till the time a next page token is not returned (even if the result set is empty)."
        }
      },
      "id": "ListUserListsResponse",
      "description": "The list user list response.",
      "type": "object"
    },
    "HttpCookieEvidence": {
      "type": "object",
      "id": "HttpCookieEvidence",
      "description": "Evidence for HTTP cookie-related policy violations.",
      "properties": {
        "maxCookieCount": {
          "format": "int32",
          "type": "integer",
          "description": "The largest number of cookies set by a creative. If this field is set, cookie_names above will be set to the cookie names of top domains with the largest number of cookies. This field will only be set for TOO_MANY_COOKIES policy."
        },
        "cookieNames": {
          "description": "Names of cookies that violate Google policies. For TOO_MANY_COOKIES policy, this will be the cookie names of top domains with the largest number of cookies. For other policies, this will be all the cookie names that violate the policy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "DomainCalls": {
      "id": "DomainCalls",
      "description": "The number of HTTP calls made to the given domain.",
      "properties": {
        "httpCallCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of HTTP calls made to the domain."
        },
        "domain": {
          "description": "The domain name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WatchCreativesResponse": {
      "description": "A response for the request to receive push notification when a bidder's creatives change status.",
      "id": "WatchCreativesResponse",
      "properties": {
        "subscription": {
          "description": "The Pub/Sub subscription that can be used to pull creative status notifications. This would be of the format `projects/{project_id}/subscriptions/{subscription_id}`. Subscription is created with pull delivery. All service accounts belonging to the bidder will have read access to this subscription. Subscriptions that are inactive for more than 90 days will be disabled. Please use watchCreatives to re-enable the subscription.",
          "type": "string"
        },
        "topic": {
          "type": "string",
          "description": "The Pub/Sub topic that will be used to publish creative serving status notifications. This would be of the format `projects/{project_id}/topics/{topic_id}`."
        }
      },
      "type": "object"
    },
    "ListEndpointsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token which can be passed to a subsequent call to the `ListEndpoints` method to retrieve the next page of results in ListEndpointsRequest.pageToken.",
          "type": "string"
        },
        "endpoints": {
          "items": {
            "$ref": "Endpoint"
          },
          "description": "List of bidder endpoints.",
          "type": "array"
        }
      },
      "id": "ListEndpointsResponse",
      "description": "A response containing bidder endpoints."
    },
    "BatchApprovePublisherConnectionsResponse": {
      "properties": {
        "publisherConnections": {
          "description": "The publisher connections that have been approved.",
          "items": {
            "$ref": "PublisherConnection"
          },
          "type": "array"
        }
      },
      "id": "BatchApprovePublisherConnectionsResponse",
      "description": "A response for the request to approve a batch of publisher connections.",
      "type": "object"
    },
    "BatchRejectPublisherConnectionsRequest": {
      "type": "object",
      "properties": {
        "names": {
          "description": "Required. The names of the publishers with whom connection will be rejected. In the pattern `bidders/{bidder}/publisherConnections/{publisher}` where `{bidder}` is the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "A request to reject a batch of publisher connections.",
      "id": "BatchRejectPublisherConnectionsRequest"
    },
    "VideoContent": {
      "type": "object",
      "description": "Video content for a creative.",
      "id": "VideoContent",
      "properties": {
        "videoMetadata": {
          "$ref": "VideoMetadata",
          "readOnly": true,
          "description": "Output only. Video metadata."
        },
        "videoUrl": {
          "description": "The URL to fetch a video ad.",
          "type": "string"
        },
        "videoVastXml": {
          "description": "The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.",
          "type": "string"
        }
      }
    },
    "ListPretargetingConfigsResponse": {
      "properties": {
        "pretargetingConfigs": {
          "description": "List of pretargeting configurations.",
          "items": {
            "$ref": "PretargetingConfig"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token which can be passed to a subsequent call to the `ListPretargetingConfigs` method to retrieve the next page of results in ListPretargetingConfigsRequest.pageToken.",
          "type": "string"
        }
      },
      "description": "A response containing pretargeting configurations.",
      "id": "ListPretargetingConfigsResponse",
      "type": "object"
    },
    "Image": {
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL of the image.",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Image height in pixels."
        },
        "width": {
          "format": "int32",
          "type": "integer",
          "description": "Image width in pixels."
        }
      },
      "description": "An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved.",
      "id": "Image"
    },
    "NumericTargetingDimension": {
      "description": "Generic targeting used for targeting dimensions that contain a list of included and excluded numeric IDs used in app, user list, geo, and vertical id targeting.",
      "type": "object",
      "id": "NumericTargetingDimension",
      "properties": {
        "includedIds": {
          "description": "The IDs included in a configuration.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "excludedIds": {
          "description": "The IDs excluded in a configuration.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      }
    },
    "DestinationNotCrawlableEvidence": {
      "id": "DestinationNotCrawlableEvidence",
      "properties": {
        "reason": {
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Site's robots exclusion file (e.g., robots.txt) was unreachable.",
            "Timed out reading site's robots exclusion file (e.g., robots.txt).",
            "Crawler was disallowed by the site's robots exclusion file (e.g., robots.txt).",
            "Unknown reason."
          ],
          "description": "Reason of destination not crawlable.",
          "enum": [
            "REASON_UNSPECIFIED",
            "UNREACHABLE_ROBOTS",
            "TIMEOUT_ROBOTS",
            "ROBOTED_DENIED",
            "UNKNOWN"
          ]
        },
        "crawledUrl": {
          "description": "Destination URL that was attempted to be crawled.",
          "type": "string"
        },
        "crawlTime": {
          "description": "Approximate time of the crawl.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Evidence that the creative's destination URL was not crawlable by Google.",
      "type": "object"
    },
    "StringTargetingDimension": {
      "description": "Generic targeting with string values used in app, website and publisher targeting.",
      "properties": {
        "targetingMode": {
          "description": "How the items in this list should be targeted.",
          "type": "string",
          "enumDescriptions": [
            "Placeholder for undefined targeting mode.",
            "The inclusive list type. Inventory must match an item in this list to be targeted.",
            "The exclusive list type. Inventory must not match any item in this list to be targeted."
          ],
          "enum": [
            "TARGETING_MODE_UNSPECIFIED",
            "INCLUSIVE",
            "EXCLUSIVE"
          ]
        },
        "values": {
          "type": "array",
          "description": "The values specified.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "StringTargetingDimension"
    },
    "AppTargeting": {
      "description": "A subset of app inventory to target. Bid requests that match criteria in at least one of the specified dimensions will be sent.",
      "type": "object",
      "properties": {
        "mobileAppTargeting": {
          "description": "Targeted app IDs. App IDs can refer to those found in an app store or ones that are not published in an app store. A maximum of 30,000 app IDs can be targeted.",
          "$ref": "StringTargetingDimension"
        },
        "mobileAppCategoryTargeting": {
          "$ref": "NumericTargetingDimension",
          "description": "Lists of included and excluded mobile app categories as defined in https://developers.google.com/adwords/api/docs/appendix/mobileappcategories.csv."
        }
      },
      "id": "AppTargeting"
    },
    "PolicyTopicEntry": {
      "properties": {
        "policyTopic": {
          "type": "string",
          "description": "Policy topic this entry refers to. For example, \"ALCOHOL\", \"TRADEMARKS_IN_AD_TEXT\", or \"DESTINATION_NOT_WORKING\". The set of possible policy topics is not fixed for a particular API version and may change at any time. Can be used to filter the response of the creatives.list method"
        },
        "evidences": {
          "description": "Pieces of evidence associated with this policy topic entry.",
          "items": {
            "$ref": "PolicyTopicEvidence"
          },
          "type": "array"
        },
        "helpCenterUrl": {
          "type": "string",
          "description": "URL of the help center article describing this policy topic."
        }
      },
      "id": "PolicyTopicEntry",
      "description": "Each policy topic entry will represent a violation of a policy topic for a creative, with the policy topic information and optional evidence for the policy violation.",
      "type": "object"
    },
    "SuspendPretargetingConfigRequest": {
      "id": "SuspendPretargetingConfigRequest",
      "description": "A request to suspend a pretargeting configuration. Sets the configuration's state to SUSPENDED.",
      "type": "object",
      "properties": {}
    },
    "ListPublisherConnectionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve the next page of results. Pass this value in the ListPublisherConnectionsRequest.pageToken field in the subsequent call to the `ListPublisherConnections` method to retrieve the next page of results.",
          "type": "string"
        },
        "publisherConnections": {
          "items": {
            "$ref": "PublisherConnection"
          },
          "type": "array",
          "description": "The list of publisher connections."
        }
      },
      "id": "ListPublisherConnectionsResponse",
      "type": "object",
      "description": "A response to a request for listing publisher connections."
    },
    "DestinationNotWorkingEvidence": {
      "description": "Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.",
      "properties": {
        "redirectionError": {
          "description": "HTTP redirect chain error.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Too many redirect hops.",
            "Got a redirect but it was invalid.",
            "Got a redirect but it was empty.",
            "Unknown redirect error."
          ],
          "type": "string",
          "enum": [
            "REDIRECTION_ERROR_UNSPECIFIED",
            "TOO_MANY_REDIRECTS",
            "INVALID_REDIRECT",
            "EMPTY_REDIRECT",
            "REDIRECT_ERROR_UNKNOWN"
          ]
        },
        "lastCheckTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Approximate time when the ad destination was last checked."
        },
        "platform": {
          "description": "Platform of the non-working URL.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "The personal computer platform.",
            "The Android platform.",
            "The iOS platform."
          ],
          "type": "string",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "PERSONAL_COMPUTER",
            "ANDROID",
            "IOS"
          ]
        },
        "invalidPage": {
          "enumDescriptions": [
            "Default value that should never be used.",
            "Page was empty or had an error."
          ],
          "description": "Page was crawled successfully, but was detected as either a page with no content or an error page.",
          "enum": [
            "INVALID_PAGE_UNSPECIFIED",
            "EMPTY_OR_ERROR_PAGE"
          ],
          "type": "string"
        },
        "dnsError": {
          "type": "string",
          "enum": [
            "DNS_ERROR_UNSPECIFIED",
            "ERROR_DNS",
            "GOOGLE_CRAWLER_DNS_ISSUE"
          ],
          "enumDescriptions": [
            "Default value that should never be used.",
            "DNS name was not found.",
            "An internal issue occurred when Google's crawler tried to resolve the DNS entry. This is a Google-internal issue and may not be the result of an issue with the landing page."
          ],
          "description": "DNS lookup errors."
        },
        "expandedUrl": {
          "description": "The full non-working URL.",
          "type": "string"
        },
        "urlRejected": {
          "description": "Rejected because of malformed URLs or invalid requests.",
          "enum": [
            "URL_REJECTED_UNSPECIFIED",
            "BAD_REQUEST",
            "MALFORMED_URL",
            "URL_REJECTED_UNKNOWN"
          ],
          "enumDescriptions": [
            "Default value that should never be used.",
            "URL rejected because of a malformed request.",
            "URL rejected because of a malformed URL.",
            "URL rejected because of unknown reason."
          ],
          "type": "string"
        },
        "httpError": {
          "description": "HTTP error code (e.g. 404 or 5xx)",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "DestinationNotWorkingEvidence"
    },
    "DownloadSizeEvidence": {
      "type": "object",
      "id": "DownloadSizeEvidence",
      "description": "Total download size and URL-level download size breakdown for resources in a creative.",
      "properties": {
        "totalDownloadSizeKb": {
          "type": "integer",
          "format": "int32",
          "description": "Total download size (in kilobytes) for all the resources in the creative."
        },
        "topUrlDownloadSizeBreakdowns": {
          "description": "Download size broken down by URLs with the top download size.",
          "items": {
            "$ref": "UrlDownloadSize"
          },
          "type": "array"
        }
      }
    },
    "HtmlContent": {
      "description": "HTML content for a creative.",
      "id": "HtmlContent",
      "type": "object",
      "properties": {
        "height": {
          "description": "The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
          "format": "int32",
          "type": "integer"
        },
        "snippet": {
          "type": "string",
          "description": "The HTML snippet that displays the ad when inserted in the web page."
        }
      }
    },
    "ActivatePretargetingConfigRequest": {
      "type": "object",
      "properties": {},
      "id": "ActivatePretargetingConfigRequest",
      "description": "A request to activate a pretargeting configuration. Sets the configuration's state to ACTIVE."
    },
    "HttpCallEvidence": {
      "id": "HttpCallEvidence",
      "type": "object",
      "description": "HTTP calls made by a creative that resulted in policy violations.",
      "properties": {
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "URLs of HTTP calls made by the creative."
        }
      }
    },
    "NativeContent": {
      "properties": {
        "appIcon": {
          "description": "The app icon, for app download ads.",
          "$ref": "Image"
        },
        "clickTrackingUrl": {
          "type": "string",
          "description": "The URL to use for click tracking."
        },
        "logo": {
          "$ref": "Image",
          "description": "A smaller image, for the advertiser's logo."
        },
        "headline": {
          "description": "A short title for the ad.",
          "type": "string"
        },
        "body": {
          "description": "A long description of the ad.",
          "type": "string"
        },
        "videoUrl": {
          "type": "string",
          "description": "The URL to fetch a native video ad."
        },
        "callToAction": {
          "description": "A label for the button that the user is supposed to click.",
          "type": "string"
        },
        "starRating": {
          "type": "number",
          "description": "The app rating in the app store. Must be in the range [0-5].",
          "format": "double"
        },
        "videoVastXml": {
          "type": "string",
          "description": "The contents of a VAST document for a native video ad."
        },
        "priceDisplayText": {
          "description": "The price of the promoted app including currency info.",
          "type": "string"
        },
        "advertiserName": {
          "description": "The name of the advertiser or sponsor, to be displayed in the ad creative.",
          "type": "string"
        },
        "image": {
          "description": "A large image.",
          "$ref": "Image"
        },
        "clickLinkUrl": {
          "description": "The URL that the browser/SDK will load when the user clicks the ad.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "NativeContent",
      "description": "Native content for a creative."
    },
    "VideoMetadata": {
      "type": "object",
      "description": "Video metadata for a creative.",
      "properties": {
        "mediaFiles": {
          "description": "The list of all media files declared in the VAST. If there are multiple VASTs in a wrapper chain, this includes the media files from the deepest one in the chain.",
          "items": {
            "$ref": "MediaFile"
          },
          "type": "array"
        },
        "isVpaid": {
          "type": "boolean",
          "description": "Is this a VPAID ad? Can be used to filter the response of the creatives.list method."
        },
        "duration": {
          "type": "string",
          "description": "The duration of the ad. Can be used to filter the response of the creatives.list method.",
          "format": "google-duration"
        },
        "skipOffset": {
          "description": "The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "format": "google-duration"
        },
        "isValidVast": {
          "description": "Is this a valid VAST ad? Can be used to filter the response of the creatives.list method.",
          "type": "boolean"
        },
        "vastVersion": {
          "description": "The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "VAST 1.0",
            "VAST 2.0",
            "VAST 3.0",
            "VAST 4.0"
          ],
          "enum": [
            "VAST_VERSION_UNSPECIFIED",
            "VAST_VERSION_1_0",
            "VAST_VERSION_2_0",
            "VAST_VERSION_3_0",
            "VAST_VERSION_4_0"
          ]
        }
      },
      "id": "VideoMetadata"
    },
    "CreativeDimensions": {
      "properties": {
        "width": {
          "type": "string",
          "description": "The width of the creative in pixels.",
          "format": "int64"
        },
        "height": {
          "description": "The height of the creative in pixels.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CreativeDimensions",
      "description": "The dimensions of a creative. This applies to only HTML and Native creatives."
    },
    "RemoveTargetedAppsRequest": {
      "id": "RemoveTargetedAppsRequest",
      "type": "object",
      "description": "A request to stop targeting the provided apps in a specific pretargeting configuration. The pretargeting configuration itself specifies how these apps are targeted. in PretargetingConfig.appTargeting.mobileAppTargeting.",
      "properties": {
        "appIds": {
          "description": "A list of app IDs to stop targeting in the pretargeting configuration. These values will be removed from the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetRemarketingTagResponse": {
      "id": "GetRemarketingTagResponse",
      "properties": {
        "snippet": {
          "type": "string",
          "description": "A HTML tag that can be placed on the advertiser's page to add users to a user list. For more information and code samples on using snippet on your website refer to [Tag your site for remarketing]( https://support.google.com/google-ads/answer/2476688)."
        }
      },
      "type": "object",
      "description": "Response for a request to get remarketing tag."
    },
    "AdTechnologyProviders": {
      "id": "AdTechnologyProviders",
      "description": "The list of detected Ad Technology Providers for this creative. Bids placed for inventory that will serve to EEA or UK users are expected to comply with GDPR requirements. You must ensure that the creatives used in such bids should contain only user consented ad technology providers as indicated in the bid request. Google reserves the right to filter non-compliant bids. User consented ad technology providers can be found in the [Google Protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) with the `BidRequest.adslot.consented_providers_settings` field, and can be found as an [OpenRTB extension](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto) with the `BidRequest.user.ext.consented_providers_settings` and `BidRequest.user.ext.consent` fields. See https://support.google.com/authorizedbuyers/answer/9789378 for additional information about the Google TCF v2 integration.",
      "properties": {
        "unidentifiedProviderDomains": {
          "description": "Domains of detected unidentified ad technology providers (if any). You must ensure that the creatives used in bids placed for inventory that will serve to EEA or UK users does not contain unidentified ad technology providers. Google reserves the right to filter non-compliant bids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "detectedProviderIds": {
          "description": "The detected [Google Ad Tech Providers (ATP)](https://support.google.com/admanager/answer/9012903) for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider.",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "detectedGvlIds": {
          "description": "The detected IAB Global Vendor List (GVL) IDs for this creative. See the IAB Global Vendor List at https://vendor-list.consensu.org/v2/vendor-list.json for details about the vendors.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty",
      "type": "object"
    },
    "MediaFile": {
      "properties": {
        "bitrate": {
          "format": "int64",
          "description": "Bitrate of the video file, in Kbps. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "The MIME type of this media file. Can be used to filter the response of the creatives.list method.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Flash container.",
            "WebM container assuming VP9 codec.",
            "MPEG-4 container typically with H.264 codec.",
            "Ogg container assuming Theora codec.",
            "Video files hosted on YouTube.",
            "Windows Media Video Codec.",
            "3GPP container format used on 3G phones.",
            "Quicktime container format.",
            "Shockwave Flash (used for VPAID ads).",
            "Properties of VAST served by consumer survey.",
            "JavaScript (used for VPAID ads).",
            "Silverlight (used for VPAID ads).",
            "HLS/M3U8.",
            "DASH.",
            "MPEG-4 audio format.",
            "MPEG-3 audio format.",
            "Ogg audio format"
          ],
          "enum": [
            "VIDEO_MIME_TYPE_UNSPECIFIED",
            "MIME_VIDEO_XFLV",
            "MIME_VIDEO_WEBM",
            "MIME_VIDEO_MP4",
            "MIME_VIDEO_OGG",
            "MIME_VIDEO_YT_HOSTED",
            "MIME_VIDEO_X_MS_WMV",
            "MIME_VIDEO_3GPP",
            "MIME_VIDEO_MOV",
            "MIME_APPLICATION_SWF",
            "MIME_APPLICATION_SURVEY",
            "MIME_APPLICATION_JAVASCRIPT",
            "MIME_APPLICATION_SILVERLIGHT",
            "MIME_APPLICATION_MPEGURL",
            "MIME_APPLICATION_MPEGDASH",
            "MIME_AUDIO_MP4A",
            "MIME_AUDIO_MP3",
            "MIME_AUDIO_OGG"
          ]
        }
      },
      "id": "MediaFile",
      "description": "Information about each media file in the VAST.",
      "type": "object"
    },
    "Endpoint": {
      "id": "Endpoint",
      "type": "object",
      "properties": {
        "maximumQps": {
          "type": "string",
          "format": "int64",
          "description": "The maximum number of queries per second allowed to be sent to this server."
        },
        "url": {
          "readOnly": true,
          "description": "Output only. The URL that bid requests should be sent to.",
          "type": "string"
        },
        "bidProtocol": {
          "type": "string",
          "description": "The protocol that the bidder endpoint is using.",
          "enumDescriptions": [
            "Placeholder for undefined bid protocol. This value should not be used.",
            "Google RTB protocol / Protobuf encoding.",
            "OpenRTB / JSON encoding, specification version 2.2.",
            "OpenRTB / JSON encoding, specification version 2.3.",
            "OpenRTB / Protobuf encoding, specification version 2.3.",
            "OpenRTB / JSON encoding, specification version 2.4.",
            "OpenRTB / Protobuf encoding, specification version 2.4.",
            "OpenRTB / JSON encoding, specification version 2.5.",
            "OpenRTB / Protobuf encoding, specification version 2.5."
          ],
          "enum": [
            "BID_PROTOCOL_UNSPECIFIED",
            "GOOGLE_RTB",
            "OPENRTB_2_2",
            "OPENRTB_2_3",
            "OPENRTB_PROTOBUF_2_3",
            "OPENRTB_2_4",
            "OPENRTB_PROTOBUF_2_4",
            "OPENRTB_2_5",
            "OPENRTB_PROTOBUF_2_5"
          ]
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of the endpoint resource that must follow the pattern `bidders/{bidderAccountId}/endpoints/{endpointId}`, where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server.",
          "type": "string"
        },
        "tradingLocation": {
          "description": "The trading location that bid requests should be sent from. See https://developers.google.com/authorized-buyers/rtb/peer-guide#trading-locations for further information.",
          "enumDescriptions": [
            "A placeholder for an undefined trading region. This value should not be used.",
            "The Western US trading location.",
            "The Eastern US trading location.",
            "The European trading location.",
            "The Asia trading location."
          ],
          "enum": [
            "TRADING_LOCATION_UNSPECIFIED",
            "US_WEST",
            "US_EAST",
            "EUROPE",
            "ASIA"
          ],
          "type": "string"
        }
      },
      "description": "Bidder endpoint that receives bid requests."
    },
    "PolicyCompliance": {
      "id": "PolicyCompliance",
      "properties": {
        "topics": {
          "description": "Topics related to the policy compliance for this transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Topics may be present only if status is DISAPPROVED.",
          "items": {
            "$ref": "PolicyTopicEntry"
          },
          "type": "array"
        },
        "status": {
          "type": "string",
          "description": "Serving status for the given transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Can be used to filter the response of the creatives.list method.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Creative is pending review.",
            "Creative cannot serve.",
            "Creative is approved."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING_REVIEW",
            "DISAPPROVED",
            "APPROVED"
          ]
        }
      },
      "type": "object",
      "description": "Policy compliance of the creative for a transaction type or a region."
    },
    "UserList": {
      "description": "Represents an Authorized Buyers user list. Authorized Buyers can create/update/list user lists. Once a user list is created in the system, Authorized Buyers can add users to the user list using the bulk uploader API. Alternatively, users can be added by hosting a tag on the advertiser's page.",
      "id": "UserList",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. Display name of the user list. This must be unique across all user lists for a given account."
        },
        "description": {
          "description": "The description for the user list.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Name of the user list that must follow the pattern `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64 identifier assigned by Google to uniquely identify a user list.",
          "readOnly": true,
          "type": "string"
        },
        "urlRestriction": {
          "description": "Required. The URL restriction for the user list.",
          "$ref": "UrlRestriction"
        },
        "status": {
          "enumDescriptions": [
            "Default value that should never be used.",
            "New users can be added to the user list.",
            "New users cannot be added to the user list."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The status of the user list. A new user list starts out as open.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "OPEN",
            "CLOSED"
          ]
        },
        "membershipDurationDays": {
          "type": "string",
          "format": "int64",
          "description": "Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive."
        }
      },
      "type": "object"
    },
    "PretargetingConfig": {
      "id": "PretargetingConfig",
      "type": "object",
      "description": "Pretargeting configuration: a set of targeting dimensions applied at the pretargeting stage of the RTB funnel. These control which inventory a bidder will receive bid requests for.",
      "properties": {
        "includedMobileOperatingSystemIds": {
          "description": "The mobile operating systems included in this configuration as defined in https://storage.googleapis.com/adx-rtb-dictionaries/mobile-os.csv",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Placeholder for undefined state.",
            "This pretargeting configuration is actively being used to filter bid requests.",
            "This pretargeting configuration is suspended and not used in serving."
          ],
          "description": "Output only. The state of this pretargeting configuration.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "SUSPENDED"
          ],
          "readOnly": true
        },
        "invalidGeoIds": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "description": "Output only. Existing included or excluded geos that are invalid. Previously targeted geos may become invalid due to privacy restrictions."
        },
        "minimumViewabilityDecile": {
          "type": "integer",
          "format": "int32",
          "description": "The targeted minimum viewability decile, ranging in values [0, 10]. A value of 5 means that the configuration will only match adslots for which we predict at least 50% viewability. Values \u003e 10 will be rounded down to 10. An unset value or a value of 0 indicates that bid requests will be sent regardless of viewability."
        },
        "allowedUserTargetingModes": {
          "type": "array",
          "description": "Targeting modes included by this configuration. A bid request must allow all the specified targeting modes. An unset value allows all bid requests to be sent, regardless of which targeting modes they allow.",
          "items": {
            "enumDescriptions": [
              "Placeholder for undefined user targeting mode.",
              "Remarketing ads are allowed to serve.",
              "Ads based on user interest category targeting are allowed to serve."
            ],
            "type": "string",
            "enum": [
              "USER_TARGETING_MODE_UNSPECIFIED",
              "REMARKETING_ADS",
              "INTEREST_BASED_TARGETING"
            ]
          }
        },
        "publisherTargeting": {
          "$ref": "StringTargetingDimension",
          "description": "Targeting on a subset of publisher inventory. Publishers can either be targeted positively (bid requests will be sent only if the publisher is listed in the targeting dimension) or negatively (bid requests will be sent only if the publisher is not listed in the targeting dimension). A maximum of 10,000 publisher IDs can be targeted. Publisher IDs are found in [ads.txt](https://iabtechlab.com/ads-txt/) / [app-ads.txt](https://iabtechlab.com/app-ads-txt/) and in bid requests in the `BidRequest.publisher_id` field on the [Google RTB protocol](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) or the `BidRequest.site.publisher.id` / `BidRequest.app.publisher.id` field on the [OpenRTB protocol](https://developers.google.com/authorized-buyers/rtb/downloads/openrtb-adx-proto)."
        },
        "excludedContentLabelIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "The sensitive content category label IDs excluded in this configuration. Bid requests for inventory with any of the specified content label IDs will not be sent. Refer to this file https://storage.googleapis.com/adx-rtb-dictionaries/content-labels.txt for category IDs."
        },
        "verticalTargeting": {
          "$ref": "NumericTargetingDimension",
          "description": "The verticals included or excluded in this configuration as defined in https://developers.google.com/authorized-buyers/rtb/downloads/publisher-verticals"
        },
        "geoTargeting": {
          "$ref": "NumericTargetingDimension",
          "description": "The geos included or excluded in this configuration defined in https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv"
        },
        "includedEnvironments": {
          "items": {
            "enumDescriptions": [
              "Placeholder for unspecified environment. This value should not be used.",
              "App environment.",
              "Web environment."
            ],
            "type": "string",
            "enum": [
              "ENVIRONMENT_UNSPECIFIED",
              "APP",
              "WEB"
            ]
          },
          "type": "array",
          "description": "Environments that are being included. Bid requests will not be sent for a given environment if it is not included. Further restrictions can be applied to included environments to target only a subset of its inventory. An unset value includes all environments."
        },
        "userListTargeting": {
          "description": "The remarketing lists included or excluded in this configuration as defined in UserList.",
          "$ref": "NumericTargetingDimension"
        },
        "displayName": {
          "description": "The diplay name associated with this configuration. This name must be unique among all the pretargeting configurations a bidder has.",
          "type": "string"
        },
        "includedLanguages": {
          "items": {
            "type": "string"
          },
          "description": "The languages included in this configuration, represented by their language code. See https://developers.google.com/adwords/api/docs/appendix/languagecodes.",
          "type": "array"
        },
        "billingId": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. The identifier that corresponds to this pretargeting configuration that helps buyers track and attribute their spend across their own arbitrary divisions. If a bid request matches more than one configuration, the buyer chooses which billing_id to attribute each of their bids."
        },
        "interstitialTargeting": {
          "enumDescriptions": [
            "Unspecified interstitial targeting. Represents an interstitial-agnostic selection.",
            "Only bid requests for interstitial inventory should be sent.",
            "Only bid requests for non-interstitial inventory should be sent."
          ],
          "description": "The interstitial targeting specified for this configuration. The unset value will allow bid requests to be sent regardless of whether they are for interstitials or not.",
          "type": "string",
          "enum": [
            "INTERSTITIAL_TARGETING_UNSPECIFIED",
            "ONLY_INTERSTITIAL_REQUESTS",
            "ONLY_NON_INTERSTITIAL_REQUESTS"
          ]
        },
        "maximumQps": {
          "type": "string",
          "format": "int64",
          "description": "The maximum QPS threshold for this configuration. The bidder should receive no more than this number of bid requests matching this configuration per second across all their bidding endpoints among all trading locations. Further information available at https://developers.google.com/authorized-buyers/rtb/peer-guide"
        },
        "includedPlatforms": {
          "type": "array",
          "items": {
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "PERSONAL_COMPUTER",
              "PHONE",
              "TABLET",
              "CONNECTED_TV"
            ],
            "type": "string",
            "enumDescriptions": [
              "Placeholder for an undefined platform. This value should not be used.",
              "The personal computer platform.",
              "The mobile platform.",
              "The tablet platform.",
              "The connected TV platform."
            ]
          },
          "description": "The platforms included by this configration. Bid requests for devices with the specified platform types will be sent. An unset value allows all bid requests to be sent, regardless of platform."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the pretargeting configuration that must follow the pattern `bidders/{bidder_account_id}/pretargetingConfigs/{config_id}`"
        },
        "webTargeting": {
          "description": "Targeting on a subset of site inventory. If WEB is listed in included_environments, the specified targeting is applied. A maximum of 50,000 site URLs can be targeted. An unset value for targeting allows all web-based bid requests to be sent. Sites can either be targeting positively (bid requests will be sent only if the destination site is listed in the targeting dimension) or negatively (bid requests will be sent only if the destination site is not listed in the pretargeting configuration).",
          "$ref": "StringTargetingDimension"
        },
        "appTargeting": {
          "description": "Targeting on a subset of app inventory. If APP is listed in targeted_environments, the specified targeting is applied. A maximum of 30,000 app IDs can be targeted. An unset value for targeting allows all app-based bid requests to be sent. Apps can either be targeting positively (bid requests will be sent only if the destination app is listed in the targeting dimension) or negatively (bid requests will be sent only if the destination app is not listed in the targeting dimension).",
          "$ref": "AppTargeting"
        },
        "includedFormats": {
          "description": "Creative formats included by this configuration. Only bid requests eligible for at least one of the specified creative formats will be sent. An unset value will allow all bid requests to be sent, regardless of format.",
          "items": {
            "enum": [
              "CREATIVE_FORMAT_UNSPECIFIED",
              "HTML",
              "VAST",
              "NATIVE"
            ],
            "type": "string",
            "enumDescriptions": [
              "Placeholder for undefined creative format. This value should not be used.",
              "HTML and AMPHTML creatives.",
              "VAST video or audio creative.",
              "Native creative, including standard and video native ads."
            ]
          },
          "type": "array"
        },
        "includedUserIdTypes": {
          "description": "User identifier types included in this configuration. At least one of the user identifier types specified in this list must be available for the bid request to be sent.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Placeholder for unspecified user identifier.",
              "Hosted match data, referring to hosted_match_data in the bid request.",
              "Google cookie, referring to google_user_id in the bid request.",
              "Mobile device advertising ID."
            ],
            "enum": [
              "USER_ID_TYPE_UNSPECIFIED",
              "HOSTED_MATCH_DATA",
              "GOOGLE_COOKIE",
              "DEVICE_ID"
            ],
            "type": "string"
          }
        },
        "includedCreativeDimensions": {
          "type": "array",
          "items": {
            "$ref": "CreativeDimensions"
          },
          "description": "Creative dimensions included by this configuration. Only bid requests eligible for at least one of the specified creative dimensions will be sent. An unset value allows all bid requests to be sent, regardless of creative dimension."
        }
      }
    },
    "ListCreativesResponse": {
      "type": "object",
      "id": "ListCreativesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the ListCreativesRequest.pageToken field in the subsequent call to the `ListCreatives` method to retrieve the next page of results."
        },
        "creatives": {
          "type": "array",
          "items": {
            "$ref": "Creative"
          },
          "description": "The list of creatives."
        }
      },
      "description": "A response for listing creatives."
    },
    "BatchApprovePublisherConnectionsRequest": {
      "type": "object",
      "description": "A request to approve a batch of publisher connections.",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The names of the publishers with which connections will be approved. In the pattern `bidders/{bidder}/publisherConnections/{publisher}` where `{bidder}` is the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID."
        }
      },
      "id": "BatchApprovePublisherConnectionsRequest"
    },
    "Date": {
      "id": "Date",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "properties": {
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        },
        "year": {
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32"
        },
        "month": {
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OpenUserListRequest": {
      "type": "object",
      "id": "OpenUserListRequest",
      "properties": {},
      "description": "A request to open a specified user list."
    },
    "AddTargetedAppsRequest": {
      "description": "A request to start targeting the provided app IDs in a specific pretargeting configuration. The pretargeting configuration itself specifies how these apps are targeted. in PretargetingConfig.appTargeting.mobileAppTargeting.",
      "type": "object",
      "properties": {
        "targetingMode": {
          "enumDescriptions": [
            "Placeholder for undefined targeting mode.",
            "The inclusive list type. Inventory must match an item in this list to be targeted.",
            "The exclusive list type. Inventory must not match any item in this list to be targeted."
          ],
          "description": "Required. The targeting mode that should be applied to the list of app IDs. If there are existing targeted app IDs, must be equal to the existing PretargetingConfig.appTargeting.mobileAppTargeting.targetingMode or a 400 bad request error will be returned.",
          "type": "string",
          "enum": [
            "TARGETING_MODE_UNSPECIFIED",
            "INCLUSIVE",
            "EXCLUSIVE"
          ]
        },
        "appIds": {
          "type": "array",
          "description": "A list of app IDs to target in the pretargeting configuration. These values will be added to the list of targeted app IDs in PretargetingConfig.appTargeting.mobileAppTargeting.values.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AddTargetedAppsRequest"
    }
  },
  "batchPath": "batch",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "title": "Real-time Bidding API",
  "kind": "discovery#restDescription",
  "rootUrl": "https://realtimebidding.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/realtime-bidding": {
          "description": "See, create, edit, and delete your Authorized Buyers and Open Bidding account entities"
        }
      }
    }
  },
  "servicePath": "",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "Real-time Bidding",
  "name": "realtimebidding",
  "id": "realtimebidding:v1",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "default": "json"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "mtlsRootUrl": "https://realtimebidding.mtls.googleapis.com/",
  "version": "v1",
  "ownerDomain": "google.com",
  "revision": "20220608",
  "protocol": "rest",
  "baseUrl": "https://realtimebidding.googleapis.com/",
  "basePath": "",
  "description": "Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.",
  "resources": {
    "bidders": {
      "methods": {
        "get": {
          "parameters": {
            "name": {
              "required": true,
              "location": "path",
              "description": "Required. Name of the bidder to get. Format: `bidders/{bidderAccountId}`",
              "type": "string",
              "pattern": "^bidders/[^/]+$"
            }
          },
          "path": "v1/{+name}",
          "id": "realtimebidding.bidders.get",
          "response": {
            "$ref": "Bidder"
          },
          "flatPath": "v1/bidders/{biddersId}",
          "httpMethod": "GET",
          "description": "Gets a bidder account by its name.",
          "scopes": [
            "https://www.googleapis.com/auth/realtime-bidding"
          ],
          "parameterOrder": [
            "name"
          ]
        },
        "list": {
          "parameters": {
            "pageToken": {
              "description": "A token identifying a page of results the server should return. This value is received from a previous `ListBidders` call in ListBiddersResponse.nextPageToken.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of bidders to return. If unspecified, at most 100 bidders will be returned. The maximum value is 500; values above 500 will be coerced to 500.",
              "type": "integer",
              "location": "query"
            }
          },
          "id": "realtimebidding.bidders.list",
          "description": "Lists all the bidder accounts that belong to the caller.",
          "response": {
            "$ref": "ListBiddersResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/realtime-bidding"
          ],
          "path": "v1/bidders",
          "flatPath": "v1/bidders"
        }
      },
      "resources": {
        "endpoints": {
          "methods": {
            "get": {
              "id": "realtimebidding.bidders.endpoints.get",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "flatPath": "v1/bidders/{biddersId}/endpoints/{endpointsId}",
              "response": {
                "$ref": "Endpoint"
              },
              "description": "Gets a bidder endpoint by its name.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Name of the bidder endpoint to get. Format: `bidders/{bidderAccountId}/endpoints/{endpointId}`",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^bidders/[^/]+/endpoints/[^/]+$"
                }
              }
            },
            "list": {
              "description": "Lists all the bidder's endpoints.",
              "id": "realtimebidding.bidders.endpoints.list",
              "path": "v1/{+parent}/endpoints",
              "flatPath": "v1/bidders/{biddersId}/endpoints",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListEndpointsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. This value is received from a previous `ListEndpoints` call in ListEndpointsResponse.nextPageToken.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of endpoints to return. If unspecified, at most 100 endpoints will be returned. The maximum value is 500; values above 500 will be coerced to 500."
                },
                "parent": {
                  "description": "Required. Name of the bidder whose endpoints will be listed. Format: `bidders/{bidderAccountId}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^bidders/[^/]+$",
                  "location": "path"
                }
              }
            },
            "patch": {
              "response": {
                "$ref": "Endpoint"
              },
              "description": "Updates a bidder's endpoint.",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "flatPath": "v1/bidders/{biddersId}/endpoints/{endpointsId}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "id": "realtimebidding.bidders.endpoints.patch",
              "path": "v1/{+name}",
              "request": {
                "$ref": "Endpoint"
              },
              "parameters": {
                "updateMask": {
                  "description": "Field mask to use for partial in-place updates.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "description": "Output only. Name of the endpoint resource that must follow the pattern `bidders/{bidderAccountId}/endpoints/{endpointId}`, where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server.",
                  "required": true,
                  "pattern": "^bidders/[^/]+/endpoints/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              }
            }
          }
        },
        "publisherConnections": {
          "methods": {
            "list": {
              "flatPath": "v1/bidders/{biddersId}/publisherConnections",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListPublisherConnectionsResponse.nextPageToken returned from the previous call to the 'ListPublisherConnections' method."
                },
                "filter": {
                  "type": "string",
                  "description": "Query string to filter publisher connections. Connections can be filtered by `displayName`, `publisherPlatform`, and `biddingState`. If no filter is specified, all publisher connections will be returned. Example: 'displayName=\"Great Publisher*\" AND publisherPlatform=ADMOB AND biddingState != PENDING' See https://google.aip.dev/160 for more information about filtering syntax.",
                  "location": "query"
                },
                "orderBy": {
                  "location": "query",
                  "description": "Order specification by which results should be sorted. If no sort order is specified, the results will be returned in an arbitrary order. Currently results can be sorted by `createTime`. Example: 'createTime DESC'.",
                  "type": "string"
                },
                "parent": {
                  "description": "Required. Name of the bidder for which publishers have initiated connections. The pattern for this resource is `bidders/{bidder}` where `{bidder}` represents the account ID of the bidder.",
                  "pattern": "^bidders/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "pageSize": {
                  "description": "Requested page size. The server may return fewer results than requested (due to timeout constraint) even if more are available via another call. If unspecified, the server will pick an appropriate default. Acceptable values are 1 to 5000, inclusive.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                }
              },
              "path": "v1/{+parent}/publisherConnections",
              "response": {
                "$ref": "ListPublisherConnectionsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.bidders.publisherConnections.list",
              "description": "Lists publisher connections for a given bidder.",
              "httpMethod": "GET"
            },
            "get": {
              "parameters": {
                "name": {
                  "description": "Required. Name of the publisher whose connection information is to be retrieved. In the pattern `bidders/{bidder}/publisherConnections/{publisher}` where `{bidder}` is the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID. See publisherConnection.name.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^bidders/[^/]+/publisherConnections/[^/]+$"
                }
              },
              "response": {
                "$ref": "PublisherConnection"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "realtimebidding.bidders.publisherConnections.get",
              "description": "Gets a publisher connection.",
              "path": "v1/{+name}",
              "flatPath": "v1/bidders/{biddersId}/publisherConnections/{publisherConnectionsId}"
            },
            "batchApprove": {
              "flatPath": "v1/bidders/{biddersId}/publisherConnections:batchApprove",
              "response": {
                "$ref": "BatchApprovePublisherConnectionsResponse"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The bidder for whom publisher connections will be approved. Format: `bidders/{bidder}` where `{bidder}` is the account ID of the bidder.",
                  "pattern": "^bidders/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "BatchApprovePublisherConnectionsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.bidders.publisherConnections.batchApprove",
              "description": "Batch approves multiple publisher connections.",
              "path": "v1/{+parent}/publisherConnections:batchApprove"
            },
            "batchReject": {
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "request": {
                "$ref": "BatchRejectPublisherConnectionsRequest"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The bidder for whom publisher connections will be rejected. Format: `bidders/{bidder}` where `{bidder}` is the account ID of the bidder.",
                  "required": true,
                  "location": "path",
                  "pattern": "^bidders/[^/]+$",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "description": "Batch rejects multiple publisher connections.",
              "id": "realtimebidding.bidders.publisherConnections.batchReject",
              "path": "v1/{+parent}/publisherConnections:batchReject",
              "response": {
                "$ref": "BatchRejectPublisherConnectionsResponse"
              },
              "flatPath": "v1/bidders/{biddersId}/publisherConnections:batchReject",
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "creatives": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.bidders.creatives.list",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "description": "Lists creatives as they are at the time of the initial request. This call may take multiple hours to complete. For large, paginated requests, this method returns a snapshot of creatives at the time of request for the first page. `lastStatusUpdate` and `creativeServingDecision` may be outdated for creatives on sequential pages. We recommend [Google Cloud Pub/Sub](//cloud.google.com/pubsub/docs/overview) to view the latest status.",
              "parameters": {
                "filter": {
                  "description": "Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED'",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^bidders/[^/]+$",
                  "description": "Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either `buyers/{buyerAccountId}` or `bidders/{bidderAccountId}`. For `buyers/{buyerAccountId}`, the `buyerAccountId` can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer (`456`) under bidder account (`123`), you would use the pattern: `buyers/456`. 3. The ID of the bidder itself. So for listing creatives pertaining to bidder (`123`), you would use `buyers/123`. If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use `bidders/{bidderAccountId}`, e.g., for all creatives pertaining to bidder (`123`), use `bidders/123`."
                },
                "view": {
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "location": "query",
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".",
                  "type": "string",
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ]
                },
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method. Page tokens for continued pages are valid for up to five hours, counting from the call to 'ListCreatives' for the first page.",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available via another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive.",
                  "location": "query"
                }
              },
              "flatPath": "v1/bidders/{biddersId}/creatives",
              "path": "v1/{+parent}/creatives"
            },
            "watch": {
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/bidders/{biddersId}/creatives:watch",
              "httpMethod": "POST",
              "path": "v1/{+parent}/creatives:watch",
              "id": "realtimebidding.bidders.creatives.watch",
              "description": "Watches all creatives pertaining to a bidder. It is sufficient to invoke this endpoint once per bidder. A Pub/Sub topic will be created and notifications will be pushed to the topic when any of the bidder's creatives change status. All of the bidder's service accounts will have access to read from the topic. Subsequent invocations of this method will return the existing Pub/Sub configuration.",
              "request": {
                "$ref": "WatchCreativesRequest"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. To watch all creatives pertaining to the bidder and all its child seat accounts, the bidder must follow the pattern `bidders/{bidderAccountId}`.",
                  "location": "path",
                  "pattern": "^bidders/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "response": {
                "$ref": "WatchCreativesResponse"
              }
            }
          }
        },
        "pretargetingConfigs": {
          "methods": {
            "suspend": {
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:suspend",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "type": "string",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "request": {
                "$ref": "SuspendPretargetingConfigRequest"
              },
              "id": "realtimebidding.bidders.pretargetingConfigs.suspend",
              "description": "Suspends a pretargeting configuration.",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "path": "v1/{+name}:suspend"
            },
            "create": {
              "description": "Creates a pretargeting configuration. A pretargeting configuration's state (PretargetingConfig.state) is active upon creation, and it will start to affect traffic shortly after. A bidder may create a maximum of 10 pretargeting configurations. Attempts to exceed this maximum results in a 400 bad request error.",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/pretargetingConfigs",
              "id": "realtimebidding.bidders.pretargetingConfigs.create",
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs",
              "parameters": {
                "parent": {
                  "pattern": "^bidders/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the bidder to create the pretargeting configuration for. Format: bidders/{bidderAccountId}",
                  "type": "string",
                  "required": true
                }
              },
              "request": {
                "$ref": "PretargetingConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ]
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Name of the pretargeting configuration to get. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "required": true,
                  "type": "string",
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "response": {
                "$ref": "PretargetingConfig"
              },
              "id": "realtimebidding.bidders.pretargetingConfigs.get",
              "description": "Gets a pretargeting configuration."
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/pretargetingConfigs",
              "response": {
                "$ref": "ListPretargetingConfigsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.bidders.pretargetingConfigs.list",
              "description": "Lists all pretargeting configurations for a single bidder.",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of pretargeting configurations to return. If unspecified, at most 10 pretargeting configurations will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. This value is received from a previous `ListPretargetingConfigs` call in ListPretargetingConfigsResponse.nextPageToken."
                },
                "parent": {
                  "description": "Required. Name of the bidder whose pretargeting configurations will be listed. Format: bidders/{bidderAccountId}",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^bidders/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs"
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "id": "realtimebidding.bidders.pretargetingConfigs.patch",
              "description": "Updates a pretargeting configuration.",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}",
              "request": {
                "$ref": "PretargetingConfig"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "required": true,
                  "description": "Output only. Name of the pretargeting configuration that must follow the pattern `bidders/{bidder_account_id}/pretargetingConfigs/{config_id}`",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Field mask to use for partial in-place updates.",
                  "location": "query"
                }
              },
              "path": "v1/{+name}"
            },
            "removeTargetedApps": {
              "request": {
                "$ref": "RemoveTargetedAppsRequest"
              },
              "id": "realtimebidding.bidders.pretargetingConfigs.removeTargetedApps",
              "parameterOrder": [
                "pretargetingConfig"
              ],
              "description": "Removes targeted apps from the pretargeting configuration.",
              "path": "v1/{+pretargetingConfig}:removeTargetedApps",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:removeTargetedApps",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "POST",
              "parameters": {
                "pretargetingConfig": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$"
                }
              }
            },
            "addTargetedSites": {
              "request": {
                "$ref": "AddTargetedSitesRequest"
              },
              "path": "v1/{+pretargetingConfig}:addTargetedSites",
              "id": "realtimebidding.bidders.pretargetingConfigs.addTargetedSites",
              "parameters": {
                "pretargetingConfig": {
                  "required": true,
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "location": "path",
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "PretargetingConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "pretargetingConfig"
              ],
              "httpMethod": "POST",
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:addTargetedSites",
              "description": "Adds targeted sites to the pretargeting configuration."
            },
            "removeTargetedPublishers": {
              "parameterOrder": [
                "pretargetingConfig"
              ],
              "description": "Removes targeted publishers from the pretargeting config.",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "path": "v1/{+pretargetingConfig}:removeTargetedPublishers",
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:removeTargetedPublishers",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "id": "realtimebidding.bidders.pretargetingConfigs.removeTargetedPublishers",
              "request": {
                "$ref": "RemoveTargetedPublishersRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "pretargetingConfig": {
                  "type": "string",
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}"
                }
              }
            },
            "addTargetedApps": {
              "httpMethod": "POST",
              "request": {
                "$ref": "AddTargetedAppsRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "description": "Adds targeted apps to the pretargeting configuration.",
              "parameterOrder": [
                "pretargetingConfig"
              ],
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:addTargetedApps",
              "parameters": {
                "pretargetingConfig": {
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "location": "path"
                }
              },
              "path": "v1/{+pretargetingConfig}:addTargetedApps",
              "id": "realtimebidding.bidders.pretargetingConfigs.addTargetedApps",
              "response": {
                "$ref": "PretargetingConfig"
              }
            },
            "delete": {
              "httpMethod": "DELETE",
              "path": "v1/{+name}",
              "response": {
                "$ref": "Empty"
              },
              "description": "Deletes a pretargeting configuration.",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "description": "Required. The name of the pretargeting configuration to delete. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "location": "path",
                  "type": "string"
                }
              },
              "id": "realtimebidding.bidders.pretargetingConfigs.delete",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}",
              "parameterOrder": [
                "name"
              ]
            },
            "activate": {
              "description": "Activates a pretargeting configuration.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+name}:activate",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:activate",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "ActivatePretargetingConfigRequest"
              },
              "id": "realtimebidding.bidders.pretargetingConfigs.activate"
            },
            "addTargetedPublishers": {
              "request": {
                "$ref": "AddTargetedPublishersRequest"
              },
              "description": "Adds targeted publishers to the pretargeting config.",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "id": "realtimebidding.bidders.pretargetingConfigs.addTargetedPublishers",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:addTargetedPublishers",
              "parameters": {
                "pretargetingConfig": {
                  "location": "path",
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}"
                }
              },
              "parameterOrder": [
                "pretargetingConfig"
              ],
              "path": "v1/{+pretargetingConfig}:addTargetedPublishers"
            },
            "removeTargetedSites": {
              "id": "realtimebidding.bidders.pretargetingConfigs.removeTargetedSites",
              "description": "Removes targeted sites from the pretargeting configuration.",
              "request": {
                "$ref": "RemoveTargetedSitesRequest"
              },
              "parameterOrder": [
                "pretargetingConfig"
              ],
              "path": "v1/{+pretargetingConfig}:removeTargetedSites",
              "response": {
                "$ref": "PretargetingConfig"
              },
              "parameters": {
                "pretargetingConfig": {
                  "pattern": "^bidders/[^/]+/pretargetingConfigs/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the pretargeting configuration. Format: bidders/{bidderAccountId}/pretargetingConfig/{configId}",
                  "type": "string"
                }
              },
              "flatPath": "v1/bidders/{biddersId}/pretargetingConfigs/{pretargetingConfigsId}:removeTargetedSites",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ]
            }
          }
        }
      }
    },
    "buyers": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/realtime-bidding"
          ],
          "description": "Gets a buyer account by its name.",
          "response": {
            "$ref": "Buyer"
          },
          "path": "v1/{+name}",
          "httpMethod": "GET",
          "id": "realtimebidding.buyers.get",
          "flatPath": "v1/buyers/{buyersId}",
          "parameters": {
            "name": {
              "pattern": "^buyers/[^/]+$",
              "location": "path",
              "type": "string",
              "description": "Required. Name of the buyer to get. Format: `buyers/{buyerId}`",
              "required": true
            }
          },
          "parameterOrder": [
            "name"
          ]
        },
        "getRemarketingTag": {
          "path": "v1/{+name}:getRemarketingTag",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "pattern": "^buyers/[^/]+$",
              "type": "string",
              "description": "Required. To fetch remarketing tag for an account, name must follow the pattern `buyers/{accountId}` where `{accountId}` represents ID of a buyer that owns the remarketing tag. For a bidder accessing remarketing tag on behalf of a child seat buyer, `{accountId}` should represent the ID of the child seat buyer. To fetch remarketing tag for a specific user list, name must follow the pattern `buyers/{accountId}/userLists/{userListId}`. See UserList.name."
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "GetRemarketingTagResponse"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/buyers/{buyersId}:getRemarketingTag",
          "id": "realtimebidding.buyers.getRemarketingTag",
          "description": "Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list.",
          "scopes": [
            "https://www.googleapis.com/auth/realtime-bidding"
          ]
        },
        "list": {
          "httpMethod": "GET",
          "response": {
            "$ref": "ListBuyersResponse"
          },
          "path": "v1/buyers",
          "scopes": [
            "https://www.googleapis.com/auth/realtime-bidding"
          ],
          "parameters": {
            "pageSize": {
              "location": "query",
              "format": "int32",
              "type": "integer",
              "description": "The maximum number of buyers to return. If unspecified, at most 100 buyers will be returned. The maximum value is 500; values above 500 will be coerced to 500."
            },
            "pageToken": {
              "location": "query",
              "description": "A token identifying a page of results the server should return. This value is received from a previous `ListBuyers` call in ListBuyersResponse.nextPageToken.",
              "type": "string"
            }
          },
          "flatPath": "v1/buyers",
          "id": "realtimebidding.buyers.list",
          "description": "Lists all buyer account information the calling buyer user or service account is permissioned to manage.",
          "parameterOrder": []
        }
      },
      "resources": {
        "userLists": {
          "methods": {
            "create": {
              "httpMethod": "POST",
              "request": {
                "$ref": "UserList"
              },
              "flatPath": "v1/buyers/{buyersId}/userLists",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "response": {
                "$ref": "UserList"
              },
              "description": "Create a new user list.",
              "parameterOrder": [
                "parent"
              ],
              "id": "realtimebidding.buyers.userLists.create",
              "path": "v1/{+parent}/userLists",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The name of the parent buyer of the user list to be retrieved that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , `{buyerAccountId}` should represent the account ID of the child seat buyer.",
                  "location": "path",
                  "pattern": "^buyers/[^/]+$",
                  "required": true
                }
              }
            },
            "update": {
              "description": "Update the given user list. Only user lists with URLRestrictions can be updated.",
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}",
              "id": "realtimebidding.buyers.userLists.update",
              "httpMethod": "PUT",
              "response": {
                "$ref": "UserList"
              },
              "request": {
                "$ref": "UserList"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Output only. Name of the user list that must follow the pattern `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64 identifier assigned by Google to uniquely identify a user list.",
                  "location": "path",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v1/{+name}"
            },
            "getRemarketingTag": {
              "parameterOrder": [
                "name"
              ],
              "description": "Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list.",
              "response": {
                "$ref": "GetRemarketingTagResponse"
              },
              "path": "v1/{+name}:getRemarketingTag",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:getRemarketingTag",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "description": "Required. To fetch remarketing tag for an account, name must follow the pattern `buyers/{accountId}` where `{accountId}` represents ID of a buyer that owns the remarketing tag. For a bidder accessing remarketing tag on behalf of a child seat buyer, `{accountId}` should represent the ID of the child seat buyer. To fetch remarketing tag for a specific user list, name must follow the pattern `buyers/{accountId}/userLists/{userListId}`. See UserList.name.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "id": "realtimebidding.buyers.userLists.getRemarketingTag"
            },
            "list": {
              "description": "Lists the user lists visible to the current user.",
              "parameterOrder": [
                "parent"
              ],
              "id": "realtimebidding.buyers.userLists.list",
              "path": "v1/{+parent}/userLists",
              "response": {
                "$ref": "ListUserListsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^buyers/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the parent buyer for the user lists to be returned that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , `{buyerAccountId}` should represent the account ID of the child seat buyer.",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Continuation page token (as received from a previous response).",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The number of results to return per page.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "flatPath": "v1/buyers/{buyersId}/userLists"
            },
            "open": {
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "id": "realtimebidding.buyers.userLists.open",
              "description": "Change the status of a user list to OPEN. This allows new users to be added to the user list.",
              "path": "v1/{+name}:open",
              "response": {
                "$ref": "UserList"
              },
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:open",
              "request": {
                "$ref": "OpenUserListRequest"
              },
              "parameters": {
                "name": {
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "description": "Required. The name of the user list to open. See UserList.name",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ]
            },
            "close": {
              "parameters": {
                "name": {
                  "description": "Required. The name of the user list to close. See UserList.name",
                  "required": true,
                  "type": "string",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Change the status of a user list to CLOSED. This prevents new users from being added to the user list.",
              "response": {
                "$ref": "UserList"
              },
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:close",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "CloseUserListRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}:close",
              "id": "realtimebidding.buyers.userLists.close"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "description": "Gets a user list by its name.",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the user list to be retrieved. See UserList.name.",
                  "required": true
                }
              },
              "response": {
                "$ref": "UserList"
              },
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "realtimebidding.buyers.userLists.get",
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}",
              "httpMethod": "GET"
            }
          }
        },
        "creatives": {
          "methods": {
            "patch": {
              "id": "realtimebidding.buyers.creatives.patch",
              "path": "v1/{+name}",
              "description": "Updates a creative.",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Creative"
              },
              "parameters": {
                "name": {
                  "pattern": "^buyers/[^/]+/creatives/[^/]+$",
                  "location": "path",
                  "description": "Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.",
                  "type": "string",
                  "required": true
                },
                "updateMask": {
                  "location": "query",
                  "description": "Field mask to use for partial in-place updates.",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "response": {
                "$ref": "Creative"
              },
              "flatPath": "v1/buyers/{buyersId}/creatives/{creativesId}",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "PATCH"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Creative"
              },
              "httpMethod": "POST",
              "description": "Creates a creative.",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^buyers/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the parent buyer that the new creative belongs to that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns a creative. For a bidder accessing creatives on behalf of a child seat buyer, `{buyerAccountId}` should represent the account ID of the child seat buyer."
                }
              },
              "request": {
                "$ref": "Creative"
              },
              "path": "v1/{+parent}/creatives",
              "id": "realtimebidding.buyers.creatives.create",
              "flatPath": "v1/buyers/{buyersId}/creatives"
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available via another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive."
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ],
                  "type": "string",
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\"."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method. Page tokens for continued pages are valid for up to five hours, counting from the call to 'ListCreatives' for the first page."
                },
                "parent": {
                  "location": "path",
                  "description": "Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either `buyers/{buyerAccountId}` or `bidders/{bidderAccountId}`. For `buyers/{buyerAccountId}`, the `buyerAccountId` can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer (`456`) under bidder account (`123`), you would use the pattern: `buyers/456`. 3. The ID of the bidder itself. So for listing creatives pertaining to bidder (`123`), you would use `buyers/123`. If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use `bidders/{bidderAccountId}`, e.g., for all creatives pertaining to bidder (`123`), use `bidders/123`.",
                  "pattern": "^buyers/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED'",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "path": "v1/{+parent}/creatives",
              "flatPath": "v1/buyers/{buyersId}/creatives",
              "id": "realtimebidding.buyers.creatives.list",
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists creatives as they are at the time of the initial request. This call may take multiple hours to complete. For large, paginated requests, this method returns a snapshot of creatives at the time of request for the first page. `lastStatusUpdate` and `creativeServingDecision` may be outdated for creatives on sequential pages. We recommend [Google Cloud Pub/Sub](//cloud.google.com/pubsub/docs/overview) to view the latest status."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "description": "Gets a creative.",
              "httpMethod": "GET",
              "flatPath": "v1/buyers/{buyersId}/creatives/{creativesId}",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.buyers.creatives.get",
              "response": {
                "$ref": "Creative"
              },
              "path": "v1/{+name}",
              "parameters": {
                "view": {
                  "location": "query",
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "type": "string",
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ],
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\"."
                },
                "name": {
                  "description": "Required. Name of the creative to retrieve. See creative.name.",
                  "pattern": "^buyers/[^/]+/creatives/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              }
            }
          }
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/"
}

{
  "fullyEncodeReservedExpansion": true,
  "version_module": true,
  "ownerName": "Google",
  "servicePath": "",
  "documentationLink": "https://developers.google.com/vault",
  "basePath": "",
  "schemas": {
    "AccountCount": {
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of results (messages or files) found for this account.",
          "format": "int64",
          "type": "string"
        },
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        }
      },
      "description": "The results count for each account.",
      "id": "AccountCount"
    },
    "CloseMatterResponse": {
      "description": "Response to a CloseMatterRequest.",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state **CLOSED**."
        }
      },
      "type": "object",
      "id": "CloseMatterResponse"
    },
    "HangoutsChatInfo": {
      "description": "The Chat spaces to search",
      "properties": {
        "roomId": {
          "items": {
            "type": "string"
          },
          "description": "A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/hangouts/chat).",
          "type": "array"
        }
      },
      "type": "object",
      "id": "HangoutsChatInfo"
    },
    "CloseMatterRequest": {
      "id": "CloseMatterRequest",
      "type": "object",
      "properties": {},
      "description": "Close a matter by ID."
    },
    "GroupsCountResult": {
      "properties": {
        "nonQueryableAccounts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "When **DataScope** is **HELD_DATA**, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set."
        },
        "accountCounts": {
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "AccountCount"
          },
          "type": "array"
        },
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "type": "string",
          "format": "int64"
        },
        "matchingAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts that can be queried and have more than zero messages."
        },
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "type": "array",
          "items": {
            "$ref": "AccountCountError"
          }
        }
      },
      "description": "Groups specific count metrics.",
      "type": "object",
      "id": "GroupsCountResult"
    },
    "HangoutsChatOptions": {
      "type": "object",
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "For searches by account or organizational unit, set to **true** to include rooms."
        }
      },
      "description": "Additional options for Google Chat search",
      "id": "HangoutsChatOptions"
    },
    "ReopenMatterResponse": {
      "id": "ReopenMatterResponse",
      "type": "object",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state **OPEN**."
        }
      },
      "description": "Response to a ReopenMatterRequest."
    },
    "Hold": {
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last time this hold was modified."
        },
        "name": {
          "description": "The name of the hold.",
          "type": "string"
        },
        "accounts": {
          "items": {
            "$ref": "HeldAccount"
          },
          "description": "If set, the hold applies to the specified accounts and **orgUnit** must be empty.",
          "type": "array"
        },
        "holdId": {
          "description": "The unique immutable ID of the hold. Assigned during creation.",
          "type": "string"
        },
        "query": {
          "$ref": "CorpusQuery",
          "description": "Service-specific options. If set, **CorpusQuery** must match **CorpusType**."
        },
        "orgUnit": {
          "description": "If set, the hold applies to all members of the organizational unit and **accounts** must be empty. This property is mutable. For Groups holds, set **accounts**.",
          "$ref": "HeldOrgUnit"
        },
        "corpus": {
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "enumDescriptions": [
            "No service specified.",
            "Drive, including Meet and Sites.",
            "For search, Gmail and classic Hangouts. For holds, Gmail only.",
            "Groups.",
            "For search, Google Chat only. For holds, Google Chat and classic Hangouts.",
            "Google Voice."
          ],
          "description": "The service to be searched.",
          "type": "string"
        }
      },
      "description": "A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "type": "object",
      "id": "Hold"
    },
    "RemoveMatterPermissionsRequest": {
      "type": "object",
      "id": "RemoveMatterPermissionsRequest",
      "description": "Remove an account as a matter collaborator.",
      "properties": {
        "accountId": {
          "description": "The account ID.",
          "type": "string"
        }
      }
    },
    "Query": {
      "properties": {
        "timeZone": {
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).",
          "type": "string"
        },
        "method": {
          "enumDescriptions": [
            "A search method must be specified or else it is rejected.",
            "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).",
            "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).",
            "Search the data in the Team Drive specified in **team_drive_info**.",
            "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.",
            "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).",
            "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."
          ],
          "description": "The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "type": "string"
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date."
        },
        "voiceOptions": {
          "description": "Set Voice search-specific options.",
          "$ref": "VoiceOptions"
        },
        "dataScope": {
          "type": "string",
          "enumDescriptions": [
            "No data source specified.",
            "All available data.",
            "Only data on hold.",
            "Only data not yet processed by Vault. (Gmail and Groups only)"
          ],
          "description": "The data source to search.",
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ]
        },
        "orgUnitInfo": {
          "$ref": "OrgUnitInfo",
          "description": "Required when **SearchMethod** is **ORG_UNIT**."
        },
        "hangoutsChatOptions": {
          "description": "Set Chat search-specific options. (read-only)",
          "$ref": "HangoutsChatOptions"
        },
        "teamDriveInfo": {
          "description": "Required when **SearchMethod** is **TEAM_DRIVE**.",
          "$ref": "TeamDriveInfo"
        },
        "accountInfo": {
          "$ref": "AccountInfo",
          "description": "Required when **SearchMethod** is **ACCOUNT**."
        },
        "searchMethod": {
          "enumDescriptions": [
            "A search method must be specified or else it is rejected.",
            "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).",
            "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).",
            "Search the data in the Team Drive specified in **team_drive_info**.",
            "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.",
            "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).",
            "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."
          ],
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "description": "The search method to use.",
          "type": "string"
        },
        "mailOptions": {
          "description": "Set Gmail search-specific options.",
          "$ref": "MailOptions"
        },
        "driveOptions": {
          "$ref": "DriveOptions",
          "description": "Set Drive search-specific options."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date."
        },
        "sharedDriveInfo": {
          "$ref": "SharedDriveInfo",
          "description": "Required when **SearchMethod** is **SHARED_DRIVE**."
        },
        "corpus": {
          "type": "string",
          "description": "The Google Workspace service to search.",
          "enumDescriptions": [
            "No service specified.",
            "Drive, including Meet and Sites.",
            "For search, Gmail and classic Hangouts. For holds, Gmail only.",
            "Groups.",
            "For search, Google Chat only. For holds, Google Chat and classic Hangouts.",
            "Google Voice."
          ],
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ]
        },
        "terms": {
          "description": "Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.",
          "type": "string"
        },
        "hangoutsChatInfo": {
          "$ref": "HangoutsChatInfo",
          "description": "Required when **SearchMethod** is **ROOM**. (read-only)"
        }
      },
      "description": "The query definition used for search and export.",
      "id": "Query",
      "type": "object"
    },
    "VoiceExportOptions": {
      "id": "VoiceExportOptions",
      "type": "object",
      "properties": {
        "exportFormat": {
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "description": "The file format for exported text messages.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string"
        }
      },
      "description": "The options for Voice exports."
    },
    "RemoveHeldAccountsRequest": {
      "id": "RemoveHeldAccountsRequest",
      "properties": {
        "accountIds": {
          "description": "The account IDs of the accounts to remove from the hold.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Remove a list of accounts from a hold."
    },
    "RemoveHeldAccountsResponse": {
      "id": "RemoveHeldAccountsResponse",
      "type": "object",
      "description": "Response for batch delete held accounts.",
      "properties": {
        "statuses": {
          "description": "A list of statuses for the deleted accounts. Results have the same order as the request.",
          "items": {
            "$ref": "Status"
          },
          "type": "array"
        }
      }
    },
    "ListMattersResponse": {
      "description": "Provides the list of matters.",
      "id": "ListMattersResponse",
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        },
        "matters": {
          "items": {
            "$ref": "Matter"
          },
          "description": "List of matters.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "ExportOptions": {
      "id": "ExportOptions",
      "properties": {
        "mailOptions": {
          "description": "Options for Gmail exports.",
          "$ref": "MailExportOptions"
        },
        "groupsOptions": {
          "description": "Options for Groups exports.",
          "$ref": "GroupsExportOptions"
        },
        "driveOptions": {
          "$ref": "DriveExportOptions",
          "description": "Options for Drive exports."
        },
        "voiceOptions": {
          "$ref": "VoiceExportOptions",
          "description": "Options for Voice exports."
        },
        "hangoutsChatOptions": {
          "description": "Options for Chat exports.",
          "$ref": "HangoutsChatExportOptions"
        },
        "region": {
          "type": "string",
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "description": "The requested data region for the export.",
          "enumDescriptions": [
            "The region is unspecified. Defaults to ANY.",
            "Any region.",
            "United States region.",
            "Europe region."
          ]
        }
      },
      "type": "object",
      "description": "Additional options for exports"
    },
    "CountArtifactsRequest": {
      "properties": {
        "query": {
          "$ref": "Query",
          "description": "The search query."
        },
        "view": {
          "type": "string",
          "enumDescriptions": [
            "Default. Same as **TOTAL_COUNT**.",
            "Response includes counts of the total accounts, queried accounts, matching accounts, non-queryable accounts, and queried account errors.",
            "Response includes the same details as **TOTAL_COUNT**, plus additional account breakdown."
          ],
          "description": "Sets the granularity of the count results.",
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ]
        }
      },
      "type": "object",
      "id": "CountArtifactsRequest",
      "description": "Count artifacts request."
    },
    "ListSavedQueriesResponse": {
      "id": "ListSavedQueriesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."
        },
        "savedQueries": {
          "items": {
            "$ref": "SavedQuery"
          },
          "description": "List of saved queries.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Definition of the response for method ListSaveQuery."
    },
    "HeldVoiceQuery": {
      "properties": {
        "coveredData": {
          "description": "A list of data types covered by the hold. Should be non-empty. Order does not matter and duplicates are ignored.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ],
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text messages.",
              "Voicemails and their transcripts.",
              "Call logs."
            ]
          }
        }
      },
      "id": "HeldVoiceQuery",
      "type": "object",
      "description": "Options for Voice holds."
    },
    "HeldGroupsQuery": {
      "id": "HeldGroupsQuery",
      "type": "object",
      "properties": {
        "terms": {
          "type": "string",
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold."
        },
        "startTime": {
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date."
        }
      },
      "description": "Query options for group holds."
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "type": "object"
    },
    "ListHeldAccountsResponse": {
      "properties": {
        "accounts": {
          "description": "The held accounts on a hold.",
          "items": {
            "$ref": "HeldAccount"
          },
          "type": "array"
        }
      },
      "id": "ListHeldAccountsResponse",
      "description": "Returns a list of the accounts covered by a hold.",
      "type": "object"
    },
    "Status": {
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "ListExportsResponse": {
      "description": "The exports for a matter.",
      "id": "ListExportsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        },
        "exports": {
          "description": "The list of exports.",
          "items": {
            "$ref": "Export"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HangoutsChatExportOptions": {
      "type": "object",
      "id": "HangoutsChatExportOptions",
      "properties": {
        "exportFormat": {
          "type": "string",
          "description": "The file format for exported messages.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ]
        }
      },
      "description": "Options for Chat exports."
    },
    "TeamDriveInfo": {
      "type": "object",
      "description": "Team Drives to search",
      "id": "TeamDriveInfo",
      "properties": {
        "teamDriveIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive)."
        }
      }
    },
    "DriveOptions": {
      "type": "object",
      "description": "Additional options for Drive search",
      "properties": {
        "includeTeamDrives": {
          "type": "boolean",
          "description": "Set to true to include Team Drive."
        },
        "versionDate": {
          "description": "Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.",
          "format": "google-datetime",
          "type": "string"
        },
        "includeSharedDrives": {
          "type": "boolean",
          "description": "Set to **true** to include shared drives."
        }
      },
      "id": "DriveOptions"
    },
    "Matter": {
      "id": "Matter",
      "properties": {
        "matterId": {
          "type": "string",
          "description": "The matter ID, which is generated by the server. Leave blank when creating a matter."
        },
        "matterPermissions": {
          "description": "Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
          "items": {
            "$ref": "MatterPermission"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "enumDescriptions": [
            "The matter has no specified state.",
            "The matter is open.",
            "The matter is closed.",
            "The matter is deleted."
          ],
          "type": "string",
          "description": "The state of the matter."
        },
        "description": {
          "description": "An optional description for the matter.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the matter."
        }
      },
      "type": "object",
      "description": "Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."
    },
    "SharedDriveInfo": {
      "id": "SharedDriveInfo",
      "description": "The shared drives to search",
      "properties": {
        "sharedDriveIds": {
          "type": "array",
          "description": "A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "CountArtifactsResponse": {
      "type": "object",
      "properties": {
        "groupsCountResult": {
          "description": "Count metrics for Groups.",
          "$ref": "GroupsCountResult"
        },
        "mailCountResult": {
          "description": "Count metrics for Gmail and classic Hangouts.",
          "$ref": "MailCountResult"
        },
        "totalCount": {
          "type": "string",
          "description": "Total count of messages.",
          "format": "int64"
        }
      },
      "id": "CountArtifactsResponse",
      "description": "Definition of the response for method CountArtifacts."
    },
    "CorpusQuery": {
      "type": "object",
      "properties": {
        "mailQuery": {
          "description": "Service-specific options for Gmail holds. If set, **CorpusType** must be **MAIL**.",
          "$ref": "HeldMailQuery"
        },
        "hangoutsChatQuery": {
          "$ref": "HeldHangoutsChatQuery",
          "description": "Service-specific options for Chat holds. If set, **CorpusType** must be **HANGOUTS_CHAT**."
        },
        "driveQuery": {
          "description": "Service-specific options for Drive holds. If set, **CorpusType** must be **DRIVE**.",
          "$ref": "HeldDriveQuery"
        },
        "groupsQuery": {
          "$ref": "HeldGroupsQuery",
          "description": "Service-specific options for Groups holds. If set, **CorpusType** must be **GROUPS**."
        },
        "voiceQuery": {
          "$ref": "HeldVoiceQuery",
          "description": "Service-specific options for Voice holds. If set, **CorpusType** must be **VOICE**."
        }
      },
      "description": "Service-specific options for holds.",
      "id": "CorpusQuery"
    },
    "AccountCountError": {
      "description": "An error that occurred when querying a specific account",
      "properties": {
        "errorType": {
          "type": "string",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ],
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ],
          "description": "Account query error."
        },
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        }
      },
      "type": "object",
      "id": "AccountCountError"
    },
    "MatterPermission": {
      "type": "object",
      "description": "Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
      "properties": {
        "role": {
          "description": "The user's role for the matter.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator on the matter.",
            "The owner of the matter."
          ],
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/)."
        }
      },
      "id": "MatterPermission"
    },
    "UndeleteMatterRequest": {
      "description": "Undelete a matter by ID.",
      "properties": {},
      "type": "object",
      "id": "UndeleteMatterRequest"
    },
    "AccountInfo": {
      "description": "The accounts to search",
      "type": "object",
      "properties": {
        "emails": {
          "description": "A set of accounts to search.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AccountInfo"
    },
    "GroupsExportOptions": {
      "type": "object",
      "properties": {
        "exportFormat": {
          "description": "The file format for exported messages.",
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        }
      },
      "description": "Options for Groups exports.",
      "id": "GroupsExportOptions"
    },
    "AddHeldAccountsRequest": {
      "properties": {
        "accountIds": {
          "description": "A comma-separated list of the account IDs of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "emails": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A comma-separated list of the emails of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both."
        }
      },
      "description": "Add a list of accounts to a hold.",
      "id": "AddHeldAccountsRequest",
      "type": "object"
    },
    "CloudStorageSink": {
      "properties": {
        "files": {
          "type": "array",
          "description": "Output only. The exported files in Cloud Storage.",
          "items": {
            "$ref": "CloudStorageFile"
          }
        }
      },
      "id": "CloudStorageSink",
      "type": "object",
      "description": "Export sink for Cloud Storage files."
    },
    "MailExportOptions": {
      "id": "MailExportOptions",
      "properties": {
        "showConfidentialModeContent": {
          "description": "To export confidential mode content, set to **true**.",
          "type": "boolean"
        },
        "useNewExport": {
          "type": "boolean",
          "description": "To use the new export system, set to **true**."
        },
        "exportFormat": {
          "type": "string",
          "description": "The file format for exported messages.",
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        }
      },
      "type": "object",
      "description": "Options for Gmail exports."
    },
    "MailOptions": {
      "description": "Additional options for Gmail search",
      "type": "object",
      "id": "MailOptions",
      "properties": {
        "excludeDrafts": {
          "type": "boolean",
          "description": "Set to **true** to exclude drafts."
        }
      }
    },
    "CountArtifactsMetadata": {
      "id": "CountArtifactsMetadata",
      "description": "Long running operation metadata for CountArtifacts.",
      "properties": {
        "query": {
          "$ref": "Query",
          "description": "The search query from the request."
        },
        "startTime": {
          "type": "string",
          "description": "Creation time of count operation.",
          "format": "google-datetime"
        },
        "endTime": {
          "type": "string",
          "description": "End time of count operation. Available when operation is done.",
          "format": "google-datetime"
        },
        "matterId": {
          "description": "The matter ID of the associated matter.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AddHeldAccountsResponse": {
      "type": "object",
      "description": "Response for batch create held accounts.",
      "properties": {
        "responses": {
          "description": "The list of responses, in the same order as the batch request.",
          "items": {
            "$ref": "AddHeldAccountResult"
          },
          "type": "array"
        }
      },
      "id": "AddHeldAccountsResponse"
    },
    "HeldOrgUnit": {
      "id": "HeldOrgUnit",
      "properties": {
        "orgUnitId": {
          "type": "string",
          "description": "The organizational unit's immutable ID as provided by the [Admin SDK](https://developers.google.com/admin-sdk/)."
        },
        "holdTime": {
          "format": "google-datetime",
          "description": "When the organizational unit was put on hold. This property is immutable.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The organizational unit covered by a hold. This structure is immutable."
    },
    "HeldDriveQuery": {
      "id": "HeldDriveQuery",
      "type": "object",
      "properties": {
        "includeTeamDriveFiles": {
          "description": "To include files in Team Drives in the hold, set to **true**.",
          "type": "boolean"
        },
        "includeSharedDriveFiles": {
          "type": "boolean",
          "description": "To include files in shared drives in the hold, set to **true**."
        }
      },
      "description": "Options for Drive holds."
    },
    "ListHoldsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.",
          "type": "string"
        },
        "holds": {
          "type": "array",
          "items": {
            "$ref": "Hold"
          },
          "description": "The list of holds."
        }
      },
      "type": "object",
      "id": "ListHoldsResponse",
      "description": "The holds for a matter."
    },
    "AddMatterPermissionsRequest": {
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, the existing role is overwritten.",
      "properties": {
        "sendEmails": {
          "description": "To send a notification email to the added account, set to **true**. To not send a notification email, set to **false**.",
          "type": "boolean"
        },
        "ccMe": {
          "type": "boolean",
          "description": "Only relevant if **sendEmails** is **true**. To CC the requestor in the email message, set to **true**. To not CC requestor, set to **false**."
        },
        "matterPermission": {
          "$ref": "MatterPermission",
          "description": "The account and its role to add."
        }
      },
      "type": "object",
      "id": "AddMatterPermissionsRequest"
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "AddHeldAccountResult": {
      "id": "AddHeldAccountResult",
      "description": "The status of each account creation, and the **HeldAccount**, if successful.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Reports the request status. If it failed, returns an error message.",
          "$ref": "Status"
        },
        "account": {
          "$ref": "HeldAccount",
          "description": "Returned when the account was successfully created."
        }
      }
    },
    "SavedQuery": {
      "id": "SavedQuery",
      "properties": {
        "matterId": {
          "description": "Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The name of the saved query."
        },
        "savedQueryId": {
          "description": "A unique identifier for the saved query.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The server-generated timestamp when the saved query was created.",
          "type": "string"
        },
        "query": {
          "description": "The search parameters of the saved query.",
          "$ref": "Query"
        }
      },
      "description": "The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "type": "object"
    },
    "DriveExportOptions": {
      "id": "DriveExportOptions",
      "description": "Options for Drive exports.",
      "type": "object",
      "properties": {
        "includeAccessInfo": {
          "description": "To include access level information for users with [indirect access](https://support.google.com/vault/answer/6099459#metadata) to files, set to **true**.",
          "type": "boolean"
        }
      }
    },
    "CancelOperationRequest": {
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "properties": {}
    },
    "HeldMailQuery": {
      "properties": {
        "startTime": {
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string",
          "format": "google-datetime"
        },
        "terms": {
          "type": "string",
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold."
        },
        "endTime": {
          "type": "string",
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime"
        }
      },
      "id": "HeldMailQuery",
      "type": "object",
      "description": "Query options for Gmail holds."
    },
    "HeldAccount": {
      "description": "An account covered by a hold. This structure is immutable. It can be an individual account or a Google Group, depending on the service. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        },
        "lastName": {
          "description": "Output only. The last name of the account holder.",
          "type": "string"
        },
        "holdTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the account was put on hold."
        },
        "firstName": {
          "type": "string",
          "description": "Output only. The first name of the account holder."
        },
        "email": {
          "type": "string",
          "description": "The primary email address of the account. If used as an input, this takes precedence over **accountId**."
        }
      },
      "id": "HeldAccount"
    },
    "MailCountResult": {
      "properties": {
        "accountCountErrors": {
          "description": "Errors occurred when querying these accounts.",
          "items": {
            "$ref": "AccountCountError"
          },
          "type": "array"
        },
        "matchingAccountsCount": {
          "format": "int64",
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "type": "string"
        },
        "queriedAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts involved in this count operation."
        },
        "accountCounts": {
          "items": {
            "$ref": "AccountCount"
          },
          "type": "array",
          "description": "Subtotal count per matching account that have more than zero messages."
        },
        "nonQueryableAccounts": {
          "type": "array",
          "description": "When **DataScope** is **HELD_DATA** and when account emails are passed in explicitly, the list of accounts in the request that are not queried because they are not on hold in the matter. For other data scopes, this field is not set.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Gmail and classic Hangouts-specific count metrics.",
      "id": "MailCountResult"
    },
    "CloudStorageFile": {
      "type": "object",
      "id": "CloudStorageFile",
      "description": "The export file in Cloud Storage",
      "properties": {
        "objectName": {
          "type": "string",
          "description": "The name of the Cloud Storage object for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis)."
        },
        "size": {
          "type": "string",
          "description": "The export file size.",
          "format": "int64"
        },
        "md5Hash": {
          "type": "string",
          "description": "The md5 hash of the file."
        },
        "bucketName": {
          "description": "The name of the Cloud Storage bucket for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis), but not to list the bucket contents. Instead, you can [get individual export files](https://cloud.google.com/storage/docs/json_api/v1/objects/get) by object name.",
          "type": "string"
        }
      }
    },
    "Export": {
      "properties": {
        "status": {
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ],
          "type": "string",
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is in progress."
          ],
          "description": "Output only. The status of the export."
        },
        "matterId": {
          "description": "Output only. The matter ID.",
          "type": "string"
        },
        "exportOptions": {
          "description": "Additional export options.",
          "$ref": "ExportOptions"
        },
        "id": {
          "type": "string",
          "description": "Output only. The generated export ID."
        },
        "requester": {
          "$ref": "UserInfo",
          "description": "Output only. The requester of the export."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when the export was created.",
          "format": "google-datetime"
        },
        "stats": {
          "$ref": "ExportStats",
          "description": "Output only. Details about the export progress and size."
        },
        "cloudStorageSink": {
          "description": "Output only. The sink for export files in Cloud Storage.",
          "$ref": "CloudStorageSink"
        },
        "name": {
          "type": "string",
          "description": "The export name."
        },
        "query": {
          "$ref": "Query",
          "description": "The query parameters used to create the export."
        }
      },
      "type": "object",
      "description": "An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "id": "Export"
    },
    "UserInfo": {
      "description": "User's information.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The displayed name of the user."
        },
        "email": {
          "description": "The email address of the user.",
          "type": "string"
        }
      },
      "id": "UserInfo"
    },
    "OrgUnitInfo": {
      "description": "The organizational unit to search",
      "type": "object",
      "properties": {
        "orgUnitId": {
          "description": "The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/).",
          "type": "string"
        }
      },
      "id": "OrgUnitInfo"
    },
    "HeldHangoutsChatQuery": {
      "id": "HeldHangoutsChatQuery",
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "To include messages in Chat spaces the user was a member of, set to **true**."
        }
      },
      "type": "object",
      "description": "Options for Chat holds."
    },
    "ReopenMatterRequest": {
      "description": "Reopen a matter by ID.",
      "properties": {},
      "type": "object",
      "id": "ReopenMatterRequest"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "type": "object"
    },
    "ExportStats": {
      "properties": {
        "totalArtifactCount": {
          "type": "string",
          "description": "The number of messages or files to be exported.",
          "format": "int64"
        },
        "sizeInBytes": {
          "type": "string",
          "description": "The size of export in bytes.",
          "format": "int64"
        },
        "exportedArtifactCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of messages or files already processed for export."
        }
      },
      "id": "ExportStats",
      "description": "Progress information for an export.",
      "type": "object"
    },
    "VoiceOptions": {
      "id": "VoiceOptions",
      "properties": {
        "coveredData": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text messages.",
              "Voicemails and their transcripts.",
              "Call logs."
            ],
            "type": "string",
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ]
          },
          "description": "Datatypes to search"
        }
      },
      "type": "object",
      "description": "Additional options for Voice search"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "revision": "20220222",
  "canonicalName": "Vault",
  "baseUrl": "https://vault.googleapis.com/",
  "ownerDomain": "google.com",
  "resources": {
    "operations": {
      "methods": {
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "DELETE",
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted.",
              "required": true,
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/{+name}",
          "id": "vault.operations.delete"
        },
        "get": {
          "httpMethod": "GET",
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource."
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "id": "vault.operations.get",
          "response": {
            "$ref": "Operation"
          },
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
        },
        "list": {
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "flatPath": "v1/operations",
          "id": "vault.operations.list",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "filter": {
              "location": "query",
              "type": "string",
              "description": "The standard list filter."
            },
            "pageToken": {
              "description": "The standard list page token.",
              "type": "string",
              "location": "query"
            },
            "name": {
              "pattern": "^operations$",
              "location": "path",
              "description": "The name of the operation's parent resource.",
              "required": true,
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "description": "The standard list page size.",
              "type": "integer",
              "format": "int32"
            }
          },
          "path": "v1/{+name}"
        },
        "cancel": {
          "id": "vault.operations.cancel",
          "flatPath": "v1/operations/{operationsId}:cancel",
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "required": true,
              "type": "string",
              "description": "The name of the operation resource to be cancelled.",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/{+name}:cancel",
          "httpMethod": "POST",
          "request": {
            "$ref": "CancelOperationRequest"
          }
        }
      }
    },
    "matters": {
      "methods": {
        "list": {
          "path": "v1/matters",
          "description": "Lists matters the requestor has access to.",
          "httpMethod": "GET",
          "flatPath": "v1/matters",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "response": {
            "$ref": "ListMattersResponse"
          },
          "parameters": {
            "view": {
              "type": "string",
              "description": "Specifies how much information about the matter to return in response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "The amount of detail is unspecified. Same as **BASIC**.",
                "Returns the matter ID, name, description, and state. Default choice.",
                "Returns the basic details and a list of matter owners and collaborators (see [MatterPermissions](https://developers.google.com/vault/reference/rest/v1/matters#matterpermission))."
              ],
              "location": "query"
            },
            "state": {
              "enumDescriptions": [
                "The matter has no specified state.",
                "The matter is open.",
                "The matter is closed.",
                "The matter is deleted."
              ],
              "description": "If set, lists only matters with the specified state. The default lists matters of all states.",
              "type": "string",
              "location": "query",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ]
            },
            "pageToken": {
              "type": "string",
              "description": "The pagination token as returned in the response.",
              "location": "query"
            },
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "The number of matters to return in the response. Default and maximum are 100."
            }
          },
          "id": "vault.matters.list"
        },
        "count": {
          "flatPath": "v1/matters/{matterId}:count",
          "parameterOrder": [
            "matterId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "path": "v1/matters/{matterId}:count",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "POST",
          "id": "vault.matters.count",
          "description": "Counts the accounts processed by the specified query.",
          "request": {
            "$ref": "CountArtifactsRequest"
          },
          "response": {
            "$ref": "Operation"
          }
        },
        "removePermissions": {
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "id": "vault.matters.removePermissions",
          "path": "v1/matters/{matterId}:removePermissions",
          "parameterOrder": [
            "matterId"
          ],
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "description": "Removes an account as a matter collaborator.",
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "get": {
          "id": "vault.matters.get",
          "description": "Gets the specified matter.",
          "httpMethod": "GET",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "view": {
              "location": "query",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "description": "Specifies how much information about the matter to return in the response.",
              "type": "string",
              "enumDescriptions": [
                "The amount of detail is unspecified. Same as **BASIC**.",
                "Returns the matter ID, name, description, and state. Default choice.",
                "Returns the basic details and a list of matter owners and collaborators (see [MatterPermissions](https://developers.google.com/vault/reference/rest/v1/matters#matterpermission))."
              ]
            }
          },
          "path": "v1/matters/{matterId}",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters/{matterId}"
        },
        "create": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters",
          "parameters": {},
          "response": {
            "$ref": "Matter"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "Matter"
          },
          "id": "vault.matters.create",
          "path": "v1/matters",
          "description": "Creates a matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
          "parameterOrder": []
        },
        "update": {
          "request": {
            "$ref": "Matter"
          },
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "Matter"
          },
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "httpMethod": "PUT",
          "id": "vault.matters.update",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters/{matterId}",
          "path": "v1/matters/{matterId}"
        },
        "undelete": {
          "flatPath": "v1/matters/{matterId}:undelete",
          "request": {
            "$ref": "UndeleteMatterRequest"
          },
          "path": "v1/matters/{matterId}:undelete",
          "httpMethod": "POST",
          "description": "Undeletes the specified matter. Returns the matter with updated state.",
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "Matter"
          },
          "id": "vault.matters.undelete",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [
            "matterId"
          ]
        },
        "reopen": {
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "flatPath": "v1/matters/{matterId}:reopen",
          "path": "v1/matters/{matterId}:reopen",
          "parameterOrder": [
            "matterId"
          ],
          "id": "vault.matters.reopen",
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "httpMethod": "POST",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Reopens the specified matter. Returns the matter with updated state.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "addPermissions": {
          "id": "vault.matters.addPermissions",
          "description": "Adds an account as a matter collaborator.",
          "response": {
            "$ref": "MatterPermission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "parameters": {
            "matterId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The matter ID."
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "matterId"
          ],
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "path": "v1/matters/{matterId}:addPermissions"
        },
        "close": {
          "parameterOrder": [
            "matterId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "id": "vault.matters.close",
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "path": "v1/matters/{matterId}:close",
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "httpMethod": "POST",
          "flatPath": "v1/matters/{matterId}:close",
          "parameters": {
            "matterId": {
              "type": "string",
              "location": "path",
              "description": "The matter ID.",
              "required": true
            }
          },
          "description": "Closes the specified matter. Returns the matter with updated state."
        },
        "delete": {
          "path": "v1/matters/{matterId}",
          "httpMethod": "DELETE",
          "id": "vault.matters.delete",
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters/{matterId}",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "type": "string",
              "location": "path",
              "description": "The matter ID",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Deletes the specified matter. Returns the matter with updated state."
        }
      },
      "resources": {
        "holds": {
          "resources": {
            "accounts": {
              "methods": {
                "create": {
                  "description": "Adds an account to a hold. Accounts can be added only to a hold that does not have an organizational unit set. If you try to add an account to an organizational unit-based hold, an error is returned.",
                  "httpMethod": "POST",
                  "id": "vault.matters.holds.accounts.create",
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "parameters": {
                    "matterId": {
                      "type": "string",
                      "description": "The matter ID.",
                      "location": "path",
                      "required": true
                    },
                    "holdId": {
                      "location": "path",
                      "type": "string",
                      "description": "The hold ID.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "HeldAccount"
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "id": "vault.matters.holds.accounts.delete",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "description": "Removes an account from a hold.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "matterId": {
                      "description": "The matter ID.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "accountId": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The ID of the account to remove from the hold."
                    },
                    "holdId": {
                      "type": "string",
                      "description": "The hold ID.",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "vault.matters.holds.accounts.list",
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "description": "Lists the accounts covered by a hold. This can list only individually-specified accounts covered by the hold. If the hold covers an organizational unit, use the [Admin SDK](https://developers.google.com/admin-sdk/). to list the members of the organizational unit on hold.",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "parameters": {
                    "holdId": {
                      "required": true,
                      "location": "path",
                      "description": "The hold ID.",
                      "type": "string"
                    },
                    "matterId": {
                      "description": "The matter ID.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ]
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists the holds in a matter.",
              "parameters": {
                "matterId": {
                  "type": "string",
                  "required": true,
                  "description": "The matter ID.",
                  "location": "path"
                },
                "view": {
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "enumDescriptions": [
                    "Not specified. Defaults to **FULL_HOLD**.",
                    "Returns the hold ID, name, update time, service, and query.",
                    "Returns all details of **BASIC_HOLD** and the entities the hold applies to, such as accounts or organizational unit."
                  ],
                  "location": "query",
                  "type": "string",
                  "description": "The amount of detail to return for a hold."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as **page_size** = 100.",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning."
                }
              },
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "flatPath": "v1/matters/{matterId}/holds",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/holds",
              "id": "vault.matters.holds.list"
            },
            "create": {
              "flatPath": "v1/matters/{matterId}/holds",
              "path": "v1/matters/{matterId}/holds",
              "response": {
                "$ref": "Hold"
              },
              "id": "vault.matters.holds.create",
              "parameterOrder": [
                "matterId"
              ],
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "description": "Creates a hold in the specified matter.",
              "request": {
                "$ref": "Hold"
              },
              "httpMethod": "POST"
            },
            "delete": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Removes the specified hold and releases the accounts or organizational unit covered by the hold. If the data is not preserved by another hold or retention rule, it might be purged.",
              "parameters": {
                "holdId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The hold ID."
                },
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true
                }
              },
              "id": "vault.matters.holds.delete",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE"
            },
            "update": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "Hold"
              },
              "id": "vault.matters.holds.update",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "httpMethod": "PUT",
              "description": "Updates the scope (organizational unit or accounts) and query parameters of a hold. You cannot add accounts to a hold that covers an organizational unit, nor can you add organizational units to a hold that covers individual accounts. If you try, the unsupported values are ignored.",
              "request": {
                "$ref": "Hold"
              },
              "parameters": {
                "matterId": {
                  "required": true,
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string"
                },
                "holdId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the hold."
                }
              }
            },
            "get": {
              "id": "vault.matters.holds.get",
              "response": {
                "$ref": "Hold"
              },
              "parameters": {
                "matterId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The matter ID."
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "description": "The amount of detail to return for a hold.",
                  "type": "string",
                  "enumDescriptions": [
                    "Not specified. Defaults to **FULL_HOLD**.",
                    "Returns the hold ID, name, update time, service, and query.",
                    "Returns all details of **BASIC_HOLD** and the entities the hold applies to, such as accounts or organizational unit."
                  ]
                },
                "holdId": {
                  "location": "path",
                  "description": "The hold ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Gets the specified hold.",
              "path": "v1/matters/{matterId}/holds/{holdId}"
            },
            "addHeldAccounts": {
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "description": "Adds accounts to a hold. Returns a list of accounts that have been successfully added. Accounts can be added only to an existing account-based hold.",
              "response": {
                "$ref": "AddHeldAccountsResponse"
              },
              "httpMethod": "POST",
              "id": "vault.matters.holds.addHeldAccounts",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "holdId": {
                  "required": true,
                  "description": "The hold ID.",
                  "location": "path",
                  "type": "string"
                },
                "matterId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The matter ID."
                }
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ]
            },
            "removeHeldAccounts": {
              "parameters": {
                "holdId": {
                  "description": "The hold ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The matter ID."
                }
              },
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "httpMethod": "POST",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "description": "Removes the specified accounts from a hold. Returns a list of statuses in the same order as the request.",
              "id": "vault.matters.holds.removeHeldAccounts",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              },
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts"
            }
          }
        },
        "exports": {
          "methods": {
            "get": {
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "response": {
                "$ref": "Export"
              },
              "id": "vault.matters.exports.get",
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "exportId": {
                  "description": "The export ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "description": "Gets an export.",
              "httpMethod": "GET"
            },
            "create": {
              "flatPath": "v1/matters/{matterId}/exports",
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Export"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "matterId"
              ],
              "request": {
                "$ref": "Export"
              },
              "path": "v1/matters/{matterId}/exports",
              "id": "vault.matters.exports.create",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "description": "Creates an export."
            },
            "list": {
              "path": "v1/matters/{matterId}/exports",
              "response": {
                "$ref": "ListExportsResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "description": "Lists details about the exports in the specified matter.",
              "id": "vault.matters.exports.list",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The number of exports to return in the response."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The pagination token as returned in the response.",
                  "type": "string"
                },
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The matter ID."
                }
              },
              "flatPath": "v1/matters/{matterId}/exports",
              "parameterOrder": [
                "matterId"
              ]
            },
            "delete": {
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "httpMethod": "DELETE",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "response": {
                "$ref": "Empty"
              },
              "description": "Deletes an export.",
              "parameters": {
                "matterId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID."
                },
                "exportId": {
                  "location": "path",
                  "description": "The export ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "vault.matters.exports.delete",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            }
          }
        },
        "savedQueries": {
          "methods": {
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "id": "vault.matters.savedQueries.delete",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "description": "Deletes the specified saved query.",
              "parameters": {
                "savedQueryId": {
                  "location": "path",
                  "type": "string",
                  "description": "ID of the saved query to delete.",
                  "required": true
                },
                "matterId": {
                  "type": "string",
                  "description": "The ID of the matter to delete the saved query from.",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "list": {
              "id": "vault.matters.savedQueries.list",
              "response": {
                "$ref": "ListSavedQueriesResponse"
              },
              "description": "Lists the saved queries in a matter.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of saved queries to return.",
                  "format": "int32",
                  "location": "query"
                },
                "matterId": {
                  "location": "path",
                  "description": "The ID of the matter to get the saved queries for.",
                  "type": "string",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId"
              ],
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "path": "v1/matters/{matterId}/savedQueries",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "create": {
              "parameterOrder": [
                "matterId"
              ],
              "request": {
                "$ref": "SavedQuery"
              },
              "path": "v1/matters/{matterId}/savedQueries",
              "id": "vault.matters.savedQueries.create",
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "parameters": {
                "matterId": {
                  "required": true,
                  "description": "The ID of the matter to create the saved query in.",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "SavedQuery"
              },
              "description": "Creates a saved query.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            },
            "get": {
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "parameters": {
                "savedQueryId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "ID of the saved query to retrieve."
                },
                "matterId": {
                  "description": "The ID of the matter to get the saved query from.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Retrieves the specified saved query.",
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "response": {
                "$ref": "SavedQuery"
              },
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "httpMethod": "GET",
              "id": "vault.matters.savedQueries.get"
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "name": "vault",
  "id": "vault:v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "title": "Google Vault API",
  "protocol": "rest",
  "version": "v1",
  "description": "Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. ",
  "discoveryVersion": "v1",
  "rootUrl": "https://vault.googleapis.com/"
}

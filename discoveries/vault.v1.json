{
  "title": "Google Vault API",
  "description": "Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. ",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "ownerDomain": "google.com",
  "name": "vault",
  "rootUrl": "https://vault.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        }
      }
    }
  },
  "canonicalName": "Vault",
  "schemas": {
    "ExportStats": {
      "id": "ExportStats",
      "description": "Progress information for an export.",
      "type": "object",
      "properties": {
        "sizeInBytes": {
          "format": "int64",
          "type": "string",
          "description": "The size of export in bytes."
        },
        "exportedArtifactCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of messages or files already processed for export."
        },
        "totalArtifactCount": {
          "description": "The number of messages or files to be exported.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "AddMatterPermissionsRequest": {
      "properties": {
        "matterPermission": {
          "description": "The account and its role to add.",
          "$ref": "MatterPermission"
        },
        "sendEmails": {
          "description": "To send a notification email to the added account, set to **true**. To not send a notification email, set to **false**.",
          "type": "boolean"
        },
        "ccMe": {
          "type": "boolean",
          "description": "Only relevant if **sendEmails** is **true**. To CC the requestor in the email message, set to **true**. To not CC requestor, set to **false**."
        }
      },
      "type": "object",
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, the existing role is overwritten.",
      "id": "AddMatterPermissionsRequest"
    },
    "CountArtifactsMetadata": {
      "description": "Long running operation metadata for CountArtifacts.",
      "type": "object",
      "id": "CountArtifactsMetadata",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Creation time of count operation."
        },
        "endTime": {
          "type": "string",
          "description": "End time of count operation. Available when operation is done.",
          "format": "google-datetime"
        },
        "query": {
          "$ref": "Query",
          "description": "The search query from the request."
        },
        "matterId": {
          "description": "The matter ID of the associated matter.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "CorpusQuery": {
      "description": "Service-specific options for holds.",
      "type": "object",
      "id": "CorpusQuery",
      "properties": {
        "mailQuery": {
          "description": "Service-specific options for Gmail holds. If set, **CorpusType** must be **MAIL**.",
          "$ref": "HeldMailQuery"
        },
        "driveQuery": {
          "description": "Service-specific options for Drive holds. If set, **CorpusType** must be **DRIVE**.",
          "$ref": "HeldDriveQuery"
        },
        "groupsQuery": {
          "description": "Service-specific options for Groups holds. If set, **CorpusType** must be **GROUPS**.",
          "$ref": "HeldGroupsQuery"
        },
        "voiceQuery": {
          "description": "Service-specific options for Voice holds. If set, **CorpusType** must be **VOICE**.",
          "$ref": "HeldVoiceQuery"
        },
        "hangoutsChatQuery": {
          "description": "Service-specific options for Chat holds. If set, **CorpusType** must be **HANGOUTS_CHAT**.",
          "$ref": "HeldHangoutsChatQuery"
        }
      }
    },
    "HeldHangoutsChatQuery": {
      "properties": {
        "includeRooms": {
          "description": "To include messages in Chat spaces the user was a member of, set to **true**.",
          "type": "boolean"
        }
      },
      "id": "HeldHangoutsChatQuery",
      "type": "object",
      "description": "Options for Chat holds."
    },
    "AccountCount": {
      "description": "The results count for each account.",
      "id": "AccountCount",
      "type": "object",
      "properties": {
        "count": {
          "format": "int64",
          "description": "The number of results (messages or files) found for this account.",
          "type": "string"
        },
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        }
      }
    },
    "CloudStorageSink": {
      "type": "object",
      "id": "CloudStorageSink",
      "properties": {
        "files": {
          "items": {
            "$ref": "CloudStorageFile"
          },
          "description": "Output only. The exported files in Cloud Storage.",
          "type": "array"
        }
      },
      "description": "Export sink for Cloud Storage files."
    },
    "CloseMatterRequest": {
      "properties": {},
      "type": "object",
      "id": "CloseMatterRequest",
      "description": "Close a matter by ID."
    },
    "HangoutsChatInfo": {
      "properties": {
        "roomId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/hangouts/chat)."
        }
      },
      "id": "HangoutsChatInfo",
      "type": "object",
      "description": "The Chat spaces to search"
    },
    "ListHeldAccountsResponse": {
      "id": "ListHeldAccountsResponse",
      "properties": {
        "accounts": {
          "items": {
            "$ref": "HeldAccount"
          },
          "type": "array",
          "description": "The held accounts on a hold."
        }
      },
      "type": "object",
      "description": "Returns a list of the accounts covered by a hold."
    },
    "GroupsExportOptions": {
      "id": "GroupsExportOptions",
      "description": "Options for Groups exports.",
      "type": "object",
      "properties": {
        "exportFormat": {
          "type": "string",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "description": "The file format for exported messages.",
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ]
        }
      }
    },
    "Export": {
      "description": "An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "id": "Export",
      "type": "object",
      "properties": {
        "matterId": {
          "type": "string",
          "description": "Output only. The matter ID."
        },
        "query": {
          "description": "The query parameters used to create the export.",
          "$ref": "Query"
        },
        "cloudStorageSink": {
          "$ref": "CloudStorageSink",
          "description": "Output only. The sink for export files in Cloud Storage."
        },
        "requester": {
          "$ref": "UserInfo",
          "description": "Output only. The requester of the export."
        },
        "name": {
          "description": "The export name.",
          "type": "string"
        },
        "status": {
          "description": "Output only. The status of the export.",
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ],
          "type": "string",
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is in progress."
          ]
        },
        "exportOptions": {
          "$ref": "ExportOptions",
          "description": "Additional export options."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the export was created."
        },
        "stats": {
          "$ref": "ExportStats",
          "description": "Output only. Details about the export progress and size."
        },
        "id": {
          "type": "string",
          "description": "Output only. The generated export ID."
        }
      }
    },
    "Matter": {
      "type": "object",
      "id": "Matter",
      "properties": {
        "name": {
          "description": "The name of the matter.",
          "type": "string"
        },
        "matterId": {
          "description": "The matter ID, which is generated by the server. Leave blank when creating a matter.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "An optional description for the matter."
        },
        "matterPermissions": {
          "type": "array",
          "items": {
            "$ref": "MatterPermission"
          },
          "description": "Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "type": "string",
          "description": "The state of the matter.",
          "enumDescriptions": [
            "The matter has no specified state.",
            "The matter is open.",
            "The matter is closed.",
            "The matter is deleted."
          ]
        }
      },
      "description": "Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."
    },
    "ReopenMatterRequest": {
      "properties": {},
      "type": "object",
      "description": "Reopen a matter by ID.",
      "id": "ReopenMatterRequest"
    },
    "MailCountResult": {
      "properties": {
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "type": "string",
          "format": "int64"
        },
        "accountCountErrors": {
          "type": "array",
          "description": "Errors occurred when querying these accounts.",
          "items": {
            "$ref": "AccountCountError"
          }
        },
        "queriedAccountsCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of accounts involved in this count operation."
        },
        "nonQueryableAccounts": {
          "description": "When **DataScope** is **HELD_DATA**, the number of accounts in the request that are not queried because they are not on hold. For other data scopes, this field is not set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "accountCounts": {
          "description": "Subtotal count per matching account that have more than zero messages.",
          "type": "array",
          "items": {
            "$ref": "AccountCount"
          }
        }
      },
      "type": "object",
      "id": "MailCountResult",
      "description": "Gmail and classic Hangouts-specific count metrics."
    },
    "CountArtifactsRequest": {
      "properties": {
        "view": {
          "enumDescriptions": [
            "Default. Same as **TOTAL_COUNT**.",
            "Response includes counts of the total accounts, queried accounts, matching accounts, non-queryable accounts, and queried account errors.",
            "Response includes the same details as **TOTAL_COUNT**, plus additional account breakdown."
          ],
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ],
          "description": "Sets the granularity of the count results.",
          "type": "string"
        },
        "query": {
          "description": "The search query.",
          "$ref": "Query"
        }
      },
      "type": "object",
      "id": "CountArtifactsRequest",
      "description": "Count artifacts request."
    },
    "HeldOrgUnit": {
      "id": "HeldOrgUnit",
      "description": "The organizational unit covered by a hold. This structure is immutable.",
      "properties": {
        "orgUnitId": {
          "description": "The organizational unit's immutable ID as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        },
        "holdTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "When the organizational unit was put on hold. This property is immutable."
        }
      },
      "type": "object"
    },
    "RemoveHeldAccountsRequest": {
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The account IDs of the accounts to remove from the hold."
        }
      },
      "description": "Remove a list of accounts from a hold.",
      "id": "RemoveHeldAccountsRequest"
    },
    "ListSavedQueriesResponse": {
      "type": "object",
      "id": "ListSavedQueriesResponse",
      "properties": {
        "savedQueries": {
          "items": {
            "$ref": "SavedQuery"
          },
          "description": "List of saved queries.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."
        }
      },
      "description": "Definition of the response for method ListSaveQuery."
    },
    "AddHeldAccountsRequest": {
      "description": "Add a list of accounts to a hold.",
      "id": "AddHeldAccountsRequest",
      "type": "object",
      "properties": {
        "accountIds": {
          "description": "A comma-separated list of the account IDs of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emails": {
          "items": {
            "type": "string"
          },
          "description": "A comma-separated list of the emails of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
          "type": "array"
        }
      }
    },
    "CloseMatterResponse": {
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state **CLOSED**."
        }
      },
      "id": "CloseMatterResponse",
      "type": "object",
      "description": "Response to a CloseMatterRequest."
    },
    "Query": {
      "properties": {
        "voiceOptions": {
          "description": "Set Voice search-specific options.",
          "$ref": "VoiceOptions"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string"
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time)."
        },
        "startTime": {
          "description": "The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string",
          "format": "google-datetime"
        },
        "mailOptions": {
          "$ref": "MailOptions",
          "description": "Set Gmail search-specific options."
        },
        "accountInfo": {
          "description": "Required when **SearchMethod** is **ACCOUNT**.",
          "$ref": "AccountInfo"
        },
        "hangoutsChatOptions": {
          "description": "Set Chat search-specific options. (read-only)",
          "$ref": "HangoutsChatOptions"
        },
        "method": {
          "type": "string",
          "enumDescriptions": [
            "A search method must be specified or else it is rejected.",
            "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).",
            "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).",
            "Search the data in the Team Drive specified in **team_drive_info**.",
            "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.",
            "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).",
            "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.devsite.corp.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."
          ],
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "description": "The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**."
        },
        "driveOptions": {
          "description": "Set Drive search-specific options.",
          "$ref": "DriveOptions"
        },
        "hangoutsChatInfo": {
          "$ref": "HangoutsChatInfo",
          "description": "Required when **SearchMethod** is **ROOM**. (read-only)"
        },
        "searchMethod": {
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "description": "The search method to use.",
          "enumDescriptions": [
            "A search method must be specified or else it is rejected.",
            "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).",
            "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).",
            "Search the data in the Team Drive specified in **team_drive_info**.",
            "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.",
            "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).",
            "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.devsite.corp.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."
          ],
          "type": "string"
        },
        "terms": {
          "description": "Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.",
          "type": "string"
        },
        "corpus": {
          "description": "The Google Workspace service to search.",
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "enumDescriptions": [
            "No service specified.",
            "Drive, including Meet and Sites.",
            "For search, Gmail and classic Hangouts. For holds, Gmail only.",
            "Groups.",
            "For search, Google Chat only. For holds, Google Chat and classic Hangouts.",
            "Google Voice."
          ],
          "type": "string"
        },
        "teamDriveInfo": {
          "$ref": "TeamDriveInfo",
          "description": "Required when **SearchMethod** is **TEAM_DRIVE**."
        },
        "sharedDriveInfo": {
          "description": "Required when **SearchMethod** is **SHARED_DRIVE**.",
          "$ref": "SharedDriveInfo"
        },
        "dataScope": {
          "enumDescriptions": [
            "No data source specified.",
            "All available data.",
            "Only data on hold.",
            "Only data not yet processed by Vault. (Gmail and Groups only)"
          ],
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ],
          "type": "string",
          "description": "The data source to search."
        },
        "orgUnitInfo": {
          "$ref": "OrgUnitInfo",
          "description": "Required when **SearchMethod** is **ORG_UNIT**."
        }
      },
      "type": "object",
      "description": "The query definition used for search and export.",
      "id": "Query"
    },
    "HeldMailQuery": {
      "description": "Query options for Gmail holds.",
      "id": "HeldMailQuery",
      "type": "object",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date."
        },
        "terms": {
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
          "type": "string"
        }
      }
    },
    "SavedQuery": {
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The server-generated timestamp when the saved query was created.",
          "type": "string"
        },
        "query": {
          "$ref": "Query",
          "description": "The search parameters of the saved query."
        },
        "savedQueryId": {
          "type": "string",
          "description": "A unique identifier for the saved query."
        },
        "matterId": {
          "type": "string",
          "description": "Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL."
        },
        "displayName": {
          "description": "The name of the saved query.",
          "type": "string"
        }
      },
      "id": "SavedQuery",
      "description": "The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."
    },
    "MailOptions": {
      "id": "MailOptions",
      "properties": {
        "excludeDrafts": {
          "type": "boolean",
          "description": "Set to **true** to exclude drafts."
        }
      },
      "description": "Additional options for Gmail search",
      "type": "object"
    },
    "HangoutsChatExportOptions": {
      "type": "object",
      "properties": {
        "exportFormat": {
          "description": "The file format for exported messages.",
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        }
      },
      "id": "HangoutsChatExportOptions",
      "description": "Options for Chat exports."
    },
    "ExportOptions": {
      "id": "ExportOptions",
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "description": "The requested data region for the export.",
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "enumDescriptions": [
            "The region is unspecified. Defaults to ANY.",
            "Any region.",
            "United States region.",
            "Europe region."
          ]
        },
        "voiceOptions": {
          "$ref": "VoiceExportOptions",
          "description": "Options for Voice exports."
        },
        "driveOptions": {
          "description": "Options for Drive exports.",
          "$ref": "DriveExportOptions"
        },
        "hangoutsChatOptions": {
          "$ref": "HangoutsChatExportOptions",
          "description": "Options for Chat exports."
        },
        "mailOptions": {
          "description": "Options for Gmail exports.",
          "$ref": "MailExportOptions"
        },
        "groupsOptions": {
          "$ref": "GroupsExportOptions",
          "description": "Options for Groups exports."
        }
      },
      "description": "Additional options for exports"
    },
    "SharedDriveInfo": {
      "description": "The shared drives to search",
      "properties": {
        "sharedDriveIds": {
          "description": "A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "SharedDriveInfo",
      "type": "object"
    },
    "MailExportOptions": {
      "properties": {
        "showConfidentialModeContent": {
          "description": "To export confidential mode content, set to **true**.",
          "type": "boolean"
        },
        "exportFormat": {
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "description": "The file format for exported messages.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MailExportOptions",
      "description": "Options for Gmail exports."
    },
    "GroupsCountResult": {
      "id": "GroupsCountResult",
      "properties": {
        "nonQueryableAccounts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "When **DataScope** is **HELD_DATA**, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set."
        },
        "matchingAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts that can be queried and have more than zero messages."
        },
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64",
          "type": "string"
        },
        "accountCounts": {
          "type": "array",
          "items": {
            "$ref": "AccountCount"
          },
          "description": "Subtotal count per matching account that have more than zero messages."
        },
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "type": "array",
          "items": {
            "$ref": "AccountCountError"
          }
        }
      },
      "type": "object",
      "description": "Groups specific count metrics."
    },
    "ListHoldsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list."
        },
        "holds": {
          "items": {
            "$ref": "Hold"
          },
          "type": "array",
          "description": "The list of holds."
        }
      },
      "description": "The holds for a matter.",
      "type": "object",
      "id": "ListHoldsResponse"
    },
    "AccountInfo": {
      "properties": {
        "emails": {
          "items": {
            "type": "string"
          },
          "description": "A set of accounts to search.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "AccountInfo",
      "description": "The accounts to search"
    },
    "AddHeldAccountResult": {
      "properties": {
        "account": {
          "description": "Returned when the account was successfully created.",
          "$ref": "HeldAccount"
        },
        "status": {
          "$ref": "Status",
          "description": "Reports the request status. If it failed, returns an error message."
        }
      },
      "id": "AddHeldAccountResult",
      "description": "The status of each account creation, and the **HeldAccount**, if successful.",
      "type": "object"
    },
    "DriveExportOptions": {
      "description": "Options for Drive exports.",
      "properties": {
        "includeAccessInfo": {
          "description": "To include access level information for users with [indirect access](https://support.google.com/vault/answer/6099459#metadata) to files, set to **true**.",
          "type": "boolean"
        }
      },
      "id": "DriveExportOptions",
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "type": "object",
      "id": "ListOperationsResponse"
    },
    "TeamDriveInfo": {
      "description": "Team Drives to search",
      "type": "object",
      "properties": {
        "teamDriveIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive)."
        }
      },
      "id": "TeamDriveInfo"
    },
    "ListMattersResponse": {
      "type": "object",
      "description": "Provides the list of matters.",
      "id": "ListMattersResponse",
      "properties": {
        "matters": {
          "type": "array",
          "description": "List of matters.",
          "items": {
            "$ref": "Matter"
          }
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "HeldAccount": {
      "properties": {
        "holdTime": {
          "format": "google-datetime",
          "description": "Output only. When the account was put on hold.",
          "type": "string"
        },
        "lastName": {
          "type": "string",
          "description": "Output only. The last name of the account holder."
        },
        "accountId": {
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        },
        "firstName": {
          "description": "Output only. The first name of the account holder.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "The primary email address of the account. If used as an input, this takes precedence over **accountId**."
        }
      },
      "description": "An account covered by a hold. This structure is immutable. It can be an individual account or a Google Group, depending on the service. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "id": "HeldAccount",
      "type": "object"
    },
    "CountArtifactsResponse": {
      "properties": {
        "totalCount": {
          "format": "int64",
          "type": "string",
          "description": "Total count of messages."
        },
        "groupsCountResult": {
          "$ref": "GroupsCountResult",
          "description": "Count metrics for Groups."
        },
        "mailCountResult": {
          "$ref": "MailCountResult",
          "description": "Count metrics for Gmail and classic Hangouts."
        }
      },
      "type": "object",
      "description": "Definition of the response for method CountArtifacts.",
      "id": "CountArtifactsResponse"
    },
    "HeldVoiceQuery": {
      "type": "object",
      "id": "HeldVoiceQuery",
      "description": "Options for Voice holds.",
      "properties": {
        "coveredData": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ],
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text messages.",
              "Voicemails and their transcripts.",
              "Call logs."
            ]
          },
          "description": "A list of data types covered by the hold. Should be non-empty. Order does not matter and duplicates are ignored."
        }
      }
    },
    "HangoutsChatOptions": {
      "id": "HangoutsChatOptions",
      "type": "object",
      "description": "Additional options for Google Chat search",
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "For searches by account or organizational unit, set to **true** to include rooms."
        }
      }
    },
    "VoiceExportOptions": {
      "type": "object",
      "properties": {
        "exportFormat": {
          "type": "string",
          "description": "The file format for exported text messages.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ]
        }
      },
      "id": "VoiceExportOptions",
      "description": "The options for Voice exports."
    },
    "Operation": {
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "MatterPermission": {
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/)."
        },
        "role": {
          "type": "string",
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator on the matter.",
            "The owner of the matter."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "description": "The user's role for the matter."
        }
      },
      "type": "object",
      "id": "MatterPermission",
      "description": "Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist."
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address of the user.",
          "type": "string"
        },
        "displayName": {
          "description": "The displayed name of the user.",
          "type": "string"
        }
      },
      "id": "UserInfo",
      "description": "User's information."
    },
    "AccountCountError": {
      "description": "An error that occurred when querying a specific account",
      "properties": {
        "errorType": {
          "description": "Account query error.",
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ],
          "type": "string",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ]
        },
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        }
      },
      "type": "object",
      "id": "AccountCountError"
    },
    "HeldDriveQuery": {
      "properties": {
        "includeSharedDriveFiles": {
          "description": "To include files in shared drives in the hold, set to **true**.",
          "type": "boolean"
        },
        "includeTeamDriveFiles": {
          "description": "To include files in Team Drives in the hold, set to **true**.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Options for Drive holds.",
      "id": "HeldDriveQuery"
    },
    "HeldGroupsQuery": {
      "type": "object",
      "description": "Query options for group holds.",
      "id": "HeldGroupsQuery",
      "properties": {
        "startTime": {
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
          "type": "string"
        },
        "endTime": {
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "UndeleteMatterRequest": {
      "id": "UndeleteMatterRequest",
      "properties": {},
      "type": "object",
      "description": "Undelete a matter by ID."
    },
    "VoiceOptions": {
      "properties": {
        "coveredData": {
          "description": "Datatypes to search",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text messages.",
              "Voicemails and their transcripts.",
              "Call logs."
            ],
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ]
          },
          "type": "array"
        }
      },
      "description": "Additional options for Voice search",
      "id": "VoiceOptions",
      "type": "object"
    },
    "ListExportsResponse": {
      "id": "ListExportsResponse",
      "description": "The exports for a matter.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        },
        "exports": {
          "description": "The list of exports.",
          "items": {
            "$ref": "Export"
          },
          "type": "array"
        }
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "RemoveMatterPermissionsRequest": {
      "description": "Remove an account as a matter collaborator.",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The account ID."
        }
      },
      "type": "object",
      "id": "RemoveMatterPermissionsRequest"
    },
    "AddHeldAccountsResponse": {
      "type": "object",
      "id": "AddHeldAccountsResponse",
      "description": "Response for batch create held accounts.",
      "properties": {
        "responses": {
          "type": "array",
          "description": "The list of responses, in the same order as the batch request.",
          "items": {
            "$ref": "AddHeldAccountResult"
          }
        }
      }
    },
    "DriveOptions": {
      "description": "Additional options for Drive search",
      "type": "object",
      "properties": {
        "includeSharedDrives": {
          "type": "boolean",
          "description": "Set to **true** to include shared drives."
        },
        "versionDate": {
          "description": "Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.",
          "type": "string",
          "format": "google-datetime"
        },
        "includeTeamDrives": {
          "type": "boolean",
          "description": "Set to true to include Team Drive."
        }
      },
      "id": "DriveOptions"
    },
    "CloudStorageFile": {
      "properties": {
        "objectName": {
          "type": "string",
          "description": "The name of the Cloud Storage object for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis)."
        },
        "bucketName": {
          "description": "The name of the Cloud Storage bucket for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis), but not to list the bucket contents. Instead, you can [get individual export files](https://cloud.google.com/storage/docs/json_api/v1/objects/get) by object name.",
          "type": "string"
        },
        "md5Hash": {
          "type": "string",
          "description": "The md5 hash of the file."
        },
        "size": {
          "description": "The export file size.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CloudStorageFile",
      "description": "The export file in Cloud Storage"
    },
    "OrgUnitInfo": {
      "id": "OrgUnitInfo",
      "description": "The organizational unit to search",
      "type": "object",
      "properties": {
        "orgUnitId": {
          "type": "string",
          "description": "The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/)."
        }
      }
    },
    "ReopenMatterResponse": {
      "type": "object",
      "id": "ReopenMatterResponse",
      "description": "Response to a ReopenMatterRequest.",
      "properties": {
        "matter": {
          "description": "The updated matter, with state **OPEN**.",
          "$ref": "Matter"
        }
      }
    },
    "Hold": {
      "type": "object",
      "properties": {
        "accounts": {
          "description": "If set, the hold applies to the specified accounts and **orgUnit** must be empty.",
          "type": "array",
          "items": {
            "$ref": "HeldAccount"
          }
        },
        "name": {
          "description": "The name of the hold.",
          "type": "string"
        },
        "orgUnit": {
          "$ref": "HeldOrgUnit",
          "description": "If set, the hold applies to all members of the organizational unit and **accounts** must be empty. This property is mutable. For Groups holds, set **accounts**."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last time this hold was modified."
        },
        "corpus": {
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "type": "string",
          "description": "The service to be searched.",
          "enumDescriptions": [
            "No service specified.",
            "Drive, including Meet and Sites.",
            "For search, Gmail and classic Hangouts. For holds, Gmail only.",
            "Groups.",
            "For search, Google Chat only. For holds, Google Chat and classic Hangouts.",
            "Google Voice."
          ]
        },
        "holdId": {
          "description": "The unique immutable ID of the hold. Assigned during creation.",
          "type": "string"
        },
        "query": {
          "description": "Service-specific options. If set, **CorpusQuery** must match **CorpusType**.",
          "$ref": "CorpusQuery"
        }
      },
      "id": "Hold",
      "description": "A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."
    },
    "RemoveHeldAccountsResponse": {
      "properties": {
        "statuses": {
          "type": "array",
          "description": "A list of statuses for the deleted accounts. Results have the same order as the request.",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "description": "Response for batch delete held accounts.",
      "id": "RemoveHeldAccountsResponse",
      "type": "object"
    }
  },
  "baseUrl": "https://vault.googleapis.com/",
  "basePath": "",
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "servicePath": "",
  "documentationLink": "https://developers.google.com/vault",
  "parameters": {
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "type": "string",
      "location": "query",
      "default": "json",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    }
  },
  "discoveryVersion": "v1",
  "resources": {
    "matters": {
      "methods": {
        "create": {
          "request": {
            "$ref": "Matter"
          },
          "path": "v1/matters",
          "flatPath": "v1/matters",
          "parameters": {},
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "id": "vault.matters.create",
          "httpMethod": "POST",
          "response": {
            "$ref": "Matter"
          },
          "description": "Creates a matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view."
        },
        "count": {
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "id": "vault.matters.count",
          "request": {
            "$ref": "CountArtifactsRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "POST",
          "path": "v1/matters/{matterId}:count",
          "description": "Counts the accounts processed by the specified query.",
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "v1/matters/{matterId}:count"
        },
        "removePermissions": {
          "id": "vault.matters.removePermissions",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/matters/{matterId}:removePermissions",
          "parameterOrder": [
            "matterId"
          ],
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "httpMethod": "POST",
          "description": "Removes an account as a matter collaborator.",
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "required": true,
              "location": "path"
            }
          }
        },
        "undelete": {
          "id": "vault.matters.undelete",
          "parameterOrder": [
            "matterId"
          ],
          "flatPath": "v1/matters/{matterId}:undelete",
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "description": "The matter ID.",
              "location": "path"
            }
          },
          "description": "Undeletes the specified matter. Returns the matter with updated state.",
          "httpMethod": "POST",
          "request": {
            "$ref": "UndeleteMatterRequest"
          },
          "path": "v1/matters/{matterId}:undelete",
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "addPermissions": {
          "path": "v1/matters/{matterId}:addPermissions",
          "parameters": {
            "matterId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The matter ID."
            }
          },
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "MatterPermission"
          },
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "id": "vault.matters.addPermissions",
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Adds an account as a matter collaborator."
        },
        "delete": {
          "path": "v1/matters/{matterId}",
          "description": "Deletes the specified matter. Returns the matter with updated state.",
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "DELETE",
          "id": "vault.matters.delete",
          "parameters": {
            "matterId": {
              "location": "path",
              "description": "The matter ID",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters/{matterId}"
        },
        "list": {
          "httpMethod": "GET",
          "response": {
            "$ref": "ListMattersResponse"
          },
          "parameters": {
            "state": {
              "type": "string",
              "enumDescriptions": [
                "The matter has no specified state.",
                "The matter is open.",
                "The matter is closed.",
                "The matter is deleted."
              ],
              "description": "If set, lists only matters with the specified state. The default lists matters of all states.",
              "location": "query",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ]
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The pagination token as returned in the response."
            },
            "view": {
              "description": "Specifies how much information about the matter to return in response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "type": "string",
              "enumDescriptions": [
                "The amount of detail is unspecified. Same as **BASIC**.",
                "Returns the matter ID, name, description, and state. Default choice.",
                "Returns the basic details and a list of matter owners and collaborators (see [MatterPermissions](https://developers.google.com/vault/reference/rest/v1/matters#matterpermission))."
              ],
              "location": "query"
            },
            "pageSize": {
              "type": "integer",
              "description": "The number of matters to return in the response. Default and maximum are 100.",
              "format": "int32",
              "location": "query"
            }
          },
          "flatPath": "v1/matters",
          "parameterOrder": [],
          "description": "Lists matters the requestor has access to.",
          "id": "vault.matters.list",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "path": "v1/matters"
        },
        "update": {
          "id": "vault.matters.update",
          "path": "v1/matters/{matterId}",
          "httpMethod": "PUT",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "request": {
            "$ref": "Matter"
          },
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters/{matterId}",
          "parameterOrder": [
            "matterId"
          ],
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "close": {
          "flatPath": "v1/matters/{matterId}:close",
          "id": "vault.matters.close",
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "description": "Closes the specified matter. Returns the matter with updated state.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}:close"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}",
          "response": {
            "$ref": "Matter"
          },
          "id": "vault.matters.get",
          "parameters": {
            "matterId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The matter ID."
            },
            "view": {
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "The amount of detail is unspecified. Same as **BASIC**.",
                "Returns the matter ID, name, description, and state. Default choice.",
                "Returns the basic details and a list of matter owners and collaborators (see [MatterPermissions](https://developers.google.com/vault/reference/rest/v1/matters#matterpermission))."
              ],
              "description": "Specifies how much information about the matter to return in the response.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "description": "Gets the specified matter.",
          "flatPath": "v1/matters/{matterId}"
        },
        "reopen": {
          "flatPath": "v1/matters/{matterId}:reopen",
          "description": "Reopens the specified matter. Returns the matter with updated state.",
          "id": "vault.matters.reopen",
          "parameters": {
            "matterId": {
              "location": "path",
              "type": "string",
              "description": "The matter ID.",
              "required": true
            }
          },
          "path": "v1/matters/{matterId}:reopen",
          "httpMethod": "POST",
          "parameterOrder": [
            "matterId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "request": {
            "$ref": "ReopenMatterRequest"
          }
        }
      },
      "resources": {
        "savedQueries": {
          "methods": {
            "list": {
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists the saved queries in a matter.",
              "response": {
                "$ref": "ListSavedQueriesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "id": "vault.matters.savedQueries.list",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "description": "The ID of the matter to get the saved queries for.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of saved queries to return.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "v1/matters/{matterId}/savedQueries",
              "httpMethod": "GET"
            },
            "delete": {
              "description": "Deletes the specified saved query.",
              "id": "vault.matters.savedQueries.delete",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The ID of the matter to delete the saved query from."
                },
                "savedQueryId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "ID of the saved query to delete."
                }
              }
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "response": {
                "$ref": "SavedQuery"
              },
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the matter to get the saved query from.",
                  "required": true
                },
                "savedQueryId": {
                  "required": true,
                  "type": "string",
                  "description": "ID of the saved query to retrieve.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "id": "vault.matters.savedQueries.get",
              "description": "Retrieves the specified saved query."
            },
            "create": {
              "parameterOrder": [
                "matterId"
              ],
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "path": "v1/matters/{matterId}/savedQueries",
              "id": "vault.matters.savedQueries.create",
              "request": {
                "$ref": "SavedQuery"
              },
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The ID of the matter to create the saved query in."
                }
              },
              "httpMethod": "POST",
              "description": "Creates a saved query.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "SavedQuery"
              }
            }
          }
        },
        "holds": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "id": "vault.matters.holds.get",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "response": {
                "$ref": "Hold"
              },
              "parameters": {
                "matterId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The matter ID."
                },
                "holdId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The hold ID."
                },
                "view": {
                  "enumDescriptions": [
                    "Not specified. Defaults to **FULL_HOLD**.",
                    "Returns the hold ID, name, update time, service, and query.",
                    "Returns all details of **BASIC_HOLD** and the entities the hold applies to, such as accounts or organizational unit."
                  ],
                  "description": "The amount of detail to return for a hold.",
                  "type": "string",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "location": "query"
                }
              },
              "description": "Gets the specified hold.",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "delete": {
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "id": "vault.matters.holds.delete",
              "parameters": {
                "holdId": {
                  "description": "The hold ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "description": "The matter ID.",
                  "required": true
                }
              },
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "description": "Removes the specified hold and releases the accounts or organizational unit covered by the hold. If the data is not preserved by another hold or retention rule, it might be purged."
            },
            "create": {
              "httpMethod": "POST",
              "id": "vault.matters.holds.create",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string"
                }
              },
              "flatPath": "v1/matters/{matterId}/holds",
              "parameterOrder": [
                "matterId"
              ],
              "description": "Creates a hold in the specified matter.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "Hold"
              },
              "path": "v1/matters/{matterId}/holds",
              "request": {
                "$ref": "Hold"
              }
            },
            "addHeldAccounts": {
              "parameters": {
                "holdId": {
                  "type": "string",
                  "description": "The hold ID.",
                  "location": "path",
                  "required": true
                },
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "id": "vault.matters.holds.addHeldAccounts",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "response": {
                "$ref": "AddHeldAccountsResponse"
              },
              "httpMethod": "POST",
              "description": "Adds accounts to a hold. Returns a list of accounts that have been successfully added. Accounts can be added only to an existing account-based hold."
            },
            "list": {
              "flatPath": "v1/matters/{matterId}/holds",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "path": "v1/matters/{matterId}/holds",
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true
                },
                "view": {
                  "enumDescriptions": [
                    "Not specified. Defaults to **FULL_HOLD**.",
                    "Returns the hold ID, name, update time, service, and query.",
                    "Returns all details of **BASIC_HOLD** and the entities the hold applies to, such as accounts or organizational unit."
                  ],
                  "type": "string",
                  "description": "The amount of detail to return for a hold.",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as **page_size** = 100.",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning."
                }
              },
              "id": "vault.matters.holds.list",
              "httpMethod": "GET",
              "description": "Lists the holds in a matter.",
              "parameterOrder": [
                "matterId"
              ],
              "response": {
                "$ref": "ListHoldsResponse"
              }
            },
            "update": {
              "httpMethod": "PUT",
              "description": "Updates the scope (organizational unit or accounts) and query parameters of a hold. You cannot add accounts to a hold that covers an organizational unit, nor can you add organizational units to a hold that covers individual accounts. If you try, the unsupported values are ignored.",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "id": "vault.matters.holds.update",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "holdId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The ID of the hold."
                },
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "Hold"
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Hold"
              }
            },
            "removeHeldAccounts": {
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              },
              "description": "Removes the specified accounts from a hold. Returns a list of statuses in the same order as the request.",
              "httpMethod": "POST",
              "parameters": {
                "holdId": {
                  "description": "The hold ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "matterId": {
                  "required": true,
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string"
                }
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "id": "vault.matters.holds.removeHeldAccounts",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            }
          },
          "resources": {
            "accounts": {
              "methods": {
                "list": {
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "id": "vault.matters.holds.accounts.list",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "description": "Lists the accounts covered by a hold. This can list only individually-specified accounts covered by the hold. If the hold covers an organizational unit, use the [Admin SDK](https://developers.google.com/admin-sdk/). to list the members of the organizational unit on hold.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "parameters": {
                    "matterId": {
                      "location": "path",
                      "description": "The matter ID.",
                      "required": true,
                      "type": "string"
                    },
                    "holdId": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The hold ID."
                    }
                  }
                },
                "create": {
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "parameters": {
                    "holdId": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The hold ID."
                    },
                    "matterId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The matter ID."
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "response": {
                    "$ref": "HeldAccount"
                  },
                  "description": "Adds an account to a hold. Accounts can be added only to a hold that does not have an organizational unit set. If you try to add an account to an organizational unit-based hold, an error is returned.",
                  "id": "vault.matters.holds.accounts.create",
                  "httpMethod": "POST"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "description": "Removes an account from a hold.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "holdId": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The hold ID."
                    },
                    "accountId": {
                      "location": "path",
                      "type": "string",
                      "description": "The ID of the account to remove from the hold.",
                      "required": true
                    },
                    "matterId": {
                      "description": "The matter ID.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "id": "vault.matters.holds.accounts.delete",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "httpMethod": "DELETE"
                }
              }
            }
          }
        },
        "exports": {
          "methods": {
            "create": {
              "id": "vault.matters.exports.create",
              "request": {
                "$ref": "Export"
              },
              "httpMethod": "POST",
              "flatPath": "v1/matters/{matterId}/exports",
              "parameterOrder": [
                "matterId"
              ],
              "path": "v1/matters/{matterId}/exports",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Export"
              },
              "description": "Creates an export."
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The pagination token as returned in the response.",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The number of exports to return in the response.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "ListExportsResponse"
              },
              "path": "v1/matters/{matterId}/exports",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "flatPath": "v1/matters/{matterId}/exports",
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId"
              ],
              "id": "vault.matters.exports.list",
              "description": "Lists details about the exports in the specified matter."
            },
            "delete": {
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "response": {
                "$ref": "Empty"
              },
              "id": "vault.matters.exports.delete",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "description": "Deletes an export.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "exportId": {
                  "required": true,
                  "type": "string",
                  "description": "The export ID.",
                  "location": "path"
                },
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true
                }
              },
              "httpMethod": "DELETE"
            },
            "get": {
              "parameters": {
                "exportId": {
                  "description": "The export ID.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "id": "vault.matters.exports.get",
              "response": {
                "$ref": "Export"
              },
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "description": "Gets an export.",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "httpMethod": "GET"
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "cancel": {
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be cancelled.",
              "pattern": "^operations/.*$",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "v1/operations/{operationsId}:cancel",
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "id": "vault.operations.cancel",
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/{+name}:cancel",
          "httpMethod": "POST"
        },
        "get": {
          "flatPath": "v1/operations/{operationsId}",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource.",
              "type": "string"
            }
          },
          "id": "vault.operations.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/{+name}",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ]
        },
        "delete": {
          "response": {
            "$ref": "Empty"
          },
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "type": "string",
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted."
            }
          },
          "id": "vault.operations.delete",
          "path": "v1/{+name}"
        },
        "list": {
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "pageSize": {
              "location": "query",
              "format": "int32",
              "type": "integer",
              "description": "The standard list page size."
            },
            "name": {
              "location": "path",
              "required": true,
              "pattern": "^operations$",
              "description": "The name of the operation's parent resource.",
              "type": "string"
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "The standard list filter."
            },
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "id": "vault.operations.list",
          "path": "v1/{+name}",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "flatPath": "v1/operations"
        }
      }
    }
  },
  "ownerName": "Google",
  "revision": "20210817",
  "version_module": true,
  "id": "vault:v1",
  "version": "v1",
  "fullyEncodeReservedExpansion": true
}

{
  "ownerName": "Google",
  "baseUrl": "https://vault.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "servicePath": "",
  "canonicalName": "Vault",
  "discoveryVersion": "v1",
  "version": "v1",
  "schemas": {
    "RemoveMatterPermissionsRequest": {
      "description": "Remove an account as a matter collaborator.",
      "id": "RemoveMatterPermissionsRequest",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The account ID."
        }
      },
      "type": "object"
    },
    "ReopenMatterRequest": {
      "description": "Reopen a matter by ID.",
      "id": "ReopenMatterRequest",
      "type": "object",
      "properties": {}
    },
    "ListExportsResponse": {
      "id": "ListExportsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list."
        },
        "exports": {
          "type": "array",
          "items": {
            "$ref": "Export"
          },
          "description": "The list of exports."
        }
      },
      "type": "object",
      "description": "The exports for a matter."
    },
    "GroupsExportOptions": {
      "properties": {
        "exportFormat": {
          "description": "The file format for exported messages.",
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string"
        }
      },
      "id": "GroupsExportOptions",
      "type": "object",
      "description": "Options for Groups exports."
    },
    "CountArtifactsMetadata": {
      "description": "Long running operation metadata for CountArtifacts.",
      "id": "CountArtifactsMetadata",
      "properties": {
        "endTime": {
          "format": "google-datetime",
          "description": "End time of count operation. Available when operation is done.",
          "type": "string"
        },
        "query": {
          "$ref": "Query",
          "description": "The search query from the request."
        },
        "matterId": {
          "description": "The matter ID of the associated matter.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "Creation time of count operation.",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "MatterPermission": {
      "properties": {
        "role": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "type": "string",
          "description": "The user's role for the matter.",
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator on the matter.",
            "The owner of the matter."
          ]
        },
        "accountId": {
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MatterPermission",
      "description": "Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist."
    },
    "MailCountResult": {
      "description": "Gmail and classic Hangouts-specific count metrics.",
      "type": "object",
      "id": "MailCountResult",
      "properties": {
        "matchingAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts that can be queried and have more than zero messages."
        },
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "type": "string",
          "format": "int64"
        },
        "accountCounts": {
          "type": "array",
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "AccountCount"
          }
        },
        "nonQueryableAccounts": {
          "description": "When **DataScope** is **HELD_DATA**, the number of accounts in the request that are not queried because they are not on hold. For other data scopes, this field is not set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "accountCountErrors": {
          "items": {
            "$ref": "AccountCountError"
          },
          "type": "array",
          "description": "Errors occurred when querying these accounts."
        }
      }
    },
    "MailOptions": {
      "type": "object",
      "properties": {
        "excludeDrafts": {
          "description": "Set to **true** to exclude drafts.",
          "type": "boolean"
        }
      },
      "description": "Additional options for Gmail search",
      "id": "MailOptions"
    },
    "CorpusQuery": {
      "description": "Service-specific options for holds.",
      "properties": {
        "hangoutsChatQuery": {
          "description": "Service-specific options for Chat holds. If set, **CorpusType** must be **HANGOUTS_CHAT**.",
          "$ref": "HeldHangoutsChatQuery"
        },
        "mailQuery": {
          "description": "Service-specific options for Gmail holds. If set, **CorpusType** must be **MAIL**.",
          "$ref": "HeldMailQuery"
        },
        "driveQuery": {
          "$ref": "HeldDriveQuery",
          "description": "Service-specific options for Drive holds. If set, **CorpusType** must be **DRIVE**."
        },
        "groupsQuery": {
          "description": "Service-specific options for Groups holds. If set, **CorpusType** must be **GROUPS**.",
          "$ref": "HeldGroupsQuery"
        },
        "voiceQuery": {
          "$ref": "HeldVoiceQuery",
          "description": "Service-specific options for Voice holds. If set, **CorpusType** must be **VOICE**."
        }
      },
      "id": "CorpusQuery",
      "type": "object"
    },
    "AddMatterPermissionsRequest": {
      "id": "AddMatterPermissionsRequest",
      "properties": {
        "ccMe": {
          "description": "Only relevant if **sendEmails** is **true**. To CC the requestor in the email message, set to **true**. To not CC requestor, set to **false**.",
          "type": "boolean"
        },
        "matterPermission": {
          "description": "The account and its role to add.",
          "$ref": "MatterPermission"
        },
        "sendEmails": {
          "type": "boolean",
          "description": "To send a notification email to the added account, set to **true**. To not send a notification email, set to **false**."
        }
      },
      "type": "object",
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, the existing role is overwritten."
    },
    "HangoutsChatInfo": {
      "type": "object",
      "description": "The Chat spaces to search",
      "properties": {
        "roomId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/hangouts/chat)."
        }
      },
      "id": "HangoutsChatInfo"
    },
    "CloudStorageSink": {
      "id": "CloudStorageSink",
      "description": "Export sink for Cloud Storage files.",
      "properties": {
        "files": {
          "items": {
            "$ref": "CloudStorageFile"
          },
          "description": "Output only. The exported files in Cloud Storage.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "SharedDriveInfo": {
      "type": "object",
      "properties": {
        "sharedDriveIds": {
          "description": "A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SharedDriveInfo",
      "description": "The shared drives to search"
    },
    "CloseMatterResponse": {
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state **CLOSED**."
        }
      },
      "type": "object",
      "description": "Response to a CloseMatterRequest.",
      "id": "CloseMatterResponse"
    },
    "RemoveHeldAccountsResponse": {
      "description": "Response for batch delete held accounts.",
      "type": "object",
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "Status"
          },
          "description": "A list of statuses for the deleted accounts. Results have the same order as the request."
        }
      },
      "id": "RemoveHeldAccountsResponse"
    },
    "HeldGroupsQuery": {
      "description": "Query options for group holds.",
      "type": "object",
      "properties": {
        "terms": {
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string"
        },
        "endTime": {
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "HeldGroupsQuery"
    },
    "VoiceOptions": {
      "description": "Additional options for Voice search",
      "id": "VoiceOptions",
      "properties": {
        "coveredData": {
          "type": "array",
          "description": "Datatypes to search",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text messages.",
              "Voicemails and their transcripts.",
              "Call logs."
            ],
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ]
          }
        }
      },
      "type": "object"
    },
    "HeldVoiceQuery": {
      "type": "object",
      "description": "Options for Voice holds.",
      "id": "HeldVoiceQuery",
      "properties": {
        "coveredData": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text messages.",
              "Voicemails and their transcripts.",
              "Call logs."
            ],
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ]
          },
          "type": "array",
          "description": "A list of data types covered by the hold. Should be non-empty. Order does not matter and duplicates are ignored."
        }
      }
    },
    "CancelOperationRequest": {
      "properties": {},
      "type": "object",
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation."
    },
    "HeldDriveQuery": {
      "description": "Options for Drive holds.",
      "properties": {
        "includeTeamDriveFiles": {
          "type": "boolean",
          "description": "To include files in Team Drives in the hold, set to **true**."
        },
        "includeSharedDriveFiles": {
          "type": "boolean",
          "description": "To include files in shared drives in the hold, set to **true**."
        }
      },
      "type": "object",
      "id": "HeldDriveQuery"
    },
    "SavedQuery": {
      "id": "SavedQuery",
      "description": "The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The server-generated timestamp when the saved query was created.",
          "type": "string"
        },
        "displayName": {
          "description": "The name of the saved query.",
          "type": "string"
        },
        "matterId": {
          "type": "string",
          "description": "Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL."
        },
        "query": {
          "description": "The search parameters of the saved query.",
          "$ref": "Query"
        },
        "savedQueryId": {
          "description": "A unique identifier for the saved query.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HangoutsChatExportOptions": {
      "type": "object",
      "id": "HangoutsChatExportOptions",
      "properties": {
        "exportFormat": {
          "type": "string",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "description": "The file format for exported messages."
        }
      },
      "description": "Options for Chat exports."
    },
    "AddHeldAccountsRequest": {
      "description": "Add a list of accounts to a hold.",
      "id": "AddHeldAccountsRequest",
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "description": "A comma-separated list of the emails of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
          "items": {
            "type": "string"
          }
        },
        "accountIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A comma-separated list of the account IDs of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both."
        }
      }
    },
    "AccountCount": {
      "type": "object",
      "id": "AccountCount",
      "properties": {
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        },
        "count": {
          "description": "The number of results (messages or files) found for this account.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "The results count for each account."
    },
    "ListMattersResponse": {
      "id": "ListMattersResponse",
      "type": "object",
      "description": "Provides the list of matters.",
      "properties": {
        "matters": {
          "description": "List of matters.",
          "type": "array",
          "items": {
            "$ref": "Matter"
          }
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "HangoutsChatOptions": {
      "properties": {
        "includeRooms": {
          "description": "For searches by account or organizational unit, set to **true** to include rooms.",
          "type": "boolean"
        }
      },
      "id": "HangoutsChatOptions",
      "description": "Additional options for Google Chat search",
      "type": "object"
    },
    "HeldMailQuery": {
      "id": "HeldMailQuery",
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date."
        },
        "startTime": {
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "type": "string",
          "format": "google-datetime"
        },
        "terms": {
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
          "type": "string"
        }
      },
      "description": "Query options for Gmail holds."
    },
    "CloseMatterRequest": {
      "id": "CloseMatterRequest",
      "description": "Close a matter by ID.",
      "type": "object",
      "properties": {}
    },
    "GroupsCountResult": {
      "id": "GroupsCountResult",
      "properties": {
        "accountCounts": {
          "items": {
            "$ref": "AccountCount"
          },
          "type": "array",
          "description": "Subtotal count per matching account that have more than zero messages."
        },
        "queriedAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts involved in this count operation."
        },
        "accountCountErrors": {
          "type": "array",
          "description": "Error occurred when querying these accounts.",
          "items": {
            "$ref": "AccountCountError"
          }
        },
        "nonQueryableAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When **DataScope** is **HELD_DATA**, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set."
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Groups specific count metrics."
    },
    "HeldAccount": {
      "type": "object",
      "id": "HeldAccount",
      "properties": {
        "lastName": {
          "type": "string",
          "description": "Output only. The last name of the account holder."
        },
        "holdTime": {
          "type": "string",
          "description": "Output only. When the account was put on hold.",
          "format": "google-datetime"
        },
        "firstName": {
          "type": "string",
          "description": "Output only. The first name of the account holder."
        },
        "accountId": {
          "type": "string",
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/)."
        },
        "email": {
          "description": "The primary email address of the account. If used as an input, this takes precedence over **accountId**.",
          "type": "string"
        }
      },
      "description": "An account covered by a hold. This structure is immutable. It can be an individual account or a Google Group, depending on the service. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."
    },
    "Matter": {
      "type": "object",
      "properties": {
        "matterPermissions": {
          "items": {
            "$ref": "MatterPermission"
          },
          "description": "Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "An optional description for the matter."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "enumDescriptions": [
            "The matter has no specified state.",
            "The matter is open.",
            "The matter is closed.",
            "The matter is deleted."
          ],
          "type": "string",
          "description": "The state of the matter."
        },
        "matterId": {
          "description": "The matter ID, which is generated by the server. Leave blank when creating a matter.",
          "type": "string"
        },
        "name": {
          "description": "The name of the matter.",
          "type": "string"
        }
      },
      "description": "Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "id": "Matter"
    },
    "Hold": {
      "id": "Hold",
      "type": "object",
      "properties": {
        "accounts": {
          "items": {
            "$ref": "HeldAccount"
          },
          "description": "If set, the hold applies to the specified accounts and **orgUnit** must be empty.",
          "type": "array"
        },
        "corpus": {
          "description": "The service to be searched.",
          "enumDescriptions": [
            "No service specified.",
            "Drive, including Meet and Sites.",
            "For search, Gmail and classic Hangouts. For holds, Gmail only.",
            "Groups.",
            "For search, Google Chat only. For holds, Google Chat and classic Hangouts.",
            "Google Voice."
          ],
          "type": "string",
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ]
        },
        "name": {
          "description": "The name of the hold.",
          "type": "string"
        },
        "orgUnit": {
          "description": "If set, the hold applies to all members of the organizational unit and **accounts** must be empty. This property is mutable. For Groups holds, set **accounts**.",
          "$ref": "HeldOrgUnit"
        },
        "query": {
          "description": "Service-specific options. If set, **CorpusQuery** must match **CorpusType**.",
          "$ref": "CorpusQuery"
        },
        "holdId": {
          "type": "string",
          "description": "The unique immutable ID of the hold. Assigned during creation."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last time this hold was modified."
        }
      },
      "description": "A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."
    },
    "ReopenMatterResponse": {
      "id": "ReopenMatterResponse",
      "type": "object",
      "properties": {
        "matter": {
          "description": "The updated matter, with state **OPEN**.",
          "$ref": "Matter"
        }
      },
      "description": "Response to a ReopenMatterRequest."
    },
    "ListHeldAccountsResponse": {
      "id": "ListHeldAccountsResponse",
      "description": "Returns a list of the accounts covered by a hold.",
      "properties": {
        "accounts": {
          "description": "The held accounts on a hold.",
          "items": {
            "$ref": "HeldAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListSavedQueriesResponse": {
      "description": "Definition of the response for method ListSaveQuery.",
      "type": "object",
      "properties": {
        "savedQueries": {
          "description": "List of saved queries.",
          "type": "array",
          "items": {
            "$ref": "SavedQuery"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."
        }
      },
      "id": "ListSavedQueriesResponse"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "Status"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse"
    },
    "HeldOrgUnit": {
      "description": "The organizational unit covered by a hold. This structure is immutable.",
      "properties": {
        "orgUnitId": {
          "description": "The organizational unit's immutable ID as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        },
        "holdTime": {
          "format": "google-datetime",
          "description": "When the organizational unit was put on hold. This property is immutable.",
          "type": "string"
        }
      },
      "id": "HeldOrgUnit",
      "type": "object"
    },
    "Query": {
      "properties": {
        "voiceOptions": {
          "description": "Set Voice search-specific options.",
          "$ref": "VoiceOptions"
        },
        "timeZone": {
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).",
          "type": "string"
        },
        "driveOptions": {
          "$ref": "DriveOptions",
          "description": "Set Drive search-specific options."
        },
        "teamDriveInfo": {
          "description": "Required when **SearchMethod** is **TEAM_DRIVE**.",
          "$ref": "TeamDriveInfo"
        },
        "orgUnitInfo": {
          "description": "Required when **SearchMethod** is **ORG_UNIT**.",
          "$ref": "OrgUnitInfo"
        },
        "corpus": {
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "type": "string",
          "description": "The Google Workspace service to search.",
          "enumDescriptions": [
            "No service specified.",
            "Drive, including Meet and Sites.",
            "For search, Gmail and classic Hangouts. For holds, Gmail only.",
            "Groups.",
            "For search, Google Chat only. For holds, Google Chat and classic Hangouts.",
            "Google Voice."
          ]
        },
        "accountInfo": {
          "description": "Required when **SearchMethod** is **ACCOUNT**.",
          "$ref": "AccountInfo"
        },
        "endTime": {
          "description": "The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "sharedDriveInfo": {
          "$ref": "SharedDriveInfo",
          "description": "Required when **SearchMethod** is **SHARED_DRIVE**."
        },
        "hangoutsChatInfo": {
          "$ref": "HangoutsChatInfo",
          "description": "Required when **SearchMethod** is **ROOM**. (read-only)"
        },
        "dataScope": {
          "enumDescriptions": [
            "No data source specified.",
            "All available data.",
            "Only data on hold.",
            "Only data not yet processed by Vault. (Gmail and Groups only)"
          ],
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ],
          "type": "string",
          "description": "The data source to search."
        },
        "searchMethod": {
          "type": "string",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "description": "The search method to use.",
          "enumDescriptions": [
            "A search method must be specified or else it is rejected.",
            "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).",
            "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).",
            "Search the data in the Team Drive specified in **team_drive_info**.",
            "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.",
            "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).",
            "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.devsite.corp.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."
          ]
        },
        "method": {
          "enumDescriptions": [
            "A search method must be specified or else it is rejected.",
            "Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).",
            "Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).",
            "Search the data in the Team Drive specified in **team_drive_info**.",
            "Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.",
            "Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).",
            "Search the files in the shared drives specified in [SharedDriveInfo](https://developers.devsite.corp.google.com/vault/reference/rest/v1/Query#shareddriveinfo)."
          ],
          "description": "The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "type": "string"
        },
        "mailOptions": {
          "description": "Set Gmail search-specific options.",
          "$ref": "MailOptions"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date."
        },
        "terms": {
          "description": "Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.",
          "type": "string"
        },
        "hangoutsChatOptions": {
          "description": "Set Chat search-specific options. (read-only)",
          "$ref": "HangoutsChatOptions"
        }
      },
      "id": "Query",
      "description": "The query definition used for search and export.",
      "type": "object"
    },
    "VoiceExportOptions": {
      "properties": {
        "exportFormat": {
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string",
          "description": "The file format for exported text messages.",
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ]
        }
      },
      "type": "object",
      "id": "VoiceExportOptions",
      "description": "The options for Voice exports."
    },
    "AddHeldAccountResult": {
      "properties": {
        "status": {
          "$ref": "Status",
          "description": "Reports the request status. If it failed, returns an error message."
        },
        "account": {
          "$ref": "HeldAccount",
          "description": "Returned when the account was successfully created."
        }
      },
      "id": "AddHeldAccountResult",
      "description": "The status of each account creation, and the **HeldAccount**, if successful.",
      "type": "object"
    },
    "UndeleteMatterRequest": {
      "description": "Undelete a matter by ID.",
      "properties": {},
      "type": "object",
      "id": "UndeleteMatterRequest"
    },
    "OrgUnitInfo": {
      "properties": {
        "orgUnitId": {
          "type": "string",
          "description": "The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/)."
        }
      },
      "id": "OrgUnitInfo",
      "type": "object",
      "description": "The organizational unit to search"
    },
    "TeamDriveInfo": {
      "type": "object",
      "id": "TeamDriveInfo",
      "description": "Team Drives to search",
      "properties": {
        "teamDriveIds": {
          "type": "array",
          "description": "List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RemoveHeldAccountsRequest": {
      "description": "Remove a list of accounts from a hold.",
      "type": "object",
      "properties": {
        "accountIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The account IDs of the accounts to remove from the hold."
        }
      },
      "id": "RemoveHeldAccountsRequest"
    },
    "DriveOptions": {
      "id": "DriveOptions",
      "description": "Additional options for Drive search",
      "type": "object",
      "properties": {
        "includeTeamDrives": {
          "type": "boolean",
          "description": "Set to true to include Team Drive."
        },
        "versionDate": {
          "type": "string",
          "description": "Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.",
          "format": "google-datetime"
        },
        "includeSharedDrives": {
          "type": "boolean",
          "description": "Set to **true** to include shared drives."
        }
      }
    },
    "HeldHangoutsChatQuery": {
      "type": "object",
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "To include messages in Chat spaces the user was a member of, set to **true**."
        }
      },
      "id": "HeldHangoutsChatQuery",
      "description": "Options for Chat holds."
    },
    "AccountCountError": {
      "id": "AccountCountError",
      "description": "An error that occurred when querying a specific account",
      "properties": {
        "errorType": {
          "description": "Account query error.",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ],
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ],
          "type": "string"
        },
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        }
      },
      "type": "object"
    },
    "AccountInfo": {
      "properties": {
        "emails": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A set of accounts to search."
        }
      },
      "type": "object",
      "description": "The accounts to search",
      "id": "AccountInfo"
    },
    "UserInfo": {
      "id": "UserInfo",
      "description": "User's information.",
      "properties": {
        "displayName": {
          "description": "The displayed name of the user.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "The email address of the user."
        }
      },
      "type": "object"
    },
    "ListHoldsResponse": {
      "id": "ListHoldsResponse",
      "type": "object",
      "description": "The holds for a matter.",
      "properties": {
        "holds": {
          "type": "array",
          "items": {
            "$ref": "Hold"
          },
          "description": "The list of holds."
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.",
          "type": "string"
        }
      }
    },
    "DriveExportOptions": {
      "description": "Options for Drive exports.",
      "properties": {
        "includeAccessInfo": {
          "type": "boolean",
          "description": "To include access level information for users with [indirect access](https://support.google.com/vault/answer/6099459#metadata) to files, set to **true**."
        }
      },
      "id": "DriveExportOptions",
      "type": "object"
    },
    "Export": {
      "properties": {
        "cloudStorageSink": {
          "description": "Output only. The sink for export files in Cloud Storage.",
          "$ref": "CloudStorageSink"
        },
        "query": {
          "$ref": "Query",
          "description": "The query parameters used to create the export."
        },
        "status": {
          "type": "string",
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ],
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is in progress."
          ],
          "description": "Output only. The status of the export."
        },
        "matterId": {
          "description": "Output only. The matter ID.",
          "type": "string"
        },
        "name": {
          "description": "The export name.",
          "type": "string"
        },
        "id": {
          "description": "Output only. The generated export ID.",
          "type": "string"
        },
        "requester": {
          "$ref": "UserInfo",
          "description": "Output only. The requester of the export."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time when the export was created.",
          "format": "google-datetime"
        },
        "exportOptions": {
          "$ref": "ExportOptions",
          "description": "Additional export options."
        },
        "stats": {
          "description": "Output only. Details about the export progress and size.",
          "$ref": "ExportStats"
        }
      },
      "description": "An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "id": "Export",
      "type": "object"
    },
    "CountArtifactsResponse": {
      "type": "object",
      "id": "CountArtifactsResponse",
      "properties": {
        "totalCount": {
          "description": "Total count of messages.",
          "type": "string",
          "format": "int64"
        },
        "mailCountResult": {
          "description": "Count metrics for Gmail and classic Hangouts.",
          "$ref": "MailCountResult"
        },
        "groupsCountResult": {
          "$ref": "GroupsCountResult",
          "description": "Count metrics for Groups."
        }
      },
      "description": "Definition of the response for method CountArtifacts."
    },
    "ExportOptions": {
      "properties": {
        "hangoutsChatOptions": {
          "$ref": "HangoutsChatExportOptions",
          "description": "Options for Chat exports."
        },
        "voiceOptions": {
          "description": "Options for Voice exports.",
          "$ref": "VoiceExportOptions"
        },
        "groupsOptions": {
          "$ref": "GroupsExportOptions",
          "description": "Options for Groups exports."
        },
        "driveOptions": {
          "$ref": "DriveExportOptions",
          "description": "Options for Drive exports."
        },
        "mailOptions": {
          "$ref": "MailExportOptions",
          "description": "Options for Gmail exports."
        },
        "region": {
          "type": "string",
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "enumDescriptions": [
            "The region is unspecified. Defaults to ANY.",
            "Any region.",
            "United States region.",
            "Europe region."
          ],
          "description": "The requested data region for the export."
        }
      },
      "type": "object",
      "id": "ExportOptions",
      "description": "Additional options for exports"
    },
    "CloudStorageFile": {
      "id": "CloudStorageFile",
      "properties": {
        "md5Hash": {
          "description": "The md5 hash of the file.",
          "type": "string"
        },
        "objectName": {
          "description": "The name of the Cloud Storage object for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis).",
          "type": "string"
        },
        "size": {
          "type": "string",
          "description": "The export file size.",
          "format": "int64"
        },
        "bucketName": {
          "type": "string",
          "description": "The name of the Cloud Storage bucket for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis), but not to list the bucket contents. Instead, you can [get individual export files](https://cloud.google.com/storage/docs/json_api/v1/objects/get) by object name."
        }
      },
      "type": "object",
      "description": "The export file in Cloud Storage"
    },
    "AddHeldAccountsResponse": {
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "AddHeldAccountResult"
          },
          "description": "The list of responses, in the same order as the batch request."
        }
      },
      "type": "object",
      "description": "Response for batch create held accounts.",
      "id": "AddHeldAccountsResponse"
    },
    "CountArtifactsRequest": {
      "description": "Count artifacts request.",
      "properties": {
        "query": {
          "$ref": "Query",
          "description": "The search query."
        },
        "view": {
          "description": "Sets the granularity of the count results.",
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default. Same as **TOTAL_COUNT**.",
            "Response includes counts of the total accounts, queried accounts, matching accounts, non-queryable accounts, and queried account errors.",
            "Response includes the same details as **TOTAL_COUNT**, plus additional account breakdown."
          ]
        }
      },
      "id": "CountArtifactsRequest",
      "type": "object"
    },
    "MailExportOptions": {
      "id": "MailExportOptions",
      "properties": {
        "exportFormat": {
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "Export as MBOX.",
            "Export as PST."
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "description": "The file format for exported messages."
        },
        "showConfidentialModeContent": {
          "type": "boolean",
          "description": "To export confidential mode content, set to **true**."
        }
      },
      "description": "Options for Gmail exports.",
      "type": "object"
    },
    "ExportStats": {
      "id": "ExportStats",
      "properties": {
        "exportedArtifactCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of messages or files already processed for export."
        },
        "sizeInBytes": {
          "format": "int64",
          "description": "The size of export in bytes.",
          "type": "string"
        },
        "totalArtifactCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of messages or files to be exported."
        }
      },
      "type": "object",
      "description": "Progress information for an export."
    }
  },
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    }
  },
  "revision": "20210621",
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "name": "vault",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        }
      }
    }
  },
  "batchPath": "batch",
  "id": "vault:v1",
  "resources": {
    "operations": {
      "methods": {
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "id": "vault.operations.delete",
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted.",
              "type": "string"
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "DELETE",
          "path": "v1/{+name}",
          "response": {
            "$ref": "Empty"
          }
        },
        "get": {
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "id": "vault.operations.get",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource.",
              "required": true
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "path": "v1/{+name}",
          "httpMethod": "GET"
        },
        "list": {
          "path": "v1/{+name}",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "filter": {
              "type": "string",
              "location": "query",
              "description": "The standard list filter."
            },
            "name": {
              "description": "The name of the operation's parent resource.",
              "type": "string",
              "required": true,
              "pattern": "^operations$",
              "location": "path"
            },
            "pageSize": {
              "description": "The standard list page size.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The standard list page token.",
              "location": "query",
              "type": "string"
            }
          },
          "id": "vault.operations.list",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "flatPath": "v1/operations",
          "httpMethod": "GET"
        },
        "cancel": {
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The name of the operation resource to be cancelled."
            }
          },
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "flatPath": "v1/operations/{operationsId}:cancel",
          "path": "v1/{+name}:cancel",
          "id": "vault.operations.cancel",
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST"
        }
      }
    },
    "matters": {
      "resources": {
        "holds": {
          "resources": {
            "accounts": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "parameters": {
                    "holdId": {
                      "required": true,
                      "type": "string",
                      "description": "The hold ID.",
                      "location": "path"
                    },
                    "matterId": {
                      "location": "path",
                      "description": "The matter ID.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "description": "Lists the accounts covered by a hold. This can list only individually-specified accounts covered by the hold. If the hold covers an organizational unit, use the [Admin SDK](https://developers.google.com/admin-sdk/). to list the members of the organizational unit on hold.",
                  "id": "vault.matters.holds.accounts.list",
                  "httpMethod": "GET",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts"
                },
                "create": {
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "matterId": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The matter ID."
                    }
                  },
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "response": {
                    "$ref": "HeldAccount"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "description": "Adds an account to a hold. Accounts can be added only to a hold that does not have an organizational unit set. If you try to add an account to an organizational unit-based hold, an error is returned.",
                  "id": "vault.matters.holds.accounts.create",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ]
                },
                "delete": {
                  "description": "Removes an account from a hold.",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "parameters": {
                    "accountId": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The ID of the account to remove from the hold."
                    },
                    "matterId": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The matter ID."
                    },
                    "holdId": {
                      "type": "string",
                      "description": "The hold ID.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "id": "vault.matters.holds.accounts.delete"
                }
              }
            }
          },
          "methods": {
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "id": "vault.matters.holds.get",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "description": "Gets the specified hold.",
              "parameters": {
                "holdId": {
                  "required": true,
                  "type": "string",
                  "description": "The hold ID.",
                  "location": "path"
                },
                "view": {
                  "location": "query",
                  "enumDescriptions": [
                    "Not specified. Defaults to **FULL_HOLD**.",
                    "Returns the hold ID, name, update time, service, and query.",
                    "Returns all details of **BASIC_HOLD** and the entities the hold applies to, such as accounts or organizational unit."
                  ],
                  "type": "string",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "description": "The amount of detail to return for a hold."
                },
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The matter ID."
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "id": "vault.matters.holds.delete",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "description": "Removes the specified hold and releases the accounts or organizational unit covered by the hold. If the data is not preserved by another hold or retention rule, it might be purged.",
              "parameters": {
                "matterId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The matter ID."
                },
                "holdId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The hold ID."
                }
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ]
            },
            "addHeldAccounts": {
              "id": "vault.matters.holds.addHeldAccounts",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "response": {
                "$ref": "AddHeldAccountsResponse"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "holdId": {
                  "required": true,
                  "description": "The hold ID.",
                  "type": "string",
                  "location": "path"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Adds accounts to a hold. Returns a list of accounts that have been successfully added. Accounts can be added only to an existing account-based hold.",
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/holds",
              "parameterOrder": [
                "matterId"
              ],
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "flatPath": "v1/matters/{matterId}/holds",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "parameters": {
                "pageSize": {
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as **page_size** = 100.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "view": {
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "location": "query",
                  "enumDescriptions": [
                    "Not specified. Defaults to **FULL_HOLD**.",
                    "Returns the hold ID, name, update time, service, and query.",
                    "Returns all details of **BASIC_HOLD** and the entities the hold applies to, such as accounts or organizational unit."
                  ],
                  "type": "string",
                  "description": "The amount of detail to return for a hold."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning.",
                  "type": "string"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "vault.matters.holds.list",
              "description": "Lists the holds in a matter."
            },
            "removeHeldAccounts": {
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              },
              "description": "Removes the specified accounts from a hold. Returns a list of statuses in the same order as the request.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "httpMethod": "POST",
              "id": "vault.matters.holds.removeHeldAccounts",
              "parameters": {
                "holdId": {
                  "description": "The hold ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              }
            },
            "create": {
              "flatPath": "v1/matters/{matterId}/holds",
              "httpMethod": "POST",
              "path": "v1/matters/{matterId}/holds",
              "response": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "request": {
                "$ref": "Hold"
              },
              "parameterOrder": [
                "matterId"
              ],
              "id": "vault.matters.holds.create",
              "parameters": {
                "matterId": {
                  "type": "string",
                  "required": true,
                  "description": "The matter ID.",
                  "location": "path"
                }
              },
              "description": "Creates a hold in the specified matter."
            },
            "update": {
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "holdId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the hold."
                }
              },
              "httpMethod": "PUT",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Updates the scope (organizational unit or accounts) and query parameters of a hold. You cannot add accounts to a hold that covers an organizational unit, nor can you add organizational units to a hold that covers individual accounts. If you try, the unsupported values are ignored.",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "request": {
                "$ref": "Hold"
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "id": "vault.matters.holds.update",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "Hold"
              }
            }
          }
        },
        "savedQueries": {
          "methods": {
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "description": "Creates a saved query.",
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "request": {
                "$ref": "SavedQuery"
              },
              "httpMethod": "POST",
              "path": "v1/matters/{matterId}/savedQueries",
              "parameterOrder": [
                "matterId"
              ],
              "response": {
                "$ref": "SavedQuery"
              },
              "id": "vault.matters.savedQueries.create",
              "parameters": {
                "matterId": {
                  "description": "The ID of the matter to create the saved query in.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "parameters": {
                "matterId": {
                  "type": "string",
                  "description": "The ID of the matter to delete the saved query from.",
                  "required": true,
                  "location": "path"
                },
                "savedQueryId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "ID of the saved query to delete."
                }
              },
              "description": "Deletes the specified saved query.",
              "id": "vault.matters.savedQueries.delete",
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "response": {
                "$ref": "SavedQuery"
              },
              "parameters": {
                "savedQueryId": {
                  "location": "path",
                  "description": "ID of the saved query to retrieve.",
                  "type": "string",
                  "required": true
                },
                "matterId": {
                  "type": "string",
                  "description": "The ID of the matter to get the saved query from.",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "id": "vault.matters.savedQueries.get",
              "description": "Retrieves the specified saved query."
            },
            "list": {
              "description": "Lists the saved queries in a matter.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of saved queries to return."
                },
                "matterId": {
                  "required": true,
                  "description": "The ID of the matter to get the saved queries for.",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId"
              ],
              "response": {
                "$ref": "ListSavedQueriesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "path": "v1/matters/{matterId}/savedQueries",
              "id": "vault.matters.savedQueries.list",
              "flatPath": "v1/matters/{matterId}/savedQueries"
            }
          }
        },
        "exports": {
          "methods": {
            "create": {
              "description": "Creates an export.",
              "response": {
                "$ref": "Export"
              },
              "path": "v1/matters/{matterId}/exports",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "flatPath": "v1/matters/{matterId}/exports",
              "id": "vault.matters.exports.create",
              "httpMethod": "POST",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "matterId"
              ],
              "request": {
                "$ref": "Export"
              }
            },
            "delete": {
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "httpMethod": "DELETE",
              "id": "vault.matters.exports.delete",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "description": "Deletes an export.",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "exportId": {
                  "required": true,
                  "location": "path",
                  "description": "The export ID.",
                  "type": "string"
                },
                "matterId": {
                  "location": "path",
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string"
                }
              }
            },
            "get": {
              "response": {
                "$ref": "Export"
              },
              "description": "Gets an export.",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "id": "vault.matters.exports.get",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string"
                },
                "exportId": {
                  "location": "path",
                  "required": true,
                  "description": "The export ID.",
                  "type": "string"
                }
              }
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "path": "v1/matters/{matterId}/exports",
              "response": {
                "$ref": "ListExportsResponse"
              },
              "description": "Lists details about the exports in the specified matter.",
              "parameterOrder": [
                "matterId"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/exports",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The number of exports to return in the response.",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The pagination token as returned in the response.",
                  "location": "query",
                  "type": "string"
                }
              },
              "id": "vault.matters.exports.list"
            }
          }
        }
      },
      "methods": {
        "create": {
          "id": "vault.matters.create",
          "parameterOrder": [],
          "flatPath": "v1/matters",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Creates a matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
          "httpMethod": "POST",
          "response": {
            "$ref": "Matter"
          },
          "request": {
            "$ref": "Matter"
          },
          "path": "v1/matters",
          "parameters": {}
        },
        "close": {
          "description": "Closes the specified matter. Returns the matter with updated state.",
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "flatPath": "v1/matters/{matterId}:close",
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}:close",
          "httpMethod": "POST",
          "id": "vault.matters.close"
        },
        "reopen": {
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "id": "vault.matters.reopen",
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "description": "Reopens the specified matter. Returns the matter with updated state.",
          "path": "v1/matters/{matterId}:reopen",
          "flatPath": "v1/matters/{matterId}:reopen",
          "parameterOrder": [
            "matterId"
          ]
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "httpMethod": "GET",
          "description": "Gets the specified matter.",
          "id": "vault.matters.get",
          "path": "v1/matters/{matterId}",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "view": {
              "enumDescriptions": [
                "The amount of detail is unspecified. Same as **BASIC**.",
                "Returns the matter ID, name, description, and state. Default choice.",
                "Returns the basic details and a list of matter owners and collaborators (see [MatterPermissions](https://developers.google.com/vault/reference/rest/v1/matters#matterpermission))."
              ],
              "type": "string",
              "description": "Specifies how much information about the matter to return in the response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "location": "query"
            },
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "v1/matters/{matterId}",
          "response": {
            "$ref": "Matter"
          }
        },
        "list": {
          "httpMethod": "GET",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "description": "Lists matters the requestor has access to.",
          "flatPath": "v1/matters",
          "response": {
            "$ref": "ListMattersResponse"
          },
          "parameters": {
            "state": {
              "enumDescriptions": [
                "The matter has no specified state.",
                "The matter is open.",
                "The matter is closed.",
                "The matter is deleted."
              ],
              "location": "query",
              "description": "If set, lists only matters with the specified state. The default lists matters of all states.",
              "type": "string",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ]
            },
            "view": {
              "enumDescriptions": [
                "The amount of detail is unspecified. Same as **BASIC**.",
                "Returns the matter ID, name, description, and state. Default choice.",
                "Returns the basic details and a list of matter owners and collaborators (see [MatterPermissions](https://developers.google.com/vault/reference/rest/v1/matters#matterpermission))."
              ],
              "location": "query",
              "type": "string",
              "description": "Specifies how much information about the matter to return in response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ]
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "description": "The number of matters to return in the response. Default and maximum are 100."
            },
            "pageToken": {
              "location": "query",
              "description": "The pagination token as returned in the response.",
              "type": "string"
            }
          },
          "path": "v1/matters",
          "id": "vault.matters.list"
        },
        "update": {
          "parameterOrder": [
            "matterId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "Matter"
          },
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "request": {
            "$ref": "Matter"
          },
          "id": "vault.matters.update",
          "path": "v1/matters/{matterId}",
          "parameters": {
            "matterId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The matter ID."
            }
          },
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "PUT"
        },
        "count": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "description": "The matter ID.",
              "location": "path"
            }
          },
          "request": {
            "$ref": "CountArtifactsRequest"
          },
          "id": "vault.matters.count",
          "response": {
            "$ref": "Operation"
          },
          "description": "Counts the accounts processed by the specified query.",
          "path": "v1/matters/{matterId}:count",
          "flatPath": "v1/matters/{matterId}:count",
          "parameterOrder": [
            "matterId"
          ]
        },
        "delete": {
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}",
          "flatPath": "v1/matters/{matterId}",
          "description": "Deletes the specified matter. Returns the matter with updated state.",
          "id": "vault.matters.delete",
          "parameters": {
            "matterId": {
              "location": "path",
              "description": "The matter ID",
              "required": true,
              "type": "string"
            }
          }
        },
        "undelete": {
          "httpMethod": "POST",
          "parameters": {
            "matterId": {
              "required": true,
              "description": "The matter ID.",
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "matterId"
          ],
          "description": "Undeletes the specified matter. Returns the matter with updated state.",
          "flatPath": "v1/matters/{matterId}:undelete",
          "id": "vault.matters.undelete",
          "response": {
            "$ref": "Matter"
          },
          "path": "v1/matters/{matterId}:undelete",
          "request": {
            "$ref": "UndeleteMatterRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "addPermissions": {
          "response": {
            "$ref": "MatterPermission"
          },
          "description": "Adds an account as a matter collaborator.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "parameters": {
            "matterId": {
              "location": "path",
              "description": "The matter ID.",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "matterId"
          ],
          "id": "vault.matters.addPermissions",
          "path": "v1/matters/{matterId}:addPermissions",
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "httpMethod": "POST"
        },
        "removePermissions": {
          "id": "vault.matters.removePermissions",
          "httpMethod": "POST",
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}:removePermissions",
          "parameters": {
            "matterId": {
              "required": true,
              "description": "The matter ID.",
              "location": "path",
              "type": "string"
            }
          },
          "description": "Removes an account as a matter collaborator.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters/{matterId}:removePermissions"
        }
      }
    }
  },
  "description": "Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. ",
  "ownerDomain": "google.com",
  "documentationLink": "https://developers.google.com/vault",
  "rootUrl": "https://vault.googleapis.com/",
  "version_module": true,
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "title": "G Suite Vault API"
}

{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.",
  "version": "v1beta1",
  "name": "artifactregistry",
  "batchPath": "batch",
  "parameters": {
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string",
      "description": "Data format for response."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "type": "string",
      "location": "query"
    }
  },
  "ownerName": "Google",
  "title": "Artifact Registry API",
  "documentationLink": "https://cloud.google.com/artifacts/docs/",
  "revision": "20211002",
  "servicePath": "",
  "baseUrl": "https://artifactregistry.googleapis.com/",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://artifactregistry.mtls.googleapis.com/",
  "id": "artifactregistry:v1beta1",
  "canonicalName": "Artifact Registry",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "basePath": "",
  "version_module": true,
  "schemas": {
    "UploadYumArtifactMediaResponse": {
      "type": "object",
      "id": "UploadYumArtifactMediaResponse",
      "description": "The response to upload an artifact.",
      "properties": {
        "operation": {
          "$ref": "Operation",
          "description": "Operation to be returned to the user."
        }
      }
    },
    "Binding": {
      "type": "object",
      "description": "Associates `members` with a `role`.",
      "id": "Binding",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "ImportAptArtifactsResponse": {
      "type": "object",
      "id": "ImportAptArtifactsResponse",
      "description": "The response message from importing artifacts.",
      "properties": {
        "aptArtifacts": {
          "description": "The Apt artifacts updated.",
          "type": "array",
          "items": {
            "$ref": "AptArtifact"
          }
        },
        "errors": {
          "items": {
            "$ref": "ImportAptArtifactsErrorInfo"
          },
          "type": "array",
          "description": "Detailed error info for packages that were not imported."
        }
      }
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "Location"
    },
    "ListRepositoriesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The token to retrieve the next page of repositories, or empty if there are no more repositories to return.",
          "type": "string"
        },
        "repositories": {
          "type": "array",
          "description": "The repositories returned.",
          "items": {
            "$ref": "Repository"
          }
        }
      },
      "id": "ListRepositoriesResponse",
      "type": "object",
      "description": "The response from listing repositories."
    },
    "ImportAptArtifactsGcsSource": {
      "properties": {
        "uris": {
          "items": {
            "type": "string"
          },
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
          "type": "array"
        },
        "useWildcards": {
          "description": "Supports URI wildcards for matching multiple objects from a single URI.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Google Cloud Storage location where the artifacts currently reside.",
      "id": "ImportAptArtifactsGcsSource"
    },
    "UploadAptArtifactMediaResponse": {
      "id": "UploadAptArtifactMediaResponse",
      "properties": {
        "operation": {
          "description": "Operation to be returned to the user.",
          "$ref": "Operation"
        }
      },
      "description": "The response to upload an artifact.",
      "type": "object"
    },
    "Policy": {
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member. The `bindings` in a `Policy` can refer to up to 1,500 members; up to 250 of these members can be Google groups. Each occurrence of a member counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other member, then you can add another 1,450 members to the `bindings` in the `Policy`."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy",
      "type": "object"
    },
    "ImportYumArtifactsGcsSource": {
      "properties": {
        "uris": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Cloud Storage paths URI (e.g., gs://my_bucket//my_object)."
        },
        "useWildcards": {
          "type": "boolean",
          "description": "Supports URI wildcards for matching multiple objects from a single URI."
        }
      },
      "type": "object",
      "description": "Google Cloud Storage location where the artifacts currently reside.",
      "id": "ImportYumArtifactsGcsSource"
    },
    "Repository": {
      "description": "A Repository for storing artifacts with a specific format.",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the repository was last updated."
        },
        "createTime": {
          "description": "The time when the repository was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\"."
        },
        "format": {
          "enum": [
            "FORMAT_UNSPECIFIED",
            "DOCKER",
            "MAVEN",
            "NPM",
            "PYPI",
            "APT",
            "YUM",
            "PYTHON"
          ],
          "enumDescriptions": [
            "Unspecified package format.",
            "Docker package format.",
            "Maven package format.",
            "NPM package format.",
            "PyPI package format. Deprecated, use PYTHON instead.",
            "APT package format.",
            "YUM package format.",
            "Python package format."
          ],
          "type": "string",
          "description": "The format of packages that are stored in the repository."
        },
        "description": {
          "description": "The user-provided description of the repository.",
          "type": "string"
        },
        "labels": {
          "description": "Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "kmsKeyName": {
          "type": "string",
          "description": "The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created."
        }
      },
      "id": "Repository",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      }
    },
    "UploadYumArtifactResponse": {
      "id": "UploadYumArtifactResponse",
      "type": "object",
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "properties": {
        "yumArtifacts": {
          "description": "The Apt artifacts updated.",
          "type": "array",
          "items": {
            "$ref": "YumArtifact"
          }
        }
      }
    },
    "ListVersionsResponse": {
      "description": "The response from listing versions.",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "$ref": "Version"
          },
          "description": "The versions returned."
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of versions, or empty if there are no more versions to return.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListVersionsResponse"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      }
    },
    "ImportYumArtifactsErrorInfo": {
      "type": "object",
      "id": "ImportYumArtifactsErrorInfo",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location requested.",
          "$ref": "ImportYumArtifactsGcsSource"
        },
        "error": {
          "description": "The detailed error status.",
          "$ref": "Status"
        }
      },
      "description": "Error information explaining why a package was not imported."
    },
    "ListFilesResponse": {
      "properties": {
        "files": {
          "type": "array",
          "description": "The files returned.",
          "items": {
            "$ref": "File"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of files, or empty if there are no more files to return.",
          "type": "string"
        }
      },
      "id": "ListFilesResponse",
      "description": "The response from listing files.",
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      }
    },
    "ImportYumArtifactsResponse": {
      "id": "ImportYumArtifactsResponse",
      "description": "The response message from importing artifacts.",
      "type": "object",
      "properties": {
        "yumArtifacts": {
          "items": {
            "$ref": "YumArtifact"
          },
          "type": "array",
          "description": "The yum artifacts updated."
        },
        "errors": {
          "type": "array",
          "description": "Detailed error info for packages that were not imported.",
          "items": {
            "$ref": "ImportYumArtifactsErrorInfo"
          }
        }
      }
    },
    "Tag": {
      "type": "object",
      "id": "Tag",
      "description": "Tags point to a version and represent an alternative name that can be used to access the version.",
      "properties": {
        "version": {
          "type": "string",
          "description": "The name of the version the tag refers to, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811\""
        },
        "name": {
          "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\". If the package part contains slashes, the slashes are escaped. The tag part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must be URL encoded.",
          "type": "string"
        }
      }
    },
    "File": {
      "description": "Files store content that is potentially associated with Packages or Versions.",
      "properties": {
        "updateTime": {
          "description": "The time when the File was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "hashes": {
          "items": {
            "$ref": "Hash"
          },
          "type": "array",
          "description": "The hashes of the file content."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the File was created."
        },
        "name": {
          "type": "string",
          "description": "The name of the file, for example: \"projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt\". If the file ID part contains slashes, they are escaped."
        },
        "owner": {
          "type": "string",
          "description": "The name of the Package or Version that owns this file, if any."
        },
        "sizeBytes": {
          "description": "The size of the File in bytes.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "File",
      "type": "object"
    },
    "Package": {
      "description": "Packages are named collections of versions.",
      "properties": {
        "name": {
          "description": "The name of the package, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1\". If the package ID part contains slashes, the slashes are escaped.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The time when the package was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time when the package was last updated. This includes publishing a new version of the package."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the package."
        }
      },
      "type": "object",
      "id": "Package"
    },
    "ImportAptArtifactsErrorInfo": {
      "description": "Error information explaining why a package was not imported.",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The detailed error status."
        },
        "gcsSource": {
          "description": "Google Cloud Storage location requested.",
          "$ref": "ImportAptArtifactsGcsSource"
        }
      },
      "id": "ImportAptArtifactsErrorInfo",
      "type": "object"
    },
    "UploadAptArtifactResponse": {
      "properties": {
        "aptArtifacts": {
          "type": "array",
          "items": {
            "$ref": "AptArtifact"
          },
          "description": "The Apt artifacts updated."
        }
      },
      "id": "UploadAptArtifactResponse",
      "description": "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
      "type": "object"
    },
    "ListPackagesResponse": {
      "type": "object",
      "description": "The response from listing packages.",
      "properties": {
        "packages": {
          "type": "array",
          "items": {
            "$ref": "Package"
          },
          "description": "The packages returned."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of packages, or empty if there are no more packages to return."
        }
      },
      "id": "ListPackagesResponse"
    },
    "AptArtifact": {
      "description": "A detailed representation of an Apt artifact. Information in the record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html",
      "id": "AptArtifact",
      "type": "object",
      "properties": {
        "component": {
          "readOnly": true,
          "description": "Output only. Repository component of the artifact.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The Artifact Registry resource name of the artifact.",
          "type": "string",
          "readOnly": true
        },
        "architecture": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Operating system architecture of the artifact."
        },
        "packageType": {
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package.",
            "Source package."
          ],
          "description": "Output only. An artifact is a binary or source package.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ]
        },
        "packageName": {
          "description": "Output only. The Apt package name of the artifact.",
          "type": "string",
          "readOnly": true
        },
        "controlFile": {
          "type": "string",
          "readOnly": true,
          "format": "byte",
          "description": "Output only. Contents of the artifact's control metadata file."
        }
      }
    },
    "YumArtifact": {
      "type": "object",
      "description": "A detailed representation of a Yum artifact.",
      "id": "YumArtifact",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The Artifact Registry resource name of the artifact.",
          "type": "string"
        },
        "packageName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The yum package name of the artifact."
        },
        "packageType": {
          "description": "Output only. An artifact is a binary or source package.",
          "enum": [
            "PACKAGE_TYPE_UNSPECIFIED",
            "BINARY",
            "SOURCE"
          ],
          "enumDescriptions": [
            "Package type is not specified.",
            "Binary package (.rpm). .rpm",
            "Source package (.srpm)."
          ],
          "type": "string",
          "readOnly": true
        },
        "architecture": {
          "description": "Output only. Operating system architecture of the artifact.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ListTagsResponse": {
      "id": "ListTagsResponse",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The tags returned.",
          "type": "array",
          "items": {
            "$ref": "Tag"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of tags, or empty if there are no more tags to return.",
          "type": "string"
        }
      },
      "description": "The response from listing tags."
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse"
    },
    "Hash": {
      "description": "A hash of file content.",
      "id": "Hash",
      "properties": {
        "value": {
          "format": "byte",
          "description": "The hash value.",
          "type": "string"
        },
        "type": {
          "description": "The algorithm used to compute the hash value.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "SHA256 hash."
          ],
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "SHA256"
          ]
        }
      },
      "type": "object"
    },
    "Version": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "The time when the version was created.",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the version, as specified in its metadata."
        },
        "relatedTags": {
          "type": "array",
          "description": "Output only. A list of related tags. Will contain up to 100 tags that reference this version.",
          "items": {
            "$ref": "Tag"
          }
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The time when the version was last updated.",
          "type": "string"
        },
        "name": {
          "description": "The name of the version, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1\". If the package or version ID parts contain slashes, the slashes are escaped.",
          "type": "string"
        }
      },
      "id": "Version",
      "description": "The body of a version resource. A version resource represents a collection of components, such as files and other data. This may correspond to a version in many package management schemes."
    }
  },
  "kind": "discovery#restDescription",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "repositories": {
              "methods": {
                "getIamPolicy": {
                  "id": "artifactregistry.projects.locations.repositories.getIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the IAM policy for a given resource.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1beta1/{+resource}:getIamPolicy"
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "httpMethod": "POST",
                  "id": "artifactregistry.projects.locations.repositories.testIamPermissions",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:testIamPermissions",
                  "description": "Tests if the caller has a list of permissions on a resource.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a repository. The returned Operation will finish once the repository has been created. Its response will be the created Repository.",
                  "id": "artifactregistry.projects.locations.repositories.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "The name of the parent resource where the repository will be created.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "repositoryId": {
                      "location": "query",
                      "description": "The repository id to use for this repository.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "Repository"
                  },
                  "path": "v1beta1/{+parent}/repositories"
                },
                "delete": {
                  "description": "Deletes a repository and all of its contents. The returned Operation will finish once the repository has been deleted. It will not have any Operation metadata and will return a google.protobuf.Empty response.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "path": "v1beta1/{+name}",
                  "httpMethod": "DELETE",
                  "id": "artifactregistry.projects.locations.repositories.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "required": true,
                      "description": "The name of the repository to delete.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "id": "artifactregistry.projects.locations.repositories.setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:setIamPolicy",
                  "description": "Updates the IAM policy for a given resource.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "Repository"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "Repository"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "description": "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\"."
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "format": "google-fieldmask"
                    }
                  },
                  "description": "Updates a repository.",
                  "httpMethod": "PATCH",
                  "id": "artifactregistry.projects.locations.repositories.patch",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "artifactregistry.projects.locations.repositories.list",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "response": {
                    "$ref": "ListRepositoriesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of repositories to return.",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the parent resource whose repositories will be listed.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The next_page_token value returned from a previous list request, if any."
                    }
                  },
                  "path": "v1beta1/{+parent}/repositories",
                  "description": "Lists repositories."
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "id": "artifactregistry.projects.locations.repositories.get",
                  "description": "Gets a repository.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "response": {
                    "$ref": "Repository"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the repository to retrieve.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}"
                }
              },
              "resources": {
                "packages": {
                  "resources": {
                    "versions": {
                      "methods": {
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "Version"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "description": "Gets a version",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "path": "v1beta1/{+name}",
                          "parameters": {
                            "name": {
                              "description": "The name of the version to retrieve.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$",
                              "type": "string",
                              "required": true
                            },
                            "view": {
                              "location": "query",
                              "type": "string",
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "description": "The view that should be returned in the response.",
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ]
                            }
                          },
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.get"
                        },
                        "list": {
                          "parameters": {
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request, if any.",
                              "location": "query",
                              "type": "string"
                            },
                            "view": {
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "type": "string",
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ],
                              "description": "The view that should be returned in the response.",
                              "location": "query"
                            },
                            "pageSize": {
                              "format": "int32",
                              "description": "The maximum number of versions to return.",
                              "type": "integer",
                              "location": "query"
                            },
                            "orderBy": {
                              "location": "query",
                              "description": "Optional. Sorting field and order",
                              "type": "string"
                            },
                            "parent": {
                              "type": "string",
                              "description": "The name of the parent resource whose versions will be listed.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "location": "path"
                            }
                          },
                          "response": {
                            "$ref": "ListVersionsResponse"
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "httpMethod": "GET",
                          "path": "v1beta1/{+parent}/versions",
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.list",
                          "description": "Lists versions."
                        },
                        "delete": {
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.delete",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "DELETE",
                          "path": "v1beta1/{+name}",
                          "response": {
                            "$ref": "Operation"
                          },
                          "description": "Deletes a version and all of its content. The returned operation will complete once the version has been deleted.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "The name of the version to delete."
                            },
                            "force": {
                              "location": "query",
                              "description": "By default, a version that is tagged may not be deleted. If force=true, the version and any tags pointing to the version are deleted.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "tags": {
                      "methods": {
                        "list": {
                          "description": "Lists tags.",
                          "httpMethod": "GET",
                          "parameters": {
                            "filter": {
                              "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `version` An example of using a filter: * `version=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Tags that are applied to the version `1.0` in package `pkg1`.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "description": "The maximum number of tags to return.",
                              "location": "query",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "type": "string",
                              "description": "The name of the parent resource whose tags will be listed.",
                              "location": "path",
                              "required": true
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request, if any.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "response": {
                            "$ref": "ListTagsResponse"
                          },
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.list",
                          "path": "v1beta1/{+parent}/tags",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags"
                        },
                        "get": {
                          "response": {
                            "$ref": "Tag"
                          },
                          "httpMethod": "GET",
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.get",
                          "path": "v1beta1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "location": "path",
                              "description": "The name of the tag to retrieve.",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Gets a tag.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}"
                        },
                        "patch": {
                          "description": "Updates a tag.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "path": "v1beta1/{+name}",
                          "response": {
                            "$ref": "Tag"
                          },
                          "parameters": {
                            "updateMask": {
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask",
                              "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                            },
                            "name": {
                              "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\". If the package part contains slashes, the slashes are escaped. The tag part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must be URL encoded.",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$"
                            }
                          },
                          "httpMethod": "PATCH",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.patch",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "Tag"
                          }
                        },
                        "create": {
                          "response": {
                            "$ref": "Tag"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "description": "The name of the parent resource where the tag will be created.",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$"
                            },
                            "tagId": {
                              "type": "string",
                              "description": "The tag id to use for this repository.",
                              "location": "query"
                            }
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags",
                          "description": "Creates a tag.",
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.create",
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1beta1/{+parent}/tags",
                          "request": {
                            "$ref": "Tag"
                          },
                          "httpMethod": "POST"
                        },
                        "delete": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Empty"
                          },
                          "path": "v1beta1/{+name}",
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.delete",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "description": "Deletes a tag.",
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "description": "The name of the tag to delete.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        }
                      }
                    }
                  },
                  "methods": {
                    "list": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages",
                      "description": "Lists packages.",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "The name of the parent resource whose packages will be listed.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "description": "The maximum number of packages to return.",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request, if any."
                        }
                      },
                      "response": {
                        "$ref": "ListPackagesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "artifactregistry.projects.locations.repositories.packages.list",
                      "path": "v1beta1/{+parent}/packages"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "artifactregistry.projects.locations.repositories.packages.delete",
                      "httpMethod": "DELETE",
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Deletes a package and all of its versions and tags. The returned operation will complete once the package has been deleted.",
                      "parameters": {
                        "name": {
                          "description": "The name of the package to delete.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}"
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The name of the package to retrieve.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$"
                        }
                      },
                      "description": "Gets a package.",
                      "id": "artifactregistry.projects.locations.repositories.packages.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "Package"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}"
                    }
                  }
                },
                "files": {
                  "methods": {
                    "list": {
                      "description": "Lists files.",
                      "id": "artifactregistry.projects.locations.repositories.files.list",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "The name of the parent resource whose files will be listed.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "type": "string"
                        },
                        "filter": {
                          "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `name` * `owner` An example of using a filter: * `name=\"projects/p1/locations/us-central1/repositories/repo1/files/a/b/*\"` --\u003e Files with an ID starting with \"a/b/\". * `owner=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Files owned by the version `1.0` in package `pkg1`.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of files to return."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files",
                      "path": "v1beta1/{+parent}/files",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListFilesResponse"
                      }
                    },
                    "get": {
                      "path": "v1beta1/{+name}",
                      "response": {
                        "$ref": "File"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files/{filesId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "The name of the file to retrieve.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/files/.*$",
                          "type": "string"
                        }
                      },
                      "description": "Gets a file.",
                      "httpMethod": "GET",
                      "id": "artifactregistry.projects.locations.repositories.files.get"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "artifactregistry.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "id": "artifactregistry.projects.locations.get",
              "path": "v1beta1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              }
            },
            "list": {
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "path": "v1beta1/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "id": "artifactregistry.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ]
            }
          }
        }
      }
    }
  },
  "rootUrl": "https://artifactregistry.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud services and see the email address of your Google Account"
        }
      }
    }
  }
}

{
  "id": "gkehub:v1",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "revision": "20211015",
  "basePath": "",
  "title": "GKE Hub API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "gkehub",
  "rootUrl": "https://gkehub.googleapis.com/",
  "version": "v1",
  "canonicalName": "GKE Hub",
  "schemas": {
    "FeatureResourceState": {
      "id": "FeatureResourceState",
      "type": "object",
      "description": "FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the \"running state\" of the Feature in the Hub and across Memberships.",
      "properties": {
        "state": {
          "type": "string",
          "description": "The current state of the Feature resource in the Hub API.",
          "enumDescriptions": [
            "State is unknown or not set.",
            "The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.",
            "The Feature is enabled in this Hub, and the Feature resource is fully available.",
            "The Feature is being disabled in this Hub, and the Feature resource is being deleted.",
            "The Feature resource is being updated.",
            "The Feature resource is being updated by the Hub Service."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLING",
            "ACTIVE",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ]
        }
      }
    },
    "MembershipState": {
      "type": "object",
      "description": "MembershipState describes the state of a Membership resource.",
      "properties": {
        "code": {
          "readOnly": true,
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "SERVICE_UPDATING"
          ],
          "type": "string",
          "description": "Output only. The current state of the Membership resource.",
          "enumDescriptions": [
            "The code is not set.",
            "The cluster is being registered.",
            "The cluster is registered.",
            "The cluster is being unregistered.",
            "The Membership is being updated.",
            "The Membership is being updated by the Hub Service."
          ]
        }
      },
      "id": "MembershipState"
    },
    "ConfigManagementOperatorState": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "ConfigManagementInstallError"
          },
          "description": "Install errors.",
          "type": "array"
        },
        "deploymentState": {
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "The state of the Operator's deployment"
        },
        "version": {
          "type": "string",
          "description": "The semenatic version number of the operator"
        }
      },
      "description": "State information for an ACM's Operator",
      "type": "object",
      "id": "ConfigManagementOperatorState"
    },
    "ListFeaturesResponse": {
      "description": "Response message for the `GkeHub.ListFeatures` method.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return."
        },
        "resources": {
          "description": "The list of matching Features",
          "items": {
            "$ref": "Feature"
          },
          "type": "array"
        }
      },
      "id": "ListFeaturesResponse",
      "type": "object"
    },
    "Expr": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "type": "object"
    },
    "ConfigManagementInstallError": {
      "id": "ConfigManagementInstallError",
      "type": "object",
      "description": "Errors pertaining to the installation of ACM",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "A string representing the user facing error message"
        }
      }
    },
    "ConfigManagementMembershipSpec": {
      "type": "object",
      "id": "ConfigManagementMembershipSpec",
      "properties": {
        "version": {
          "description": "Version of ACM installed.",
          "type": "string"
        },
        "configSync": {
          "$ref": "ConfigManagementConfigSync",
          "description": "Config Sync configuration for the cluster."
        },
        "hierarchyController": {
          "description": "Hierarchy Controller configuration for the cluster.",
          "$ref": "ConfigManagementHierarchyControllerConfig"
        },
        "policyController": {
          "$ref": "ConfigManagementPolicyController",
          "description": "Policy Controller configuration for the cluster."
        }
      },
      "description": "**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR."
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation",
      "properties": {
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      }
    },
    "TypeMeta": {
      "properties": {
        "kind": {
          "description": "Kind of the resource (e.g. Deployment).",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion of the resource (e.g. v1).",
          "type": "string"
        }
      },
      "id": "TypeMeta",
      "description": "TypeMeta is the type information needed for content unmarshalling of Kubernetes resources in the manifest.",
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array"
        }
      },
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "type": "object"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object"
    },
    "MembershipFeatureSpec": {
      "description": "MembershipFeatureSpec contains configuration information for a single Membership.",
      "type": "object",
      "properties": {
        "configmanagement": {
          "$ref": "ConfigManagementMembershipSpec",
          "description": "Config Management-specific spec."
        }
      },
      "id": "MembershipFeatureSpec"
    },
    "MembershipEndpoint": {
      "id": "MembershipEndpoint",
      "description": "MembershipEndpoint contains information needed to contact a Kubernetes API, endpoint and any additional Kubernetes metadata.",
      "type": "object",
      "properties": {
        "onPremCluster": {
          "$ref": "OnPremCluster",
          "description": "Optional. Specific information for a GKE On-Prem cluster. An onprem user-cluster who has no resourceLink is not allowed to use this field, it should have a nil \"type\" instead."
        },
        "multiCloudCluster": {
          "description": "Optional. Specific information for a GKE Multi-Cloud cluster.",
          "$ref": "MultiCloudCluster"
        },
        "kubernetesMetadata": {
          "$ref": "KubernetesMetadata",
          "readOnly": true,
          "description": "Output only. Useful Kubernetes-specific metadata."
        },
        "gkeCluster": {
          "description": "Optional. Specific information for a GKE-on-GCP cluster.",
          "$ref": "GkeCluster"
        }
      }
    },
    "Policy": {
      "properties": {
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "bindings": {
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          }
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        }
      },
      "type": "object",
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        }
      }
    },
    "Feature": {
      "id": "Feature",
      "description": "Feature represents the settings and status of any Hub Feature.",
      "type": "object",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "GCP labels for this Feature.",
          "type": "object"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the Feature resource was last updated.",
          "format": "google-datetime"
        },
        "membershipSpecs": {
          "description": "Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} WILL match the Feature's project. {p} will always be returned as the project number, but the project ID is also accepted during input. If the same Membership is specified in the map twice (using the project ID form, and the project number form), exactly ONE of the entries will be saved, with no guarantees as to which. For this reason, it is recommended the same format be used for all entries when mutating a Feature.",
          "additionalProperties": {
            "$ref": "MembershipFeatureSpec"
          },
          "type": "object"
        },
        "state": {
          "readOnly": true,
          "$ref": "CommonFeatureState",
          "description": "Output only. The Hub-wide Feature state."
        },
        "deleteTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. When the Feature resource was deleted."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. When the Feature resource was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "spec": {
          "description": "Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.",
          "$ref": "CommonFeatureSpec"
        },
        "resourceState": {
          "description": "Output only. State of the Feature resource itself.",
          "readOnly": true,
          "$ref": "FeatureResourceState"
        },
        "membershipStates": {
          "description": "Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: `projects/{p}/locations/{l}/memberships/{m}` Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature's project number.",
          "type": "object",
          "additionalProperties": {
            "$ref": "MembershipFeatureState"
          },
          "readOnly": true
        },
        "name": {
          "description": "Output only. The full, unique name of this Feature resource in the format `projects/*/locations/*/features/*`.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Authority": {
      "type": "object",
      "id": "Authority",
      "properties": {
        "workloadIdentityPool": {
          "description": "Output only. The name of the workload identity pool in which `issuer` will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to that Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is `{PROJECT_ID}.hub.id.goog`, although this is subject to change in newer versions of this API.",
          "type": "string",
          "readOnly": true
        },
        "oidcJwks": {
          "type": "string",
          "format": "byte",
          "description": "Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). When this field is set, OIDC discovery will NOT be performed on `issuer`, and instead OIDC tokens will be validated using this field."
        },
        "identityProvider": {
          "type": "string",
          "description": "Output only. An identity provider that reflects the `issuer` in the workload identity pool.",
          "readOnly": true
        },
        "issuer": {
          "description": "Optional. A JSON Web Token (JWT) issuer URI. `issuer` must start with `https://` and be a valid URL with length \u003c2000 characters. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the workload_identity_pool. OIDC discovery will be performed on this URI to validate tokens from the issuer. Clearing `issuer` disables Workload Identity. `issuer` cannot be directly modified; it must be cleared (and Workload Identity disabled) before using a new issuer (and re-enabling Workload Identity).",
          "type": "string"
        }
      },
      "description": "Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity"
    },
    "MultiClusterIngressFeatureSpec": {
      "id": "MultiClusterIngressFeatureSpec",
      "description": "**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature.",
      "properties": {
        "configMembership": {
          "description": "Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GkeCluster": {
      "type": "object",
      "description": "GkeCluster contains information specific to GKE clusters.",
      "properties": {
        "resourceLink": {
          "type": "string",
          "description": "Immutable. Self-link of the GCP resource for the GKE cluster. For example: //container.googleapis.com/projects/my-project/locations/us-west1-a/clusters/my-cluster Zonal clusters are also supported."
        },
        "clusterMissing": {
          "readOnly": true,
          "description": "Output only. If cluster_missing is set then it denotes that the GKE cluster no longer exists in the GKE Control Plane.",
          "type": "boolean"
        }
      },
      "id": "GkeCluster"
    },
    "ConfigManagementHierarchyControllerConfig": {
      "id": "ConfigManagementHierarchyControllerConfig",
      "properties": {
        "enableHierarchicalResourceQuota": {
          "type": "boolean",
          "description": "Whether hierarchical resource quota is enabled in this cluster."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether Hierarchy Controller is enabled in this cluster."
        },
        "enablePodTreeLabels": {
          "description": "Whether pod tree labels are enabled in this cluster.",
          "type": "boolean"
        }
      },
      "description": "Configuration for Hierarchy Controller",
      "type": "object"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "cancelRequested": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created."
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusDetail": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest"
    },
    "ConfigManagementConfigSync": {
      "description": "Configuration for Config Sync",
      "id": "ConfigManagementConfigSync",
      "properties": {
        "git": {
          "$ref": "ConfigManagementGitConfig",
          "description": "Git repo configuration for the cluster."
        },
        "sourceFormat": {
          "description": "Specifies whether the Config Sync Repo is in “hierarchical” or “unstructured” mode.",
          "type": "string"
        },
        "enabled": {
          "description": "Enables the installation of ConfigSync. If set to true, ConfigSync resources will be created and the other ConfigSync fields will be applied if exist. If set to false, all other ConfigSync fields will be ignored, ConfigSync resources will be deleted. If omitted, ConfigSync resources will be managed depends on the presence of git field.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ConfigManagementConfigSyncDeploymentState": {
      "properties": {
        "rootReconciler": {
          "description": "Deployment state of root-reconciler",
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "syncer": {
          "description": "Deployment state of the syncer pod",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "gitSync": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of the git-sync pod",
          "type": "string"
        },
        "admissionWebhook": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of admission-webhook",
          "type": "string"
        },
        "importer": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "Deployment state of the importer pod"
        },
        "reconcilerManager": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of reconciler-manager pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string"
        },
        "monitor": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the monitor pod",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "ConfigManagementConfigSyncDeploymentState",
      "description": "The state of ConfigSync's deployment on a cluster"
    },
    "ListMembershipsResponse": {
      "description": "Response message for the `GkeHub.ListMemberships` method.",
      "type": "object",
      "id": "ListMembershipsResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "List of locations that could not be reached while fetching this list.",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "description": "The list of matching Memberships.",
          "items": {
            "$ref": "Membership"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of resources from the `ListMemberships` method. The value of an empty string means that there are no more resources to return."
        }
      }
    },
    "ConfigManagementHierarchyControllerState": {
      "properties": {
        "state": {
          "$ref": "ConfigManagementHierarchyControllerDeploymentState",
          "description": "The deployment state for Hierarchy Controller"
        },
        "version": {
          "$ref": "ConfigManagementHierarchyControllerVersion",
          "description": "The version for Hierarchy Controller"
        }
      },
      "type": "object",
      "id": "ConfigManagementHierarchyControllerState",
      "description": "State for Hierarchy Controller"
    },
    "ConfigManagementGatekeeperDeploymentState": {
      "type": "object",
      "description": "State of Policy Controller installation.",
      "id": "ConfigManagementGatekeeperDeploymentState",
      "properties": {
        "gatekeeperAudit": {
          "description": "Status of gatekeeper-audit deployment.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "gatekeeperControllerManagerState": {
          "description": "Status of gatekeeper-controller-manager pod.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      }
    },
    "ConfigManagementPolicyController": {
      "description": "Configuration for Policy Controller",
      "type": "object",
      "id": "ConfigManagementPolicyController",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect."
        },
        "templateLibraryInstalled": {
          "type": "boolean",
          "description": "Installs the default template library along with Policy Controller."
        },
        "logDeniesEnabled": {
          "description": "Logs all denies and dry run failures.",
          "type": "boolean"
        },
        "auditIntervalSeconds": {
          "format": "int64",
          "type": "string",
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether."
        },
        "exemptableNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster."
        },
        "referentialRulesEnabled": {
          "type": "boolean",
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated."
        }
      }
    },
    "KubernetesMetadata": {
      "description": "KubernetesMetadata provides informational metadata for Memberships representing Kubernetes clusters.",
      "id": "KubernetesMetadata",
      "properties": {
        "memoryMb": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB."
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.",
          "format": "google-datetime",
          "type": "string"
        },
        "nodeProviderId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. On Kubernetes platforms that support zero-node clusters (like GKE-on-GCP), the node_count will be zero and the node_provider_id will be empty."
        },
        "vcpuCount": {
          "description": "Output only. vCPU count as reported by Kubernetes nodes resources.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "kubernetesApiServerVersion": {
          "description": "Output only. Kubernetes API server version string as reported by `/version`.",
          "type": "string",
          "readOnly": true
        },
        "nodeCount": {
          "readOnly": true,
          "description": "Output only. Node count as reported by Kubernetes nodes resources.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "ConfigManagementPolicyControllerState": {
      "id": "ConfigManagementPolicyControllerState",
      "description": "State for PolicyControllerState.",
      "type": "object",
      "properties": {
        "deploymentState": {
          "description": "The state about the policy controller installation.",
          "$ref": "ConfigManagementGatekeeperDeploymentState"
        },
        "version": {
          "description": "The version of Gatekeeper Policy Controller deployed.",
          "$ref": "ConfigManagementPolicyControllerVersion"
        }
      }
    },
    "AuditLogConfig": {
      "properties": {
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "id": "AuditLogConfig"
    },
    "ConfigManagementMembershipState": {
      "type": "object",
      "description": "**Anthos Config Management**: State for a single cluster.",
      "id": "ConfigManagementMembershipState",
      "properties": {
        "policyControllerState": {
          "$ref": "ConfigManagementPolicyControllerState",
          "description": "PolicyController status"
        },
        "membershipSpec": {
          "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state",
          "$ref": "ConfigManagementMembershipSpec"
        },
        "configSyncState": {
          "description": "Current sync status",
          "$ref": "ConfigManagementConfigSyncState"
        },
        "operatorState": {
          "description": "Current install status of ACM's Operator",
          "$ref": "ConfigManagementOperatorState"
        },
        "hierarchyControllerState": {
          "description": "Hierarchy Controller status",
          "$ref": "ConfigManagementHierarchyControllerState"
        },
        "clusterName": {
          "type": "string",
          "description": "The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation."
        }
      }
    },
    "OnPremCluster": {
      "type": "object",
      "id": "OnPremCluster",
      "description": "OnPremCluster contains information specific to GKE On-Prem clusters.",
      "properties": {
        "resourceLink": {
          "type": "string",
          "description": "Immutable. Self-link of the GCP resource for the GKE On-Prem cluster. For example: //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/vmwareClusters/my-cluster //gkeonprem.googleapis.com/projects/my-project/locations/us-west1-a/bareMetalClusters/my-cluster"
        },
        "clusterMissing": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. If cluster_missing is set then it denotes that API(gkeonprem.googleapis.com) resource for this GKE On-Prem cluster no longer exists."
        },
        "adminCluster": {
          "type": "boolean",
          "description": "Immutable. Whether the cluster is an admin cluster."
        }
      }
    },
    "CommonFeatureSpec": {
      "properties": {
        "multiclusteringress": {
          "$ref": "MultiClusterIngressFeatureSpec",
          "description": "Multicluster Ingress-specific spec."
        }
      },
      "id": "CommonFeatureSpec",
      "description": "CommonFeatureSpec contains Hub-wide configuration information",
      "type": "object"
    },
    "MultiCloudCluster": {
      "properties": {
        "clusterMissing": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. If cluster_missing is set then it denotes that API(gkemulticloud.googleapis.com) resource for this GKE Multi-Cloud cluster no longer exists."
        },
        "resourceLink": {
          "description": "Immutable. Self-link of the GCP resource for the GKE Multi-Cloud cluster. For example: //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/awsClusters/my-cluster //gkemulticloud.googleapis.com/projects/my-project/locations/us-west1-a/azureClusters/my-cluster",
          "type": "string"
        }
      },
      "type": "object",
      "description": "MultiCloudCluster contains information specific to GKE Multi-Cloud clusters.",
      "id": "MultiCloudCluster"
    },
    "ConnectAgentResource": {
      "properties": {
        "manifest": {
          "type": "string",
          "description": "YAML manifest of the resource."
        },
        "type": {
          "$ref": "TypeMeta",
          "description": "Kubernetes type of the resource."
        }
      },
      "id": "ConnectAgentResource",
      "type": "object",
      "description": "ConnectAgentResource represents a Kubernetes resource manifest for Connect Agent deployment."
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
    },
    "ConfigManagementConfigSyncVersion": {
      "description": "Specific versioning information pertaining to ConfigSync's Pods",
      "type": "object",
      "id": "ConfigManagementConfigSyncVersion",
      "properties": {
        "monitor": {
          "description": "Version of the deployed monitor pod",
          "type": "string"
        },
        "gitSync": {
          "type": "string",
          "description": "Version of the deployed git-sync pod"
        },
        "syncer": {
          "type": "string",
          "description": "Version of the deployed syncer pod"
        },
        "rootReconciler": {
          "description": "Version of the deployed reconciler container in root-reconciler pod",
          "type": "string"
        },
        "admissionWebhook": {
          "type": "string",
          "description": "Version of the deployed admission_webhook pod"
        },
        "reconcilerManager": {
          "description": "Version of the deployed reconciler-manager pod",
          "type": "string"
        },
        "importer": {
          "description": "Version of the deployed importer pod",
          "type": "string"
        }
      }
    },
    "ConfigManagementHierarchyControllerDeploymentState": {
      "description": "Deployment state for Hierarchy Controller",
      "properties": {
        "extension": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string"
        },
        "hnc": {
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      },
      "id": "ConfigManagementHierarchyControllerDeploymentState",
      "type": "object"
    },
    "ConfigManagementSyncError": {
      "type": "object",
      "description": "An ACM created error representing a problem syncing configurations",
      "properties": {
        "errorResources": {
          "description": "A list of config(s) associated with the error, if any",
          "type": "array",
          "items": {
            "$ref": "ConfigManagementErrorResource"
          }
        },
        "errorMessage": {
          "type": "string",
          "description": "A description of the error"
        },
        "code": {
          "description": "An ACM defined error code",
          "type": "string"
        }
      },
      "id": "ConfigManagementSyncError"
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "id": "Binding",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
        }
      }
    },
    "ConfigManagementErrorResource": {
      "type": "object",
      "id": "ConfigManagementErrorResource",
      "description": "Model for a config file in the git repo with an associated Sync error",
      "properties": {
        "resourceNamespace": {
          "type": "string",
          "description": "Namespace of the resource that is causing an error"
        },
        "resourceName": {
          "description": "Metadata name of the resource that is causing an error",
          "type": "string"
        },
        "sourcePath": {
          "type": "string",
          "description": "Path in the git repo of the erroneous config"
        },
        "resourceGvk": {
          "$ref": "ConfigManagementGroupVersionKind",
          "description": "Group/version/kind of the resource that is causing an error"
        }
      }
    },
    "ConfigManagementSyncState": {
      "id": "ConfigManagementSyncState",
      "description": "State indicating an ACM's progress syncing configurations to a cluster",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
          "items": {
            "$ref": "ConfigManagementSyncError"
          }
        },
        "sourceToken": {
          "description": "Token indicating the state of the repo.",
          "type": "string"
        },
        "syncToken": {
          "description": "Token indicating the state of the syncer.",
          "type": "string"
        },
        "code": {
          "description": "Sync status code",
          "enumDescriptions": [
            "ACM cannot determine a sync code",
            "ACM successfully synced the git Repo with the cluster",
            "ACM is in the progress of syncing a new change",
            "Indicates an error configuring ACM, and user action is required",
            "ACM has been installed (operator manifest deployed), but not configured.",
            "ACM has not been installed (no operator pod found)",
            "Error authorizing with the cluster",
            "Cluster could not be reached"
          ],
          "type": "string",
          "enum": [
            "SYNC_CODE_UNSPECIFIED",
            "SYNCED",
            "PENDING",
            "ERROR",
            "NOT_CONFIGURED",
            "NOT_INSTALLED",
            "UNAUTHORIZED",
            "UNREACHABLE"
          ]
        },
        "lastSync": {
          "type": "string",
          "description": "Deprecated: use last_sync_time instead. Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String"
        },
        "importToken": {
          "type": "string",
          "description": "Token indicating the state of the importer."
        },
        "lastSyncTime": {
          "description": "Timestamp type of when ACM last successfully synced the repo",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "FeatureState": {
      "type": "object",
      "id": "FeatureState",
      "properties": {
        "description": {
          "description": "A human-readable description of the current status.",
          "type": "string"
        },
        "code": {
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "WARNING",
            "ERROR"
          ],
          "description": "The high-level, machine-readable status of this Feature.",
          "type": "string",
          "enumDescriptions": [
            "Unknown or not set.",
            "The Feature is operating normally.",
            "The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.",
            "The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this status and any related Feature-specific details were updated."
        }
      },
      "description": "FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context."
    },
    "Membership": {
      "properties": {
        "externalId": {
          "type": "string",
          "description": "Optional. An externally-generated and managed ID for this Membership. This ID may be modified after creation, but this is not recommended. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UID of the `kube-system` namespace object."
        },
        "endpoint": {
          "$ref": "MembershipEndpoint",
          "description": "Optional. Endpoint information to reach this member."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. GCP labels for this membership."
        },
        "lastConnectionTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. When the Membership was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. When the Membership was last updated."
        },
        "authority": {
          "description": "Optional. How to identify workloads from this Membership. See the documentation on Workload Identity for more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "$ref": "Authority"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The full, unique name of this Membership resource in the format `projects/*/locations/*/memberships/{membership_id}`, set during creation. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters."
        },
        "deleteTime": {
          "readOnly": true,
          "description": "Output only. When the Membership was deleted.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "$ref": "MembershipState",
          "readOnly": true,
          "description": "Output only. State of the Membership resource."
        },
        "description": {
          "type": "string",
          "description": "Output only. Description of this membership, limited to 63 characters. Must match the regex: `a-zA-Z0-9*` This field is present for legacy purposes.",
          "readOnly": true
        },
        "uniqueId": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "Membership",
      "description": "Membership contains information about a member cluster."
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      }
    },
    "GenerateConnectManifestResponse": {
      "description": "GenerateConnectManifestResponse contains manifest information for installing/upgrading a Connect agent.",
      "properties": {
        "manifest": {
          "items": {
            "$ref": "ConnectAgentResource"
          },
          "type": "array",
          "description": "The ordered list of Kubernetes resources that need to be applied to the cluster for GKE Connect agent installation/upgrade."
        }
      },
      "id": "GenerateConnectManifestResponse",
      "type": "object"
    },
    "ConfigManagementGitConfig": {
      "id": "ConfigManagementGitConfig",
      "type": "object",
      "properties": {
        "policyDir": {
          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
          "type": "string"
        },
        "syncRepo": {
          "description": "The URL of the Git repository to use as the source of truth.",
          "type": "string"
        },
        "secretType": {
          "description": "Type of secret configured for access to the Git repo.",
          "type": "string"
        },
        "syncBranch": {
          "type": "string",
          "description": "The branch of the repository to sync from. Default: master."
        },
        "gcpServiceAccountEmail": {
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.",
          "type": "string"
        },
        "httpsProxy": {
          "type": "string",
          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo."
        },
        "syncRev": {
          "description": "Git revision (tag or hash) to check out. Default HEAD.",
          "type": "string"
        },
        "syncWaitSecs": {
          "type": "string",
          "format": "int64",
          "description": "Period in seconds between consecutive syncs. Default: 15."
        }
      },
      "description": "Git repo configuration for a single cluster."
    },
    "ConfigManagementHierarchyControllerVersion": {
      "id": "ConfigManagementHierarchyControllerVersion",
      "description": "Version for Hierarchy Controller",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Version for Hierarchy Controller extension",
          "type": "string"
        },
        "hnc": {
          "type": "string",
          "description": "Version for open source HNC"
        }
      }
    },
    "ConfigManagementConfigSyncState": {
      "properties": {
        "syncState": {
          "$ref": "ConfigManagementSyncState",
          "description": "The state of ConfigSync's process to sync configs to a cluster"
        },
        "version": {
          "description": "The version of ConfigSync deployed",
          "$ref": "ConfigManagementConfigSyncVersion"
        },
        "deploymentState": {
          "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed",
          "$ref": "ConfigManagementConfigSyncDeploymentState"
        }
      },
      "type": "object",
      "description": "State information for ConfigSync",
      "id": "ConfigManagementConfigSyncState"
    },
    "ConfigManagementPolicyControllerVersion": {
      "description": "The build version of Gatekeeper Policy Controller is using.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
          "type": "string"
        }
      },
      "id": "ConfigManagementPolicyControllerVersion"
    },
    "MembershipFeatureState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "FeatureState",
          "description": "The high-level state of this Feature for a single membership."
        },
        "configmanagement": {
          "description": "Config Management-specific state.",
          "$ref": "ConfigManagementMembershipState"
        }
      },
      "description": "MembershipFeatureState contains Feature status information for a single Membership.",
      "id": "MembershipFeatureState"
    },
    "CommonFeatureState": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "FeatureState",
          "description": "Output only. The \"running state\" of the Feature in this Hub.",
          "readOnly": true
        }
      },
      "id": "CommonFeatureState",
      "description": "CommonFeatureState contains Hub-wide Feature status information."
    },
    "ConfigManagementGroupVersionKind": {
      "type": "object",
      "id": "ConfigManagementGroupVersionKind",
      "description": "A Kubernetes object's GVK",
      "properties": {
        "version": {
          "type": "string",
          "description": "Kubernetes Version"
        },
        "kind": {
          "description": "Kubernetes Kind",
          "type": "string"
        },
        "group": {
          "description": "Kubernetes Group",
          "type": "string"
        }
      }
    }
  },
  "protocol": "rest",
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "description": "",
  "version_module": true,
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "path": "v1/{+name}",
              "id": "gkehub.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "description": "Gets information about a location.",
              "httpMethod": "GET"
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                }
              },
              "path": "v1/{+name}/locations",
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "gkehub.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "features": {
              "methods": {
                "delete": {
                  "parameters": {
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set to true, the delete will ignore any outstanding resources for this Feature (that is, `FeatureState.has_resources` is set to true). These resources will NOT be cleaned up or modified in any way."
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Removes a Feature.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "gkehub.projects.locations.features.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "id": "gkehub.projects.locations.features.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "response": {
                    "$ref": "Feature"
                  },
                  "description": "Gets details of a single Feature.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "The Feature resource name in the format `projects/*/locations/*/features/*`",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy",
                  "id": "gkehub.projects.locations.features.setIamPolicy",
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$"
                    }
                  }
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "gkehub.projects.locations.features.getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    },
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "testIamPermissions": {
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "gkehub.projects.locations.features.testIamPermissions"
                },
                "list": {
                  "id": "gkehub.projects.locations.features.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/features",
                  "response": {
                    "$ref": "ListFeaturesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features",
                  "httpMethod": "GET",
                  "description": "Lists Features in a given project and location.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Lists Features that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Feature with the name \"servicemesh\" in project \"foo-proj\": name = \"projects/foo-proj/locations/global/features/servicemesh\" - Features that have a label called `foo`: labels.foo:* - Features that have a label called `foo` whose value is `bar`: labels.foo = bar"
                    },
                    "orderBy": {
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "Feature"
                  },
                  "description": "Updates an existing Feature.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The Feature resource name in the format `projects/*/locations/*/features/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Mask of fields to update.",
                      "type": "string"
                    }
                  },
                  "id": "gkehub.projects.locations.features.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Adds a new Feature.",
                  "parameters": {
                    "featureId": {
                      "location": "query",
                      "type": "string",
                      "description": "The ID of the feature to create."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The parent (project and location) where the Feature will be created. Specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Feature"
                  },
                  "id": "gkehub.projects.locations.features.create",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/features",
                  "path": "v1/{+parent}/features",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "id": "gkehub.projects.locations.operations.delete",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "get": {
                  "id": "gkehub.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "path": "v1/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "id": "gkehub.projects.locations.operations.cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "gkehub.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation's parent resource."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations"
                }
              }
            },
            "memberships": {
              "methods": {
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy",
                  "id": "gkehub.projects.locations.memberships.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "gkehub.projects.locations.memberships.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy",
                  "id": "gkehub.projects.locations.memberships.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "id": "gkehub.projects.locations.memberships.delete",
                  "description": "Removes a Membership. **This is currently only supported for GKE clusters on Google Cloud**. To unregister other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/unregistering-a-cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "Required. The Membership resource name in the format `projects/*/locations/*/memberships/*`.",
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships",
                  "response": {
                    "$ref": "ListMembershipsResponse"
                  },
                  "path": "v1/{+parent}/memberships",
                  "id": "gkehub.projects.locations.memberships.list",
                  "description": "Lists Memberships in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering."
                    },
                    "filter": {
                      "description": "Optional. Lists Memberships that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Name is `bar` in project `foo-proj` and location `global`: name = \"projects/foo-proj/locations/global/membership/bar\" - Memberships that have a label called `foo`: labels.foo:* - Memberships that have a label called `foo` whose value is `bar`: labels.foo = bar - Memberships in the CREATING state: state = CREATING",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. Token returned by previous call to `ListMemberships` which specifies the position in the list from where to continue listing the resources.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. The parent (project and location) where the Memberships will be listed. Specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Required. Mask of fields to update.",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "location": "path",
                      "description": "Required. The Membership resource name in the format `projects/*/locations/*/memberships/*`.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "Membership"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "description": "Updates an existing Membership.",
                  "id": "gkehub.projects.locations.memberships.patch",
                  "path": "v1/{+name}"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "httpMethod": "GET",
                  "description": "Gets the details of a Membership.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "Required. The Membership resource name in the format `projects/*/locations/*/memberships/*`.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Membership"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkehub.projects.locations.memberships.get",
                  "path": "v1/{+name}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Membership"
                  },
                  "path": "v1/{+parent}/memberships",
                  "description": "Creates a new Membership. **This is currently only supported for GKE clusters on Google Cloud**. To register other clusters, follow the instructions at https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships",
                  "parameters": {
                    "membershipId": {
                      "description": "Required. Client chosen ID for the membership. `membership_id` must be a valid RFC 1123 compliant DNS label: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character Which can be expressed as the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?`, with a maximum length of 63 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent (project and location) where the Memberships will be created. Specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkehub.projects.locations.memberships.create"
                },
                "generateConnectManifest": {
                  "description": "Generates the manifest for deployment of the GKE connect agent. **This method is used internally by Google-provided libraries.** Most clients should not need to call this method directly.",
                  "response": {
                    "$ref": "GenerateConnectManifestResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "imagePullSecretContent": {
                      "description": "Optional. The image pull secret content for the registry, if not public.",
                      "format": "byte",
                      "type": "string",
                      "location": "query"
                    },
                    "proxy": {
                      "location": "query",
                      "description": "Optional. URI of a proxy if connectivity from the agent to gkeconnect.googleapis.com requires the use of a proxy. Format must be in the form `http(s)://{proxy_address}`, depending on the HTTP/HTTPS protocol supported by the proxy. This will direct the connect agent's outbound traffic through a HTTP(S) proxy.",
                      "type": "string",
                      "format": "byte"
                    },
                    "isUpgrade": {
                      "location": "query",
                      "description": "Optional. If true, generate the resources for upgrade only. Some resources generated only for installation (e.g. secrets) will be excluded.",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "Optional. The Connect agent version to use. Defaults to the most current version.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. The Membership resource name the Agent will associate with, in the format `projects/*/locations/*/memberships/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "registry": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The registry to fetch the connect agent image from. Defaults to gcr.io/gkeconnect."
                    },
                    "namespace": {
                      "location": "query",
                      "description": "Optional. Namespace for GKE Connect agent resources. Defaults to `gke-connect`. The Connect Agent is authorized automatically when run in the default namespace. Otherwise, explicit authorization must be granted with an additional IAM binding.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:generateConnectManifest",
                  "id": "gkehub.projects.locations.memberships.generateConnectManifest"
                }
              }
            }
          }
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "baseUrl": "https://gkehub.googleapis.com/",
  "ownerDomain": "google.com",
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster"
}

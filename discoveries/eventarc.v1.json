{
  "ownerDomain": "google.com",
  "name": "eventarc",
  "title": "Eventarc API",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "Build event-driven applications on Google Cloud Platform.",
  "servicePath": "",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "id": "eventarc:v1",
  "baseUrl": "https://eventarc.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "eventarc.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "eventarc.projects.locations.get",
              "description": "Gets information about a location.",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              }
            }
          },
          "resources": {
            "channels": {
              "methods": {
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "eventarc.projects.locations.channels.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "POST"
                },
                "get": {
                  "id": "eventarc.projects.locations.channels.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}",
                  "httpMethod": "GET",
                  "description": "Get a single Channel.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Channel"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "description": "Required. The name of the channel to get.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "eventarc.projects.locations.channels.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the channel to be deleted.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Required. If set, validate the request and preview the review, but do not post it."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Delete a single channel.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}"
                },
                "list": {
                  "path": "v1/{+parent}/channels",
                  "httpMethod": "GET",
                  "description": "List channels.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels",
                  "id": "eventarc.projects.locations.channels.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The page token; provide the value from the `next_page_token` field in a previous `ListChannels` call to retrieve the subsequent page. When paginating, all other parameters provided to `ListChannels` must match the call that provided the page token."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent collection to list channels on."
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of channels to return on each page. Note: The service may send fewer.",
                      "format": "int32",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "The sorting order of the resources returned. Value should be a comma-separated list of fields. The default sorting order is ascending. To specify descending order for a field, append a `desc` suffix; for example: `name desc, channel_id`.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListChannelsResponse"
                  }
                },
                "patch": {
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the channel. Must be unique within the location on the project and must be in `projects/{project}/locations/{location}/channels/{channel_id}` format."
                    },
                    "validateOnly": {
                      "description": "Required. If set, validate the request and preview the review, but do not post it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "The fields to be updated; only fields explicitly provided are updated. If no field mask is provided, all provided fields in the request are updated. To update all fields, provide a field mask of \"*\".",
                      "format": "google-fieldmask"
                    }
                  },
                  "request": {
                    "$ref": "Channel"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "eventarc.projects.locations.channels.patch",
                  "description": "Update a single channel.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "eventarc.projects.locations.channels.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent collection in which to add this channel.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "channelId": {
                      "description": "Required. The user-provided ID to be assigned to the channel.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Required. If set, validate the request and preview the review, but do not post it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "request": {
                    "$ref": "Channel"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Create a new channel in a particular project and location.",
                  "id": "eventarc.projects.locations.channels.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/channels"
                },
                "getIamPolicy": {
                  "id": "eventarc.projects.locations.channels.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "channelConnections": {
              "methods": {
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "id": "eventarc.projects.locations.channelConnections.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}:getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$"
                    }
                  },
                  "id": "eventarc.projects.locations.channelConnections.getIamPolicy"
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "id": "eventarc.projects.locations.channelConnections.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST"
                }
              }
            },
            "triggers": {
              "methods": {
                "patch": {
                  "parameters": {
                    "allowMissing": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set to true, and the trigger is not found, a new trigger will be created. In this situation, `update_mask` is ignored."
                    },
                    "name": {
                      "required": true,
                      "description": "Required. The resource name of the trigger. Must be unique within the location of the project and must be in `projects/{project}/locations/{location}/triggers/{trigger}` format.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Required. If set, validate the request and preview the review, but do not post it.",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The fields to be updated; only fields explicitly provided are updated. If no field mask is provided, all provided fields in the request are updated. To update all fields, provide a field mask of \"*\".",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "Trigger"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "id": "eventarc.projects.locations.triggers.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Update a single trigger.",
                  "httpMethod": "PATCH"
                },
                "list": {
                  "response": {
                    "$ref": "ListTriggersResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers",
                  "id": "eventarc.projects.locations.triggers.list",
                  "path": "v1/{+parent}/triggers",
                  "httpMethod": "GET",
                  "description": "List triggers.",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "The sorting order of the resources returned. Value should be a comma-separated list of fields. The default sorting order is ascending. To specify descending order for a field, append a `desc` suffix; for example: `name desc, trigger_id`."
                    },
                    "pageSize": {
                      "description": "The maximum number of triggers to return on each page. Note: The service may send fewer.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "description": "Required. The parent collection to list triggers on.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The page token; provide the value from the `next_page_token` field in a previous `ListTriggers` call to retrieve the subsequent page. When paginating, all other parameters provided to `ListTriggers` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filter field. Used to filter the Triggers to be listed. Possible filters are described in https://google.aip.dev/160. For example, using \"?filter=destination:gke\" would list only Triggers with a gke destination.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create a new trigger in a particular project and location.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Required. If set, validate the request and preview the review, but do not post it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent collection in which to add this trigger.",
                      "required": true,
                      "location": "path"
                    },
                    "triggerId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The user-provided ID to be assigned to the trigger."
                    }
                  },
                  "id": "eventarc.projects.locations.triggers.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers",
                  "path": "v1/{+parent}/triggers",
                  "request": {
                    "$ref": "Trigger"
                  }
                },
                "delete": {
                  "description": "Delete a single trigger.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "id": "eventarc.projects.locations.triggers.delete",
                  "parameters": {
                    "etag": {
                      "type": "string",
                      "description": "If provided, the trigger will only be deleted if the etag matches the current etag on the resource.",
                      "location": "query"
                    },
                    "validateOnly": {
                      "description": "Required. If set, validate the request and preview the review, but do not post it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "allowMissing": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set to true, and the trigger is not found, the request will succeed but no action will be taken on the server."
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the trigger to be deleted.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}"
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "eventarc.projects.locations.triggers.setIamPolicy"
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "eventarc.projects.locations.triggers.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "eventarc.projects.locations.triggers.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get a single trigger.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the trigger to get.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Trigger"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "path": "v1/{+resource}:testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "eventarc.projects.locations.triggers.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$"
                    }
                  }
                }
              }
            },
            "providers": {
              "methods": {
                "get": {
                  "id": "eventarc.projects.locations.providers.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Provider"
                  },
                  "description": "Get a single Provider.",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the provider to get."
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}"
                },
                "list": {
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "The sorting order of the resources returned. Value should be a comma-separated list of fields. The default sorting oder is ascending. To specify descending order for a field, append a `desc` suffix; for example: `name desc, _id`."
                    },
                    "filter": {
                      "description": "The filter field that the list request will filter on.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of providers to return on each page.",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The page token; provide the value from the `next_page_token` field in a previous `ListProviders` call to retrieve the subsequent page. When paginating, all other parameters provided to `ListProviders` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent of the provider to get."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers",
                  "id": "eventarc.projects.locations.providers.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List providers.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListProvidersResponse"
                  },
                  "path": "v1/{+parent}/providers",
                  "httpMethod": "GET"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "eventarc.projects.locations.operations.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "list": {
                  "id": "eventarc.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  }
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "id": "eventarc.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "path": "v1/{+name}:cancel",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "id": "eventarc.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "parameters": {
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "canonicalName": "Eventarc",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://eventarc.mtls.googleapis.com/",
  "revision": "20220429",
  "schemas": {
    "Destination": {
      "id": "Destination",
      "type": "object",
      "description": "Represents a target of an invocation over HTTP.",
      "properties": {
        "cloudRun": {
          "$ref": "CloudRun",
          "description": "Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger."
        },
        "workflow": {
          "description": "The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`",
          "type": "string"
        },
        "gke": {
          "$ref": "GKE",
          "description": "A GKE service capable of receiving events. The service should be running in the same project as the trigger."
        },
        "cloudFunction": {
          "description": "The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: `projects/{project}/locations/{location}/functions/{function}`",
          "type": "string"
        }
      }
    },
    "ListProvidersResponse": {
      "description": "The response message for the `ListProviders` method.",
      "type": "object",
      "id": "ListProvidersResponse",
      "properties": {
        "nextPageToken": {
          "description": "A page token that can be sent to ListProviders to request the next page. If this is empty, then there are no more pages.",
          "type": "string"
        },
        "providers": {
          "items": {
            "$ref": "Provider"
          },
          "description": "The requested providers, up to the number specified in `page_size`.",
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Unreachable resources, if any.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Channel": {
      "description": "A representation of the Channel resource. A Channel is a resource on which event providers publish their events. The published events are delivered through the transport associated with the channel. Note that a channel is associated with exactly one event provider.",
      "type": "object",
      "id": "Channel",
      "properties": {
        "name": {
          "description": "Required. The resource name of the channel. Must be unique within the location on the project and must be in `projects/{project}/locations/{location}/channels/{channel_id}` format.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The last-modified time."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The creation time.",
          "readOnly": true
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Server assigned unique identifier for the channel. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "type": "string"
        },
        "pubsubTopic": {
          "readOnly": true,
          "description": "Output only. The name of the Pub/Sub topic created and managed by Eventarc system as a transport for the event delivery. Format: `projects/{project}/topics/{topic_id}`.",
          "type": "string"
        },
        "activationToken": {
          "description": "Output only. The activation token for the channel. The token must be used by the provider to register the channel for publishing.",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "INACTIVE"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The PENDING state indicates that a Channel has been created successfully and there is a new activation token available for the subscriber to use to convey the Channel to the provider in order to create a Connection.",
            "The ACTIVE state indicates that a Channel has been successfully connected with the event provider. An ACTIVE Channel is ready to receive and route events from the event provider.",
            "The INACTIVE state means that the Channel cannot receive events permanently. There are two possible cases this state can happen: 1. The SaaS provider disconnected from this Channel. 2. The Channel activation token has expired but the SaaS provider wasn't connected. To re-establish a Connection with a provider, the subscriber should create a new Channel and give it to the provider."
          ],
          "description": "Output only. The state of a Channel."
        },
        "provider": {
          "description": "The name of the event provider (e.g. Eventarc SaaS partner) associated with the channel. This provider will be granted permissions to publish events to the channel. Format: `projects/{project}/locations/{location}/providers/{provider_id}`.",
          "type": "string"
        }
      }
    },
    "GoogleLongrunningCancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "GoogleLongrunningCancelOperationRequest",
      "type": "object"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsResponse"
    },
    "GoogleRpcStatus": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "type": "object",
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "AuditConfig": {
      "type": "object",
      "id": "AuditConfig",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "type": "array",
          "description": "The configuration for logging of each type of permission."
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
    },
    "Policy": {
      "properties": {
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "bindings": {
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "EventType": {
      "properties": {
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human friendly description of what the event type is about. For example \"Bucket created in Cloud Storage\"."
        },
        "eventSchemaUri": {
          "readOnly": true,
          "description": "Output only. URI for the event schema. For example \"https://github.com/googleapis/google-cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto\"",
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full name of the event type (for example, \"google.cloud.storage.object.v1.finalized\"). In the form of {provider-specific-prefix}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to remain backward compatible within one version. Note that event type versions and API versions do not need to match."
        },
        "filteringAttributes": {
          "description": "Output only. Filtering attributes for the event type.",
          "items": {
            "$ref": "FilteringAttribute"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "description": "A representation of the event type resource.",
      "type": "object",
      "id": "EventType"
    },
    "Transport": {
      "description": "Represents the transport intermediaries created for the trigger to deliver events.",
      "id": "Transport",
      "type": "object",
      "properties": {
        "pubsub": {
          "$ref": "Pubsub",
          "description": "The Pub/Sub topic and subscription used by Eventarc as a transport intermediary."
        }
      }
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Trigger": {
      "properties": {
        "channel": {
          "description": "Optional. The name of the channel associated with the trigger in `projects/{project}/locations/{location}/channels/{channel}` format. You must provide a channel to receive events from Eventarc SaaS partners.",
          "type": "string"
        },
        "etag": {
          "readOnly": true,
          "description": "Output only. This checksum is computed by the server based on the value of other fields, and might be sent only on create requests to ensure that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Optional. User labels attached to the triggers that can be used to group resources.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted."
        },
        "name": {
          "description": "Required. The resource name of the trigger. Must be unique within the location of the project and must be in `projects/{project}/locations/{location}/triggers/{trigger}` format.",
          "type": "string"
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. The IAM service account email associated with the trigger. The service account represents the identity of the trigger. The principal who calls this API must have the `iam.serviceAccounts.actAs` permission in the service account. See https://cloud.google.com/iam/docs/understanding-service-accounts?hl=en#sa_common for more information. For Cloud Run destinations, this service account is used to generate identity tokens when invoking the service. See https://cloud.google.com/run/docs/triggering/pubsub-push#create-service-account for information on how to invoke authenticated Cloud Run services. To create Audit Log triggers, the service account should also have the `roles/eventarc.eventReceiver` IAM role."
        },
        "destination": {
          "$ref": "Destination",
          "description": "Required. Destination specifies where the events should be sent to."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last-modified time."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation time."
        },
        "transport": {
          "description": "Optional. To deliver messages, Eventarc might use other GCP products as a transport intermediary. This field contains a reference to that transport intermediary. This information can be used for debugging purposes.",
          "$ref": "Transport"
        },
        "eventFilters": {
          "description": "Required. null The list of filters that applies to event attributes. Only events that match all the provided filters are sent to the destination.",
          "type": "array",
          "items": {
            "$ref": "EventFilter"
          }
        }
      },
      "id": "Trigger",
      "description": "A representation of the trigger resource.",
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest"
    },
    "Expr": {
      "type": "object",
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      }
    },
    "Pubsub": {
      "properties": {
        "subscription": {
          "description": "Output only. The name of the Pub/Sub subscription created and managed by Eventarc as a transport for the event delivery. Format: `projects/{PROJECT_ID}/subscriptions/{SUBSCRIPTION_NAME}`.",
          "type": "string",
          "readOnly": true
        },
        "topic": {
          "type": "string",
          "description": "Optional. The name of the Pub/Sub topic created and managed by Eventarc as a transport for the event delivery. Format: `projects/{PROJECT_ID}/topics/{TOPIC_NAME}`. You can set an existing topic for triggers of the type `google.cloud.pubsub.topic.v1.messagePublished`. The topic you provide here is not deleted by Eventarc at trigger deletion."
        }
      },
      "description": "Represents a Pub/Sub transport.",
      "type": "object",
      "id": "Pubsub"
    },
    "GKE": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "description": "Required. The namespace the GKE service is running in."
        },
        "cluster": {
          "description": "Required. The name of the cluster the GKE service is running in. The cluster must be running in the same project as the trigger being created.",
          "type": "string"
        },
        "service": {
          "type": "string",
          "description": "Required. Name of the GKE service."
        },
        "location": {
          "description": "Required. The name of the Google Compute Engine in which the cluster resides, which can either be compute zone (for example, us-central1-a) for the zonal clusters or region (for example, us-central1) for regional clusters.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Optional. The relative path on the GKE service the events should be sent to. The value must conform to the definition of a URI path segment (section 3.3 of RFC2396). Examples: \"/route\", \"route\", \"route/subroute\"."
        }
      },
      "description": "Represents a GKE destination.",
      "id": "GKE"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "type": "object"
    },
    "OperationMetadata": {
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "EventFilter": {
      "id": "EventFilter",
      "properties": {
        "operator": {
          "description": "Optional. The operator used for matching the events with the value of the filter. If not specified, only events that have an exact key-value pair specified in the filter are matched. The only allowed value is `match-path-pattern`.",
          "type": "string"
        },
        "attribute": {
          "type": "string",
          "description": "Required. The name of a CloudEvents attribute. Currently, only a subset of attributes are supported for filtering. All triggers MUST provide a filter for the 'type' attribute."
        },
        "value": {
          "description": "Required. The value for the attribute.",
          "type": "string"
        }
      },
      "description": "Filters events based on exact matches on the CloudEvents attributes.",
      "type": "object"
    },
    "ListChannelsResponse": {
      "description": "The response message for the `ListChannels` method.",
      "properties": {
        "channels": {
          "description": "The requested channels, up to the number specified in `page_size`.",
          "items": {
            "$ref": "Channel"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Unreachable resources, if any.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A page token that can be sent to ListChannels to request the next page. If this is empty, then there are no more pages."
        }
      },
      "id": "ListChannelsResponse",
      "type": "object"
    },
    "Provider": {
      "type": "object",
      "description": "A representation of the Provider resource.",
      "properties": {
        "name": {
          "description": "Output only. In `projects/{project}/locations/{location}/providers/{provider_id}` format.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human friendly name for the Provider. For example \"Cloud Storage\"."
        },
        "eventTypes": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Event types for this provider.",
          "items": {
            "$ref": "EventType"
          }
        }
      },
      "id": "Provider"
    },
    "Location": {
      "id": "Location",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object"
    },
    "ListTriggersResponse": {
      "id": "ListTriggersResponse",
      "properties": {
        "triggers": {
          "description": "The requested triggers, up to the number specified in `page_size`.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A page token that can be sent to ListTriggers to request the next page. If this is empty, then there are no more pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Unreachable resources, if any.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "The response message for the `ListTriggers` method."
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "id": "SetIamPolicyRequest"
    },
    "FilteringAttribute": {
      "id": "FilteringAttribute",
      "description": "A representation of the FilteringAttribute resource. Filtering attributes are per event type.",
      "type": "object",
      "properties": {
        "attribute": {
          "description": "Output only. Attribute used for filtering the event type.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "readOnly": true,
          "description": "Output only. Description of the purpose of the attribute.",
          "type": "string"
        },
        "pathPatternSupported": {
          "description": "Output only. If true, the attribute accepts matching expressions in the Eventarc PathPattern format.",
          "type": "boolean",
          "readOnly": true
        },
        "required": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. If true, the triggers for this provider should always specify a filter on these attributes. Trigger creation will fail otherwise."
        }
      }
    },
    "CloudRun": {
      "type": "object",
      "description": "Represents a Cloud Run destination.",
      "id": "CloudRun",
      "properties": {
        "region": {
          "description": "Required. The region the Cloud Run service is deployed in.",
          "type": "string"
        },
        "service": {
          "type": "string",
          "description": "Required. The name of the Cloud Run service being addressed. See https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services. Only services located in the same project as the trigger object can be addressed."
        },
        "path": {
          "type": "string",
          "description": "Optional. The relative path on the Cloud Run service the events should be sent to. The value must conform to the definition of a URI path segment (section 3.3 of RFC2396). Examples: \"/route\", \"route\", \"route/subroute\"."
        }
      }
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation"
    }
  },
  "basePath": "",
  "batchPath": "batch",
  "documentationLink": "https://cloud.google.com/eventarc",
  "version": "v1",
  "discoveryVersion": "v1",
  "rootUrl": "https://eventarc.googleapis.com/"
}

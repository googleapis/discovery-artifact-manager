{
  "documentationLink": "https://cloud.google.com/eventarc",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "description": "Resource name for the location."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "id": "eventarc.projects.locations.get"
            },
            "updateGoogleChannelConfig": {
              "id": "eventarc.projects.locations.updateGoogleChannelConfig",
              "request": {
                "$ref": "GoogleChannelConfig"
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleChannelConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "The fields to be updated; only fields explicitly provided are updated. If no field mask is provided, all provided fields in the request are updated. To update all fields, provide a field mask of \"*\"."
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The resource name of the config. Must be in the format of, `projects/{project}/locations/{location}/googleChannelConfig`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+/googleChannelConfig$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "description": "Update a single GoogleChannelConfig",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/googleChannelConfig"
            },
            "getGoogleChannelConfig": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleChannelConfig"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/googleChannelConfig",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "description": "Get a GoogleChannelConfig",
              "id": "eventarc.projects.locations.getGoogleChannelConfig",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+/googleChannelConfig$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the config to get."
                }
              }
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "eventarc.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations"
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource."
                    }
                  },
                  "id": "eventarc.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "eventarc.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path"
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "eventarc.projects.locations.operations.list",
                  "parameters": {
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation's parent resource."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1/{+name}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "eventarc.projects.locations.operations.cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleLongrunningCancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            },
            "channels": {
              "methods": {
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer"
                    },
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}:getIamPolicy",
                  "id": "eventarc.projects.locations.channels.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}",
                  "id": "eventarc.projects.locations.channels.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Delete a single channel.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validate the request and preview the review, but do not post it.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "description": "Required. The name of the channel to be deleted.",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}",
                  "httpMethod": "GET",
                  "description": "Get a single Channel.",
                  "id": "eventarc.projects.locations.channels.get",
                  "response": {
                    "$ref": "Channel"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the channel to get.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "eventarc.projects.locations.channels.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}:testIamPermissions"
                },
                "patch": {
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. If set, validate the request and preview the review, but do not post it.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string",
                      "description": "Required. The resource name of the channel. Must be unique within the location on the project and must be in `projects/{project}/locations/{location}/channels/{channel_id}` format.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "The fields to be updated; only fields explicitly provided are updated. If no field mask is provided, all provided fields in the request are updated. To update all fields, provide a field mask of \"*\".",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Update a single channel.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "eventarc.projects.locations.channels.patch",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "request": {
                    "$ref": "Channel"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}",
                  "httpMethod": "PATCH"
                },
                "create": {
                  "request": {
                    "$ref": "Channel"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "channelId": {
                      "description": "Required. The user-provided ID to be assigned to the channel.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. If set, validate the request and preview the review, but do not post it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent collection in which to add this channel.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "eventarc.projects.locations.channels.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels",
                  "description": "Create a new channel in a particular project and location.",
                  "path": "v1/{+parent}/channels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels/{channelsId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "eventarc.projects.locations.channels.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channels/[^/]+$",
                      "required": true
                    }
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "List channels.",
                  "response": {
                    "$ref": "ListChannelsResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of channels to return on each page. Note: The service may send fewer.",
                      "type": "integer"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent collection to list channels on.",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The page token; provide the value from the `next_page_token` field in a previous `ListChannels` call to retrieve the subsequent page. When paginating, all other parameters provided to `ListChannels` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "The sorting order of the resources returned. Value should be a comma-separated list of fields. The default sorting order is ascending. To specify descending order for a field, append a `desc` suffix; for example: `name desc, channel_id`.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "eventarc.projects.locations.channels.list",
                  "path": "v1/{+parent}/channels",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channels"
                }
              }
            },
            "triggers": {
              "methods": {
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "eventarc.projects.locations.triggers.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    },
                    "resource": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "eventarc.projects.locations.triggers.getIamPolicy"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "eventarc.projects.locations.triggers.create",
                  "request": {
                    "$ref": "Trigger"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "triggerId": {
                      "description": "Required. The user-provided ID to be assigned to the trigger.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent collection in which to add this trigger.",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Optional. If set, validate the request and preview the review, but do not post it.",
                      "type": "boolean"
                    }
                  },
                  "path": "v1/{+parent}/triggers",
                  "description": "Create a new trigger in a particular project and location.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "id": "eventarc.projects.locations.triggers.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "list": {
                  "path": "v1/{+parent}/triggers",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Filter field. Used to filter the Triggers to be listed. Possible filters are described in https://google.aip.dev/160. For example, using \"?filter=destination:gke\" would list only Triggers with a gke destination.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The page token; provide the value from the `next_page_token` field in a previous `ListTriggers` call to retrieve the subsequent page. When paginating, all other parameters provided to `ListTriggers` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "The sorting order of the resources returned. Value should be a comma-separated list of fields. The default sorting order is ascending. To specify descending order for a field, append a `desc` suffix; for example: `name desc, trigger_id`.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of triggers to return on each page. Note: The service may send fewer."
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent collection to list triggers on.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "ListTriggersResponse"
                  },
                  "description": "List triggers.",
                  "id": "eventarc.projects.locations.triggers.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "eventarc.projects.locations.triggers.get",
                  "description": "Get a single trigger.",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the trigger to get."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Trigger"
                  }
                },
                "delete": {
                  "parameters": {
                    "etag": {
                      "type": "string",
                      "description": "If provided, the trigger will only be deleted if the etag matches the current etag on the resource.",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set, validate the request and preview the review, but do not post it.",
                      "location": "query"
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set to true, and the trigger is not found, the request will succeed but no action will be taken on the server."
                    },
                    "name": {
                      "description": "Required. The name of the trigger to be deleted.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "eventarc.projects.locations.triggers.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "description": "Delete a single trigger.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Update a single trigger.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "request": {
                    "$ref": "Trigger"
                  },
                  "parameters": {
                    "allowMissing": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set to true, and the trigger is not found, a new trigger will be created. In this situation, `update_mask` is ignored."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "The fields to be updated; only fields explicitly provided are updated. If no field mask is provided, all provided fields in the request are updated. To update all fields, provide a field mask of \"*\".",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The resource name of the trigger. Must be unique within the location of the project and must be in `projects/{project}/locations/{location}/triggers/{trigger}` format.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. If set, validate the request and preview the review, but do not post it.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "eventarc.projects.locations.triggers.patch"
                }
              }
            },
            "providers": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "Provider"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/providers/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the provider to get.",
                      "required": true
                    }
                  },
                  "id": "eventarc.projects.locations.providers.get",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers/{providersId}",
                  "description": "Get a single Provider.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "list": {
                  "description": "List providers.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/providers",
                  "id": "eventarc.projects.locations.providers.list",
                  "response": {
                    "$ref": "ListProvidersResponse"
                  },
                  "path": "v1/{+parent}/providers",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "orderBy": {
                      "description": "The sorting order of the resources returned. Value should be a comma-separated list of fields. The default sorting oder is ascending. To specify descending order for a field, append a `desc` suffix; for example: `name desc, _id`.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The page token; provide the value from the `next_page_token` field in a previous `ListProviders` call to retrieve the subsequent page. When paginating, all other parameters provided to `ListProviders` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent of the provider to get.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "description": "The filter field that the list request will filter on.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of providers to return on each page.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            },
            "channelConnections": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ChannelConnection"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get a single ChannelConnection.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the channel connection to get.",
                      "type": "string"
                    }
                  },
                  "id": "eventarc.projects.locations.channelConnections.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}"
                },
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "eventarc.projects.locations.channelConnections.getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    },
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  }
                },
                "create": {
                  "path": "v1/{+parent}/channelConnections",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Create a new ChannelConnection in a particular project and location.",
                  "parameters": {
                    "channelConnectionId": {
                      "location": "query",
                      "description": "Required. The user-provided ID to be assigned to the channel connection.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent collection in which to add this channel connection.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ChannelConnection"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections",
                  "id": "eventarc.projects.locations.channelConnections.create"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections",
                  "response": {
                    "$ref": "ListChannelConnectionsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "eventarc.projects.locations.channelConnections.list",
                  "path": "v1/{+parent}/channelConnections",
                  "description": "List channel connections.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent collection from which to list channel connections."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of channel connections to return on each page. Note: The service may send fewer responses.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The page token; provide the value from the `next_page_token` field in a previous `ListChannelConnections` call to retrieve the subsequent page. When paginating, all other parameters provided to `ListChannelConnetions` match the call that provided the page token."
                    }
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "description": "Delete a single ChannelConnection.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}",
                  "id": "eventarc.projects.locations.channelConnections.delete",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the channel connection to delete.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}:setIamPolicy",
                  "id": "eventarc.projects.locations.channelConnections.setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/channelConnections/{channelConnectionsId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/channelConnections/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "id": "eventarc.projects.locations.channelConnections.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "basePath": "",
  "rootUrl": "https://eventarc.googleapis.com/",
  "canonicalName": "Eventarc",
  "ownerName": "Google",
  "name": "eventarc",
  "baseUrl": "https://eventarc.googleapis.com/",
  "id": "eventarc:v1",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Eventarc API",
  "mtlsRootUrl": "https://eventarc.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "description": "Build event-driven applications on Google Cloud Platform.",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version_module": true,
  "protocol": "rest",
  "discoveryVersion": "v1",
  "servicePath": "",
  "version": "v1",
  "revision": "20230428",
  "kind": "discovery#restDescription",
  "schemas": {
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "StateCondition": {
      "properties": {
        "code": {
          "enumDescriptions": [
            "Not an error; returned on success. HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ],
          "type": "string",
          "description": "The canonical code of the condition.",
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ]
        },
        "message": {
          "type": "string",
          "description": "Human-readable message."
        }
      },
      "type": "object",
      "description": "A condition that is part of the trigger state computation.",
      "id": "StateCondition"
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location",
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "Output only. Server assigned unique identifier for the channel. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "readOnly": true
        },
        "cryptoKeyName": {
          "description": "Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt their event data. It must match the pattern `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The creation time.",
          "type": "string"
        },
        "provider": {
          "type": "string",
          "description": "The name of the event provider (e.g. Eventarc SaaS partner) associated with the channel. This provider will be granted permissions to publish events to the channel. Format: `projects/{project}/locations/{location}/providers/{provider_id}`."
        },
        "name": {
          "type": "string",
          "description": "Required. The resource name of the channel. Must be unique within the location on the project and must be in `projects/{project}/locations/{location}/channels/{channel_id}` format."
        },
        "pubsubTopic": {
          "description": "Output only. The name of the Pub/Sub topic created and managed by Eventarc system as a transport for the event delivery. Format: `projects/{project}/topics/{topic_id}`.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The PENDING state indicates that a Channel has been created successfully and there is a new activation token available for the subscriber to use to convey the Channel to the provider in order to create a Connection.",
            "The ACTIVE state indicates that a Channel has been successfully connected with the event provider. An ACTIVE Channel is ready to receive and route events from the event provider.",
            "The INACTIVE state indicates that the Channel cannot receive events permanently. There are two possible cases this state can happen: 1. The SaaS provider disconnected from this Channel. 2. The Channel activation token has expired but the SaaS provider wasn't connected. To re-establish a Connection with a provider, the subscriber should create a new Channel and give it to the provider."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "ACTIVE",
            "INACTIVE"
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of a Channel."
        },
        "activationToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The activation token for the channel. The token must be used by the provider to register the channel for publishing."
        }
      },
      "description": "A representation of the Channel resource. A Channel is a resource on which event providers publish their events. The published events are delivered through the transport associated with the channel. Note that a channel is associated with exactly one event provider.",
      "id": "Channel"
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "type": "array",
          "description": "The configuration for logging of each type of permission."
        }
      }
    },
    "GoogleLongrunningCancelOperationRequest": {
      "properties": {},
      "type": "object",
      "id": "GoogleLongrunningCancelOperationRequest",
      "description": "The request message for Operations.CancelOperation."
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ChannelConnection": {
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "Output only. The last-modified time.",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "description": "Required. The name of the connection.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "activationToken": {
          "description": "Input only. Activation token for the channel. The token will be used during the creation of ChannelConnection to bind the channel with the provider project. This field will not be stored in the provider resource.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server assigned ID of the resource. The server guarantees uniqueness and immutability until deleted."
        },
        "channel": {
          "description": "Required. The name of the connected subscriber Channel. This is a weak reference to avoid cross project and cross accounts references. This must be in `projects/{project}/location/{location}/channels/{channel_id}` format.",
          "type": "string"
        }
      },
      "id": "ChannelConnection",
      "description": "A representation of the ChannelConnection resource. A ChannelConnection is a resource which event providers create during the activation process to establish a connection between the provider and the subscriber channel."
    },
    "ListChannelsResponse": {
      "type": "object",
      "id": "ListChannelsResponse",
      "description": "The response message for the `ListChannels` method.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources, if any.",
          "type": "array"
        },
        "channels": {
          "type": "array",
          "description": "The requested channels, up to the number specified in `page_size`.",
          "items": {
            "$ref": "Channel"
          }
        },
        "nextPageToken": {
          "description": "A page token that can be sent to `ListChannels` to request the next page. If this is empty, then there are no more pages.",
          "type": "string"
        }
      }
    },
    "EventType": {
      "properties": {
        "filteringAttributes": {
          "type": "array",
          "items": {
            "$ref": "FilteringAttribute"
          },
          "description": "Output only. Filtering attributes for the event type.",
          "readOnly": true
        },
        "eventSchemaUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. URI for the event schema. For example \"https://github.com/googleapis/google-cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto\""
        },
        "description": {
          "readOnly": true,
          "description": "Output only. Human friendly description of what the event type is about. For example \"Bucket created in Cloud Storage\".",
          "type": "string"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The full name of the event type (for example, \"google.cloud.storage.object.v1.finalized\"). In the form of {provider-specific-prefix}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to remain backward compatible within one version. Note that event type versions and API versions do not need to match."
        }
      },
      "id": "EventType",
      "type": "object",
      "description": "A representation of the event type resource."
    },
    "Provider": {
      "properties": {
        "eventTypes": {
          "readOnly": true,
          "description": "Output only. Event types for this provider.",
          "items": {
            "$ref": "EventType"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. In `projects/{project}/locations/{location}/providers/{provider_id}` format.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Output only. Human friendly name for the Provider. For example \"Cloud Storage\".",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A representation of the Provider resource.",
      "id": "Provider"
    },
    "EventFilter": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string",
          "description": "Required. The name of a CloudEvents attribute. Currently, only a subset of attributes are supported for filtering. All triggers MUST provide a filter for the 'type' attribute."
        },
        "operator": {
          "description": "Optional. The operator used for matching the events with the value of the filter. If not specified, only events that have an exact key-value pair specified in the filter are matched. The only allowed value is `match-path-pattern`.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Required. The value for the attribute."
        }
      },
      "description": "Filters events based on exact matches on the CloudEvents attributes.",
      "id": "EventFilter"
    },
    "Trigger": {
      "properties": {
        "channel": {
          "type": "string",
          "description": "Optional. The name of the channel associated with the trigger in `projects/{project}/locations/{location}/channels/{channel}` format. You must provide a channel to receive events from Eventarc SaaS partners."
        },
        "etag": {
          "description": "Output only. This checksum is computed by the server based on the value of other fields, and might be sent only on create requests to ensure that the client has an up-to-date value before proceeding.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Required. The resource name of the trigger. Must be unique within the location of the project and must be in `projects/{project}/locations/{location}/triggers/{trigger}` format."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last-modified time."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. User labels attached to the triggers that can be used to group resources."
        },
        "transport": {
          "description": "Optional. To deliver messages, Eventarc might use other Google Cloud products as a transport intermediary. This field contains a reference to that transport intermediary. This information can be used for debugging purposes.",
          "$ref": "Transport"
        },
        "destination": {
          "$ref": "Destination",
          "description": "Required. Destination specifies where the events should be sent to."
        },
        "eventFilters": {
          "description": "Required. Unordered list. The list of filters that applies to event attributes. Only events that match all the provided filters are sent to the destination.",
          "items": {
            "$ref": "EventFilter"
          },
          "type": "array"
        },
        "eventDataContentType": {
          "type": "string",
          "description": "Optional. EventDataContentType specifies the type of payload in MIME format that is expected from the CloudEvent data field. This is set to `application/json` if the value is not defined."
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. The IAM service account email associated with the trigger. The service account represents the identity of the trigger. The principal who calls this API must have the `iam.serviceAccounts.actAs` permission in the service account. See https://cloud.google.com/iam/docs/understanding-service-accounts?hl=en#sa_common for more information. For Cloud Run destinations, this service account is used to generate identity tokens when invoking the service. See https://cloud.google.com/run/docs/triggering/pubsub-push#create-service-account for information on how to invoke authenticated Cloud Run services. To create Audit Log triggers, the service account should also have the `roles/eventarc.eventReceiver` IAM role."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation time."
        },
        "conditions": {
          "description": "Output only. The reason(s) why a trigger is in FAILED state.",
          "additionalProperties": {
            "$ref": "StateCondition"
          },
          "readOnly": true,
          "type": "object"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. Server-assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A representation of the trigger resource.",
      "id": "Trigger"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "properties": {
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask",
          "type": "string"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object"
    },
    "ListProvidersResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Unreachable resources, if any."
        },
        "providers": {
          "items": {
            "$ref": "Provider"
          },
          "description": "The requested providers, up to the number specified in `page_size`.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A page token that can be sent to `ListProviders` to request the next page. If this is empty, then there are no more pages."
        }
      },
      "description": "The response message for the `ListProviders` method.",
      "id": "ListProvidersResponse",
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "type": "object",
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        }
      }
    },
    "Pubsub": {
      "id": "Pubsub",
      "properties": {
        "subscription": {
          "description": "Output only. The name of the Pub/Sub subscription created and managed by Eventarc as a transport for the event delivery. Format: `projects/{PROJECT_ID}/subscriptions/{SUBSCRIPTION_NAME}`.",
          "readOnly": true,
          "type": "string"
        },
        "topic": {
          "description": "Optional. The name of the Pub/Sub topic created and managed by Eventarc as a transport for the event delivery. Format: `projects/{PROJECT_ID}/topics/{TOPIC_NAME}`. You can set an existing topic for triggers of the type `google.cloud.pubsub.topic.v1.messagePublished`. The topic you provide here is not deleted by Eventarc at trigger deletion.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a Pub/Sub transport."
    },
    "Transport": {
      "type": "object",
      "description": "Represents the transport intermediaries created for the trigger to deliver events.",
      "id": "Transport",
      "properties": {
        "pubsub": {
          "description": "The Pub/Sub topic and subscription used by Eventarc as a transport intermediary.",
          "$ref": "Pubsub"
        }
      }
    },
    "ListChannelConnectionsResponse": {
      "description": "The response message for the `ListChannelConnections` method.",
      "properties": {
        "channelConnections": {
          "items": {
            "$ref": "ChannelConnection"
          },
          "description": "The requested channel connections, up to the number specified in `page_size`.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A page token that can be sent to `ListChannelConnections` to request the next page. If this is empty, then there are no more pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Unreachable resources, if any.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "ListChannelConnectionsResponse"
    },
    "ListLocationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "Binding": {
      "type": "object",
      "id": "Binding",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      },
      "description": "Associates `members`, or principals, with a `role`."
    },
    "ListTriggersResponse": {
      "type": "object",
      "id": "ListTriggersResponse",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources, if any."
        },
        "nextPageToken": {
          "description": "A page token that can be sent to `ListTriggers` to request the next page. If this is empty, then there are no more pages.",
          "type": "string"
        },
        "triggers": {
          "description": "The requested triggers, up to the number specified in `page_size`.",
          "items": {
            "$ref": "Trigger"
          },
          "type": "array"
        }
      },
      "description": "The response message for the `ListTriggers` method."
    },
    "Destination": {
      "description": "Represents a target of an invocation over HTTP.",
      "properties": {
        "workflow": {
          "description": "The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`",
          "type": "string"
        },
        "gke": {
          "$ref": "GKE",
          "description": "A GKE service capable of receiving events. The service should be running in the same project as the trigger."
        },
        "cloudFunction": {
          "type": "string",
          "description": "The Cloud Function resource name. Only Cloud Functions V2 is supported. Format: `projects/{project}/locations/{location}/functions/{function}` This is a read-only field. Creating Cloud Functions V2 triggers is only supported via the Cloud Functions product. An error will be returned if the user sets this value."
        },
        "cloudRun": {
          "$ref": "CloudRun",
          "description": "Cloud Run fully-managed resource that receives the events. The resource should be in the same project as the trigger."
        }
      },
      "type": "object",
      "id": "Destination"
    },
    "GoogleRpcStatus": {
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      }
    },
    "CloudRun": {
      "properties": {
        "service": {
          "description": "Required. The name of the Cloud Run service being addressed. See https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services. Only services located in the same project as the trigger object can be addressed.",
          "type": "string"
        },
        "path": {
          "description": "Optional. The relative path on the Cloud Run service the events should be sent to. The value must conform to the definition of a URI path segment (section 3.3 of RFC2396). Examples: \"/route\", \"route\", \"route/subroute\".",
          "type": "string"
        },
        "region": {
          "description": "Required. The region the Cloud Run service is deployed in.",
          "type": "string"
        }
      },
      "description": "Represents a Cloud Run destination.",
      "id": "CloudRun",
      "type": "object"
    },
    "Policy": {
      "type": "object",
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte",
          "type": "string"
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        }
      }
    },
    "FilteringAttribute": {
      "id": "FilteringAttribute",
      "description": "A representation of the FilteringAttribute resource. Filtering attributes are per event type.",
      "type": "object",
      "properties": {
        "required": {
          "description": "Output only. If true, the triggers for this provider should always specify a filter on these attributes. Trigger creation will fail otherwise.",
          "type": "boolean",
          "readOnly": true
        },
        "pathPatternSupported": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. If true, the attribute accepts matching expressions in the Eventarc PathPattern format."
        },
        "attribute": {
          "type": "string",
          "description": "Output only. Attribute used for filtering the event type.",
          "readOnly": true
        },
        "description": {
          "readOnly": true,
          "description": "Output only. Description of the purpose of the attribute.",
          "type": "string"
        }
      }
    },
    "GoogleChannelConfig": {
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last-modified time."
        },
        "cryptoKeyName": {
          "description": "Optional. Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt their event data. It must match the pattern `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. The resource name of the config. Must be in the format of, `projects/{project}/locations/{location}/googleChannelConfig`."
        }
      },
      "id": "GoogleChannelConfig",
      "type": "object",
      "description": "A GoogleChannelConfig is a resource that stores the custom settings respected by Eventarc first-party triggers in the matching region. Once configured, first-party event data will be protected using the specified custom managed encryption key instead of Google-managed encryption keys."
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation"
    },
    "GKE": {
      "description": "Represents a GKE destination.",
      "properties": {
        "service": {
          "type": "string",
          "description": "Required. Name of the GKE service."
        },
        "namespace": {
          "type": "string",
          "description": "Required. The namespace the GKE service is running in."
        },
        "cluster": {
          "type": "string",
          "description": "Required. The name of the cluster the GKE service is running in. The cluster must be running in the same project as the trigger being created."
        },
        "path": {
          "type": "string",
          "description": "Optional. The relative path on the GKE service the events should be sent to. The value must conform to the definition of a URI path segment (section 3.3 of RFC2396). Examples: \"/route\", \"route\", \"route/subroute\"."
        },
        "location": {
          "description": "Required. The name of the Google Compute Engine in which the cluster resides, which can either be compute zone (for example, us-central1-a) for the zonal clusters or region (for example, us-central1) for regional clusters.",
          "type": "string"
        }
      },
      "id": "GKE",
      "type": "object"
    }
  },
  "parameters": {
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "alt": {
      "location": "query",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  }
}

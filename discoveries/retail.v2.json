{
  "title": "Retail API",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "description": "Cloud Retail service enables customers to build end-to-end personalized recommendation systems without requiring a high level of expertise in machine learning, recommendation system, or Google Cloud.",
  "protocol": "rest",
  "basePath": "",
  "mtlsRootUrl": "https://retail.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/recommendations",
  "kind": "discovery#restDescription",
  "canonicalName": "Cloud Retail",
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "catalogs": {
              "resources": {
                "controls": {
                  "methods": {
                    "list": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls",
                      "response": {
                        "$ref": "GoogleCloudRetailV2ListControlsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "Optional. A page token, received from a previous `ListControls` call. Provide this to retrieve the subsequent page.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Optional. A filter to apply on the list results. Supported features: * List all the products under the parent branch if filter is unset. * List controls that are used in a single ServingConfig: 'serving_config = \"boosted_home_page_cvr\"'",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000."
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The catalog resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$"
                        }
                      },
                      "description": "Lists all Controls by their parent Catalog.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "retail.projects.locations.catalogs.controls.list",
                      "path": "v2/{+parent}/controls"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "id": "retail.projects.locations.catalogs.controls.get",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/controls/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the Control to get. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}`"
                        }
                      },
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets a Control.",
                      "response": {
                        "$ref": "GoogleCloudRetailV2Control"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls/{controlsId}"
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls/{controlsId}",
                      "path": "v2/{+name}",
                      "description": "Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the Control to delete. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/controls/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE",
                      "id": "retail.projects.locations.catalogs.controls.delete",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Full resource name of parent catalog. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`"
                        },
                        "controlId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The ID to use for the Control, which will become the final component of the Control's resource name. This value should be 4-63 characters, and valid characters are /a-z-_/."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls",
                      "id": "retail.projects.locations.catalogs.controls.create",
                      "path": "v2/{+parent}/controls",
                      "httpMethod": "POST",
                      "description": "Creates a Control. If the Control to create already exists, an ALREADY_EXISTS error is returned.",
                      "request": {
                        "$ref": "GoogleCloudRetailV2Control"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2Control"
                      }
                    },
                    "patch": {
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/controls/{controlsId}",
                      "response": {
                        "$ref": "GoogleCloudRetailV2Control"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRetailV2Control"
                      },
                      "parameters": {
                        "updateMask": {
                          "description": "Indicates which fields in the provided Control to update. The following are NOT supported: * Control.name If not set or empty, all supported fields are updated.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "description": "Immutable. Fully qualified name `projects/*/locations/global/catalogs/*/controls/*`",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/controls/[^/]+$",
                          "type": "string"
                        }
                      },
                      "id": "retail.projects.locations.catalogs.controls.patch",
                      "httpMethod": "PATCH",
                      "description": "Updates a Control. Control cannot be set to a different oneof field, if so an INVALID_ARGUMENT is returned. If the Control to update does not exist, a NOT_FOUND error is returned.",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                },
                "operations": {
                  "methods": {
                    "list": {
                      "path": "v2/{+name}/operations",
                      "httpMethod": "GET",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/operations",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "retail.projects.locations.catalogs.operations.list",
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "The standard list page size."
                        },
                        "filter": {
                          "type": "string",
                          "description": "The standard list filter.",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The standard list page token."
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "The name of the operation's parent resource.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningListOperationsResponse"
                      }
                    },
                    "get": {
                      "id": "retail.projects.locations.catalogs.operations.get",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/operations/{operationsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/operations/[^/]+$",
                          "description": "The name of the operation resource.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}"
                    }
                  }
                },
                "completionData": {
                  "methods": {
                    "import": {
                      "id": "retail.projects.locations.catalogs.completionData.import",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+parent}/completionData:import",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The catalog which the suggestions dataset belongs to. Format: `projects/1234/locations/global/catalogs/default_catalog`."
                        }
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Bulk import of processed completion dataset. Request processing is asynchronous. Partial updating is not supported. The operation is successfully finished only after the imported suggestions are indexed successfully and ready for serving. The process takes hours. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/completionData:import",
                      "request": {
                        "$ref": "GoogleCloudRetailV2ImportCompletionDataRequest"
                      }
                    }
                  }
                },
                "userEvents": {
                  "methods": {
                    "import": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRetailV2ImportUserEventsRequest"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/userEvents:import",
                      "description": "Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. `Operation.response` is of type `ImportResponse`. Note that it is possible for a subset of the items to be successfully inserted. `Operation.metadata` is of type `ImportMetadata`.",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "retail.projects.locations.catalogs.userEvents.import",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:import",
                      "parameters": {
                        "parent": {
                          "description": "Required. `projects/1234/locations/global/catalogs/default_catalog`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      }
                    },
                    "purge": {
                      "id": "retail.projects.locations.catalogs.userEvents.purge",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "description": "Deletes permanently all user events specified by the filter provided. Depending on the number of events specified by the filter, this operation could take hours or days to complete. To test a filter, use the list command first.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The resource name of the catalog under which the events are created. The format is `projects/${projectId}/locations/global/catalogs/${catalogId}`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v2/{+parent}/userEvents:purge",
                      "request": {
                        "$ref": "GoogleCloudRetailV2PurgeUserEventsRequest"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:purge"
                    },
                    "rejoin": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "Required. The parent catalog resource name, such as `projects/1234/locations/global/catalogs/default_catalog`.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:rejoin",
                      "request": {
                        "$ref": "GoogleCloudRetailV2RejoinUserEventsRequest"
                      },
                      "id": "retail.projects.locations.catalogs.userEvents.rejoin",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Starts a user-event rejoin operation with latest product catalog. Events are not annotated with detailed product information for products that are missing from the catalog when the user event is ingested. These events are stored as unjoined events with limited usage on training and serving. You can use this method to start a join operation on specified events with the latest version of product catalog. You can also use this method to correct events joined with the wrong product catalog. A rejoin operation can take hours or days to complete.",
                      "path": "v2/{+parent}/userEvents:rejoin"
                    },
                    "collect": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:collect",
                      "id": "retail.projects.locations.catalogs.userEvents.collect",
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "ets": {
                          "format": "int64",
                          "type": "string",
                          "description": "The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The parent catalog name, such as `projects/1234/locations/global/catalogs/default_catalog`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "location": "path",
                          "type": "string"
                        },
                        "uri": {
                          "description": "The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000 characters. This is often more useful than the referer URL, because many browsers only send the domain for 3rd party requests.",
                          "type": "string",
                          "location": "query"
                        },
                        "userEvent": {
                          "description": "Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "v2/{+parent}/userEvents:collect",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a 3rd party domain. This method is used only by the Retail API JavaScript pixel and Google Tag Manager. Users should not call this method directly."
                    },
                    "write": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/userEvents:write",
                      "request": {
                        "$ref": "GoogleCloudRetailV2UserEvent"
                      },
                      "id": "retail.projects.locations.catalogs.userEvents.write",
                      "path": "v2/{+parent}/userEvents:write",
                      "response": {
                        "$ref": "GoogleCloudRetailV2UserEvent"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Writes a single user event.",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "Required. The parent catalog resource name, such as `projects/1234/locations/global/catalogs/default_catalog`.",
                          "required": true
                        }
                      }
                    }
                  }
                },
                "attributesConfig": {
                  "methods": {
                    "removeCatalogAttribute": {
                      "httpMethod": "POST",
                      "path": "v2/{+attributesConfig}:removeCatalogAttribute",
                      "parameterOrder": [
                        "attributesConfig"
                      ],
                      "id": "retail.projects.locations.catalogs.attributesConfig.removeCatalogAttribute",
                      "parameters": {
                        "attributesConfig": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                          "type": "string",
                          "description": "Required. Full AttributesConfig resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig:removeCatalogAttribute",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Removes the specified CatalogAttribute from the AttributesConfig. If the CatalogAttribute to remove does not exist, a NOT_FOUND error is returned.",
                      "response": {
                        "$ref": "GoogleCloudRetailV2AttributesConfig"
                      },
                      "request": {
                        "$ref": "GoogleCloudRetailV2RemoveCatalogAttributeRequest"
                      }
                    },
                    "addCatalogAttribute": {
                      "id": "retail.projects.locations.catalogs.attributesConfig.addCatalogAttribute",
                      "request": {
                        "$ref": "GoogleCloudRetailV2AddCatalogAttributeRequest"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "attributesConfig"
                      ],
                      "description": "Adds the specified CatalogAttribute to the AttributesConfig. If the CatalogAttribute to add already exists, an ALREADY_EXISTS error is returned.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2AttributesConfig"
                      },
                      "path": "v2/{+attributesConfig}:addCatalogAttribute",
                      "parameters": {
                        "attributesConfig": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                          "description": "Required. Full AttributesConfig resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig:addCatalogAttribute"
                    },
                    "replaceCatalogAttribute": {
                      "request": {
                        "$ref": "GoogleCloudRetailV2ReplaceCatalogAttributeRequest"
                      },
                      "id": "retail.projects.locations.catalogs.attributesConfig.replaceCatalogAttribute",
                      "description": "Replaces the specified CatalogAttribute in the AttributesConfig by updating the catalog attribute with the same CatalogAttribute.key. If the CatalogAttribute to replace does not exist, a NOT_FOUND error is returned.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig:replaceCatalogAttribute",
                      "httpMethod": "POST",
                      "path": "v2/{+attributesConfig}:replaceCatalogAttribute",
                      "parameterOrder": [
                        "attributesConfig"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2AttributesConfig"
                      },
                      "parameters": {
                        "attributesConfig": {
                          "required": true,
                          "description": "Required. Full AttributesConfig resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                          "location": "path",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "placements": {
                  "methods": {
                    "predict": {
                      "response": {
                        "$ref": "GoogleCloudRetailV2PredictResponse"
                      },
                      "httpMethod": "POST",
                      "id": "retail.projects.locations.catalogs.placements.predict",
                      "request": {
                        "$ref": "GoogleCloudRetailV2PredictRequest"
                      },
                      "description": "Makes a recommendation prediction.",
                      "parameterOrder": [
                        "placement"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/placements/{placementsId}:predict",
                      "path": "v2/{+placement}:predict",
                      "parameters": {
                        "placement": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/placements/[^/]+$",
                          "type": "string",
                          "description": "Required. Full resource name of the format: `{placement=projects/*/locations/global/catalogs/default_catalog/servingConfigs/*}` or `{placement=projects/*/locations/global/catalogs/default_catalog/placements/*}`. We recommend using the `servingConfigs` resource. `placements` is a legacy resource. The ID of the Recommendations AI serving config or placement. Before you can request predictions from your model, you must create at least one serving config or placement for it. For more information, see [Managing serving configurations] (https://cloud.google.com/retail/docs/manage-configs). The full list of available serving configs can be seen at https://console.cloud.google.com/ai/retail/catalogs/default_catalog/configs",
                          "location": "path",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "search": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/placements/{placementsId}:search",
                      "response": {
                        "$ref": "GoogleCloudRetailV2SearchResponse"
                      },
                      "id": "retail.projects.locations.catalogs.placements.search",
                      "parameterOrder": [
                        "placement"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "placement": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/placements/[^/]+$",
                          "description": "Required. The resource name of the Retail Search serving config, such as `projects/*/locations/global/catalogs/default_catalog/servingConfigs/default_serving_config` or the name of the legacy placement resource, such as `projects/*/locations/global/catalogs/default_catalog/placements/default_search`. This field is used to identify the serving configuration name and the set of models that will be used to make the search.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "description": "Performs a search. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                      "httpMethod": "POST",
                      "path": "v2/{+placement}:search",
                      "request": {
                        "$ref": "GoogleCloudRetailV2SearchRequest"
                      }
                    }
                  }
                },
                "servingConfigs": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value greater than 100 is provided, at most 100 results are returned."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to retrieve the subsequent page."
                        },
                        "parent": {
                          "description": "Required. The catalog resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRetailV2ListServingConfigsResponse"
                      },
                      "id": "retail.projects.locations.catalogs.servingConfigs.list",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs",
                      "description": "Lists all ServingConfigs linked to this catalog.",
                      "path": "v2/{+parent}/servingConfigs",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    },
                    "patch": {
                      "id": "retail.projects.locations.catalogs.servingConfigs.patch",
                      "response": {
                        "$ref": "GoogleCloudRetailV2ServingConfig"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}",
                      "description": "Updates a ServingConfig.",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "Indicates which fields in the provided ServingConfig to update. The following are NOT supported: * ServingConfig.name If not set, all supported fields are updated."
                        },
                        "name": {
                          "type": "string",
                          "description": "Immutable. Fully qualified name `projects/*/locations/global/catalogs/*/servingConfig/*`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "v2/{+name}",
                      "request": {
                        "$ref": "GoogleCloudRetailV2ServingConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH"
                    },
                    "get": {
                      "id": "retail.projects.locations.catalogs.servingConfigs.get",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the ServingConfig to get. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$"
                        }
                      },
                      "description": "Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}",
                      "response": {
                        "$ref": "GoogleCloudRetailV2ServingConfig"
                      },
                      "path": "v2/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "predict": {
                      "request": {
                        "$ref": "GoogleCloudRetailV2PredictRequest"
                      },
                      "description": "Makes a recommendation prediction.",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudRetailV2PredictResponse"
                      },
                      "parameterOrder": [
                        "placement"
                      ],
                      "parameters": {
                        "placement": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Full resource name of the format: `{placement=projects/*/locations/global/catalogs/default_catalog/servingConfigs/*}` or `{placement=projects/*/locations/global/catalogs/default_catalog/placements/*}`. We recommend using the `servingConfigs` resource. `placements` is a legacy resource. The ID of the Recommendations AI serving config or placement. Before you can request predictions from your model, you must create at least one serving config or placement for it. For more information, see [Managing serving configurations] (https://cloud.google.com/retail/docs/manage-configs). The full list of available serving configs can be seen at https://console.cloud.google.com/ai/retail/catalogs/default_catalog/configs",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v2/{+placement}:predict",
                      "id": "retail.projects.locations.catalogs.servingConfigs.predict",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}:predict"
                    },
                    "removeControl": {
                      "response": {
                        "$ref": "GoogleCloudRetailV2ServingConfig"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}:removeControl",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRetailV2RemoveControlRequest"
                      },
                      "parameterOrder": [
                        "servingConfig"
                      ],
                      "description": "Disables a Control on the specified ServingConfig. The control is removed from the ServingConfig. Returns a NOT_FOUND error if the Control is not enabled for the ServingConfig.",
                      "parameters": {
                        "servingConfig": {
                          "type": "string",
                          "description": "Required. The source ServingConfig resource name . Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$"
                        }
                      },
                      "path": "v2/{+servingConfig}:removeControl",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "retail.projects.locations.catalogs.servingConfigs.removeControl"
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The resource name of the ServingConfig to delete. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "retail.projects.locations.catalogs.servingConfigs.delete",
                      "path": "v2/{+name}"
                    },
                    "addControl": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2ServingConfig"
                      },
                      "description": "Enables a Control on the specified ServingConfig. The control is added in the last position of the list of controls it belongs to (e.g. if it's a facet spec control it will be applied in the last position of servingConfig.facetSpecIds) Returns a ALREADY_EXISTS error if the control has already been applied. Returns a FAILED_PRECONDITION error if the addition could exceed maximum number of control allowed for that type of control.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}:addControl",
                      "parameters": {
                        "servingConfig": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$",
                          "description": "Required. The source ServingConfig resource name . Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`",
                          "type": "string",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudRetailV2AddControlRequest"
                      },
                      "parameterOrder": [
                        "servingConfig"
                      ],
                      "httpMethod": "POST",
                      "path": "v2/{+servingConfig}:addControl",
                      "id": "retail.projects.locations.catalogs.servingConfigs.addControl"
                    },
                    "search": {
                      "parameters": {
                        "placement": {
                          "location": "path",
                          "description": "Required. The resource name of the Retail Search serving config, such as `projects/*/locations/global/catalogs/default_catalog/servingConfigs/default_serving_config` or the name of the legacy placement resource, such as `projects/*/locations/global/catalogs/default_catalog/placements/default_search`. This field is used to identify the serving configuration name and the set of models that will be used to make the search.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/servingConfigs/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudRetailV2SearchRequest"
                      },
                      "httpMethod": "POST",
                      "description": "Performs a search. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                      "path": "v2/{+placement}:search",
                      "parameterOrder": [
                        "placement"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRetailV2SearchResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs/{servingConfigsId}:search",
                      "id": "retail.projects.locations.catalogs.servingConfigs.search"
                    },
                    "create": {
                      "response": {
                        "$ref": "GoogleCloudRetailV2ServingConfig"
                      },
                      "id": "retail.projects.locations.catalogs.servingConfigs.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "servingConfigId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The ID to use for the ServingConfig, which will become the final component of the ServingConfig's resource name. This value should be 4-63 characters, and valid characters are /a-z-_/."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                          "description": "Required. Full resource name of parent. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "path": "v2/{+parent}/servingConfigs",
                      "request": {
                        "$ref": "GoogleCloudRetailV2ServingConfig"
                      },
                      "description": "Creates a ServingConfig. A maximum of 100 ServingConfigs are allowed in a Catalog, otherwise a FAILED_PRECONDITION error is returned.",
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/servingConfigs"
                    }
                  }
                },
                "branches": {
                  "resources": {
                    "products": {
                      "methods": {
                        "import": {
                          "httpMethod": "POST",
                          "id": "retail.projects.locations.catalogs.branches.products.import",
                          "path": "v2/{+parent}/products:import",
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "GoogleCloudRetailV2ImportProductsRequest"
                          },
                          "parameters": {
                            "parent": {
                              "description": "Required. `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch` If no updateMask is specified, requires products.create permission. If updateMask is specified, requires products.update permission.",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$"
                            }
                          },
                          "description": "Bulk import of multiple Products. Request processing may be synchronous. Non-existing items are created. Note that it is possible for a subset of the Products to be successfully updated.",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products:import",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "setInventory": {
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "path": "v2/{+name}:setInventory",
                          "request": {
                            "$ref": "GoogleCloudRetailV2SetInventoryRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST",
                          "id": "retail.projects.locations.catalogs.branches.products.setInventory",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:setInventory",
                          "description": "Updates inventory information for a Product while respecting the last update timestamps of each inventory field. This process is asynchronous and does not require the Product to exist before updating fulfillment information. If the request is valid, the update is enqueued and processed downstream. As a consequence, when a response is returned, updates are not immediately manifested in the Product queried by ProductService.GetProduct or ProductService.ListProducts. When inventory is updated with ProductService.CreateProduct and ProductService.UpdateProduct, the specified inventory field value(s) overwrite any existing value(s) while ignoring the last update time for this field. Furthermore, the last update times for the specified inventory fields are overwritten by the times of the ProductService.CreateProduct or ProductService.UpdateProduct request. If no inventory fields are set in CreateProductRequest.product, then any pre-existing inventory information for this product is used. If no inventory fields are set in SetInventoryRequest.set_mask, then any existing inventory information is preserved. Pre-existing inventory information can only be updated with ProductService.SetInventory, ProductService.AddFulfillmentPlaces, and ProductService.RemoveFulfillmentPlaces. The returned Operations is obsolete after one day, and the GetOperation API returns `NOT_FOUND` afterwards. If conflicting updates are issued, the Operations associated with the stale updates are not marked as done until they are obsolete. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "description": "Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.",
                              "required": true
                            }
                          }
                        },
                        "delete": {
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}",
                          "id": "retail.projects.locations.catalogs.branches.products.delete",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "description": "Deletes a Product.",
                          "path": "v2/{+name}",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to delete the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the Product to delete does not exist, a NOT_FOUND error is returned. The Product to delete can neither be a Product.Type.COLLECTION Product member nor a Product.Type.PRIMARY Product with more than one variants. Otherwise, an INVALID_ARGUMENT error is returned. All inventory information for the named Product will be deleted.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "type": "string"
                            }
                          },
                          "httpMethod": "DELETE"
                        },
                        "create": {
                          "description": "Creates a Product.",
                          "request": {
                            "$ref": "GoogleCloudRetailV2Product"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "productId": {
                              "description": "Required. The ID to use for the Product, which will become the final component of the Product.name. If the caller does not have permission to create the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. This field must be unique among all Products with the same parent. Otherwise, an ALREADY_EXISTS error is returned. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
                              "location": "query",
                              "type": "string"
                            },
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "Required. The parent catalog resource name, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch`."
                            }
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products",
                          "path": "v2/{+parent}/products",
                          "id": "retail.projects.locations.catalogs.branches.products.create",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudRetailV2Product"
                          }
                        },
                        "patch": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Updates a Product.",
                          "parameters": {
                            "allowMissing": {
                              "description": "If set to true, and the Product is not found, a new Product will be created. In this situation, `update_mask` is ignored.",
                              "type": "boolean",
                              "location": "query"
                            },
                            "updateMask": {
                              "description": "Indicates which fields in the provided Product to update. The immutable and output only fields are NOT supported. If not set, all supported fields (the fields that are neither immutable nor output only) are updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned. The attribute key can be updated by setting the mask path as \"attributes.${key_name}\". If a key name is present in the mask but not in the patching product from the request, this key will be deleted after the update.",
                              "location": "query",
                              "type": "string",
                              "format": "google-fieldmask"
                            },
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "location": "path",
                              "description": "Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.",
                              "type": "string",
                              "required": true
                            }
                          },
                          "id": "retail.projects.locations.catalogs.branches.products.patch",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}",
                          "response": {
                            "$ref": "GoogleCloudRetailV2Product"
                          },
                          "path": "v2/{+name}",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "GoogleCloudRetailV2Product"
                          },
                          "httpMethod": "PATCH"
                        },
                        "removeLocalInventories": {
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "product"
                          ],
                          "request": {
                            "$ref": "GoogleCloudRetailV2RemoveLocalInventoriesRequest"
                          },
                          "id": "retail.projects.locations.catalogs.branches.products.removeLocalInventories",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:removeLocalInventories",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "path": "v2/{+product}:removeLocalInventories",
                          "description": "Remove local inventory information for a Product at a list of places at a removal timestamp. This process is asynchronous. If the request is valid, the removal will be enqueued and processed downstream. As a consequence, when a response is returned, removals are not immediately manifested in the Product queried by ProductService.GetProduct or ProductService.ListProducts. Local inventory information can only be removed using this method. ProductService.CreateProduct and ProductService.UpdateProduct has no effect on local inventories. The returned Operations will be obsolete after 1 day, and GetOperation API will return NOT_FOUND afterwards. If conflicting updates are issued, the Operations associated with the stale updates will not be marked as done until being obsolete. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                          "parameters": {
                            "product": {
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            }
                          }
                        },
                        "get": {
                          "id": "retail.projects.locations.catalogs.branches.products.get",
                          "response": {
                            "$ref": "GoogleCloudRetailV2Product"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Gets a Product.",
                          "path": "v2/{+name}",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the requested Product does not exist, a NOT_FOUND error is returned.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$"
                            }
                          }
                        },
                        "removeFulfillmentPlaces": {
                          "id": "retail.projects.locations.catalogs.branches.products.removeFulfillmentPlaces",
                          "httpMethod": "POST",
                          "parameters": {
                            "product": {
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned.",
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$"
                            }
                          },
                          "description": "Incrementally removes place IDs from a Product.fulfillment_info.place_ids. This process is asynchronous and does not require the Product to exist before updating fulfillment information. If the request is valid, the update will be enqueued and processed downstream. As a consequence, when a response is returned, the removed place IDs are not immediately manifested in the Product queried by ProductService.GetProduct or ProductService.ListProducts. The returned Operations will be obsolete after 1 day, and GetOperation API will return NOT_FOUND afterwards. If conflicting updates are issued, the Operations associated with the stale updates will not be marked as done until being obsolete. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                          "parameterOrder": [
                            "product"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:removeFulfillmentPlaces",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "request": {
                            "$ref": "GoogleCloudRetailV2RemoveFulfillmentPlacesRequest"
                          },
                          "path": "v2/{+product}:removeFulfillmentPlaces"
                        },
                        "list": {
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products",
                          "path": "v2/{+parent}/products",
                          "description": "Gets a list of Products.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "pageSize": {
                              "description": "Maximum number of Products to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is returned.",
                              "format": "int32",
                              "location": "query",
                              "type": "integer"
                            },
                            "readMask": {
                              "format": "google-fieldmask",
                              "description": "The fields of Product to return in the responses. If not set or empty, the following fields are returned: * Product.name * Product.id * Product.title * Product.uri * Product.images * Product.price_info * Product.brands If \"*\" is provided, all fields are returned. Product.name is always returned no matter what mask is set. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned.",
                              "location": "query",
                              "type": "string"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "A filter to apply on the list results. Supported features: * List all the products under the parent branch if filter is unset. * List Product.Type.VARIANT Products sharing the same Product.Type.PRIMARY Product. For example: `primary_product_id = \"some_product_id\"` * List Products bundled in a Product.Type.COLLECTION Product. For example: `collection_product_id = \"some_product_id\"` * List Products with a partibular type. For example: `type = \"PRIMARY\"` `type = \"VARIANT\"` `type = \"COLLECTION\"` If the field is unrecognizable, an INVALID_ARGUMENT error is returned. If the specified Product.Type.PRIMARY Product or Product.Type.COLLECTION Product does not exist, a NOT_FOUND error is returned."
                            },
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+$",
                              "type": "string",
                              "description": "Required. The parent branch resource name, such as `projects/*/locations/global/catalogs/default_catalog/branches/0`. Use `default_branch` as the branch ID, to list products under the default branch. If the caller does not have permission to list Products under this branch, regardless of whether or not this branch exists, a PERMISSION_DENIED error is returned.",
                              "location": "path"
                            },
                            "pageToken": {
                              "description": "A page token ListProductsResponse.next_page_token, received from a previous ProductService.ListProducts call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to ProductService.ListProducts must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudRetailV2ListProductsResponse"
                          },
                          "id": "retail.projects.locations.catalogs.branches.products.list"
                        },
                        "addLocalInventories": {
                          "request": {
                            "$ref": "GoogleCloudRetailV2AddLocalInventoriesRequest"
                          },
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "product": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "location": "path",
                              "required": true,
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned.",
                              "type": "string"
                            }
                          },
                          "path": "v2/{+product}:addLocalInventories",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:addLocalInventories",
                          "description": "Updates local inventory information for a Product at a list of places, while respecting the last update timestamps of each inventory field. This process is asynchronous and does not require the Product to exist before updating inventory information. If the request is valid, the update will be enqueued and processed downstream. As a consequence, when a response is returned, updates are not immediately manifested in the Product queried by ProductService.GetProduct or ProductService.ListProducts. Local inventory information can only be modified using this method. ProductService.CreateProduct and ProductService.UpdateProduct has no effect on local inventories. The returned Operations will be obsolete after 1 day, and GetOperation API will return NOT_FOUND afterwards. If conflicting updates are issued, the Operations associated with the stale updates will not be marked as done until being obsolete. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                          "parameterOrder": [
                            "product"
                          ],
                          "id": "retail.projects.locations.catalogs.branches.products.addLocalInventories"
                        },
                        "addFulfillmentPlaces": {
                          "path": "v2/{+product}:addFulfillmentPlaces",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudRetailV2AddFulfillmentPlacesRequest"
                          },
                          "description": "Incrementally adds place IDs to Product.fulfillment_info.place_ids. This process is asynchronous and does not require the Product to exist before updating fulfillment information. If the request is valid, the update will be enqueued and processed downstream. As a consequence, when a response is returned, the added place IDs are not immediately manifested in the Product queried by ProductService.GetProduct or ProductService.ListProducts. The returned Operations will be obsolete after 1 day, and GetOperation API will return NOT_FOUND afterwards. If conflicting updates are issued, the Operations associated with the stale updates will not be marked as done until being obsolete. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                          "parameterOrder": [
                            "product"
                          ],
                          "parameters": {
                            "product": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. Full resource name of Product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`. If the caller does not have permission to access the Product, regardless of whether or not it exists, a PERMISSION_DENIED error is returned.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/products/.*$",
                              "required": true
                            }
                          },
                          "id": "retail.projects.locations.catalogs.branches.products.addFulfillmentPlaces",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/products/{productsId}:addFulfillmentPlaces",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          }
                        }
                      }
                    },
                    "operations": {
                      "methods": {
                        "get": {
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "id": "retail.projects.locations.catalogs.branches.operations.get",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/branches/[^/]+/operations/[^/]+$",
                              "description": "The name of the operation resource."
                            }
                          },
                          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                          "path": "v2/{+name}",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/branches/{branchesId}/operations/{operationsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "getDefaultBranch": {
                  "description": "Get which branch is currently default branch set by CatalogService.SetDefaultBranch method under a specified parent catalog.",
                  "httpMethod": "GET",
                  "path": "v2/{+catalog}:getDefaultBranch",
                  "parameterOrder": [
                    "catalog"
                  ],
                  "parameters": {
                    "catalog": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                      "type": "string",
                      "description": "The parent catalog resource name, such as `projects/*/locations/global/catalogs/default_catalog`.",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}:getDefaultBranch",
                  "id": "retail.projects.locations.catalogs.getDefaultBranch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudRetailV2GetDefaultBranchResponse"
                  }
                },
                "getCompletionConfig": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "retail.projects.locations.catalogs.getCompletionConfig",
                  "description": "Gets a CompletionConfig.",
                  "response": {
                    "$ref": "GoogleCloudRetailV2CompletionConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/completionConfig",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/completionConfig$",
                      "description": "Required. Full CompletionConfig resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/completionConfig`",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "description": "Required. Immutable. The fully qualified resource name of the catalog.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Indicates which fields in the provided Catalog to update. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned."
                    }
                  },
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudRetailV2Catalog"
                  },
                  "id": "retail.projects.locations.catalogs.patch",
                  "response": {
                    "$ref": "GoogleCloudRetailV2Catalog"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}",
                  "description": "Updates the Catalogs.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists all the Catalogs associated with the project.",
                  "id": "retail.projects.locations.catalogs.list",
                  "response": {
                    "$ref": "GoogleCloudRetailV2ListCatalogsResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A page token ListCatalogsResponse.next_page_token, received from a previous CatalogService.ListCatalogs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to CatalogService.ListCatalogs must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned."
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The account resource name with an associated location. If the caller does not have permission to list Catalogs under this location, regardless of whether or not this location exists, a PERMISSION_DENIED error is returned."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum number of Catalogs to return. If unspecified, defaults to 50. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT is returned.",
                      "type": "integer"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/catalogs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "completeQuery": {
                  "httpMethod": "GET",
                  "description": "Completes the specified prefix with keyword suggestions. This feature is only available for users who have Retail Search enabled. Enable Retail Search on Cloud Console before using this feature.",
                  "id": "retail.projects.locations.catalogs.completeQuery",
                  "response": {
                    "$ref": "GoogleCloudRetailV2CompleteQueryResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v2/{+catalog}:completeQuery",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}:completeQuery",
                  "parameterOrder": [
                    "catalog"
                  ],
                  "parameters": {
                    "visitorId": {
                      "description": "Required field. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "query": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The query used to generate suggestions. The maximum number of allowed characters is 255."
                    },
                    "maxSuggestions": {
                      "type": "integer",
                      "location": "query",
                      "description": "Completion max suggestions. If left unset or set to 0, then will fallback to the configured value CompletionConfig.max_suggestions. The maximum allowed max suggestions is 20. If it is set higher, it will be capped by 20.",
                      "format": "int32"
                    },
                    "deviceType": {
                      "type": "string",
                      "location": "query",
                      "description": "The device type context for completion suggestions. It is useful to apply different suggestions on different device types, e.g. `DESKTOP`, `MOBILE`. If it is empty, the suggestions are across all device types. Supported formats: * `UNKNOWN_DEVICE_TYPE` * `DESKTOP` * `MOBILE` * A customized string starts with `OTHER_`, e.g. `OTHER_IPHONE`."
                    },
                    "languageCodes": {
                      "type": "string",
                      "description": "Note that this field applies for `user-data` dataset only. For requests with `cloud-retail` dataset, setting this field has no effect. The language filters applied to the output suggestions. If set, it should contain the language of the query. If not set, suggestions are returned without considering language restrictions. This is the BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47). The maximum number of language codes is 3.",
                      "repeated": true,
                      "location": "query"
                    },
                    "dataset": {
                      "description": "Determines which dataset to use for fetching completion. \"user-data\" will use the imported dataset through CompletionService.ImportCompletionData. \"cloud-retail\" will use the dataset generated by cloud retail based on user events. If leave empty, it will use the \"user-data\". Current supported values: * user-data * cloud-retail: This option requires enabling auto-learning function first. See [guidelines](https://cloud.google.com/retail/docs/completion-overview#generated-completion-dataset).",
                      "type": "string",
                      "location": "query"
                    },
                    "catalog": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Catalog for which the completion is performed. Full resource name of catalog, such as `projects/*/locations/global/catalogs/default_catalog`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$"
                    }
                  }
                },
                "getAttributesConfig": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Full AttributesConfig resource name. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$"
                    }
                  },
                  "id": "retail.projects.locations.catalogs.getAttributesConfig",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Gets an AttributesConfig.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudRetailV2AttributesConfig"
                  }
                },
                "updateAttributesConfig": {
                  "response": {
                    "$ref": "GoogleCloudRetailV2AttributesConfig"
                  },
                  "description": "Updates the AttributesConfig. The catalog attributes in the request will be updated in the catalog, or inserted if they do not exist. Existing catalog attributes not included in the request will remain unchanged. Attributes that are assigned to products, but do not exist at the catalog level, are always included in the response. The product attribute is assigned default values for missing catalog attribute fields, e.g., searchable and dynamic facetable options.",
                  "path": "v2/{+name}",
                  "id": "retail.projects.locations.catalogs.updateAttributesConfig",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Indicates which fields in the provided AttributesConfig to update. The following is the only supported field: * AttributesConfig.catalog_attributes If not set, all supported fields are updated."
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/attributesConfig$",
                      "description": "Required. Immutable. The fully qualified resource name of the attribute config. Format: `projects/*/locations/*/catalogs/*/attributesConfig`",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/attributesConfig",
                  "request": {
                    "$ref": "GoogleCloudRetailV2AttributesConfig"
                  },
                  "httpMethod": "PATCH"
                },
                "updateCompletionConfig": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Immutable. Fully qualified name `projects/*/locations/*/catalogs/*/completionConfig`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/completionConfig$",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Indicates which fields in the provided CompletionConfig to update. The following are the only supported fields: * CompletionConfig.matching_order * CompletionConfig.max_suggestions * CompletionConfig.min_prefix_length * CompletionConfig.auto_learning If not set, all supported fields are updated."
                    }
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudRetailV2CompletionConfig"
                  },
                  "id": "retail.projects.locations.catalogs.updateCompletionConfig",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleCloudRetailV2CompletionConfig"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/completionConfig",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the CompletionConfigs.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "setDefaultBranch": {
                  "httpMethod": "POST",
                  "path": "v2/{+catalog}:setDefaultBranch",
                  "request": {
                    "$ref": "GoogleCloudRetailV2SetDefaultBranchRequest"
                  },
                  "parameters": {
                    "catalog": {
                      "location": "path",
                      "description": "Full resource name of the catalog, such as `projects/*/locations/global/catalogs/default_catalog`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "retail.projects.locations.catalogs.setDefaultBranch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}:setDefaultBranch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "catalog"
                  ],
                  "description": "Set a specified branch id as default branch. API methods such as SearchService.Search, ProductService.GetProduct, ProductService.ListProducts will treat requests using \"default_branch\" to the actual branch id set as default. For example, if `projects/*/locations/*/catalogs/*/branches/1` is set as default, setting SearchRequest.branch to `projects/*/locations/*/catalogs/*/branches/default_branch` is equivalent to setting SearchRequest.branch to `projects/*/locations/*/catalogs/*/branches/1`. Using multiple branches can be useful when developers would like to have a staging branch to test and verify for future usage. When it becomes ready, developers switch on the staging branch using this API while keeping using `projects/*/locations/*/catalogs/*/branches/default_branch` as SearchRequest.branch to route the traffic to this staging branch. CAUTION: If you have live predict/search traffic, switching the default branch could potentially cause outages if the ID space of the new branch is very different from the old one. More specifically: * PredictionService will only return product IDs from branch {newBranch}. * SearchService will only return product IDs from branch {newBranch} (if branch is not explicitly set). * UserEventService will only join events with products from branch {newBranch}."
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v2/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "retail.projects.locations.operations.list",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The standard list page size."
                    }
                  }
                },
                "get": {
                  "id": "retail.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/operations/{operationsId}",
              "id": "retail.projects.operations.get",
              "path": "v2/{+name}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "id": "retail.projects.operations.list",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The standard list page size."
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The name of the operation's parent resource.",
                  "pattern": "^projects/[^/]+$"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v2/{+name}/operations",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/operations"
            }
          }
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudRetailV2SearchResponseQueryExpansionInfo": {
      "type": "object",
      "description": "Information describing query expansion including whether expansion has occurred.",
      "id": "GoogleCloudRetailV2SearchResponseQueryExpansionInfo",
      "properties": {
        "expandedQuery": {
          "type": "boolean",
          "description": "Bool describing whether query expansion has occurred."
        },
        "pinnedResultCount": {
          "description": "Number of pinned results. This field will only be set when expansion happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "GoogleCloudRetailV2betaImportProductsResponse": {
      "id": "GoogleCloudRetailV2betaImportProductsResponse",
      "properties": {
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2betaImportErrorsConfig",
          "description": "Echoes the destination for the complete errors in the request if set."
        },
        "errorSamples": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "A sample of errors encountered while processing the request."
        }
      },
      "description": "Response of the ImportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaRemoveLocalInventoriesResponse": {
      "type": "object",
      "description": "Response of the ProductService.RemoveLocalInventories API. Currently empty because there is no meaningful response populated from the ProductService.RemoveLocalInventories method.",
      "id": "GoogleCloudRetailV2alphaRemoveLocalInventoriesResponse",
      "properties": {}
    },
    "GoogleCloudRetailV2RemoveControlRequest": {
      "description": "Request for RemoveControl method.",
      "type": "object",
      "id": "GoogleCloudRetailV2RemoveControlRequest",
      "properties": {
        "controlId": {
          "description": "Required. The id of the control to apply. Assumed to be in the same catalog as the serving config.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2ImportCompletionDataRequest": {
      "description": "Request message for ImportCompletionData methods.",
      "properties": {
        "inputConfig": {
          "$ref": "GoogleCloudRetailV2CompletionDataInputConfig",
          "description": "Required. The desired input location of the data."
        },
        "notificationPubsubTopic": {
          "type": "string",
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`."
        }
      },
      "id": "GoogleCloudRetailV2ImportCompletionDataRequest",
      "type": "object"
    },
    "GoogleCloudRetailV2betaExportUserEventsResponse": {
      "id": "GoogleCloudRetailV2betaExportUserEventsResponse",
      "properties": {
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "A sample of errors encountered while processing the request.",
          "type": "array"
        },
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2betaExportErrorsConfig",
          "description": "This field is never set."
        },
        "outputResult": {
          "description": "Output result indicating where the data were exported to.",
          "$ref": "GoogleCloudRetailV2betaOutputResult"
        }
      },
      "description": "Response of the ExportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "type": "object"
    },
    "GoogleCloudRetailV2PredictResponsePredictionResult": {
      "id": "GoogleCloudRetailV2PredictResponsePredictionResult",
      "type": "object",
      "description": "PredictionResult represents the recommendation prediction results.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any"
          },
          "type": "object",
          "description": "Additional product metadata / annotations. Possible values: * `product`: JSON representation of the product. Is set if `returnProduct` is set to true in `PredictRequest.params`. * `score`: Prediction score in double value. Is set if `returnScore` is set to true in `PredictRequest.params`."
        },
        "id": {
          "type": "string",
          "description": "ID of the recommended product"
        }
      }
    },
    "GoogleCloudRetailV2alphaSetInventoryMetadata": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2alphaSetInventoryMetadata",
      "description": "Metadata related to the progress of the SetInventory operation. Currently empty because there is no meaningful metadata populated from the ProductService.SetInventory method."
    },
    "GoogleCloudRetailV2GcsSource": {
      "description": "Google Cloud Storage location for input content.",
      "type": "object",
      "properties": {
        "dataSchema": {
          "type": "string",
          "description": "The schema to use when parsing the data from the source. Supported values for product imports: * `product` (default): One JSON Product per line. Each product must have a valid Product.id. * `product_merchant_center`: See [Importing catalog data from Merchant Center](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog#mc). Supported values for user events imports: * `user_event` (default): One JSON UserEvent per line. * `user_event_ga360`: Using https://support.google.com/analytics/answer/3437719. Supported values for control imports: * `control` (default): One JSON Control per line. Supported values for catalog attribute imports: * `catalog_attribute` (default): One CSV CatalogAttribute per line."
        },
        "inputUris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Google Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files, and each file can be up to 2 GB. See [Importing product information](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog) for the expected file format and setup instructions."
        }
      },
      "id": "GoogleCloudRetailV2GcsSource"
    },
    "GoogleCloudRetailV2Rule": {
      "description": "A rule is a condition-action pair * A condition defines when a rule is to be triggered. * An action specifies what occurs on that trigger. Currently rules only work for controls with SOLUTION_TYPE_SEARCH.",
      "type": "object",
      "properties": {
        "ignoreAction": {
          "$ref": "GoogleCloudRetailV2RuleIgnoreAction",
          "description": "Ignores specific terms from query during search."
        },
        "condition": {
          "description": "Required. The condition that triggers the rule. If the condition is empty, the rule will always apply.",
          "$ref": "GoogleCloudRetailV2Condition"
        },
        "doNotAssociateAction": {
          "$ref": "GoogleCloudRetailV2RuleDoNotAssociateAction",
          "description": "Prevents term from being associated with other terms."
        },
        "boostAction": {
          "description": "A boost action.",
          "$ref": "GoogleCloudRetailV2RuleBoostAction"
        },
        "filterAction": {
          "$ref": "GoogleCloudRetailV2RuleFilterAction",
          "description": "Filters results."
        },
        "twowaySynonymsAction": {
          "$ref": "GoogleCloudRetailV2RuleTwowaySynonymsAction",
          "description": "Treats a set of terms as synonyms of one another."
        },
        "onewaySynonymsAction": {
          "description": "Treats specific term as a synonym with a group of terms. Group of terms will not be treated as synonyms with the specific term.",
          "$ref": "GoogleCloudRetailV2RuleOnewaySynonymsAction"
        },
        "replacementAction": {
          "description": "Replaces specific terms in the query.",
          "$ref": "GoogleCloudRetailV2RuleReplacementAction"
        },
        "redirectAction": {
          "description": "Redirects a shopper to a specific page.",
          "$ref": "GoogleCloudRetailV2RuleRedirectAction"
        }
      },
      "id": "GoogleCloudRetailV2Rule"
    },
    "GoogleCloudRetailV2RejoinUserEventsResponse": {
      "properties": {
        "rejoinedUserEventsCount": {
          "format": "int64",
          "description": "Number of user events that were joined with latest product catalog.",
          "type": "string"
        }
      },
      "description": "Response message for `RejoinUserEvents` method.",
      "type": "object",
      "id": "GoogleCloudRetailV2RejoinUserEventsResponse"
    },
    "GoogleCloudRetailV2ServingConfig": {
      "type": "object",
      "description": "Configures metadata that is used to generate serving time results (e.g. search results or recommendation predictions).",
      "id": "GoogleCloudRetailV2ServingConfig",
      "properties": {
        "name": {
          "description": "Immutable. Fully qualified name `projects/*/locations/global/catalogs/*/servingConfig/*`",
          "type": "string"
        },
        "diversityType": {
          "enum": [
            "DIVERSITY_TYPE_UNSPECIFIED",
            "RULE_BASED_DIVERSITY",
            "DATA_DRIVEN_DIVERSITY"
          ],
          "description": "What kind of diversity to use - data driven or rule based.",
          "enumDescriptions": [
            "Default value.",
            "Rule based diversity.",
            "Data driven diversity."
          ],
          "type": "string"
        },
        "doNotAssociateControlIds": {
          "type": "array",
          "description": "Condition do not associate specifications. If multiple do not associate conditions match, all matching do not associate controls in the list will execute. - Order does not matter. - Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          }
        },
        "replacementControlIds": {
          "type": "array",
          "description": "Condition replacement specifications. - Applied according to the order in the list. - A previously replaced term can not be re-replaced. - Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          }
        },
        "filterControlIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Condition filter specifications. If a product matches multiple conditions in the specifications, filters from these specifications are all applied and combined via the AND operator. Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH."
        },
        "twowaySynonymsControlIds": {
          "description": "Condition synonyms specifications. If multiple syonyms conditions match, all matching synonyms control in the list will execute. Order of controls in the list will not matter. Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "priceRerankingLevel": {
          "type": "string",
          "description": "How much price ranking we want in serving results. Price reranking causes product items with a similar recommendation probability to be ordered by price, with the highest-priced items first. This setting could result in a decrease in click-through and conversion rates. Allowed values are: * `no-price-reranking` * `low-price-raranking` * `medium-price-reranking` * `high-price-reranking` If not specified, we choose default based on model type. Default value: `no-price-reranking`. Can only be set if solution_types is SOLUTION_TYPE_RECOMMENDATION."
        },
        "personalizationSpec": {
          "$ref": "GoogleCloudRetailV2SearchRequestPersonalizationSpec",
          "description": "The specification for personalization spec. Can only be set if solution_types is SOLUTION_TYPE_SEARCH. Notice that if both ServingConfig.personalization_spec and SearchRequest.personalization_spec are set. SearchRequest.personalization_spec will override ServingConfig.personalization_spec."
        },
        "boostControlIds": {
          "description": "Condition boost specifications. If a product matches multiple conditions in the specifications, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 100. Notice that if both ServingConfig.boost_control_ids and SearchRequest.boost_spec are set, the boost conditions from both places are evaluated. If a search request matches multiple boost conditions, the final boost score is equal to the sum of the boost scores from all matched boost conditions. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ignoreControlIds": {
          "description": "Condition ignore specifications. If multiple ignore conditions match, all matching ignore controls in the list will execute. - Order does not matter. - Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dynamicFacetSpec": {
          "description": "The specification for dynamically generated facets. Notice that only textual facets can be dynamically generated. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "$ref": "GoogleCloudRetailV2SearchRequestDynamicFacetSpec"
        },
        "facetControlIds": {
          "description": "Facet specifications for faceted search. If empty, no facets are returned. The ids refer to the ids of Control resources with only the Facet control set. These controls are assumed to be in the same Catalog as the ServingConfig. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "solutionTypes": {
          "description": "Required. Immutable. Specifies the solution types that a serving config can be associated with. Currently we support setting only one type of solution.",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Default value.",
              "Used for Recommendations AI.",
              "Used for Retail Search."
            ],
            "type": "string",
            "enum": [
              "SOLUTION_TYPE_UNSPECIFIED",
              "SOLUTION_TYPE_RECOMMENDATION",
              "SOLUTION_TYPE_SEARCH"
            ]
          }
        },
        "diversityLevel": {
          "type": "string",
          "description": "How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-diversity`. Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` If not specified, we choose default based on recommendation model type. Default value: `no-diversity`. Can only be set if solution_types is SOLUTION_TYPE_RECOMMENDATION."
        },
        "onewaySynonymsControlIds": {
          "description": "Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all matching oneway synonyms controls in the list will execute. Order of controls in the list will not matter. Maximum number of specifications is 100. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "redirectControlIds": {
          "type": "array",
          "description": "Condition redirect specifications. Only the first triggered redirect action is applied, even if multiple apply. Maximum number of specifications is 1000. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.",
          "items": {
            "type": "string"
          }
        },
        "modelId": {
          "description": "The id of the model in the same Catalog to use at serving time. Currently only RecommendationModels are supported: https://cloud.google.com/retail/recommendations-ai/docs/create-models Can be changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required when solution_types is SOLUTION_TYPE_RECOMMENDATION.",
          "type": "string"
        },
        "enableCategoryFilterLevel": {
          "type": "string",
          "description": "Whether to add additional category filters on the `similar-items` model. If not specified, we enable it by default. Allowed values are: * `no-category-match`: No additional filtering of original results from the model and the customer's filters. * `relaxed-category-match`: Only keep results with categories that match at least one item categories in the PredictRequests's context item. * If customer also sends filters in the PredictRequest, then the results will satisfy both conditions (user given and category match). Can only be set if solution_types is SOLUTION_TYPE_RECOMMENDATION."
        },
        "displayName": {
          "description": "Required. The human readable serving config display name. Used in Retail UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2RemoveLocalInventoriesResponse": {
      "id": "GoogleCloudRetailV2RemoveLocalInventoriesResponse",
      "properties": {},
      "type": "object",
      "description": "Response of the ProductService.RemoveLocalInventories API. Currently empty because there is no meaningful response populated from the ProductService.RemoveLocalInventories method."
    },
    "GoogleCloudRetailV2betaAddFulfillmentPlacesMetadata": {
      "description": "Metadata related to the progress of the AddFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the ProductService.AddFulfillmentPlaces method.",
      "properties": {},
      "id": "GoogleCloudRetailV2betaAddFulfillmentPlacesMetadata",
      "type": "object"
    },
    "GoogleCloudRetailLoggingErrorLog": {
      "type": "object",
      "properties": {
        "status": {
          "description": "The RPC status associated with the error log.",
          "$ref": "GoogleRpcStatus"
        },
        "serviceContext": {
          "$ref": "GoogleCloudRetailLoggingServiceContext",
          "description": "The service context in which this error has occurred."
        },
        "importPayload": {
          "$ref": "GoogleCloudRetailLoggingImportErrorContext",
          "description": "The error payload that is populated on LRO import APIs."
        },
        "context": {
          "description": "A description of the context in which the error occurred.",
          "$ref": "GoogleCloudRetailLoggingErrorContext"
        },
        "responsePayload": {
          "description": "The API response payload, represented as a protocol buffer. This is used to log some \"soft errors\", where the response is valid but we consider there are some quality issues like unjoined events. The following API responses are supported and no PII is included: \"google.cloud.retail.v2.PredictionService.Predict\" \"google.cloud.retail.v2.UserEventService.WriteUserEvent\" \"google.cloud.retail.v2.UserEventService.CollectUserEvent\"",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "message": {
          "description": "A message describing the error.",
          "type": "string"
        },
        "requestPayload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The API request payload, represented as a protocol buffer. Most API request types are supported. For example: \"type.googleapis.com/google.cloud.retail.v2.ProductService.CreateProductRequest\" \"type.googleapis.com/google.cloud.retail.v2.UserEventService.WriteUserEventRequest\"",
          "type": "object"
        }
      },
      "description": "An error log which is reported to the Error Reporting system. This proto a superset of google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.",
      "id": "GoogleCloudRetailLoggingErrorLog"
    },
    "GoogleCloudRetailV2ListControlsResponse": {
      "id": "GoogleCloudRetailV2ListControlsResponse",
      "description": "Response for ListControls method.",
      "properties": {
        "nextPageToken": {
          "description": "Pagination token, if not returned indicates the last page.",
          "type": "string"
        },
        "controls": {
          "description": "All the Controls for a given catalog.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2Control"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2betaPurgeMetadata": {
      "properties": {},
      "type": "object",
      "description": "Metadata related to the progress of the Purge operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "id": "GoogleCloudRetailV2betaPurgeMetadata"
    },
    "GoogleCloudRetailV2CustomAttribute": {
      "description": "A custom attribute that is not explicitly modeled in Product.",
      "id": "GoogleCloudRetailV2CustomAttribute",
      "properties": {
        "text": {
          "type": "array",
          "description": "The textual values of this custom attribute. For example, `[\"yellow\", \"green\"]` when the key is \"color\". Empty string is not allowed. Otherwise, an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.",
          "items": {
            "type": "string"
          }
        },
        "searchable": {
          "description": "This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are searchable by text queries in SearchService.Search. This field is ignored in a UserEvent. Only set if type text is set. Otherwise, a INVALID_ARGUMENT error is returned.",
          "type": "boolean"
        },
        "indexable": {
          "type": "boolean",
          "description": "This field is normally ignored unless AttributesConfig.attribute_config_level of the Catalog is set to the deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about product-level attribute configuration, see [Configuration modes](https://cloud.google.com/retail/docs/attribute-config#config-modes). If true, custom attribute values are indexed, so that they can be filtered, faceted or boosted in SearchService.Search. This field is ignored in a UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and SearchRequest.boost_spec for more details."
        },
        "numbers": {
          "items": {
            "format": "double",
            "type": "number"
          },
          "description": "The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is \"lengths_cm\". Exactly one of text or numbers should be set. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2betaImportCompletionDataResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaImportCompletionDataResponse",
      "properties": {
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      },
      "description": "Response of the ImportCompletionDataRequest. If the long running operation is done, this message is returned by the google.longrunning.Operations.response field if the operation is successful."
    },
    "GoogleCloudRetailV2alphaPurgeUserEventsResponse": {
      "type": "object",
      "properties": {
        "purgedEventsCount": {
          "type": "string",
          "description": "The total count of events purged as a result of the operation.",
          "format": "int64"
        }
      },
      "description": "Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.",
      "id": "GoogleCloudRetailV2alphaPurgeUserEventsResponse"
    },
    "GoogleCloudRetailV2Image": {
      "properties": {
        "width": {
          "format": "int32",
          "description": "Width of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "integer"
        },
        "height": {
          "type": "integer",
          "description": "Height of the image in number of pixels. This field must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.",
          "format": "int32"
        },
        "uri": {
          "type": "string",
          "description": "Required. URI of the image. This field must be a valid UTF-8 encoded URI with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image)."
        }
      },
      "description": "Product image. Recommendations AI and Retail Search do not use product images to improve prediction and search results. However, product images can be returned in results, and are shown in prediction or search previews in the console.",
      "id": "GoogleCloudRetailV2Image",
      "type": "object"
    },
    "GoogleCloudRetailV2betaTuneModelResponse": {
      "description": "Response associated with a tune operation.",
      "properties": {},
      "id": "GoogleCloudRetailV2betaTuneModelResponse",
      "type": "object"
    },
    "GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec": {
      "id": "GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec",
      "description": "Boost applies to products which match a condition.",
      "properties": {
        "boost": {
          "description": "Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.",
          "format": "float",
          "type": "number"
        },
        "condition": {
          "type": "string",
          "description": "An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID \"product_1\" or \"product_2\", and color \"Red\" or \"Blue\": * (id: ANY(\"product_1\", \"product_2\")) AND (colorFamilies: ANY(\"Red\",\"Blue\"))"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2BigQuerySource": {
      "properties": {
        "gcsStagingDir": {
          "description": "Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.",
          "type": "string"
        },
        "datasetId": {
          "description": "Required. The BigQuery data set to copy the data from with a length limit of 1,024 characters.",
          "type": "string"
        },
        "partitionDate": {
          "description": "BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format. Only supported in ImportProductsRequest.",
          "$ref": "GoogleTypeDate"
        },
        "dataSchema": {
          "type": "string",
          "description": "The schema to use when parsing the data from the source. Supported values for product imports: * `product` (default): One JSON Product per line. Each product must have a valid Product.id. * `product_merchant_center`: See [Importing catalog data from Merchant Center](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog#mc). Supported values for user events imports: * `user_event` (default): One JSON UserEvent per line. * `user_event_ga360`: The schema is available here: https://support.google.com/analytics/answer/3437719. * `user_event_ga4`: The schema is available here: https://support.google.com/analytics/answer/7029846. Supported values for auto-completion imports: * `suggestions` (default): One JSON completion suggestion per line. * `denylist`: One JSON deny suggestion per line. * `allowlist`: One JSON allow suggestion per line."
        },
        "tableId": {
          "type": "string",
          "description": "Required. The BigQuery table to copy the data from with a length limit of 1,024 characters."
        },
        "projectId": {
          "type": "string",
          "description": "The project ID (can be project # or ID) that the BigQuery source is in with a length limit of 128 characters. If not specified, inherits the project ID from the parent request."
        }
      },
      "description": "BigQuery source import data from.",
      "type": "object",
      "id": "GoogleCloudRetailV2BigQuerySource"
    },
    "GoogleCloudRetailV2UserEvent": {
      "type": "object",
      "description": "UserEvent captures all metadata information Retail API needs to know about how end users interact with customers' website.",
      "properties": {
        "searchQuery": {
          "type": "string",
          "description": "The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "pageCategories": {
          "type": "array",
          "description": "The categories associated with a category page. To represent full path of category, use '\u003e' sign to separate different hierarchies. If '\u003e' is part of the category name, replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: \"pageCategories\" : [\"Sales \u003e 2017 Black Friday Deals\"]. Required for `category-page-view` events. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.",
          "items": {
            "type": "string"
          }
        },
        "attributionToken": {
          "description": "Highly recommended for user events that are the result of PredictionService.Predict. This field enables accurate attribution of recommendation model performance. The value must be a valid PredictResponse.attribution_token for user events that are the result of PredictionService.Predict. The value must be a valid SearchResponse.attribution_token for user events that are the result of SearchService.Search. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass PredictResponse.attribution_token as a URL parameter to product K's page. When recording events on product K's page, log the PredictResponse.attribution_token to this field.",
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2CustomAttribute"
          },
          "description": "Extra user event features to include in the recommendation model. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Retail API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is traffic_channel, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways."
        },
        "experimentIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Retail API, using different recommendation models)."
        },
        "purchaseTransaction": {
          "$ref": "GoogleCloudRetailV2PurchaseTransaction",
          "description": "A transaction represents the entire purchase transaction. Required for `purchase-complete` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "completionDetail": {
          "$ref": "GoogleCloudRetailV2CompletionDetail",
          "description": "The main auto-completion details related to the event. This field should be set for `search` event when autocomplete function is enabled and the user clicks a suggestion for search."
        },
        "uri": {
          "description": "Complete URL (window.location.href) of the user's current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters.",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. See SearchRequest.filter for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "visitorId": {
          "type": "string",
          "description": "Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field."
        },
        "productDetails": {
          "items": {
            "$ref": "GoogleCloudRetailV2ProductDetail"
          },
          "type": "array",
          "description": "The main product details related to the event. This field is optional except for the following event types: * `add-to-cart` * `detail-page-view` * `purchase-complete` In a `search` event, this field represents the products returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new `search` event with different product_details is desired. The end user may have not finished browsing the whole page yet."
        },
        "orderBy": {
          "type": "string",
          "description": "The order in which products are returned. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "eventType": {
          "description": "Required. User event type. Allowed values are: * `add-to-cart`: Products being added to cart. * `category-page-view`: Special pages such as sale or promotion pages viewed. * `detail-page-view`: Products detail page viewed. * `home-page-view`: Homepage viewed. * `promotion-offered`: Promotion is offered to a user. * `promotion-not-offered`: Promotion is not offered to a user. * `purchase-complete`: User finishing a purchase. * `search`: Product search. * `shopping-cart-page-view`: User viewing a shopping cart.",
          "type": "string"
        },
        "cartId": {
          "description": "The ID or name of the associated shopping cart. This ID is used to associate multiple items added or present in the cart before purchase. This can only be set for `add-to-cart`, `purchase-complete`, or `shopping-cart-page-view` events.",
          "type": "string"
        },
        "userInfo": {
          "$ref": "GoogleCloudRetailV2UserInfo",
          "description": "User information."
        },
        "offset": {
          "description": "An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an INVALID_ARGUMENT is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "integer",
          "format": "int32"
        },
        "eventTime": {
          "description": "Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.",
          "format": "google-datetime",
          "type": "string"
        },
        "sessionId": {
          "description": "A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the sesion_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add visitor_id as prefix.",
          "type": "string"
        },
        "pageViewId": {
          "description": "A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageViewId` property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.",
          "type": "string"
        },
        "referrerUri": {
          "description": "The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2UserEvent"
    },
    "GoogleCloudRetailV2RemoveLocalInventoriesRequest": {
      "description": "Request message for ProductService.RemoveLocalInventories method.",
      "properties": {
        "placeIds": {
          "items": {
            "type": "string"
          },
          "description": "Required. A list of place IDs to have their inventory deleted. At most 3000 place IDs are allowed per request.",
          "type": "array"
        },
        "removeTime": {
          "description": "The time when the inventory deletions are issued. Used to prevent out-of-order updates and deletions on local inventory fields. If not provided, the internal system time will be used.",
          "type": "string",
          "format": "google-datetime"
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the Product is not found, the local inventory removal request will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2RemoveLocalInventoriesRequest"
    },
    "GoogleCloudRetailLoggingServiceContext": {
      "properties": {
        "service": {
          "description": "An identifier of the service. For example, \"retail.googleapis.com\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailLoggingServiceContext",
      "type": "object",
      "description": "Describes a running service that sends errors."
    },
    "GoogleCloudRetailV2alphaImportMetadata": {
      "type": "object",
      "description": "Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.",
      "properties": {
        "requestId": {
          "description": "Deprecated. This field is never set.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Operation create time.",
          "format": "google-datetime"
        },
        "successCount": {
          "format": "int64",
          "description": "Count of entries that were processed successfully.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "format": "google-datetime"
        },
        "notificationPubsubTopic": {
          "type": "string",
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`."
        },
        "transformedUserEventsMetadata": {
          "$ref": "GoogleCloudRetailV2alphaTransformedUserEventsMetadata",
          "description": "Metadata related to transform user events."
        },
        "failureCount": {
          "description": "Count of entries that encountered errors while processing.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleCloudRetailV2alphaImportMetadata"
    },
    "GoogleCloudRetailV2betaBigQueryOutputResult": {
      "id": "GoogleCloudRetailV2betaBigQueryOutputResult",
      "properties": {
        "datasetId": {
          "description": "The ID of a BigQuery Dataset.",
          "type": "string"
        },
        "tableId": {
          "description": "The ID of a BigQuery Table.",
          "type": "string"
        }
      },
      "description": "A BigQuery output result.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaModelPageOptimizationConfigPanel": {
      "properties": {
        "displayName": {
          "description": "Optional. The name to display for the panel.",
          "type": "string"
        },
        "defaultCandidate": {
          "$ref": "GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate",
          "description": "Required. The default candidate. If the model fails at serving time, we fall back to the default."
        },
        "candidates": {
          "description": "Required. The candidates to consider on the panel. Limit = 10.",
          "items": {
            "$ref": "GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2alphaModelPageOptimizationConfigPanel",
      "description": "An individual panel with a list of ServingConfigs to consider for it."
    },
    "GoogleCloudRetailV2ConditionTimeRange": {
      "type": "object",
      "id": "GoogleCloudRetailV2ConditionTimeRange",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "End of time range. Range is inclusive."
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Start of time range. Range is inclusive.",
          "type": "string"
        }
      },
      "description": "Used for time-dependent conditions. Example: Want to have rule applied for week long sale."
    },
    "GoogleCloudRetailV2ImportProductsRequest": {
      "description": "Request message for Import methods.",
      "properties": {
        "reconciliationMode": {
          "enum": [
            "RECONCILIATION_MODE_UNSPECIFIED",
            "INCREMENTAL",
            "FULL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Defaults to INCREMENTAL.",
            "Inserts new products or updates existing products.",
            "Calculates diff and replaces the entire product dataset. Existing products may be deleted if they are not present in the source location."
          ],
          "description": "The mode of reconciliation between existing products and the products to be imported. Defaults to ReconciliationMode.INCREMENTAL."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Indicates which fields in the provided imported `products` to update. If not set, all fields are updated.",
          "type": "string"
        },
        "errorsConfig": {
          "description": "The desired location of errors incurred during the Import.",
          "$ref": "GoogleCloudRetailV2ImportErrorsConfig"
        },
        "requestId": {
          "type": "string",
          "description": "Deprecated. This field has no effect."
        },
        "notificationPubsubTopic": {
          "description": "Full Pub/Sub topic name for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`. It has to be within the same project as ImportProductsRequest.parent. Make sure that `service-@gcp-sa-retail.iam.gserviceaccount.com` has the `pubsub.topics.publish` IAM permission on the topic.",
          "type": "string"
        },
        "inputConfig": {
          "$ref": "GoogleCloudRetailV2ProductInputConfig",
          "description": "Required. The desired input location of the data."
        }
      },
      "id": "GoogleCloudRetailV2ImportProductsRequest",
      "type": "object"
    },
    "GoogleCloudRetailV2betaAddLocalInventoriesMetadata": {
      "type": "object",
      "description": "Metadata related to the progress of the AddLocalInventories operation. Currently empty because there is no meaningful metadata populated from the ProductService.AddLocalInventories method.",
      "id": "GoogleCloudRetailV2betaAddLocalInventoriesMetadata",
      "properties": {}
    },
    "GoogleCloudRetailV2alphaCreateModelMetadata": {
      "description": "Metadata associated with a create operation.",
      "id": "GoogleCloudRetailV2alphaCreateModelMetadata",
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "description": "The resource name of the model that this create applies to. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`"
        }
      }
    },
    "GoogleCloudRetailV2Catalog": {
      "properties": {
        "displayName": {
          "description": "Required. Immutable. The catalog display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "string"
        },
        "productLevelConfig": {
          "description": "Required. The product level configuration.",
          "$ref": "GoogleCloudRetailV2ProductLevelConfig"
        },
        "name": {
          "type": "string",
          "description": "Required. Immutable. The fully qualified resource name of the catalog."
        }
      },
      "id": "GoogleCloudRetailV2Catalog",
      "description": "The catalog configuration.",
      "type": "object"
    },
    "GoogleCloudRetailV2RemoveFulfillmentPlacesResponse": {
      "description": "Response of the RemoveFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the ProductService.RemoveFulfillmentPlaces method.",
      "type": "object",
      "id": "GoogleCloudRetailV2RemoveFulfillmentPlacesResponse",
      "properties": {}
    },
    "GoogleCloudRetailV2betaRemoveLocalInventoriesMetadata": {
      "description": "Metadata related to the progress of the RemoveLocalInventories operation. Currently empty because there is no meaningful metadata populated from the ProductService.RemoveLocalInventories method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2betaRemoveLocalInventoriesMetadata"
    },
    "GoogleCloudRetailV2SearchResponseFacet": {
      "id": "GoogleCloudRetailV2SearchResponseFacet",
      "description": "A facet result.",
      "properties": {
        "values": {
          "items": {
            "$ref": "GoogleCloudRetailV2SearchResponseFacetFacetValue"
          },
          "description": "The facet values for this field.",
          "type": "array"
        },
        "key": {
          "description": "The key for this facet. E.g., \"colorFamilies\" or \"price\" or \"attributes.attr1\".",
          "type": "string"
        },
        "dynamicFacet": {
          "description": "Whether the facet is dynamically generated.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2alphaImportUserEventsResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2alphaImportUserEventsResponse",
      "description": "Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "properties": {
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors if this field was set in the request.",
          "$ref": "GoogleCloudRetailV2alphaImportErrorsConfig"
        },
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "importSummary": {
          "$ref": "GoogleCloudRetailV2alphaUserEventImportSummary",
          "description": "Aggregated statistics of user event import status."
        }
      }
    },
    "GoogleCloudRetailLoggingErrorContext": {
      "id": "GoogleCloudRetailLoggingErrorContext",
      "properties": {
        "reportLocation": {
          "description": "The location in the source code where the decision was made to report the error, usually the place where it was logged.",
          "$ref": "GoogleCloudRetailLoggingSourceLocation"
        },
        "httpRequest": {
          "$ref": "GoogleCloudRetailLoggingHttpRequestContext",
          "description": "The HTTP request which was processed when the error was triggered."
        }
      },
      "description": "A description of the context in which an error occurred.",
      "type": "object"
    },
    "GoogleCloudRetailV2ProductDetail": {
      "description": "Detailed product information associated with a user event.",
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Quantity of the product associated with the user event. For example, this field will be 2 if two products are added to the shopping cart for `purchase-complete` event. Required for `add-to-cart` and `purchase-complete` event types."
        },
        "product": {
          "description": "Required. Product information. Required field(s): * Product.id Optional override field(s): * Product.price_info If any supported optional fields are provided, we will treat them as a full override when looking up product information from the catalog. Thus, it is important to ensure that the overriding fields are accurate and complete. All other product fields are ignored and instead populated via catalog lookup after event ingestion.",
          "$ref": "GoogleCloudRetailV2Product"
        }
      },
      "id": "GoogleCloudRetailV2ProductDetail"
    },
    "GoogleCloudRetailV2SearchRequest": {
      "description": "Request message for SearchService.Search method.",
      "properties": {
        "variantRollupKeys": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The keys to fetch and rollup the matching variant Products attributes, FulfillmentInfo or LocalInventorys attributes. The attributes from all the matching variant Products or LocalInventorys are merged and de-duplicated. Notice that rollup attributes will lead to extra query latency. Maximum number of keys is 30. For FulfillmentInfo, a fulfillment type and a fulfillment ID must be provided in the format of \"fulfillmentType.fulfillmentId\". E.g., in \"pickupInStore.store123\", \"pickupInStore\" is fulfillment type and \"store123\" is the store ID. Supported keys are: * colorFamilies * price * originalPrice * discount * variantId * inventory(place_id,price) * inventory(place_id,original_price) * inventory(place_id,attributes.key), where key is any key in the Product.local_inventories.attributes map. * attributes.key, where key is any key in the Product.attributes map. * pickupInStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"pickup-in-store\". * shipToStore.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"ship-to-store\". * sameDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"same-day-delivery\". * nextDayDelivery.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"next-day-delivery\". * customFulfillment1.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-1\". * customFulfillment2.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-2\". * customFulfillment3.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-3\". * customFulfillment4.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-4\". * customFulfillment5.id, where id is any FulfillmentInfo.place_ids for FulfillmentInfo.type \"custom-type-5\". If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned."
        },
        "searchMode": {
          "type": "string",
          "description": "The search mode of the search request. If not specified, a single search request triggers both product search and faceted search.",
          "enum": [
            "SEARCH_MODE_UNSPECIFIED",
            "PRODUCT_SEARCH_ONLY",
            "FACETED_SEARCH_ONLY"
          ],
          "enumDescriptions": [
            "Default value. In this case both product search and faceted search will be performed. Both SearchResponse.SearchResult and SearchResponse.Facet will be returned.",
            "Only product search will be performed. The faceted search will be disabled. Only SearchResponse.SearchResult will be returned. SearchResponse.Facet will not be returned, even if SearchRequest.facet_specs or SearchRequest.dynamic_facet_spec is set.",
            "Only faceted search will be performed. The product search will be disabled. When in this mode, one or both of SearchRequest.facet_specs and SearchRequest.dynamic_facet_spec should be set. Otherwise, an INVALID_ARGUMENT error is returned. Only SearchResponse.Facet will be returned. SearchResponse.SearchResult will not be returned."
          ]
        },
        "branch": {
          "type": "string",
          "description": "The branch resource name, such as `projects/*/locations/global/catalogs/default_catalog/branches/0`. Use \"default_branch\" as the branch ID or leave this field empty, to search products under the default branch."
        },
        "orderBy": {
          "description": "The order in which products are returned. Products can be ordered by a field in an Product object. Leave it unset if ordered by relevance. OrderBy expression is case-sensitive. See more details at this [user guide](https://cloud.google.com/retail/docs/filter-and-order#order). If this field is unrecognizable, an INVALID_ARGUMENT is returned.",
          "type": "string"
        },
        "offset": {
          "description": "A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Products deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an INVALID_ARGUMENT is returned.",
          "type": "integer",
          "format": "int32"
        },
        "filter": {
          "description": "The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. Filter expression is case-sensitive. See more details at this [user guide](https://cloud.google.com/retail/docs/filter-and-order#filter). If this field is unrecognizable, an INVALID_ARGUMENT is returned.",
          "type": "string"
        },
        "personalizationSpec": {
          "$ref": "GoogleCloudRetailV2SearchRequestPersonalizationSpec",
          "description": "The specification for personalization. Notice that if both ServingConfig.personalization_spec and SearchRequest.personalization_spec are set. SearchRequest.personalization_spec will override ServingConfig.personalization_spec."
        },
        "query": {
          "description": "Raw search query. If this field is empty, the request is considered a category browsing request and returned results are based on filter and page_categories.",
          "type": "string"
        },
        "queryExpansionSpec": {
          "description": "The query expansion specification that specifies the conditions under which query expansion will occur. See more details at this [user guide](https://cloud.google.com/retail/docs/result-size#query_expansion).",
          "$ref": "GoogleCloudRetailV2SearchRequestQueryExpansionSpec"
        },
        "visitorId": {
          "type": "string",
          "description": "Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This should be the same identifier as UserEvent.visitor_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "labels": {
          "type": "object",
          "description": "The labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "pageSize": {
          "description": "Maximum number of Products to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 120. Values above 120 will be coerced to 120. If this field is negative, an INVALID_ARGUMENT is returned.",
          "type": "integer",
          "format": "int32"
        },
        "userInfo": {
          "$ref": "GoogleCloudRetailV2UserInfo",
          "description": "User information."
        },
        "facetSpecs": {
          "description": "Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.",
          "items": {
            "$ref": "GoogleCloudRetailV2SearchRequestFacetSpec"
          },
          "type": "array"
        },
        "dynamicFacetSpec": {
          "description": "Deprecated. Refer to https://cloud.google.com/retail/docs/configs#dynamic to enable dynamic facets. Do not set this field. The specification for dynamically generated facets. Notice that only textual facets can be dynamically generated.",
          "$ref": "GoogleCloudRetailV2SearchRequestDynamicFacetSpec"
        },
        "boostSpec": {
          "description": "Boost specification to boost certain products. See more details at this [user guide](https://cloud.google.com/retail/docs/boosting). Notice that if both ServingConfig.boost_control_ids and SearchRequest.boost_spec are set, the boost conditions from both places are evaluated. If a search request matches multiple boost conditions, the final boost score is equal to the sum of the boost scores from all matched boost conditions.",
          "$ref": "GoogleCloudRetailV2SearchRequestBoostSpec"
        },
        "pageCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The categories associated with a category page. Required for category navigation queries to achieve good search quality. The format should be the same as UserEvent.page_categories; To represent full path of category, use '\u003e' sign to separate different hierarchies. If '\u003e' is part of the category name, replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: \"pageCategories\" : [\"Sales \u003e 2017 Black Friday Deals\"]."
        },
        "spellCorrectionSpec": {
          "description": "The spell correction specification that specifies the mode under which spell correction will take effect.",
          "$ref": "GoogleCloudRetailV2SearchRequestSpellCorrectionSpec"
        },
        "pageToken": {
          "description": "A page token SearchResponse.next_page_token, received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "string"
        },
        "canonicalFilter": {
          "description": "The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. For example, if a query does not have enough results, an expanded query with SearchRequest.canonical_filter will be returned as a supplement of the original query. This field is strongly recommended to achieve high search quality. See SearchRequest.filter for more details about filter syntax.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2SearchRequest"
    },
    "GoogleCloudRetailV2alphaModelServingConfigList": {
      "description": "Represents an ordered combination of valid serving configs, which can be used for `PAGE_OPTIMIZATION` recommendations.",
      "id": "GoogleCloudRetailV2alphaModelServingConfigList",
      "properties": {
        "servingConfigIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A set of valid serving configs that may be used for `PAGE_OPTIMIZATION`."
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2ProductInputConfig": {
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location for the input content.",
          "$ref": "GoogleCloudRetailV2GcsSource"
        },
        "bigQuerySource": {
          "$ref": "GoogleCloudRetailV2BigQuerySource",
          "description": "BigQuery input source."
        },
        "productInlineSource": {
          "description": "The Inline source for the input content for products.",
          "$ref": "GoogleCloudRetailV2ProductInlineSource"
        }
      },
      "id": "GoogleCloudRetailV2ProductInputConfig",
      "type": "object",
      "description": "The input config source for products."
    },
    "GoogleCloudRetailV2CompletionConfig": {
      "type": "object",
      "id": "GoogleCloudRetailV2CompletionConfig",
      "properties": {
        "name": {
          "description": "Required. Immutable. Fully qualified name `projects/*/locations/*/catalogs/*/completionConfig`",
          "type": "string"
        },
        "denylistInputConfig": {
          "$ref": "GoogleCloudRetailV2CompletionDataInputConfig",
          "readOnly": true,
          "description": "Output only. The source data for the latest import of the autocomplete denylist phrases."
        },
        "minPrefixLength": {
          "format": "int32",
          "description": "The minimum number of characters needed to be typed in order to get suggestions. Default value is 2. If left unset or set to 0, then will fallback to default value. Value range is 1 to 20.",
          "type": "integer"
        },
        "lastAllowlistImportOperation": {
          "readOnly": true,
          "description": "Output only. Name of the LRO corresponding to the latest allowlist import. Can use GetOperation API to retrieve the latest state of the Long Running Operation.",
          "type": "string"
        },
        "matchingOrder": {
          "description": "Specifies the matching order for autocomplete suggestions, e.g., a query consisting of 'sh' with 'out-of-order' specified would suggest \"women's shoes\", whereas a query of 'red s' with 'exact-prefix' specified would suggest \"red shoes\". Currently supported values: * 'out-of-order' * 'exact-prefix' Default value: 'exact-prefix'.",
          "type": "string"
        },
        "lastSuggestionsImportOperation": {
          "description": "Output only. Name of the LRO corresponding to the latest suggestion terms list import. Can use GetOperation API to retrieve the latest state of the Long Running Operation.",
          "type": "string",
          "readOnly": true
        },
        "suggestionsInputConfig": {
          "readOnly": true,
          "description": "Output only. The source data for the latest import of the autocomplete suggestion phrases.",
          "$ref": "GoogleCloudRetailV2CompletionDataInputConfig"
        },
        "autoLearning": {
          "description": "If set to true, the auto learning function is enabled. Auto learning uses user data to generate suggestions using ML techniques. Default value is false. Only after enabling auto learning can users use `cloud-retail` data in CompleteQueryRequest.",
          "type": "boolean"
        },
        "lastDenylistImportOperation": {
          "description": "Output only. Name of the LRO corresponding to the latest denylist import. Can use GetOperation API to retrieve the latest state of the Long Running Operation.",
          "readOnly": true,
          "type": "string"
        },
        "maxSuggestions": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of autocomplete suggestions returned per term. Default value is 20. If left unset or set to 0, then will fallback to default value. Value range is 1 to 20."
        },
        "allowlistInputConfig": {
          "$ref": "GoogleCloudRetailV2CompletionDataInputConfig",
          "readOnly": true,
          "description": "Output only. The source data for the latest import of the autocomplete allowlist phrases."
        }
      },
      "description": "Catalog level autocomplete config for customers to customize autocomplete feature's settings."
    },
    "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesResponse",
      "description": "Response of the RemoveFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the ProductService.RemoveFulfillmentPlaces method."
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudRetailV2betaExportMetadata": {
      "id": "GoogleCloudRetailV2betaExportMetadata",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Operation create time.",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "format": "google-datetime"
        }
      },
      "description": "Metadata related to the progress of the Export operation. This is returned by the google.longrunning.Operation.metadata field.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaUserEventImportSummary": {
      "description": "A summary of import result. The UserEventImportSummary summarizes the import status for user events.",
      "id": "GoogleCloudRetailV2alphaUserEventImportSummary",
      "type": "object",
      "properties": {
        "joinedEventsCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of user events imported with complete existing catalog information."
        },
        "unjoinedEventsCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of user events imported, but with catalog information not found in the imported catalog."
        }
      }
    },
    "GoogleCloudRetailV2RuleRedirectAction": {
      "type": "object",
      "description": "Redirects a shopper to a specific page. * Rule Condition: - Must specify Condition.query_terms. * Action Input: Request Query * Action Result: Redirects shopper to provided uri.",
      "properties": {
        "redirectUri": {
          "description": "URL must have length equal or less than 2000 characters.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2RuleRedirectAction"
    },
    "GoogleCloudRetailV2PriceInfo": {
      "type": "object",
      "properties": {
        "cost": {
          "description": "The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).",
          "format": "float",
          "type": "number"
        },
        "originalPrice": {
          "type": "number",
          "description": "Price of the product without any discount. If zero, by default set to be the price. If set, original_price should be greater than or equal to price, otherwise an INVALID_ARGUMENT error is thrown.",
          "format": "float"
        },
        "priceExpireTime": {
          "format": "google-datetime",
          "description": "The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.",
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "description": "The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned."
        },
        "priceEffectiveTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search."
        },
        "price": {
          "format": "float",
          "description": "Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.price](https://schema.org/price).",
          "type": "number"
        },
        "priceRange": {
          "description": "Output only. The price range of all the child Product.Type.VARIANT Products grouped together on the Product.Type.PRIMARY Product. Only populated for Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.",
          "$ref": "GoogleCloudRetailV2PriceInfoPriceRange",
          "readOnly": true
        }
      },
      "id": "GoogleCloudRetailV2PriceInfo",
      "description": "The price information of a Product."
    },
    "GoogleCloudRetailV2RuleFilterAction": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. See more details at the Retail Search [user guide](/retail/search/docs/filter-and-order#filter). * To filter products with product ID \"product_1\" or \"product_2\", and color \"Red\" or \"Blue\": *(id: ANY(\"product_1\", \"product_2\")) * *AND * *(colorFamilies: ANY(\"Red\", \"Blue\")) *"
        }
      },
      "description": "* Rule Condition: - No Condition.query_terms provided is a global match. - 1 or more Condition.query_terms provided are combined with OR operator. * Action Input: The request query and filter that are applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.",
      "id": "GoogleCloudRetailV2RuleFilterAction"
    },
    "GoogleCloudRetailV2SearchResponseFacetFacetValue": {
      "type": "object",
      "properties": {
        "maxValue": {
          "description": "The maximum value in the FacetValue.interval. Only supported on numerical facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is true.",
          "type": "number",
          "format": "double"
        },
        "count": {
          "description": "Number of items that have this facet value.",
          "type": "string",
          "format": "int64"
        },
        "interval": {
          "description": "Interval value for a facet, such as [10, 20) for facet \"price\".",
          "$ref": "GoogleCloudRetailV2Interval"
        },
        "minValue": {
          "description": "The minimum value in the FacetValue.interval. Only supported on numerical facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is true.",
          "format": "double",
          "type": "number"
        },
        "value": {
          "description": "Text value of a facet, such as \"Black\" for facet \"colorFamilies\".",
          "type": "string"
        }
      },
      "description": "A facet value which contains value names and their count.",
      "id": "GoogleCloudRetailV2SearchResponseFacetFacetValue"
    },
    "GoogleCloudRetailV2UserEventImportSummary": {
      "id": "GoogleCloudRetailV2UserEventImportSummary",
      "description": "A summary of import result. The UserEventImportSummary summarizes the import status for user events.",
      "properties": {
        "joinedEventsCount": {
          "type": "string",
          "description": "Count of user events imported with complete existing catalog information.",
          "format": "int64"
        },
        "unjoinedEventsCount": {
          "description": "Count of user events imported, but with catalog information not found in the imported catalog.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2RuleDoNotAssociateAction": {
      "type": "object",
      "properties": {
        "terms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Will be [deprecated = true] post migration;"
        },
        "queryTerms": {
          "items": {
            "type": "string"
          },
          "description": "Terms from the search query. Will not consider do_not_associate_terms for search if in search query. Can specify up to 100 terms.",
          "type": "array"
        },
        "doNotAssociateTerms": {
          "type": "array",
          "description": "Cannot contain duplicates or the query term. Can specify up to 100 terms.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudRetailV2RuleDoNotAssociateAction",
      "description": "Prevents `query_term` from being associated with specified terms during search. Example: Don't associate \"gShoe\" and \"cheap\"."
    },
    "GoogleCloudRetailV2RuleIgnoreAction": {
      "id": "GoogleCloudRetailV2RuleIgnoreAction",
      "properties": {
        "ignoreTerms": {
          "type": "array",
          "description": "Terms to ignore in the search query.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Prevents a term in the query from being used in search. Example: Don't search for \"shoddy\".",
      "type": "object"
    },
    "GoogleTypeDate": {
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "id": "GoogleTypeDate"
    },
    "GoogleCloudRetailV2SearchResponse": {
      "properties": {
        "facets": {
          "items": {
            "$ref": "GoogleCloudRetailV2SearchResponseFacet"
          },
          "type": "array",
          "description": "Results of facets requested by user."
        },
        "appliedControls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The fully qualified resource name of applied [controls](https://cloud.google.com/retail/docs/serving-control-rules)."
        },
        "correctedQuery": {
          "description": "Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.",
          "type": "string"
        },
        "attributionToken": {
          "type": "string",
          "description": "A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance."
        },
        "results": {
          "description": "A list of matched items. The order represents the ranking.",
          "items": {
            "$ref": "GoogleCloudRetailV2SearchResponseSearchResult"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "invalidConditionBoostSpecs": {
          "description": "The invalid SearchRequest.BoostSpec.condition_boost_specs that are not applied during serving.",
          "items": {
            "$ref": "GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec"
          },
          "type": "array"
        },
        "queryExpansionInfo": {
          "$ref": "GoogleCloudRetailV2SearchResponseQueryExpansionInfo",
          "description": "Query expansion information for the returned results."
        },
        "totalSize": {
          "description": "The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.",
          "format": "int32",
          "type": "integer"
        },
        "redirectUri": {
          "type": "string",
          "description": "The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response."
        }
      },
      "id": "GoogleCloudRetailV2SearchResponse",
      "type": "object",
      "description": "Response message for SearchService.Search method."
    },
    "GoogleCloudRetailV2Audience": {
      "description": "An intended audience of the Product for whom it's sold.",
      "id": "GoogleCloudRetailV2Audience",
      "type": "object",
      "properties": {
        "ageGroups": {
          "items": {
            "type": "string"
          },
          "description": "The age groups of the audience. Strongly encouraged to use the standard values: \"newborn\" (up to 3 months old), \"infant\" (3–12 months old), \"toddler\" (1–5 years old), \"kids\" (5–13 years old), \"adult\" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).",
          "type": "array"
        },
        "genders": {
          "description": "The genders of the audience. Strongly encouraged to use the standard values: \"male\", \"female\", \"unisex\". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRetailV2alphaImportErrorsConfig": {
      "id": "GoogleCloudRetailV2alphaImportErrorsConfig",
      "type": "object",
      "properties": {
        "gcsPrefix": {
          "description": "Google Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.",
          "type": "string"
        }
      },
      "description": "Configuration of destination for Import related errors."
    },
    "GoogleCloudRetailV2SearchRequestQueryExpansionSpec": {
      "description": "Specification to determine under which conditions query expansion should occur.",
      "id": "GoogleCloudRetailV2SearchRequestQueryExpansionSpec",
      "properties": {
        "condition": {
          "enum": [
            "CONDITION_UNSPECIFIED",
            "DISABLED",
            "AUTO"
          ],
          "enumDescriptions": [
            "Unspecified query expansion condition. In this case, server behavior defaults to Condition.DISABLED.",
            "Disabled query expansion. Only the exact search query is used, even if SearchResponse.total_size is zero.",
            "Automatic query expansion built by Google Retail Search."
          ],
          "description": "The condition under which query expansion should occur. Default to Condition.DISABLED.",
          "type": "string"
        },
        "pinUnexpandedResults": {
          "description": "Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2betaSetInventoryResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2betaSetInventoryResponse",
      "description": "Response of the SetInventoryRequest. Currently empty because there is no meaningful response populated from the ProductService.SetInventory method."
    },
    "GoogleCloudRetailV2ImportProductsResponse": {
      "type": "object",
      "description": "Response of the ImportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "id": "GoogleCloudRetailV2ImportProductsResponse",
      "properties": {
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors in the request if set.",
          "$ref": "GoogleCloudRetailV2ImportErrorsConfig"
        },
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "A sample of errors encountered while processing the request.",
          "type": "array"
        }
      }
    },
    "GoogleCloudRetailV2UserEventInputConfig": {
      "id": "GoogleCloudRetailV2UserEventInputConfig",
      "description": "The input config source for user events.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Required. Google Cloud Storage location for the input content.",
          "$ref": "GoogleCloudRetailV2GcsSource"
        },
        "bigQuerySource": {
          "description": "Required. BigQuery input source.",
          "$ref": "GoogleCloudRetailV2BigQuerySource"
        },
        "userEventInlineSource": {
          "$ref": "GoogleCloudRetailV2UserEventInlineSource",
          "description": "Required. The Inline source for the input content for UserEvents."
        }
      }
    },
    "GoogleCloudRetailV2RuleTwowaySynonymsAction": {
      "type": "object",
      "description": "Creates a set of terms that will be treated as synonyms of each other. Example: synonyms of \"sneakers\" and \"shoes\". * \"sneakers\" will use a synonym of \"shoes\". * \"shoes\" will use a synonym of \"sneakers\".",
      "properties": {
        "synonyms": {
          "description": "Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudRetailV2RuleTwowaySynonymsAction"
    },
    "GoogleCloudRetailV2alphaImportProductsResponse": {
      "type": "object",
      "description": "Response of the ImportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "id": "GoogleCloudRetailV2alphaImportProductsResponse",
      "properties": {
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2alphaImportErrorsConfig",
          "description": "Echoes the destination for the complete errors in the request if set."
        },
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudRetailV2LocalInventory": {
      "id": "GoogleCloudRetailV2LocalInventory",
      "type": "object",
      "properties": {
        "priceInfo": {
          "$ref": "GoogleCloudRetailV2PriceInfo",
          "description": "Product price and cost information. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371)."
        },
        "attributes": {
          "description": "Additional local inventory attributes, for example, store name, promotion tags, etc. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. * The key must be a UTF-8 encoded string with a length limit of 32 characters. * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or number). * Only 1 value is allowed for each attribute. * For text values, the length limit is 256 UTF-8 characters. * The attribute does not support search. The `searchable` field should be unset or set to false. * The max summed total bytes of custom attribute keys and values per product is 5MiB.",
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2CustomAttribute"
          },
          "type": "object"
        },
        "fulfillmentTypes": {
          "description": "Input only. Supported fulfillment types. Valid fulfillment type values include commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. All the elements must be distinct. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "placeId": {
          "type": "string",
          "description": "The place ID for the current set of inventory information."
        }
      },
      "description": "The inventory information at a place (e.g. a store) identified by a place ID."
    },
    "GoogleCloudRetailV2alphaBigQueryOutputResult": {
      "type": "object",
      "description": "A BigQuery output result.",
      "id": "GoogleCloudRetailV2alphaBigQueryOutputResult",
      "properties": {
        "datasetId": {
          "description": "The ID of a BigQuery Dataset.",
          "type": "string"
        },
        "tableId": {
          "type": "string",
          "description": "The ID of a BigQuery Table."
        }
      }
    },
    "GoogleCloudRetailV2ProductLevelConfig": {
      "id": "GoogleCloudRetailV2ProductLevelConfig",
      "properties": {
        "ingestionProductType": {
          "type": "string",
          "description": "The type of Products allowed to be ingested into the catalog. Acceptable values are: * `primary` (default): You can ingest Products of all types. When ingesting a Product, its type will default to Product.Type.PRIMARY if unset. * `variant` (incompatible with Retail Search): You can only ingest Product.Type.VARIANT Products. This means Product.primary_product_id cannot be empty. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is `variant` and merchant_center_product_id_field is `itemGroupId`, an INVALID_ARGUMENT error is returned. See [Product levels](https://cloud.google.com/retail/docs/catalog#product-levels) for more details."
        },
        "merchantCenterProductIdField": {
          "description": "Which field of [Merchant Center Product](/bigquery-transfer/docs/merchant-center-products-schema) should be imported as Product.id. Acceptable values are: * `offerId` (default): Import `offerId` as the product ID. * `itemGroupId`: Import `itemGroupId` as the product ID. Notice that Retail API will choose one item from the ones with the same `itemGroupId`, and use it to represent the item group. If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. If this field is `itemGroupId` and ingestion_product_type is `variant`, an INVALID_ARGUMENT error is returned. See [Product levels](https://cloud.google.com/retail/docs/catalog#product-levels) for more details.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Configures what level the product should be uploaded with regards to how users will be send events and how predictions will be made."
    },
    "GoogleCloudRetailV2betaRemoveLocalInventoriesResponse": {
      "description": "Response of the ProductService.RemoveLocalInventories API. Currently empty because there is no meaningful response populated from the ProductService.RemoveLocalInventories method.",
      "properties": {},
      "id": "GoogleCloudRetailV2betaRemoveLocalInventoriesResponse",
      "type": "object"
    },
    "GoogleCloudRetailV2Condition": {
      "id": "GoogleCloudRetailV2Condition",
      "type": "object",
      "properties": {
        "activeTimeRange": {
          "description": "Range of time(s) specifying when Condition is active. Condition true if any time range matches.",
          "items": {
            "$ref": "GoogleCloudRetailV2ConditionTimeRange"
          },
          "type": "array"
        },
        "queryTerms": {
          "type": "array",
          "description": "A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).",
          "items": {
            "$ref": "GoogleCloudRetailV2ConditionQueryTerm"
          }
        }
      },
      "description": "Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted."
    },
    "GoogleCloudRetailV2ListProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "description": "The Products.",
          "items": {
            "$ref": "GoogleCloudRetailV2Product"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as ListProductsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "id": "GoogleCloudRetailV2ListProductsResponse",
      "description": "Response message for ProductService.ListProducts method."
    },
    "GoogleCloudRetailV2betaUserEventImportSummary": {
      "id": "GoogleCloudRetailV2betaUserEventImportSummary",
      "properties": {
        "unjoinedEventsCount": {
          "type": "string",
          "format": "int64",
          "description": "Count of user events imported, but with catalog information not found in the imported catalog."
        },
        "joinedEventsCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of user events imported with complete existing catalog information."
        }
      },
      "type": "object",
      "description": "A summary of import result. The UserEventImportSummary summarizes the import status for user events."
    },
    "GoogleCloudRetailV2betaExportProductsResponse": {
      "properties": {
        "outputResult": {
          "$ref": "GoogleCloudRetailV2betaOutputResult",
          "description": "Output result indicating where the data were exported to."
        },
        "errorSamples": {
          "type": "array",
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "errorsConfig": {
          "description": "This field is never set.",
          "$ref": "GoogleCloudRetailV2betaExportErrorsConfig"
        }
      },
      "description": "Response of the ExportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaExportProductsResponse"
    },
    "GoogleCloudRetailLoggingHttpRequestContext": {
      "description": "HTTP request data that is related to a reported error.",
      "type": "object",
      "properties": {
        "responseStatusCode": {
          "format": "int32",
          "type": "integer",
          "description": "The HTTP response status code for the request."
        }
      },
      "id": "GoogleCloudRetailLoggingHttpRequestContext"
    },
    "GoogleCloudRetailV2PurgeMetadata": {
      "description": "Metadata related to the progress of the Purge operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "id": "GoogleCloudRetailV2PurgeMetadata",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudRetailV2betaRemoveFulfillmentPlacesMetadata": {
      "properties": {},
      "type": "object",
      "description": "Metadata related to the progress of the RemoveFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the ProductService.RemoveFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2betaRemoveFulfillmentPlacesMetadata"
    },
    "GoogleCloudRetailV2betaImportUserEventsResponse": {
      "type": "object",
      "properties": {
        "errorSamples": {
          "type": "array",
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "importSummary": {
          "description": "Aggregated statistics of user event import status.",
          "$ref": "GoogleCloudRetailV2betaUserEventImportSummary"
        },
        "errorsConfig": {
          "description": "Echoes the destination for the complete errors if this field was set in the request.",
          "$ref": "GoogleCloudRetailV2betaImportErrorsConfig"
        }
      },
      "id": "GoogleCloudRetailV2betaImportUserEventsResponse",
      "description": "Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful."
    },
    "GoogleCloudRetailV2ColorInfo": {
      "description": "The color information of a Product.",
      "properties": {
        "colors": {
          "description": "The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single \"Mixed\" instead of multiple values. A maximum of 25 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "colorFamilies": {
          "description": "The standard color families. Strongly recommended to use the following standard color groups: \"Red\", \"Pink\", \"Orange\", \"Yellow\", \"Purple\", \"Green\", \"Cyan\", \"Blue\", \"Brown\", \"White\", \"Gray\", \"Black\" and \"Mixed\". Normally it is expected to have only 1 color family. May consider using single \"Mixed\" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2ColorInfo"
    },
    "GoogleCloudRetailV2SetInventoryMetadata": {
      "properties": {},
      "description": "Metadata related to the progress of the SetInventory operation. Currently empty because there is no meaningful metadata populated from the ProductService.SetInventory method.",
      "type": "object",
      "id": "GoogleCloudRetailV2SetInventoryMetadata"
    },
    "GoogleCloudRetailV2betaPurgeUserEventsResponse": {
      "id": "GoogleCloudRetailV2betaPurgeUserEventsResponse",
      "type": "object",
      "properties": {
        "purgedEventsCount": {
          "format": "int64",
          "type": "string",
          "description": "The total count of events purged as a result of the operation."
        }
      },
      "description": "Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field."
    },
    "GoogleCloudRetailV2alphaRejoinUserEventsMetadata": {
      "description": "Metadata for `RejoinUserEvents` method.",
      "id": "GoogleCloudRetailV2alphaRejoinUserEventsMetadata",
      "properties": {},
      "type": "object"
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "GoogleCloudRetailV2RejoinUserEventsRequest": {
      "id": "GoogleCloudRetailV2RejoinUserEventsRequest",
      "properties": {
        "userEventRejoinScope": {
          "description": "The type of the user event rejoin to define the scope and range of the user events to be rejoined with the latest product catalog. Defaults to `USER_EVENT_REJOIN_SCOPE_UNSPECIFIED` if this field is not set, or set to an invalid integer value.",
          "enumDescriptions": [
            "Rejoin all events with the latest product catalog, including both joined events and unjoined events.",
            "Only rejoin joined events with the latest product catalog.",
            "Only rejoin unjoined events with the latest product catalog."
          ],
          "type": "string",
          "enum": [
            "USER_EVENT_REJOIN_SCOPE_UNSPECIFIED",
            "JOINED_EVENTS",
            "UNJOINED_EVENTS"
          ]
        }
      },
      "type": "object",
      "description": "Request message for RejoinUserEvents method."
    },
    "GoogleCloudRetailV2AttributesConfig": {
      "id": "GoogleCloudRetailV2AttributesConfig",
      "type": "object",
      "properties": {
        "attributeConfigLevel": {
          "enum": [
            "ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED",
            "PRODUCT_LEVEL_ATTRIBUTE_CONFIG",
            "CATALOG_LEVEL_ATTRIBUTE_CONFIG"
          ],
          "enumDescriptions": [
            "Value used when unset. In this case, server behavior defaults to CATALOG_LEVEL_ATTRIBUTE_CONFIG.",
            "At this level, we honor the attribute configurations set in Product.attributes.",
            "At this level, we honor the attribute configurations set in CatalogConfig.attribute_configs."
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. The AttributeConfigLevel used for this catalog."
        },
        "catalogAttributes": {
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2CatalogAttribute"
          },
          "description": "Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or searchable for each attribute. The key is catalog attribute's name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of catalog attributes allowed in a request is 1000.",
          "type": "object"
        },
        "name": {
          "description": "Required. Immutable. The fully qualified resource name of the attribute config. Format: `projects/*/locations/*/catalogs/*/attributesConfig`",
          "type": "string"
        }
      },
      "description": "Catalog level attribute config."
    },
    "GoogleCloudRetailV2RuleBoostAction": {
      "properties": {
        "boost": {
          "format": "float",
          "type": "number",
          "description": "Strength of the condition boost, which must be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the item a big promotion. However, it does not necessarily mean that the boosted item will be the top result at all times, nor that other items will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant items. Setting to -1.0 gives the item a big demotion. However, results that are deeply relevant might still be shown. The item will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored."
        },
        "productsFilter": {
          "description": "The filter can have a max size of 5000 characters. An expression which specifies which products to apply an action to. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost products with product ID \"product_1\" or \"product_2\", and color \"Red\" or \"Blue\": *(id: ANY(\"product_1\", \"product_2\")) * *AND * *(colorFamilies: ANY(\"Red\", \"Blue\")) *",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A boost action to apply to results matching condition specified above.",
      "id": "GoogleCloudRetailV2RuleBoostAction"
    },
    "GoogleCloudRetailV2Interval": {
      "properties": {
        "minimum": {
          "type": "number",
          "format": "double",
          "description": "Inclusive lower bound."
        },
        "exclusiveMaximum": {
          "type": "number",
          "description": "Exclusive upper bound.",
          "format": "double"
        },
        "exclusiveMinimum": {
          "format": "double",
          "description": "Exclusive lower bound.",
          "type": "number"
        },
        "maximum": {
          "format": "double",
          "description": "Inclusive upper bound.",
          "type": "number"
        }
      },
      "id": "GoogleCloudRetailV2Interval",
      "description": "A floating point interval.",
      "type": "object"
    },
    "GoogleCloudRetailV2SetInventoryRequest": {
      "id": "GoogleCloudRetailV2SetInventoryRequest",
      "description": "Request message for ProductService.SetInventory method.",
      "properties": {
        "setMask": {
          "description": "Indicates which inventory fields in the provided Product to update. At least one field must be provided. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "allowMissing": {
          "description": "If set to true, and the Product with name Product.name is not found, the inventory update will still be processed and retained for at most 1 day until the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found.",
          "type": "boolean"
        },
        "setTime": {
          "type": "string",
          "description": "The time when the request is issued, used to prevent out-of-order updates on inventory fields with the last update time recorded. If not provided, the internal system time will be used.",
          "format": "google-datetime"
        },
        "inventory": {
          "description": "Required. The inventory information to update. The allowable fields to update are: * Product.price_info * Product.availability * Product.available_quantity * Product.fulfillment_info The updated inventory fields must be specified in SetInventoryRequest.set_mask. If SetInventoryRequest.inventory.name is empty or invalid, an INVALID_ARGUMENT error is returned. If the caller does not have permission to update the Product named in Product.name, regardless of whether or not it exists, a PERMISSION_DENIED error is returned. If the Product to update does not have existing inventory information, the provided inventory information will be inserted. If the Product to update has existing inventory information, the provided inventory information will be merged while respecting the last update time for each inventory field, using the provided or default value for SetInventoryRequest.set_time. The caller can replace place IDs for a subset of fulfillment types in the following ways: * Adds \"fulfillment_info\" in SetInventoryRequest.set_mask * Specifies only the desired fulfillment types and corresponding place IDs to update in SetInventoryRequest.inventory.fulfillment_info The caller can clear all place IDs from a subset of fulfillment types in the following ways: * Adds \"fulfillment_info\" in SetInventoryRequest.set_mask * Specifies only the desired fulfillment types to clear in SetInventoryRequest.inventory.fulfillment_info * Checks that only the desired fulfillment info types have empty SetInventoryRequest.inventory.fulfillment_info.place_ids The last update time is recorded for the following inventory fields: * Product.price_info * Product.availability * Product.available_quantity * Product.fulfillment_info If a full overwrite of inventory information while ignoring timestamps is needed, ProductService.UpdateProduct should be invoked instead.",
          "$ref": "GoogleCloudRetailV2Product"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2Rating": {
      "id": "GoogleCloudRetailV2Rating",
      "type": "object",
      "properties": {
        "averageRating": {
          "format": "float",
          "description": "The average rating of the Product. The rating is scaled at 1-5. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "number"
        },
        "ratingCount": {
          "description": "The total number of ratings. This value is independent of the value of rating_histogram. This value must be nonnegative. Otherwise, an INVALID_ARGUMENT error is returned.",
          "format": "int32",
          "type": "integer"
        },
        "ratingHistogram": {
          "type": "array",
          "description": "List of rating counts per rating value (index = rating - 1). The list is empty if there is no rating. If the list is non-empty, its size is always 5. Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13, 47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings with 2 star, and so on.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "description": "The rating of a Product."
    },
    "GoogleCloudRetailV2AddLocalInventoriesMetadata": {
      "id": "GoogleCloudRetailV2AddLocalInventoriesMetadata",
      "properties": {},
      "description": "Metadata related to the progress of the AddLocalInventories operation. Currently empty because there is no meaningful metadata populated from the ProductService.AddLocalInventories method.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaTransformedUserEventsMetadata": {
      "description": "Metadata related to transform user events operation.",
      "type": "object",
      "properties": {
        "transformedEventsCount": {
          "format": "int64",
          "type": "string",
          "description": "Count of entries in the transformed user events BigQuery table, which could be different from the actually imported number of user events."
        },
        "sourceEventsCount": {
          "type": "string",
          "description": "Count of entries in the source user events BigQuery table.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudRetailV2alphaTransformedUserEventsMetadata"
    },
    "GoogleCloudRetailV2AddCatalogAttributeRequest": {
      "properties": {
        "catalogAttribute": {
          "description": "Required. The CatalogAttribute to add.",
          "$ref": "GoogleCloudRetailV2CatalogAttribute"
        }
      },
      "type": "object",
      "description": "Request for CatalogService.AddCatalogAttribute method.",
      "id": "GoogleCloudRetailV2AddCatalogAttributeRequest"
    },
    "GoogleCloudRetailV2FulfillmentInfo": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Customers have to map custom types to their display names before rendering UI. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned."
        },
        "placeIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The IDs for this type, such as the store IDs for FulfillmentInfo.type.pickup-in-store or the region IDs for FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are allowed. Each value must be a string with a length limit of 30 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned."
        }
      },
      "id": "GoogleCloudRetailV2FulfillmentInfo",
      "type": "object",
      "description": "Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods."
    },
    "GoogleCloudRetailV2ProductInlineSource": {
      "id": "GoogleCloudRetailV2ProductInlineSource",
      "properties": {
        "products": {
          "type": "array",
          "description": "Required. A list of products to update/create. Each product must have a valid Product.id. Recommended max of 100 items.",
          "items": {
            "$ref": "GoogleCloudRetailV2Product"
          }
        }
      },
      "description": "The inline source for the input config for ImportProducts method.",
      "type": "object"
    },
    "GoogleCloudRetailV2RejoinUserEventsMetadata": {
      "id": "GoogleCloudRetailV2RejoinUserEventsMetadata",
      "description": "Metadata for `RejoinUserEvents` method.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2alphaPurgeProductsMetadata": {
      "properties": {
        "successCount": {
          "format": "int64",
          "description": "Count of entries that were deleted successfully.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Operation create time.",
          "format": "google-datetime"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "type": "string"
        },
        "failureCount": {
          "description": "Count of entries that encountered errors while processing.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Metadata related to the progress of the PurgeProducts operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "id": "GoogleCloudRetailV2alphaPurgeProductsMetadata",
      "type": "object"
    },
    "GoogleCloudRetailV2PredictResponse": {
      "properties": {
        "attributionToken": {
          "description": "A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.",
          "type": "string"
        },
        "missingIds": {
          "description": "IDs of products in the request that were missing from the inventory.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "results": {
          "description": "A list of recommended products. The order represents the ranking (from the most relevant product to the least).",
          "items": {
            "$ref": "GoogleCloudRetailV2PredictResponsePredictionResult"
          },
          "type": "array"
        },
        "validateOnly": {
          "type": "boolean",
          "description": "True if the validateOnly property was set in the request."
        }
      },
      "id": "GoogleCloudRetailV2PredictResponse",
      "type": "object",
      "description": "Response message for predict method."
    },
    "GoogleCloudRetailV2alphaAddLocalInventoriesMetadata": {
      "description": "Metadata related to the progress of the AddLocalInventories operation. Currently empty because there is no meaningful metadata populated from the ProductService.AddLocalInventories method.",
      "type": "object",
      "id": "GoogleCloudRetailV2alphaAddLocalInventoriesMetadata",
      "properties": {}
    },
    "GoogleCloudRetailV2alphaExportProductsResponse": {
      "properties": {
        "errorsConfig": {
          "description": "This field is never set.",
          "$ref": "GoogleCloudRetailV2alphaExportErrorsConfig"
        },
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "outputResult": {
          "description": "Output result indicating where the data were exported to.",
          "$ref": "GoogleCloudRetailV2alphaOutputResult"
        }
      },
      "type": "object",
      "description": "Response of the ExportProductsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "id": "GoogleCloudRetailV2alphaExportProductsResponse"
    },
    "GoogleCloudRetailV2SearchRequestDynamicFacetSpec": {
      "description": "The specifications of dynamically generated facets.",
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.",
          "enumDescriptions": [
            "Default value.",
            "Disable Dynamic Facet.",
            "Automatic mode built by Google Retail Search."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "DISABLED",
            "ENABLED"
          ]
        }
      },
      "id": "GoogleCloudRetailV2SearchRequestDynamicFacetSpec"
    },
    "GoogleCloudRetailV2SetDefaultBranchRequest": {
      "id": "GoogleCloudRetailV2SetDefaultBranchRequest",
      "properties": {
        "note": {
          "type": "string",
          "description": "Some note on this request, this can be retrieved by CatalogService.GetDefaultBranch before next valid default branch set occurs. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "force": {
          "type": "boolean",
          "description": "If set to true, it permits switching to a branch with branch_id even if it has no sufficient active products."
        },
        "branchId": {
          "type": "string",
          "description": "The final component of the resource name of a branch. This field must be one of \"0\", \"1\" or \"2\". Otherwise, an INVALID_ARGUMENT error is returned. If there are no sufficient active products in the targeted branch and force is not set, a FAILED_PRECONDITION error is returned."
        }
      },
      "type": "object",
      "description": "Request message to set a specified branch as new default_branch."
    },
    "GoogleCloudRetailV2alphaExportMetadata": {
      "description": "Metadata related to the progress of the Export operation. This is returned by the google.longrunning.Operation.metadata field.",
      "type": "object",
      "id": "GoogleCloudRetailV2alphaExportMetadata",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Operation create time."
        },
        "updateTime": {
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2alphaPurgeProductsResponse": {
      "description": "Response of the PurgeProductsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.",
      "type": "object",
      "properties": {
        "purgeSample": {
          "description": "A sample of the product names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "purgeCount": {
          "format": "int64",
          "type": "string",
          "description": "The total count of products purged as a result of the operation."
        }
      },
      "id": "GoogleCloudRetailV2alphaPurgeProductsResponse"
    },
    "GoogleCloudRetailV2PurgeUserEventsRequest": {
      "type": "object",
      "id": "GoogleCloudRetailV2PurgeUserEventsRequest",
      "description": "Request message for PurgeUserEvents method.",
      "properties": {
        "force": {
          "description": "Actually perform the purge. If `force` is set to false, the method will return the expected purge count without deleting any user events.",
          "type": "boolean"
        },
        "filter": {
          "type": "string",
          "description": "Required. The filter string to specify the events to be deleted with a length limit of 5,000 characters. Empty string filter is not allowed. The eligible fields for filtering are: * `eventType`: Double quoted UserEvent.event_type string. * `eventTime`: in ISO 8601 \"zulu\" format. * `visitorId`: Double quoted string. Specifying this will delete all events associated with a visitor. * `userId`: Double quoted string. Specifying this will delete all events associated with a user. Examples: * Deleting all events in a time range: `eventTime \u003e \"2012-04-23T18:25:43.511Z\" eventTime \u003c \"2012-04-23T18:30:43.511Z\"` * Deleting specific eventType in time range: `eventTime \u003e \"2012-04-23T18:25:43.511Z\" eventType = \"detail-page-view\"` * Deleting all events for a specific visitor: `visitorId = \"visitor1024\"` The filtering fields are assumed to have an implicit AND."
        }
      }
    },
    "GoogleCloudRetailV2AddControlRequest": {
      "properties": {
        "controlId": {
          "description": "Required. The id of the control to apply. Assumed to be in the same catalog as the serving config - if id is not found a NOT_FOUND error is returned.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2AddControlRequest",
      "description": "Request for AddControl method.",
      "type": "object"
    },
    "GoogleCloudRetailLoggingImportErrorContext": {
      "type": "object",
      "id": "GoogleCloudRetailLoggingImportErrorContext",
      "description": "The error payload that is populated on LRO import APIs. Including: \"google.cloud.retail.v2.ProductService.ImportProducts\" \"google.cloud.retail.v2.EventService.ImportUserEvents\"",
      "properties": {
        "lineNumber": {
          "type": "string",
          "description": "Line number of the content in file. Should be empty for permission or batch operation error."
        },
        "product": {
          "description": "The detailed content which caused the error on importing a product.",
          "type": "string"
        },
        "userEvent": {
          "description": "The detailed content which caused the error on importing a user event.",
          "type": "string"
        },
        "gcsPath": {
          "type": "string",
          "description": "Cloud Storage file path of the import source. Can be set for batch operation error."
        },
        "operationName": {
          "type": "string",
          "description": "The operation resource name of the LRO."
        },
        "catalogItem": {
          "description": "The detailed content which caused the error on importing a catalog item.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2SearchRequestBoostSpec": {
      "type": "object",
      "properties": {
        "conditionBoostSpecs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec"
          },
          "description": "Condition boost specifications. If a product matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20."
        },
        "skipBoostSpecValidation": {
          "type": "boolean",
          "description": "Whether to skip boostspec validation. If this field is set to true, invalid BoostSpec.condition_boost_specs will be ignored and valid BoostSpec.condition_boost_specs will still be applied."
        }
      },
      "description": "Boost specification to boost certain items.",
      "id": "GoogleCloudRetailV2SearchRequestBoostSpec"
    },
    "GoogleCloudRetailV2alphaTuneModelResponse": {
      "properties": {},
      "id": "GoogleCloudRetailV2alphaTuneModelResponse",
      "type": "object",
      "description": "Response associated with a tune operation."
    },
    "GoogleCloudRetailV2alphaAddFulfillmentPlacesResponse": {
      "description": "Response of the AddFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the ProductService.AddFulfillmentPlaces method.",
      "properties": {},
      "id": "GoogleCloudRetailV2alphaAddFulfillmentPlacesResponse",
      "type": "object"
    },
    "GoogleCloudRetailV2betaAddFulfillmentPlacesResponse": {
      "id": "GoogleCloudRetailV2betaAddFulfillmentPlacesResponse",
      "properties": {},
      "description": "Response of the AddFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the ProductService.AddFulfillmentPlaces method.",
      "type": "object"
    },
    "GoogleCloudRetailV2ListServingConfigsResponse": {
      "type": "object",
      "description": "Response for ListServingConfigs method.",
      "properties": {
        "nextPageToken": {
          "description": "Pagination token, if not returned indicates the last page.",
          "type": "string"
        },
        "servingConfigs": {
          "type": "array",
          "description": "All the ServingConfigs for a given catalog.",
          "items": {
            "$ref": "GoogleCloudRetailV2ServingConfig"
          }
        }
      },
      "id": "GoogleCloudRetailV2ListServingConfigsResponse"
    },
    "GoogleCloudRetailV2CompletionDetail": {
      "properties": {
        "completionAttributionToken": {
          "description": "Completion attribution token in CompleteQueryResponse.attribution_token.",
          "type": "string"
        },
        "selectedSuggestion": {
          "description": "End user selected CompleteQueryResponse.CompletionResult.suggestion.",
          "type": "string"
        },
        "selectedPosition": {
          "format": "int32",
          "type": "integer",
          "description": "End user selected CompleteQueryResponse.CompletionResult.suggestion position, starting from 0."
        }
      },
      "description": "Detailed completion information including completion attribution token and clicked completion info.",
      "type": "object",
      "id": "GoogleCloudRetailV2CompletionDetail"
    },
    "GoogleCloudRetailV2alphaExportErrorsConfig": {
      "id": "GoogleCloudRetailV2alphaExportErrorsConfig",
      "description": "Configuration of destination for Export related errors.",
      "type": "object",
      "properties": {
        "gcsPrefix": {
          "type": "string",
          "description": "Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Export errors will be written to a file in this bucket, one per line, as a JSON-encoded `google.rpc.Status` message."
        }
      }
    },
    "GoogleCloudRetailV2UserInfo": {
      "type": "object",
      "id": "GoogleCloudRetailV2UserInfo",
      "description": "Information of an end user.",
      "properties": {
        "userAgent": {
          "description": "User agent as included in the HTTP header. Required for getting SearchResponse.sponsored_results. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.",
          "type": "string"
        },
        "directUserRequest": {
          "description": "True if the request is made directly from the end user, in which case the ip_address and user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.",
          "type": "boolean"
        },
        "userId": {
          "type": "string",
          "description": "Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "ipAddress": {
          "description": "The end user's IP address. This field is used to extract location information for personalization. This field must be either an IPv4 address (e.g. \"104.133.9.80\") or an IPv6 address (e.g. \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"). Otherwise, an INVALID_ARGUMENT error is returned. This should not be set when: * setting SearchRequest.user_info. * using the JavaScript tag in UserEventService.CollectUserEvent or if direct_user_request is set.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2SearchRequestPersonalizationSpec": {
      "type": "object",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "AUTO",
            "DISABLED"
          ],
          "enumDescriptions": [
            "Default value. In this case, server behavior defaults to Mode.AUTO.",
            "Let CRS decide whether to use personalization based on quality of user event data.",
            "Disable personalization."
          ],
          "description": "Defaults to Mode.AUTO.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2SearchRequestPersonalizationSpec",
      "description": "The specification for personalization."
    },
    "GoogleCloudRetailV2PurgeUserEventsResponse": {
      "properties": {
        "purgedEventsCount": {
          "description": "The total count of events purged as a result of the operation.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "GoogleCloudRetailV2PurgeUserEventsResponse",
      "description": "Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaModelServingConfigList": {
      "description": "Represents an ordered combination of valid serving configs, which can be used for `PAGE_OPTIMIZATION` recommendations.",
      "id": "GoogleCloudRetailV2betaModelServingConfigList",
      "properties": {
        "servingConfigIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A set of valid serving configs that may be used for `PAGE_OPTIMIZATION`."
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2RemoveFulfillmentPlacesRequest": {
      "description": "Request message for ProductService.RemoveFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2RemoveFulfillmentPlacesRequest",
      "properties": {
        "placeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The IDs for this type, such as the store IDs for \"pickup-in-store\" or the region IDs for \"same-day-delivery\", to be removed for this type. At least 1 value is required, and a maximum of 2000 values are allowed. Each value must be a string with a length limit of 10 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned."
        },
        "removeTime": {
          "description": "The time when the fulfillment updates are issued, used to prevent out-of-order updates on fulfillment information. If not provided, the internal system time will be used.",
          "format": "google-datetime",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Required. The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. This field directly corresponds to Product.fulfillment_info.type."
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the Product is not found, the fulfillment information will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found."
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2alphaRemoveLocalInventoriesMetadata": {
      "id": "GoogleCloudRetailV2alphaRemoveLocalInventoriesMetadata",
      "type": "object",
      "description": "Metadata related to the progress of the RemoveLocalInventories operation. Currently empty because there is no meaningful metadata populated from the ProductService.RemoveLocalInventories method.",
      "properties": {}
    },
    "GoogleCloudRetailV2betaAddLocalInventoriesResponse": {
      "properties": {},
      "type": "object",
      "description": "Response of the ProductService.AddLocalInventories API. Currently empty because there is no meaningful response populated from the ProductService.AddLocalInventories method.",
      "id": "GoogleCloudRetailV2betaAddLocalInventoriesResponse"
    },
    "GoogleCloudRetailV2betaModel": {
      "properties": {
        "tuningOperation": {
          "readOnly": true,
          "description": "Output only. The tune operation associated with the model. Can be used to determine if there is an ongoing tune for this recommendation. Empty field implies no tune is goig on.",
          "type": "string"
        },
        "filteringOption": {
          "description": "Optional. If `RECOMMENDATIONS_FILTERING_ENABLED`, recommendation filtering by attributes is enabled for the model.",
          "enumDescriptions": [
            "Value used when unset. In this case, server behavior defaults to RECOMMENDATIONS_FILTERING_DISABLED.",
            "Recommendation filtering is disabled.",
            "Recommendation filtering is enabled."
          ],
          "type": "string",
          "enum": [
            "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED",
            "RECOMMENDATIONS_FILTERING_DISABLED",
            "RECOMMENDATIONS_FILTERING_ENABLED"
          ]
        },
        "createTime": {
          "description": "Output only. Timestamp the Recommendation Model was created at.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "dataState": {
          "description": "Output only. The state of data requirements for this model: `DATA_OK` and `DATA_ERROR`. Recommendation model cannot be trained if the data is in `DATA_ERROR` state. Recommendation model can have `DATA_ERROR` state even if serving state is `ACTIVE`: models were trained successfully before, but cannot be refreshed because model no longer has sufficient data for training.",
          "enum": [
            "DATA_STATE_UNSPECIFIED",
            "DATA_OK",
            "DATA_ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified default value, should never be explicitly set.",
            "The model has sufficient training data.",
            "The model does not have sufficient training data. Error messages can be queried via Stackdriver."
          ],
          "readOnly": true
        },
        "trainingState": {
          "description": "Optional. The training state that the model is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train model in order to control cost. If not specified: the default value for `CreateModel` method is `TRAINING`. The default value for `UpdateModel` method is to keep the state the same as before.",
          "enum": [
            "TRAINING_STATE_UNSPECIFIED",
            "PAUSED",
            "TRAINING"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified training state.",
            "The model training is paused.",
            "The model is training."
          ]
        },
        "periodicTuningState": {
          "enum": [
            "PERIODIC_TUNING_STATE_UNSPECIFIED",
            "PERIODIC_TUNING_DISABLED",
            "ALL_TUNING_DISABLED",
            "PERIODIC_TUNING_ENABLED"
          ],
          "enumDescriptions": [
            "Unspecified default value, should never be explicitly set.",
            "The model has periodic tuning disabled. Tuning can be reenabled by calling the `EnableModelPeriodicTuning` method or by calling the `TuneModel` method.",
            "The model cannot be tuned with periodic tuning OR the `TuneModel` method. Hide the options in customer UI and reject any requests through the backend self serve API.",
            "The model has periodic tuning enabled. Tuning can be disabled by calling the `DisableModelPeriodicTuning` method."
          ],
          "description": "Optional. The state of periodic tuning. The period we use is 3 months - to do a one-off tune earlier use the `TuneModel` method. Default value is `PERIODIC_TUNING_ENABLED`.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Timestamp the Recommendation Model was last updated. E.g. if a Recommendation Model was paused - this would be the time the pause was initiated.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Required. The fully qualified resource name of the model. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}` catalog_id has char limit of 50. recommendation_model_id has char limit of 40."
        },
        "servingState": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified serving state.",
            "The model is not serving.",
            "The model is serving and can be queried.",
            "The model is trained on tuned hyperparameters and can be queried."
          ],
          "enum": [
            "SERVING_STATE_UNSPECIFIED",
            "INACTIVE",
            "ACTIVE",
            "TUNED"
          ],
          "description": "Output only. The serving state of the model: `ACTIVE`, `NOT_ACTIVE`.",
          "readOnly": true
        },
        "displayName": {
          "description": "Required. The display name of the model. Should be human readable, used to display Recommendation Models in the Retail Cloud Console Dashboard. UTF-8 encoded string with limit of 1024 characters.",
          "type": "string"
        },
        "optimizationObjective": {
          "type": "string",
          "description": "Optional. The optimization objective e.g. `cvr`. Currently supported values: `ctr`, `cvr`, `revenue-per-order`. If not specified, we choose default based on model type. Default depends on type of recommendation: `recommended-for-you` =\u003e `ctr` `others-you-may-like` =\u003e `ctr` `frequently-bought-together` =\u003e `revenue_per_order` This field together with optimization_objective describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = `frequently-bought-together` and optimization_objective = `ctr`), you receive an error 400 if you try to create/update a recommendation with this set of knobs."
        },
        "type": {
          "description": "Required. The type of model e.g. `home-page`. Currently supported values: `recommended-for-you`, `others-you-may-like`, `frequently-bought-together`, `page-optimization`, `similar-items`, `buy-it-again`, and `recently-viewed`(readonly value). This field together with optimization_objective describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = `frequently-bought-together` and optimization_objective = `ctr`), you receive an error 400 if you try to create/update a recommendation with this set of knobs.",
          "type": "string"
        },
        "lastTuneTime": {
          "type": "string",
          "description": "Output only. The timestamp when the latest successful tune finished.",
          "format": "google-datetime",
          "readOnly": true
        },
        "servingConfigLists": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaModelServingConfigList"
          },
          "type": "array",
          "description": "Output only. The list of valid serving configs associated with the PageOptimizationConfig.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2betaModel",
      "description": "Metadata that describes the training and serving parameters of a Model. A Model can be associated with a ServingConfig and then queried through the Predict API."
    },
    "GoogleCloudRetailV2betaRejoinUserEventsMetadata": {
      "description": "Metadata for `RejoinUserEvents` method.",
      "id": "GoogleCloudRetailV2betaRejoinUserEventsMetadata",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2AddLocalInventoriesResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2AddLocalInventoriesResponse",
      "properties": {},
      "description": "Response of the ProductService.AddLocalInventories API. Currently empty because there is no meaningful response populated from the ProductService.AddLocalInventories method."
    },
    "GoogleCloudRetailV2RemoveLocalInventoriesMetadata": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudRetailV2RemoveLocalInventoriesMetadata",
      "description": "Metadata related to the progress of the RemoveLocalInventories operation. Currently empty because there is no meaningful metadata populated from the ProductService.RemoveLocalInventories method."
    },
    "GoogleCloudRetailV2betaImportErrorsConfig": {
      "properties": {
        "gcsPrefix": {
          "description": "Google Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2betaImportErrorsConfig",
      "description": "Configuration of destination for Import related errors."
    },
    "GoogleCloudRetailV2SetInventoryResponse": {
      "id": "GoogleCloudRetailV2SetInventoryResponse",
      "description": "Response of the SetInventoryRequest. Currently empty because there is no meaningful response populated from the ProductService.SetInventory method.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2RuleOnewaySynonymsAction": {
      "description": "Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: \"sneakers\" will use a synonym of \"shoes\". \"shoes\" will not use a synonym of \"sneakers\".",
      "properties": {
        "synonyms": {
          "description": "Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "queryTerms": {
          "items": {
            "type": "string"
          },
          "description": "Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms.",
          "type": "array"
        },
        "onewayTerms": {
          "description": "Will be [deprecated = true] post migration;",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2RuleOnewaySynonymsAction"
    },
    "GoogleCloudRetailV2GetDefaultBranchResponse": {
      "properties": {
        "note": {
          "type": "string",
          "description": "This corresponds to SetDefaultBranchRequest.note field, when this branch was set as default."
        },
        "branch": {
          "type": "string",
          "description": "Full resource name of the branch id currently set as default branch."
        },
        "setTime": {
          "description": "The time when this branch is set to default.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2GetDefaultBranchResponse",
      "description": "Response message of CatalogService.GetDefaultBranch."
    },
    "GoogleCloudRetailV2alphaAddFulfillmentPlacesMetadata": {
      "description": "Metadata related to the progress of the AddFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the ProductService.AddFulfillmentPlaces method.",
      "type": "object",
      "id": "GoogleCloudRetailV2alphaAddFulfillmentPlacesMetadata",
      "properties": {}
    },
    "GoogleCloudRetailV2RuleReplacementAction": {
      "description": "Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace \"gShoe\" with \"google shoe\".",
      "id": "GoogleCloudRetailV2RuleReplacementAction",
      "properties": {
        "term": {
          "type": "string",
          "description": "Will be [deprecated = true] post migration;"
        },
        "queryTerms": {
          "type": "array",
          "description": "Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms.",
          "items": {
            "type": "string"
          }
        },
        "replacementTerm": {
          "description": "Term that will be used for replacement.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2PurchaseTransaction": {
      "description": "A transaction represents the entire purchase transaction.",
      "type": "object",
      "id": "GoogleCloudRetailV2PurchaseTransaction",
      "properties": {
        "revenue": {
          "type": "number",
          "format": "float",
          "description": "Required. Total non-zero revenue or grand total associated with the transaction. This value include shipping, tax, or other adjustments to total revenue that you want to include as part of your revenue calculations."
        },
        "id": {
          "description": "The transaction ID with a length limit of 128 characters.",
          "type": "string"
        },
        "currencyCode": {
          "description": "Required. Currency code. Use three-character ISO-4217 code.",
          "type": "string"
        },
        "cost": {
          "format": "float",
          "type": "number",
          "description": "All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs, such that: * Profit = revenue - tax - cost"
        },
        "tax": {
          "format": "float",
          "description": "All the taxes associated with the transaction.",
          "type": "number"
        }
      }
    },
    "GoogleCloudRetailV2alphaPurgeMetadata": {
      "properties": {},
      "id": "GoogleCloudRetailV2alphaPurgeMetadata",
      "description": "Metadata related to the progress of the Purge operation. This will be returned by the google.longrunning.Operation.metadata field.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaModel": {
      "id": "GoogleCloudRetailV2alphaModel",
      "type": "object",
      "description": "Metadata that describes the training and serving parameters of a Model. A Model can be associated with a ServingConfig and then queried through the Predict API.",
      "properties": {
        "trainingState": {
          "enum": [
            "TRAINING_STATE_UNSPECIFIED",
            "PAUSED",
            "TRAINING"
          ],
          "description": "Optional. The training state that the model is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train model in order to control cost. If not specified: the default value for `CreateModel` method is `TRAINING`. The default value for `UpdateModel` method is to keep the state the same as before.",
          "enumDescriptions": [
            "Unspecified training state.",
            "The model training is paused.",
            "The model is training."
          ],
          "type": "string"
        },
        "filteringOption": {
          "description": "Optional. If `RECOMMENDATIONS_FILTERING_ENABLED`, recommendation filtering by attributes is enabled for the model.",
          "enum": [
            "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED",
            "RECOMMENDATIONS_FILTERING_DISABLED",
            "RECOMMENDATIONS_FILTERING_ENABLED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Value used when unset. In this case, server behavior defaults to RECOMMENDATIONS_FILTERING_DISABLED.",
            "Recommendation filtering is disabled.",
            "Recommendation filtering is enabled."
          ]
        },
        "servingState": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified serving state.",
            "The model is not serving.",
            "The model is serving and can be queried.",
            "The model is trained on tuned hyperparameters and can be queried."
          ],
          "type": "string",
          "description": "Output only. The serving state of the model: `ACTIVE`, `NOT_ACTIVE`.",
          "enum": [
            "SERVING_STATE_UNSPECIFIED",
            "INACTIVE",
            "ACTIVE",
            "TUNED"
          ]
        },
        "periodicTuningState": {
          "enum": [
            "PERIODIC_TUNING_STATE_UNSPECIFIED",
            "PERIODIC_TUNING_DISABLED",
            "ALL_TUNING_DISABLED",
            "PERIODIC_TUNING_ENABLED"
          ],
          "enumDescriptions": [
            "Unspecified default value, should never be explicitly set.",
            "The model has periodic tuning disabled. Tuning can be reenabled by calling the `EnableModelPeriodicTuning` method or by calling the `TuneModel` method.",
            "The model cannot be tuned with periodic tuning OR the `TuneModel` method. Hide the options in customer UI and reject any requests through the backend self serve API.",
            "The model has periodic tuning enabled. Tuning can be disabled by calling the `DisableModelPeriodicTuning` method."
          ],
          "type": "string",
          "description": "Optional. The state of periodic tuning. The period we use is 3 months - to do a one-off tune earlier use the `TuneModel` method. Default value is `PERIODIC_TUNING_ENABLED`."
        },
        "pageOptimizationConfig": {
          "description": "Optional. The page optimization config.",
          "$ref": "GoogleCloudRetailV2alphaModelPageOptimizationConfig"
        },
        "type": {
          "type": "string",
          "description": "Required. The type of model e.g. `home-page`. Currently supported values: `recommended-for-you`, `others-you-may-like`, `frequently-bought-together`, `page-optimization`, `similar-items`, `buy-it-again`, and `recently-viewed`(readonly value). This field together with optimization_objective describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = `frequently-bought-together` and optimization_objective = `ctr`), you receive an error 400 if you try to create/update a recommendation with this set of knobs."
        },
        "tuningOperation": {
          "description": "Output only. The tune operation associated with the model. Can be used to determine if there is an ongoing tune for this recommendation. Empty field implies no tune is goig on.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp the Recommendation Model was last updated. E.g. if a Recommendation Model was paused - this would be the time the pause was initiated."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Timestamp the Recommendation Model was created at."
        },
        "lastTuneTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the latest successful tune finished.",
          "format": "google-datetime"
        },
        "name": {
          "description": "Required. The fully qualified resource name of the model. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}` catalog_id has char limit of 50. recommendation_model_id has char limit of 40.",
          "type": "string"
        },
        "optimizationObjective": {
          "type": "string",
          "description": "Optional. The optimization objective e.g. `cvr`. Currently supported values: `ctr`, `cvr`, `revenue-per-order`. If not specified, we choose default based on model type. Default depends on type of recommendation: `recommended-for-you` =\u003e `ctr` `others-you-may-like` =\u003e `ctr` `frequently-bought-together` =\u003e `revenue_per_order` This field together with optimization_objective describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = `frequently-bought-together` and optimization_objective = `ctr`), you receive an error 400 if you try to create/update a recommendation with this set of knobs."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the model. Should be human readable, used to display Recommendation Models in the Retail Cloud Console Dashboard. UTF-8 encoded string with limit of 1024 characters."
        },
        "dataState": {
          "type": "string",
          "description": "Output only. The state of data requirements for this model: `DATA_OK` and `DATA_ERROR`. Recommendation model cannot be trained if the data is in `DATA_ERROR` state. Recommendation model can have `DATA_ERROR` state even if serving state is `ACTIVE`: models were trained successfully before, but cannot be refreshed because model no longer has sufficient data for training.",
          "enum": [
            "DATA_STATE_UNSPECIFIED",
            "DATA_OK",
            "DATA_ERROR"
          ],
          "enumDescriptions": [
            "Unspecified default value, should never be explicitly set.",
            "The model has sufficient training data.",
            "The model does not have sufficient training data. Error messages can be queried via Stackdriver."
          ],
          "readOnly": true
        },
        "servingConfigLists": {
          "description": "Output only. The list of valid serving configs associated with the PageOptimizationConfig.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2alphaModelServingConfigList"
          }
        }
      }
    },
    "GoogleCloudRetailV2Promotion": {
      "properties": {
        "promotionId": {
          "type": "string",
          "description": "Promotion identifier, which is the final component of name. For example, this field is \"free_gift\", if name is `projects/*/locations/global/catalogs/default_catalog/promotions/free_gift`. The value must be a UTF-8 encoded string with a length limit of 128 characters, and match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS. Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google Merchant Center property [promotion_id](https://support.google.com/merchants/answer/7050148)."
        }
      },
      "description": "Promotion specification.",
      "type": "object",
      "id": "GoogleCloudRetailV2Promotion"
    },
    "GoogleCloudRetailV2betaExportErrorsConfig": {
      "description": "Configuration of destination for Export related errors.",
      "properties": {
        "gcsPrefix": {
          "description": "Google Cloud Storage path for import errors. This must be an empty, existing Cloud Storage bucket. Export errors will be written to a file in this bucket, one per line, as a JSON-encoded `google.rpc.Status` message.",
          "type": "string"
        }
      },
      "id": "GoogleCloudRetailV2betaExportErrorsConfig",
      "type": "object"
    },
    "GoogleCloudRetailV2AddLocalInventoriesRequest": {
      "type": "object",
      "description": "Request message for ProductService.AddLocalInventories method.",
      "properties": {
        "addTime": {
          "type": "string",
          "description": "The time when the inventory updates are issued. Used to prevent out-of-order updates on local inventory fields. If not provided, the internal system time will be used.",
          "format": "google-datetime"
        },
        "localInventories": {
          "items": {
            "$ref": "GoogleCloudRetailV2LocalInventory"
          },
          "type": "array",
          "description": "Required. A list of inventory information at difference places. Each place is identified by its place ID. At most 3000 inventories are allowed per request."
        },
        "allowMissing": {
          "description": "If set to true, and the Product is not found, the local inventory will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found.",
          "type": "boolean"
        },
        "addMask": {
          "description": "Indicates which inventory fields in the provided list of LocalInventory to update. The field is updated to the provided value. If a field is set while the place does not have a previous local inventory, the local inventory at that store is created. If a field is set while the value of that field is not provided, the original field value, if it exists, is deleted. If the mask is not set or set with empty paths, all inventory fields will be updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT error is returned and the entire update will be ignored.",
          "type": "string",
          "format": "google-fieldmask"
        }
      },
      "id": "GoogleCloudRetailV2AddLocalInventoriesRequest"
    },
    "GoogleCloudRetailV2AddFulfillmentPlacesResponse": {
      "description": "Response of the AddFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the ProductService.AddFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2AddFulfillmentPlacesResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2UserEventInlineSource": {
      "description": "The inline source for the input config for ImportUserEvents method.",
      "properties": {
        "userEvents": {
          "description": "Required. A list of user events to import. Recommended max of 10k items.",
          "items": {
            "$ref": "GoogleCloudRetailV2UserEvent"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudRetailV2UserEventInlineSource",
      "type": "object"
    },
    "GoogleCloudRetailV2betaRejoinUserEventsResponse": {
      "description": "Response message for `RejoinUserEvents` method.",
      "id": "GoogleCloudRetailV2betaRejoinUserEventsResponse",
      "properties": {
        "rejoinedUserEventsCount": {
          "format": "int64",
          "description": "Number of user events that were joined with latest product catalog.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudRetailV2Control": {
      "type": "object",
      "description": "Configures dynamic metadata that can be linked to a ServingConfig and affect search or recommendation results at serving time.",
      "id": "GoogleCloudRetailV2Control",
      "properties": {
        "name": {
          "description": "Immutable. Fully qualified name `projects/*/locations/global/catalogs/*/controls/*`",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The human readable control display name. Used in Retail UI. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is thrown.",
          "type": "string"
        },
        "solutionTypes": {
          "items": {
            "enumDescriptions": [
              "Default value.",
              "Used for Recommendations AI.",
              "Used for Retail Search."
            ],
            "type": "string",
            "enum": [
              "SOLUTION_TYPE_UNSPECIFIED",
              "SOLUTION_TYPE_RECOMMENDATION",
              "SOLUTION_TYPE_SEARCH"
            ]
          },
          "type": "array",
          "description": "Required. Immutable. The solution types that the control is used for. Currently we support setting only one type of solution at creation time. Only `SOLUTION_TYPE_SEARCH` value is supported at the moment. If no solution type is provided at creation time, will default to SOLUTION_TYPE_SEARCH."
        },
        "searchSolutionUseCase": {
          "description": "Specifies the use case for the control. Affects what condition fields can be set. Only settable by search controls. Will default to SEARCH_SOLUTION_USE_CASE_SEARCH if not specified. Currently only allow one search_solution_use_case per control.",
          "type": "array",
          "items": {
            "enum": [
              "SEARCH_SOLUTION_USE_CASE_UNSPECIFIED",
              "SEARCH_SOLUTION_USE_CASE_SEARCH",
              "SEARCH_SOLUTION_USE_CASE_BROWSE"
            ],
            "enumDescriptions": [
              "The value when it's unspecified. In this case, server behavior defaults to SEARCH_SOLUTION_USE_CASE_SEARCH.",
              "Search use case. Expects the traffic has a non-empty query.",
              "Browse use case. Expects the traffic has an empty query."
            ],
            "type": "string"
          }
        },
        "rule": {
          "$ref": "GoogleCloudRetailV2Rule",
          "description": "A rule control - a condition-action pair. Enacts a set action when the condition is triggered. For example: Boost \"gShoe\" when query full matches \"Running Shoes\"."
        },
        "associatedServingConfigIds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "description": "Output only. List of serving configuration ids that are associated with this control in the same Catalog. Note the association is managed via the ServingConfig, this is an output only denormalized view."
        }
      }
    },
    "GoogleCloudRetailV2alphaExportUserEventsResponse": {
      "id": "GoogleCloudRetailV2alphaExportUserEventsResponse",
      "properties": {
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2alphaExportErrorsConfig",
          "description": "This field is never set."
        },
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "A sample of errors encountered while processing the request."
        },
        "outputResult": {
          "$ref": "GoogleCloudRetailV2alphaOutputResult",
          "description": "Output result indicating where the data were exported to."
        }
      },
      "type": "object",
      "description": "Response of the ExportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful."
    },
    "GoogleCloudRetailV2CompletionDataInputConfig": {
      "description": "The input config source for completion data.",
      "properties": {
        "bigQuerySource": {
          "$ref": "GoogleCloudRetailV2BigQuerySource",
          "description": "Required. BigQuery input source. Add the IAM permission \"BigQuery Data Viewer\" for cloud-retail-customer-data-access@system.gserviceaccount.com before using this feature otherwise an error is thrown."
        }
      },
      "id": "GoogleCloudRetailV2CompletionDataInputConfig",
      "type": "object"
    },
    "GoogleCloudRetailV2ImportErrorsConfig": {
      "id": "GoogleCloudRetailV2ImportErrorsConfig",
      "properties": {
        "gcsPrefix": {
          "type": "string",
          "description": "Google Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message."
        }
      },
      "description": "Configuration of destination for Import related errors.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaOutputResult": {
      "type": "object",
      "properties": {
        "bigqueryResult": {
          "items": {
            "$ref": "GoogleCloudRetailV2betaBigQueryOutputResult"
          },
          "description": "Export result in BigQuery.",
          "type": "array"
        }
      },
      "description": "Output result.",
      "id": "GoogleCloudRetailV2betaOutputResult"
    },
    "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesMetadata": {
      "description": "Metadata related to the progress of the RemoveFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the ProductService.RemoveFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2alphaRemoveFulfillmentPlacesMetadata",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2SearchRequestFacetSpecFacetKey": {
      "type": "object",
      "properties": {
        "key": {
          "description": "Required. Supported textual and numerical facet keys in Product object, over which the facet values are computed. Facet key is case-sensitive. Allowed facet keys when FacetKey.query is not specified: * textual_field = * \"brands\" * \"categories\" * \"genders\" * \"ageGroups\" * \"availability\" * \"colorFamilies\" * \"colors\" * \"sizes\" * \"materials\" * \"patterns\" * \"conditions\" * \"attributes.key\" * \"pickupInStore\" * \"shipToStore\" * \"sameDayDelivery\" * \"nextDayDelivery\" * \"customFulfillment1\" * \"customFulfillment2\" * \"customFulfillment3\" * \"customFulfillment4\" * \"customFulfillment5\" * \"inventory(place_id,attributes.key)\" * numerical_field = * \"price\" * \"discount\" * \"rating\" * \"ratingCount\" * \"attributes.key\" * \"inventory(place_id,price)\" * \"inventory(place_id,original_price)\" * \"inventory(place_id,attributes.key)\"",
          "type": "string"
        },
        "contains": {
          "description": "Only get facet values that contains the given strings. For example, suppose \"categories\" has three values \"Women \u003e Shoe\", \"Women \u003e Dress\" and \"Men \u003e Shoe\". If set \"contains\" to \"Shoe\", the \"categories\" facet will give only \"Women \u003e Shoe\" and \"Men \u003e Shoe\". Only supported on textual fields. Maximum is 10.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "restrictedValues": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Only get facet for the given restricted values. For example, when using \"pickupInStore\" as key and set restricted values to [\"store123\", \"store456\"], only facets for \"store123\" and \"store456\" are returned. Only supported on predefined textual fields, custom textual attributes and fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: * pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery * customFulfillment1 * customFulfillment2 * customFulfillment3 * customFulfillment4 * customFulfillment5"
        },
        "caseInsensitive": {
          "type": "boolean",
          "description": "True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise."
        },
        "orderBy": {
          "description": "The order in which SearchResponse.Facet.values are returned. Allowed values are: * \"count desc\", which means order by SearchResponse.Facet.values.count descending. * \"value desc\", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals; FulfillmentInfo.place_ids are sorted in the order given by FacetSpec.FacetKey.restricted_values.",
          "type": "string"
        },
        "returnMinMax": {
          "type": "boolean",
          "description": "Returns the min and max value for each numerical facet intervals. Ignored for textual facets."
        },
        "intervals": {
          "items": {
            "$ref": "GoogleCloudRetailV2Interval"
          },
          "type": "array",
          "description": "Set only if values should be bucketized into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30."
        },
        "prefixes": {
          "description": "Only get facet values that start with the given string prefix. For example, suppose \"categories\" has three values \"Women \u003e Shoe\", \"Women \u003e Dress\" and \"Men \u003e Shoe\". If set \"prefixes\" to \"Women\", the \"categories\" facet will give only \"Women \u003e Shoe\" and \"Women \u003e Dress\". Only supported on textual fields. Maximum is 10.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "description": "The query that is used to compute facet for the given facet key. When provided, it will override the default behavior of facet computation. The query syntax is the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Notice that there is no limitation on FacetKey.key when query is specified. In the response, SearchResponse.Facet.values.value will be always \"1\" and SearchResponse.Facet.values.count will be the number of results that match the query. For example, you can set a customized facet for \"shipToStore\", where FacetKey.key is \"customizedShipToStore\", and FacetKey.query is \"availability: ANY(\\\"IN_STOCK\\\") AND shipToStore: ANY(\\\"123\\\")\". Then the facet will count the products that are both in stock and ship to store \"123\".",
          "type": "string"
        }
      },
      "description": "Specifies how a facet is computed.",
      "id": "GoogleCloudRetailV2SearchRequestFacetSpecFacetKey"
    },
    "GoogleCloudRetailV2alphaSetInventoryResponse": {
      "properties": {},
      "description": "Response of the SetInventoryRequest. Currently empty because there is no meaningful response populated from the ProductService.SetInventory method.",
      "type": "object",
      "id": "GoogleCloudRetailV2alphaSetInventoryResponse"
    },
    "GoogleCloudRetailV2CompleteQueryResponseRecentSearchResult": {
      "id": "GoogleCloudRetailV2CompleteQueryResponseRecentSearchResult",
      "properties": {
        "recentSearch": {
          "type": "string",
          "description": "The recent search query."
        }
      },
      "type": "object",
      "description": "Recent search of this user."
    },
    "GoogleCloudRetailV2ImportUserEventsResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2ImportUserEventsResponse",
      "description": "Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.",
      "properties": {
        "importSummary": {
          "description": "Aggregated statistics of user event import status.",
          "$ref": "GoogleCloudRetailV2UserEventImportSummary"
        },
        "errorsConfig": {
          "$ref": "GoogleCloudRetailV2ImportErrorsConfig",
          "description": "Echoes the destination for the complete errors if this field was set in the request."
        },
        "errorSamples": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "A sample of errors encountered while processing the request."
        }
      }
    },
    "GoogleCloudRetailV2alphaTuneModelMetadata": {
      "id": "GoogleCloudRetailV2alphaTuneModelMetadata",
      "properties": {
        "model": {
          "description": "The resource name of the model that this tune applies to. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Metadata associated with a tune operation."
    },
    "GoogleCloudRetailV2alphaModelPageOptimizationConfig": {
      "id": "GoogleCloudRetailV2alphaModelPageOptimizationConfig",
      "properties": {
        "panels": {
          "description": "Required. A list of panel configurations. Limit = 5.",
          "items": {
            "$ref": "GoogleCloudRetailV2alphaModelPageOptimizationConfigPanel"
          },
          "type": "array"
        },
        "restriction": {
          "enumDescriptions": [
            "Unspecified value for restriction.",
            "Allow any ServingConfig to be show on any number of panels. Example: `Panel1 candidates`: pdp_ctr, pdp_cvr, home_page_ctr_no_diversity `Panel2 candidates`: home_page_ctr_no_diversity, home_page_ctr_diversity, pdp_cvr_no_diversity `Restriction` = NO_RESTRICTION `Valid combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr, home_page_ctr_diversity) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr, home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity) * (pdp_cvr, pdp_cvr_no_diversity) * (home_page_ctr_no_diversity, home_page_ctr_no_diversity) * (home_page_ctr_no_diversity, home_page_ctr_diversity) * (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid combinations`: []",
            "Do not allow the same ServingConfig.name to be shown on multiple panels. Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr, home_page_ctr_no_diversity * `Panel2 candidates`: * home_page_ctr_no_diversity, home_page_ctr_diversity_low, pdp_cvr_no_diversity * `Restriction` = `UNIQUE_SERVING_CONFIG_RESTRICTION` `Valid combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr, home_page_ctr_diversity_low) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr, home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity_low) * (pdp_cvr, pdp_cvr_no_diversity) * (home_page_ctr_no_diversity, home_page_ctr_diversity_low) * (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid combinations`: * * (home_page_ctr_no_diversity, home_page_ctr_no_diversity) *",
            "Do not allow multiple ServingConfigs with same Model.name to be show on on different panels. Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr, home_page_ctr_no_diversity * `Panel2 candidates`: * home_page_ctr_no_diversity, home_page_ctr_diversity_low, pdp_cvr_no_diversity * `Restriction` = `UNIQUE_MODEL_RESTRICTION` `Valid combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr, home_page_ctr_diversity) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr, home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity_low) * (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid combinations`: * * (home_page_ctr_no_diversity, home_page_ctr_no_diversity) * (pdp_cvr, pdp_cvr_no_diversity) *",
            "Do not allow multiple ServingConfigs with same Model.type to be shown on different panels. Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr, home_page_ctr_no_diversity * `Panel2 candidates`: * home_page_ctr_no_diversity, home_page_ctr_diversity_low, pdp_cvr_no_diversity * `Restriction` = `UNIQUE_MODEL_RESTRICTION` `Valid combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr, home_page_ctr_diversity) * (pdp_cvr, home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity_low) * (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid combinations`: * * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr, pdp_cvr_no_diversity) * (home_page_ctr_no_diversity, home_page_ctr_no_diversity) * (home_page_ctr_no_diversity, home_page_ctr_diversity) *"
          ],
          "type": "string",
          "description": "Optional. How to restrict results across panels e.g. can the same ServingConfig be shown on multiple panels at once. If unspecified, default to `UNIQUE_MODEL_RESTRICTION`.",
          "enum": [
            "RESTRICTION_UNSPECIFIED",
            "NO_RESTRICTION",
            "UNIQUE_SERVING_CONFIG_RESTRICTION",
            "UNIQUE_MODEL_RESTRICTION",
            "UNIQUE_MODEL_TYPE_RESTRICTION"
          ]
        },
        "pageOptimizationEventType": {
          "description": "Required. The type of UserEvent this page optimization is shown for. Each page has an associated event type - this will be the corresponding event type for the page that the page optimization model is used on. Supported types: * `add-to-cart`: Products being added to cart. * `detail-page-view`: Products detail page viewed. * `home-page-view`: Homepage viewed * `category-page-view`: Homepage viewed * `shopping-cart-page-view`: User viewing a shopping cart. `home-page-view` only allows models with type `recommended-for-you`. All other page_optimization_event_type allow all Model.types.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The PageOptimizationConfig for model training. This determines how many panels to optimize for, and which serving configurations to consider for each panel. The purpose of this model is to optimize which ServingConfig to show on which panels in way that optimizes the visitors shopping journey."
    },
    "GoogleCloudRetailV2alphaAddLocalInventoriesResponse": {
      "properties": {},
      "id": "GoogleCloudRetailV2alphaAddLocalInventoriesResponse",
      "description": "Response of the ProductService.AddLocalInventories API. Currently empty because there is no meaningful response populated from the ProductService.AddLocalInventories method.",
      "type": "object"
    },
    "GoogleApiHttpBody": {
      "id": "GoogleApiHttpBody",
      "properties": {
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The HTTP request/response body as raw binary."
        },
        "extensions": {
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "contentType": {
          "description": "The HTTP Content-Type header value specifying the content type of the body.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
    },
    "GoogleCloudRetailV2SearchResponseSearchResult": {
      "id": "GoogleCloudRetailV2SearchResponseSearchResult",
      "properties": {
        "product": {
          "$ref": "GoogleCloudRetailV2Product",
          "description": "The product data snippet in the search response. Only Product.name is guaranteed to be populated. Product.variants contains the product variants that match the search query. If there are multiple product variants matching the query, top 5 most relevant product variants are returned and ordered by relevancy. If relevancy can be deternmined, use matching_variant_fields to look up matched product variants fields. If relevancy cannot be determined, e.g. when searching \"shoe\" all products in a shoe product can be a match, 5 product variants are returned but order is meaningless."
        },
        "matchingVariantCount": {
          "format": "int32",
          "description": "The count of matched variant Products.",
          "type": "integer"
        },
        "variantRollupValues": {
          "additionalProperties": {
            "type": "any"
          },
          "type": "object",
          "description": "The rollup matching variant Product attributes. The key is one of the SearchRequest.variant_rollup_keys. The values are the merged and de-duplicated Product attributes. Notice that the rollup values are respect filter. For example, when filtering by \"colorFamilies:ANY(\\\"red\\\")\" and rollup \"colorFamilies\", only \"red\" is returned. For textual and numerical attributes, the rollup values is a list of string or double values with type google.protobuf.ListValue. For example, if there are two variants with colors \"red\" and \"blue\", the rollup values are { key: \"colorFamilies\" value { list_value { values { string_value: \"red\" } values { string_value: \"blue\" } } } } For FulfillmentInfo, the rollup values is a double value with type google.protobuf.Value. For example, `{key: \"pickupInStore.store1\" value { number_value: 10 }}` means a there are 10 variants in this product are available in the store \"store1\"."
        },
        "id": {
          "description": "Product.id of the searched Product.",
          "type": "string"
        },
        "personalLabels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies previous events related to this product for this user based on UserEvent with same SearchRequest.visitor_id or UserInfo.user_id. This is set only when SearchRequest.PersonalizationSpec.mode is SearchRequest.PersonalizationSpec.Mode.AUTO. Possible values: * `purchased`: Indicates that this product has been purchased before."
        },
        "matchingVariantFields": {
          "type": "object",
          "description": "If a variant Product matches the search query, this map indicates which Product fields are matched. The key is the Product.name, the value is a field mask of the matched Product fields. If matched attributes cannot be determined, this map will be empty. For example, a key \"sku1\" with field mask \"products.color_info\" indicates there is a match between \"sku1\" ColorInfo and the query.",
          "additionalProperties": {
            "format": "google-fieldmask",
            "type": "string"
          }
        }
      },
      "description": "Represents the search results.",
      "type": "object"
    },
    "GoogleCloudRetailV2betaSetInventoryMetadata": {
      "description": "Metadata related to the progress of the SetInventory operation. Currently empty because there is no meaningful metadata populated from the ProductService.SetInventory method.",
      "id": "GoogleCloudRetailV2betaSetInventoryMetadata",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudRetailV2RemoveFulfillmentPlacesMetadata": {
      "id": "GoogleCloudRetailV2RemoveFulfillmentPlacesMetadata",
      "properties": {},
      "description": "Metadata related to the progress of the RemoveFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the ProductService.RemoveFulfillmentPlaces method.",
      "type": "object"
    },
    "GoogleCloudRetailV2CompleteQueryResponse": {
      "id": "GoogleCloudRetailV2CompleteQueryResponse",
      "properties": {
        "completionResults": {
          "description": "Results of the matching suggestions. The result list is ordered and the first result is top suggestion.",
          "items": {
            "$ref": "GoogleCloudRetailV2CompleteQueryResponseCompletionResult"
          },
          "type": "array"
        },
        "attributionToken": {
          "description": "A unique complete token. This should be included in the UserEvent.completion_detail for search events resulting from this completion, which enables accurate attribution of complete model performance.",
          "type": "string"
        },
        "recentSearchResults": {
          "items": {
            "$ref": "GoogleCloudRetailV2CompleteQueryResponseRecentSearchResult"
          },
          "description": "Matched recent searches of this user. The maximum number of recent searches is 10. This field is a restricted feature. Contact Retail Search support team if you are interested in enabling it. This feature is only available when CompleteQueryRequest.visitor_id field is set and UserEvent is imported. The recent searches satisfy the follow rules: * They are ordered from latest to oldest. * They are matched with CompleteQueryRequest.query case insensitively. * They are transformed to lower case. * They are UTF-8 safe. Recent searches are deduplicated. More recent searches will be reserved when duplication happens.",
          "type": "array"
        }
      },
      "description": "Response of the auto-complete query.",
      "type": "object"
    },
    "GoogleCloudRetailV2SearchRequestSpellCorrectionSpec": {
      "description": "The specification for query spell correction.",
      "type": "object",
      "properties": {
        "mode": {
          "enum": [
            "MODE_UNSPECIFIED",
            "SUGGESTION_ONLY",
            "AUTO"
          ],
          "description": "The mode under which spell correction should take effect to replace the original search query. Default to Mode.AUTO.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified spell correction mode. In this case, server behavior defaults to Mode.AUTO.",
            "Google Retail Search will try to find a spell suggestion if there is any and put in the SearchResponse.corrected_query. The spell suggestion will not be used as the search query.",
            "Automatic spell correction built by Google Retail Search. Search will be based on the corrected query if found."
          ]
        }
      },
      "id": "GoogleCloudRetailV2SearchRequestSpellCorrectionSpec"
    },
    "GoogleCloudRetailV2RemoveCatalogAttributeRequest": {
      "id": "GoogleCloudRetailV2RemoveCatalogAttributeRequest",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. The attribute name key of the CatalogAttribute to remove."
        }
      },
      "type": "object",
      "description": "Request for CatalogService.RemoveCatalogAttribute method."
    },
    "GoogleCloudRetailV2alphaImportCompletionDataResponse": {
      "properties": {
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2alphaImportCompletionDataResponse",
      "description": "Response of the ImportCompletionDataRequest. If the long running operation is done, this message is returned by the google.longrunning.Operations.response field if the operation is successful."
    },
    "GoogleCloudRetailV2ReplaceCatalogAttributeRequest": {
      "description": "Request for CatalogService.ReplaceCatalogAttribute method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "Indicates which fields in the provided CatalogAttribute to update. The following are NOT supported: * CatalogAttribute.key If not set, all supported fields are updated."
        },
        "catalogAttribute": {
          "$ref": "GoogleCloudRetailV2CatalogAttribute",
          "description": "Required. The updated CatalogAttribute."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2ReplaceCatalogAttributeRequest"
    },
    "GoogleCloudRetailV2alphaRejoinUserEventsResponse": {
      "description": "Response message for `RejoinUserEvents` method.",
      "properties": {
        "rejoinedUserEventsCount": {
          "type": "string",
          "format": "int64",
          "description": "Number of user events that were joined with latest product catalog."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2alphaRejoinUserEventsResponse"
    },
    "GoogleCloudRetailV2SearchRequestFacetSpec": {
      "id": "GoogleCloudRetailV2SearchRequestFacetSpec",
      "type": "object",
      "description": "A facet specification to perform faceted search.",
      "properties": {
        "limit": {
          "format": "int32",
          "type": "integer",
          "description": "Maximum of facet values that should be returned for this facet. If unspecified, defaults to 20. The maximum allowed value is 300. Values above 300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT is returned."
        },
        "facetKey": {
          "$ref": "GoogleCloudRetailV2SearchRequestFacetSpecFacetKey",
          "description": "Required. The facet key specification."
        },
        "enableDynamicPosition": {
          "description": "Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined by Google Retail Search. It will be ordered together with dynamic facets if dynamic facets is enabled. If set to false, the position of this facet in the response will be the same as in the request, and it will be ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response will be determined by Google Retail Search. Another example, assuming you have the following facets in the request: * \"rating\", enable_dynamic_position = true * \"price\", enable_dynamic_position = false * \"brands\", enable_dynamic_position = false And also you have a dynamic facets enable, which will generate a facet 'gender'. Then the final order of the facets in the response can be (\"price\", \"brands\", \"rating\", \"gender\") or (\"price\", \"brands\", \"gender\", \"rating\") depends on how Google Retail Search orders \"gender\" and \"rating\" facets. However, notice that \"price\" and \"brands\" will always be ranked at 1st and 2nd position since their enable_dynamic_position are false.",
          "type": "boolean"
        },
        "excludedFilterKeys": {
          "type": "array",
          "description": "List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 products with the color facet \"Red\" and 200 products with the color facet \"Blue\". A query containing the filter \"colorFamilies:ANY(\"Red\")\" and having \"colorFamilies\" as FacetKey.key would by default return only \"Red\" products in the search results, and also return \"Red\" with count 100 as the only color facet. Although there are also blue products available, \"Blue\" would not be shown as an available facet value. If \"colorFamilies\" is listed in \"excludedFilterKeys\", then the query returns the facet values \"Red\" with count 100 and \"Blue\" with count 200, because the \"colorFamilies\" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only \"Red\" products. A maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is returned.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRetailLoggingSourceLocation": {
      "properties": {
        "functionName": {
          "description": "Human-readable name of a function or method. For example, \"google.cloud.retail.v2.UserEventService.ImportUserEvents\".",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Indicates a location in the source code of the service for which errors are reported.",
      "id": "GoogleCloudRetailLoggingSourceLocation"
    },
    "GoogleCloudRetailV2ImportCompletionDataResponse": {
      "type": "object",
      "id": "GoogleCloudRetailV2ImportCompletionDataResponse",
      "properties": {
        "errorSamples": {
          "description": "A sample of errors encountered while processing the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "description": "Response of the ImportCompletionDataRequest. If the long running operation is done, this message is returned by the google.longrunning.Operations.response field if the operation is successful."
    },
    "GoogleCloudRetailV2PredictRequest": {
      "type": "object",
      "id": "GoogleCloudRetailV2PredictRequest",
      "properties": {
        "pageToken": {
          "type": "string",
          "description": "This field is not used; leave it unset."
        },
        "labels": {
          "description": "The labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "userEvent": {
          "description": "Required. Context about the user, what they are looking at and what action they took to trigger the predict request. Note that this user event detail won't be ingested to userEvent logs. Thus, a separate userEvent write request is required for event logging. Don't set UserEvent.visitor_id or UserInfo.user_id to the same fixed ID for different users. If you are trying to receive non-personalized recommendations (not recommended; this can negatively impact model performance), instead set UserEvent.visitor_id to a random unique ID and leave UserInfo.user_id unset.",
          "$ref": "GoogleCloudRetailV2UserEvent"
        },
        "pageSize": {
          "description": "Maximum number of results to return. Set this property to the number of prediction results needed. If zero, the service will choose a reasonable default. The maximum allowed value is 100. Values above 100 will be coerced to 100.",
          "format": "int32",
          "type": "integer"
        },
        "filter": {
          "description": "Filter for restricting prediction results with a length limit of 5,000 characters. Accepts values for tags and the `filterOutOfStockItems` flag. * Tag expressions. Restricts predictions to products that match all of the specified tags. Boolean operators `OR` and `NOT` are supported if the expression is enclosed in parentheses, and must be separated from the tag values by a space. `-\"tagA\"` is also supported and is equivalent to `NOT \"tagA\"`. Tag values must be double quoted UTF-8 encoded strings with a size limit of 1,000 characters. Note: \"Recently viewed\" models don't support tag filtering at the moment. * filterOutOfStockItems. Restricts predictions to products that do not have a stockState value of OUT_OF_STOCK. Examples: * tag=(\"Red\" OR \"Blue\") tag=\"New-Arrival\" tag=(NOT \"promotional\") * filterOutOfStockItems tag=(-\"promotional\") * filterOutOfStockItems If your filter blocks all prediction results, the API will return generic (unfiltered) popular products. If you only want results strictly matching the filters, set `strictFiltering` to True in `PredictRequest.params` to receive empty results instead. Note that the API will never return items with storageStatus of \"EXPIRED\" or \"DELETED\" regardless of filter choices. If `filterSyntaxV2` is set to true under the `params` field, then attribute-based expressions are expected instead of the above described tag-based syntax. Examples: * (colors: ANY(\"Red\", \"Blue\")) AND NOT (categories: ANY(\"Phones\")) * (availability: ANY(\"IN_STOCK\")) AND (colors: ANY(\"Red\") OR categories: ANY(\"Phones\"))",
          "type": "string"
        },
        "validateOnly": {
          "type": "boolean",
          "description": "Use validate only mode for this prediction query. If set to true, a dummy model will be used that returns arbitrary products. Note that the validate only mode should only be used for testing the API, or if the model is not ready."
        },
        "params": {
          "additionalProperties": {
            "type": "any"
          },
          "description": "Additional domain specific parameters for the predictions. Allowed values: * `returnProduct`: Boolean. If set to true, the associated product object will be returned in the `results.metadata` field in the prediction response. * `returnScore`: Boolean. If set to true, the prediction 'score' corresponding to each returned product will be set in the `results.metadata` field in the prediction response. The given 'score' indicates the probability of an product being clicked/purchased given the user's context and history. * `strictFiltering`: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular products instead of empty if your filter blocks all prediction results. * `priceRerankLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {'no-price-reranking', 'low-price-reranking', 'medium-price-reranking', 'high-price-reranking'}. This gives request-level control and adjusts prediction results based on product price. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of {'no-diversity', 'low-diversity', 'medium-diversity', 'high-diversity', 'auto-diversity'}. This gives request-level control and adjusts prediction results based on product category. * `filterSyntaxV2`: Boolean. False by default. If set to true, the `filter` field is interpreteted according to the new, attribute-based syntax.",
          "type": "object"
        }
      },
      "description": "Request message for Predict method."
    },
    "GoogleCloudRetailV2Product": {
      "description": "Product captures all metadata information of items to be recommended or searched.",
      "properties": {
        "languageCode": {
          "description": "Language of the title/description and other string attributes. Use language tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For product prediction, this field is ignored and the model automatically detects the text language. The Product can include text in different languages, but duplicating Products to provide text in multiple languages can result in degraded model performance. For product search this field is in use. It defaults to \"en-US\" if unset.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. Full resource name of the product, such as `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`."
        },
        "colorInfo": {
          "description": "The color of the product. Corresponding properties: Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).",
          "$ref": "GoogleCloudRetailV2ColorInfo"
        },
        "retrievableFields": {
          "type": "string",
          "description": "Indicates which fields in the Products are returned in SearchResponse. Supported fields for all types: * audience * availability * brands * color_info * conditions * gtin * materials * name * patterns * price_info * rating * sizes * title * uri Supported fields only for Type.PRIMARY and Type.COLLECTION: * categories * description * images Supported fields only for Type.VARIANT: * Only the first image in images To mark attributes as retrievable, include paths of the form \"attributes.key\" where \"key\" is the key of a custom attribute, as specified in attributes. For Type.PRIMARY and Type.COLLECTION, the following fields are always returned in SearchResponse by default: * name For Type.VARIANT, the following fields are always returned in by default: * name * color_info The maximum number of paths is 30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more fields in SearchResponse can increase response payload size and serving latency.",
          "format": "google-fieldmask"
        },
        "priceInfo": {
          "description": "Product price and cost information. Corresponding properties: Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371).",
          "$ref": "GoogleCloudRetailV2PriceInfo"
        },
        "description": {
          "description": "Product description. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [description](https://support.google.com/merchants/answer/6324468). Schema.org property [Product.description](https://schema.org/description).",
          "type": "string"
        },
        "attributes": {
          "description": "Highly encouraged. Extra product attributes to be included. For example, for products, this could include the store name, vendor, style, color, etc. These are very strong signals for recommendation model, thus we highly recommend providing the attributes here. Features that can take on one of a limited number of possible values. Two types of features can be set are: Textual features. some examples would be the brand/maker of a product, or country of a customer. Numerical features. Some examples would be the height/weight of a product, or age of a customer. For example: `{ \"vendor\": {\"text\": [\"vendor123\", \"vendor456\"]}, \"lengths_cm\": {\"numbers\":[2.3, 15.4]}, \"heights_cm\": {\"numbers\":[8.1, 6.4]} }`. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries count: 200. * The key must be a UTF-8 encoded string with a length limit of 128 characters. * For indexable attribute, the key must match the pattern: `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a non-empty UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed.",
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2CustomAttribute"
          },
          "type": "object"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Custom tags associated with the product. At most 250 values are allowed per Product. This value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag can be used for filtering recommendation results by passing the tag as part of the PredictRequest.filter. Corresponding properties: Google Merchant Center property [custom_label_0–4](https://support.google.com/merchants/answer/6324473)."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Default value. Default to Catalog.product_level_config.ingestion_product_type if unset.",
            "The primary type. As the primary unit for predicting, indexing and search serving, a Type.PRIMARY Product is grouped with multiple Type.VARIANT Products.",
            "The variant type. Type.VARIANT Products usually share some common attributes on the same Type.PRIMARY Products, but they have variant attributes like different colors, sizes and prices, etc.",
            "The collection type. Collection products are bundled Type.PRIMARY Products or Type.VARIANT Products that are sold together, such as a jewelry set with necklaces, earrings and rings, etc."
          ],
          "description": "Immutable. The type of the product. Default to Catalog.product_level_config.ingestion_product_type if unset.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "PRIMARY",
            "VARIANT",
            "COLLECTION"
          ]
        },
        "brands": {
          "description": "The brands of the product. A maximum of 30 brands are allowed. Each brand must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [brand](https://support.google.com/merchants/answer/6324351). Schema.org property [Product.brand](https://schema.org/brand).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ttl": {
          "description": "Input only. The TTL (time to live) of the product. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. If it is set, it must be a non-negative value, and expire_time is set as current timestamp plus ttl. The derived expire_time is returned in the output and ttl is left blank when retrieving the Product. If it is set, the product is not available for SearchService.Search after current timestamp plus ttl. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts.",
          "format": "google-duration",
          "type": "string"
        },
        "variants": {
          "type": "array",
          "description": "Output only. Product variants grouped together on primary product which share similar product attributes. It's automatically grouped by primary_product_id for all the product variants. Only populated for Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudRetailV2Product"
          }
        },
        "availableTime": {
          "format": "google-datetime",
          "description": "The timestamp when this Product becomes available for SearchService.Search. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT.",
          "type": "string"
        },
        "publishTime": {
          "type": "string",
          "description": "The timestamp when the product is published by the retailer for the first time, which indicates the freshness of the products. Note that this field is different from available_time, given it purely describes product freshness regardless of when it is available on search and recommendation.",
          "format": "google-datetime"
        },
        "rating": {
          "description": "The rating of this product.",
          "$ref": "GoogleCloudRetailV2Rating"
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when this product becomes unavailable for SearchService.Search. Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and ignored for Type.VARIANT. In general, we suggest the users to delete the stale products explicitly, instead of using this field to determine staleness. If it is set, the Product is not available for SearchService.Search after expire_time. However, the product can still be retrieved by ProductService.GetProduct and ProductService.ListProducts. expire_time must be later than available_time and publish_time, otherwise an INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant Center property [expiration_date](https://support.google.com/merchants/answer/6324499)."
        },
        "id": {
          "type": "string",
          "description": "Immutable. Product identifier, which is the final component of name. For example, this field is \"id_1\", if name is `projects/*/locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [id](https://support.google.com/merchants/answer/6324405). Schema.org property [Product.sku](https://schema.org/sku)."
        },
        "title": {
          "type": "string",
          "description": "Required. Product title. This field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [title](https://support.google.com/merchants/answer/6324415). Schema.org property [Product.name](https://schema.org/name)."
        },
        "localInventories": {
          "description": "Output only. A list of local inventories specific to different places. This is only available for users who have Retail Search enabled, and it can be managed by ProductService.AddLocalInventories and ProductService.RemoveLocalInventories APIs.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2LocalInventory"
          }
        },
        "promotions": {
          "items": {
            "$ref": "GoogleCloudRetailV2Promotion"
          },
          "type": "array",
          "description": "The promotions applied to the product. A maximum of 10 values are allowed per Product. Only Promotion.promotion_id will be used, other fields will be ignored if set."
        },
        "categories": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Product categories. This field is repeated for supporting one product belonging to several parallel categories. Strongly recommended using the full path for better search / recommendation quality. To represent full path of category, use '\u003e' sign to separate different hierarchies. If '\u003e' is part of the category name, replace it with other character(s). For example, if a shoes product belongs to both [\"Shoes & Accessories\" -\u003e \"Shoes\"] and [\"Sports & Fitness\" -\u003e \"Athletic Clothing\" -\u003e \"Shoes\"], it could be represented as: \"categories\": [ \"Shoes & Accessories \u003e Shoes\", \"Sports & Fitness \u003e Athletic Clothing \u003e Shoes\" ] Must be set for Type.PRIMARY Product otherwise an INVALID_ARGUMENT error is returned. At most 250 values are allowed per Product. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property google_product_category. Schema.org property [Product.category] (https://schema.org/category). [mc_google_product_category]: https://support.google.com/merchants/answer/6324436"
        },
        "collectionMemberIds": {
          "items": {
            "type": "string"
          },
          "description": "The id of the collection members when type is Type.COLLECTION. Non-existent product ids are allowed. The type of the members must be either Type.PRIMARY or Type.VARIANT otherwise an INVALID_ARGUMENT error is thrown. Should not set it for other types. A maximum of 1000 values are allowed. Otherwise, an INVALID_ARGUMENT error is return.",
          "type": "array"
        },
        "availableQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "The available quantity of the item."
        },
        "fulfillmentInfo": {
          "description": "Fulfillment information, such as the store IDs for in-store pickup or region IDs for different shipping methods. All the elements must have distinct FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2FulfillmentInfo"
          }
        },
        "gtin": {
          "description": "The Global Trade Item Number (GTIN) of the product. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [gtin](https://support.google.com/merchants/answer/6324461). Schema.org property [Product.isbn](https://schema.org/isbn), [Product.gtin8](https://schema.org/gtin8), [Product.gtin12](https://schema.org/gtin12), [Product.gtin13](https://schema.org/gtin13), or [Product.gtin14](https://schema.org/gtin14). If the value is not a valid GTIN, an INVALID_ARGUMENT error is returned.",
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The condition of the product. Strongly encouraged to use the standard values: \"new\", \"refurbished\", \"used\". A maximum of 1 value is allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [condition](https://support.google.com/merchants/answer/6324469). Schema.org property [Offer.itemCondition](https://schema.org/itemCondition)."
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRetailV2Image"
          },
          "description": "Product images for the product. We highly recommend putting the main image first. A maximum of 300 images are allowed. Corresponding properties: Google Merchant Center property [image_link](https://support.google.com/merchants/answer/6324350). Schema.org property [Product.image](https://schema.org/image)."
        },
        "primaryProductId": {
          "description": "Variant group identifier. Must be an id, with the same parent branch with this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this field can only be empty or set to the same value as id. For VARIANT Products, this field cannot be empty. A maximum of 2,000 products are allowed to share the same Type.PRIMARY Product. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [item_group_id](https://support.google.com/merchants/answer/6324507). Schema.org property [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).",
          "type": "string"
        },
        "patterns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The pattern or graphic print of the product. For example, \"striped\", \"polka dot\", \"paisley\". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [pattern](https://support.google.com/merchants/answer/6324483). Schema.org property [Product.pattern](https://schema.org/pattern)."
        },
        "availability": {
          "enumDescriptions": [
            "Default product availability. Default to Availability.IN_STOCK if unset.",
            "Product in stock.",
            "Product out of stock.",
            "Product that is in pre-order state.",
            "Product that is back-ordered (i.e. temporarily out of stock)."
          ],
          "description": "The online availability of the Product. Default to Availability.IN_STOCK. Corresponding properties: Google Merchant Center property [availability](https://support.google.com/merchants/answer/6324448). Schema.org property [Offer.availability](https://schema.org/availability).",
          "enum": [
            "AVAILABILITY_UNSPECIFIED",
            "IN_STOCK",
            "OUT_OF_STOCK",
            "PREORDER",
            "BACKORDER"
          ],
          "type": "string"
        },
        "materials": {
          "description": "The material of the product. For example, \"leather\", \"wooden\". A maximum of 20 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [material](https://support.google.com/merchants/answer/6324410). Schema.org property [Product.material](https://schema.org/material).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "uri": {
          "description": "Canonical URL directly linking to the product detail page. It is strongly recommended to provide a valid uri for the product, otherwise the service performance could be significantly degraded. This field must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [link](https://support.google.com/merchants/answer/6324416). Schema.org property [Offer.url](https://schema.org/url).",
          "type": "string"
        },
        "audience": {
          "description": "The target group associated with a given audience (e.g. male, veterans, car owners, musicians, etc.) of the product.",
          "$ref": "GoogleCloudRetailV2Audience"
        },
        "sizes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The size of the product. To represent different size systems or size types, consider using this format: [[[size_system:]size_type:]size_value]. For example, in \"US:MENS:M\", \"US\" represents size system; \"MENS\" represents size type; \"M\" represents size value. In \"GIRLS:27\", size system is empty; \"GIRLS\" represents size type; \"27\" represents size value. In \"32 inches\", both size system and size type are empty, while size value is \"32 inches\". A maximum of 20 values are allowed per Product. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties: Google Merchant Center property [size](https://support.google.com/merchants/answer/6324492), [size_type](https://support.google.com/merchants/answer/6324497), and [size_system](https://support.google.com/merchants/answer/6324502). Schema.org property [Product.size](https://schema.org/size)."
        }
      },
      "id": "GoogleCloudRetailV2Product",
      "type": "object"
    },
    "GoogleCloudRetailV2PriceInfoPriceRange": {
      "properties": {
        "originalPrice": {
          "description": "The inclusive Product.pricing_info.original_price internal of all variant Product having the same Product.primary_product_id.",
          "$ref": "GoogleCloudRetailV2Interval"
        },
        "price": {
          "$ref": "GoogleCloudRetailV2Interval",
          "description": "The inclusive Product.pricing_info.price interval of all variant Product having the same Product.primary_product_id."
        }
      },
      "type": "object",
      "description": "The price range of all variant Product having the same Product.primary_product_id.",
      "id": "GoogleCloudRetailV2PriceInfoPriceRange"
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "operations": {
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudRetailV2ImportMetadata": {
      "type": "object",
      "properties": {
        "failureCount": {
          "description": "Count of entries that encountered errors while processing.",
          "type": "string",
          "format": "int64"
        },
        "notificationPubsubTopic": {
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`.",
          "type": "string"
        },
        "createTime": {
          "description": "Operation create time.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestId": {
          "type": "string",
          "description": "Deprecated. This field is never set."
        },
        "updateTime": {
          "type": "string",
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "format": "google-datetime"
        },
        "successCount": {
          "description": "Count of entries that were processed successfully.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.",
      "id": "GoogleCloudRetailV2ImportMetadata"
    },
    "GoogleCloudRetailV2ImportUserEventsRequest": {
      "type": "object",
      "id": "GoogleCloudRetailV2ImportUserEventsRequest",
      "properties": {
        "inputConfig": {
          "description": "Required. The desired input location of the data.",
          "$ref": "GoogleCloudRetailV2UserEventInputConfig"
        },
        "errorsConfig": {
          "description": "The desired location of errors incurred during the Import. Cannot be set for inline user event imports.",
          "$ref": "GoogleCloudRetailV2ImportErrorsConfig"
        }
      },
      "description": "Request message for the ImportUserEvents request."
    },
    "GoogleCloudRetailV2ListCatalogsResponse": {
      "properties": {
        "catalogs": {
          "items": {
            "$ref": "GoogleCloudRetailV2Catalog"
          },
          "type": "array",
          "description": "All the customer's Catalogs."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as ListCatalogsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2ListCatalogsResponse",
      "description": "Response for CatalogService.ListCatalogs method."
    },
    "GoogleCloudRetailV2betaTuneModelMetadata": {
      "type": "object",
      "id": "GoogleCloudRetailV2betaTuneModelMetadata",
      "description": "Metadata associated with a tune operation.",
      "properties": {
        "model": {
          "description": "The resource name of the model that this tune applies to. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2ConditionQueryTerm": {
      "type": "object",
      "id": "GoogleCloudRetailV2ConditionQueryTerm",
      "properties": {
        "value": {
          "description": "The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, \"a b c\" is 3 terms and allowed, but \" a b c d\" is 4 terms and not allowed for a partial match.",
          "type": "string"
        },
        "fullMatch": {
          "description": "Whether this is supposed to be a full or partial match.",
          "type": "boolean"
        }
      },
      "description": "Query terms that we want to match on."
    },
    "GoogleCloudRetailV2alphaOutputResult": {
      "properties": {
        "bigqueryResult": {
          "items": {
            "$ref": "GoogleCloudRetailV2alphaBigQueryOutputResult"
          },
          "description": "Export result in BigQuery.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Output result.",
      "id": "GoogleCloudRetailV2alphaOutputResult"
    },
    "GoogleCloudRetailV2betaImportMetadata": {
      "description": "Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.",
      "type": "object",
      "id": "GoogleCloudRetailV2betaImportMetadata",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Operation last update time. If the operation is done, this is also the finish time.",
          "type": "string"
        },
        "failureCount": {
          "format": "int64",
          "description": "Count of entries that encountered errors while processing.",
          "type": "string"
        },
        "createTime": {
          "description": "Operation create time.",
          "type": "string",
          "format": "google-datetime"
        },
        "requestId": {
          "description": "Deprecated. This field is never set.",
          "type": "string"
        },
        "successCount": {
          "format": "int64",
          "description": "Count of entries that were processed successfully.",
          "type": "string"
        },
        "notificationPubsubTopic": {
          "type": "string",
          "description": "Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`."
        }
      }
    },
    "GoogleCloudRetailV2CompleteQueryResponseCompletionResult": {
      "id": "GoogleCloudRetailV2CompleteQueryResponseCompletionResult",
      "properties": {
        "suggestion": {
          "type": "string",
          "description": "The suggestion for the query."
        },
        "attributes": {
          "description": "Custom attributes for the suggestion term. * For \"user-data\", the attributes are additional custom attributes ingested through BigQuery. * For \"cloud-retail\", the attributes are product attributes generated by Cloud Retail. It requires UserEvent.product_details is imported properly.",
          "additionalProperties": {
            "$ref": "GoogleCloudRetailV2CustomAttribute"
          },
          "type": "object"
        }
      },
      "description": "Resource that represents completion results.",
      "type": "object"
    },
    "GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate": {
      "description": "A candidate to consider for a given panel. Currently only ServingConfig are valid candidates.",
      "properties": {
        "servingConfigId": {
          "type": "string",
          "description": "This has to be a valid ServingConfig identifier. For example, for a ServingConfig with full name: `projects/*/locations/global/catalogs/default_catalog/servingConfigs/my_candidate_config`, this would be `my_candidate_config`."
        }
      },
      "type": "object",
      "id": "GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate"
    },
    "GoogleCloudRetailV2AddFulfillmentPlacesRequest": {
      "properties": {
        "addTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the fulfillment updates are issued, used to prevent out-of-order updates on fulfillment information. If not provided, the internal system time will be used."
        },
        "allowMissing": {
          "type": "boolean",
          "description": "If set to true, and the Product is not found, the fulfillment information will still be processed and retained for at most 1 day and processed once the Product is created. If set to false, a NOT_FOUND error is returned if the Product is not found."
        },
        "type": {
          "description": "Required. The fulfillment type, including commonly used types (such as pickup in store and same day delivery), and custom types. Supported values: * \"pickup-in-store\" * \"ship-to-store\" * \"same-day-delivery\" * \"next-day-delivery\" * \"custom-type-1\" * \"custom-type-2\" * \"custom-type-3\" * \"custom-type-4\" * \"custom-type-5\" If this field is set to an invalid value other than these, an INVALID_ARGUMENT error is returned. This field directly corresponds to Product.fulfillment_info.type.",
          "type": "string"
        },
        "placeIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The IDs for this type, such as the store IDs for \"pickup-in-store\" or the region IDs for \"same-day-delivery\" to be added for this type. Duplicate IDs will be automatically ignored. At least 1 value is required, and a maximum of 2000 values are allowed. Each value must be a string with a length limit of 10 characters, matching the pattern `[a-zA-Z0-9_-]+`, such as \"store1\" or \"REGION-2\". Otherwise, an INVALID_ARGUMENT error is returned. If the total number of place IDs exceeds 2000 for this type after adding, then the update will be rejected."
        }
      },
      "description": "Request message for ProductService.AddFulfillmentPlaces method.",
      "type": "object",
      "id": "GoogleCloudRetailV2AddFulfillmentPlacesRequest"
    },
    "GoogleCloudRetailV2betaRemoveFulfillmentPlacesResponse": {
      "description": "Response of the RemoveFulfillmentPlacesRequest. Currently empty because there is no meaningful response populated from the ProductService.RemoveFulfillmentPlaces method.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudRetailV2betaRemoveFulfillmentPlacesResponse"
    },
    "GoogleCloudRetailV2CatalogAttribute": {
      "id": "GoogleCloudRetailV2CatalogAttribute",
      "description": "Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.",
      "type": "object",
      "properties": {
        "inUse": {
          "description": "Output only. Indicates whether this attribute has been used by any products. `True` if at least one Product is using this attribute in Product.attributes. Otherwise, this field is `False`. CatalogAttribute can be pre-loaded by using CatalogService.AddCatalogAttribute, CatalogService.ImportCatalogAttributes, or CatalogService.UpdateAttributesConfig APIs. This field is `False` for pre-loaded CatalogAttributes. Only pre-loaded catalog attributes that are neither in use by products nor predefined can be deleted. Catalog attributes that are either in use by products or are predefined attributes cannot be deleted; however, their configuration properties will reset to default values upon removal request. After catalog changes, it takes about 10 minutes for this field to update.",
          "readOnly": true,
          "type": "boolean"
        },
        "indexableOption": {
          "type": "string",
          "enum": [
            "INDEXABLE_OPTION_UNSPECIFIED",
            "INDEXABLE_ENABLED",
            "INDEXABLE_DISABLED"
          ],
          "description": "When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search.",
          "enumDescriptions": [
            "Value used when unset. Defaults to INDEXABLE_ENABLED.",
            "Indexable option enabled for an attribute.",
            "Indexable option disabled for an attribute."
          ]
        },
        "type": {
          "readOnly": true,
          "description": "Output only. The type of this attribute. This is derived from the attribute in Product.attributes.",
          "enum": [
            "UNKNOWN",
            "TEXTUAL",
            "NUMERICAL"
          ],
          "enumDescriptions": [
            "The type of the attribute is unknown. Used when type cannot be derived from attribute that is not in_use.",
            "Textual attribute.",
            "Numerical attribute."
          ],
          "type": "string"
        },
        "dynamicFacetableOption": {
          "type": "string",
          "description": "If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned.",
          "enumDescriptions": [
            "Value used when unset. Defaults to DYNAMIC_FACETABLE_ENABLED.",
            "Dynamic facetable option enabled for an attribute.",
            "Dynamic facetable option disabled for an attribute."
          ],
          "enum": [
            "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED",
            "DYNAMIC_FACETABLE_ENABLED",
            "DYNAMIC_FACETABLE_DISABLED"
          ]
        },
        "searchableOption": {
          "description": "When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes.",
          "type": "string",
          "enum": [
            "SEARCHABLE_OPTION_UNSPECIFIED",
            "SEARCHABLE_ENABLED",
            "SEARCHABLE_DISABLED"
          ],
          "enumDescriptions": [
            "Value used when unset. Defaults to SEARCHABLE_DISABLED.",
            "Searchable option enabled for an attribute.",
            "Searchable option disabled for an attribute."
          ]
        },
        "key": {
          "description": "Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRetailV2AddFulfillmentPlacesMetadata": {
      "description": "Metadata related to the progress of the AddFulfillmentPlaces operation. Currently empty because there is no meaningful metadata populated from the ProductService.AddFulfillmentPlaces method.",
      "id": "GoogleCloudRetailV2AddFulfillmentPlacesMetadata",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudRetailV2betaCreateModelMetadata": {
      "description": "Metadata associated with a create operation.",
      "id": "GoogleCloudRetailV2betaCreateModelMetadata",
      "type": "object",
      "properties": {
        "model": {
          "type": "string",
          "description": "The resource name of the model that this create applies to. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`"
        }
      }
    }
  },
  "servicePath": "",
  "version": "v2",
  "rootUrl": "https://retail.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "id": "retail:v2",
  "version_module": true,
  "ownerName": "Google",
  "revision": "20220908",
  "ownerDomain": "google.com",
  "baseUrl": "https://retail.googleapis.com/",
  "name": "retail"
}

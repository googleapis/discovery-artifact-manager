{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "jobs": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "transcoder.projects.locations.jobs.get",
                  "httpMethod": "GET",
                  "description": "Returns the job data.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Job"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "description": "Required. The name of the job to retrieve. Format: `projects/{project}/locations/{location}/jobs/{job}`"
                    }
                  }
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs",
                  "path": "v1/{+parent}/jobs",
                  "description": "Creates a job in the specified region.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Job"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent location to create and process this job. Format: `projects/{project}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Job"
                  },
                  "id": "transcoder.projects.locations.jobs.create"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}",
                  "id": "transcoder.projects.locations.jobs.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes a job.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the job to delete. Format: `projects/{project}/locations/{location}/jobs/{job}`"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the job is not found, the request will succeed but no action will be taken on the server.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "transcoder.projects.locations.jobs.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/jobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs",
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. Format: `projects/{project}/locations/{location}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression, following the syntax outlined in https://google.aip.dev/160."
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The `next_page_token` value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "format": "int32"
                    }
                  },
                  "description": "Lists jobs in the specified region."
                }
              }
            },
            "jobTemplates": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "JobTemplate"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates/{jobTemplatesId}",
                  "description": "Returns the job template data.",
                  "id": "transcoder.projects.locations.jobTemplates.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobTemplates/[^/]+$",
                      "description": "Required. The name of the job template to retrieve. Format: `projects/{project}/locations/{location}/jobTemplates/{job_template}`",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameters": {
                    "jobTemplateId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID to use for the job template, which will become the final component of the job template's resource name. This value should be 4-63 characters, and valid characters must match the regular expression `a-zA-Z*`."
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent location to create this job template. Format: `projects/{project}/locations/{location}`",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a job template in the specified region.",
                  "request": {
                    "$ref": "JobTemplate"
                  },
                  "id": "transcoder.projects.locations.jobTemplates.create",
                  "response": {
                    "$ref": "JobTemplate"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/jobTemplates",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "transcoder.projects.locations.jobTemplates.list",
                  "description": "Lists job templates in the specified region.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListJobTemplatesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates",
                  "path": "v1/{+parent}/jobTemplates",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent location from which to retrieve the collection of job templates. Format: `projects/{project}/locations/{location}`"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The `next_page_token` value returned from a previous List request, if any."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression, following the syntax outlined in https://google.aip.dev/160."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "format": "int32"
                    },
                    "orderBy": {
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the job template to delete. `projects/{project}/locations/{location}/jobTemplates/{job_template}`",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobTemplates/[^/]+$"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the job template is not found, the request will succeed but no action will be taken on the server.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates/{jobTemplatesId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a job template.",
                  "path": "v1/{+name}",
                  "id": "transcoder.projects.locations.jobTemplates.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "description": "This API converts video files into formats suitable for consumer distribution. For more information, see the Transcoder API overview. ",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "title": "Transcoder API",
  "servicePath": "",
  "canonicalName": "Transcoder",
  "version": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerName": "Google",
  "version_module": true,
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "mtlsRootUrl": "https://transcoder.mtls.googleapis.com/",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query",
      "description": "Data format for response."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    }
  },
  "documentationLink": "https://cloud.google.com/transcoder/docs/",
  "name": "transcoder",
  "schemas": {
    "Job": {
      "type": "object",
      "id": "Job",
      "description": "Transcoding job resource.",
      "properties": {
        "mode": {
          "description": "The processing mode of the job. The default is `PROCESSING_MODE_INTERACTIVE`.",
          "type": "string",
          "enumDescriptions": [
            "The job processing mode is not specified.",
            "The job processing mode is interactive mode. Interactive job will either be ran or rejected if quota does not allow for it.",
            "The job processing mode is batch mode. Batch mode allows queuing of jobs."
          ],
          "enum": [
            "PROCESSING_MODE_UNSPECIFIED",
            "PROCESSING_MODE_INTERACTIVE",
            "PROCESSING_MODE_BATCH"
          ]
        },
        "state": {
          "description": "Output only. The current state of the job.",
          "enum": [
            "PROCESSING_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The processing state is not specified.",
            "The job is enqueued and will be picked up for processing soon.",
            "The job is being processed.",
            "The job has been completed successfully.",
            "The job has failed. For additional information, see `failure_reason` and `failure_details`"
          ],
          "readOnly": true
        },
        "ttlAfterCompletionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30."
        },
        "error": {
          "readOnly": true,
          "description": "Output only. An error object that describes the reason for the failure. This property is always present when `state` is `FAILED`.",
          "$ref": "Status"
        },
        "templateId": {
          "description": "Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`, which is the only supported preset. User defined JobTemplate: `{job_template_id}`",
          "type": "string"
        },
        "startTime": {
          "description": "Output only. The time the transcoding started.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The time the job was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`",
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the transcoding finished.",
          "type": "string",
          "format": "google-datetime"
        },
        "config": {
          "description": "The configuration for this job.",
          "$ref": "JobConfig"
        },
        "inputUri": {
          "description": "Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).",
          "type": "string"
        },
        "outputUri": {
          "description": "Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats).",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The labels associated with this job. You can use these to organize and group your jobs."
        }
      }
    },
    "PreprocessingConfig": {
      "description": "Preprocessing configurations.",
      "properties": {
        "crop": {
          "description": "Specify the video cropping configuration.",
          "$ref": "Crop"
        },
        "deinterlace": {
          "$ref": "Deinterlace",
          "description": "Specify the video deinterlace configuration."
        },
        "color": {
          "description": "Color preprocessing configuration.",
          "$ref": "Color"
        },
        "denoise": {
          "$ref": "Denoise",
          "description": "Denoise preprocessing configuration."
        },
        "pad": {
          "description": "Specify the video pad filter configuration.",
          "$ref": "Pad"
        },
        "audio": {
          "description": "Audio preprocessing configuration.",
          "$ref": "Audio"
        },
        "deblock": {
          "$ref": "Deblock",
          "description": "Deblock preprocessing configuration."
        }
      },
      "id": "PreprocessingConfig",
      "type": "object"
    },
    "AdBreak": {
      "properties": {
        "startTimeOffset": {
          "type": "string",
          "description": "Start time in seconds for the ad break, relative to the output file timeline. The default is `0s`.",
          "format": "google-duration"
        }
      },
      "id": "AdBreak",
      "description": "Ad break.",
      "type": "object"
    },
    "EditAtom": {
      "description": "Edit atom.",
      "type": "object",
      "properties": {
        "inputs": {
          "items": {
            "type": "string"
          },
          "description": "List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.",
          "type": "array"
        },
        "startTimeOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "Start time in seconds for the atom, relative to the input file timeline. The default is `0s`."
        },
        "key": {
          "type": "string",
          "description": "A unique key for this atom. Must be specified when using advanced mapping."
        },
        "endTimeOffset": {
          "format": "google-duration",
          "description": "End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.",
          "type": "string"
        }
      },
      "id": "EditAtom"
    },
    "YadifConfig": {
      "id": "YadifConfig",
      "properties": {
        "disableSpatialInterlacing": {
          "type": "boolean",
          "description": "Disable spacial interlacing. The default is `false`."
        },
        "parity": {
          "description": "The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity",
          "type": "string"
        },
        "mode": {
          "description": "Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field",
          "type": "string"
        },
        "deinterlaceAllFrames": {
          "description": "Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Yet Another Deinterlacing Filter Configuration."
    },
    "SpriteSheet": {
      "description": "Sprite sheet configuration.",
      "properties": {
        "rowCount": {
          "type": "integer",
          "description": "The maximum number of rows per sprite sheet. When the sprite sheet is full, a new sprite sheet is created. The default is 0, which indicates no maximum limit.",
          "format": "int32"
        },
        "interval": {
          "format": "google-duration",
          "description": "Starting from `0s`, create sprites at regular intervals. Specify the interval value in seconds.",
          "type": "string"
        },
        "columnCount": {
          "type": "integer",
          "description": "The maximum number of sprites per row in a sprite sheet. The default is 0, which indicates no maximum limit.",
          "format": "int32"
        },
        "startTimeOffset": {
          "description": "Start time in seconds, relative to the output file timeline. Determines the first sprite to pick. The default is `0s`.",
          "type": "string",
          "format": "google-duration"
        },
        "spriteWidthPixels": {
          "description": "Required. The width of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_width_pixels field or the SpriteSheet.sprite_height_pixels field, but not both (the API will automatically calculate the missing field). For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
          "format": "int32",
          "type": "integer"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of sprites. Create the specified number of sprites distributed evenly across the timeline of the output media. The default is 100."
        },
        "format": {
          "type": "string",
          "description": "Format type. The default is `jpeg`. Supported formats: - `jpeg`"
        },
        "quality": {
          "description": "The quality of the generated sprite sheet. Enter a value between 1 and 100, where 1 is the lowest quality and 100 is the highest quality. The default is 100. A high quality value corresponds to a low image data compression ratio.",
          "type": "integer",
          "format": "int32"
        },
        "endTimeOffset": {
          "description": "End time in seconds, relative to the output file timeline. When `end_time_offset` is not specified, the sprites are generated until the end of the output file.",
          "format": "google-duration",
          "type": "string"
        },
        "filePrefix": {
          "description": "Required. File name prefix for the generated sprite sheets. Each sprite sheet has an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `sprite_sheet0000000123.jpeg`.",
          "type": "string"
        },
        "spriteHeightPixels": {
          "description": "Required. The height of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_height_pixels field or the SpriteSheet.sprite_width_pixels field, but not both (the API will automatically calculate the missing field). For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "SpriteSheet"
    },
    "TextMapping": {
      "description": "The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.",
      "type": "object",
      "id": "TextMapping",
      "properties": {
        "inputKey": {
          "type": "string",
          "description": "Required. The `Input.key` that identifies the input file."
        },
        "atomKey": {
          "type": "string",
          "description": "Required. The `EditAtom.key` that references atom with text inputs in the `Job.edit_list`."
        },
        "inputTrack": {
          "format": "int32",
          "description": "Required. The zero-based index of the track in the input file.",
          "type": "integer"
        }
      }
    },
    "PubsubDestination": {
      "properties": {
        "topic": {
          "type": "string",
          "description": "The name of the Pub/Sub topic to publish job completion notification to. For example: `projects/{project}/topics/{topic}`."
        }
      },
      "type": "object",
      "description": "A Pub/Sub destination.",
      "id": "PubsubDestination"
    },
    "Deblock": {
      "id": "Deblock",
      "properties": {
        "strength": {
          "description": "Set strength of the deblocker. Enter a value between 0 and 1. The higher the value, the stronger the block removal. 0 is no deblocking. The default is 0.",
          "type": "number",
          "format": "double"
        },
        "enabled": {
          "description": "Enable deblocker. The default is `false`.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Deblock preprocessing configuration. **Note:** This configuration is not supported."
    },
    "AnimationStatic": {
      "description": "Display static overlay object.",
      "id": "AnimationStatic",
      "properties": {
        "xy": {
          "description": "Normalized coordinates based on output video resolution. Valid values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.",
          "$ref": "NormalizedCoordinate"
        },
        "startTimeOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "The time to start displaying the overlay object, in seconds. Default: 0"
        }
      },
      "type": "object"
    },
    "TextStream": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The name for this particular text stream that will be added to the HLS/DASH manifest. Not supported in MP4 files."
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. Not supported in MP4 files.",
          "type": "string"
        },
        "codec": {
          "description": "The codec for this text stream. The default is `webvtt`. Supported text codecs: - `srt` - `ttml` - `cea608` - `cea708` - `webvtt`",
          "type": "string"
        },
        "mapping": {
          "type": "array",
          "description": "The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.",
          "items": {
            "$ref": "TextMapping"
          }
        }
      },
      "id": "TextStream",
      "type": "object",
      "description": "Encoding of a text stream. For example, closed captions or subtitles."
    },
    "Denoise": {
      "id": "Denoise",
      "description": "Denoise preprocessing configuration. **Note:** This configuration is not supported.",
      "type": "object",
      "properties": {
        "tune": {
          "description": "Set the denoiser mode. The default is `standard`. Supported denoiser modes: - `standard` - `grain`",
          "type": "string"
        },
        "strength": {
          "format": "double",
          "description": "Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.",
          "type": "number"
        }
      }
    },
    "H264CodecSettings": {
      "description": "H264 codec settings.",
      "type": "object",
      "properties": {
        "frameRate": {
          "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.",
          "format": "double",
          "type": "number"
        },
        "entropyCoder": {
          "description": "The entropy coder to use. The default is `cabac`. Supported entropy coders: - `cavlc` - `cabac`",
          "type": "string"
        },
        "bFrameCount": {
          "description": "The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than `VideoStream.gop_frame_count` if set. The default is 0.",
          "format": "int32",
          "type": "integer"
        },
        "allowOpenGop": {
          "type": "boolean",
          "description": "Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`."
        },
        "vbvFullnessBits": {
          "format": "int32",
          "description": "Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of `VideoStream.vbv_size_bits`.",
          "type": "integer"
        },
        "gopFrameCount": {
          "type": "integer",
          "description": "Select the GOP size based on the specified frame count. Must be greater than zero.",
          "format": "int32"
        },
        "gopDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`."
        },
        "profile": {
          "type": "string",
          "description": "Enforces the specified codec profile. The following profiles are supported: * `baseline` * `main` * `high` (default) The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message."
        },
        "heightPixels": {
          "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
          "format": "int32",
          "type": "integer"
        },
        "crfLevel": {
          "type": "integer",
          "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.",
          "format": "int32"
        },
        "vbvSizeBits": {
          "description": "Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.",
          "type": "integer",
          "format": "int32"
        },
        "enableTwoPass": {
          "type": "boolean",
          "description": "Use two-pass encoding strategy to achieve better video quality. `VideoStream.rate_control_mode` must be `vbr`. The default is `false`."
        },
        "preset": {
          "type": "string",
          "description": "Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Preset). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message."
        },
        "bitrateBps": {
          "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.",
          "type": "integer",
          "format": "int32"
        },
        "bPyramid": {
          "type": "boolean",
          "description": "Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`."
        },
        "pixelFormat": {
          "type": "string",
          "description": "Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format"
        },
        "widthPixels": {
          "format": "int32",
          "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
          "type": "integer"
        },
        "rateControlMode": {
          "type": "string",
          "description": "Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor"
        },
        "tune": {
          "description": "Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.",
          "type": "string"
        },
        "aqStrength": {
          "description": "Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "H264CodecSettings"
    },
    "ElementaryStream": {
      "id": "ElementaryStream",
      "properties": {
        "audioStream": {
          "$ref": "AudioStream",
          "description": "Encoding of an audio stream."
        },
        "videoStream": {
          "description": "Encoding of a video stream.",
          "$ref": "VideoStream"
        },
        "textStream": {
          "$ref": "TextStream",
          "description": "Encoding of a text stream. For example, closed captions or subtitles."
        },
        "key": {
          "description": "A unique key for this elementary stream.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Encoding of an input file such as an audio, video, or text track. Elementary streams must be packaged before mapping and sharing between different output formats."
    },
    "Image": {
      "properties": {
        "alpha": {
          "type": "number",
          "description": "Target image opacity. Valid values are from `1.0` (solid, default) to `0.0` (transparent), exclusive. Set this to a value greater than `0.0`.",
          "format": "double"
        },
        "uri": {
          "type": "string",
          "description": "Required. URI of the image in Cloud Storage. For example, `gs://bucket/inputs/image.png`. Only PNG and JPEG images are supported."
        },
        "resolution": {
          "$ref": "NormalizedCoordinate",
          "description": "Normalized image resolution, based on output video resolution. Valid values: `0.0`–`1.0`. To respect the original image aspect ratio, set either `x` or `y` to `0.0`. To use the original image resolution, set both `x` and `y` to `0.0`."
        }
      },
      "type": "object",
      "id": "Image",
      "description": "Overlaid image."
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "Deinterlace": {
      "description": "Deinterlace configuration for input video.",
      "id": "Deinterlace",
      "properties": {
        "bwdif": {
          "description": "Specifies the Bob Weaver Deinterlacing Filter Configuration.",
          "$ref": "BwdifConfig"
        },
        "yadif": {
          "description": "Specifies the Yet Another Deinterlacing Filter Configuration.",
          "$ref": "YadifConfig"
        }
      },
      "type": "object"
    },
    "ListJobsResponse": {
      "type": "object",
      "properties": {
        "jobs": {
          "items": {
            "$ref": "Job"
          },
          "type": "array",
          "description": "List of jobs in the specified region."
        },
        "unreachable": {
          "description": "List of regions that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The pagination token.",
          "type": "string"
        }
      },
      "id": "ListJobsResponse",
      "description": "Response message for `TranscoderService.ListJobs`."
    },
    "Color": {
      "id": "Color",
      "type": "object",
      "properties": {
        "brightness": {
          "format": "double",
          "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
          "type": "number"
        },
        "saturation": {
          "type": "number",
          "format": "double",
          "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0."
        },
        "contrast": {
          "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.",
          "format": "double",
          "type": "number"
        }
      },
      "description": "Color preprocessing configuration. **Note:** This configuration is not supported."
    },
    "Animation": {
      "type": "object",
      "description": "Animation types.",
      "properties": {
        "animationStatic": {
          "description": "Display static overlay object.",
          "$ref": "AnimationStatic"
        },
        "animationFade": {
          "$ref": "AnimationFade",
          "description": "Display overlay object with fade animation."
        },
        "animationEnd": {
          "description": "End previous animation.",
          "$ref": "AnimationEnd"
        }
      },
      "id": "Animation"
    },
    "JobTemplate": {
      "type": "object",
      "description": "Transcoding job template resource.",
      "id": "JobTemplate",
      "properties": {
        "labels": {
          "type": "object",
          "description": "The labels associated with this job template. You can use these to organize and group your job templates.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`",
          "type": "string"
        },
        "config": {
          "description": "The configuration for this template.",
          "$ref": "JobConfig"
        }
      }
    },
    "AnimationEnd": {
      "type": "object",
      "id": "AnimationEnd",
      "properties": {
        "startTimeOffset": {
          "description": "The time to end overlay object, in seconds. Default: 0",
          "format": "google-duration",
          "type": "string"
        }
      },
      "description": "End previous overlay animation from the video. Without AnimationEnd, the overlay object will keep the state of previous animation until the end of the video."
    },
    "MuxStream": {
      "id": "MuxStream",
      "type": "object",
      "properties": {
        "container": {
          "type": "string",
          "description": "The container format. The default is `mp4` Supported container formats: - `ts` - `fmp4`- the corresponding file extension is `.m4s` - `mp4` - `vtt` See also: [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats)"
        },
        "fileName": {
          "description": "The name of the generated file. The default is `MuxStream.key` with the extension suffix corresponding to the `MuxStream.container`. Individual segments also have an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `mux_stream0000000123.ts`.",
          "type": "string"
        },
        "elementaryStreams": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of `ElementaryStream.key`s multiplexed in this stream."
        },
        "segmentSettings": {
          "$ref": "SegmentSettings",
          "description": "Segment settings for `ts`, `fmp4` and `vtt`."
        },
        "key": {
          "description": "A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key` with the `.m3u8` extension suffix.",
          "type": "string"
        }
      },
      "description": "Multiplexing settings for output stream."
    },
    "BwdifConfig": {
      "description": "Bob Weaver Deinterlacing Filter Configuration.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Specifies the deinterlacing mode to adopt. The default is `send_frame`. Supported values: - `send_frame`: Output one frame for each frame - `send_field`: Output one frame for each field"
        },
        "parity": {
          "type": "string",
          "description": "The picture field parity assumed for the input interlaced video. The default is `auto`. Supported values: - `tff`: Assume the top field is first - `bff`: Assume the bottom field is first - `auto`: Enable automatic detection of field parity"
        },
        "deinterlaceAllFrames": {
          "description": "Deinterlace all frames rather than just the frames identified as interlaced. The default is `false`.",
          "type": "boolean"
        }
      },
      "id": "BwdifConfig",
      "type": "object"
    },
    "SegmentSettings": {
      "description": "Segment settings for `ts`, `fmp4` and `vtt`.",
      "type": "object",
      "id": "SegmentSettings",
      "properties": {
        "individualSegments": {
          "type": "boolean",
          "description": "Required. Create an individual segment file. The default is `false`."
        },
        "segmentDuration": {
          "type": "string",
          "description": "Duration of the segments in seconds. The default is `6.0s`. Note that `segmentDuration` must be greater than or equal to [`gopDuration`](#videostream), and `segmentDuration` must be divisible by [`gopDuration`](#videostream).",
          "format": "google-duration"
        }
      }
    },
    "H265CodecSettings": {
      "description": "H265 codec settings.",
      "properties": {
        "tune": {
          "description": "Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.",
          "type": "string"
        },
        "enableTwoPass": {
          "type": "boolean",
          "description": "Use two-pass encoding strategy to achieve better video quality. `VideoStream.rate_control_mode` must be `vbr`. The default is `false`."
        },
        "gopDuration": {
          "description": "Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.",
          "type": "string",
          "format": "google-duration"
        },
        "vbvSizeBits": {
          "format": "int32",
          "description": "Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.",
          "type": "integer"
        },
        "allowOpenGop": {
          "type": "boolean",
          "description": "Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`."
        },
        "gopFrameCount": {
          "type": "integer",
          "description": "Select the GOP size based on the specified frame count. Must be greater than zero.",
          "format": "int32"
        },
        "bitrateBps": {
          "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.",
          "format": "int32",
          "type": "integer"
        },
        "pixelFormat": {
          "type": "string",
          "description": "Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format"
        },
        "rateControlMode": {
          "type": "string",
          "description": "Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor"
        },
        "aqStrength": {
          "type": "number",
          "format": "double",
          "description": "Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0."
        },
        "bPyramid": {
          "type": "boolean",
          "description": "Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`."
        },
        "bFrameCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than `VideoStream.gop_frame_count` if set. The default is 0."
        },
        "frameRate": {
          "format": "double",
          "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.",
          "type": "number"
        },
        "profile": {
          "description": "Enforces the specified codec profile. The following profiles are supported: * 8-bit profiles * `main` (default) * `main-intra` * `mainstillpicture` * 10-bit profiles * `main10` (default) * `main10-intra` * `main422-10` * `main422-10-intra` * `main444-10` * `main444-10-intra` * 12-bit profiles * `main12` (default) * `main12-intra` * `main422-12` * `main422-12-intra` * `main444-12` * `main444-12-intra` The available options are [FFmpeg-compatible](https://x265.readthedocs.io/). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.",
          "type": "string"
        },
        "preset": {
          "type": "string",
          "description": "Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message."
        },
        "heightPixels": {
          "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output.",
          "format": "int32",
          "type": "integer"
        },
        "widthPixels": {
          "format": "int32",
          "type": "integer",
          "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output."
        },
        "crfLevel": {
          "format": "int32",
          "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.",
          "type": "integer"
        },
        "vbvFullnessBits": {
          "type": "integer",
          "description": "Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of `VideoStream.vbv_size_bits`.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "H265CodecSettings"
    },
    "AudioMapping": {
      "properties": {
        "inputKey": {
          "description": "Required. The `Input.key` that identifies the input file.",
          "type": "string"
        },
        "inputTrack": {
          "type": "integer",
          "description": "Required. The zero-based index of the track in the input file.",
          "format": "int32"
        },
        "atomKey": {
          "type": "string",
          "description": "Required. The `EditAtom.key` that references the atom with audio inputs in the `Job.edit_list`."
        },
        "outputChannel": {
          "description": "Required. The zero-based index of the channel in the output audio stream.",
          "type": "integer",
          "format": "int32"
        },
        "gainDb": {
          "type": "number",
          "description": "Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.",
          "format": "double"
        },
        "inputChannel": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The zero-based index of the channel in the input audio stream."
        }
      },
      "id": "AudioMapping",
      "type": "object",
      "description": "The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`."
    },
    "VideoStream": {
      "description": "Video stream resource.",
      "id": "VideoStream",
      "type": "object",
      "properties": {
        "h264": {
          "$ref": "H264CodecSettings",
          "description": "H264 codec settings."
        },
        "h265": {
          "description": "H265 codec settings.",
          "$ref": "H265CodecSettings"
        },
        "vp9": {
          "$ref": "Vp9CodecSettings",
          "description": "VP9 codec settings."
        }
      }
    },
    "Pad": {
      "properties": {
        "topPixels": {
          "format": "int32",
          "description": "The number of pixels to add to the top. The default is 0.",
          "type": "integer"
        },
        "leftPixels": {
          "format": "int32",
          "description": "The number of pixels to add to the left. The default is 0.",
          "type": "integer"
        },
        "bottomPixels": {
          "description": "The number of pixels to add to the bottom. The default is 0.",
          "format": "int32",
          "type": "integer"
        },
        "rightPixels": {
          "description": "The number of pixels to add to the right. The default is 0.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.",
      "id": "Pad",
      "type": "object"
    },
    "AnimationFade": {
      "type": "object",
      "description": "Display overlay object with fade animation.",
      "id": "AnimationFade",
      "properties": {
        "startTimeOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "The time to start the fade animation, in seconds. Default: 0"
        },
        "xy": {
          "description": "Normalized coordinates based on output video resolution. Valid values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.",
          "$ref": "NormalizedCoordinate"
        },
        "fadeType": {
          "enumDescriptions": [
            "The fade type is not specified.",
            "Fade the overlay object into view.",
            "Fade the overlay object out of view."
          ],
          "enum": [
            "FADE_TYPE_UNSPECIFIED",
            "FADE_IN",
            "FADE_OUT"
          ],
          "description": "Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.",
          "type": "string"
        },
        "endTimeOffset": {
          "description": "The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "NormalizedCoordinate": {
      "description": "2D normalized coordinates. Default: `{0.0, 0.0}`",
      "type": "object",
      "id": "NormalizedCoordinate",
      "properties": {
        "x": {
          "description": "Normalized x coordinate.",
          "format": "double",
          "type": "number"
        },
        "y": {
          "format": "double",
          "type": "number",
          "description": "Normalized y coordinate."
        }
      }
    },
    "Output": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI for the output file(s). For example, `gs://my-bucket/outputs/`. If empty, the value is populated from `Job.output_uri`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats)."
        }
      },
      "description": "Location of output file(s) in a Cloud Storage bucket.",
      "type": "object",
      "id": "Output"
    },
    "Manifest": {
      "type": "object",
      "id": "Manifest",
      "properties": {
        "type": {
          "description": "Required. Type of the manifest.",
          "enumDescriptions": [
            "The manifest type is not specified.",
            "Create an HLS manifest. The corresponding file extension is `.m3u8`.",
            "Create an MPEG-DASH manifest. The corresponding file extension is `.mpd`."
          ],
          "enum": [
            "MANIFEST_TYPE_UNSPECIFIED",
            "HLS",
            "DASH"
          ],
          "type": "string"
        },
        "dash": {
          "$ref": "DashConfig",
          "description": "`DASH` manifest configuration."
        },
        "fileName": {
          "description": "The name of the generated file. The default is `manifest` with the extension suffix corresponding to the `Manifest.type`.",
          "type": "string"
        },
        "muxStreams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. List of user given `MuxStream.key`s that should appear in this manifest. When `Manifest.type` is `HLS`, a media manifest with name `MuxStream.key` and `.m3u8` extension is generated for each element of the `Manifest.mux_streams`."
        }
      },
      "description": "Manifest configuration."
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "JobConfig": {
      "type": "object",
      "description": "Job configuration",
      "id": "JobConfig",
      "properties": {
        "inputs": {
          "items": {
            "$ref": "Input"
          },
          "type": "array",
          "description": "List of input assets stored in Cloud Storage."
        },
        "editList": {
          "items": {
            "$ref": "EditAtom"
          },
          "type": "array",
          "description": "List of `Edit atom`s. Defines the ultimate timeline of the resulting file or manifest."
        },
        "output": {
          "description": "Output configuration.",
          "$ref": "Output"
        },
        "adBreaks": {
          "description": "List of ad breaks. Specifies where to insert ad break tags in the output manifests.",
          "type": "array",
          "items": {
            "$ref": "AdBreak"
          }
        },
        "spriteSheets": {
          "type": "array",
          "items": {
            "$ref": "SpriteSheet"
          },
          "description": "List of output sprite sheets. Spritesheets require at least one VideoStream in the Jobconfig."
        },
        "elementaryStreams": {
          "type": "array",
          "description": "List of elementary streams.",
          "items": {
            "$ref": "ElementaryStream"
          }
        },
        "muxStreams": {
          "description": "List of multiplexing settings for output streams.",
          "type": "array",
          "items": {
            "$ref": "MuxStream"
          }
        },
        "overlays": {
          "description": "List of overlays on the output video, in descending Z-order.",
          "type": "array",
          "items": {
            "$ref": "Overlay"
          }
        },
        "manifests": {
          "items": {
            "$ref": "Manifest"
          },
          "type": "array",
          "description": "List of output manifests."
        },
        "pubsubDestination": {
          "$ref": "PubsubDestination",
          "description": "Destination on Pub/Sub."
        }
      }
    },
    "DashConfig": {
      "properties": {
        "segmentReferenceScheme": {
          "enumDescriptions": [
            "The segment reference scheme is not specified.",
            "Lists the URLs of media files for each segment.",
            "Lists each segment from a template with $Number$ variable."
          ],
          "description": "The segment reference scheme for a `DASH` manifest. The default is `SEGMENT_LIST`",
          "type": "string",
          "enum": [
            "SEGMENT_REFERENCE_SCHEME_UNSPECIFIED",
            "SEGMENT_LIST",
            "SEGMENT_TEMPLATE_NUMBER"
          ]
        }
      },
      "id": "DashConfig",
      "type": "object",
      "description": "`DASH` manifest configuration."
    },
    "Crop": {
      "type": "object",
      "properties": {
        "leftPixels": {
          "type": "integer",
          "description": "The number of pixels to crop from the left. The default is 0.",
          "format": "int32"
        },
        "topPixels": {
          "type": "integer",
          "description": "The number of pixels to crop from the top. The default is 0.",
          "format": "int32"
        },
        "rightPixels": {
          "type": "integer",
          "format": "int32",
          "description": "The number of pixels to crop from the right. The default is 0."
        },
        "bottomPixels": {
          "format": "int32",
          "type": "integer",
          "description": "The number of pixels to crop from the bottom. The default is 0."
        }
      },
      "id": "Crop",
      "description": "Video cropping configuration for the input video. The cropped input video is scaled to match the output resolution."
    },
    "Vp9CodecSettings": {
      "id": "Vp9CodecSettings",
      "description": "VP9 codec settings.",
      "properties": {
        "widthPixels": {
          "format": "int32",
          "type": "integer",
          "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the width, in pixels, per the horizontal ASR. The API calculates the height per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output."
        },
        "frameRate": {
          "type": "number",
          "format": "double",
          "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information."
        },
        "crfLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21. **Note:** This field is not supported."
        },
        "bitrateBps": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 480,000,000."
        },
        "pixelFormat": {
          "description": "Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format",
          "type": "string"
        },
        "heightPixels": {
          "format": "int32",
          "type": "integer",
          "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used. For portrait videos that contain horizontal ASR and rotation metadata, provide the height, in pixels, per the horizontal ASR. The API calculates the width per the horizontal ASR. The API detects any rotation metadata and swaps the requested height and width for the output."
        },
        "gopDuration": {
          "format": "google-duration",
          "description": "Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.",
          "type": "string"
        },
        "gopFrameCount": {
          "description": "Select the GOP size based on the specified frame count. Must be greater than zero.",
          "type": "integer",
          "format": "int32"
        },
        "rateControlMode": {
          "description": "Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate",
          "type": "string"
        },
        "profile": {
          "description": "Enforces the specified codec profile. The following profiles are supported: * `profile0` (default) * `profile1` * `profile2` * `profile3` The available options are [WebM-compatible](https://www.webmproject.org/vp9/profiles/). Note that certain values for this field may cause the transcoder to override other fields you set in the `Vp9CodecSettings` message.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Input": {
      "description": "Input asset.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). If empty, the value is populated from `Job.input_uri`. See [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats)."
        },
        "key": {
          "description": "A unique key for this input. Must be specified when using advanced mapping and edit lists.",
          "type": "string"
        },
        "preprocessingConfig": {
          "$ref": "PreprocessingConfig",
          "description": "Preprocessing configurations."
        }
      },
      "id": "Input"
    },
    "ListJobTemplatesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The pagination token.",
          "type": "string"
        },
        "jobTemplates": {
          "type": "array",
          "items": {
            "$ref": "JobTemplate"
          },
          "description": "List of job templates in the specified region."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "List of regions that could not be reached.",
          "type": "array"
        }
      },
      "description": "Response message for `TranscoderService.ListJobTemplates`.",
      "type": "object",
      "id": "ListJobTemplatesResponse"
    },
    "AudioStream": {
      "description": "Audio stream resource.",
      "id": "AudioStream",
      "type": "object",
      "properties": {
        "sampleRateHertz": {
          "format": "int32",
          "type": "integer",
          "description": "The audio sample rate in Hertz. The default is 48000 Hertz."
        },
        "bitrateBps": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000."
        },
        "displayName": {
          "description": "The name for this particular audio stream that will be added to the HLS/DASH manifest. Not supported in MP4 files.",
          "type": "string"
        },
        "languageCode": {
          "description": "The BCP-47 language code, such as `en-US` or `sr-Latn`. For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier. Not supported in MP4 files.",
          "type": "string"
        },
        "channelCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of audio channels. Must be between 1 and 6. The default is 2."
        },
        "channelLayout": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of channel names specifying layout of the audio channels. This only affects the metadata embedded in the container headers, if supported by the specified format. The default is `[\"fl\", \"fr\"]`. Supported channel names: - `fl` - Front left channel - `fr` - Front right channel - `sl` - Side left channel - `sr` - Side right channel - `fc` - Front center channel - `lfe` - Low frequency"
        },
        "mapping": {
          "type": "array",
          "description": "The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.",
          "items": {
            "$ref": "AudioMapping"
          }
        },
        "codec": {
          "description": "The codec for this audio stream. The default is `aac`. Supported audio codecs: - `aac` - `aac-he` - `aac-he-v2` - `mp3` - `ac3` - `eac3`",
          "type": "string"
        }
      }
    },
    "Overlay": {
      "description": "Overlay configuration.",
      "id": "Overlay",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "Image",
          "description": "Image overlay."
        },
        "animations": {
          "items": {
            "$ref": "Animation"
          },
          "type": "array",
          "description": "List of Animations. The list should be chronological, without any time overlap."
        }
      }
    },
    "Audio": {
      "properties": {
        "lufs": {
          "type": "number",
          "description": "Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization",
          "format": "double"
        },
        "highBoost": {
          "description": "Enable boosting high frequency components. The default is `false`. **Note:** This field is not supported.",
          "type": "boolean"
        },
        "lowBoost": {
          "type": "boolean",
          "description": "Enable boosting low frequency components. The default is `false`. **Note:** This field is not supported."
        }
      },
      "id": "Audio",
      "type": "object",
      "description": "Audio preprocessing configuration."
    }
  },
  "id": "transcoder:v1",
  "revision": "20230607",
  "kind": "discovery#restDescription",
  "baseUrl": "https://transcoder.googleapis.com/",
  "rootUrl": "https://transcoder.googleapis.com/",
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  }
}

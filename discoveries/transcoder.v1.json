{
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "jobTemplates": {
              "methods": {
                "list": {
                  "description": "Lists job templates in the specified region.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "The `next_page_token` value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent location from which to retrieve the collection of job templates. Format: `projects/{project}/locations/{location}`",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression, following the syntax outlined in https://google.aip.dev/160."
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates",
                  "path": "v1/{+parent}/jobTemplates",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListJobTemplatesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "transcoder.projects.locations.jobTemplates.list"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a job template.",
                  "id": "transcoder.projects.locations.jobTemplates.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates/{jobTemplatesId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobTemplates/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the job template to delete. `projects/{project}/locations/{location}/jobTemplates/{job_template}`",
                      "required": true,
                      "type": "string"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the job template is not found, the request will succeed but no action will be taken on the server.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "JobTemplate"
                  },
                  "description": "Creates a job template in the specified region.",
                  "path": "v1/{+parent}/jobTemplates",
                  "parameters": {
                    "jobTemplateId": {
                      "location": "query",
                      "description": "Required. The ID to use for the job template, which will become the final component of the job template's resource name. This value should be 4-63 characters, and valid characters must match the regular expression `a-zA-Z*`.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent location to create this job template. Format: `projects/{project}/locations/{location}`",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates",
                  "request": {
                    "$ref": "JobTemplate"
                  },
                  "id": "transcoder.projects.locations.jobTemplates.create",
                  "httpMethod": "POST"
                },
                "get": {
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobTemplates/{jobTemplatesId}",
                  "id": "transcoder.projects.locations.jobTemplates.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Returns the job template data.",
                  "response": {
                    "$ref": "JobTemplate"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobTemplates/[^/]+$",
                      "description": "Required. The name of the job template to retrieve. Format: `projects/{project}/locations/{location}/jobTemplates/{job_template}`",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "jobs": {
              "methods": {
                "create": {
                  "description": "Creates a job in the specified region.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent location to create and process this job. Format: `projects/{project}/locations/{location}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}/jobs",
                  "response": {
                    "$ref": "Job"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "transcoder.projects.locations.jobs.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Job"
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the job to retrieve. Format: `projects/{project}/locations/{location}/jobs/{job}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Returns the job data.",
                  "response": {
                    "$ref": "Job"
                  },
                  "id": "transcoder.projects.locations.jobs.get",
                  "path": "v1/{+name}",
                  "httpMethod": "GET"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$",
                      "description": "Required. The name of the job to delete. Format: `projects/{project}/locations/{location}/jobs/{job}`",
                      "location": "path"
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "description": "If set to true, and the job is not found, the request will succeed but no action will be taken on the server.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "transcoder.projects.locations.jobs.delete",
                  "description": "Deletes a job."
                },
                "list": {
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Format: `projects/{project}/locations/{location}`",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "orderBy": {
                      "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression, following the syntax outlined in https://google.aip.dev/160."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The `next_page_token` value returned from a previous List request, if any.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "transcoder.projects.locations.jobs.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/jobs",
                  "response": {
                    "$ref": "ListJobsResponse"
                  },
                  "path": "v1/{+parent}/jobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists jobs in the specified region."
                }
              }
            }
          }
        }
      }
    }
  },
  "title": "Transcoder API",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "rootUrl": "https://transcoder.googleapis.com/",
  "canonicalName": "Transcoder",
  "revision": "20220131",
  "schemas": {
    "Manifest": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "The name of the generated file. The default is `manifest` with the extension suffix corresponding to the `Manifest.type`."
        },
        "muxStreams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. List of user given `MuxStream.key`s that should appear in this manifest. When `Manifest.type` is `HLS`, a media manifest with name `MuxStream.key` and `.m3u8` extension is generated for each element of the `Manifest.mux_streams`."
        },
        "type": {
          "enum": [
            "MANIFEST_TYPE_UNSPECIFIED",
            "HLS",
            "DASH"
          ],
          "description": "Required. Type of the manifest, can be `HLS` or `DASH`.",
          "enumDescriptions": [
            "The manifest type is not specified.",
            "Create `HLS` manifest. The corresponding file extension is `.m3u8`.",
            "Create `DASH` manifest. The corresponding file extension is `.mpd`."
          ],
          "type": "string"
        }
      },
      "description": "Manifest configuration.",
      "id": "Manifest"
    },
    "Deblock": {
      "type": "object",
      "description": "Deblock preprocessing configuration.",
      "properties": {
        "strength": {
          "type": "number",
          "format": "double",
          "description": "Set strength of the deblocker. Enter a value between 0 and 1. The higher the value, the stronger the block removal. 0 is no deblocking. The default is 0."
        },
        "enabled": {
          "description": "Enable deblocker. The default is `false`.",
          "type": "boolean"
        }
      },
      "id": "Deblock"
    },
    "PubsubDestination": {
      "description": "A Pub/Sub destination.",
      "properties": {
        "topic": {
          "description": "The name of the Pub/Sub topic to publish job completion notification to. For example: `projects/{project}/topics/{topic}`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PubsubDestination"
    },
    "Pad": {
      "properties": {
        "rightPixels": {
          "type": "integer",
          "description": "The number of pixels to add to the right. The default is 0.",
          "format": "int32"
        },
        "topPixels": {
          "description": "The number of pixels to add to the top. The default is 0.",
          "type": "integer",
          "format": "int32"
        },
        "leftPixels": {
          "type": "integer",
          "description": "The number of pixels to add to the left. The default is 0.",
          "format": "int32"
        },
        "bottomPixels": {
          "type": "integer",
          "description": "The number of pixels to add to the bottom. The default is 0.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.",
      "id": "Pad"
    },
    "AnimationStatic": {
      "properties": {
        "startTimeOffset": {
          "format": "google-duration",
          "description": "The time to start displaying the overlay object, in seconds. Default: 0",
          "type": "string"
        },
        "xy": {
          "$ref": "NormalizedCoordinate",
          "description": "Normalized coordinates based on output video resolution. Valid values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video."
        }
      },
      "description": "Display static overlay object.",
      "type": "object",
      "id": "AnimationStatic"
    },
    "PreprocessingConfig": {
      "description": "Preprocessing configurations.",
      "id": "PreprocessingConfig",
      "properties": {
        "color": {
          "$ref": "Color",
          "description": "Color preprocessing configuration."
        },
        "pad": {
          "$ref": "Pad",
          "description": "Specify the video pad filter configuration."
        },
        "denoise": {
          "$ref": "Denoise",
          "description": "Denoise preprocessing configuration."
        },
        "crop": {
          "description": "Specify the video cropping configuration.",
          "$ref": "Crop"
        },
        "deblock": {
          "description": "Deblock preprocessing configuration.",
          "$ref": "Deblock"
        },
        "audio": {
          "$ref": "Audio",
          "description": "Audio preprocessing configuration."
        }
      },
      "type": "object"
    },
    "Color": {
      "id": "Color",
      "properties": {
        "contrast": {
          "type": "number",
          "format": "double",
          "description": "Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0."
        },
        "saturation": {
          "format": "double",
          "description": "Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.",
          "type": "number"
        },
        "brightness": {
          "description": "Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.",
          "format": "double",
          "type": "number"
        }
      },
      "description": "Color preprocessing configuration.",
      "type": "object"
    },
    "JobTemplate": {
      "properties": {
        "config": {
          "description": "The configuration for this template.",
          "$ref": "JobConfig"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the job template. Format: `projects/{project_number}/locations/{location}/jobTemplates/{job_template}`"
        }
      },
      "id": "JobTemplate",
      "type": "object",
      "description": "Transcoding job template resource."
    },
    "JobConfig": {
      "type": "object",
      "properties": {
        "adBreaks": {
          "items": {
            "$ref": "AdBreak"
          },
          "description": "List of ad breaks. Specifies where to insert ad break tags in the output manifests.",
          "type": "array"
        },
        "manifests": {
          "items": {
            "$ref": "Manifest"
          },
          "description": "List of output manifests.",
          "type": "array"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "Input"
          },
          "description": "List of input assets stored in Cloud Storage."
        },
        "muxStreams": {
          "items": {
            "$ref": "MuxStream"
          },
          "type": "array",
          "description": "List of multiplexing settings for output streams."
        },
        "spriteSheets": {
          "description": "List of output sprite sheets.",
          "items": {
            "$ref": "SpriteSheet"
          },
          "type": "array"
        },
        "overlays": {
          "type": "array",
          "description": "List of overlays on the output video, in descending Z-order.",
          "items": {
            "$ref": "Overlay"
          }
        },
        "elementaryStreams": {
          "description": "List of elementary streams.",
          "items": {
            "$ref": "ElementaryStream"
          },
          "type": "array"
        },
        "pubsubDestination": {
          "$ref": "PubsubDestination",
          "description": "Destination on Pub/Sub."
        },
        "output": {
          "description": "Output configuration.",
          "$ref": "Output"
        },
        "editList": {
          "description": "List of `Edit atom`s. Defines the ultimate timeline of the resulting file or manifest.",
          "items": {
            "$ref": "EditAtom"
          },
          "type": "array"
        }
      },
      "description": "Job configuration",
      "id": "JobConfig"
    },
    "VideoStream": {
      "description": "Video stream resource.",
      "type": "object",
      "properties": {
        "h264": {
          "$ref": "H264CodecSettings",
          "description": "H264 codec settings."
        },
        "vp9": {
          "$ref": "Vp9CodecSettings",
          "description": "VP9 codec settings."
        },
        "h265": {
          "description": "H265 codec settings.",
          "$ref": "H265CodecSettings"
        }
      },
      "id": "VideoStream"
    },
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "Audio": {
      "id": "Audio",
      "type": "object",
      "properties": {
        "highBoost": {
          "description": "Enable boosting high frequency components. The default is `false`.",
          "type": "boolean"
        },
        "lufs": {
          "description": "Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization",
          "format": "double",
          "type": "number"
        },
        "lowBoost": {
          "type": "boolean",
          "description": "Enable boosting low frequency components. The default is `false`."
        }
      },
      "description": "Audio preprocessing configuration."
    },
    "Vp9CodecSettings": {
      "type": "object",
      "id": "Vp9CodecSettings",
      "description": "VP9 codec settings.",
      "properties": {
        "crfLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21. *Note*: This field is not supported. "
        },
        "frameRate": {
          "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.",
          "type": "number",
          "format": "double"
        },
        "widthPixels": {
          "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used.",
          "type": "integer",
          "format": "int32"
        },
        "pixelFormat": {
          "description": "Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format",
          "type": "string"
        },
        "heightPixels": {
          "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used.",
          "type": "integer",
          "format": "int32"
        },
        "gopFrameCount": {
          "format": "int32",
          "type": "integer",
          "description": "Select the GOP size based on the specified frame count. Must be greater than zero."
        },
        "bitrateBps": {
          "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 480,000,000.",
          "type": "integer",
          "format": "int32"
        },
        "rateControlMode": {
          "type": "string",
          "description": "Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate"
        },
        "profile": {
          "description": "Enforces the specified codec profile. The following profiles are supported: * `profile0` (default) * `profile1` * `profile2` * `profile3` The available options are [WebM-compatible](https://www.webmproject.org/vp9/profiles/). Note that certain values for this field may cause the transcoder to override other fields you set in the `Vp9CodecSettings` message.",
          "type": "string"
        },
        "gopDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`."
        }
      }
    },
    "ListJobTemplatesResponse": {
      "properties": {
        "unreachable": {
          "description": "List of regions that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jobTemplates": {
          "description": "List of job templates in the specified region.",
          "items": {
            "$ref": "JobTemplate"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token."
        }
      },
      "description": "Response message for `TranscoderService.ListJobTemplates`.",
      "type": "object",
      "id": "ListJobTemplatesResponse"
    },
    "TextMapping": {
      "properties": {
        "inputTrack": {
          "description": "Required. The zero-based index of the track in the input file.",
          "type": "integer",
          "format": "int32"
        },
        "atomKey": {
          "type": "string",
          "description": "Required. The `EditAtom.key` that references atom with text inputs in the `Job.edit_list`."
        },
        "inputKey": {
          "type": "string",
          "description": "Required. The `Input.key` that identifies the input file."
        }
      },
      "description": "The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.",
      "type": "object",
      "id": "TextMapping"
    },
    "Image": {
      "id": "Image",
      "properties": {
        "uri": {
          "description": "Required. URI of the JPEG image in Cloud Storage. For example, `gs://bucket/inputs/image.jpeg`. JPEG is the only supported image type.",
          "type": "string"
        },
        "alpha": {
          "type": "number",
          "format": "double",
          "description": "Target image opacity. Valid values are from `1.0` (solid, default) to `0.0` (transparent), exclusive. Set this to a value greater than `0.0`."
        },
        "resolution": {
          "$ref": "NormalizedCoordinate",
          "description": "Normalized image resolution, based on output video resolution. Valid values: `0.0`–`1.0`. To respect the original image aspect ratio, set either `x` or `y` to `0.0`. To use the original image resolution, set both `x` and `y` to `0.0`."
        }
      },
      "type": "object",
      "description": "Overlaid jpeg image."
    },
    "SpriteSheet": {
      "type": "object",
      "properties": {
        "endTimeOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "End time in seconds, relative to the output file timeline. When `end_time_offset` is not specified, the sprites are generated until the end of the output file."
        },
        "totalCount": {
          "description": "Total number of sprites. Create the specified number of sprites distributed evenly across the timeline of the output media. The default is 100.",
          "type": "integer",
          "format": "int32"
        },
        "interval": {
          "description": "Starting from `0s`, create sprites at regular intervals. Specify the interval value in seconds.",
          "type": "string",
          "format": "google-duration"
        },
        "startTimeOffset": {
          "description": "Start time in seconds, relative to the output file timeline. Determines the first sprite to pick. The default is `0s`.",
          "format": "google-duration",
          "type": "string"
        },
        "columnCount": {
          "description": "The maximum number of sprites per row in a sprite sheet. The default is 0, which indicates no maximum limit.",
          "format": "int32",
          "type": "integer"
        },
        "spriteWidthPixels": {
          "description": "Required. The width of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_width_pixels field or the SpriteSheet.sprite_height_pixels field, but not both (the API will automatically calculate the missing field).",
          "format": "int32",
          "type": "integer"
        },
        "spriteHeightPixels": {
          "description": "Required. The height of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_height_pixels field or the SpriteSheet.sprite_width_pixels field, but not both (the API will automatically calculate the missing field).",
          "format": "int32",
          "type": "integer"
        },
        "filePrefix": {
          "description": "Required. File name prefix for the generated sprite sheets. Each sprite sheet has an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `sprite_sheet0000000123.jpeg`.",
          "type": "string"
        },
        "format": {
          "description": "Format type. The default is `jpeg`. Supported formats: - `jpeg`",
          "type": "string"
        },
        "rowCount": {
          "description": "The maximum number of rows per sprite sheet. When the sprite sheet is full, a new sprite sheet is created. The default is 0, which indicates no maximum limit.",
          "type": "integer",
          "format": "int32"
        },
        "quality": {
          "type": "integer",
          "format": "int32",
          "description": "The quality of the generated sprite sheet. Enter a value between 1 and 100, where 1 is the lowest quality and 100 is the highest quality. The default is 100. A high quality value corresponds to a low image data compression ratio."
        }
      },
      "description": "Sprite sheet configuration.",
      "id": "SpriteSheet"
    },
    "AnimationFade": {
      "properties": {
        "fadeType": {
          "enumDescriptions": [
            "The fade type is not specified.",
            "Fade the overlay object into view.",
            "Fade the overlay object out of view."
          ],
          "enum": [
            "FADE_TYPE_UNSPECIFIED",
            "FADE_IN",
            "FADE_OUT"
          ],
          "type": "string",
          "description": "Required. Type of fade animation: `FADE_IN` or `FADE_OUT`."
        },
        "xy": {
          "description": "Normalized coordinates based on output video resolution. Valid values: `0.0`–`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.",
          "$ref": "NormalizedCoordinate"
        },
        "endTimeOffset": {
          "description": "The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s",
          "type": "string",
          "format": "google-duration"
        },
        "startTimeOffset": {
          "description": "The time to start the fade animation, in seconds. Default: 0",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "AnimationFade",
      "description": "Display overlay object with fade animation.",
      "type": "object"
    },
    "AnimationEnd": {
      "properties": {
        "startTimeOffset": {
          "format": "google-duration",
          "description": "The time to end overlay object, in seconds. Default: 0",
          "type": "string"
        }
      },
      "id": "AnimationEnd",
      "type": "object",
      "description": "End previous overlay animation from the video. Without AnimationEnd, the overlay object will keep the state of previous animation until the end of the video."
    },
    "Job": {
      "description": "Transcoding job resource.",
      "properties": {
        "templateId": {
          "type": "string",
          "description": "Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`. Preset Transcoder templates: - `preset/{preset_id}` - User defined JobTemplate: `{job_template_id}`"
        },
        "ttlAfterCompletionDays": {
          "description": "Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.",
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "type": "string",
          "description": "Output only. The time the transcoding started.",
          "format": "google-datetime",
          "readOnly": true
        },
        "inputUri": {
          "type": "string",
          "description": "Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`)."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the transcoding finished.",
          "readOnly": true
        },
        "config": {
          "description": "The configuration for this job.",
          "$ref": "JobConfig"
        },
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. An error object that describes the reason for the failure. This property is always present when `state` is `FAILED`."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the job was created.",
          "readOnly": true
        },
        "state": {
          "enumDescriptions": [
            "The processing state is not specified.",
            "The job is enqueued and will be picked up for processing soon.",
            "The job is being processed.",
            "The job has been completed successfully.",
            "The job has failed. For additional information, see `failure_reason` and `failure_details`"
          ],
          "description": "Output only. The current state of the job.",
          "readOnly": true,
          "enum": [
            "PROCESSING_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string"
        },
        "outputUri": {
          "description": "Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the job. Format: `projects/{project_number}/locations/{location}/jobs/{job}`",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Job"
    },
    "NormalizedCoordinate": {
      "id": "NormalizedCoordinate",
      "properties": {
        "y": {
          "description": "Normalized y coordinate.",
          "format": "double",
          "type": "number"
        },
        "x": {
          "format": "double",
          "type": "number",
          "description": "Normalized x coordinate."
        }
      },
      "description": "2D normalized coordinates. Default: `{0.0, 0.0}`",
      "type": "object"
    },
    "H265CodecSettings": {
      "type": "object",
      "description": "H265 codec settings.",
      "properties": {
        "pixelFormat": {
          "type": "string",
          "description": "Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format"
        },
        "bitrateBps": {
          "format": "int32",
          "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.",
          "type": "integer"
        },
        "crfLevel": {
          "type": "integer",
          "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.",
          "format": "int32"
        },
        "bPyramid": {
          "description": "Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`.",
          "type": "boolean"
        },
        "widthPixels": {
          "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used.",
          "type": "integer",
          "format": "int32"
        },
        "gopDuration": {
          "type": "string",
          "description": "Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`.",
          "format": "google-duration"
        },
        "aqStrength": {
          "type": "number",
          "format": "double",
          "description": "Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0."
        },
        "tune": {
          "type": "string",
          "description": "Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message."
        },
        "gopFrameCount": {
          "description": "Select the GOP size based on the specified frame count. Must be greater than zero.",
          "format": "int32",
          "type": "integer"
        },
        "frameRate": {
          "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information.",
          "format": "double",
          "type": "number"
        },
        "bFrameCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than `VideoStream.gop_frame_count` if set. The default is 0."
        },
        "preset": {
          "description": "Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.265). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message.",
          "type": "string"
        },
        "vbvFullnessBits": {
          "format": "int32",
          "description": "Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of `VideoStream.vbv_size_bits`.",
          "type": "integer"
        },
        "vbvSizeBits": {
          "description": "Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.",
          "type": "integer",
          "format": "int32"
        },
        "heightPixels": {
          "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used.",
          "format": "int32",
          "type": "integer"
        },
        "enableTwoPass": {
          "type": "boolean",
          "description": "Use two-pass encoding strategy to achieve better video quality. `VideoStream.rate_control_mode` must be `vbr`. The default is `false`."
        },
        "allowOpenGop": {
          "description": "Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`.",
          "type": "boolean"
        },
        "rateControlMode": {
          "type": "string",
          "description": "Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor"
        },
        "profile": {
          "type": "string",
          "description": "Enforces the specified codec profile. The following profiles are supported: * 8-bit profiles * `main` (default) * `main-intra` * `mainstillpicture` * 10-bit profiles * `main10` (default) * `main10-intra` * `main422-10` * `main422-10-intra` * `main444-10` * `main444-10-intra` * 12-bit profiles * `main12` (default) * `main12-intra` * `main422-12` * `main422-12-intra` * `main444-12` * `main444-12-intra` The available options are [FFmpeg-compatible](https://x265.readthedocs.io/). Note that certain values for this field may cause the transcoder to override other fields you set in the `H265CodecSettings` message."
        }
      },
      "id": "H265CodecSettings"
    },
    "ElementaryStream": {
      "description": "Encoding of an input file such as an audio, video, or text track. Elementary streams must be packaged before mapping and sharing between different output formats.",
      "id": "ElementaryStream",
      "properties": {
        "key": {
          "type": "string",
          "description": "A unique key for this elementary stream."
        },
        "videoStream": {
          "$ref": "VideoStream",
          "description": "Encoding of a video stream."
        },
        "textStream": {
          "description": "Encoding of a text stream. For example, closed captions or subtitles.",
          "$ref": "TextStream"
        },
        "audioStream": {
          "description": "Encoding of an audio stream.",
          "$ref": "AudioStream"
        }
      },
      "type": "object"
    },
    "Animation": {
      "type": "object",
      "id": "Animation",
      "properties": {
        "animationFade": {
          "$ref": "AnimationFade",
          "description": "Display overlay object with fade animation."
        },
        "animationEnd": {
          "$ref": "AnimationEnd",
          "description": "End previous animation."
        },
        "animationStatic": {
          "$ref": "AnimationStatic",
          "description": "Display static overlay object."
        }
      },
      "description": "Animation types."
    },
    "MuxStream": {
      "properties": {
        "elementaryStreams": {
          "type": "array",
          "description": "List of `ElementaryStream.key`s multiplexed in this stream.",
          "items": {
            "type": "string"
          }
        },
        "fileName": {
          "type": "string",
          "description": "The name of the generated file. The default is `MuxStream.key` with the extension suffix corresponding to the `MuxStream.container`. Individual segments also have an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `mux_stream0000000123.ts`."
        },
        "container": {
          "type": "string",
          "description": "The container format. The default is `mp4` Supported container formats: - `ts` - `fmp4`- the corresponding file extension is `.m4s` - `mp4` - `vtt`"
        },
        "key": {
          "type": "string",
          "description": "A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key` with the `.m3u8` extension suffix."
        },
        "segmentSettings": {
          "description": "Segment settings for `ts`, `fmp4` and `vtt`.",
          "$ref": "SegmentSettings"
        }
      },
      "type": "object",
      "description": "Multiplexing settings for output stream.",
      "id": "MuxStream"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "id": "Empty",
      "type": "object"
    },
    "AdBreak": {
      "id": "AdBreak",
      "properties": {
        "startTimeOffset": {
          "description": "Start time in seconds for the ad break, relative to the output file timeline. The default is `0s`.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Ad break."
    },
    "ListJobsResponse": {
      "description": "Response message for `TranscoderService.ListJobs`.",
      "type": "object",
      "id": "ListJobsResponse",
      "properties": {
        "jobs": {
          "description": "List of jobs in the specified region.",
          "type": "array",
          "items": {
            "$ref": "Job"
          }
        },
        "unreachable": {
          "description": "List of regions that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The pagination token."
        }
      }
    },
    "Output": {
      "id": "Output",
      "description": "Location of output file(s) in a Cloud Storage bucket.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "URI for the output file(s). For example, `gs://my-bucket/outputs/`. If empty the value is populated from `Job.output_uri`.",
          "type": "string"
        }
      }
    },
    "Overlay": {
      "type": "object",
      "description": "Overlay configuration.",
      "properties": {
        "animations": {
          "type": "array",
          "description": "List of Animations. The list should be chronological, without any time overlap.",
          "items": {
            "$ref": "Animation"
          }
        },
        "image": {
          "$ref": "Image",
          "description": "Image overlay."
        }
      },
      "id": "Overlay"
    },
    "EditAtom": {
      "properties": {
        "startTimeOffset": {
          "description": "Start time in seconds for the atom, relative to the input file timeline. The default is `0s`.",
          "format": "google-duration",
          "type": "string"
        },
        "inputs": {
          "description": "List of `Input.key`s identifying files that should be used in this atom. The listed `inputs` must have the same timeline.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endTimeOffset": {
          "description": "End time in seconds for the atom, relative to the input file timeline. When `end_time_offset` is not specified, the `inputs` are used until the end of the atom.",
          "format": "google-duration",
          "type": "string"
        },
        "key": {
          "description": "A unique key for this atom. Must be specified when using advanced mapping.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "EditAtom",
      "description": "Edit atom."
    },
    "AudioMapping": {
      "id": "AudioMapping",
      "properties": {
        "gainDb": {
          "format": "double",
          "description": "Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.",
          "type": "number"
        },
        "atomKey": {
          "description": "Required. The `EditAtom.key` that references the atom with audio inputs in the `Job.edit_list`.",
          "type": "string"
        },
        "inputTrack": {
          "type": "integer",
          "description": "Required. The zero-based index of the track in the input file.",
          "format": "int32"
        },
        "inputChannel": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The zero-based index of the channel in the input audio stream."
        },
        "outputChannel": {
          "description": "Required. The zero-based index of the channel in the output audio stream.",
          "format": "int32",
          "type": "integer"
        },
        "inputKey": {
          "description": "Required. The `Input.key` that identifies the input file.",
          "type": "string"
        }
      },
      "description": "The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.",
      "type": "object"
    },
    "Denoise": {
      "type": "object",
      "description": "Denoise preprocessing configuration.",
      "properties": {
        "tune": {
          "type": "string",
          "description": "Set the denoiser mode. The default is `standard`. Supported denoiser modes: - `standard` - `grain`"
        },
        "strength": {
          "type": "number",
          "description": "Set strength of the denoise. Enter a value between 0 and 1. The higher the value, the smoother the image. 0 is no denoising. The default is 0.",
          "format": "double"
        }
      },
      "id": "Denoise"
    },
    "TextStream": {
      "description": "Encoding of a text stream. For example, closed captions or subtitles.",
      "properties": {
        "codec": {
          "type": "string",
          "description": "The codec for this text stream. The default is `webvtt`. Supported text codecs: - `srt` - `ttml` - `cea608` - `cea708` - `webvtt`"
        },
        "mapping": {
          "items": {
            "$ref": "TextMapping"
          },
          "type": "array",
          "description": "The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`."
        }
      },
      "type": "object",
      "id": "TextStream"
    },
    "SegmentSettings": {
      "properties": {
        "individualSegments": {
          "description": "Required. Create an individual segment file. The default is `false`.",
          "type": "boolean"
        },
        "segmentDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Duration of the segments in seconds. The default is `6.0s`. Note that `segmentDuration` must be greater than or equal to [`gopDuration`](#videostream), and `segmentDuration` must be divisible by [`gopDuration`](#videostream)."
        }
      },
      "description": "Segment settings for `ts`, `fmp4` and `vtt`.",
      "type": "object",
      "id": "SegmentSettings"
    },
    "AudioStream": {
      "properties": {
        "sampleRateHertz": {
          "format": "int32",
          "description": "The audio sample rate in Hertz. The default is 48000 Hertz.",
          "type": "integer"
        },
        "mapping": {
          "type": "array",
          "items": {
            "$ref": "AudioMapping"
          },
          "description": "The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`."
        },
        "codec": {
          "type": "string",
          "description": "The codec for this audio stream. The default is `aac`. Supported audio codecs: - `aac` - `aac-he` - `aac-he-v2` - `mp3` - `ac3` - `eac3`"
        },
        "bitrateBps": {
          "type": "integer",
          "description": "Required. Audio bitrate in bits per second. Must be between 1 and 10,000,000.",
          "format": "int32"
        },
        "channelLayout": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of channel names specifying layout of the audio channels. This only affects the metadata embedded in the container headers, if supported by the specified format. The default is `[\"fl\", \"fr\"]`. Supported channel names: - `fl` - Front left channel - `fr` - Front right channel - `sl` - Side left channel - `sr` - Side right channel - `fc` - Front center channel - `lfe` - Low frequency"
        },
        "channelCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of audio channels. Must be between 1 and 6. The default is 2."
        }
      },
      "type": "object",
      "id": "AudioStream",
      "description": "Audio stream resource."
    },
    "H264CodecSettings": {
      "id": "H264CodecSettings",
      "description": "H264 codec settings.",
      "properties": {
        "pixelFormat": {
          "type": "string",
          "description": "Pixel format to use. The default is `yuv420p`. Supported pixel formats: - `yuv420p` pixel format - `yuv422p` pixel format - `yuv444p` pixel format - `yuv420p10` 10-bit HDR pixel format - `yuv422p10` 10-bit HDR pixel format - `yuv444p10` 10-bit HDR pixel format - `yuv420p12` 12-bit HDR pixel format - `yuv422p12` 12-bit HDR pixel format - `yuv444p12` 12-bit HDR pixel format"
        },
        "bPyramid": {
          "description": "Allow B-pyramid for reference frame selection. This may not be supported on all decoders. The default is `false`.",
          "type": "boolean"
        },
        "profile": {
          "description": "Enforces the specified codec profile. The following profiles are supported: * `baseline` * `main` * `high` (default) The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message.",
          "type": "string"
        },
        "enableTwoPass": {
          "description": "Use two-pass encoding strategy to achieve better video quality. `VideoStream.rate_control_mode` must be `vbr`. The default is `false`.",
          "type": "boolean"
        },
        "rateControlMode": {
          "type": "string",
          "description": "Specify the `rate_control_mode`. The default is `vbr`. Supported rate control modes: - `vbr` - variable bitrate - `crf` - constant rate factor"
        },
        "bFrameCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of consecutive B-frames. Must be greater than or equal to zero. Must be less than `VideoStream.gop_frame_count` if set. The default is 0."
        },
        "widthPixels": {
          "type": "integer",
          "description": "The width of the video in pixels. Must be an even integer. When not specified, the width is adjusted to match the specified height and input aspect ratio. If both are omitted, the input width is used.",
          "format": "int32"
        },
        "preset": {
          "type": "string",
          "description": "Enforces the specified codec preset. The default is `veryfast`. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Preset). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message."
        },
        "aqStrength": {
          "description": "Specify the intensity of the adaptive quantizer (AQ). Must be between 0 and 1, where 0 disables the quantizer and 1 maximizes the quantizer. A higher value equals a lower bitrate but smoother image. The default is 0.",
          "type": "number",
          "format": "double"
        },
        "bitrateBps": {
          "description": "Required. The video bitrate in bits per second. The minimum value is 1,000. The maximum value is 800,000,000.",
          "type": "integer",
          "format": "int32"
        },
        "gopDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Select the GOP size based on the specified duration. The default is `3s`. Note that `gopDuration` must be less than or equal to [`segmentDuration`](#SegmentSettings), and [`segmentDuration`](#SegmentSettings) must be divisible by `gopDuration`."
        },
        "entropyCoder": {
          "description": "The entropy coder to use. The default is `cabac`. Supported entropy coders: - `cavlc` - `cabac`",
          "type": "string"
        },
        "tune": {
          "type": "string",
          "description": "Enforces the specified codec tune. The available options are [FFmpeg-compatible](https://trac.ffmpeg.org/wiki/Encode/H.264#Tune). Note that certain values for this field may cause the transcoder to override other fields you set in the `H264CodecSettings` message."
        },
        "frameRate": {
          "type": "number",
          "format": "double",
          "description": "Required. The target video frame rate in frames per second (FPS). Must be less than or equal to 120. Will default to the input frame rate if larger than the input frame rate. The API will generate an output FPS that is divisible by the input FPS, and smaller or equal to the target FPS. See [Calculating frame rate](https://cloud.google.com/transcoder/docs/concepts/frame-rate) for more information."
        },
        "vbvFullnessBits": {
          "type": "integer",
          "description": "Initial fullness of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to 90% of `VideoStream.vbv_size_bits`.",
          "format": "int32"
        },
        "gopFrameCount": {
          "format": "int32",
          "type": "integer",
          "description": "Select the GOP size based on the specified frame count. Must be greater than zero."
        },
        "crfLevel": {
          "format": "int32",
          "description": "Target CRF level. Must be between 10 and 36, where 10 is the highest quality and 36 is the most efficient compression. The default is 21.",
          "type": "integer"
        },
        "heightPixels": {
          "description": "The height of the video in pixels. Must be an even integer. When not specified, the height is adjusted to match the specified width and input aspect ratio. If both are omitted, the input height is used.",
          "type": "integer",
          "format": "int32"
        },
        "vbvSizeBits": {
          "type": "integer",
          "description": "Size of the Video Buffering Verifier (VBV) buffer in bits. Must be greater than zero. The default is equal to `VideoStream.bitrate_bps`.",
          "format": "int32"
        },
        "allowOpenGop": {
          "type": "boolean",
          "description": "Specifies whether an open Group of Pictures (GOP) structure should be allowed or not. The default is `false`."
        }
      },
      "type": "object"
    },
    "Crop": {
      "properties": {
        "topPixels": {
          "description": "The number of pixels to crop from the top. The default is 0.",
          "format": "int32",
          "type": "integer"
        },
        "rightPixels": {
          "format": "int32",
          "type": "integer",
          "description": "The number of pixels to crop from the right. The default is 0."
        },
        "bottomPixels": {
          "description": "The number of pixels to crop from the bottom. The default is 0.",
          "type": "integer",
          "format": "int32"
        },
        "leftPixels": {
          "description": "The number of pixels to crop from the left. The default is 0.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Video cropping configuration for the input video. The cropped input video is scaled to match the output resolution.",
      "id": "Crop",
      "type": "object"
    },
    "Input": {
      "properties": {
        "preprocessingConfig": {
          "$ref": "PreprocessingConfig",
          "description": "Preprocessing configurations."
        },
        "uri": {
          "type": "string",
          "description": "URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`). If empty, the value will be populated from `Job.input_uri`."
        },
        "key": {
          "type": "string",
          "description": "A unique key for this input. Must be specified when using advanced mapping and edit lists."
        }
      },
      "type": "object",
      "description": "Input asset.",
      "id": "Input"
    }
  },
  "baseUrl": "https://transcoder.googleapis.com/",
  "version": "v1",
  "id": "transcoder:v1",
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    }
  },
  "basePath": "",
  "kind": "discovery#restDescription",
  "description": "This API converts video files into formats suitable for consumer distribution. ",
  "documentationLink": "https://cloud.google.com/transcoder/docs/",
  "protocol": "rest",
  "mtlsRootUrl": "https://transcoder.mtls.googleapis.com/",
  "name": "transcoder"
}

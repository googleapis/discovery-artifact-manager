{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "discoveryVersion": "v1",
  "canonicalName": "Cloud Composer",
  "rootUrl": "https://composer.googleapis.com/",
  "ownerName": "Google",
  "protocol": "rest",
  "schemas": {
    "RecoveryConfig": {
      "type": "object",
      "id": "RecoveryConfig",
      "properties": {
        "scheduledSnapshotsConfig": {
          "$ref": "ScheduledSnapshotsConfig",
          "description": "Optional. The configuration for scheduled snapshot creation mechanism."
        }
      },
      "description": "The Recovery settings of an environment."
    },
    "ScheduledSnapshotsConfig": {
      "type": "object",
      "id": "ScheduledSnapshotsConfig",
      "properties": {
        "snapshotLocation": {
          "description": "Optional. The Cloud Storage location for storing automatically created snapshots.",
          "type": "string"
        },
        "enabled": {
          "description": "Optional. Whether scheduled snapshots creation is enabled.",
          "type": "boolean"
        },
        "timeZone": {
          "description": "Optional. Time zone that sets the context to interpret snapshot_creation_schedule.",
          "type": "string"
        },
        "snapshotCreationSchedule": {
          "type": "string",
          "description": "Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution."
        }
      },
      "description": "The configuration for scheduled snapshot creation mechanism."
    },
    "MaintenanceWindow": {
      "description": "The configuration settings for Cloud Composer maintenance window. The following example: ``` { \"startTime\":\"2019-08-01T01:00:00Z\" \"endTime\":\"2019-08-01T07:00:00Z\" \"recurrence\":\"FREQ=WEEKLY;BYDAY=TU,WE\" } ``` would define a maintenance window between 01 and 07 hours UTC during each Tuesday and Wednesday.",
      "id": "MaintenanceWindow",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end_time must be in the future, relative to `start_time`."
        },
        "recurrence": {
          "description": "Required. Maintenance window recurrence. Format is a subset of [RFC-5545](https://tools.ietf.org/html/rfc5545) `RRULE`. The only allowed values for `FREQ` field are `FREQ=DAILY` and `FREQ=WEEKLY;BYDAY=...` Example values: `FREQ=WEEKLY;BYDAY=TU,WE`, `FREQ=DAILY`.",
          "type": "string"
        },
        "startTime": {
          "description": "Required. Start time of the first recurrence of the maintenance window.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "NodeConfig": {
      "description": "The configuration information for the Kubernetes Engine nodes running the Apache Airflow software.",
      "id": "NodeConfig",
      "properties": {
        "tags": {
          "description": "Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Cannot be updated.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "location": {
          "type": "string",
          "description": "Optional. The Compute Engine [zone](/compute/docs/regions-zones) in which to deploy the VMs used to run the Apache Airflow software, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: \"projects/{projectId}/zones/{zoneId}\". This `location` must belong to the enclosing environment's project and location. If both this field and `nodeConfig.machineType` are specified, `nodeConfig.machineType` must belong to this `location`; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If only one field (`location` or `nodeConfig.machineType`) is specified, the location information from the specified field will be propagated to the unspecified field. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*."
        },
        "enableIpMasqAgent": {
          "description": "Optional. Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for all destination addresses, except between pods traffic. See: https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent",
          "type": "boolean"
        },
        "network": {
          "description": "Optional. The Compute Engine network to be used for machine communications, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: \"projects/{projectId}/global/networks/{networkId}\". If unspecified, the default network in the environment's project is used. If a [Custom Subnet Network](/vpc/docs/vpc#vpc_networks_and_subnets) is provided, `nodeConfig.subnetwork` must also be provided. For [Shared VPC](/vpc/docs/shared-vpc) subnetwork requirements, see `nodeConfig.subnetwork`.",
          "type": "string"
        },
        "oauthScopes": {
          "description": "Optional. The set of Google API scopes to be made available on all node VMs. If `oauth_scopes` is empty, defaults to [\"https://www.googleapis.com/auth/cloud-platform\"]. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "diskSizeGb": {
          "description": "Optional. The disk size in GB used for node VMs. Minimum size is 30GB. If unspecified, defaults to 100GB. Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "format": "int32",
          "type": "integer"
        },
        "maxPodsPerNode": {
          "format": "int32",
          "description": "Optional. The maximum number of pods per node in the Cloud Composer GKE cluster. The value must be between 8 and 110 and it can be set only if the environment is VPC-native. The default value is 32. Values of this field will be propagated both to the `default-pool` node pool of the newly created GKE cluster, and to the default \"Maximum Pods per Node\" value which is used for newly created node pools if their value is not explicitly set during node pool creation. For more information, see [Optimizing IP address allocation] (https://cloud.google.com/kubernetes-engine/docs/how-to/flexible-pod-cidr). Cannot be updated. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "type": "integer"
        },
        "machineType": {
          "type": "string",
          "description": "Optional. The Compute Engine [machine type](/compute/docs/machine-types) used for cluster instances, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: \"projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}\". The `machineType` must belong to the enclosing environment's project and location. If both this field and `nodeConfig.location` are specified, this `machineType` must belong to the `nodeConfig.location`; if both are unspecified, the service will pick a zone in the Compute Engine region corresponding to the Cloud Composer location, and propagate that choice to both fields. If exactly one of this field and `nodeConfig.location` is specified, the location information from the specified field will be propagated to the unspecified field. The `machineTypeId` must not be a [shared-core machine type](/compute/docs/machine-types#sharedcore). If this field is unspecified, the `machineTypeId` defaults to \"n1-standard-1\". This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*."
        },
        "ipAllocationPolicy": {
          "$ref": "IPAllocationPolicy",
          "description": "Optional. The IPAllocationPolicy fields for the GKE cluster."
        },
        "serviceAccount": {
          "type": "string",
          "description": "Optional. The Google Cloud Platform Service Account to be used by the workloads. If a service account is not specified, the \"default\" Compute Engine service account is used. Cannot be updated."
        },
        "subnetwork": {
          "description": "Optional. The Compute Engine subnetwork to be used for machine communications, specified as a [relative resource name](/apis/design/resource_names#relative_resource_name). For example: \"projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}\" If a subnetwork is provided, `nodeConfig.network` must also be provided, and the subnetwork must belong to the enclosing environment's project and location.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SaveSnapshotRequest": {
      "properties": {
        "snapshotLocation": {
          "description": "Location in a Cloud Storage where the snapshot is going to be stored, e.g.: \"gs://my-bucket/snapshots\".",
          "type": "string"
        }
      },
      "id": "SaveSnapshotRequest",
      "type": "object",
      "description": "Request to create a snapshot of a Cloud Composer environment."
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      }
    },
    "StopAirflowCommandRequest": {
      "description": "Stop Airflow Command request.",
      "id": "StopAirflowCommandRequest",
      "properties": {
        "podNamespace": {
          "description": "The namespace of the pod where the command is executed.",
          "type": "string"
        },
        "pod": {
          "description": "The name of the pod where the command is executed.",
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "If true, the execution is terminated forcefully (SIGKILL). If false, the execution is stopped gracefully, giving it time for cleanup."
        },
        "executionId": {
          "type": "string",
          "description": "The unique ID of the command execution."
        }
      },
      "type": "object"
    },
    "IPAllocationPolicy": {
      "description": "Configuration for controlling how IPs are allocated in the GKE cluster.",
      "id": "IPAllocationPolicy",
      "properties": {
        "servicesSecondaryRangeName": {
          "type": "string",
          "description": "Optional. The name of the services' secondary range used to allocate IP addresses to the cluster. Specify either `services_secondary_range_name` or `services_ipv4_cidr_block` but not both. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true."
        },
        "clusterSecondaryRangeName": {
          "type": "string",
          "description": "Optional. The name of the cluster's secondary range used to allocate IP addresses to pods. Specify either `cluster_secondary_range_name` or `cluster_ipv4_cidr_block` but not both. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true."
        },
        "clusterIpv4CidrBlock": {
          "type": "string",
          "description": "Optional. The IP address range used to allocate IP addresses to pods in the cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use. Specify `cluster_secondary_range_name` or `cluster_ipv4_cidr_block` but not both."
        },
        "useIpAliases": {
          "type": "boolean",
          "description": "Optional. Whether or not to enable Alias IPs in the GKE cluster. If `true`, a VPC-native cluster is created. This field is only supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. Environments in newer versions always use VPC-native GKE clusters."
        },
        "servicesIpv4CidrBlock": {
          "description": "Optional. The IP address range of the services IP addresses in this cluster. For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*, this field is applicable only when `use_ip_aliases` is true. Set to blank to have GKE choose a range with the default size. Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific netmask. Set to a [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g. `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range to use. Specify `services_secondary_range_name` or `services_ipv4_cidr_block` but not both.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Environment": {
      "description": "An environment for running orchestration tasks.",
      "type": "object",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this environment was last modified.",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be \u003c= 128 bytes in size."
        },
        "config": {
          "$ref": "EnvironmentConfig",
          "description": "Configuration parameters for this environment."
        },
        "name": {
          "description": "The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.",
          "type": "string"
        },
        "uuid": {
          "description": "Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which this environment was created.",
          "readOnly": true
        },
        "state": {
          "description": "The current state of the environment.",
          "enumDescriptions": [
            "The state of the environment is unknown.",
            "The environment is in the process of being created.",
            "The environment is currently running and healthy. It is ready for use.",
            "The environment is being updated. It remains usable but cannot receive additional update requests or be deleted at this time.",
            "The environment is undergoing deletion. It cannot be used.",
            "The environment has encountered an error and cannot be used."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "RUNNING",
            "UPDATING",
            "DELETING",
            "ERROR"
          ],
          "type": "string"
        }
      },
      "id": "Environment"
    },
    "StopAirflowCommandResponse": {
      "type": "object",
      "description": "Response to StopAirflowCommandRequest.",
      "id": "StopAirflowCommandResponse",
      "properties": {
        "isDone": {
          "description": "Whether the execution is still running.",
          "type": "boolean"
        },
        "output": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output message from stopping execution request."
        }
      }
    },
    "SaveSnapshotResponse": {
      "type": "object",
      "description": "Response to SaveSnapshotRequest.",
      "properties": {
        "snapshotPath": {
          "description": "The fully-resolved Cloud Storage path of the created snapshot, e.g.: \"gs://my-bucket/snapshots/project_location_environment_timestamp\". This field is populated only if the snapshot creation was successful.",
          "type": "string"
        }
      },
      "id": "SaveSnapshotResponse"
    },
    "DatabaseFailoverRequest": {
      "properties": {},
      "id": "DatabaseFailoverRequest",
      "description": "Request to trigger database failover (only for highly resilient environments).",
      "type": "object"
    },
    "LoadSnapshotRequest": {
      "properties": {
        "skipEnvironmentVariablesSetting": {
          "description": "Whether or not to skip setting environment variables when loading the environment's state.",
          "type": "boolean"
        },
        "skipGcsDataCopying": {
          "type": "boolean",
          "description": "Whether or not to skip copying Cloud Storage data when loading the environment's state."
        },
        "skipAirflowOverridesSetting": {
          "type": "boolean",
          "description": "Whether or not to skip setting Airflow overrides when loading the environment's state."
        },
        "snapshotPath": {
          "type": "string",
          "description": "A Cloud Storage path to a snapshot to load, e.g.: \"gs://my-bucket/snapshots/project_location_environment_timestamp\"."
        },
        "skipPypiPackagesInstallation": {
          "type": "boolean",
          "description": "Whether or not to skip installing Pypi packages when loading the environment's state."
        }
      },
      "description": "Request to load a snapshot into a Cloud Composer environment.",
      "id": "LoadSnapshotRequest",
      "type": "object"
    },
    "RestartWebServerRequest": {
      "type": "object",
      "properties": {},
      "id": "RestartWebServerRequest",
      "description": "Restart Airflow web server."
    },
    "PrivateClusterConfig": {
      "properties": {
        "masterIpv4CidrBlock": {
          "description": "Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of '172.16.0.0/23' is used.",
          "type": "string"
        },
        "masterIpv4ReservedRange": {
          "description": "Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network.",
          "type": "string",
          "readOnly": true
        },
        "enablePrivateEndpoint": {
          "description": "Optional. If `true`, access to the public endpoint of the GKE cluster is denied.",
          "type": "boolean"
        }
      },
      "id": "PrivateClusterConfig",
      "type": "object",
      "description": "Configuration options for the private GKE cluster in a Cloud Composer environment."
    },
    "PrivateEnvironmentConfig": {
      "id": "PrivateEnvironmentConfig",
      "description": "The configuration information for configuring a Private IP Cloud Composer environment.",
      "type": "object",
      "properties": {
        "webServerIpv4ReservedRange": {
          "readOnly": true,
          "description": "Output only. The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "type": "string"
        },
        "enablePrivateEnvironment": {
          "description": "Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "type": "boolean"
        },
        "webServerIpv4CidrBlock": {
          "description": "Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "type": "string"
        },
        "cloudComposerConnectionSubnetwork": {
          "description": "Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork.",
          "type": "string"
        },
        "cloudSqlIpv4CidrBlock": {
          "type": "string",
          "description": "Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from web_server_ipv4_cidr_block"
        },
        "enablePrivatelyUsedPublicIps": {
          "type": "boolean",
          "description": "Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for `IPAllocationPolicy.cluster_ipv4_cidr_block` and `IPAllocationPolicy.service_ipv4_cidr_block`."
        },
        "cloudComposerNetworkIpv4ReservedRange": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer."
        },
        "cloudComposerNetworkIpv4CidrBlock": {
          "type": "string",
          "description": "Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer."
        },
        "privateClusterConfig": {
          "$ref": "PrivateClusterConfig",
          "description": "Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment."
        },
        "networkingConfig": {
          "description": "Optional. Configuration for the network connections configuration in the environment.",
          "$ref": "NetworkingConfig"
        }
      }
    },
    "CheckUpgradeResponse": {
      "properties": {
        "buildLogUri": {
          "type": "string",
          "description": "Output only. Url for a docker build log of an upgraded image.",
          "readOnly": true
        },
        "containsPypiModulesConflict": {
          "enumDescriptions": [
            "It is unknown whether build had conflicts or not.",
            "There were python packages conflicts.",
            "There were no python packages conflicts."
          ],
          "enum": [
            "CONFLICT_RESULT_UNSPECIFIED",
            "CONFLICT",
            "NO_CONFLICT"
          ],
          "readOnly": true,
          "description": "Output only. Whether build has succeeded or failed on modules conflicts.",
          "type": "string"
        },
        "imageVersion": {
          "type": "string",
          "description": "Composer image for which the build was happening."
        },
        "pypiConflictBuildLogExtract": {
          "description": "Output only. Extract from a docker image build log containing information about pypi modules conflicts.",
          "type": "string",
          "readOnly": true
        },
        "pypiDependencies": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Pypi dependencies specified in the environment configuration, at the time when the build was triggered.",
          "type": "object"
        }
      },
      "id": "CheckUpgradeResponse",
      "type": "object",
      "description": "Message containing information about the result of an upgrade check operation."
    },
    "WebServerConfig": {
      "description": "The configuration settings for the Airflow web server App Engine instance. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
      "type": "object",
      "properties": {
        "machineType": {
          "description": "Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values.",
          "type": "string"
        }
      },
      "id": "WebServerConfig"
    },
    "CheckUpgradeRequest": {
      "description": "Request to check whether image upgrade will succeed.",
      "id": "CheckUpgradeRequest",
      "properties": {
        "imageVersion": {
          "type": "string",
          "description": "The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression `composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?)`. When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full [semantic version](https://semver.org), or an alias in the form of major version number or `latest`. When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also [version list](/composer/docs/concepts/versioning/composer-versions) and [versioning overview](/composer/docs/concepts/versioning/composer-versioning-overview)."
        }
      },
      "type": "object"
    },
    "SoftwareConfig": {
      "properties": {
        "pythonVersion": {
          "description": "Optional. The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes. Can be set to '2' or '3'. If not specified, the default is '3'. Cannot be updated. This field is only supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. Environments in newer versions always use Python major version 3.",
          "type": "string"
        },
        "schedulerCount": {
          "type": "integer",
          "description": "Optional. The number of schedulers for Airflow. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*.",
          "format": "int32"
        },
        "imageVersion": {
          "description": "The version of the software running in the environment. This encapsulates both the version of Cloud Composer functionality and the version of Apache Airflow. It must match the regular expression `composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?)`. When used as input, the server also checks if the provided version is supported and denies the request for an unsupported version. The Cloud Composer portion of the image version is a full [semantic version](https://semver.org), or an alias in the form of major version number or `latest`. When an alias is provided, the server replaces it with the current Cloud Composer version that satisfies the alias. The Apache Airflow portion of the image version is a full semantic version that points to one of the supported Apache Airflow versions, or an alias in the form of only major or major.minor versions specified. When an alias is provided, the server replaces it with the latest Apache Airflow version that satisfies the alias and is supported in the given Cloud Composer version. In all cases, the resolved image version is stored in the same field. See also [version list](/composer/docs/concepts/versioning/composer-versions) and [versioning overview](/composer/docs/concepts/versioning/composer-versioning-overview).",
          "type": "string"
        },
        "pypiPackages": {
          "description": "Optional. Custom Python Package Index (PyPI) packages to be installed in the environment. Keys refer to the lowercase package name such as \"numpy\" and values are the lowercase extras and version specifier such as \"==1.12.0\", \"[devel,gcp_api]\", or \"[devel]\u003e=1.8.2, \u003c1.9.2\". To specify a package without pinning it to a version specifier, use the empty string as the value.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "envVariables": {
          "type": "object",
          "description": "Optional. Additional environment variables to provide to the Apache Airflow scheduler, worker, and webserver processes. Environment variable names must match the regular expression `a-zA-Z_*`. They cannot specify Apache Airflow software configuration overrides (they cannot match the regular expression `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the following reserved names: * `AIRFLOW_HOME` * `C_FORCE_ROOT` * `CONTAINER_NAME` * `DAGS_FOLDER` * `GCP_PROJECT` * `GCS_BUCKET` * `GKE_CLUSTER_NAME` * `SQL_DATABASE` * `SQL_INSTANCE` * `SQL_PASSWORD` * `SQL_PROJECT` * `SQL_REGION` * `SQL_USER`",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudDataLineageIntegration": {
          "description": "Optional. The configuration for Cloud Data Lineage integration.",
          "$ref": "CloudDataLineageIntegration"
        },
        "airflowConfigOverrides": {
          "type": "object",
          "description": "Optional. Apache Airflow configuration properties to override. Property keys contain the section and property names, separated by a hyphen, for example \"core-dags_are_paused_at_creation\". Section names must not contain hyphens (\"-\"), opening square brackets (\"[\"), or closing square brackets (\"]\"). The property name must not be empty and must not contain an equals sign (\"=\") or semicolon (\";\"). Section and property names must not contain a period (\".\"). Apache Airflow configuration property names must be written in [snake_case](https://en.wikipedia.org/wiki/Snake_case). Property values can contain any character, and can be written in any lower/upper case format. Certain Apache Airflow configuration property values are [blocked](/composer/docs/concepts/airflow-configurations), and cannot be overridden.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "Specifies the selection and configuration of software inside the environment.",
      "type": "object",
      "id": "SoftwareConfig"
    },
    "EncryptionConfig": {
      "id": "EncryptionConfig",
      "type": "object",
      "properties": {
        "kmsKeyName": {
          "description": "Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used.",
          "type": "string"
        }
      },
      "description": "The encryption options for the Cloud Composer environment and its dependencies. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*."
    },
    "WorkloadsConfig": {
      "properties": {
        "scheduler": {
          "$ref": "SchedulerResource",
          "description": "Optional. Resources used by Airflow schedulers."
        },
        "worker": {
          "$ref": "WorkerResource",
          "description": "Optional. Resources used by Airflow workers."
        },
        "triggerer": {
          "$ref": "TriggererResource",
          "description": "Optional. Resources used by Airflow triggerers."
        },
        "webServer": {
          "description": "Optional. Resources used by Airflow web server.",
          "$ref": "WebServerResource"
        }
      },
      "id": "WorkloadsConfig",
      "description": "The Kubernetes workloads configuration for GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "OperationMetadata": {
      "description": "Metadata describing an operation.",
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Unused.",
            "The operation has been created but is not yet started.",
            "The operation is underway.",
            "The operation completed successfully.",
            "The operation is no longer running but did not succeed."
          ],
          "description": "Output only. The current operation state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCESSFUL",
            "FAILED"
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was submitted to the server.",
          "type": "string"
        },
        "resourceUuid": {
          "description": "Output only. The UUID of the resource being operated on.",
          "type": "string"
        },
        "endTime": {
          "description": "Output only. The time when the operation terminated, regardless of its success. This field is unset if the operation is still ongoing.",
          "type": "string",
          "format": "google-datetime"
        },
        "resource": {
          "description": "Output only. The resource being operated on, as a [relative resource name]( /apis/design/resource_names#relative_resource_name).",
          "type": "string"
        },
        "operationType": {
          "description": "Output only. The type of operation being performed.",
          "enumDescriptions": [
            "Unused.",
            "A resource creation operation.",
            "A resource deletion operation.",
            "A resource update operation.",
            "A resource check operation.",
            "Saves snapshot of the resource operation.",
            "Loads snapshot of the resource operation.",
            "Triggers failover of environment's Cloud SQL instance (only for highly resilient environments)."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CREATE",
            "DELETE",
            "UPDATE",
            "CHECK",
            "SAVE_SNAPSHOT",
            "LOAD_SNAPSHOT",
            "DATABASE_FAILOVER"
          ]
        }
      }
    },
    "LoadSnapshotResponse": {
      "description": "Response to LoadSnapshotRequest.",
      "type": "object",
      "properties": {},
      "id": "LoadSnapshotResponse"
    },
    "WebServerNetworkAccessControl": {
      "type": "object",
      "id": "WebServerNetworkAccessControl",
      "properties": {
        "allowedIpRanges": {
          "items": {
            "$ref": "AllowedIpRange"
          },
          "description": "A collection of allowed IP ranges with descriptions.",
          "type": "array"
        }
      },
      "description": "Network-level access control policy for the Airflow web server."
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "ListEnvironmentsResponse": {
      "properties": {
        "environments": {
          "type": "array",
          "description": "The list of environments returned by a ListEnvironmentsRequest.",
          "items": {
            "$ref": "Environment"
          }
        },
        "nextPageToken": {
          "description": "The page token used to query for the next page if one exists.",
          "type": "string"
        }
      },
      "description": "The environments in a project and location.",
      "id": "ListEnvironmentsResponse",
      "type": "object"
    },
    "CidrBlock": {
      "description": "CIDR block with an optional name.",
      "properties": {
        "cidrBlock": {
          "description": "CIDR block that must be specified in CIDR notation.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "User-defined name that identifies the CIDR block."
        }
      },
      "type": "object",
      "id": "CidrBlock"
    },
    "AllowedIpRange": {
      "id": "AllowedIpRange",
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional. User-provided description. It must contain at most 300 characters.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "IP address or range, defined using CIDR notation, of requests that this rule applies to. Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32` or `2001:0db8:0000:0042:0000:8a2e:0370:7334`. IP range prefixes should be properly truncated. For example, `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6, `2001:db8::1/32` should be truncated to `2001:db8::/32`."
        }
      },
      "description": "Allowed IP range with user-provided description."
    },
    "FetchDatabasePropertiesResponse": {
      "id": "FetchDatabasePropertiesResponse",
      "description": "Response for FetchDatabasePropertiesRequest.",
      "type": "object",
      "properties": {
        "isFailoverReplicaAvailable": {
          "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only fail over to the failover replica when the status is true.",
          "type": "boolean"
        },
        "secondaryGceZone": {
          "description": "The Compute Engine zone that the failover instance is currently serving from for a regional Cloud SQL instance.",
          "type": "string"
        },
        "primaryGceZone": {
          "type": "string",
          "description": "The Compute Engine zone that the instance is currently serving from."
        }
      }
    },
    "CloudDataLineageIntegration": {
      "description": "Configuration for Cloud Data Lineage integration.",
      "id": "CloudDataLineageIntegration",
      "properties": {
        "enabled": {
          "description": "Optional. Whether or not Cloud Data Lineage integration is enabled.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Date": {
      "properties": {
        "month": {
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32"
        },
        "day": {
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "type": "object",
      "id": "Date"
    },
    "DatabaseFailoverResponse": {
      "type": "object",
      "properties": {},
      "id": "DatabaseFailoverResponse",
      "description": "Response for DatabaseFailoverRequest."
    },
    "ExecuteAirflowCommandResponse": {
      "description": "Response to ExecuteAirflowCommandRequest.",
      "properties": {
        "executionId": {
          "description": "The unique ID of the command execution for polling.",
          "type": "string"
        },
        "error": {
          "type": "string",
          "description": "Error message. Empty if there was no error."
        },
        "pod": {
          "description": "The name of the pod where the command is executed.",
          "type": "string"
        },
        "podNamespace": {
          "description": "The namespace of the pod where the command is executed.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ExecuteAirflowCommandResponse"
    },
    "EnvironmentConfig": {
      "id": "EnvironmentConfig",
      "properties": {
        "recoveryConfig": {
          "description": "Optional. The Recovery settings configuration of an environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.",
          "$ref": "RecoveryConfig"
        },
        "airflowUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow web interface](/composer/docs/how-to/accessing/airflow-web-interface))."
        },
        "encryptionConfig": {
          "description": "Optional. The encryption options for the Cloud Composer environment and its dependencies. Cannot be updated.",
          "$ref": "EncryptionConfig"
        },
        "workloadsConfig": {
          "description": "Optional. The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. The GKE cluster runs Airflow scheduler, web server and workers workloads. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.",
          "$ref": "WorkloadsConfig"
        },
        "softwareConfig": {
          "$ref": "SoftwareConfig",
          "description": "The configuration settings for software inside the environment."
        },
        "nodeCount": {
          "type": "integer",
          "description": "The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "format": "int32"
        },
        "airflowByoidUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see [Access environments with workforce identity federation](/composer/docs/composer-2/access-environments-with-workforce-identity-federation))."
        },
        "maintenanceWindow": {
          "$ref": "MaintenanceWindow",
          "description": "Optional. The maintenance window is the period when Cloud Composer components may undergo maintenance. It is defined so that maintenance is not executed during peak hours or critical time periods. The system will not be under maintenance for every occurrence of this window, but when maintenance is planned, it will be scheduled during the window. The maintenance window period must encompass at least 12 hours per week. This may be split into multiple chunks, each with a size of at least 4 hours. If this value is omitted, Cloud Composer components may be subject to maintenance at any time."
        },
        "nodeConfig": {
          "$ref": "NodeConfig",
          "description": "The configuration used for the Kubernetes Engine cluster."
        },
        "gkeCluster": {
          "readOnly": true,
          "description": "Output only. The Kubernetes Engine cluster used to run this environment.",
          "type": "string"
        },
        "dagGcsPrefix": {
          "type": "string",
          "description": "Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \"/\"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix.",
          "readOnly": true
        },
        "resilienceMode": {
          "description": "Optional. Resilience mode of the Cloud Composer Environment. This field is supported for Cloud Composer environments in versions composer-2.2.0-airflow-*.*.* and newer.",
          "enum": [
            "RESILIENCE_MODE_UNSPECIFIED",
            "HIGH_RESILIENCE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default mode doesn't change environment parameters.",
            "Enabled High Resilience mode, including Cloud SQL HA."
          ]
        },
        "databaseConfig": {
          "$ref": "DatabaseConfig",
          "description": "Optional. The configuration settings for Cloud SQL instance used internally by Apache Airflow software."
        },
        "webServerNetworkAccessControl": {
          "$ref": "WebServerNetworkAccessControl",
          "description": "Optional. The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied."
        },
        "masterAuthorizedNetworksConfig": {
          "$ref": "MasterAuthorizedNetworksConfig",
          "description": "Optional. The configuration options for GKE cluster master authorized networks. By default master authorized networks feature is: - in case of private environment: enabled with no external networks allowlisted. - in case of public environment: disabled."
        },
        "privateEnvironmentConfig": {
          "$ref": "PrivateEnvironmentConfig",
          "description": "The configuration used for the Private IP Cloud Composer environment."
        },
        "webServerConfig": {
          "$ref": "WebServerConfig",
          "description": "Optional. The configuration settings for the Airflow web server App Engine instance. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*."
        },
        "environmentSize": {
          "enumDescriptions": [
            "The size of the environment is unspecified.",
            "The environment size is small.",
            "The environment size is medium.",
            "The environment size is large."
          ],
          "type": "string",
          "description": "Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.",
          "enum": [
            "ENVIRONMENT_SIZE_UNSPECIFIED",
            "ENVIRONMENT_SIZE_SMALL",
            "ENVIRONMENT_SIZE_MEDIUM",
            "ENVIRONMENT_SIZE_LARGE"
          ]
        }
      },
      "type": "object",
      "description": "Configuration information for an environment."
    },
    "ExitInfo": {
      "type": "object",
      "description": "Information about how a command ended.",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error message. Empty if there was no error."
        },
        "exitCode": {
          "description": "The exit code from the command execution.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "ExitInfo"
    },
    "WorkerResource": {
      "properties": {
        "memoryGb": {
          "format": "float",
          "type": "number",
          "description": "Optional. Memory (GB) request and limit for a single Airflow worker replica."
        },
        "storageGb": {
          "format": "float",
          "description": "Optional. Storage (GB) request and limit for a single Airflow worker replica.",
          "type": "number"
        },
        "maxCount": {
          "description": "Optional. Maximum number of workers for autoscaling.",
          "format": "int32",
          "type": "integer"
        },
        "cpu": {
          "format": "float",
          "type": "number",
          "description": "Optional. CPU request and limit for a single Airflow worker replica."
        },
        "minCount": {
          "format": "int32",
          "description": "Optional. Minimum number of workers for autoscaling.",
          "type": "integer"
        }
      },
      "id": "WorkerResource",
      "type": "object",
      "description": "Configuration for resources used by Airflow workers."
    },
    "NetworkingConfig": {
      "type": "object",
      "description": "Configuration options for networking connections in the Composer 2 environment.",
      "id": "NetworkingConfig",
      "properties": {
        "connectionType": {
          "description": "Optional. Indicates the user requested specifc connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment.",
          "type": "string",
          "enum": [
            "CONNECTION_TYPE_UNSPECIFIED",
            "VPC_PEERING",
            "PRIVATE_SERVICE_CONNECT"
          ],
          "enumDescriptions": [
            "No specific connection type was requested, so the environment uses the default value corresponding to the rest of its configuration.",
            "Requests the use of VPC peerings for connecting the Customer and Tenant projects.",
            "Requests the use of Private Service Connect for connecting the Customer and Tenant projects."
          ]
        }
      }
    },
    "TriggererResource": {
      "properties": {
        "count": {
          "type": "integer",
          "description": "Optional. The number of triggerers.",
          "format": "int32"
        },
        "cpu": {
          "format": "float",
          "type": "number",
          "description": "Optional. CPU request and limit for a single Airflow triggerer replica."
        },
        "memoryGb": {
          "description": "Optional. Memory (GB) request and limit for a single Airflow triggerer replica.",
          "type": "number",
          "format": "float"
        }
      },
      "type": "object",
      "description": "Configuration for resources used by Airflow triggerers.",
      "id": "TriggererResource"
    },
    "SchedulerResource": {
      "type": "object",
      "description": "Configuration for resources used by Airflow schedulers.",
      "id": "SchedulerResource",
      "properties": {
        "count": {
          "description": "Optional. The number of schedulers.",
          "format": "int32",
          "type": "integer"
        },
        "cpu": {
          "type": "number",
          "description": "Optional. CPU request and limit for a single Airflow scheduler replica.",
          "format": "float"
        },
        "memoryGb": {
          "type": "number",
          "description": "Optional. Memory (GB) request and limit for a single Airflow scheduler replica.",
          "format": "float"
        },
        "storageGb": {
          "description": "Optional. Storage (GB) request and limit for a single Airflow scheduler replica.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "ExecuteAirflowCommandRequest": {
      "id": "ExecuteAirflowCommandRequest",
      "properties": {
        "parameters": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Parameters for the Airflow command/subcommand as an array of arguments. It may contain positional arguments like `[\"my-dag-id\"]`, key-value parameters like `[\"--foo=bar\"]` or `[\"--foo\",\"bar\"]`, or other flags like `[\"-f\"]`."
        },
        "subcommand": {
          "type": "string",
          "description": "Airflow subcommand."
        },
        "command": {
          "description": "Airflow command.",
          "type": "string"
        }
      },
      "description": "Execute Airflow Command request.",
      "type": "object"
    },
    "ImageVersion": {
      "properties": {
        "creationDisabled": {
          "description": "Whether it is impossible to create an environment with the image version.",
          "type": "boolean"
        },
        "supportedPythonVersions": {
          "items": {
            "type": "string"
          },
          "description": "supported python versions",
          "type": "array"
        },
        "upgradeDisabled": {
          "type": "boolean",
          "description": "Whether it is impossible to upgrade an environment running with the image version."
        },
        "isDefault": {
          "type": "boolean",
          "description": "Whether this is the default ImageVersion used by Composer during environment creation if no input ImageVersion is specified."
        },
        "imageVersionId": {
          "type": "string",
          "description": "The string identifier of the ImageVersion, in the form: \"composer-x.y.z-airflow-a.b.c\""
        },
        "releaseDate": {
          "$ref": "Date",
          "description": "The date of the version release."
        }
      },
      "description": "Image Version information",
      "id": "ImageVersion",
      "type": "object"
    },
    "MasterAuthorizedNetworksConfig": {
      "type": "object",
      "id": "MasterAuthorizedNetworksConfig",
      "description": "Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.",
      "properties": {
        "cidrBlocks": {
          "type": "array",
          "description": "Up to 50 external networks that could access Kubernetes master through HTTPS.",
          "items": {
            "$ref": "CidrBlock"
          }
        },
        "enabled": {
          "description": "Whether or not master authorized networks feature is enabled.",
          "type": "boolean"
        }
      }
    },
    "WebServerResource": {
      "id": "WebServerResource",
      "type": "object",
      "description": "Configuration for resources used by Airflow web server.",
      "properties": {
        "storageGb": {
          "type": "number",
          "description": "Optional. Storage (GB) request and limit for Airflow web server.",
          "format": "float"
        },
        "cpu": {
          "type": "number",
          "description": "Optional. CPU request and limit for Airflow web server.",
          "format": "float"
        },
        "memoryGb": {
          "description": "Optional. Memory (GB) request and limit for Airflow web server.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "PollAirflowCommandResponse": {
      "id": "PollAirflowCommandResponse",
      "description": "Response to PollAirflowCommandRequest.",
      "type": "object",
      "properties": {
        "output": {
          "items": {
            "$ref": "Line"
          },
          "description": "Output from the command execution. It may not contain the full output and the caller may need to poll for more lines.",
          "type": "array"
        },
        "outputEnd": {
          "description": "Whether the command execution has finished and there is no more output.",
          "type": "boolean"
        },
        "exitInfo": {
          "description": "The result exit status of the command.",
          "$ref": "ExitInfo"
        }
      }
    },
    "Line": {
      "description": "Contains information about a single line from logs.",
      "id": "Line",
      "type": "object",
      "properties": {
        "content": {
          "description": "Text content of the log line.",
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Number of the line."
        }
      }
    },
    "DatabaseConfig": {
      "id": "DatabaseConfig",
      "type": "object",
      "description": "The configuration of Cloud SQL instance that is used by the Apache Airflow software.",
      "properties": {
        "machineType": {
          "description": "Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
          "type": "string"
        }
      }
    },
    "ListImageVersionsResponse": {
      "id": "ListImageVersionsResponse",
      "description": "The ImageVersions in a project and location.",
      "properties": {
        "imageVersions": {
          "type": "array",
          "description": "The list of supported ImageVersions in a location.",
          "items": {
            "$ref": "ImageVersion"
          }
        },
        "nextPageToken": {
          "description": "The page token used to query for the next page if one exists.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PollAirflowCommandRequest": {
      "properties": {
        "nextLineNumber": {
          "format": "int32",
          "description": "Line number from which new logs should be fetched.",
          "type": "integer"
        },
        "pod": {
          "type": "string",
          "description": "The name of the pod where the command is executed."
        },
        "executionId": {
          "description": "The unique ID of the command execution.",
          "type": "string"
        },
        "podNamespace": {
          "type": "string",
          "description": "The namespace of the pod where the command is executed."
        }
      },
      "description": "Poll Airflow Command request.",
      "id": "PollAirflowCommandRequest",
      "type": "object"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "baseUrl": "https://composer.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "imageVersions": {
              "methods": {
                "list": {
                  "path": "v1beta1/{+parent}/imageVersions",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of image_versions to return.",
                      "location": "query"
                    },
                    "includePastReleases": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Whether or not image versions from old releases should be included."
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "List ImageVersions in the given project and location, in the form: \"projects/{projectId}/locations/{locationId}\"",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListImageVersionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List ImageVersions for provided location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "composer.projects.locations.imageVersions.list",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/imageVersions"
                }
              }
            },
            "environments": {
              "methods": {
                "create": {
                  "description": "Create a new environment.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "The parent must be of the form \"projects/{projectId}/locations/{locationId}\".",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "Environment"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+parent}/environments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "composer.projects.locations.environments.create",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "fetchDatabaseProperties": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:fetchDatabaseProperties",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Fetches database properties.",
                  "parameters": {
                    "environment": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of the environment, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1beta1/{+environment}:fetchDatabaseProperties",
                  "parameterOrder": [
                    "environment"
                  ],
                  "id": "composer.projects.locations.environments.fetchDatabaseProperties",
                  "response": {
                    "$ref": "FetchDatabasePropertiesResponse"
                  }
                },
                "restartWebServer": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "composer.projects.locations.environments.restartWebServer",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:restartWebServer",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}:restartWebServer",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the environment to restart the web server for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "RestartWebServerRequest"
                  },
                  "description": "Restart Airflow web server."
                },
                "checkUpgrade": {
                  "parameterOrder": [
                    "environment"
                  ],
                  "description": "Check if an upgrade operation on the environment will succeed. In case of problems detailed info can be found in the returned Operation.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "composer.projects.locations.environments.checkUpgrade",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CheckUpgradeRequest"
                  },
                  "path": "v1beta1/{+environment}:checkUpgrade",
                  "parameters": {
                    "environment": {
                      "description": "The resource name of the environment to check upgrade for, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:checkUpgrade"
                },
                "patch": {
                  "id": "composer.projects.locations.environments.patch",
                  "path": "v1beta1/{+name}",
                  "httpMethod": "PATCH",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}",
                  "parameters": {
                    "updateMask": {
                      "description": "Required. A comma-separated list of paths, relative to `Environment`, of fields to update. For example, to set the version of scikit-learn to install in the environment to 0.19.0 and to remove an existing installation of argparse, the `updateMask` parameter would include the following two `paths` values: \"config.softwareConfig.pypiPackages.scikit-learn\" and \"config.softwareConfig.pypiPackages.argparse\". The included patch environment would specify the scikit-learn version as follows: { \"config\":{ \"softwareConfig\":{ \"pypiPackages\":{ \"scikit-learn\":\"==0.19.0\" } } } } Note that in the above example, any existing PyPI packages other than scikit-learn and argparse will be unaffected. Only one update type may be included in a single request's `updateMask`. For example, one cannot update both the PyPI packages and labels in the same request. However, it is possible to update multiple members of a map field simultaneously in the same request. For example, to set the labels \"label1\" and \"label2\" while clearing \"label3\" (assuming it already exists), one can provide the paths \"labels.label1\", \"labels.label2\", and \"labels.label3\" and populate the patch environment as follows: { \"labels\":{ \"label1\":\"new-label1-value\" \"label2\":\"new-label2-value\" } } Note that in the above example, any existing labels that are not included in the `updateMask` will be unaffected. It is also possible to replace an entire map field by providing the map field's path in the `updateMask`. The new value of the field will be that which is provided in the patch environment. For example, to delete all pre-existing user-specified PyPI packages and install botocore at version 1.7.14, the `updateMask` would contain the path \"config.softwareConfig.pypiPackages\", and the patch environment would be the following: { \"config\":{ \"softwareConfig\":{ \"pypiPackages\":{ \"botocore\":\"==1.7.14\" } } } } **Note:** Only the following fields can be updated: * `config.softwareConfig.pypiPackages` * Replace all custom custom PyPI packages. If a replacement package map is not included in `environment`, all custom PyPI packages are cleared. It is an error to provide both this mask and a mask specifying an individual package. * `config.softwareConfig.pypiPackages.`packagename * Update the custom PyPI package *packagename*, preserving other packages. To delete the package, include it in `updateMask`, and omit the mapping for it in `environment.config.softwareConfig.pypiPackages`. It is an error to provide both a mask of this form and the `config.softwareConfig.pypiPackages` mask. * `labels` * Replace all environment labels. If a replacement labels map is not included in `environment`, all labels are cleared. It is an error to provide both this mask and a mask specifying one or more individual labels. * `labels.`labelName * Set the label named *labelName*, while preserving other labels. To delete the label, include it in `updateMask` and omit its mapping in `environment.labels`. It is an error to provide both a mask of this form and the `labels` mask. * `config.nodeCount` * Horizontally scale the number of nodes in the environment. An integer greater than or equal to 3 must be provided in the `config.nodeCount` field. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. * `config.webServerNetworkAccessControl` * Replace the environment's current WebServerNetworkAccessControl. * `config.softwareConfig.airflowConfigOverrides` * Replace all Apache Airflow config overrides. If a replacement config overrides map is not included in `environment`, all config overrides are cleared. It is an error to provide both this mask and a mask specifying one or more individual config overrides. * `config.softwareConfig.airflowConfigOverrides.`section-name * Override the Apache Airflow config property *name* in the section named *section*, preserving other properties. To delete the property override, include it in `updateMask` and omit its mapping in `environment.config.softwareConfig.airflowConfigOverrides`. It is an error to provide both a mask of this form and the `config.softwareConfig.airflowConfigOverrides` mask. * `config.softwareConfig.envVariables` * Replace all environment variables. If a replacement environment variable map is not included in `environment`, all custom environment variables are cleared. * `config.softwareConfig.imageVersion` * Upgrade the version of the environment in-place. Refer to `SoftwareConfig.image_version` for information on how to format the new image version. Additionally, the new image version cannot effect a version downgrade, and must match the current image version's Composer and Airflow major versions. Consult the [Cloud Composer version list](/composer/docs/concepts/versioning/composer-versions) for valid values. * `config.softwareConfig.schedulerCount` * Horizontally scale the number of schedulers in Airflow. A positive integer not greater than the number of nodes must be provided in the `config.softwareConfig.schedulerCount` field. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-2.*.*. * `config.softwareConfig.cloudDataLineageIntegration` * Configuration for Cloud Data Lineage integration. * `config.databaseConfig.machineType` * Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. * `config.webServerConfig.machineType` * Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*. * `config.maintenanceWindow` * Maintenance window during which Cloud Composer components may be under maintenance. * `config.workloadsConfig` * The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer. * `config.environmentSize` * The size of the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "The relative resource name of the environment to update, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "description": "Update an environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Environment"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "executeAirflowCommand": {
                  "path": "v1beta1/{+environment}:executeAirflowCommand",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:executeAirflowCommand",
                  "id": "composer.projects.locations.environments.executeAirflowCommand",
                  "request": {
                    "$ref": "ExecuteAirflowCommandRequest"
                  },
                  "parameterOrder": [
                    "environment"
                  ],
                  "response": {
                    "$ref": "ExecuteAirflowCommandResponse"
                  },
                  "parameters": {
                    "environment": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "description": "The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\".",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Executes Airflow CLI command.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "composer.projects.locations.environments.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "description": "Get an existing environment.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Environment"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The resource name of the environment to get, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$"
                    }
                  }
                },
                "loadSnapshot": {
                  "description": "Loads a snapshot of a Cloud Composer environment. As a result of this operation, a snapshot of environment's specified in LoadSnapshotRequest is loaded into the environment.",
                  "parameterOrder": [
                    "environment"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+environment}:loadSnapshot",
                  "id": "composer.projects.locations.environments.loadSnapshot",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "environment": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The resource name of the target environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:loadSnapshot",
                  "request": {
                    "$ref": "LoadSnapshotRequest"
                  }
                },
                "pollAirflowCommand": {
                  "description": "Polls Airflow CLI command execution and fetches logs.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:pollAirflowCommand",
                  "id": "composer.projects.locations.environments.pollAirflowCommand",
                  "path": "v1beta1/{+environment}:pollAirflowCommand",
                  "request": {
                    "$ref": "PollAirflowCommandRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "environment"
                  ],
                  "response": {
                    "$ref": "PollAirflowCommandResponse"
                  },
                  "parameters": {
                    "environment": {
                      "description": "The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "path": "v1beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}",
                  "description": "Delete an environment.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The environment to delete, in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "id": "composer.projects.locations.environments.delete"
                },
                "stopAirflowCommand": {
                  "id": "composer.projects.locations.environments.stopAirflowCommand",
                  "parameterOrder": [
                    "environment"
                  ],
                  "description": "Stops Airflow CLI command execution.",
                  "response": {
                    "$ref": "StopAirflowCommandResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "environment": {
                      "required": true,
                      "location": "path",
                      "description": "The resource name of the environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\".",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:stopAirflowCommand",
                  "path": "v1beta1/{+environment}:stopAirflowCommand",
                  "request": {
                    "$ref": "StopAirflowCommandRequest"
                  },
                  "httpMethod": "POST"
                },
                "databaseFailover": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "environment": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Target environment: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "environment"
                  ],
                  "id": "composer.projects.locations.environments.databaseFailover",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:databaseFailover",
                  "description": "Triggers database failover (only for highly resilient environments).",
                  "httpMethod": "POST",
                  "path": "v1beta1/{+environment}:databaseFailover",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "DatabaseFailoverRequest"
                  }
                },
                "saveSnapshot": {
                  "request": {
                    "$ref": "SaveSnapshotRequest"
                  },
                  "description": "Creates a snapshots of a Cloud Composer environment. As a result of this operation, snapshot of environment's state is stored in a location specified in the SaveSnapshotRequest.",
                  "id": "composer.projects.locations.environments.saveSnapshot",
                  "path": "v1beta1/{+environment}:saveSnapshot",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments/{environmentsId}:saveSnapshot",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "environment": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "The resource name of the source environment in the form: \"projects/{projectId}/locations/{locationId}/environments/{environmentId}\""
                    }
                  },
                  "parameterOrder": [
                    "environment"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "path": "v1beta1/{+parent}/environments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListEnvironmentsResponse"
                  },
                  "id": "composer.projects.locations.environments.list",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of environments to return.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "List environments in the given project and location, in the form: \"projects/{projectId}/locations/{locationId}\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "List environments.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/environments"
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    }
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "composer.projects.locations.operations.list",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}/operations",
                  "httpMethod": "GET"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "composer.projects.locations.operations.get",
                  "path": "v1beta1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "composer.projects.locations.operations.delete",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}"
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "revision": "20230619",
  "description": "Manages Apache Airflow environments on Google Cloud Platform.",
  "mtlsRootUrl": "https://composer.mtls.googleapis.com/",
  "id": "composer:v1beta1",
  "servicePath": "",
  "parameters": {
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Composer API",
  "name": "composer",
  "batchPath": "batch",
  "documentationLink": "https://cloud.google.com/composer/",
  "kind": "discovery#restDescription",
  "version": "v1beta1"
}

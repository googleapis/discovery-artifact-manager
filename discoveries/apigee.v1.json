{
  "resources": {
    "projects": {
      "methods": {
        "provisionOrganization": {
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [
            "project"
          ],
          "flatPath": "v1/projects/{projectsId}:provisionOrganization",
          "id": "apigee.projects.provisionOrganization",
          "path": "v1/{+project}:provisionOrganization",
          "request": {
            "$ref": "GoogleCloudApigeeV1ProvisionOrganizationRequest"
          },
          "parameters": {
            "project": {
              "required": true,
              "description": "Required. Name of the GCP project with which to associate the Apigee organization.",
              "type": "string",
              "location": "path",
              "pattern": "^projects/[^/]+$"
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Provisions a new Apigee organization with a functioning runtime. This is the standard way to create trial organizations for a free Apigee trial."
        }
      }
    },
    "organizations": {
      "resources": {
        "optimizedHostStats": {
          "methods": {
            "get": {
              "parameters": {
                "realtime": {
                  "description": "No longer used by Apigee. Supported for backwards compatibility.",
                  "type": "boolean",
                  "location": "query"
                },
                "envgroupHostname": {
                  "description": "Required. Hostname for which the interactive query will be executed.",
                  "location": "query",
                  "type": "string"
                },
                "sort": {
                  "description": "Flag that specifies whether the sort order should be ascending or descending. Valid values include `DESC` and `ASC`.",
                  "type": "string",
                  "location": "query"
                },
                "topk": {
                  "description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`.",
                  "type": "string",
                  "location": "query"
                },
                "offset": {
                  "type": "string",
                  "description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`.",
                  "location": "query"
                },
                "name": {
                  "location": "path",
                  "description": "Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{organization_id}/optimizedHostStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of dimensions should be a comma-separated list as shown below: `organizations/{org}/optimizedHostStats/apiproxy,request_verb`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/optimizedHostStats/.*$"
                },
                "sortby": {
                  "type": "string",
                  "location": "query",
                  "description": "Comma-separated list of columns used to sort the final result."
                },
                "timeUnit": {
                  "location": "query",
                  "description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`.",
                  "type": "string"
                },
                "timeRange": {
                  "type": "string",
                  "description": "Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`.",
                  "location": "query"
                },
                "tzo": {
                  "description": "Timezone offset value.",
                  "type": "string",
                  "location": "query"
                },
                "limit": {
                  "description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400.",
                  "type": "string",
                  "location": "query"
                },
                "tsAscending": {
                  "description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`.",
                  "location": "query",
                  "type": "boolean"
                },
                "filter": {
                  "type": "string",
                  "description": "Filter that enables you to drill-down on specific dimension values.",
                  "location": "query"
                },
                "select": {
                  "description": "Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`",
                  "location": "query",
                  "type": "string"
                },
                "accuracy": {
                  "location": "query",
                  "description": "No longer used by Apigee. Supported for backwards compatibility.",
                  "type": "string"
                }
              },
              "id": "apigee.organizations.optimizedHostStats.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Similar to GetHostStats except that the response is less verbose.",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/optimizedHostStats/{optimizedHostStatsId}",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1OptimizedStats"
              }
            }
          }
        },
        "hostStats": {
          "methods": {
            "get": {
              "path": "v1/{+name}",
              "flatPath": "v1/organizations/{organizationsId}/hostStats/{hostStatsId}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Stats"
              },
              "description": "Retrieve metrics grouped by dimensions in host level. The types of metrics you can retrieve include traffic, message counts, API call latency, response size, and cache hits and counts. Dimensions let you view metrics in meaningful groups. You can optionally pass dimensions as path parameters to the `stats` API. If dimensions are not specified, the metrics are computed on the entire set of data for the given time range.",
              "parameters": {
                "topk": {
                  "description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`.",
                  "location": "query",
                  "type": "string"
                },
                "timeUnit": {
                  "type": "string",
                  "location": "query",
                  "description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`."
                },
                "tsAscending": {
                  "description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`.",
                  "type": "boolean",
                  "location": "query"
                },
                "sortby": {
                  "description": "Comma-separated list of columns to sort the final result.",
                  "location": "query",
                  "type": "string"
                },
                "tzo": {
                  "location": "query",
                  "type": "string",
                  "description": "Timezone offset value."
                },
                "accuracy": {
                  "description": "No longer used by Apigee. Supported for backwards compatibility.",
                  "type": "string",
                  "location": "query"
                },
                "timeRange": {
                  "location": "query",
                  "description": "Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`",
                  "type": "string"
                },
                "limit": {
                  "type": "string",
                  "location": "query",
                  "description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400."
                },
                "filter": {
                  "description": "Flag that enables drill-down on specific dimension values.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of dimensions should be a comma-separated list as shown below `organizations/{org}/hostStats/apiproxy,request_verb`",
                  "pattern": "^organizations/[^/]+/hostStats/.*$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "envgroupHostname": {
                  "description": "Required. Hostname for which the interactive query will be executed.",
                  "location": "query",
                  "type": "string"
                },
                "realtime": {
                  "location": "query",
                  "type": "boolean",
                  "description": "No longer used by Apigee. Supported for backwards compatibility."
                },
                "sort": {
                  "type": "string",
                  "location": "query",
                  "description": "Flag that specifies if the sort order should be ascending or descending. Valid values are `DESC` and `ASC`."
                },
                "select": {
                  "location": "query",
                  "description": "Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`",
                  "type": "string"
                },
                "offset": {
                  "location": "query",
                  "description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`.",
                  "type": "string"
                }
              },
              "id": "apigee.organizations.hostStats.get"
            }
          }
        },
        "deployments": {
          "methods": {
            "list": {
              "id": "apigee.organizations.deployments.list",
              "description": "Lists all deployments of API proxies or shared flows.",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/deployments",
              "parameters": {
                "sharedFlows": {
                  "description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`.",
                  "location": "query",
                  "type": "boolean"
                },
                "parent": {
                  "location": "path",
                  "description": "Required. Name of the organization for which to return deployment information in the following format: `organizations/{org}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/deployments",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "environments": {
          "methods": {
            "setIamPolicy": {
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "parameters": {
                "resource": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleIamV1SetIamPolicyRequest"
              },
              "description": "Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.setIamPolicy` permission to call this API.",
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "path": "v1/{+resource}:setIamPolicy",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:setIamPolicy",
              "id": "apigee.organizations.environments.setIamPolicy"
            },
            "updateDebugmask": {
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/debugmask",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Field debug mask to support partial updates.",
                  "format": "google-fieldmask",
                  "location": "query"
                },
                "replaceRepeatedFields": {
                  "description": "Boolean flag that specifies whether to replace existing values in the debug mask when doing an update. Set to true to replace existing values. The default behavior is to append the values (false).",
                  "location": "query",
                  "type": "boolean"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Name of the debug mask.",
                  "pattern": "^organizations/[^/]+/environments/[^/]+/debugmask$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "id": "apigee.organizations.environments.updateDebugmask",
              "description": "Updates the debug mask singleton resource for an environment.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "updateTraceConfig": {
              "parameterOrder": [
                "name"
              ],
              "description": "Updates the trace configurations in an environment. Note that the repeated fields have replace semantics when included in the field mask and that they will be overwritten by the value of the fields in the request body.",
              "request": {
                "$ref": "GoogleCloudApigeeV1TraceConfig"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.environments.updateTraceConfig",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/traceConfig",
              "response": {
                "$ref": "GoogleCloudApigeeV1TraceConfig"
              },
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+/traceConfig$",
                  "description": "Required. Name of the trace configuration. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\".",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "List of fields to be updated.",
                  "type": "string",
                  "location": "query"
                }
              },
              "httpMethod": "PATCH",
              "path": "v1/{+name}"
            },
            "getDebugmask": {
              "response": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "path": "v1/{+name}",
              "id": "apigee.organizations.environments.getDebugmask",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Required. Name of the debug mask. Use the following structure in your request: `organizations/{org}/environments/{env}/debugmask`.",
                  "pattern": "^organizations/[^/]+/environments/[^/]+/debugmask$",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/debugmask",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the debug mask singleton resource for an environment."
            },
            "get": {
              "description": "Gets environment details.",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "apigee.organizations.environments.get",
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}"
            },
            "getIamPolicy": {
              "httpMethod": "GET",
              "path": "v1/{+resource}:getIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "parameters": {
                "resource": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                  "type": "string"
                },
                "options.requestedPolicyVersion": {
                  "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "id": "apigee.organizations.environments.getIamPolicy",
              "description": "Gets the IAM policy on an environment. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy` permission to call this API.",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:getIamPolicy"
            },
            "update": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "PUT",
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "description": "Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for updating an existing environment.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "id": "apigee.organizations.environments.update",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "type": "string"
                }
              }
            },
            "getTraceConfig": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "description": "Get distributed trace configuration in an environment.",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+/traceConfig$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the trace configuration. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/traceConfig",
              "id": "apigee.organizations.environments.getTraceConfig",
              "response": {
                "$ref": "GoogleCloudApigeeV1TraceConfig"
              },
              "httpMethod": "GET"
            },
            "create": {
              "httpMethod": "POST",
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "description": "Creates an environment in an organization.",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Optional. Name of the environment. Alternatively, the name may be specified in the request body in the name field.",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "description": "Required. Name of the organization in which the environment will be created. Use the following structure in your request: `organizations/{org}`",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/environments",
              "id": "apigee.organizations.environments.create"
            },
            "getDeployedConfig": {
              "httpMethod": "GET",
              "description": "Gets the deployed configuration for an environment.",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/deployedConfig",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+/deployedConfig$",
                  "description": "Required. Name of the environment deployed configuration resource. Use the following structure in your request: `organizations/{org}/environments/{env}/deployedConfig`"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.environments.getDeployedConfig",
              "response": {
                "$ref": "GoogleCloudApigeeV1EnvironmentConfig"
              }
            },
            "delete": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.environments.delete",
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Deletes an environment from an organization.",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "path": "v1/{+name}",
              "httpMethod": "DELETE"
            },
            "updateEnvironment": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for updating an existing environment.",
              "id": "apigee.organizations.environments.updateEnvironment",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "path": "v1/{+name}",
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              }
            },
            "testIamPermissions": {
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "GoogleIamV1TestIamPermissionsResponse"
              },
              "id": "apigee.organizations.environments.testIamPermissions",
              "request": {
                "$ref": "GoogleIamV1TestIamPermissionsRequest"
              },
              "httpMethod": "POST",
              "description": "Tests the permissions of a user on an environment, and returns a subset of permissions that the user has on the environment. If the environment does not exist, an empty permission set is returned (a NOT_FOUND error is not returned).",
              "parameters": {
                "resource": {
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                }
              },
              "path": "v1/{+resource}:testIamPermissions"
            },
            "unsubscribe": {
              "request": {
                "$ref": "GoogleCloudApigeeV1Subscription"
              },
              "description": "Deletes a subscription for the environment's Pub/Sub topic.",
              "httpMethod": "POST",
              "path": "v1/{+parent}:unsubscribe",
              "id": "apigee.organizations.environments.unsubscribe",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:unsubscribe",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
                }
              }
            },
            "subscribe": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name for this subscription. The \"name\" and \"push_config\" must *not* be specified.",
              "httpMethod": "POST",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:subscribe",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}:subscribe",
              "response": {
                "$ref": "GoogleCloudApigeeV1Subscription"
              },
              "id": "apigee.organizations.environments.subscribe"
            }
          },
          "resources": {
            "caches": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.environments.caches.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/caches/{cachesId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Cache resource name of the form: `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$"
                    }
                  },
                  "description": "Deletes a cache.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "analytics": {
              "resources": {
                "admin": {
                  "methods": {
                    "getSchemav2": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/admin/schemav2",
                      "description": "Gets a list of metrics and dimensions that can be used to create analytics queries and reports. Each schema element contains the name of the field, its associated type, and a flag indicating whether it is a standard or custom field.",
                      "id": "apigee.organizations.environments.analytics.admin.getSchemav2",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Schema"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$",
                          "description": "Required. Path to the schema. Use the following structure in your request: `organizations/{org}/environments/{env}/analytics/admin/schemav2`.",
                          "type": "string",
                          "required": true
                        },
                        "type": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Name of the dataset for which you want to retrieve the schema. For example: `fact` or `agg_cus1`"
                        },
                        "disableCache": {
                          "description": "Flag that specifies whether the schema is be read from the database or cache. Set to `true` to read the schema from the database. Defaults to cache.",
                          "type": "boolean",
                          "location": "query"
                        }
                      }
                    }
                  }
                },
                "exports": {
                  "methods": {
                    "create": {
                      "parameters": {
                        "parent": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+$",
                          "description": "Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Submit a data export job to be processed in the background. If the request is successful, the API returns a 201 status, a URI that can be used to retrieve the status of the export job, and the `state` value of \"enqueued\".",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Export"
                      },
                      "request": {
                        "$ref": "GoogleCloudApigeeV1ExportRequest"
                      },
                      "id": "apigee.organizations.environments.analytics.exports.create",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/exports",
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/analytics/exports"
                    },
                    "list": {
                      "description": "Lists the details and status of all analytics export jobs belonging to the parent organization and environment.",
                      "id": "apigee.organizations.environments.analytics.exports.list",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListExportsResponse"
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/analytics/exports",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/exports",
                      "parameters": {
                        "parent": {
                          "description": "Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`.",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "httpMethod": "GET",
                      "id": "apigee.organizations.environments.analytics.exports.get",
                      "description": "Gets the details and status of an analytics export job. If the export job is still in progress, its `state` is set to \"running\". After the export job has completed successfully, its `state` is set to \"completed\". If the export job fails, its `state` is set to `failed`.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Resource name of the export to get.",
                          "location": "path",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/analytics/exports/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Export"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/exports/{exportsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            },
            "references": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.references.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the Reference to delete. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`.",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$"
                    }
                  },
                  "description": "Deletes a Reference from an environment. Returns the deleted Reference resource.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  }
                },
                "create": {
                  "description": "Creates a Reference in the specified environment.",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references",
                  "id": "apigee.organizations.environments.references.create",
                  "path": "v1/{+parent}/references",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent environment name under which the Reference will be created. Must be of the form `organizations/{org}/environments/{env}`.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST"
                },
                "update": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the Reference to update. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.environments.references.update",
                  "description": "Updates an existing Reference. Note that this operation has PUT semantics; it will replace the entirety of the existing Reference with the resource in the request body.",
                  "httpMethod": "PUT"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets a Reference resource.",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "id": "apigee.organizations.environments.references.get",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the Reference to get. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`.",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "flowhooks": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$"
                    }
                  },
                  "description": "Returns the name of the shared flow attached to the specified flow hook. If there's no shared flow attached to the flow hook, the API does not return an error; it simply does not return a name in the response.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.flowhooks.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}"
                },
                "detachSharedFlowFromFlowHook": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the flow hook to detach in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}",
                  "description": "Detaches a shared flow from a flow hook.",
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.environments.flowhooks.detachSharedFlowFromFlowHook",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "attachSharedFlowToFlowHook": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the flow hook to which the shared flow should be attached in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}",
                  "description": "Attaches a shared flow to a flow hook.",
                  "id": "apigee.organizations.environments.flowhooks.attachSharedFlowToFlowHook",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "httpMethod": "PUT"
                }
              }
            },
            "traceConfig": {
              "resources": {
                "overrides": {
                  "methods": {
                    "patch": {
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\"."
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "List of fields to be updated."
                        }
                      },
                      "id": "apigee.organizations.environments.traceConfig.overrides.patch",
                      "description": "Updates a distributed trace configuration override. Note that the repeated fields have replace semantics when included in the field mask and that they will be overwritten by the value of the fields in the request body.",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/traceConfig/overrides/{overridesId}",
                      "path": "v1/{+name}",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1TraceConfigOverride"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1TraceConfigOverride"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/traceConfig/overrides",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "A page token, returned from a previous `ListTraceConfigOverrides` call. Token value that can be used to retrieve the subsequent page. When paginating, all other parameters provided to `ListTraceConfigOverrides` must match those specified in the call to obtain the page token.",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Maximum number of trace configuration overrides to return. If not specified, the maximum number returned is 25. The maximum number cannot exceed 100."
                        },
                        "parent": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/traceConfig$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. Parent resource of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
                        }
                      },
                      "description": "Lists all of the distributed trace configuration overrides in an environment.",
                      "path": "v1/{+parent}/overrides",
                      "id": "apigee.organizations.environments.traceConfig.overrides.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListTraceConfigOverridesResponse"
                      }
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\".",
                          "location": "path",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/traceConfig/overrides/{overridesId}",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1TraceConfigOverride"
                      },
                      "description": "Gets a trace configuration override.",
                      "id": "apigee.organizations.environments.traceConfig.overrides.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/traceConfig/overrides",
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent resource of the trace configuration override. Use the following structure in your request. \"organizations/*/environments/*/traceConfig\".",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/traceConfig$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v1/{+parent}/overrides",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1TraceConfigOverride"
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1TraceConfigOverride"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.traceConfig.overrides.create",
                      "description": "Creates a trace configuration override. The response contains a system-generated UUID, that can be used to view, update, or delete the configuration override. Use the List API to view the existing trace configuration overrides."
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "description": "Deletes a distributed trace configuration override.",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/traceConfig/overrides/{overridesId}",
                      "id": "apigee.organizations.environments.traceConfig.overrides.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\".",
                          "required": true,
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "queries": {
              "methods": {
                "getResult": {
                  "description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`",
                  "id": "apigee.organizations.environments.queries.getResult",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$",
                      "description": "Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}/result`."
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}/result",
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "getResulturl": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse"
                  },
                  "description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is sent to the client as a list of urls to JSON files.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigee.organizations.environments.queries.getResulturl",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}/resulturl",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resulturl$"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.queries.get",
                  "description": "Get query status If the query is still in progress, the `state` is set to \"running\" After the query has completed successfully, `state` is set to \"completed\"",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1AsyncQuery"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$",
                      "description": "Required. Name of the asynchronous query to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}`.",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "path": "v1/{+parent}/queries",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries",
                  "description": "Return a list of Asynchronous Queries",
                  "httpMethod": "GET",
                  "parameters": {
                    "status": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter response list by asynchronous query status."
                    },
                    "submittedBy": {
                      "location": "query",
                      "description": "Filter response list by user who submitted queries.",
                      "type": "string"
                    },
                    "to": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'."
                    },
                    "dataset": {
                      "description": "Filter response list by dataset. Example: `api`, `mint`",
                      "type": "string",
                      "location": "query"
                    },
                    "from": {
                      "description": "Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.",
                      "type": "string",
                      "location": "query"
                    },
                    "inclQueriesWithoutReport": {
                      "description": "Flag to include asynchronous queries that don't have a report denifition.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
                    }
                  },
                  "id": "apigee.organizations.environments.queries.list",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListAsyncQueriesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Query"
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1AsyncQuery"
                  },
                  "id": "apigee.organizations.environments.queries.create",
                  "description": "Submit a query to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded.",
                  "path": "v1/{+parent}/queries",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "archiveDeployments": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListArchiveDeploymentsResponse"
                  },
                  "id": "apigee.organizations.environments.archiveDeployments.list",
                  "description": "Lists the ArchiveDeployments in the specified Environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An optional query used to return a subset of Archive Deployments using the semantics defined in https://google.aip.dev/160."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. Page token, returned from a previous ListArchiveDeployments call, that you can use to retrieve the next page.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. Maximum number of Archive Deployments to return. If unspecified, at most 25 deployments will be returned.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the Environment for which to list Archive Deployments in the format: `organizations/{org}/environments/{env}`.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/archiveDeployments",
                  "path": "v1/{+parent}/archiveDeployments",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/archiveDeployments/{archiveDeploymentsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the specified ArchiveDeployment.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ArchiveDeployment"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$"
                    }
                  },
                  "id": "apigee.organizations.environments.archiveDeployments.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "generateDownloadUrl": {
                  "description": "Generates a signed URL for downloading the original zip file used to create an Archive Deployment. The URL is only valid for a limited period and should be used within minutes after generation. Each call returns a new upload URL.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1GenerateDownloadUrlResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/archiveDeployments/{archiveDeploymentsId}:generateDownloadUrl",
                  "id": "apigee.organizations.environments.archiveDeployments.generateDownloadUrl",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Archive Deployment you want to download.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:generateDownloadUrl",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1GenerateDownloadUrlRequest"
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ArchiveDeployment"
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ArchiveDeployment"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "id": "apigee.organizations.environments.archiveDeployments.patch",
                  "description": "Updates an existing ArchiveDeployment. Labels can modified but most of the other fields are not modifiable.",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/archiveDeployments/{archiveDeploymentsId}",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. The list of fields to be updated.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$",
                      "description": "Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Creates a new ArchiveDeployment.",
                  "path": "v1/{+parent}/archiveDeployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ArchiveDeployment"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/archiveDeployments",
                  "id": "apigee.organizations.environments.archiveDeployments.create",
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The Environment this Archive Deployment will be created in.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes an archive deployment.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "id": "apigee.organizations.environments.archiveDeployments.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/archiveDeployments/{archiveDeploymentsId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "generateUploadUrl": {
                  "id": "apigee.organizations.environments.archiveDeployments.generateUploadUrl",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "description": "Required. The organization and environment to upload to."
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/archiveDeployments:generateUploadUrl",
                  "description": "Generates a signed URL for uploading an Archive zip file to Google Cloud Storage. Once the upload is complete, the signed URL should be passed to CreateArchiveDeployment. When uploading to the generated signed URL, please follow these restrictions: * Source file type should be a zip file. * Source file size should not exceed 1GB limit. * No credentials should be attached - the signed URLs provide access to the target bucket using internal service identity; if credentials were attached, the identity from the credentials would be used, but that identity does not have permissions to upload files to the URL. When making a HTTP PUT request, these two headers need to be specified: * `content-type: application/zip` * `x-goog-content-length-range: 0,1073741824` And this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/archiveDeployments:generateUploadUrl",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1GenerateUploadUrlResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1GenerateUploadUrlRequest"
                  }
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "parameters": {
                    "sharedFlows": {
                      "description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Name of the environment for which to return deployment information in the following format: `organizations/{org}/environments/{env}`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/deployments",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "path": "v1/{+parent}/deployments",
                  "description": "Lists all deployments of API proxies or shared flows in an environment.",
                  "httpMethod": "GET",
                  "id": "apigee.organizations.environments.deployments.list"
                }
              }
            },
            "keystores": {
              "methods": {
                "delete": {
                  "description": "Deletes a keystore or truststore.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}",
                  "id": "apigee.organizations.environments.keystores.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "parameters": {
                    "name": {
                      "description": "Optional. Name of the keystore. Overrides the value in Keystore.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`"
                    }
                  },
                  "path": "v1/{+parent}/keystores",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA.",
                  "id": "apigee.organizations.environments.keystores.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "description": "Gets a keystore or truststore.",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "id": "apigee.organizations.environments.keystores.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$",
                      "description": "Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "GET"
                }
              },
              "resources": {
                "aliases": {
                  "methods": {
                    "update": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "description": "Updates the certificate in an alias.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$"
                        },
                        "ignoreNewlineValidation": {
                          "description": "Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "ignoreExpiryValidation": {
                          "type": "boolean",
                          "description": "Required. Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed.",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "apigee.organizations.environments.keystores.aliases.update",
                      "request": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "PUT"
                    },
                    "create": {
                      "id": "apigee.organizations.environments.keystores.aliases.create",
                      "path": "v1/{+parent}/aliases",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "ignoreNewlineValidation": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`."
                        },
                        "parent": {
                          "description": "Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$",
                          "type": "string"
                        },
                        "ignoreExpiryValidation": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed."
                        },
                        "format": {
                          "location": "query",
                          "description": "Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`",
                          "type": "string"
                        },
                        "_password": {
                          "type": "string",
                          "description": "DEPRECATED: For improved security, specify the password in the request body instead of using the query parameter. To specify the password in the request body, set `Content-type: multipart/form-data` part with name `password`. Password for the private key file, if required.",
                          "location": "query"
                        },
                        "alias": {
                          "location": "query",
                          "type": "string",
                          "description": "Alias for the key/certificate pair. Values must match the regular expression `[\\w\\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the alias in either this parameter or the JSON body."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases",
                      "request": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "description": "Creates an alias from a key/certificate pair. The structure of the request is controlled by the `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`, provide the file in the `file` field, and include the `password` field if the file is encrypted in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the request body.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "httpMethod": "POST"
                    },
                    "delete": {
                      "description": "Deletes an alias.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "apigee.organizations.environments.keystores.aliases.delete",
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      }
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "path": "v1/{+name}",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
                        }
                      },
                      "id": "apigee.organizations.environments.keystores.aliases.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets an alias."
                    },
                    "csr": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.keystores.aliases.csr",
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "description": "Generates a PKCS #10 Certificate Signing Request for the private key in an alias.",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}/csr",
                      "httpMethod": "GET",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}/csr",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "getCertificate": {
                      "id": "apigee.organizations.environments.keystores.aliases.getCertificate",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}/certificate",
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}/certificate",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the certificate from an alias in PEM-encoded form."
                    }
                  }
                }
              }
            },
            "resourcefiles": {
              "methods": {
                "create": {
                  "path": "v1/{+parent}/resourcefiles",
                  "parameters": {
                    "type": {
                      "location": "query",
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Name of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
                    },
                    "parent": {
                      "description": "Required. Name of the environment in which to create the resource file in the following format: `organizations/{org}/environments/{env}`.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "id": "apigee.organizations.environments.resourcefiles.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "id": "apigee.organizations.environments.resourcefiles.delete",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string"
                    },
                    "type": {
                      "required": true,
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "location": "path",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. ID of the resource file to delete. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
                },
                "update": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PUT",
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "description": "Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).",
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "id": "apigee.organizations.environments.resourcefiles.update",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. ID of the resource file to update. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
                    },
                    "type": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "required": true
                    },
                    "parent": {
                      "description": "Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).",
                  "id": "apigee.organizations.environments.resourcefiles.list",
                  "path": "v1/{+parent}/resourcefiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles",
                  "parameters": {
                    "type": {
                      "description": "Optional. Type of resource files to list. {{ resource_file_type }}",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse"
                  }
                },
                "get": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
                    },
                    "name": {
                      "description": "Required. ID of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "httpMethod": "GET",
                  "id": "apigee.organizations.environments.resourcefiles.get",
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "description": "Gets the contents of a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
                },
                "listEnvironmentResources": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path"
                    },
                    "type": {
                      "location": "path",
                      "description": "Optional. Type of resource files to list. {{ resource_file_type }}",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}",
                  "parameterOrder": [
                    "parent",
                    "type"
                  ],
                  "id": "apigee.organizations.environments.resourcefiles.listEnvironmentResources",
                  "description": "Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/resourcefiles/{type}"
                }
              }
            },
            "apis": {
              "resources": {
                "revisions": {
                  "methods": {
                    "getDeployments": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}/deployments",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets the deployment of an API proxy revision and actual state reported by runtime pods.",
                      "id": "apigee.organizations.environments.apis.revisions.getDeployments",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                          "type": "string",
                          "description": "Required. Name representing an API proxy revision in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                          "required": true
                        }
                      }
                    },
                    "deploy": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deploys a revision of an API proxy. If another revision of the same API proxy revision is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot invoke an API proxy until it has been deployed to an environment. After you deploy an API proxy revision, you cannot edit it. To edit the API proxy, you must create and deploy a new revision. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}` ",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                          "required": true,
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$"
                        },
                        "serviceAccount": {
                          "location": "query",
                          "type": "string",
                          "description": "Google Cloud IAM service account. The service account represents the identity of the deployed proxy, and determines what permissions it has. The format must be `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`."
                        },
                        "sequencedRollout": {
                          "type": "boolean",
                          "location": "query",
                          "description": "Flag that specifies whether to enable sequenced rollout. If set to `true`, the routing rules for this deployment and the environment changes to add the deployment will be rolled out in a safe order. This reduces the risk of downtime that could be caused by changing the environment group's routing before the new destination for the affected traffic is ready to receive it. This should only be necessary if the new deployment will be capturing traffic from another environment under a shared environment group or if traffic will be rerouted to a different environment due to a base path removal. The [GenerateDeployChangeReport API](GenerateDeployChangeReport) may be used to examine routing changes before issuing the deployment request, and its response will indicate if a sequenced rollout is recommended for the deployment."
                        },
                        "override": {
                          "type": "boolean",
                          "description": "Flag that specifies whether the new deployment replaces other deployed revisions of the API proxy in the environment. Set `override` to `true` to replace other deployed revisions. By default, `override` is `false` and the deployment is rejected if other revisions of the API proxy are deployed in the environment.",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+name}/deployments",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "id": "apigee.organizations.environments.apis.revisions.deploy"
                    },
                    "undeploy": {
                      "id": "apigee.organizations.environments.apis.revisions.undeploy",
                      "description": "Undeploys an API proxy revision from an environment. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameters": {
                        "sequencedRollout": {
                          "description": "Flag that specifies whether to enable sequenced rollout. If set to `true`, the environment group routing rules corresponding to this deployment will be removed before removing the deployment from the runtime. This is likely to be a rare use case; it is only needed when the intended effect of undeploying this proxy is to cause the traffic it currently handles to be rerouted to some other existing proxy in the environment group. The [GenerateUndeployChangeReport API](GenerateUndeployChangeReport) may be used to examine routing changes before issuing the undeployment request, and its response will indicate if a sequenced rollout is recommended for the undeployment.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
                        }
                      },
                      "httpMethod": "DELETE",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}/deployments"
                    }
                  },
                  "resources": {
                    "deployments": {
                      "methods": {
                        "generateDeployChangeReport": {
                          "path": "v1/{+name}/deployments:generateDeployChangeReport",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "description": "Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "required": true
                            },
                            "override": {
                              "type": "boolean",
                              "location": "query",
                              "description": "Flag that specifies whether to force the deployment of the new revision over the currently deployed revision by overriding conflict checks."
                            }
                          },
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments:generateDeployChangeReport",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeploymentChangeReport"
                          },
                          "httpMethod": "POST",
                          "id": "apigee.organizations.environments.apis.revisions.deployments.generateDeployChangeReport",
                          "description": "Generates a report for a dry run analysis of a DeployApiProxy request without committing the deployment. In addition to the standard validations performed when adding deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being created. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run DeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`"
                        },
                        "generateUndeployChangeReport": {
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}/deployments:generateUndeployChangeReport",
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Generates a report for a dry run analysis of an UndeployApiProxy request without committing the undeploy. In addition to the standard validations performed when removing deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being removed. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run UndeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`",
                          "id": "apigee.organizations.environments.apis.revisions.deployments.generateUndeployChangeReport",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeploymentChangeReport"
                          },
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments:generateUndeployChangeReport"
                        }
                      }
                    },
                    "debugsessions": {
                      "resources": {
                        "data": {
                          "methods": {
                            "get": {
                              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}/data/{dataId}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Gets the debug data from a transaction.",
                              "parameterOrder": [
                                "name"
                              ],
                              "httpMethod": "GET",
                              "response": {
                                "$ref": "GoogleCloudApigeeV1DebugSessionTransaction"
                              },
                              "path": "v1/{+name}",
                              "parameters": {
                                "name": {
                                  "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$",
                                  "description": "Required. The name of the debug session transaction. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{transaction}`.",
                                  "type": "string",
                                  "required": true,
                                  "location": "path"
                                }
                              },
                              "id": "apigee.organizations.environments.apis.revisions.debugsessions.data.get"
                            }
                          }
                        }
                      },
                      "methods": {
                        "list": {
                          "description": "Lists debug sessions that are currently active in the given API Proxy revision.",
                          "parameters": {
                            "pageToken": {
                              "location": "query",
                              "description": "Page token, returned from a previous ListDebugSessions call, that you can use to retrieve the next page.",
                              "type": "string"
                            },
                            "parent": {
                              "location": "path",
                              "required": true,
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "description": "Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.",
                              "type": "string"
                            },
                            "pageSize": {
                              "format": "int32",
                              "description": "Maximum number of debug sessions to return. The page size defaults to 25.",
                              "location": "query",
                              "type": "integer"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudApigeeV1ListDebugSessionsResponse"
                          },
                          "path": "v1/{+parent}/debugsessions",
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions",
                          "httpMethod": "GET"
                        },
                        "create": {
                          "parameters": {
                            "timeout": {
                              "description": "Optional. The time in seconds after which this DebugSession should end. A timeout specified in DebugSession will overwrite this value.",
                              "location": "query",
                              "format": "int64",
                              "type": "string"
                            },
                            "parent": {
                              "description": "Required. The resource name of the API Proxy revision deployment for which to create the DebugSession. Must be of the form `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.",
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.create",
                          "request": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+parent}/debugsessions",
                          "description": "Creates a debug session for a deployed API Proxy revision.",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          }
                        },
                        "get": {
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.get",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the debug session to retrieve. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`.",
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "description": "Retrieves a debug session."
                        },
                        "deleteData": {
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.deleteData",
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}/data",
                          "httpMethod": "DELETE",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "path": "v1/{+name}/data",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$",
                              "description": "Required. The name of the debug session to delete. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Deletes the data from a debug session. This does not cancel the debug session or prevent further data from being collected if the session is still active in runtime pods.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        }
                      }
                    }
                  }
                },
                "deployments": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/deployments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$",
                          "description": "Required. Name representing an API proxy in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}`",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "description": "Lists all deployments of an API proxy in an environment.",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/deployments",
                      "id": "apigee.organizations.environments.apis.deployments.list"
                    }
                  }
                }
              }
            },
            "sharedflows": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "parent": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/deployments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.sharedflows.deployments.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+parent}/deployments",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "description": "Lists all deployments of a shared flow in an environment."
                    }
                  }
                },
                "revisions": {
                  "methods": {
                    "getDeployments": {
                      "description": "Gets the deployment of a shared flow revision and actual state reported by runtime pods.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.sharedflows.revisions.getDeployments",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "httpMethod": "GET",
                      "path": "v1/{+name}/deployments",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "required": true
                        }
                      }
                    },
                    "undeploy": {
                      "httpMethod": "DELETE",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "apigee.organizations.environments.sharedflows.revisions.undeploy",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the shared flow revision to undeploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$"
                        }
                      },
                      "description": "Undeploys a shared flow revision from an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`",
                      "path": "v1/{+name}/deployments"
                    },
                    "deploy": {
                      "id": "apigee.organizations.environments.sharedflows.revisions.deploy",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deploys a revision of a shared flow. If another revision of the same shared flow is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot use a shared flow until it has been deployed to an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}/deployments",
                      "httpMethod": "POST",
                      "parameters": {
                        "override": {
                          "description": "Flag that specifies whether the new deployment replaces other deployed revisions of the shared flow in the environment. Set `override` to `true` to replace other deployed revisions. By default, `override` is `false` and the deployment is rejected if other revisions of the shared flow are deployed in the environment.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the shared flow revision to deploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`",
                          "location": "path"
                        },
                        "serviceAccount": {
                          "type": "string",
                          "description": "Google Cloud IAM service account. The service account represents the identity of the deployed proxy, and determines what permissions it has. The format must be `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.",
                          "location": "query"
                        }
                      }
                    }
                  }
                }
              }
            },
            "stats": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Stats"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/stats/{statsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "aggTable": {
                      "description": "Table name used to query custom aggregate tables. If this parameter is skipped, then Apigee will try to retrieve the data from fact tables which will be expensive.",
                      "location": "query",
                      "type": "string"
                    },
                    "tsAscending": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`."
                    },
                    "offset": {
                      "type": "string",
                      "location": "query",
                      "description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`."
                    },
                    "tzo": {
                      "description": "Timezone offset value.",
                      "location": "query",
                      "type": "string"
                    },
                    "topk": {
                      "location": "query",
                      "description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter that enables you to drill down on specific dimension values."
                    },
                    "select": {
                      "type": "string",
                      "location": "query",
                      "description": "Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`"
                    },
                    "accuracy": {
                      "location": "query",
                      "description": "No longer used by Apigee. Supported for backwards compatibility.",
                      "type": "string"
                    },
                    "timeRange": {
                      "type": "string",
                      "location": "query",
                      "description": "Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`"
                    },
                    "sortby": {
                      "type": "string",
                      "location": "query",
                      "description": "Comma-separated list of columns to sort the final result."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy` or `target_host`. The value of dimensions should be a comma-separated list, as shown below: `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/stats/.*$"
                    },
                    "sort": {
                      "description": "Flag that specifies whether the sort order should be ascending or descending. Valid values include: `DESC` and `ASC`.",
                      "location": "query",
                      "type": "string"
                    },
                    "sonar": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Routes the query to API Monitoring for the last hour."
                    },
                    "realtime": {
                      "type": "boolean",
                      "location": "query",
                      "description": "No longer used by Apigee. Supported for backwards compatibility."
                    },
                    "timeUnit": {
                      "description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or` month`.",
                      "type": "string",
                      "location": "query"
                    },
                    "limit": {
                      "description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "apigee.organizations.environments.stats.get",
                  "description": "Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic, message counts, API call latency, response size, and cache hits and counts. Dimensions let you view metrics in meaningful groups. You can optionally pass dimensions as path parameters to the `stats` API. If dimensions are not specified, the metrics are computed on the entire set of data for the given time range."
                }
              }
            },
            "targetservers": {
              "methods": {
                "update": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "description": "Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace the entirety of the existing TargetServer with the resource in the request body.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.targetservers.update",
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the TargetServer to replace. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the TargetServer to get. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "description": "Gets a TargetServer resource.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.environments.targetservers.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "path": "v1/{+name}"
                },
                "delete": {
                  "description": "Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the TargetServer to delete. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`."
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "id": "apigee.organizations.environments.targetservers.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "description": "Creates a TargetServer in the specified environment.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.environments.targetservers.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/targetservers",
                  "parameters": {
                    "name": {
                      "description": "Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent environment name under which the TargetServer will be created. Must be of the form `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    }
                  }
                }
              }
            },
            "optimizedStats": {
              "methods": {
                "get": {
                  "description": "Similar to GetStats except that the response is less verbose.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.environments.optimizedStats.get",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1OptimizedStats"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter that enables you to drill-down on specific dimension values."
                    },
                    "tsAscending": {
                      "type": "boolean",
                      "description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends setting this value to `true` if you are using `sortby` with `sort=DESC`.",
                      "location": "query"
                    },
                    "tzo": {
                      "description": "Timezone offset value.",
                      "location": "query",
                      "type": "string"
                    },
                    "aggTable": {
                      "description": "Table name used to query custom aggregate tables. If this parameter is skipped, then Apigee will try to retrieve the data from fact tables which will be expensive.",
                      "location": "query",
                      "type": "string"
                    },
                    "offset": {
                      "location": "query",
                      "type": "string",
                      "description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`."
                    },
                    "sonar": {
                      "description": "Routes the query to API Monitoring for the last hour.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "sortby": {
                      "description": "Comma-separated list of columns to sort the final result.",
                      "location": "query",
                      "type": "string"
                    },
                    "timeUnit": {
                      "location": "query",
                      "type": "string",
                      "description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`."
                    },
                    "name": {
                      "description": "Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/environments/{env}/optimizedStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of `dimensions` should be a comma-separated list as shown below: `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`",
                      "type": "string",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$",
                      "required": true
                    },
                    "timeRange": {
                      "type": "string",
                      "description": "Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`",
                      "location": "query"
                    },
                    "realtime": {
                      "location": "query",
                      "type": "boolean",
                      "description": "No longer used by Apigee. Supported for backwards compatibility."
                    },
                    "select": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`"
                    },
                    "sort": {
                      "location": "query",
                      "type": "string",
                      "description": "Flag that specifies whether the sort order should be ascending or descending. Valid values include `DESC` and `ASC`."
                    },
                    "topk": {
                      "type": "string",
                      "location": "query",
                      "description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`."
                    },
                    "limit": {
                      "type": "string",
                      "location": "query",
                      "description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400."
                    },
                    "accuracy": {
                      "type": "string",
                      "location": "query",
                      "description": "No longer used by Apigee. Supported for backwards compatibility."
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/optimizedStats/{optimizedStatsId}"
                }
              }
            },
            "keyvaluemaps": {
              "methods": {
                "create": {
                  "path": "v1/{+parent}/keyvaluemaps",
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the environment in which to create the key value map. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keyvaluemaps",
                  "description": "Creates a key value map in an environment.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "id": "apigee.organizations.environments.keyvaluemaps.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.keyvaluemaps.delete",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keyvaluemaps/{keyvaluemapsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a key value map from an environment.",
                  "httpMethod": "DELETE"
                }
              }
            }
          }
        },
        "analytics": {
          "resources": {
            "datastores": {
              "methods": {
                "create": {
                  "id": "apigee.organizations.analytics.datastores.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Create a Datastore for an org",
                  "path": "v1/{+parent}/analytics/datastores",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent organization name. Must be of the form `organizations/{org}`.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores"
                },
                "test": {
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/analytics/datastores:test",
                  "description": "Test if Datastore configuration is correct. This includes checking if credentials provided by customer have required permissions in target destination storage",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent organization name Must be of the form `organizations/{org}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TestDatastoreResponse"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores:test",
                  "id": "apigee.organizations.analytics.datastores.test",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores/{datastoresId}",
                  "id": "apigee.organizations.analytics.datastores.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/analytics/datastores/[^/]+$",
                      "location": "path",
                      "description": "Required. Resource name of the Datastore to be get. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Get a Datastore"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "description": "Delete a Datastore from an org.",
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores/{datastoresId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/analytics/datastores/[^/]+$",
                      "required": true,
                      "description": "Required. Resource name of the Datastore to be deleted. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.analytics.datastores.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "update": {
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "description": "Update a Datastore",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores/{datastoresId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/analytics/datastores/[^/]+$",
                      "description": "Required. The resource name of datastore to be updated. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.analytics.datastores.update",
                  "httpMethod": "PUT"
                },
                "list": {
                  "id": "apigee.organizations.analytics.datastores.list",
                  "description": "List Datastores",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDatastoresResponse"
                  },
                  "path": "v1/{+parent}/analytics/datastores",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent organization name. Must be of the form `organizations/{org}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+$"
                    },
                    "targetType": {
                      "type": "string",
                      "description": "Optional. TargetType is used to fetch all Datastores that match the type",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores"
                }
              }
            }
          }
        },
        "sites": {
          "resources": {
            "apicategories": {
              "methods": {
                "patch": {
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ApiCategoryData"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$",
                      "description": "Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Updates a category on the portal.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiCategory"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories/{apicategoriesId}",
                  "id": "apigee.organizations.sites.apicategories.patch",
                  "httpMethod": "PATCH"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Gets a category on the portal.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiCategory"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories/{apicategoriesId}",
                  "id": "apigee.organizations.sites.apicategories.get"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories",
                  "id": "apigee.organizations.sites.apicategories.list",
                  "httpMethod": "GET",
                  "description": "Lists the categories on the portal.",
                  "path": "v1/{+parent}/apicategories",
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/sites/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListApiCategoriesResponse"
                  }
                },
                "delete": {
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories/{apicategoriesId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiResponseWrapper"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigee.organizations.sites.apicategories.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a category from the portal."
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiCategory"
                  },
                  "id": "apigee.organizations.sites.apicategories.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/apicategories",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ApiCategoryData"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories",
                  "description": "Creates a new category on the portal.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^organizations/[^/]+/sites/[^/]+$",
                      "description": "Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`",
                      "required": true,
                      "location": "path"
                    }
                  }
                }
              }
            }
          }
        },
        "hostQueries": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "description": "Required. Name of the asynchronous query to get. Must be of the form `organizations/{org}/queries/{queryId}`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/hostQueries/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/hostQueries/{hostQueriesId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get status of a query submitted at host level. If the query is still in progress, the `state` is set to \"running\" After the query has completed successfully, `state` is set to \"completed\"",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1AsyncQuery"
              },
              "id": "apigee.organizations.hostQueries.get"
            },
            "create": {
              "id": "apigee.organizations.hostQueries.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/hostQueries",
              "request": {
                "$ref": "GoogleCloudApigeeV1Query"
              },
              "flatPath": "v1/organizations/{organizationsId}/hostQueries",
              "response": {
                "$ref": "GoogleCloudApigeeV1AsyncQuery"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name. Must be of the form `organizations/{org}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded.",
              "httpMethod": "POST"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListAsyncQueriesResponse"
              },
              "parameters": {
                "to": {
                  "description": "Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.",
                  "type": "string",
                  "location": "query"
                },
                "inclQueriesWithoutReport": {
                  "type": "string",
                  "location": "query",
                  "description": "Flag to include asynchronous queries that don't have a report denifition."
                },
                "dataset": {
                  "location": "query",
                  "type": "string",
                  "description": "Filter response list by dataset. Example: `api`, `mint`"
                },
                "from": {
                  "location": "query",
                  "type": "string",
                  "description": "Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'."
                },
                "envgroupHostname": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. Filter response list by hostname."
                },
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "description": "Required. The parent resource name. Must be of the form `organizations/{org}`.",
                  "location": "path",
                  "type": "string"
                },
                "status": {
                  "description": "Filter response list by asynchronous query status.",
                  "location": "query",
                  "type": "string"
                },
                "submittedBy": {
                  "description": "Filter response list by user who submitted queries.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/hostQueries",
              "description": "Return a list of Asynchronous Queries at host level.",
              "flatPath": "v1/organizations/{organizationsId}/hostQueries",
              "id": "apigee.organizations.hostQueries.list"
            },
            "getResultView": {
              "description": "",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Name of the asynchronous query result view to get. Must be of the form `organizations/{org}/queries/{queryId}/resultView`.",
                  "pattern": "^organizations/[^/]+/hostQueries/[^/]+/resultView$",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/hostQueries/{hostQueriesId}/resultView",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1AsyncQueryResultView"
              },
              "path": "v1/{+name}",
              "id": "apigee.organizations.hostQueries.getResultView",
              "httpMethod": "GET"
            },
            "getResult": {
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`",
              "flatPath": "v1/organizations/{organizationsId}/hostQueries/{hostQueriesId}/result",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleApiHttpBody"
              },
              "id": "apigee.organizations.hostQueries.getResult",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/queries/{queryId}/result`.",
                  "required": true,
                  "pattern": "^organizations/[^/]+/hostQueries/[^/]+/result$",
                  "location": "path"
                }
              }
            }
          }
        },
        "sharedflows": {
          "resources": {
            "revisions": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "apigee.organizations.sharedflows.revisions.deployments.list",
                      "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "path": "v1/{+parent}/deployments",
                      "description": "Lists all deployments of a shared flow revision.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.",
                          "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "id": "apigee.organizations.sharedflows.revisions.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}",
                  "description": "Gets a revision of a shared flow. To download the shared flow configuration bundle for the specified revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then, develop the shared flow configuration locally and upload the updated sharedFlow configuration revision, as described in [updateSharedFlowRevision](updateSharedFlowRevision).",
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the shared flow revision to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "type": "string"
                    },
                    "format": {
                      "location": "query",
                      "description": "Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata is returned.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.sharedflows.revisions.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy the shared flow before deleting it.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the shared flow revision to delete. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}"
                },
                "updateSharedFlowRevision": {
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}",
                  "description": "Updates a shared flow revision. This operation is only allowed on revisions which have never been deployed. After deployment a revision becomes immutable, even if it becomes undeployed. The payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or application/octet-stream.",
                  "id": "apigee.organizations.sharedflows.revisions.updateSharedFlowRevision",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the shared flow revision to update. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$"
                    },
                    "validate": {
                      "description": "Ignored. All uploads are validated regardless of the value of this field. It is kept for compatibility with existing APIs. Must be `true` or `false` if provided.",
                      "type": "boolean",
                      "location": "query"
                    }
                  }
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "description": "Lists all deployments of a shared flow.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.sharedflows.deployments.list",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/deployments",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/deployments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the shared flow for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}`",
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "description": "Gets a shared flow by name, including a list of its revisions.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the shared flow to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`",
                  "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1/{+name}",
              "id": "apigee.organizations.sharedflows.get",
              "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}",
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlow"
              }
            },
            "create": {
              "path": "v1/{+parent}/sharedflows",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleApiHttpBody"
              },
              "parameters": {
                "action": {
                  "description": "Required. Must be set to either `import` or `validate`.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "Required. The name to give the shared flow",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the parent organization under which to create the shared flow. Must be of the form: `organizations/{organization_id}`"
                }
              },
              "id": "apigee.organizations.sharedflows.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB.",
              "httpMethod": "POST",
              "flatPath": "v1/organizations/{organizationsId}/sharedflows",
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
              }
            },
            "delete": {
              "id": "apigee.organizations.sharedflows.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                  "description": "Required. shared flow name of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlow"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "description": "Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can delete it.",
              "httpMethod": "DELETE"
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ListSharedFlowsResponse"
              },
              "parameters": {
                "includeMetaData": {
                  "description": "Indicates whether to include shared flow metadata in the response.",
                  "type": "boolean",
                  "location": "query"
                },
                "includeRevisions": {
                  "description": "Indicates whether to include a list of revisions in the response.",
                  "location": "query",
                  "type": "boolean"
                },
                "parent": {
                  "description": "Required. The name of the parent organization under which to get shared flows. Must be of the form: `organizations/{organization_id}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Lists all shared flows in the organization.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "id": "apigee.organizations.sharedflows.list",
              "flatPath": "v1/organizations/{organizationsId}/sharedflows",
              "path": "v1/{+parent}/sharedflows"
            }
          }
        },
        "instances": {
          "resources": {
            "natAddresses": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/natAddresses/{natAddressesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``",
                      "pattern": "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.instances.natAddresses.delete",
                  "description": "Deletes the NAT address. Connections that are actively using the address are drained before it is removed. **Note:** Not supported for Apigee hybrid."
                },
                "get": {
                  "id": "apigee.organizations.instances.natAddresses.get",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1NatAddress"
                  },
                  "description": "Gets the details of a NAT address. **Note:** Not supported for Apigee hybrid.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`",
                      "pattern": "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/natAddresses/{natAddressesId}",
                  "httpMethod": "GET",
                  "path": "v1/{+name}"
                },
                "create": {
                  "httpMethod": "POST",
                  "description": "Creates a NAT address. The address is created in the RESERVED state and a static external IP address will be provisioned. At this time, the instance will not use this IP address for Internet egress traffic. The address can be activated for use once any required firewall IP whitelisting has been completed. **Note:** Not supported for Apigee hybrid.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1NatAddress"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/natAddresses",
                  "path": "v1/{+parent}/natAddresses",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.instances.natAddresses.create",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "activate": {
                  "httpMethod": "POST",
                  "id": "apigee.organizations.instances.natAddresses.activate",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ActivateNatAddressRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:activate",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$",
                      "description": "Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/natAddresses/{natAddressesId}:activate",
                  "description": "Activates the NAT address. The Apigee instance can now use this for Internet egress traffic. **Note:** Not supported for Apigee hybrid."
                },
                "list": {
                  "id": "apigee.organizations.instances.natAddresses.list",
                  "httpMethod": "GET",
                  "description": "Lists the NAT addresses for an Apigee instance. **Note:** Not supported for Apigee hybrid.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/natAddresses",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^organizations/[^/]+/instances/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum number of natAddresses to return. Defaults to 25.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "Page token, returned from a previous ListNatAddresses call, that you can use to retrieve the next page of content.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListNatAddressesResponse"
                  },
                  "path": "v1/{+parent}/natAddresses"
                }
              }
            },
            "canaryevaluations": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/canaryevaluations",
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`.",
                      "pattern": "^organizations/[^/]+/instances/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/canaryevaluations",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1CanaryEvaluation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.instances.canaryevaluations.create",
                  "description": "Creates a new canary evaluation for an organization."
                },
                "get": {
                  "description": "Gets a CanaryEvaluation for an organization.",
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/canaryevaluations/{canaryevaluationsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/instances/[^/]+/canaryevaluations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the CanaryEvaluation. Use the following structure in your request: `organizations/{org}/instances/*/canaryevaluations/{evaluation}`"
                    }
                  },
                  "id": "apigee.organizations.instances.canaryevaluations.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1CanaryEvaluation"
                  }
                }
              }
            },
            "attachments": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`",
                      "pattern": "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1InstanceAttachment"
                  },
                  "httpMethod": "GET",
                  "description": "Gets an attachment. **Note:** Not supported for Apigee hybrid.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments/{attachmentsId}",
                  "id": "apigee.organizations.instances.attachments.get"
                },
                "list": {
                  "description": "Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/attachments",
                  "id": "apigee.organizations.instances.attachments.list",
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListInstanceAttachmentsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Page token, returned by a previous ListInstanceAttachments call, that you can use to retrieve the next page of content.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum number of instance attachments to return. Defaults to 25.",
                      "type": "integer"
                    }
                  },
                  "httpMethod": "GET"
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deletes an attachment. **Note:** Not supported for Apigee hybrid.",
                  "id": "apigee.organizations.instances.attachments.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments/{attachmentsId}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/attachments",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`.",
                      "pattern": "^organizations/[^/]+/instances/[^/]+$"
                    }
                  },
                  "id": "apigee.organizations.instances.attachments.create",
                  "httpMethod": "POST",
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments",
                  "description": "Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee hybrid.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1InstanceAttachment"
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "id": "apigee.organizations.instances.get",
              "description": "Gets the details for an Apigee runtime instance. **Note:** Not supported for Apigee hybrid.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`.",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Instance"
              }
            },
            "patch": {
              "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}",
              "description": "Updates an Apigee runtime instance. You can update the fields described in NodeConfig. No other fields will be updated. **Note:** Not supported for Apigee hybrid.",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "GoogleCloudApigeeV1Instance"
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/instances/[^/]+$"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "List of fields to be updated."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.instances.patch"
            },
            "reportStatus": {
              "parameterOrder": [
                "instance"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1ReportInstanceStatusRequest"
              },
              "path": "v1/{+instance}:reportStatus",
              "id": "apigee.organizations.instances.reportStatus",
              "description": "Reports the latest status for a runtime instance.",
              "parameters": {
                "instance": {
                  "location": "path",
                  "description": "The name of the instance reporting this status. For SaaS the request will be rejected if no instance exists under this name. Format is organizations/{org}/instances/{instance}",
                  "required": true,
                  "pattern": "^organizations/[^/]+/instances/[^/]+$",
                  "type": "string"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}:reportStatus",
              "response": {
                "$ref": "GoogleCloudApigeeV1ReportInstanceStatusResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST"
            },
            "create": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}`.",
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "GoogleCloudApigeeV1Instance"
              },
              "id": "apigee.organizations.instances.create",
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates an Apigee runtime instance. The instance is accessible from the authorized network configured on the organization. **Note:** Not supported for Apigee hybrid.",
              "path": "v1/{+parent}/instances",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/instances"
            },
            "list": {
              "path": "v1/{+parent}/instances",
              "flatPath": "v1/organizations/{organizationsId}/instances",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListInstancesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "apigee.organizations.instances.list",
              "description": "Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee hybrid.",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "Maximum number of instances to return. Defaults to 25."
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}`.",
                  "pattern": "^organizations/[^/]+$"
                },
                "pageToken": {
                  "description": "Page token, returned from a previous ListInstances call, that you can use to retrieve the next page of content.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "path": "v1/{+name}",
              "id": "apigee.organizations.instances.delete",
              "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}",
              "description": "Deletes an Apigee runtime instance. The instance stops serving requests and the runtime data is deleted. **Note:** Not supported for Apigee hybrid.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/instances/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`.",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE"
            }
          }
        },
        "datacollectors": {
          "methods": {
            "list": {
              "parameters": {
                "pageSize": {
                  "description": "Maximum number of data collectors to return. The page size defaults to 25.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Page token, returned from a previous ListDataCollectors call, that you can use to retrieve the next page."
                },
                "parent": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the organization for which to list data collectors in the following format: `organizations/{org}`."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "apigee.organizations.datacollectors.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListDataCollectorsResponse"
              },
              "path": "v1/{+parent}/datacollectors",
              "flatPath": "v1/organizations/{organizationsId}/datacollectors",
              "description": "Lists all data collectors.",
              "httpMethod": "GET"
            },
            "delete": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameters": {
                "name": {
                  "description": "Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`.",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/datacollectors/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "DELETE",
              "flatPath": "v1/organizations/{organizationsId}/datacollectors/{datacollectorsId}",
              "description": "Deletes a data collector.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "id": "apigee.organizations.datacollectors.delete",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "response": {
                "$ref": "GoogleCloudApigeeV1DataCollector"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/datacollectors",
              "request": {
                "$ref": "GoogleCloudApigeeV1DataCollector"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Name of the organization in which to create the data collector in the following format: `organizations/{org}`."
                },
                "dataCollectorId": {
                  "location": "query",
                  "description": "ID of the data collector. Overrides any ID in the data collector resource. Must be a string beginning with `dc_` that contains only letters, numbers, and underscores.",
                  "type": "string"
                }
              },
              "id": "apigee.organizations.datacollectors.create",
              "path": "v1/{+parent}/datacollectors",
              "description": "Creates a new data collector.",
              "parameterOrder": [
                "parent"
              ]
            },
            "patch": {
              "flatPath": "v1/organizations/{organizationsId}/datacollectors/{datacollectorsId}",
              "request": {
                "$ref": "GoogleCloudApigeeV1DataCollector"
              },
              "httpMethod": "PATCH",
              "id": "apigee.organizations.datacollectors.patch",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1DataCollector"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates a data collector.",
              "parameters": {
                "name": {
                  "description": "Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/datacollectors/[^/]+$",
                  "required": true
                },
                "updateMask": {
                  "description": "List of fields to be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              }
            },
            "get": {
              "description": "Gets a data collector.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1DataCollector"
              },
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/datacollectors/{datacollectorsId}",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/datacollectors/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`."
                }
              },
              "httpMethod": "GET",
              "id": "apigee.organizations.datacollectors.get"
            }
          }
        },
        "apis": {
          "methods": {
            "patch": {
              "id": "apigee.organizations.apis.patch",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates an existing API proxy.",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "request": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "PATCH",
              "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/apis/[^/]+$",
                  "required": true,
                  "description": "Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`"
                },
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. The list of fields to update.",
                  "format": "google-fieldmask"
                }
              },
              "path": "v1/{+name}"
            },
            "create": {
              "request": {
                "$ref": "GoogleApiHttpBody"
              },
              "flatPath": "v1/organizations/{organizationsId}/apis",
              "path": "v1/{+parent}/apis",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "name": {
                  "location": "query",
                  "description": "Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Name of the organization in the following format: `organizations/{org}`",
                  "location": "path",
                  "type": "string"
                },
                "action": {
                  "description": "Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it.",
                  "location": "query",
                  "type": "string"
                },
                "validate": {
                  "description": "Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "id": "apigee.organizations.apis.create",
              "description": "Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client."
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/apis/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}",
              "path": "v1/{+name}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API proxy must be undeployed before you can delete it.",
              "id": "apigee.organizations.apis.delete"
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "description": "Gets an API proxy including a list of existing revisions.",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apis/[^/]+$",
                  "description": "Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`",
                  "location": "path"
                }
              },
              "id": "apigee.organizations.apis.get",
              "httpMethod": "GET"
            },
            "list": {
              "id": "apigee.organizations.apis.list",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists the names of all API proxies in an organization. The names returned correspond to the names defined in the configuration files for each API proxy.",
              "flatPath": "v1/organizations/{organizationsId}/apis",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. Name of the organization in the following format: `organizations/{org}`",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string"
                },
                "includeMetaData": {
                  "description": "Flag that specifies whether to include API proxy metadata in the response.",
                  "type": "boolean",
                  "location": "query"
                },
                "includeRevisions": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Flag that specifies whether to include a list of revisions in the response."
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ListApiProxiesResponse"
              },
              "path": "v1/{+parent}/apis"
            }
          },
          "resources": {
            "revisions": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists all deployments of an API proxy revision.",
                      "path": "v1/{+parent}/deployments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.",
                          "required": true,
                          "location": "path",
                          "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "id": "apigee.organizations.apis.revisions.deployments.list"
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "format": {
                      "location": "query",
                      "type": "string",
                      "description": "Format used when downloading the API proxy configuration revision. Set to `bundle` to download the API proxy configuration revision as a zip file."
                    },
                    "name": {
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$",
                      "type": "string",
                      "description": "Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Gets an API proxy revision. To download the API proxy configuration bundle for the specified revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated API proxy configuration revision, as described in [updateApiProxyRevision](updateApiProxyRevision).",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.apis.revisions.get"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "description": "Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated with it. The API proxy revision must be undeployed before you can delete it.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.apis.revisions.delete",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
                  }
                },
                "updateApiProxyRevision": {
                  "id": "apigee.organizations.apis.revisions.updateApiProxyRevision",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
                  },
                  "description": "Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip file from your local machine. You can update only API proxy revisions that have never been deployed. After deployment, an API proxy revision becomes immutable, even if it is undeployed. Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.",
                  "path": "v1/{+name}",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. API proxy revision to update in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$"
                    },
                    "validate": {
                      "description": "Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API.",
                      "type": "boolean",
                      "location": "query"
                    }
                  }
                }
              }
            },
            "keyvaluemaps": {
              "methods": {
                "delete": {
                  "description": "Deletes a key value map from an API proxy.",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`",
                      "required": true,
                      "type": "string",
                      "pattern": "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.apis.keyvaluemaps.delete",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/keyvaluemaps/{keyvaluemapsId}"
                },
                "create": {
                  "path": "v1/{+parent}/keyvaluemaps",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Name of the environment in which to create the key value map. Use the following structure in your request: `organizations/{org}/apis/{api}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "description": "Creates a key value map in an API proxy.",
                  "id": "apigee.organizations.apis.keyvaluemaps.create",
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/keyvaluemaps",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "httpMethod": "POST"
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/deployments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all deployments of an API proxy.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the API proxy for which to return deployment information in the following format: `organizations/{org}/apis/{api}`",
                      "pattern": "^organizations/[^/]+/apis/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/deployments",
                  "id": "apigee.organizations.apis.deployments.list"
                }
              }
            }
          }
        },
        "apiproducts": {
          "resources": {
            "rateplans": {
              "methods": {
                "create": {
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/rateplans",
                  "id": "apigee.organizations.apiproducts.rateplans.create",
                  "path": "v1/{+parent}/rateplans",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1RatePlan"
                  },
                  "description": "Create a rate plan that is associated with an API product in an organization. Using rate plans, API product owners can monetize their API products by configuring one or more of the following: - Billing frequency - Initial setup fees for using an API product - Payment funding model (postpaid only) - Fixed recurring or consumption-based charges for using an API product - Revenue sharing with developer partners An API product can have multiple rate plans associated with it but *only one* rate plan can be active at any point of time. **Note: From the developer's perspective, they purchase API products not rate plans.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1RatePlan"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the API product that is associated with the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the details of a rate plan.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1RatePlan"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/rateplans/{rateplansId}",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.apiproducts.rateplans.get"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. ID of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1RatePlan"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/rateplans/{rateplansId}",
                  "path": "v1/{+name}",
                  "description": "Deletes a rate plan.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.apiproducts.rateplans.delete"
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists all the rate plans for an API product.",
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/rateplans",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "expand": {
                      "description": "Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API. Defaults to `false`.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to return rate plans for all API products within the organization."
                    },
                    "state": {
                      "description": "State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display.",
                      "enumDescriptions": [
                        "State of the rate plan is not specified.",
                        "Rate plan is in draft mode and only visible to API providers.",
                        "Rate plan is published and will become visible to developers for the configured duration (between `startTime` and `endTime`)."
                      ],
                      "enum": [
                        "STATE_UNSPECIFIED",
                        "DRAFT",
                        "PUBLISHED"
                      ],
                      "type": "string",
                      "location": "query"
                    },
                    "startKey": {
                      "description": "Name of the rate plan from which to start displaying the list of rate plans. If omitted, the list starts from the first item. For example, to view the rate plans from 51-150, set the value of `startKey` to the name of the 51st rate plan and set the value of `count` to 100.",
                      "location": "query",
                      "type": "string"
                    },
                    "count": {
                      "location": "query",
                      "description": "Number of rate plans to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The maximum limit is 1000. Defaults to 100.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Name of the attribute used for sorting. Valid values include: * `name`: Name of the rate plan. * `state`: State of the rate plan (`DRAFT`, `PUBLISHED`). * `startTime`: Time when the rate plan becomes active. * `endTime`: Time when the rate plan expires. **Note**: Not supported by Apigee at this time.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/rateplans",
                  "id": "apigee.organizations.apiproducts.rateplans.list",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListRatePlansResponse"
                  }
                },
                "update": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PUT",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1RatePlan"
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1RatePlan"
                  },
                  "description": "Updates an existing rate plan.",
                  "id": "apigee.organizations.apiproducts.rateplans.update",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/rateplans/{rateplansId}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "attributes": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "id": "apigee.organizations.apiproducts.attributes.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the API product attribute. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the value of an API product attribute."
                },
                "delete": {
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the API product attribute. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Deletes an API product attribute.",
                  "id": "apigee.organizations.apiproducts.attributes.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "updateApiProductAttribute": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`",
                      "required": true,
                      "location": "path",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Updates the value of an API product attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "httpMethod": "POST",
                  "id": "apigee.organizations.apiproducts.attributes.updateApiProductAttribute",
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "id": "apigee.organizations.apiproducts.attributes.list",
                  "path": "v1/{+parent}/attributes",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                      "description": "Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes",
                  "description": "Lists all API product attributes.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          },
          "methods": {
            "update": {
              "description": "Updates an existing API product. You must include all required values, whether or not you are updating them, as well as any optional values that you are updating. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via UI or API. View the list of API products to identify their internal names.",
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "type": "string",
                  "description": "Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
                }
              },
              "path": "v1/{+name}",
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "id": "apigee.organizations.apiproducts.update",
              "request": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "attributes": {
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes",
              "id": "apigee.organizations.apiproducts.attributes",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "request": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "parameters": {
                "name": {
                  "description": "Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "path": "v1/{+name}/attributes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates or creates API product attributes. This API **replaces** the current list of attributes with the attributes specified in the request body. In this way, you can update existing attributes, add new attributes, or delete existing attributes by omitting them from the request body. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
              "httpMethod": "POST"
            },
            "list": {
              "flatPath": "v1/organizations/{organizationsId}/apiproducts",
              "parameterOrder": [
                "parent"
              ],
              "id": "apigee.organizations.apiproducts.list",
              "path": "v1/{+parent}/apiproducts",
              "httpMethod": "GET",
              "parameters": {
                "attributename": {
                  "location": "query",
                  "description": "Name of the attribute used to filter the search.",
                  "type": "string"
                },
                "expand": {
                  "type": "boolean",
                  "description": "Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API.",
                  "location": "query"
                },
                "startKey": {
                  "description": "Gets a list of API products starting with a specific API product in the list. For example, if you're returning 50 API products at a time (using the `count` query parameter), you can view products 50-99 by entering the name of the 50th API product in the first API (without using `startKey`). Product name is case sensitive.",
                  "location": "query",
                  "type": "string"
                },
                "attributevalue": {
                  "type": "string",
                  "location": "query",
                  "description": "Value of the attribute used to filter the search."
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}`",
                  "location": "path"
                },
                "count": {
                  "location": "query",
                  "type": "string",
                  "description": "Enter the number of API products you want returned in the API call. The limit is 1000.",
                  "format": "int64"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListApiProductsResponse"
              },
              "description": "Lists all API product names for an organization. Filter the list by passing an `attributename` and `attibutevalue`. The maximum number of API products returned is 1000. You can paginate the list of API products returned using the `startKey` and `count` query parameters."
            },
            "delete": {
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "description": "Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`",
                  "location": "path"
                }
              },
              "id": "apigee.organizations.apiproducts.delete",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "description": "Deletes an API product from an organization. Deleting an API product causes app requests to the resource URIs defined in the API product to fail. Ensure that you create a new API product to serve existing apps, unless your intention is to disable access to the resources defined in the API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name.",
              "httpMethod": "DELETE"
            },
            "create": {
              "request": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "description": "Creates an API product in an organization. You create API products after you have proxied backend services using API proxies. An API product is a collection of API resources combined with quota settings and metadata that you can use to deliver customized and productized API bundles to your developer community. This metadata can include: - Scope - Environments - API proxies - Extensible profile API products enable you repackage APIs on the fly, without having to do any additional coding or configuration. Apigee recommends that you start with a simple API product including only required elements. You then provision credentials to apps to enable them to start testing your APIs. After you have authentication and authorization working against a simple API product, you can iterate to create finer-grained API products, defining different sets of API resources for each API product. **WARNING:** - If you don't specify an API proxy in the request body, *any* app associated with the product can make calls to *any* API in your entire organization. - If you don't specify an environment in the request body, the product allows access to all environments. For more information, see What is an API product?",
              "flatPath": "v1/organizations/{organizationsId}/apiproducts",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the organization in which the API product will be created. Use the following structure in your request: `organizations/{org}`",
                  "pattern": "^organizations/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "id": "apigee.organizations.apiproducts.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/apiproducts",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              }
            },
            "get": {
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "description": "Gets configuration details for an API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name.",
              "httpMethod": "GET",
              "id": "apigee.organizations.apiproducts.get"
            }
          }
        },
        "developers": {
          "resources": {
            "apps": {
              "methods": {
                "create": {
                  "id": "apigee.organizations.developers.apps.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/apps",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "description": "Creates an app associated with a developer. This API associates the developer app with the specified API product and auto-generates an API key for the app to use in calls to API proxies inside that API product. The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name` appears in the UI.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "httpMethod": "POST"
                },
                "update": {
                  "description": "Updates the details for a developer app. In addition, you can add an API product to a developer app and automatically generate an API key for the app to use when calling APIs in the API product. If you want to use an existing API key for the API product, add the API product to the API key using the UpdateDeveloperAppKey API. Using this API, you cannot update the following: * App name as it is the primary key used to identify the app and cannot be changed. * Scopes associated with the app. Instead, use the ReplaceDeveloperAppKey API. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively.",
                  "id": "apigee.organizations.developers.apps.update",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
                    }
                  },
                  "id": "apigee.organizations.developers.apps.delete",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "description": "Deletes a developer app. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as app keys or access tokens, may take anywhere from a few seconds to a few minutes to be deleted.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all apps created by a developer in an Apigee organization. Optionally, you can request an expanded view of the developer apps. A maximum of 100 developer apps are returned per API call. You can paginate the list of deveoper apps returned using the `startKey` and `count` query parameters.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/developers/[^/]+$"
                    },
                    "startKey": {
                      "location": "query",
                      "description": "**Note**: Must be used in conjunction with the `count` parameter. Name of the developer app from which to start displaying the list of developer apps. For example, if you're returning 50 developer apps at a time (using the `count` query parameter), you can view developer apps 50-99 by entering the name of the 50th developer app. The developer app name is case sensitive.",
                      "type": "string"
                    },
                    "expand": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters."
                    },
                    "count": {
                      "format": "int64",
                      "description": "Number of developer apps to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.",
                      "location": "query",
                      "type": "string"
                    },
                    "shallowExpand": {
                      "description": "Optional. Specifies whether to expand the results in shallow mode. Set to `true` to expand the results in shallow mode.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "apigee.organizations.developers.apps.list",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps",
                  "path": "v1/{+parent}/apps",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeveloperAppsResponse"
                  }
                },
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "id": "apigee.organizations.developers.apps.get",
                  "httpMethod": "GET",
                  "description": "Returns the details for a developer app.",
                  "parameters": {
                    "entity": {
                      "description": "**Note**: Must be used in conjunction with the `query` parameter. Set to `apiresources` to return the number of API resources that have been approved for access by a developer app in the specified Apigee organization.",
                      "type": "string",
                      "location": "query"
                    },
                    "query": {
                      "location": "query",
                      "description": "**Note**: Must be used in conjunction with the `entity` parameter. Set to `count` to return the number of API resources that have been approved for access by a developer app in the specified Apigee organization.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "generateKeyPairOrUpdateDeveloperAppStatus": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "id": "apigee.organizations.developers.apps.generateKeyPairOrUpdateDeveloperAppStatus",
                  "description": "Manages access to a developer app by enabling you to: * Approve or revoke a developer app * Generate a new consumer key and secret for a developer app To approve or revoke a developer app, set the `action` query parameter to `approved` or `revoked`, respectively, and the `Content-Type` header to `application/octet-stream`. If a developer app is revoked, none of its API keys are valid for API calls even though the keys are still `approved`. If successful, the API call returns the following HTTP status code: `204 No Content` To generate a new consumer key and secret for a developer app, pass the new key/secret details. Rather than replace an existing key, this API generates a new key. In this case, multiple key pairs may be associated with a single developer app. Each key pair has an independent status (`approved` or `revoked`) and expiration time. Any approved, non-expired key can be used in an API call. For example, if you're using API key rotation, you can generate new keys with expiration times that overlap keys that are going to expire. You might also generate a new consumer key/secret if the security of the original key/secret is compromised. The `keyExpiresIn` property defines the expiration time for the API key in milliseconds. If you don't set this property or set it to `-1`, the API key never expires. **Notes**: * When generating a new key/secret, this API replaces the existing attributes, notes, and callback URLs with those specified in the request. Include or exclude any existing information that you want to retain or delete, respectively. * To migrate existing consumer keys and secrets to hybrid from another system, see the CreateDeveloperAppKey API.",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "required": true
                    },
                    "action": {
                      "type": "string",
                      "location": "query",
                      "description": "Action. Valid values are `approve` or `revoke`."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  }
                },
                "attributes": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "description": "Updates attributes for a developer app. This API replaces the current attributes with those specified in the request.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "id": "apigee.organizations.developers.apps.attributes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}/attributes"
                }
              },
              "resources": {
                "keys": {
                  "methods": {
                    "get": {
                      "id": "apigee.organizations.developers.apps.keys.get",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details for a consumer key for a developer app, including the key and secret value, associated API products, and other information.",
                      "httpMethod": "GET",
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}"
                    },
                    "replaceDeveloperAppKey": {
                      "path": "v1/{+name}",
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "required": true
                        }
                      },
                      "description": "Updates the scope of an app. This API replaces the existing scopes with those specified in the request. Include or exclude any existing scopes that you want to retain or delete, respectively. The specified scopes must already be defined for the API products associated with the app. This API sets the `scopes` element under the `apiProducts` element in the attributes of the app.",
                      "id": "apigee.organizations.developers.apps.keys.replaceDeveloperAppKey",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PUT"
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "type": "string",
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "description": "Deletes an app's consumer key and removes all API products associated with the app. After the consumer key is deleted, it cannot be used to access any APIs. **Note**: After you delete a consumer key, you may want to: 1. Create a new consumer key and secret for the developer app using the CreateDeveloperAppKey API, and subsequently add an API product to the key using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is no longer required.",
                      "id": "apigee.organizations.developers.apps.keys.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}"
                    },
                    "updateDeveloperAppKey": {
                      "description": "Adds an API product to a developer app key, enabling the app that holds the key to access the API resources bundled in the API product. In addition, you can add attributes to a developer app key. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively. You can use the same key to access all API products associated with the app.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "action": {
                          "type": "string",
                          "location": "query",
                          "description": "Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively. The `Content-Type` header must be set to `application/octet-stream`."
                        },
                        "name": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "id": "apigee.organizations.developers.apps.keys.updateDeveloperAppKey",
                      "httpMethod": "POST",
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      }
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API.",
                      "path": "v1/{+parent}/keys",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "id": "apigee.organizations.developers.apps.keys.create",
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys"
                    }
                  },
                  "resources": {
                    "create": {
                      "methods": {
                        "create": {
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "parameters": {
                            "parent": {
                              "required": true,
                              "description": "Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`",
                              "location": "path",
                              "type": "string",
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$"
                            }
                          },
                          "description": "Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API.",
                          "httpMethod": "POST",
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/create",
                          "request": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "id": "apigee.organizations.developers.apps.keys.create.create",
                          "path": "v1/{+parent}/keys/create",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ]
                        }
                      }
                    },
                    "apiproducts": {
                      "methods": {
                        "delete": {
                          "id": "apigee.organizations.developers.apps.keys.apiproducts.delete",
                          "httpMethod": "DELETE",
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}/apiproducts/{apiproductsId}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$",
                              "description": "Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Removes an API product from an app's consumer key. After the API product is removed, the app cannot access the API resources defined in that API product. **Note**: The consumer key is not removed, only its association with the API product.",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "path": "v1/{+name}",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "updateDeveloperAppKeyApiProduct": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "apigee.organizations.developers.apps.keys.apiproducts.updateDeveloperAppKeyApiProduct",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "path": "v1/{+name}",
                          "httpMethod": "POST",
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}/apiproducts/{apiproductsId}",
                          "parameters": {
                            "name": {
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$",
                              "required": true,
                              "description": "Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`",
                              "location": "path",
                              "type": "string"
                            },
                            "action": {
                              "type": "string",
                              "location": "query",
                              "description": "Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively."
                            }
                          },
                          "description": "Approves or revokes the consumer key for an API product. After a consumer key is approved, the app can use it to access APIs. A consumer key that is revoked or pending cannot be used to access an API. Any access tokens associated with a revoked consumer key will remain active. However, Apigee checks the status of the consumer key and if set to `revoked` will not allow access to the API.",
                          "parameterOrder": [
                            "name"
                          ]
                        }
                      }
                    }
                  }
                },
                "attributes": {
                  "methods": {
                    "updateDeveloperAppAttribute": {
                      "description": "Updates a developer app attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "apigee.organizations.developers.apps.attributes.updateDeveloperAppAttribute"
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.developers.apps.attributes.get",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "description": "Returns a developer app attribute.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
                        }
                      }
                    },
                    "list": {
                      "description": "Returns a list of all developer app attributes.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attributes"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                          "location": "path",
                          "type": "string",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes",
                      "path": "v1/{+parent}/attributes",
                      "id": "apigee.organizations.developers.apps.attributes.list",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a developer app attribute.",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "description": "Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "id": "apigee.organizations.developers.apps.attributes.delete",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                }
              }
            },
            "subscriptions": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Gets details for an API product subscription.",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/subscriptions/{subscriptionsId}",
                  "id": "apigee.organizations.developers.subscriptions.get",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperSubscription"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "expire": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/subscriptions/{subscriptionsId}:expire",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Expires an API product subscription immediately.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperSubscription"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:expire",
                  "httpMethod": "POST",
                  "id": "apigee.organizations.developers.subscriptions.expire"
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all API product subscriptions for a developer.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/subscriptions",
                  "path": "v1/{+parent}/subscriptions",
                  "id": "apigee.organizations.developers.subscriptions.list",
                  "parameters": {
                    "count": {
                      "type": "integer",
                      "description": "Number of API product subscriptions to return in the API call. Use with `startKey` to provide more targeted filtering. Defaults to 100. The maximum limit is 1000.",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "startKey": {
                      "description": "Name of the API product subscription from which to start displaying the list of subscriptions. If omitted, the list starts from the first item. For example, to view the API product subscriptions from 51-150, set the value of `startKey` to the name of the 51st subscription and set the value of `count` to 100.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "description": "Creates a subscription to an API product. ",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. Email address of the developer that is purchasing a subscription to the API product. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/subscriptions",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperSubscription"
                  },
                  "path": "v1/{+parent}/subscriptions",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperSubscription"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.developers.subscriptions.create"
                }
              }
            },
            "balance": {
              "methods": {
                "credit": {
                  "id": "apigee.organizations.developers.balance.credit",
                  "path": "v1/{+name}:credit",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1CreditDeveloperBalanceRequest"
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperBalance"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/balance:credit",
                  "parameters": {
                    "name": {
                      "description": "Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/balance$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Credits the account balance for the developer."
                },
                "adjust": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/balance:adjust",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/balance$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1AdjustDeveloperBalanceRequest"
                  },
                  "description": "Adjust the prepaid balance for the developer. This API will be used in scenarios where the developer has been under-charged or over-charged.",
                  "path": "v1/{+name}:adjust",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperBalance"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigee.organizations.developers.balance.adjust"
                }
              }
            },
            "attributes": {
              "methods": {
                "list": {
                  "path": "v1/{+parent}/attributes",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns a list of all developer attributes.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "description": "Required. Email address of the developer for which attributes are being listed. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.developers.attributes.list",
                  "httpMethod": "GET"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "id": "apigee.organizations.developers.attributes.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`"
                    }
                  },
                  "description": "Deletes a developer attribute.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE"
                },
                "updateDeveloperAttribute": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Updates a developer attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "id": "apigee.organizations.developers.attributes.updateDeveloperAttribute"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$",
                      "description": "Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "description": "Returns the value of the specified developer attribute.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.developers.attributes.get",
                  "httpMethod": "GET",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}"
                }
              }
            }
          },
          "methods": {
            "update": {
              "description": "Updates a developer. This API replaces the existing developer details with those specified in the request. Include or exclude any existing details that you want to retain or delete, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.developers.update",
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
                }
              },
              "httpMethod": "PUT",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1Developer"
              }
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "description": "Returns the developer details, including the developer's name, email address, apps, and other information. **Note**: The response includes only the first 100 developer apps.",
              "id": "apigee.organizations.developers.get",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "action": {
                  "location": "query",
                  "type": "string",
                  "description": "Status of the developer. Valid values are `active` or `inactive`."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/developers",
              "parameters": {
                "startKey": {
                  "location": "query",
                  "description": "**Note**: Must be used in conjunction with the `count` parameter. Email address of the developer from which to start displaying the list of developers. For example, if the an unfiltered list returns: ``` westley@example.com fezzik@example.com buttercup@example.com ``` and your `startKey` is `fezzik@example.com`, the list returned will be ``` fezzik@example.com buttercup@example.com ```",
                  "type": "string"
                },
                "includeCompany": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Flag that specifies whether to include company details in the response."
                },
                "count": {
                  "description": "Optional. Number of developers to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.",
                  "type": "string",
                  "format": "int64",
                  "location": "query"
                },
                "app": {
                  "type": "string",
                  "description": "Optional. List only Developers that are associated with the app. Note that start_key, count are not applicable for this filter criteria.",
                  "location": "query"
                },
                "expand": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters."
                },
                "ids": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. List of IDs to include, separated by commas."
                },
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`."
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListOfDevelopersResponse"
              },
              "flatPath": "v1/organizations/{organizationsId}/developers",
              "id": "apigee.organizations.developers.list",
              "description": "Lists all developers in an organization by email address. By default, the response does not include company developers. Set the `includeCompany` query parameter to `true` to include company developers. **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of developers returned using the `startKey` and `count` query parameters."
            },
            "getBalance": {
              "response": {
                "$ref": "GoogleCloudApigeeV1DeveloperBalance"
              },
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/balance",
              "id": "apigee.organizations.developers.getBalance",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/developers/[^/]+/balance$"
                }
              },
              "httpMethod": "GET",
              "description": "Gets the account balance for the developer.",
              "parameterOrder": [
                "name"
              ]
            },
            "attributes": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates developer attributes. This API replaces the existing attributes with those specified in the request. Add new attributes, and include or exclude any existing attributes that you want to retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "id": "apigee.organizations.developers.attributes",
              "response": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes",
              "path": "v1/{+parent}/attributes",
              "parameters": {
                "parent": {
                  "description": "Required. Email address of the developer for which attributes are being updated. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "updateMonetizationConfig": {
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+/developers/[^/]+/monetizationConfig$",
                  "type": "string",
                  "required": true,
                  "description": "Required. Monetization configuration for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/monetizationConfig`"
                }
              },
              "httpMethod": "PUT",
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/monetizationConfig",
              "response": {
                "$ref": "GoogleCloudApigeeV1DeveloperMonetizationConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.developers.updateMonetizationConfig",
              "request": {
                "$ref": "GoogleCloudApigeeV1DeveloperMonetizationConfig"
              },
              "description": "Updates the monetization configuration for the developer."
            },
            "create": {
              "flatPath": "v1/organizations/{organizationsId}/developers",
              "request": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the Apigee organization in which the developer is created. Use the following structure in your request: `organizations/{org}`.",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1/{+parent}/developers",
              "id": "apigee.organizations.developers.create",
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "description": "Creates a developer. Once created, the developer can register an app and obtain an API key. At creation time, a developer is set as `active`. To change the developer status, use the SetDeveloperStatus API.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ]
            },
            "getMonetizationConfig": {
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/monetizationConfig",
              "description": "Gets the monetization configuration for the developer.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/developers/[^/]+/monetizationConfig$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. Monetization configuration for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/monetizationConfig`"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1DeveloperMonetizationConfig"
              },
              "id": "apigee.organizations.developers.getMonetizationConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "setDeveloperStatus": {
              "description": "Sets the status of a developer. A developer is `active` by default. If you set a developer's status to `inactive`, the API keys assigned to the developer apps are no longer valid even though the API keys are set to `approved`. Inactive developers can still sign in to the developer portal and create apps; however, any new API keys generated during app creation won't work. To set the status of a developer, set the `action` query parameter to `active` or `inactive`, and the `Content-Type` header to `application/octet-stream`. If successful, the API call returns the following HTTP status code: `204 No Content`",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "action": {
                  "type": "string",
                  "location": "query",
                  "description": "Status of the developer. Valid values are `active` and `inactive`."
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_id}`",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "required": true
                }
              },
              "id": "apigee.organizations.developers.setDeveloperStatus",
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.developers.delete",
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "path": "v1/{+name}",
              "description": "Deletes a developer. All apps and API keys associated with the developer are also removed. **Warning**: This API will permanently delete the developer and related artifacts. To avoid permanently deleting developers and their artifacts, set the developer status to `inactive` using the SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as apps and API keys, may take anywhere from a few seconds to a few minutes to be deleted."
            }
          }
        },
        "reports": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent organization name under which the API product will be listed `organizations/{organization_id}/reports`",
                  "pattern": "^organizations/[^/]+$"
                },
                "expand": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to 'true' to get expanded details about each custom report."
                }
              },
              "path": "v1/{+parent}/reports",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListCustomReportsResponse"
              },
              "description": "Return a list of Custom Reports",
              "flatPath": "v1/organizations/{organizationsId}/reports",
              "id": "apigee.organizations.reports.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "update": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^organizations/[^/]+/reports/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`"
                }
              },
              "id": "apigee.organizations.reports.update",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "PUT",
              "description": "Update an existing custom report definition",
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "request": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "path": "v1/{+name}"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.reports.get",
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`",
                  "pattern": "^organizations/[^/]+/reports/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "description": "Retrieve a custom report definition.",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "description": "Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create custom dashboards in addition to the standard dashboards which are provided. The Custom Report in its simplest form contains specifications about metrics, dimensions and filters. It is important to note that the custom report by itself does not provide an executable entity. The Edge UI converts the custom report definition into an analytics query and displays the result in a chart.",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "id": "apigee.organizations.reports.create",
              "flatPath": "v1/organizations/{organizationsId}/reports",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "path": "v1/{+parent}/reports",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent organization name under which the Custom Report will be created. Must be of the form: `organizations/{organization_id}/reports`"
                }
              }
            },
            "delete": {
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "description": "Deletes an existing custom report definition",
              "response": {
                "$ref": "GoogleCloudApigeeV1DeleteCustomReportResponse"
              },
              "httpMethod": "DELETE",
              "id": "apigee.organizations.reports.delete",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/reports/[^/]+$",
                  "description": "Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}"
            }
          }
        },
        "apps": {
          "methods": {
            "list": {
              "path": "v1/{+parent}/apps",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apps",
              "parameters": {
                "includeCred": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Optional. Flag that specifies whether to include credentials in the response."
                },
                "apiProduct": {
                  "description": "API product.",
                  "type": "string",
                  "location": "query"
                },
                "expand": {
                  "location": "query",
                  "description": "Optional. Flag that specifies whether to return an expanded list of apps for the organization. Defaults to `false`.",
                  "type": "boolean"
                },
                "startKey": {
                  "location": "query",
                  "description": "Returns the list of apps starting from the specified app ID.",
                  "type": "string"
                },
                "rows": {
                  "type": "string",
                  "description": "Optional. Maximum number of app IDs to return. Defaults to 10000.",
                  "format": "int64",
                  "location": "query"
                },
                "apptype": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Filter by the type of the app. Valid values are `company` or `developer`. Defaults to `developer`."
                },
                "status": {
                  "description": "Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to `approved`.",
                  "location": "query",
                  "type": "string"
                },
                "ids": {
                  "type": "string",
                  "description": "Optional. Comma-separated list of app IDs on which to filter.",
                  "location": "query"
                },
                "keyStatus": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to `approved`."
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Resource path of the parent in the following format: `organizations/{org}`"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ListAppsResponse"
              },
              "id": "apigee.organizations.apps.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists IDs of apps within an organization that have the specified app status (approved or revoked) or are of the specified app type (developer or company).",
              "httpMethod": "GET"
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/apps/{appsId}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^organizations/[^/]+/apps/[^/]+$",
                  "description": "Required. App ID in the following format: `organizations/{org}/apps/{app}`",
                  "type": "string"
                }
              },
              "description": "Gets the app profile for the specified app ID.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.apps.get",
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1App"
              }
            }
          }
        },
        "endpointAttachments": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/endpointAttachments/[^/]+$",
                  "type": "string"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/endpointAttachments/{endpointAttachmentsId}",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the endpoint attachment.",
              "id": "apigee.organizations.endpointAttachments.get",
              "response": {
                "$ref": "GoogleCloudApigeeV1EndpointAttachment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ListEndpointAttachmentsResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "description": "Required. Name of the organization for which to list endpoint attachments. Use the following structure in your request: `organizations/{org}`",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Page token, returned from a previous `ListEndpointAttachments` call, that you can use to retrieve the next page."
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Optional. Maximum number of endpoint attachments to return. If unspecified, at most 25 attachments will be returned.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/endpointAttachments",
              "description": "Lists the endpoint attachments in an organization.",
              "id": "apigee.organizations.endpointAttachments.list",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/endpointAttachments",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "id": "apigee.organizations.endpointAttachments.delete",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/endpointAttachments/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/endpointAttachments/{endpointAttachmentsId}",
              "path": "v1/{+name}",
              "description": "Deletes an endpoint attachment.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              }
            },
            "create": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "description": "Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/endpointAttachments",
              "id": "apigee.organizations.endpointAttachments.create",
              "request": {
                "$ref": "GoogleCloudApigeeV1EndpointAttachment"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "endpointAttachmentId": {
                  "description": "ID to use for the endpoint attachment. The ID can contain lowercase letters and numbers, must start with a letter, and must be 1-20 characters in length.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. Organization the endpoint attachment will be created in.",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/endpointAttachments"
            }
          }
        },
        "operations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "description": "The name of the operation's parent resource.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+$"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                }
              },
              "httpMethod": "GET",
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "path": "v1/{+name}/operations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/operations",
              "id": "apigee.organizations.operations.list",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "id": "apigee.organizations.operations.get",
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The name of the operation resource.",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/operations/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/operations/{operationsId}",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "keyvaluemaps": {
          "methods": {
            "create": {
              "request": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. Name of the organization in which to create the key value map file. Use the following structure in your request: `organizations/{org}`"
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1/organizations/{organizationsId}/keyvaluemaps",
              "response": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              },
              "description": "Creates a key value map in an organization.",
              "id": "apigee.organizations.keyvaluemaps.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/keyvaluemaps"
            },
            "delete": {
              "description": "Deletes a key value map from an organization.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "DELETE",
              "flatPath": "v1/organizations/{organizationsId}/keyvaluemaps/{keyvaluemapsId}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/keyvaluemaps/{keyvaluemap}`",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/keyvaluemaps/[^/]+$",
                  "type": "string"
                }
              },
              "id": "apigee.organizations.keyvaluemaps.delete",
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              }
            }
          }
        },
        "envgroups": {
          "resources": {
            "attachments": {
              "methods": {
                "create": {
                  "id": "apigee.organizations.envgroups.attachments.create",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+parent}/attachments",
                  "description": "Creates a new attachment of an environment to an environment group.",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. EnvironmentGroup under which to create the attachment in the following format: `organizations/{org}/envgroups/{envgroup}`.",
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1EnvironmentGroupAttachment"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1EnvironmentGroupAttachment"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments/{attachmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.envgroups.attachments.get",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the environment group attachment in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets an environment group attachment."
                },
                "list": {
                  "id": "apigee.organizations.envgroups.attachments.list",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of environment group attachments to return. The page size defaults to 25.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token, returned by a previous ListEnvironmentGroupAttachments call, that you can use to retrieve the next page.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`.",
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/attachments",
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all attachments of an environment group."
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "description": "Deletes an environment group attachment.",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the environment group attachment to delete in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.",
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigee.organizations.envgroups.attachments.delete",
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments/{attachmentsId}"
                }
              }
            }
          },
          "methods": {
            "list": {
              "id": "apigee.organizations.envgroups.list",
              "description": "Lists all environment groups.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. Name of the organization for which to list environment groups in the following format: `organizations/{org}`.",
                  "pattern": "^organizations/[^/]+$",
                  "required": true
                },
                "pageSize": {
                  "description": "Maximum number of environment groups to return. The page size defaults to 25.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Page token, returned from a previous ListEnvironmentGroups call, that you can use to retrieve the next page.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ListEnvironmentGroupsResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/envgroups",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/envgroups"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "path": "v1/{+parent}/envgroups",
              "parameters": {
                "name": {
                  "description": "ID of the environment group. Overrides any ID in the environment_group resource.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the organization in which to create the environment group in the following format: `organizations/{org}`."
                }
              },
              "description": "Creates a new environment group.",
              "httpMethod": "POST",
              "flatPath": "v1/organizations/{organizationsId}/envgroups",
              "id": "apigee.organizations.envgroups.create",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
              }
            },
            "get": {
              "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.envgroups.get",
              "response": {
                "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`.",
                  "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets an environment group."
            },
            "patch": {
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                  "description": "Required. Name of the environment group to update in the format: `organizations/{org}/envgroups/{envgroup}.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "description": "List of fields to be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "id": "apigee.organizations.envgroups.patch",
              "path": "v1/{+name}",
              "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates an environment group.",
              "request": {
                "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "DELETE",
              "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
                }
              },
              "id": "apigee.organizations.envgroups.delete",
              "description": "Deletes an environment group."
            }
          }
        }
      },
      "methods": {
        "setAddons": {
          "id": "apigee.organizations.setAddons",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "GoogleCloudApigeeV1SetAddonsRequest"
          },
          "parameters": {
            "org": {
              "type": "string",
              "required": true,
              "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}`",
              "location": "path",
              "pattern": "^organizations/[^/]+$"
            }
          },
          "description": "Configures the add-ons for the Apigee organization. The existing add-on configuration will be fully replaced.",
          "httpMethod": "POST",
          "path": "v1/{+org}:setAddons",
          "flatPath": "v1/organizations/{organizationsId}:setAddons",
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [
            "org"
          ]
        },
        "getSyncAuthorization": {
          "response": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "id": "apigee.organizations.getSyncAuthorization",
          "flatPath": "v1/organizations/{organizationsId}:getSyncAuthorization",
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "pattern": "^organizations/[^/]+$",
              "description": "Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`",
              "required": true
            }
          },
          "path": "v1/{+name}:getSyncAuthorization",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "name"
          ],
          "description": "Lists the service accounts with the permissions required to allow the Synchronizer to download environment data from the control plane. An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.",
          "httpMethod": "POST",
          "request": {
            "$ref": "GoogleCloudApigeeV1GetSyncAuthorizationRequest"
          }
        },
        "get": {
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Required. Apigee organization name in the following format: `organizations/{org}`"
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "apigee.organizations.get",
          "flatPath": "v1/organizations/{organizationsId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "description": "Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure)."
        },
        "list": {
          "path": "v1/{+parent}",
          "response": {
            "$ref": "GoogleCloudApigeeV1ListOrganizationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/organizations",
          "id": "apigee.organizations.list",
          "description": "Lists the Apigee organizations and associated GCP projects that you have permission to access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).",
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "location": "path",
              "type": "string",
              "pattern": "^organizations$",
              "required": true,
              "description": "Required. Use the following structure in your request: `organizations`"
            }
          }
        },
        "getDeployedIngressConfig": {
          "parameters": {
            "name": {
              "description": "Required. Name of the deployed configuration for the organization in the following format: 'organizations/{org}/deployedIngressConfig'.",
              "pattern": "^organizations/[^/]+/deployedIngressConfig$",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "view": {
              "enum": [
                "INGRESS_CONFIG_VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "The default/unset value. The API will default to the BASIC view.",
                "Include all ingress config data necessary for the runtime to configure ingress, but no more. Routing rules will include only basepath and destination environment. This the default value.",
                "Include all ingress config data, including internal debug info for each routing rule such as the proxy claiming a particular basepath and when the routing rule first appeared in the env group."
              ],
              "description": "When set to FULL, additional details about the specific deployments receiving traffic will be included in the IngressConfig response's RoutingRules.",
              "type": "string",
              "location": "query"
            }
          },
          "description": "Gets the deployed ingress configuration for an organization.",
          "id": "apigee.organizations.getDeployedIngressConfig",
          "httpMethod": "GET",
          "path": "v1/{+name}",
          "flatPath": "v1/organizations/{organizationsId}/deployedIngressConfig",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleCloudApigeeV1IngressConfig"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "create": {
          "parameterOrder": [],
          "parameters": {
            "parent": {
              "type": "string",
              "location": "query",
              "description": "Required. Name of the GCP project in which to associate the Apigee organization. Pass the information as a query parameter using the following structure in your request: `projects/`"
            }
          },
          "description": "Creates an Apigee organization. See [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).",
          "request": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "id": "apigee.organizations.create",
          "path": "v1/organizations",
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "flatPath": "v1/organizations",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "POST"
        },
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}`",
              "type": "string",
              "pattern": "^organizations/[^/]+$"
            }
          },
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "httpMethod": "DELETE",
          "flatPath": "v1/organizations/{organizationsId}",
          "id": "apigee.organizations.delete",
          "description": "Delete an Apigee organization. Only supported for SubscriptionType TRIAL."
        },
        "getRuntimeConfig": {
          "id": "apigee.organizations.getRuntimeConfig",
          "description": "Get runtime config for an organization.",
          "path": "v1/{+name}",
          "httpMethod": "GET",
          "flatPath": "v1/organizations/{organizationsId}/runtimeConfig",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "response": {
            "$ref": "GoogleCloudApigeeV1RuntimeConfig"
          },
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/runtimeConfig$",
              "location": "path",
              "type": "string",
              "description": "Required. Name of the runtime config for the organization in the following format: 'organizations/{org}/runtimeConfig'.",
              "required": true
            }
          },
          "parameterOrder": [
            "name"
          ]
        },
        "update": {
          "description": "Updates the properties for an Apigee organization. No other fields in the organization profile will be updated.",
          "id": "apigee.organizations.update",
          "response": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "httpMethod": "PUT",
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+$",
              "location": "path",
              "type": "string",
              "description": "Required. Apigee organization name in the following format: `organizations/{org}`",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/organizations/{organizationsId}",
          "request": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}"
        },
        "setSyncAuthorization": {
          "parameterOrder": [
            "name"
          ],
          "description": "Sets the permissions required to allow the Synchronizer to download environment data from the control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.",
          "request": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "response": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "path": "v1/{+name}:setSyncAuthorization",
          "httpMethod": "POST",
          "id": "apigee.organizations.setSyncAuthorization",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`",
              "pattern": "^organizations/[^/]+$"
            }
          },
          "flatPath": "v1/organizations/{organizationsId}:setSyncAuthorization"
        }
      }
    },
    "hybrid": {
      "resources": {
        "issuers": {
          "methods": {
            "list": {
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. Must be of the form `hybrid/issuers`.",
                  "pattern": "^hybrid/issuers$",
                  "required": true
                }
              },
              "flatPath": "v1/hybrid/issuers",
              "description": "Lists hybrid services and its trusted issuers service account ids. This api is authenticated and unauthorized(allow all the users) and used by runtime authn-authz service to query control plane's issuer service account ids.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListHybridIssuersResponse"
              },
              "id": "apigee.hybrid.issuers.list",
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "https://cloud.google.com/apigee-api-management/",
  "rootUrl": "https://apigee.googleapis.com/",
  "revision": "20220402",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "schemas": {
    "GoogleCloudApigeeV1NatAddress": {
      "id": "GoogleCloudApigeeV1NatAddress",
      "description": "Apigee NAT(network address translation) address. A NAT address is a static external IP address used for Internet egress traffic.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Resource ID of the NAT address.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "The resource is in an unspecified state.",
            "The NAT address is being created.",
            "The NAT address is reserved but not yet used for Internet egress.",
            "The NAT address is active and used for Internet egress.",
            "The NAT address is being deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "RESERVED",
            "ACTIVE",
            "DELETING"
          ],
          "type": "string",
          "description": "Output only. State of the nat address."
        },
        "ipAddress": {
          "readOnly": true,
          "description": "Output only. The static IPV4 address.",
          "type": "string"
        }
      }
    },
    "EdgeConfigstoreBundleBadBundleViolation": {
      "type": "object",
      "description": "A message type used to describe a single bundle validation error.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of why the bundle is invalid and how to fix it."
        },
        "filename": {
          "type": "string",
          "description": "The filename (including relative path from the bundle root) in which the error occurred."
        }
      },
      "id": "EdgeConfigstoreBundleBadBundleViolation"
    },
    "GoogleCloudApigeeV1Metric": {
      "type": "object",
      "description": "Encapsulates the metric data point. For example: ```{ \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] }``` or ```{ \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }```",
      "id": "GoogleCloudApigeeV1Metric",
      "properties": {
        "values": {
          "items": {
            "type": "any"
          },
          "type": "array",
          "description": "List of metric values. Possible value formats include: `\"values\":[\"39.0\"]` or `\"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]`"
        },
        "name": {
          "description": "Metric name.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1FlowHookConfig": {
      "id": "GoogleCloudApigeeV1FlowHookConfig",
      "type": "object",
      "properties": {
        "sharedFlowName": {
          "description": "Name of the shared flow to invoke in the following format: `organizations/{org}/sharedflows/{sharedflow}`",
          "type": "string"
        },
        "continueOnError": {
          "type": "boolean",
          "description": "Flag that specifies whether the flow should abort after an error in the flow hook. Defaults to `true` (continue on error)."
        },
        "name": {
          "type": "string",
          "description": "Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{point}`. Valid `point` values include: `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, and `PostTargetFlowHook`"
        }
      }
    },
    "GoogleCloudApigeeV1QueryMetric": {
      "properties": {
        "operator": {
          "type": "string",
          "description": "One of `+`, `-`, `/`, `%`, `*`."
        },
        "name": {
          "description": "Required. Metric name.",
          "type": "string"
        },
        "function": {
          "type": "string",
          "description": "Aggregation function: avg, min, max, or sum."
        },
        "alias": {
          "description": "Alias for the metric. Alias will be used to replace metric name in query results.",
          "type": "string"
        },
        "value": {
          "description": "Operand value should be provided when operator is set.",
          "type": "string"
        }
      },
      "description": "More info about Metric: https://docs.apigee.com/api-platform/analytics/analytics-reference#metrics",
      "type": "object",
      "id": "GoogleCloudApigeeV1QueryMetric"
    },
    "GoogleCloudApigeeV1ListEnvironmentGroupsResponse": {
      "type": "object",
      "id": "GoogleCloudApigeeV1ListEnvironmentGroupsResponse",
      "description": "Response for ListEnvironmentGroups.",
      "properties": {
        "environmentGroups": {
          "items": {
            "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
          },
          "type": "array",
          "description": "EnvironmentGroups in the specified organization."
        },
        "nextPageToken": {
          "description": "Page token that you can include in a ListEnvironmentGroups request to retrieve the next page. If omitted, no subsequent pages exist.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1ListApiProductsResponse": {
      "type": "object",
      "properties": {
        "apiProduct": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProduct"
          },
          "description": "Lists all API product names defined for an organization.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListApiProductsResponse"
    },
    "GoogleCloudApigeeV1Instance": {
      "id": "GoogleCloudApigeeV1Instance",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional. Display name for the instance.",
          "type": "string"
        },
        "serviceAttachment": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Resource name of the service attachment created for the instance in the format: `projects/*/regions/*/serviceAttachments/*` Apigee customers can privately forward traffic to this service attachment using the PSC endpoints."
        },
        "peeringCidrRange": {
          "description": "Optional. Size of the CIDR block range that will be reserved by the instance. PAID organizations support `SLASH_16` to `SLASH_20` and defaults to `SLASH_16`. Evaluation organizations support only `SLASH_23`.",
          "enum": [
            "CIDR_RANGE_UNSPECIFIED",
            "SLASH_16",
            "SLASH_17",
            "SLASH_18",
            "SLASH_19",
            "SLASH_20",
            "SLASH_22",
            "SLASH_23"
          ],
          "type": "string",
          "enumDescriptions": [
            "Range not specified.",
            "`/16` CIDR range.",
            "`/17` CIDR range.",
            "`/18` CIDR range.",
            "`/19` CIDR range.",
            "`/20` CIDR range.",
            "`/22` CIDR range. Supported for evaluation only.",
            "`/23` CIDR range. Supported for evaluation only."
          ]
        },
        "diskEncryptionKeyName": {
          "description": "Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only. Use the following format: `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`",
          "type": "string"
        },
        "runtimeVersion": {
          "type": "string",
          "description": "Output only. Version of the runtime system running in the instance. The runtime system is the set of components that serve the API Proxy traffic in your Environments.",
          "readOnly": true
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "UPDATING"
          ],
          "type": "string",
          "description": "Output only. State of the instance. Values other than `ACTIVE` means the resource is not ready to use.",
          "readOnly": true,
          "enumDescriptions": [
            "Resource is in an unspecified state.",
            "Resource is being created.",
            "Resource is provisioned and ready to use.",
            "The resource is being deleted.",
            "The resource is being updated."
          ]
        },
        "createdAt": {
          "format": "int64",
          "description": "Output only. Time the instance was created in milliseconds since epoch.",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedAt": {
          "description": "Output only. Time the instance was last modified in milliseconds since epoch.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "ipRange": {
          "description": "Optional. IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation. This optional range, if provided, should be freely available as part of larger named range the customer has allocated to the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow traffic from Apigee. Input format: \"a.b.c.d/22\", Output format: a.b.c.d/22, e.f.g.h/28\"",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\\d]$`."
        },
        "description": {
          "description": "Optional. Description of the instance.",
          "type": "string"
        },
        "host": {
          "type": "string",
          "description": "Output only. Internal hostname or IP address of the Apigee endpoint used by clients to connect to the service.",
          "readOnly": true
        },
        "consumerAcceptList": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect to the service attachment. It is an optional field which the customers can provide during the instance creation. By default, the customer project associated with the Apigee organization will be included to the list."
        },
        "location": {
          "type": "string",
          "description": "Required. Compute Engine location where the instance resides."
        },
        "port": {
          "description": "Output only. Port number of the exposed Apigee endpoint.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Apigee runtime instance."
    },
    "GoogleCloudApigeeV1MonetizationConfig": {
      "type": "object",
      "description": "Configuration for the Monetization add-on.",
      "properties": {
        "enabled": {
          "description": "Flag that specifies whether the Monetization add-on is enabled.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudApigeeV1MonetizationConfig"
    },
    "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict": {
      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some base path.",
      "properties": {
        "conflictingDeployment": {
          "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
          "description": "Existing base path/deployment causing the conflict."
        },
        "environmentGroup": {
          "type": "string",
          "description": "Name of the environment group in which this conflict exists."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this conflict."
        }
      },
      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict",
      "type": "object"
    },
    "GoogleCloudApigeeV1ProvisionOrganizationRequest": {
      "id": "GoogleCloudApigeeV1ProvisionOrganizationRequest",
      "type": "object",
      "properties": {
        "runtimeLocation": {
          "description": "Cloud Platform location for the runtime instance. Defaults to zone `us-west1-a`. If a region is provided, `EVAL` organizations will use the region for automatically selecting a zone for the runtime instance.",
          "type": "string"
        },
        "authorizedNetwork": {
          "description": "Name of the customer project's VPC network. If provided, the network needs to be peered through Service Networking. If none is provided, the organization will have access only to the public internet.",
          "type": "string"
        },
        "analyticsRegion": {
          "type": "string",
          "description": "Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://cloud.google.com/apigee/docs/hybrid/latest/precog-provision). Defaults to `us-west1`."
        }
      },
      "description": "Request for ProvisionOrganization."
    },
    "GoogleCloudApigeeV1DatastoreConfig": {
      "description": "Configuration detail for datastore",
      "properties": {
        "tablePrefix": {
          "description": "Prefix of BigQuery table Required for `bigquery` target_type.",
          "type": "string"
        },
        "datasetName": {
          "description": "BigQuery dataset name Required for `bigquery` target_type.",
          "type": "string"
        },
        "bucketName": {
          "type": "string",
          "description": "Name of the Cloud Storage bucket. Required for `gcs` target_type."
        },
        "path": {
          "type": "string",
          "description": "Path of Cloud Storage bucket Required for `gcs` target_type."
        },
        "projectId": {
          "type": "string",
          "description": "Required. GCP project in which the datastore exists"
        }
      },
      "id": "GoogleCloudApigeeV1DatastoreConfig",
      "type": "object"
    },
    "GoogleCloudApigeeV1OrganizationProjectMapping": {
      "id": "GoogleCloudApigeeV1OrganizationProjectMapping",
      "properties": {
        "organization": {
          "description": "Name of the Apigee organization.",
          "type": "string"
        },
        "projectId": {
          "description": "GCP project associated with the Apigee organization",
          "type": "string"
        },
        "projectIds": {
          "type": "array",
          "description": "DEPRECATED: Use `project_id`. An Apigee Organization is mapped to a single project.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1FlowHook": {
      "id": "GoogleCloudApigeeV1FlowHook",
      "type": "object",
      "properties": {
        "continueOnError": {
          "type": "boolean",
          "description": "Optional. Flag that specifies whether execution should continue if the flow hook throws an exception. Set to `true` to continue execution. Set to `false` to stop execution if the flow hook throws an exception. Defaults to `true`."
        },
        "sharedFlow": {
          "description": "Shared flow attached to this flow hook, or empty if there is none attached.",
          "type": "string"
        },
        "description": {
          "description": "Description of the flow hook.",
          "type": "string"
        },
        "flowHookPoint": {
          "readOnly": true,
          "description": "Output only. Where in the API call flow the flow hook is invoked. Must be one of `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, or `PostTargetFlowHook`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Session": {
      "type": "object",
      "description": "Session carries the debug session id and its creation time.",
      "properties": {
        "timestampMs": {
          "format": "int64",
          "description": "The first transaction creation timestamp in millisecond, recorded by UAP.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The debug session ID."
        }
      },
      "id": "GoogleCloudApigeeV1Session"
    },
    "GoogleCloudApigeeV1Properties": {
      "type": "object",
      "description": "Message for compatibility with legacy Edge specification for Java Properties object in JSON.",
      "id": "GoogleCloudApigeeV1Properties",
      "properties": {
        "property": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Property"
          },
          "type": "array",
          "description": "List of all properties in the object"
        }
      }
    },
    "GoogleCloudApigeeV1ApiResponseWrapper": {
      "id": "GoogleCloudApigeeV1ApiResponseWrapper",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the operation.",
          "type": "string"
        },
        "message": {
          "description": "Description of the operation.",
          "type": "string"
        },
        "requestId": {
          "description": "ID that can be used to find request details in the log files.",
          "type": "string"
        },
        "errorCode": {
          "type": "string",
          "description": "ID that can be used to find errors in the log files."
        }
      }
    },
    "GoogleCloudApigeeV1Reference": {
      "type": "object",
      "id": "GoogleCloudApigeeV1Reference",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The resource id of this reference. Values must match the regular expression [\\w\\s\\-.]+."
        },
        "refers": {
          "description": "Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type.",
          "type": "string"
        },
        "resourceType": {
          "type": "string",
          "description": "The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'."
        },
        "description": {
          "description": "Optional. A human-readable description of this reference.",
          "type": "string"
        }
      },
      "description": "A Reference configuration. References must refer to a keystore that also exists in the parent environment."
    },
    "GoogleCloudApigeeV1GraphQLOperationGroup": {
      "description": "List of graphQL operation configuration details associated with Apigee API proxies or remote services. Remote services are non-Apigee proxies, such as Istio-Envoy.",
      "id": "GoogleCloudApigeeV1GraphQLOperationGroup",
      "type": "object",
      "properties": {
        "operationConfigType": {
          "description": "Flag that specifies whether the configuration is for Apigee API proxy or a remote service. Valid values include `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product.",
          "type": "string"
        },
        "operationConfigs": {
          "items": {
            "$ref": "GoogleCloudApigeeV1GraphQLOperationConfig"
          },
          "type": "array",
          "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product."
        }
      }
    },
    "GoogleCloudApigeeV1ListOfDevelopersResponse": {
      "properties": {
        "developer": {
          "description": "List of developers.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Developer"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ListOfDevelopersResponse"
    },
    "GoogleRpcPreconditionFailure": {
      "id": "GoogleRpcPreconditionFailure",
      "properties": {
        "violations": {
          "items": {
            "$ref": "GoogleRpcPreconditionFailureViolation"
          },
          "description": "Describes all precondition violations.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Describes what preconditions have failed. For example, if an RPC failed because it required the Terms of Service to be acknowledged, it could list the terms of service violation in the PreconditionFailure message."
    },
    "GoogleCloudApigeeV1ListAsyncQueriesResponse": {
      "id": "GoogleCloudApigeeV1ListAsyncQueriesResponse",
      "properties": {
        "queries": {
          "items": {
            "$ref": "GoogleCloudApigeeV1AsyncQuery"
          },
          "type": "array",
          "description": "The asynchronous queries belong to requested resource name."
        }
      },
      "type": "object",
      "description": "The response for ListAsyncQueries."
    },
    "GoogleCloudApigeeV1ListDataCollectorsResponse": {
      "type": "object",
      "description": "Response for ListDataCollectors.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token that you can include in a ListDataCollectors request to retrieve the next page. If omitted, no subsequent pages exist."
        },
        "dataCollectors": {
          "items": {
            "$ref": "GoogleCloudApigeeV1DataCollector"
          },
          "type": "array",
          "description": "Data collectors in the specified organization."
        }
      },
      "id": "GoogleCloudApigeeV1ListDataCollectorsResponse"
    },
    "GoogleCloudApigeeV1RuntimeTraceSamplingConfig": {
      "description": "NEXT ID: 3 RuntimeTraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.",
      "id": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
      "properties": {
        "sampler": {
          "description": "Sampler of distributed tracing. OFF is the default value.",
          "type": "string",
          "enumDescriptions": [
            "Sampler unspecified.",
            "OFF means distributed trace is disabled, or the sampling probability is 0.",
            "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
          ],
          "enum": [
            "SAMPLER_UNSPECIFIED",
            "OFF",
            "PROBABILITY"
          ]
        },
        "samplingRate": {
          "type": "number",
          "format": "float",
          "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are \u003e 0 and \u003c= 0.5."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ListSharedFlowsResponse": {
      "type": "object",
      "properties": {
        "sharedFlows": {
          "items": {
            "$ref": "GoogleCloudApigeeV1SharedFlow"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListSharedFlowsResponse"
    },
    "GoogleCloudApigeeV1GraphQLOperationConfig": {
      "id": "GoogleCloudApigeeV1GraphQLOperationConfig",
      "type": "object",
      "description": "Binds the resources in a proxy or remote service with the GraphQL operation and its associated quota enforcement.",
      "properties": {
        "operations": {
          "description": "Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name. **Note**: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.",
          "items": {
            "$ref": "GoogleCloudApigeeV1GraphQLOperation"
          },
          "type": "array"
        },
        "quota": {
          "$ref": "GoogleCloudApigeeV1Quota",
          "description": "Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done."
        },
        "apiSource": {
          "type": "string",
          "description": "Required. Name of the API proxy endpoint or remote service with which the GraphQL operation and quota are associated."
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "Custom attributes associated with the operation."
        }
      }
    },
    "GoogleCloudApigeeV1InstanceDeploymentStatus": {
      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
      "type": "object",
      "properties": {
        "instance": {
          "description": "ID of the instance reporting the status.",
          "type": "string"
        },
        "deployedRevisions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision"
          },
          "description": "Revisions currently deployed in MPs."
        },
        "deployedRoutes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute"
          },
          "description": "Current routes deployed in the ingress routing table. A route which is missing will appear in `missing_routes`."
        }
      },
      "description": "The status of a deployment as reported by a single instance."
    },
    "GoogleCloudApigeeV1Operation": {
      "type": "object",
      "description": "Represents the pairing of REST resource path and the actions (verbs) allowed on the resource path.",
      "id": "GoogleCloudApigeeV1Operation",
      "properties": {
        "methods": {
          "description": "methods refers to the REST verbs as in https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html. When none specified, all verb types are allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "type": "string",
          "description": "Required. REST resource path associated with the API proxy or remote service."
        }
      }
    },
    "GoogleCloudApigeeV1ListExportsResponse": {
      "description": "The response for ListExports",
      "type": "object",
      "id": "GoogleCloudApigeeV1ListExportsResponse",
      "properties": {
        "exports": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Export"
          },
          "description": "Details of the export jobs.",
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1ApiProxy": {
      "description": "Metadata describing the API proxy",
      "properties": {
        "readOnly": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this proxy is read-only. A read-only proxy cannot have new revisions created through calls to CreateApiProxyRevision. A proxy is read-only if it was generated by an archive."
        },
        "apiProxyType": {
          "readOnly": true,
          "enumDescriptions": [
            "API proxy type not specified.",
            "Programmable API Proxies enable you to develop APIs with highly flexible behavior using bundled policy configuration and one or more programming languages to describe complex sequential and/or conditional flows of logic.",
            "Configurable API Proxies enable you to develop efficient APIs using simple configuration while complex execution control flow logic is handled by Apigee. This type only works with the ARCHIVE deployment type and cannot be combined with the PROXY deployment type."
          ],
          "description": "Output only. The type of the API proxy.",
          "enum": [
            "API_PROXY_TYPE_UNSPECIFIED",
            "PROGRAMMABLE",
            "CONFIGURABLE"
          ],
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "User labels applied to this API Proxy.",
          "type": "object"
        },
        "metaData": {
          "readOnly": true,
          "$ref": "GoogleCloudApigeeV1EntityMetadata",
          "description": "Output only. Metadata describing the API proxy."
        },
        "latestRevisionId": {
          "description": "Output only. The id of the most recently created revision for this api proxy.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the API proxy.",
          "readOnly": true
        },
        "revision": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. List of revisons defined for the API proxy.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudApigeeV1ApiProxy",
      "type": "object"
    },
    "GoogleCloudApigeeV1OperationConfig": {
      "id": "GoogleCloudApigeeV1OperationConfig",
      "description": "Binds the resources in an API proxy or remote service with the allowed REST methods and associated quota enforcement.",
      "type": "object",
      "properties": {
        "apiSource": {
          "type": "string",
          "description": "Required. Name of the API proxy or remote service with which the resources, methods, and quota are associated."
        },
        "quota": {
          "$ref": "GoogleCloudApigeeV1Quota",
          "description": "Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done."
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "description": "Custom attributes associated with the operation.",
          "type": "array"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Operation"
          },
          "description": "List of resource/method pairs for the API proxy or remote service to which quota will applied. **Note**: Currently, you can specify only a single resource/method pair. The call will fail if more than one resource/method pair is provided."
        }
      }
    },
    "GoogleCloudApigeeV1GenerateUploadUrlResponse": {
      "type": "object",
      "properties": {
        "uploadUri": {
          "description": "The Google Cloud Storage signed URL that can be used to upload a new Archive zip file.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1GenerateUploadUrlResponse",
      "description": "Response for GenerateUploadUrl method."
    },
    "GoogleRpcStatus": {
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudApigeeV1Stats": {
      "id": "GoogleCloudApigeeV1Stats",
      "description": "Encapsulates a `stats` response.",
      "properties": {
        "hosts": {
          "type": "array",
          "description": "List of query results grouped by host.",
          "items": {
            "$ref": "GoogleCloudApigeeV1StatsHostStats"
          }
        },
        "environments": {
          "type": "array",
          "description": "List of query results on the environment level.",
          "items": {
            "$ref": "GoogleCloudApigeeV1StatsEnvironmentStats"
          }
        },
        "metaData": {
          "$ref": "GoogleCloudApigeeV1Metadata",
          "description": "Metadata information."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ApiCategoryData": {
      "description": "the Api category resource.",
      "properties": {
        "id": {
          "description": "ID of the category (a UUID).",
          "type": "string"
        },
        "updateTime": {
          "format": "int64",
          "type": "string",
          "description": "Time the category was last modified in milliseconds since epoch."
        },
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "siteId": {
          "type": "string",
          "description": "Name of the portal."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ApiCategoryData"
    },
    "GoogleCloudApigeeV1GetSyncAuthorizationRequest": {
      "properties": {},
      "type": "object",
      "description": "Request for GetSyncAuthorization.",
      "id": "GoogleCloudApigeeV1GetSyncAuthorizationRequest"
    },
    "GoogleCloudApigeeV1Access": {
      "type": "object",
      "properties": {
        "Remove": {
          "$ref": "GoogleCloudApigeeV1AccessRemove"
        },
        "Get": {
          "$ref": "GoogleCloudApigeeV1AccessGet"
        },
        "Set": {
          "$ref": "GoogleCloudApigeeV1AccessSet"
        }
      },
      "id": "GoogleCloudApigeeV1Access"
    },
    "GoogleCloudApigeeV1TestDatastoreResponse": {
      "id": "GoogleCloudApigeeV1TestDatastoreResponse",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "description": "Output only. It could be `completed` or `failed`",
          "readOnly": true
        },
        "error": {
          "type": "string",
          "description": "Output only. Error message of test connection failure",
          "readOnly": true
        }
      },
      "description": "The response for TestDatastore"
    },
    "GoogleCloudApigeeV1ListHybridIssuersResponse": {
      "properties": {
        "issuers": {
          "type": "array",
          "description": "Lists of hybrid services and its trusted issuer email ids.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ServiceIssuersMapping"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ListHybridIssuersResponse"
    },
    "GoogleCloudApigeeV1ListApiProxiesResponse": {
      "properties": {
        "proxies": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProxy"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListApiProxiesResponse",
      "type": "object"
    },
    "GoogleCloudApigeeV1AccessGet": {
      "id": "GoogleCloudApigeeV1AccessGet",
      "description": "Get action. For example, \"Get\" : { \"name\" : \"target.name\", \"value\" : \"default\" }",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Deployment": {
      "type": "object",
      "properties": {
        "routeConflicts": {
          "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be `ERROR`, but it will mean that some of the deployment's base paths are not routed to its environment. If the conflicts change, the state will transition to `PROGRESSING` until the latest configuration is rolled out to all instances. This field is not populated in List APIs.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict"
          }
        },
        "serviceAccount": {
          "description": "The full resource name of Cloud IAM Service Account that this deployment is using, eg, `projects/-/serviceAccounts/{email}`.",
          "type": "string"
        },
        "revision": {
          "type": "string",
          "description": "API proxy revision."
        },
        "errors": {
          "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "instances": {
          "description": "Status reported by each runtime instance. This field is not populated in List APIs.",
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceDeploymentStatus"
          },
          "type": "array"
        },
        "pods": {
          "type": "array",
          "description": "Status reported by runtime pods. This field is not populated for List APIs. **Note**: **This field is deprecated**. Runtime versions 1.3 and above report instance level status rather than pod status.",
          "items": {
            "$ref": "GoogleCloudApigeeV1PodStatus"
          }
        },
        "environment": {
          "type": "string",
          "description": "Environment."
        },
        "state": {
          "type": "string",
          "description": "Current state of the deployment. This field is not populated in List APIs.",
          "enumDescriptions": [
            "This value should never be returned.",
            "Runtime has loaded the deployment.",
            "Deployment is not fully ready in the runtime.",
            "Encountered an error with the deployment that requires intervention."
          ],
          "enum": [
            "RUNTIME_STATE_UNSPECIFIED",
            "READY",
            "PROGRESSING",
            "ERROR"
          ]
        },
        "apiProxy": {
          "description": "API proxy.",
          "type": "string"
        },
        "deployStartTime": {
          "type": "string",
          "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudApigeeV1Deployment"
    },
    "GoogleCloudApigeeV1ResourceConfig": {
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the resource as a URI.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name in the following format: `organizations/{org}/environments/{env}/resourcefiles/{type}/{file}/revisions/{rev}` Only environment-scoped resource files are supported."
        }
      },
      "id": "GoogleCloudApigeeV1ResourceConfig"
    },
    "GoogleCloudApigeeV1StatsEnvironmentStats": {
      "description": "Encapsulates the environment wrapper: ``` \"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.52056245E8\" ] } ], \"name\": \"prod\" } ]```",
      "id": "GoogleCloudApigeeV1StatsEnvironmentStats",
      "properties": {
        "dimensions": {
          "items": {
            "$ref": "GoogleCloudApigeeV1DimensionMetric"
          },
          "description": "List of metrics grouped under dimensions.",
          "type": "array"
        },
        "metrics": {
          "type": "array",
          "description": "In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only top-level metrics is provided. If dimensions are included, then there will be a top-level dimensions field under environments which will contain metrics values and the dimension name. Example: ``` \"environments\": [ { \"dimensions\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.14049521E8\" ] } ], \"name\": \"nit_proxy\" } ], \"name\": \"prod\" } ]``` or ```\"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.19026331E8\" ] } ], \"name\": \"prod\" } ]``` List of metric values.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Metric"
          }
        },
        "name": {
          "type": "string",
          "description": "Name of the environment."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ConnectorsPlatformConfig": {
      "id": "GoogleCloudApigeeV1ConnectorsPlatformConfig",
      "description": "Configuration for the Connectors Platform add-on.",
      "type": "object",
      "properties": {
        "expiresAt": {
          "format": "int64",
          "description": "Output only. Time at which the Connectors Platform add-on expires in milliseconds since epoch. If unspecified, the add-on will never expire.",
          "type": "string",
          "readOnly": true
        },
        "enabled": {
          "description": "Flag that specifies whether the Connectors Platform add-on is enabled.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudApigeeV1TraceConfig": {
      "id": "GoogleCloudApigeeV1TraceConfig",
      "type": "object",
      "properties": {
        "exporter": {
          "enumDescriptions": [
            "Exporter unspecified",
            "Jaeger exporter",
            "Cloudtrace exporter"
          ],
          "enum": [
            "EXPORTER_UNSPECIFIED",
            "JAEGER",
            "CLOUD_TRACE"
          ],
          "type": "string",
          "description": "Required. Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters."
        },
        "endpoint": {
          "type": "string",
          "description": "Required. Endpoint of the exporter."
        },
        "samplingConfig": {
          "description": "Distributed trace configuration for all API proxies in an environment. You can also override the configuration for a specific API proxy using the distributed trace configuration overrides API.",
          "$ref": "GoogleCloudApigeeV1TraceSamplingConfig"
        }
      },
      "description": "TraceConfig defines the configurations in an environment of distributed trace."
    },
    "GoogleCloudApigeeV1Attribute": {
      "properties": {
        "name": {
          "type": "string",
          "description": "API key of the attribute."
        },
        "value": {
          "type": "string",
          "description": "Value of the attribute."
        }
      },
      "id": "GoogleCloudApigeeV1Attribute",
      "description": "Key-value pair to store extra metadata.",
      "type": "object"
    },
    "GoogleCloudApigeeV1DeveloperBalanceWallet": {
      "type": "object",
      "id": "GoogleCloudApigeeV1DeveloperBalanceWallet",
      "description": "Wallet used to manage an account balance for a particular currency.",
      "properties": {
        "balance": {
          "description": "Current remaining balance of the developer for a particular currency.",
          "$ref": "GoogleTypeMoney"
        },
        "lastCreditTime": {
          "format": "int64",
          "type": "string",
          "description": "Output only. Time at which the developer last added credit to the account in milliseconds since epoch.",
          "readOnly": true
        }
      }
    },
    "GoogleCloudApigeeV1RuntimeTraceConfig": {
      "description": "NEXT ID: 8 RuntimeTraceConfig defines the configurations for distributed trace in an environment.",
      "id": "GoogleCloudApigeeV1RuntimeTraceConfig",
      "properties": {
        "endpoint": {
          "description": "Endpoint of the exporter.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the trace config in the following format: `organizations/{org}/environment/{env}/traceConfig`"
        },
        "revisionCreateTime": {
          "format": "google-datetime",
          "description": "The timestamp that the revision was created or updated.",
          "type": "string"
        },
        "exporter": {
          "enum": [
            "EXPORTER_UNSPECIFIED",
            "JAEGER",
            "CLOUD_TRACE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Exporter unspecified",
            "Jaeger exporter",
            "Cloudtrace exporter"
          ],
          "description": "Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters."
        },
        "revisionId": {
          "type": "string",
          "description": "Revision number which can be used by the runtime to detect if the trace config has changed between two versions."
        },
        "overrides": {
          "items": {
            "$ref": "GoogleCloudApigeeV1RuntimeTraceConfigOverride"
          },
          "type": "array",
          "description": "List of trace configuration overrides for spicific API proxies."
        },
        "samplingConfig": {
          "$ref": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
          "description": "Trace configuration for all API proxies in an environment."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1DeleteCustomReportResponse": {
      "type": "object",
      "properties": {
        "message": {
          "description": "The response contains only a message field.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeleteCustomReportResponse"
    },
    "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute": {
      "description": "Route deployed in the ingress routing table.",
      "type": "object",
      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute",
      "properties": {
        "basepath": {
          "description": "Base path in the routing table.",
          "type": "string"
        },
        "percentage": {
          "type": "integer",
          "description": "Percentage of ingress replicas reporting this route.",
          "format": "int32"
        },
        "environment": {
          "type": "string",
          "description": "Destination environment. This will be empty if the route is not yet reported."
        },
        "envgroup": {
          "type": "string",
          "description": "Environment group where this route is installed."
        }
      }
    },
    "GoogleCloudApigeeV1DateRange": {
      "id": "GoogleCloudApigeeV1DateRange",
      "description": "Date range of the data to export.",
      "type": "object",
      "properties": {
        "end": {
          "description": "Required. End date (exclusive) of the data to export in the format `yyyy-mm-dd`. The date range ends at 00:00:00 UTC on the end date- which will not be in the output.",
          "type": "string"
        },
        "start": {
          "type": "string",
          "description": "Required. Start date of the data to export in the format `yyyy-mm-dd`. The date range begins at 00:00:00 UTC on the start date."
        }
      }
    },
    "GoogleCloudApigeeV1ConfigVersion": {
      "properties": {
        "minorVersion": {
          "format": "int32",
          "description": "Minor version of the API proxy configuration schema.",
          "type": "integer"
        },
        "majorVersion": {
          "format": "int32",
          "description": "Major version of the API proxy configuration schema.",
          "type": "integer"
        }
      },
      "description": "Version of the API proxy configuration schema. Currently, only 4.0 is supported.",
      "type": "object",
      "id": "GoogleCloudApigeeV1ConfigVersion"
    },
    "GoogleCloudApigeeV1TlsInfo": {
      "type": "object",
      "description": "TLS configuration information for virtual hosts and TargetServers.",
      "id": "GoogleCloudApigeeV1TlsInfo",
      "properties": {
        "ignoreValidationErrors": {
          "type": "boolean",
          "description": "If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails."
        },
        "clientAuthEnabled": {
          "type": "boolean",
          "description": "Optional. Enables two-way TLS."
        },
        "enabled": {
          "description": "Required. Enables TLS. If false, neither one-way nor two-way TLS will be enabled.",
          "type": "boolean"
        },
        "protocols": {
          "items": {
            "type": "string"
          },
          "description": "The TLS versioins to be used.",
          "type": "array"
        },
        "commonName": {
          "$ref": "GoogleCloudApigeeV1TlsInfoCommonName",
          "description": "The TLS Common Name of the certificate."
        },
        "keyAlias": {
          "description": "Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert.",
          "type": "string"
        },
        "trustStore": {
          "description": "The resource ID of the truststore.",
          "type": "string"
        },
        "ciphers": {
          "items": {
            "type": "string"
          },
          "description": "The SSL/TLS cipher suites to be used. For programmable proxies, it must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites. For configurable proxies, it must follow the configuration specified in: https://commondatastorage.googleapis.com/chromium-boringssl-docs/ssl.h.html#Cipher-suite-configuration. This setting has no effect for configurable proxies when negotiating TLS 1.3.",
          "type": "array"
        },
        "keyStore": {
          "description": "Required if `client_auth_enabled` is true. The resource ID of the keystore.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1SyncAuthorization": {
      "type": "object",
      "properties": {
        "etag": {
          "description": "Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous updates from overwriting each other. For example, when you call [getSyncAuthorization](organizations/getSyncAuthorization) an ETag is returned in the response. Pass that ETag when calling the [setSyncAuthorization](organizations/setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid race conditions.",
          "type": "string",
          "format": "byte"
        },
        "identities": {
          "description": "Required. Array of service accounts to grant access to control plane resources, each specified using the following format: `serviceAccount:` service-account-name. The service-account-name is formatted like an email address. For example: `my-synchronizer-manager-service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about#create-the-service-accounts).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1SyncAuthorization"
    },
    "GoogleCloudApigeeV1GraphQLOperation": {
      "type": "object",
      "id": "GoogleCloudApigeeV1GraphQLOperation",
      "properties": {
        "operationTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. GraphQL operation types. Valid values include `query` or `mutation`. **Note**: Apigee does not currently support `subscription` types."
        },
        "operation": {
          "description": "GraphQL operation name. The name and operation type will be used to apply quotas. If no name is specified, the quota will be applied to all GraphQL operations irrespective of their operation names in the payload.",
          "type": "string"
        }
      },
      "description": "Represents the pairing of GraphQL operation types and the GraphQL operation name."
    },
    "GoogleCloudApigeeV1EntityMetadata": {
      "id": "GoogleCloudApigeeV1EntityMetadata",
      "properties": {
        "lastModifiedAt": {
          "format": "int64",
          "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch.",
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Time at which the API proxy was created, in milliseconds since epoch."
        },
        "subType": {
          "description": "The type of entity described",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Metadata common to many entities in this API."
    },
    "GoogleCloudApigeeV1CommonNameConfig": {
      "id": "GoogleCloudApigeeV1CommonNameConfig",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "matchWildCards": {
          "type": "boolean"
        }
      }
    },
    "GoogleCloudApigeeV1ResourceStatus": {
      "type": "object",
      "description": "The status of a resource loaded in the runtime.",
      "properties": {
        "resource": {
          "type": "string",
          "description": "The resource name. Currently only two resources are supported: EnvironmentGroup - organizations/{org}/envgroups/{envgroup} EnvironmentConfig - organizations/{org}/environments/{environment}/deployedConfig"
        },
        "revisions": {
          "description": "Revisions of the resource currently deployed in the instance.",
          "items": {
            "$ref": "GoogleCloudApigeeV1RevisionStatus"
          },
          "type": "array"
        },
        "totalReplicas": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of replicas that should have this resource."
        },
        "uid": {
          "type": "string",
          "description": "The uid of the resource. In the unexpected case that the instance has multiple uids for the same name, they should be reported under separate ResourceStatuses."
        }
      },
      "id": "GoogleCloudApigeeV1ResourceStatus"
    },
    "GoogleCloudApigeeV1QueryMetadata": {
      "properties": {
        "endTimestamp": {
          "type": "string",
          "description": "End timestamp of the query range."
        },
        "dimensions": {
          "description": "Dimensions of the AsyncQuery.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "timeUnit": {
          "description": "Query GroupBy time unit.",
          "type": "string"
        },
        "outputFormat": {
          "description": "Output format.",
          "type": "string"
        },
        "metrics": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
        },
        "startTimestamp": {
          "type": "string",
          "description": "Start timestamp of the query range."
        }
      },
      "id": "GoogleCloudApigeeV1QueryMetadata",
      "type": "object"
    },
    "GoogleCloudApigeeV1EnvironmentGroup": {
      "id": "GoogleCloudApigeeV1EnvironmentGroup",
      "description": "EnvironmentGroup configuration. An environment group is used to group one or more Apigee environments under a single host name.",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "UPDATING"
          ],
          "description": "Output only. State of the environment group. Values other than ACTIVE means the resource is not ready to use.",
          "readOnly": true,
          "enumDescriptions": [
            "Resource is in an unspecified state.",
            "Resource is being created.",
            "Resource is provisioned and ready to use.",
            "The resource is being deleted.",
            "The resource is being updated."
          ],
          "type": "string"
        },
        "lastModifiedAt": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The time at which the environment group was last updated as milliseconds since epoch.",
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The time at which the environment group was created as milliseconds since epoch.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "ID of the environment group."
        },
        "hostnames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. Host names for this environment group."
        }
      }
    },
    "GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse": {
      "properties": {
        "urls": {
          "items": {
            "$ref": "GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo"
          },
          "type": "array",
          "description": "The list of Signed URLs generated by the CreateAsyncQuery request"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse",
      "description": "The response for GetAsyncQueryResultUrl"
    },
    "GoogleCloudApigeeV1GenerateDownloadUrlRequest": {
      "id": "GoogleCloudApigeeV1GenerateDownloadUrlRequest",
      "description": "Request for GenerateDownloadUrl method.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudApigeeV1TlsInfoConfig": {
      "id": "GoogleCloudApigeeV1TlsInfoConfig",
      "properties": {
        "trustStore": {
          "description": "Name of the keystore or keystore reference containing trusted certificates for the server in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` or `organizations/{org}/environments/{env}/references/{reference}`",
          "type": "string"
        },
        "protocols": {
          "description": "List of TLS protocols that are granted access.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ciphers": {
          "items": {
            "type": "string"
          },
          "description": "List of ciphers that are granted access.",
          "type": "array"
        },
        "keyAlias": {
          "description": "Name of the alias used for client-side authentication in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`",
          "type": "string"
        },
        "commonName": {
          "description": "Common name to validate the target server against.",
          "$ref": "GoogleCloudApigeeV1CommonNameConfig"
        },
        "ignoreValidationErrors": {
          "description": "Flag that specifies whether to ignore TLS certificate validation errors. Set to `true` to ignore errors.",
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean",
          "description": "Flag that specifies whether one-way TLS is enabled. Set to `true` to enable one-way TLS."
        },
        "keyAliasReference": {
          "$ref": "GoogleCloudApigeeV1KeyAliasReference",
          "description": "Reference name and alias pair to use for client-side authentication."
        },
        "clientAuthEnabled": {
          "type": "boolean",
          "description": "Flag that specifies whether client-side authentication is enabled for the target server. Enables two-way TLS."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1OptimizedStatsNode": {
      "description": "Encapsulates a data node as represented below: ``` { \"identifier\": { \"names\": [ \"apiproxy\" ], \"values\": [ \"sirjee\" ] }, \"metric\": [ { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] } ] }``` or ``` { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] }``` Depending on whether a dimension is present in the query or not the data node type can be a simple metric value or dimension identifier with list of metrics.",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "any"
          }
        }
      },
      "id": "GoogleCloudApigeeV1OptimizedStatsNode",
      "type": "object"
    },
    "GoogleCloudApigeeV1TargetServerConfig": {
      "type": "object",
      "properties": {
        "tlsInfo": {
          "description": "TLS settings for the target server.",
          "$ref": "GoogleCloudApigeeV1TlsInfoConfig"
        },
        "name": {
          "type": "string",
          "description": "Target server revision name in the following format: `organizations/{org}/environments/{env}/targetservers/{targetserver}/revisions/{rev}`"
        },
        "host": {
          "description": "Host name of the target server.",
          "type": "string"
        },
        "protocol": {
          "enumDescriptions": [
            "UNSPECIFIED defaults to HTTP for backwards compatibility.",
            "The TargetServer uses HTTP.",
            "The TargetServer uses GRPC."
          ],
          "description": "The protocol used by this target server.",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "HTTP",
            "GRPC"
          ],
          "type": "string"
        },
        "enabled": {
          "description": "Whether the target server is enabled. An empty/omitted value for this field should be interpreted as true.",
          "type": "boolean"
        },
        "port": {
          "format": "int32",
          "description": "Port number for the target server.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudApigeeV1TargetServerConfig"
    },
    "GoogleCloudApigeeV1AdvancedApiOpsConfig": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Flag that specifies whether the Advanced API Ops add-on is enabled."
        }
      },
      "type": "object",
      "description": "Configuration for the Advanced API Ops add-on.",
      "id": "GoogleCloudApigeeV1AdvancedApiOpsConfig"
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudApigeeV1Attributes": {
      "id": "GoogleCloudApigeeV1Attributes",
      "properties": {
        "attribute": {
          "type": "array",
          "description": "List of attributes.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo": {
      "properties": {
        "sizeBytes": {
          "format": "int64",
          "description": "The size of the returned file in bytes",
          "type": "string"
        },
        "md5": {
          "description": "The MD5 Hash of the JSON data",
          "type": "string"
        },
        "uri": {
          "description": "The signed URL of the JSON data. Will be of the form `https://storage.googleapis.com/example-bucket/cat.jpeg?X-Goog-Algorithm= GOOG4-RSA-SHA256&X-Goog-Credential=example%40example-project.iam.gserviceaccount .com%2F20181026%2Fus-central1%2Fstorage%2Fgoog4_request&X-Goog-Date=20181026T18 1309Z&X-Goog-Expires=900&X-Goog-SignedHeaders=host&X-Goog-Signature=247a2aa45f16 9edf4d187d54e7cc46e4731b1e6273242c4f4c39a1d2507a0e58706e25e3a85a7dbb891d62afa849 6def8e260c1db863d9ace85ff0a184b894b117fe46d1225c82f2aa19efd52cf21d3e2022b3b868dc c1aca2741951ed5bf3bb25a34f5e9316a2841e8ff4c530b22ceaa1c5ce09c7cbb5732631510c2058 0e61723f5594de3aea497f195456a2ff2bdd0d13bad47289d8611b6f9cfeef0c46c91a455b94e90a 66924f722292d21e24d31dcfb38ce0c0f353ffa5a9756fc2a9f2b40bc2113206a81e324fc4fd6823 a29163fa845c8ae7eca1fcf6e5bb48b3200983c56c5ca81fffb151cca7402beddfc4a76b13344703 2ea7abedc098d2eb14a7`",
          "type": "string"
        }
      },
      "description": "A Signed URL and the relevant metadata associated with it.",
      "type": "object",
      "id": "GoogleCloudApigeeV1GetAsyncQueryResultUrlResponseURLInfo"
    },
    "GoogleCloudApigeeV1ListDeploymentsResponse": {
      "id": "GoogleCloudApigeeV1ListDeploymentsResponse",
      "type": "object",
      "properties": {
        "deployments": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Deployment"
          },
          "type": "array",
          "description": "List of deployments."
        }
      }
    },
    "GoogleRpcPreconditionFailureViolation": {
      "description": "A message type used to describe a single precondition failure.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A description of how the precondition failed. Developers can use this description to understand how to fix the failure. For example: \"Terms of service not accepted\".",
          "type": "string"
        },
        "subject": {
          "description": "The subject, relative to the type, that failed. For example, \"google.com/cloud\" relative to the \"TOS\" type would indicate which terms of service is being referenced.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The type of PreconditionFailure. We recommend using a service-specific enum type to define the supported precondition violation subjects. For example, \"TOS\" for \"Terms of Service violation\"."
        }
      },
      "id": "GoogleRpcPreconditionFailureViolation"
    },
    "GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest": {
      "id": "GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest",
      "properties": {},
      "description": "Request for ExpireDeveloperSubscription.",
      "type": "object"
    },
    "GoogleIamV1AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "GoogleIamV1AuditLogConfig",
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        },
        "logType": {
          "type": "string",
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1CreditDeveloperBalanceRequest": {
      "properties": {
        "transactionAmount": {
          "$ref": "GoogleTypeMoney",
          "description": "The amount of money to be credited. The wallet corresponding to the currency specified within `transaction_amount` will be updated. For example, if you specified `currency_code` within `transaction_amount` as \"USD\", then the amount would be added to the wallet which has the \"USD\" currency or if no such wallet exists, a new wallet will be created with the \"USD\" currency."
        },
        "transactionId": {
          "type": "string",
          "description": "Each transaction_id uniquely identifies a credit balance request. If multiple requests are received with the same transaction_id, only one of them will be considered."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1CreditDeveloperBalanceRequest",
      "description": "Request for CreditDeveloperBalance."
    },
    "GoogleCloudApigeeV1ListDebugSessionsResponse": {
      "id": "GoogleCloudApigeeV1ListDebugSessionsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token that you can include in a ListDebugSessionsRequest to retrieve the next page. If omitted, no subsequent pages exist."
        },
        "sessions": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Session"
          },
          "type": "array",
          "description": "Session info that includes debug session ID and the first transaction creation timestamp."
        }
      }
    },
    "GoogleCloudApigeeV1ListInstanceAttachmentsResponse": {
      "properties": {
        "attachments": {
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceAttachment"
          },
          "type": "array",
          "description": "Attachments for the instance."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token that you can include in a ListInstanceAttachments request to retrieve the next page of content. If omitted, no subsequent pages exist."
        }
      },
      "id": "GoogleCloudApigeeV1ListInstanceAttachmentsResponse",
      "description": "Response for ListInstanceAttachments.",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListDeveloperAppsResponse": {
      "properties": {
        "app": {
          "type": "array",
          "description": "List of developer apps and their credentials.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeveloperApp"
          }
        }
      },
      "id": "GoogleCloudApigeeV1ListDeveloperAppsResponse",
      "type": "object"
    },
    "GoogleCloudApigeeV1CanaryEvaluationMetricLabels": {
      "properties": {
        "instance_id": {
          "type": "string",
          "description": "Required. The instance ID associated with the metrics. In Apigee Hybrid, the value is configured during installation."
        },
        "location": {
          "type": "string",
          "description": "Required. The location associated with the metrics."
        },
        "env": {
          "type": "string",
          "description": "The environment ID associated with the metrics."
        }
      },
      "type": "object",
      "description": "Labels that can be used to filter Apigee metrics.",
      "id": "GoogleCloudApigeeV1CanaryEvaluationMetricLabels"
    },
    "GoogleCloudApigeeV1Point": {
      "id": "GoogleCloudApigeeV1Point",
      "description": "Point is a group of information collected by runtime plane at critical points of the message flow of the processed API request. This is a list of supported point IDs, categorized to three major buckets. For each category, debug points that we are currently supporting are listed below: - Flow status debug points: StateChange FlowInfo Condition Execution DebugMask Error - Flow control debug points: FlowCallout Paused Resumed FlowReturn BreakFlow Error - Runtime debug points: ScriptExecutor FlowCalloutStepDefinition CustomTarget StepDefinition Oauth2ServicePoint RaiseFault NodeJS The detail information of the given debug point is stored in a list of results.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of a step in the transaction."
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Result"
          },
          "description": "List of results extracted from a given debug point."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1GenerateDownloadUrlResponse": {
      "id": "GoogleCloudApigeeV1GenerateDownloadUrlResponse",
      "description": "Response for GenerateDownloadUrl method.",
      "properties": {
        "downloadUri": {
          "type": "string",
          "description": "The Google Cloud Storage signed URL that can be used to download the Archive zip file."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1Certificate": {
      "id": "GoogleCloudApigeeV1Certificate",
      "properties": {
        "certInfo": {
          "type": "array",
          "description": "Chain of certificates under this name.",
          "items": {
            "$ref": "GoogleCloudApigeeV1CertInfo"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ListRatePlansResponse": {
      "type": "object",
      "id": "GoogleCloudApigeeV1ListRatePlansResponse",
      "properties": {
        "ratePlans": {
          "description": "List of rate plans in an organization.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1RatePlan"
          }
        },
        "nextStartKey": {
          "type": "string",
          "description": "Value that can be sent as `startKey` to retrieve the next page of content. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response for ListRatePlans."
    },
    "GoogleCloudApigeeV1RevisionStatus": {
      "type": "object",
      "id": "GoogleCloudApigeeV1RevisionStatus",
      "description": "The status of a specific resource revision.",
      "properties": {
        "replicas": {
          "description": "The number of replicas that have successfully loaded this revision.",
          "format": "int32",
          "type": "integer"
        },
        "jsonSpec": {
          "description": "The json content of the resource revision. Large specs should be sent individually via the spec field to avoid hitting request size limits.",
          "type": "string"
        },
        "revisionId": {
          "description": "The revision of the resource.",
          "type": "string"
        },
        "errors": {
          "description": "Errors reported when attempting to load this revision.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1UpdateError"
          }
        }
      }
    },
    "GoogleIamV1Policy": {
      "id": "GoogleIamV1Policy",
      "properties": {
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "bindings": {
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array"
        },
        "auditConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "GoogleCloudApigeeV1ServiceIssuersMapping": {
      "type": "object",
      "id": "GoogleCloudApigeeV1ServiceIssuersMapping",
      "properties": {
        "service": {
          "description": "String indicating the Apigee service name.",
          "type": "string"
        },
        "emailIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of trusted issuer email ids."
        }
      }
    },
    "GoogleCloudApigeeV1ResourceFile": {
      "description": "Metadata about a resource file.",
      "type": "object",
      "properties": {
        "name": {
          "description": "ID of the resource file.",
          "type": "string"
        },
        "type": {
          "description": "Resource file type. {{ resource_file_type }}",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ResourceFile"
    },
    "GoogleCloudApigeeV1ResourceFiles": {
      "id": "GoogleCloudApigeeV1ResourceFiles",
      "properties": {
        "resourceFile": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceFile"
          },
          "description": "List of resource files.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "List of resource files."
    },
    "GoogleCloudApigeeV1RuntimeTraceConfigOverride": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the trace config override in the following format: `organizations/{org}/environment/{env}/traceConfig/overrides/{override}`"
        },
        "revisionId": {
          "type": "string",
          "description": "Revision number which can be used by the runtime to detect if the trace config override has changed between two versions."
        },
        "uid": {
          "description": "Unique ID for the configuration override. The ID will only change if the override is deleted and recreated. Corresponds to name's \"override\" field.",
          "type": "string"
        },
        "samplingConfig": {
          "$ref": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
          "description": "Trace configuration override for a specific API proxy in an environment."
        },
        "apiProxy": {
          "description": "Name of the API proxy that will have its trace configuration overridden following format: `organizations/{org}/apis/{api}`",
          "type": "string"
        },
        "revisionCreateTime": {
          "description": "The timestamp that the revision was created or updated.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudApigeeV1RuntimeTraceConfigOverride",
      "description": "NEXT ID: 7 Trace configuration override for a specific API proxy in an environment.",
      "type": "object"
    },
    "GoogleCloudApigeeV1DebugSessionTransaction": {
      "id": "GoogleCloudApigeeV1DebugSessionTransaction",
      "type": "object",
      "description": "A transaction contains all of the debug information of the entire message flow of an API call processed by the runtime plane. The information is collected and recorded at critical points of the message flow in the runtime apiproxy.",
      "properties": {
        "completed": {
          "type": "boolean",
          "description": "Flag indicating whether a transaction is completed or not"
        },
        "point": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Point"
          },
          "description": "List of debug data collected by runtime plane at various defined points in the flow.",
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1EnvironmentConfig": {
      "id": "GoogleCloudApigeeV1EnvironmentConfig",
      "type": "object",
      "properties": {
        "arcConfigLocation": {
          "description": "The location for the config blob of API Runtime Control, aka Envoy Adapter, for op-based authentication as a URI, e.g. a Cloud Storage URI. This is only used by Envoy-based gateways.",
          "type": "string"
        },
        "deployments": {
          "type": "array",
          "description": "List of deployments in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentConfig"
          }
        },
        "pubsubTopic": {
          "type": "string",
          "description": "Name of the PubSub topic for the environment."
        },
        "keystores": {
          "items": {
            "$ref": "GoogleCloudApigeeV1KeystoreConfig"
          },
          "description": "List of keystores in the environment.",
          "type": "array"
        },
        "uid": {
          "type": "string",
          "description": "Unique ID for the environment configuration. The ID will only change if the environment is deleted and recreated."
        },
        "sequenceNumber": {
          "description": "DEPRECATED: Use revision_id.",
          "format": "int64",
          "type": "string"
        },
        "traceConfig": {
          "description": "Trace configurations. Contains config for the environment and config overrides for specific API proxies.",
          "$ref": "GoogleCloudApigeeV1RuntimeTraceConfig"
        },
        "dataCollectors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1DataCollectorConfig"
          },
          "description": "List of data collectors used by the deployments in the environment."
        },
        "debugMask": {
          "$ref": "GoogleCloudApigeeV1DebugMask",
          "description": "Debug mask that applies to all deployments in the environment."
        },
        "provider": {
          "type": "string",
          "description": "Used by the Control plane to add context information to help detect the source of the document during diagnostics and debugging."
        },
        "targets": {
          "items": {
            "$ref": "GoogleCloudApigeeV1TargetServerConfig"
          },
          "type": "array",
          "description": "List of target servers in the environment. Disabled target servers are not displayed."
        },
        "revisionId": {
          "type": "string",
          "format": "int64",
          "description": "Revision ID of the environment configuration. The higher the value, the more recently the configuration was deployed."
        },
        "resourceReferences": {
          "type": "array",
          "description": "List of resource references in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ReferenceConfig"
          }
        },
        "featureFlags": {
          "description": "Feature flags inherited from the organization and environment.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Name of the environment configuration in the following format: `organizations/{org}/environments/{env}/configs/{config}`"
        },
        "flowhooks": {
          "description": "List of flow hooks in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1FlowHookConfig"
          },
          "type": "array"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time that the environment configuration was created."
        },
        "gatewayConfigLocation": {
          "type": "string",
          "description": "The location for the gateway config blob as a URI, e.g. a Cloud Storage URI. This is only used by Envoy-based gateways."
        },
        "resources": {
          "description": "List of resource versions in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceConfig"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1DataCollectorConfig": {
      "type": "object",
      "id": "GoogleCloudApigeeV1DataCollectorConfig",
      "description": "Data collector and its configuration.",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "For future compatibility.",
            "For integer values.",
            "For float values.",
            "For string values.",
            "For boolean values.",
            "For datetime values."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "INTEGER",
            "FLOAT",
            "STRING",
            "BOOLEAN",
            "DATETIME"
          ],
          "description": "Data type accepted by the data collector."
        },
        "name": {
          "type": "string",
          "description": "Name of the data collector in the following format: `organizations/{org}/datacollectors/{datacollector}`"
        }
      }
    },
    "GoogleCloudApigeeV1AsyncQueryResultView": {
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Metadata contains information like metrics, dimenstions etc of the AsyncQuery.",
          "$ref": "GoogleCloudApigeeV1QueryMetadata"
        },
        "error": {
          "type": "string",
          "description": "Error message when there is a failure."
        },
        "code": {
          "format": "int32",
          "description": "Error code when there is a failure.",
          "type": "integer"
        },
        "rows": {
          "items": {
            "type": "any"
          },
          "description": "Rows of query result. Each row is a JSON object. Example: {sum(message_count): 1, developer_app: \"(not set)\",…}",
          "type": "array"
        },
        "state": {
          "description": "State of retrieving ResultView.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1AsyncQueryResultView"
    },
    "GoogleCloudApigeeV1PodStatus": {
      "type": "object",
      "id": "GoogleCloudApigeeV1PodStatus",
      "properties": {
        "podName": {
          "description": "Name of the pod which is reporting the status.",
          "type": "string"
        },
        "podStatusTime": {
          "description": "Time the pod status was reported in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "deploymentStatus": {
          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment.",
          "type": "string"
        },
        "podStatus": {
          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output.",
          "type": "string"
        },
        "deploymentTime": {
          "type": "string",
          "format": "int64",
          "description": "Time the proxy was deployed in milliseconds since epoch."
        },
        "appVersion": {
          "type": "string",
          "description": "Version of the application running in the pod."
        },
        "statusCode": {
          "type": "string",
          "description": "Code associated with the deployment status."
        },
        "deploymentStatusTime": {
          "format": "int64",
          "description": "Time the deployment status was reported in milliseconds since epoch.",
          "type": "string"
        },
        "statusCodeDetails": {
          "type": "string",
          "description": "Human-readable message associated with the status code."
        }
      }
    },
    "GoogleCloudApigeeV1Property": {
      "properties": {
        "value": {
          "description": "The property value",
          "type": "string"
        },
        "name": {
          "description": "The property key",
          "type": "string"
        }
      },
      "description": "A single property entry in the Properties message.",
      "type": "object",
      "id": "GoogleCloudApigeeV1Property"
    },
    "GoogleCloudApigeeV1Schema": {
      "description": "Response for Schema call",
      "type": "object",
      "properties": {
        "metrics": {
          "items": {
            "$ref": "GoogleCloudApigeeV1SchemaSchemaElement"
          },
          "type": "array",
          "description": "List of schema fields grouped as dimensions that can be used with an aggregate function such as `sum`, `avg`, `min`, and `max`."
        },
        "dimensions": {
          "description": "List of schema fields grouped as dimensions.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1SchemaSchemaElement"
          }
        },
        "meta": {
          "items": {
            "type": "string"
          },
          "description": "Additional metadata associated with schema. This is a legacy field and usually consists of an empty array of strings.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Schema"
    },
    "GoogleApiHttpBody": {
      "type": "object",
      "id": "GoogleApiHttpBody",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        },
        "extensions": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
        },
        "data": {
          "description": "The HTTP request/response body as raw binary.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged."
    },
    "GoogleCloudApigeeV1DataCollector": {
      "id": "GoogleCloudApigeeV1DataCollector",
      "description": "Data collector configuration.",
      "properties": {
        "lastModifiedAt": {
          "description": "Output only. The time at which the Data Collector was last updated in milliseconds since the epoch.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "ID of the data collector. Must begin with `dc_`."
        },
        "type": {
          "description": "Immutable. The type of data this data collector will collect.",
          "enumDescriptions": [
            "For future compatibility.",
            "For integer values.",
            "For float values.",
            "For string values.",
            "For boolean values.",
            "For datetime values."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "INTEGER",
            "FLOAT",
            "STRING",
            "BOOLEAN",
            "DATETIME"
          ],
          "type": "string"
        },
        "createdAt": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. The time at which the data collector was created in milliseconds since the epoch."
        },
        "description": {
          "type": "string",
          "description": "A description of the data collector."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1GenerateUploadUrlRequest": {
      "description": "Request for GenerateUploadUrl method.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudApigeeV1GenerateUploadUrlRequest"
    },
    "GoogleCloudApigeeV1OperationMetadataProgress": {
      "description": "Information about operation progress.",
      "type": "object",
      "id": "GoogleCloudApigeeV1OperationMetadataProgress",
      "properties": {
        "percentDone": {
          "type": "integer",
          "description": "The percentage of the operation progress.",
          "format": "int32"
        },
        "description": {
          "type": "string",
          "description": "Description of the operation's progress."
        },
        "details": {
          "description": "The additional details of the progress.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "state": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "State of the operation.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "IN_PROGRESS",
            "FINISHED"
          ]
        }
      }
    },
    "GoogleIamV1Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "GoogleIamV1Binding",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "GoogleTypeExpr"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1DeveloperBalance": {
      "type": "object",
      "description": "Account balance for the developer.",
      "id": "GoogleCloudApigeeV1DeveloperBalance",
      "properties": {
        "wallets": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. List of all wallets. Each individual wallet stores the account balance for a particular currency.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeveloperBalanceWallet"
          }
        }
      }
    },
    "GoogleCloudApigeeV1ReferenceConfig": {
      "type": "object",
      "id": "GoogleCloudApigeeV1ReferenceConfig",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Name of the referenced resource in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` Only references to keystore resources are supported."
        },
        "name": {
          "description": "Name of the reference in the following format: `organizations/{org}/environments/{env}/references/{reference}`",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1EnvironmentGroupConfig": {
      "description": "EnvironmentGroupConfig is a revisioned snapshot of an EnvironmentGroup and its associated routing rules.",
      "type": "object",
      "properties": {
        "routingRules": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1RoutingRule"
          },
          "description": "Ordered list of routing rules defining how traffic to this environment group's hostnames should be routed to different environments."
        },
        "revisionId": {
          "type": "string",
          "description": "Revision id that defines the ordering of the EnvironmentGroupConfig resource. The higher the revision, the more recently the configuration was deployed.",
          "format": "int64"
        },
        "name": {
          "description": "Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`.",
          "type": "string"
        },
        "hostnames": {
          "items": {
            "type": "string"
          },
          "description": "Host names for the environment group.",
          "type": "array"
        },
        "uid": {
          "type": "string",
          "description": "A unique id for the environment group config that will only change if the environment group is deleted and recreated."
        }
      },
      "id": "GoogleCloudApigeeV1EnvironmentGroupConfig"
    },
    "GoogleCloudApigeeV1Datastore": {
      "id": "GoogleCloudApigeeV1Datastore",
      "description": "The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository.",
      "properties": {
        "displayName": {
          "description": "Required. Display name in UI",
          "type": "string"
        },
        "targetType": {
          "description": "Destination storage type. Supported types `gcs` or `bigquery`.",
          "type": "string"
        },
        "self": {
          "description": "Output only. Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z",
          "format": "int64"
        },
        "org": {
          "description": "Output only. Organization that the datastore belongs to",
          "type": "string",
          "readOnly": true
        },
        "lastUpdateTime": {
          "type": "string",
          "description": "Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z",
          "format": "int64",
          "readOnly": true
        },
        "datastoreConfig": {
          "description": "Datastore Configurations.",
          "$ref": "GoogleCloudApigeeV1DatastoreConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ApiCategory": {
      "description": "the Api category resource wrapped with response status, error_code etc.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the operation.",
          "type": "string"
        },
        "data": {
          "$ref": "GoogleCloudApigeeV1ApiCategoryData",
          "description": "Details of category."
        },
        "requestId": {
          "type": "string",
          "description": "ID that can be used to find request details in the log files."
        },
        "errorCode": {
          "type": "string",
          "description": "ID that can be used to find errors in the log files."
        },
        "message": {
          "type": "string",
          "description": "Description of the operation."
        }
      },
      "id": "GoogleCloudApigeeV1ApiCategory"
    },
    "GoogleCloudApigeeV1ArchiveDeployment": {
      "description": "Archive Deployment information.",
      "properties": {
        "gcsUri": {
          "description": "Input only. The Google Cloud Storage signed URL returned from GenerateUploadUrl and used to upload the Archive zip file.",
          "type": "string"
        },
        "labels": {
          "description": "User-supplied key-value pairs used to organize ArchiveDeployments. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updatedAt": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The time at which the Archive Deployment was updated in milliseconds since the epoch.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.",
          "type": "string"
        },
        "operation": {
          "type": "string",
          "description": "Output only. A reference to the LRO that created this Archive Deployment in the following format: `organizations/{org}/operations/{id}`",
          "readOnly": true
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The time at which the Archive Deployment was created in milliseconds since the epoch.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudApigeeV1ArchiveDeployment",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListInstancesResponse": {
      "type": "object",
      "id": "GoogleCloudApigeeV1ListInstancesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token that you can include in a ListInstance request to retrieve the next page of content. If omitted, no subsequent pages exist."
        },
        "instances": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Instance"
          },
          "description": "Instances in the specified organization."
        }
      },
      "description": "Response for ListInstances."
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "id": "GoogleIamV1SetIamPolicyRequest",
      "properties": {
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      }
    },
    "GoogleCloudApigeeV1AccessRemove": {
      "description": "Remove action. For example, \"Remove\" : { \"name\" : \"target.name\", \"success\" : true }",
      "id": "GoogleCloudApigeeV1AccessRemove",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1Metadata": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of error messages as strings."
        },
        "notices": {
          "description": "List of additional information such as data source, if result was truncated. For example: ``` \"notices\": [ \"Source:Postgres\", \"PG Host:uappg0rw.e2e.apigeeks.net\", \"query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed\", \"Table used: edge.api.uapgroup2.agg_api\" ]```",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Metadata",
      "type": "object",
      "description": "Encapsulates additional information about query execution."
    },
    "GoogleCloudApigeeV1Credential": {
      "id": "GoogleCloudApigeeV1Credential",
      "properties": {
        "attributes": {
          "description": "List of attributes associated with this credential.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "status": {
          "description": "Status of the credential. Valid values include `approved` or `revoked`.",
          "type": "string"
        },
        "consumerSecret": {
          "type": "string",
          "description": "Secret key."
        },
        "consumerKey": {
          "type": "string",
          "description": "Consumer key."
        },
        "expiresAt": {
          "description": "Time the credential will expire in milliseconds since epoch.",
          "format": "int64",
          "type": "string"
        },
        "issuedAt": {
          "description": "Time the credential was issued in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "apiProducts": {
          "description": "List of API products this credential can be used for.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProductRef"
          }
        },
        "scopes": {
          "type": "array",
          "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ListApiCategoriesResponse": {
      "description": "the response for ListApiCategoriesRequest.",
      "type": "object",
      "id": "GoogleCloudApigeeV1ListApiCategoriesResponse",
      "properties": {
        "data": {
          "description": "Details of categories.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiCategoryData"
          }
        },
        "message": {
          "description": "Description of the operation.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Status of the operation."
        },
        "errorCode": {
          "description": "ID that can be used to find errors in the log files.",
          "type": "string"
        },
        "requestId": {
          "type": "string",
          "description": "ID that can be used to find request details in the log files."
        }
      }
    },
    "GoogleCloudApigeeV1AliasRevisionConfig": {
      "id": "GoogleCloudApigeeV1AliasRevisionConfig",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Alias type is not specified.",
            "Certificate.",
            "Key/certificate pair."
          ],
          "enum": [
            "ALIAS_TYPE_UNSPECIFIED",
            "CERT",
            "KEY_CERT"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the alias revision included in the keystore in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}/revisions/{rev}`"
        },
        "location": {
          "type": "string",
          "description": "Location of the alias file. For example, a Google Cloud Storage URI."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1TraceSamplingConfig": {
      "properties": {
        "sampler": {
          "enum": [
            "SAMPLER_UNSPECIFIED",
            "OFF",
            "PROBABILITY"
          ],
          "description": "Sampler of distributed tracing. OFF is the default value.",
          "type": "string",
          "enumDescriptions": [
            "Sampler unspecified.",
            "OFF means distributed trace is disabled, or the sampling probability is 0.",
            "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
          ]
        },
        "samplingRate": {
          "type": "number",
          "description": "Field sampling rate. This value is only applicable when using the PROBABILITY sampler. The supported values are \u003e 0 and \u003c= 0.5.",
          "format": "float"
        }
      },
      "id": "GoogleCloudApigeeV1TraceSamplingConfig",
      "description": "TraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.",
      "type": "object"
    },
    "GoogleCloudApigeeV1TraceConfigOverride": {
      "properties": {
        "apiProxy": {
          "description": "ID of the API proxy that will have its trace configuration overridden.",
          "type": "string"
        },
        "samplingConfig": {
          "$ref": "GoogleCloudApigeeV1TraceSamplingConfig",
          "description": "Trace configuration to override."
        },
        "name": {
          "type": "string",
          "description": "ID of the trace configuration override specified as a system-generated UUID."
        }
      },
      "id": "GoogleCloudApigeeV1TraceConfigOverride",
      "description": "A representation of a configuration override.",
      "type": "object"
    },
    "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange": {
      "type": "object",
      "description": "Describes a potential routing change that may occur as a result of some deployment operation.",
      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange",
      "properties": {
        "toDeployment": {
          "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
          "description": "Base path/deployment that may start receiving that traffic. May be null if no deployment is able to receive the traffic."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this routing change."
        },
        "environmentGroup": {
          "description": "Name of the environment group affected by this routing change.",
          "type": "string"
        },
        "fromDeployment": {
          "description": "Base path/deployment that may stop receiving some traffic.",
          "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment"
        },
        "shouldSequenceRollout": {
          "description": "Set to `true` if using sequenced rollout would make this routing change safer. **Note**: This does not necessarily imply that automated sequenced rollout mode is supported for the operation.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudApigeeV1SchemaSchemaElement": {
      "type": "object",
      "description": "Message type for the schema element",
      "id": "GoogleCloudApigeeV1SchemaSchemaElement",
      "properties": {
        "properties": {
          "description": "Properties for the schema field. For example: { \"createTime\": \"2016-02-26T10:23:09.592Z\", \"custom\": \"false\", \"type\": \"string\" }",
          "$ref": "GoogleCloudApigeeV1SchemaSchemaProperty"
        },
        "name": {
          "type": "string",
          "description": "Name of the field."
        }
      }
    },
    "GoogleCloudApigeeV1ReportInstanceStatusResponse": {
      "id": "GoogleCloudApigeeV1ReportInstanceStatusResponse",
      "description": "Placeholder for future enhancements to status reporting protocol",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudApigeeV1ApiProxyRevision": {
      "description": "API proxy revision.",
      "properties": {
        "basepaths": {
          "type": "array",
          "description": "Base URL of the API proxy.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Type. Set to `Application`. Maintained for compatibility with the Apigee Edge API.",
          "type": "string"
        },
        "configurationVersion": {
          "$ref": "GoogleCloudApigeeV1ConfigVersion",
          "description": "Version of the API proxy configuration schema to which the API proxy conforms. Currently, the only supported value is 4.0 (`majorVersion.minorVersion`). This setting may be used in the future to track the evolution of the API proxy format."
        },
        "proxyEndpoints": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of ProxyEndpoints in the `/proxies` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
        },
        "name": {
          "type": "string",
          "description": "Name of the API proxy."
        },
        "spec": {
          "type": "string",
          "description": "OpenAPI Specification that is associated with the API proxy. The value is set to a URL or to a path in the specification store."
        },
        "targetEndpoints": {
          "type": "array",
          "description": "List of TargetEndpoints in the `/targets` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.",
          "items": {
            "type": "string"
          }
        },
        "targets": {
          "type": "array",
          "description": "List of the targets included in the API proxy revision.",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of the resources included in the API proxy revision formatted as \"{type}://{name}\"."
        },
        "displayName": {
          "description": "Human-readable name of the API proxy.",
          "type": "string"
        },
        "revision": {
          "type": "string",
          "description": "API proxy revision."
        },
        "entityMetaDataAsProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata describing the API proxy revision as a key-value map."
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of the teams included in the API proxy revision."
        },
        "integrationEndpoints": {
          "type": "array",
          "description": "List of IntegrationEndpoints in the '/integration-endpoints' directory of the API proxy. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.",
          "items": {
            "type": "string"
          }
        },
        "archive": {
          "readOnly": true,
          "description": "Output only. The archive that generated this proxy revision. This field is only present on proxy revisions that were generated by an archive. Proxies generated by archives cannot be updated, deleted, or deployed to other environments. Format: `organizations/*/environments/*/archiveDeployments/*`",
          "type": "string"
        },
        "sharedFlows": {
          "description": "List of the shared flows included in the API proxy revision.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceFiles": {
          "$ref": "GoogleCloudApigeeV1ResourceFiles",
          "description": "List of resource files included in the API proxy revision."
        },
        "policies": {
          "type": "array",
          "description": "List of policy names included in the API proxy revision..",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "description": "Time that the API proxy revision was created in milliseconds since epoch."
        },
        "description": {
          "type": "string",
          "description": "Description of the API proxy revision."
        },
        "targetServers": {
          "description": "List of TargetServers referenced in any TargetEndpoint in the API proxy. Typically, you will see this element only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contextInfo": {
          "type": "string",
          "description": "Revision number, app name, and organization for the API proxy."
        },
        "proxies": {
          "description": "List of proxy names included in the API proxy revision.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedAt": {
          "format": "int64",
          "type": "string",
          "description": "Time that the API proxy revision was last modified in milliseconds since epoch."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ApiProxyRevision"
    },
    "GoogleCloudApigeeV1DebugSession": {
      "id": "GoogleCloudApigeeV1DebugSession",
      "properties": {
        "validity": {
          "format": "int32",
          "description": "Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10.",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "A unique ID for this DebugSession."
        },
        "createTime": {
          "description": "Output only. The first transaction creation timestamp, recorded by UAP.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "timeout": {
          "type": "string",
          "description": "Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided.",
          "format": "int64"
        },
        "count": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10."
        },
        "filter": {
          "type": "string",
          "description": "Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition."
        },
        "tracesize": {
          "type": "integer",
          "description": "Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1App": {
      "type": "object",
      "id": "GoogleCloudApigeeV1App",
      "properties": {
        "lastModifiedAt": {
          "readOnly": true,
          "type": "string",
          "format": "int64",
          "description": "Output only. Last modified time as milliseconds since epoch."
        },
        "credentials": {
          "readOnly": true,
          "description": "Output only. Set of credentials for the app. Credentials are API key/secret pairs associated with API products.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Credential"
          }
        },
        "callbackUrl": {
          "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to apps.",
          "type": "string"
        },
        "scopes": {
          "description": "Scopes to apply to the app. The specified scope names must already exist on the API product that you associate with the app.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Name of the app."
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Output only. Unix time when the app was created.",
          "readOnly": true
        },
        "companyName": {
          "description": "Name of the company that owns the app.",
          "type": "string"
        },
        "appId": {
          "type": "string",
          "description": "ID of the app."
        },
        "developerId": {
          "description": "ID of the developer.",
          "type": "string"
        },
        "attributes": {
          "description": "List of attributes.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "status": {
          "type": "string",
          "description": "Status of the credential."
        },
        "apiProducts": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProductRef"
          },
          "description": "List of API products associated with the app.",
          "type": "array"
        },
        "keyExpiresIn": {
          "description": "Duration, in milliseconds, of the consumer key that will be generated for the app. The default value, -1, indicates an infinite validity period. Once set, the expiration can't be updated. json key: keyExpiresIn",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudApigeeV1ListArchiveDeploymentsResponse": {
      "properties": {
        "archiveDeployments": {
          "type": "array",
          "description": "Archive Deployments in the specified environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ArchiveDeployment"
          }
        },
        "nextPageToken": {
          "description": "Page token that you can include in a ListArchiveDeployments request to retrieve the next page. If omitted, no subsequent pages exist.",
          "type": "string"
        }
      },
      "description": "Response for ListArchiveDeployments method.",
      "id": "GoogleCloudApigeeV1ListArchiveDeploymentsResponse",
      "type": "object"
    },
    "GoogleCloudApigeeV1CanaryEvaluation": {
      "type": "object",
      "description": "CanaryEvaluation represents the canary analysis between two versions of the runtime that is serving requests.",
      "id": "GoogleCloudApigeeV1CanaryEvaluation",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Create time of the canary evaluation.",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "Required. Start time for the canary evaluation's analysis.",
          "type": "string"
        },
        "metricLabels": {
          "$ref": "GoogleCloudApigeeV1CanaryEvaluationMetricLabels",
          "description": "Required. Labels used to filter the metrics used for a canary evaluation."
        },
        "verdict": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "VERDICT_UNSPECIFIED",
            "NONE",
            "FAIL",
            "PASS"
          ],
          "description": "Output only. The resulting verdict of the canary evaluations: NONE, PASS, or FAIL.",
          "enumDescriptions": [
            "Verdict is not available yet.",
            "No verdict reached.",
            "Evaluation is not good.",
            "Evaluation is good."
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "SUCCEEDED"
          ],
          "description": "Output only. The current state of the canary evaluation.",
          "readOnly": true,
          "enumDescriptions": [
            "No state has been specified.",
            "The canary evaluation is still in progress.",
            "The canary evaluation has finished."
          ]
        },
        "control": {
          "description": "Required. The stable version that is serving requests.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of the canary evalution.",
          "type": "string"
        },
        "endTime": {
          "description": "Required. End time for the evaluation's analysis.",
          "format": "google-datetime",
          "type": "string"
        },
        "treatment": {
          "type": "string",
          "description": "Required. The newer version that is serving requests."
        }
      }
    },
    "GoogleCloudApigeeV1Result": {
      "properties": {
        "accessList": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Access"
          },
          "description": "A list of variable access actions agaist the api proxy. Supported values: Get, Set, Remove."
        },
        "timestamp": {
          "description": "Timestamp of when the result is recorded. Its format is dd-mm-yy hh:mm:ss:xxx. For example, `\"timestamp\" : \"12-08-19 00:31:59:960\"`",
          "type": "string"
        },
        "ActionResult": {
          "description": "Type of the action result. Can be one of the five: DebugInfo, RequestMessage, ResponseMessage, ErrorMessage, VariableAccess",
          "type": "string"
        },
        "reasonPhrase": {
          "type": "string",
          "description": "HTTP response phrase"
        },
        "properties": {
          "description": "Name value pairs used for DebugInfo ActionResult.",
          "$ref": "GoogleCloudApigeeV1Properties"
        },
        "statusCode": {
          "type": "string",
          "description": "HTTP response code"
        },
        "content": {
          "type": "string",
          "description": "Error message content. for example, \"content\" : \"{\\\"fault\\\":{\\\"faultstring\\\":\\\"API timed out\\\",\\\"detail\\\":{\\\"errorcode\\\":\\\"flow.APITimedOut\\\"}}}\""
        },
        "uRI": {
          "description": "The relative path of the api proxy. for example, `\"uRI\" : \"/iloveapis\"`",
          "type": "string"
        },
        "verb": {
          "description": "HTTP method verb",
          "type": "string"
        },
        "headers": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Property"
          },
          "description": "A list of HTTP headers. for example, '\"headers\" : [ { \"name\" : \"Content-Length\", \"value\" : \"83\" }, { \"name\" : \"Content-Type\", \"value\" : \"application/json\" } ]'",
          "type": "array"
        }
      },
      "description": "Result is short for \"action result\", could be different types identified by \"action_result\" field. Supported types: 1. DebugInfo : generic debug info collected by runtime recorded as a list of properties. For example, the contents could be virtual host info, state change result, or execution metadata. Required fields : properties, timestamp 2. RequestMessage: information of a http request. Contains headers, request URI and http methods type.Required fields : headers, uri, verb 3. ResponseMessage: information of a http response. Contains headers, reason phrase and http status code. Required fields : headers, reasonPhrase, statusCode 4. ErrorMessage: information of a http error message. Contains detail error message, reason phrase and status code. Required fields : content, headers, reasonPhrase, statusCode 5. VariableAccess: a list of variable access actions, can be Get, Set and Remove. Required fields : accessList",
      "type": "object",
      "id": "GoogleCloudApigeeV1Result"
    },
    "GoogleCloudApigeeV1DeveloperApp": {
      "type": "object",
      "properties": {
        "credentials": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudApigeeV1Credential"
          },
          "description": "Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products."
        },
        "keyExpiresIn": {
          "type": "string",
          "description": "Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set.",
          "format": "int64"
        },
        "name": {
          "description": "Name of the developer app.",
          "type": "string"
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps."
        },
        "status": {
          "description": "Status of the credential. Valid values include `approved` or `revoked`.",
          "type": "string"
        },
        "appFamily": {
          "description": "Developer app family.",
          "type": "string"
        },
        "apiProducts": {
          "description": "List of API products associated with the developer app.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time the developer app was modified in milliseconds since epoch.",
          "format": "int64"
        },
        "developerId": {
          "description": "ID of the developer.",
          "type": "string"
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "description": "List of attributes for the developer app.",
          "type": "array"
        },
        "scopes": {
          "description": "Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appId": {
          "type": "string",
          "description": "ID of the developer app."
        },
        "createdAt": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Time the developer app was created in milliseconds since epoch."
        }
      },
      "id": "GoogleCloudApigeeV1DeveloperApp"
    },
    "GoogleCloudApigeeV1ReportInstanceStatusRequest": {
      "type": "object",
      "description": "Request for ReportInstanceStatus.",
      "properties": {
        "instanceUid": {
          "description": "A unique ID for the instance which is guaranteed to be unique in case the user installs multiple hybrid runtimes with the same instance ID.",
          "type": "string"
        },
        "reportTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time the report was generated in the runtime. Used to prevent an old status from overwriting a newer one. An instance should space out it's status reports so that clock skew does not play a factor."
        },
        "resources": {
          "description": "Status for config resources",
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceStatus"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ReportInstanceStatusRequest"
    },
    "GoogleCloudApigeeV1DeploymentConfig": {
      "id": "GoogleCloudApigeeV1DeploymentConfig",
      "type": "object",
      "description": "NEXT ID: 9",
      "properties": {
        "proxyUid": {
          "type": "string",
          "description": "Unique ID of the API proxy revision."
        },
        "serviceAccount": {
          "description": "The service account identity associated with this deployment. If non-empty, will be in the following format: `projects/-/serviceAccounts/{account_email}`",
          "type": "string"
        },
        "attributes": {
          "description": "Additional key-value metadata for the deployment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the API or shared flow revision to be deployed in the following format: `organizations/{org}/apis/{api}/revisions/{rev}` or `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`",
          "type": "string"
        },
        "location": {
          "description": "Location of the API proxy bundle as a URI.",
          "type": "string"
        },
        "basePath": {
          "type": "string",
          "description": "Base path where the application will be hosted. Defaults to \"/\"."
        },
        "uid": {
          "description": "Unique ID. The ID will only change if the deployment is deleted and recreated.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Environment": {
      "properties": {
        "name": {
          "description": "Required. Name of the environment. Values must match the regular expression `^[.\\\\p{Alnum}-_]{1,255}$`",
          "type": "string"
        },
        "properties": {
          "description": "Optional. Key-value pairs that may be used for customizing the environment.",
          "$ref": "GoogleCloudApigeeV1Properties"
        },
        "createdAt": {
          "readOnly": true,
          "description": "Output only. Creation time of this environment as milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "deploymentType": {
          "enum": [
            "DEPLOYMENT_TYPE_UNSPECIFIED",
            "PROXY",
            "ARCHIVE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment type not specified.",
            "Proxy deployment enables you to develop and deploy API proxies using Apigee on Google Cloud. This cannot currently be combined with the CONFIGURABLE API proxy type.",
            "Archive deployment enables you to develop API proxies locally then deploy an archive of your API proxy configuration to an environment in Apigee on Google Cloud. You will be prevented from performing a [subset of actions](/apigee/docs/api-platform/local-development/overview#prevented-actions) within the environment."
          ],
          "description": "Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and cannot be changed. When you enable archive deployment, you will be **prevented from performing** a [subset of actions](/apigee/docs/api-platform/local-development/overview#prevented-actions) within the environment, including: * Managing the deployment of API proxy or shared flow revisions * Creating, updating, or deleting resource files * Creating, updating, or deleting target servers"
        },
        "state": {
          "description": "Output only. State of the environment. Values other than ACTIVE means the resource is not ready to use.",
          "enumDescriptions": [
            "Resource is in an unspecified state.",
            "Resource is being created.",
            "Resource is provisioned and ready to use.",
            "The resource is being deleted.",
            "The resource is being updated."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "UPDATING"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Display name for this environment."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the environment."
        },
        "apiProxyType": {
          "description": "Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be changed.",
          "enumDescriptions": [
            "API proxy type not specified.",
            "Programmable API Proxies enable you to develop APIs with highly flexible behavior using bundled policy configuration and one or more programming languages to describe complex sequential and/or conditional flows of logic.",
            "Configurable API Proxies enable you to develop efficient APIs using simple configuration while complex execution control flow logic is handled by Apigee. This type only works with the ARCHIVE deployment type and cannot be combined with the PROXY deployment type."
          ],
          "enum": [
            "API_PROXY_TYPE_UNSPECIFIED",
            "PROGRAMMABLE",
            "CONFIGURABLE"
          ],
          "type": "string"
        },
        "lastModifiedAt": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Last modification time of this environment as milliseconds since epoch."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1Environment"
    },
    "GoogleCloudApigeeV1AsyncQueryResult": {
      "id": "GoogleCloudApigeeV1AsyncQueryResult",
      "type": "object",
      "properties": {
        "expires": {
          "type": "string",
          "description": "Query result will be unaccessable after this time."
        },
        "self": {
          "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Query": {
      "type": "object",
      "properties": {
        "outputFormat": {
          "description": "Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.",
          "type": "string"
        },
        "limit": {
          "format": "int32",
          "description": "Maximum number of rows that can be returned in the result.",
          "type": "integer"
        },
        "reportDefinitionId": {
          "type": "string",
          "description": "Asynchronous Report ID."
        },
        "groupByTimeUnit": {
          "description": "Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.",
          "type": "string"
        },
        "envgroupHostname": {
          "type": "string",
          "description": "Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname."
        },
        "metrics": {
          "items": {
            "$ref": "GoogleCloudApigeeV1QueryMetric"
          },
          "description": "A list of Metrics.",
          "type": "array"
        },
        "timeRange": {
          "type": "any",
          "description": "Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: \"timeRange\": { \"start\": \"2018-07-29T00:13:00Z\", \"end\": \"2018-08-01T00:18:00Z\" }"
        },
        "name": {
          "description": "Asynchronous Query Name.",
          "type": "string"
        },
        "filter": {
          "description": "Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax",
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "description": "A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions",
          "items": {
            "type": "string"
          }
        },
        "csvDelimiter": {
          "description": "Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\\t`).",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Query"
    },
    "GoogleCloudApigeeV1Keystore": {
      "properties": {
        "name": {
          "description": "Required. Resource ID for this keystore. Values must match the regular expression `[\\w[:space:]-.]{1,255}`.",
          "type": "string"
        },
        "aliases": {
          "description": "Output only. Aliases in this keystore.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudApigeeV1Keystore",
      "description": "Datastore for Certificates and Aliases.",
      "type": "object"
    },
    "GoogleCloudApigeeV1Alias": {
      "description": "Reference to a certificate or key/certificate pair.",
      "id": "GoogleCloudApigeeV1Alias",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "ALIAS_TYPE_UNSPECIFIED",
            "CERT",
            "KEY_CERT"
          ],
          "description": "Type of alias.",
          "enumDescriptions": [
            "Alias type is not specified.",
            "Certificate.",
            "Key/certificate pair."
          ],
          "type": "string"
        },
        "alias": {
          "description": "Resource ID for this alias. Values must match the regular expression `[^/]{1,255}`.",
          "type": "string"
        },
        "certsInfo": {
          "description": "Chain of certificates under this alias.",
          "$ref": "GoogleCloudApigeeV1Certificate"
        }
      }
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "GoogleCloudApigeeV1RatePlan": {
      "properties": {
        "revenueShareRates": {
          "type": "array",
          "description": "Details of the revenue sharing model.",
          "items": {
            "$ref": "GoogleCloudApigeeV1RevenueShareRange"
          }
        },
        "setupFee": {
          "description": "Initial, one-time fee paid when purchasing the API product.",
          "$ref": "GoogleTypeMoney"
        },
        "startTime": {
          "description": "Time when the rate plan becomes active in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the rate plan."
        },
        "endTime": {
          "type": "string",
          "description": "Time when the rate plan will expire in milliseconds since epoch. Set to 0 or `null` to indicate that the rate plan should never expire.",
          "format": "int64"
        },
        "createdAt": {
          "description": "Output only. Time that the rate plan was created in milliseconds since epoch.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "paymentFundingModel": {
          "type": "string",
          "enumDescriptions": [
            "Billing account type not specified.",
            "Prepaid billing account type. Developer pays in advance for the use of your API products. Funds are deducted from their prepaid account balance. **Note**: Not supported by Apigee at this time.",
            "Postpaid billing account type. Developer is billed through an invoice after using your API products."
          ],
          "enum": [
            "PAYMENT_FUNDING_MODEL_UNSPECIFIED",
            "PREPAID",
            "POSTPAID"
          ],
          "description": "DEPRECATED: This field is no longer supported and will eventually be removed when Apigee Hybrid 1.5/1.6 is no longer supported. Instead, use the `billingType` field inside `DeveloperMonetizationConfig` resource. Flag that specifies the billing account type, prepaid or postpaid."
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency to be used for billing. Consists of a three-letter code as defined by the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) standard."
        },
        "consumptionPricingType": {
          "description": "Pricing model used for consumption-based charges.",
          "enumDescriptions": [
            "Pricing model not specified. This is the default.",
            "Fixed rate charged for each API call.",
            "Variable rate charged for each API call based on price tiers. Example: * 1-100 calls cost $2 per call * 101-200 calls cost $1.50 per call * 201-300 calls cost $1 per call * Total price for 50 calls: 50 x $2 = $100 * Total price for 150 calls: 100 x $2 + 50 x $1.5 = $275 * Total price for 250 calls: 100 x $2 + 100 x $1.5 + 50 x $1 = $400. **Note**: Not supported by Apigee at this time.",
            "**Note**: Not supported by Apigee at this time.",
            "**Note**: Not supported by Apigee at this time."
          ],
          "type": "string",
          "enum": [
            "CONSUMPTION_PRICING_TYPE_UNSPECIFIED",
            "FIXED_PER_UNIT",
            "BANDED",
            "TIERED",
            "STAIRSTEP"
          ]
        },
        "fixedRecurringFee": {
          "description": "Fixed amount that is charged at a defined interval and billed in advance of use of the API product. The fee will be prorated for the first billing period.",
          "$ref": "GoogleTypeMoney"
        },
        "apiproduct": {
          "type": "string",
          "description": "Name of the API product that the rate plan is associated with."
        },
        "revenueShareType": {
          "type": "string",
          "enumDescriptions": [
            "Revenue share type is not specified.",
            "Fixed percentage of the total revenue will be shared. The percentage to be shared can be configured by the API provider.",
            "Amount of revenue shared depends on the number of API calls. The API call volume ranges and the revenue share percentage for each volume can be configured by the API provider. **Note**: Not supported by Apigee at this time."
          ],
          "enum": [
            "REVENUE_SHARE_TYPE_UNSPECIFIED",
            "FIXED",
            "VOLUME_BANDED"
          ],
          "description": "Method used to calculate the revenue that is shared with developers."
        },
        "billingPeriod": {
          "enumDescriptions": [
            "Billing period not specified.",
            "Weekly billing period. **Note**: Not supported by Apigee at this time.",
            "Monthly billing period."
          ],
          "description": "Frequency at which the customer will be billed.",
          "enum": [
            "BILLING_PERIOD_UNSPECIFIED",
            "WEEKLY",
            "MONTHLY"
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "PUBLISHED"
          ],
          "enumDescriptions": [
            "State of the rate plan is not specified.",
            "Rate plan is in draft mode and only visible to API providers.",
            "Rate plan is published and will become visible to developers for the configured duration (between `startTime` and `endTime`)."
          ],
          "description": "Current state of the rate plan (draft or published).",
          "type": "string"
        },
        "description": {
          "description": "Description of the rate plan.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of the rate plan.",
          "type": "string"
        },
        "consumptionPricingRates": {
          "items": {
            "$ref": "GoogleCloudApigeeV1RateRange"
          },
          "type": "array",
          "description": "API call volume ranges and the fees charged when the total number of API calls is within a given range. The method used to calculate the final fee depends on the selected pricing model. For example, if the pricing model is `STAIRSTEP` and the ranges are defined as follows: ``` { \"start\": 1, \"end\": 100, \"fee\": 75 }, { \"start\": 101, \"end\": 200, \"fee\": 100 }, } ``` Then the following fees would be charged based on the total number of API calls (assuming the currency selected is `USD`): * 1 call costs $75 * 50 calls cost $75 * 150 calls cost $100 The number of API calls cannot exceed 200."
        },
        "lastModifiedAt": {
          "description": "Output only. Time the rate plan was last modified in milliseconds since epoch.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        },
        "fixedFeeFrequency": {
          "type": "integer",
          "format": "int32",
          "description": "Frequency at which the fixed fee is charged."
        }
      },
      "type": "object",
      "description": "Rate plan details.",
      "id": "GoogleCloudApigeeV1RatePlan"
    },
    "GoogleCloudApigeeV1SharedFlowRevision": {
      "type": "object",
      "id": "GoogleCloudApigeeV1SharedFlowRevision",
      "description": "The metadata describing a shared flow revision.",
      "properties": {
        "displayName": {
          "description": "The human readable name of this shared flow.",
          "type": "string"
        },
        "entityMetaDataAsProperties": {
          "type": "object",
          "description": "A Key-Value map of metadata about this shared flow revision.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the resources included in this shared flow revision formatted as \"{type}://{name}\"."
        },
        "configurationVersion": {
          "description": "The version of the configuration schema to which this shared flow conforms. The only supported value currently is majorVersion 4 and minorVersion 0. This setting may be used in the future to enable evolution of the shared flow format.",
          "$ref": "GoogleCloudApigeeV1ConfigVersion"
        },
        "resourceFiles": {
          "$ref": "GoogleCloudApigeeV1ResourceFiles",
          "description": "The resource files included in this shared flow revision."
        },
        "name": {
          "description": "The resource ID of the parent shared flow.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The string \"Application\""
        },
        "revision": {
          "description": "The resource ID of this revision.",
          "type": "string"
        },
        "policies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of policy names included in this shared flow revision."
        },
        "sharedFlows": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of the shared flow names included in this shared flow revision."
        },
        "description": {
          "type": "string",
          "description": "Description of the shared flow revision."
        },
        "contextInfo": {
          "description": "A textual description of the shared flow revision.",
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Time at which this shared flow revision was created, in milliseconds since epoch."
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Time at which this shared flow revision was most recently modified, in milliseconds since epoch.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision": {
      "properties": {
        "percentage": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of MP replicas reporting this revision."
        },
        "revision": {
          "type": "string",
          "description": "API proxy revision reported as deployed."
        }
      },
      "description": "Revisions deployed in the MPs.",
      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
      "type": "object"
    },
    "GoogleCloudApigeeV1OptimizedStats": {
      "id": "GoogleCloudApigeeV1OptimizedStats",
      "type": "object",
      "properties": {
        "Response": {
          "$ref": "GoogleCloudApigeeV1OptimizedStatsResponse",
          "description": "Wraps the `stats` response for JavaScript Optimized Scenario with a response key. For example: ```{ \"Response\": { \"TimeUnit\": [], \"metaData\": { \"errors\": [], \"notices\": [ \"Source:Postgres\", \"Table used: edge.api.aaxgroup001.agg_api\", \"PG Host:ruappg08-ro.production.apigeeks.net\", \"query served by:80c4ebca-6a10-4a2e-8faf-c60c1ee306ca\" ] }, \"resultTruncated\": false, \"stats\": { \"data\": [ { \"identifier\": { \"names\": [ \"apiproxy\" ], \"values\": [ \"sirjee\" ] }, \"metric\": [ { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] }, { \"env\": \"prod\", \"name\": \"sum(is_error)\", \"values\": [ 36.0 ] } ] } ] } } }```"
        }
      }
    },
    "GoogleCloudApigeeV1DeploymentChangeReport": {
      "properties": {
        "validationErrors": {
          "$ref": "GoogleRpcPreconditionFailure",
          "description": "Validation errors that would cause the deployment change request to be rejected."
        },
        "routingChanges": {
          "description": "All routing changes that may result from a deployment request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange"
          }
        },
        "routingConflicts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict"
          },
          "description": "All base path conflicts detected for a deployment request."
        }
      },
      "description": "Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some base path in the proxy will not receive traffic due to an existing deployment having already claimed that base path. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected.",
      "type": "object",
      "id": "GoogleCloudApigeeV1DeploymentChangeReport"
    },
    "GoogleTypeExpr": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "GoogleTypeExpr",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListCustomReportsResponse": {
      "id": "GoogleCloudApigeeV1ListCustomReportsResponse",
      "type": "object",
      "properties": {
        "qualifier": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1CustomReport"
          }
        }
      },
      "description": "This message encapsulates a list of custom report definitions"
    },
    "GoogleCloudApigeeV1ListDatastoresResponse": {
      "id": "GoogleCloudApigeeV1ListDatastoresResponse",
      "properties": {
        "datastores": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Datastore"
          },
          "description": "A list of datastores"
        }
      },
      "description": "The response for ListDatastores",
      "type": "object"
    },
    "GoogleIamV1AuditConfig": {
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object"
    },
    "GoogleCloudApigeeV1KeyValueMap": {
      "properties": {
        "name": {
          "description": "Required. ID of the key value map.",
          "type": "string"
        },
        "encrypted": {
          "type": "boolean",
          "description": "Optional. Flag that specifies whether entry values will be encrypted. Enable to encrypt entry values."
        }
      },
      "id": "GoogleCloudApigeeV1KeyValueMap",
      "description": "Collection of key/value string pairs.",
      "type": "object"
    },
    "GoogleCloudApigeeV1ExportRequest": {
      "id": "GoogleCloudApigeeV1ExportRequest",
      "description": "Request body for [CreateExportRequest]",
      "type": "object",
      "properties": {
        "datastoreName": {
          "type": "string",
          "description": "Required. Name of the preconfigured datastore."
        },
        "dateRange": {
          "description": "Required. Date range of the data to export.",
          "$ref": "GoogleCloudApigeeV1DateRange"
        },
        "outputFormat": {
          "description": "Optional. Output format of the export. Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the `csvDelimiter` property.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Required. Display name of the export job."
        },
        "csvDelimiter": {
          "description": "Optional. Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\\t`).",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the export job."
        }
      }
    },
    "GoogleCloudApigeeV1RuntimeConfig": {
      "type": "object",
      "description": "Runtime configuration for the organization. Response for GetRuntimeConfig.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource in the following format: `organizations/{org}/runtimeConfig`."
        },
        "tenantProjectId": {
          "description": "Output only. Tenant project ID associated with the Apigee organization. The tenant project is used to host Google-managed resources that are dedicated to this Apigee organization. Clients have limited access to resources within the tenant project used to support Apigee runtime instances. Access to the tenant project is managed using SetSyncAuthorization. It can be empty if the tenant project hasn't been created yet.",
          "type": "string",
          "readOnly": true
        },
        "analyticsBucket": {
          "description": "Cloud Storage bucket used for uploading Analytics records.",
          "type": "string"
        },
        "traceBucket": {
          "type": "string",
          "description": "Cloud Storage bucket used for uploading Trace records."
        }
      },
      "id": "GoogleCloudApigeeV1RuntimeConfig"
    },
    "GoogleCloudApigeeV1DeveloperMonetizationConfig": {
      "description": "Monetization configuration for the developer.",
      "id": "GoogleCloudApigeeV1DeveloperMonetizationConfig",
      "properties": {
        "billingType": {
          "enumDescriptions": [
            "The default/unset value.",
            "Developer pays in advance for the use of APIs and the charged amount is deducted from their account balance.",
            "Developer does not maintain an account balance. The API provider bills the developer for API usage."
          ],
          "description": "Billing type.",
          "enum": [
            "BILLING_TYPE_UNSPECIFIED",
            "PREPAID",
            "POSTPAID"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1SharedFlow": {
      "description": "The metadata describing a shared flow",
      "properties": {
        "metaData": {
          "$ref": "GoogleCloudApigeeV1EntityMetadata",
          "description": "Metadata describing the shared flow."
        },
        "name": {
          "description": "The ID of the shared flow.",
          "type": "string"
        },
        "revision": {
          "description": "A list of revisions of this shared flow.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latestRevisionId": {
          "description": "The id of the most recently created revision for this shared flow.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1SharedFlow"
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "GoogleCloudApigeeV1ActivateNatAddressRequest": {
      "type": "object",
      "description": "Request for ActivateNatAddressRequest. Activate the nat address request.",
      "id": "GoogleCloudApigeeV1ActivateNatAddressRequest",
      "properties": {}
    },
    "GoogleCloudApigeeV1RevenueShareRange": {
      "type": "object",
      "description": "API call volume range and the percentage of revenue to share with the developer when the total number of API calls is within the range.",
      "properties": {
        "sharePercentage": {
          "format": "double",
          "type": "number",
          "description": "Percentage of the revenue to be shared with the developer. For example, to share 21 percent of the total revenue with the developer, set this value to 21. Specify a decimal number with a maximum of two digits following the decimal point."
        },
        "start": {
          "format": "int64",
          "description": "Starting value of the range. Set to 0 or `null` for the initial range of values.",
          "type": "string"
        },
        "end": {
          "format": "int64",
          "type": "string",
          "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
        }
      },
      "id": "GoogleCloudApigeeV1RevenueShareRange"
    },
    "GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse": {
      "id": "GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token that you can include in a ListEnvironmentGroupAttachments request to retrieve the next page. If omitted, no subsequent pages exist."
        },
        "environmentGroupAttachments": {
          "type": "array",
          "description": "EnvironmentGroupAttachments for the specified environment group.",
          "items": {
            "$ref": "GoogleCloudApigeeV1EnvironmentGroupAttachment"
          }
        }
      },
      "description": "Response for ListEnvironmentGroupAttachments.",
      "type": "object"
    },
    "GoogleCloudApigeeV1AddonsConfig": {
      "type": "object",
      "description": "Add-on configurations for the Apigee organization.",
      "id": "GoogleCloudApigeeV1AddonsConfig",
      "properties": {
        "integrationConfig": {
          "$ref": "GoogleCloudApigeeV1IntegrationConfig",
          "description": "Configuration for the Integration add-on."
        },
        "connectorsPlatformConfig": {
          "$ref": "GoogleCloudApigeeV1ConnectorsPlatformConfig",
          "description": "Configuration for the Connectors Platform add-on."
        },
        "advancedApiOpsConfig": {
          "description": "Configuration for the Advanced API Ops add-on.",
          "$ref": "GoogleCloudApigeeV1AdvancedApiOpsConfig"
        },
        "monetizationConfig": {
          "$ref": "GoogleCloudApigeeV1MonetizationConfig",
          "description": "Configuration for the Monetization add-on."
        }
      }
    },
    "GoogleCloudApigeeV1SetAddonsRequest": {
      "id": "GoogleCloudApigeeV1SetAddonsRequest",
      "description": "Request for SetAddons.",
      "type": "object",
      "properties": {
        "addonsConfig": {
          "$ref": "GoogleCloudApigeeV1AddonsConfig",
          "description": "Required. Add-on configurations."
        }
      }
    },
    "GoogleCloudApigeeV1ApiProduct": {
      "id": "GoogleCloudApigeeV1ApiProduct",
      "type": "object",
      "properties": {
        "operationGroup": {
          "$ref": "GoogleCloudApigeeV1OperationGroup",
          "description": "Configuration used to group Apigee proxies or remote services with resources, method types, and quotas. The resource refers to the resource URI (excluding the base path). With this grouping, the API product creator is able to fine-tune and give precise control over which REST methods have access to specific resources and how many calls can be made (using the `quota` setting). **Note:** The `api_resources` setting cannot be specified for both the API product and operation group; otherwise the call will fail."
        },
        "description": {
          "description": "Description of the API product. Include key information about the API product that is not captured by other fields. Comma-separated list of API resources to be bundled in the API product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - `/**`: Indicates that all sub-URIs are included. - `/*` : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see Managing API products.",
          "type": "string"
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "description": "Response only. Creation time of this environment as milliseconds since epoch."
        },
        "quotaTimeUnit": {
          "type": "string",
          "description": "Time unit defined for the `quotaInterval`. Valid values include `minute`, `hour`, `day`, or `month`."
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Comma-separated list of OAuth scopes that are validated at runtime. Apigee validates that the scopes in any access token presented match the scopes defined in the OAuth policy associated with the API product."
        },
        "proxies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Apigee rejects requests to API proxies that are not listed. **Note:** The API proxy names must already exist in the specified environment as they will be validated upon creation."
        },
        "quota": {
          "type": "string",
          "description": "Number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours."
        },
        "environments": {
          "description": "Comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in `prod` from being accessed by API proxies deployed in `test`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "quotaInterval": {
          "type": "string",
          "description": "Time interval over which the number of request messages is calculated."
        },
        "name": {
          "type": "string",
          "description": "Internal name of the API product. Characters you can use in the name are restricted to: `A-Z0-9._\\-$ %`. **Note:** The internal name cannot be edited when updating the API product."
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Response only. Modified time of this environment as milliseconds since epoch.",
          "type": "string"
        },
        "approvalType": {
          "description": "Flag that specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately. **Note:** Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.",
          "type": "string"
        },
        "graphqlOperationGroup": {
          "$ref": "GoogleCloudApigeeV1GraphQLOperationGroup",
          "description": "Configuration used to group Apigee proxies or remote services with graphQL operation name, graphQL operation type and quotas. This grouping allows us to precisely set quota for a particular combination of graphQL name and operation type for a particular proxy request. If graphQL name is not set, this would imply quota will be applied on all graphQL requests matching the operation type."
        },
        "displayName": {
          "type": "string",
          "description": "Name displayed in the UI or developer portal to developers registering for API access."
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "description": "Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal, but can be accessed by external developers.",
          "type": "array"
        },
        "apiResources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudApigeeV1AdjustDeveloperBalanceRequest": {
      "description": "Request for AdjustDeveloperBalance.",
      "type": "object",
      "id": "GoogleCloudApigeeV1AdjustDeveloperBalanceRequest",
      "properties": {
        "adjustment": {
          "description": "* A positive value of `adjustment` means that that the API provider wants to adjust the balance for an under-charged developer i.e. the balance of the developer will decrease. * A negative value of `adjustment` means that that the API provider wants to adjust the balance for an over-charged developer i.e. the balance of the developer will increase.",
          "$ref": "GoogleTypeMoney"
        }
      }
    },
    "GoogleCloudApigeeV1ListNatAddressesResponse": {
      "id": "GoogleCloudApigeeV1ListNatAddressesResponse",
      "description": "Response for ListNatAddresses.",
      "properties": {
        "natAddresses": {
          "items": {
            "$ref": "GoogleCloudApigeeV1NatAddress"
          },
          "type": "array",
          "description": "List of NAT Addresses for the instance."
        },
        "nextPageToken": {
          "description": "Page token that you can include in a ListNatAddresses request to retrieve the next page of content. If omitted, no subsequent pages exist.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1StatsHostStats": {
      "properties": {
        "dimensions": {
          "items": {
            "$ref": "GoogleCloudApigeeV1DimensionMetric"
          },
          "type": "array",
          "description": "List of metrics grouped under dimensions."
        },
        "metrics": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Metric"
          },
          "description": "In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only the top-level metrics are provided. If dimensions are included, then there will be a top-level dimensions field under hostnames which will contain metrics values and the dimension name. Example: ``` \"hosts\": [ { \"dimensions\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.14049521E8\" ] } ], \"name\": \"nit_proxy\" } ], \"name\": \"example.com\" } ]``` OR ```\"hosts\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.19026331E8\" ] } ], \"name\": \"example.com\" } ]``` List of metric values.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Hostname used in query."
        }
      },
      "id": "GoogleCloudApigeeV1StatsHostStats",
      "type": "object",
      "description": "Encapsulates the hostname wrapper: ``` \"hosts\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.52056245E8\" ] } ], \"name\": \"example.com\" } ]```"
    },
    "GoogleCloudApigeeV1Organization": {
      "type": "object",
      "id": "GoogleCloudApigeeV1Organization",
      "properties": {
        "createdAt": {
          "type": "string",
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Time that the Apigee organization was created in milliseconds since epoch."
        },
        "addonsConfig": {
          "$ref": "GoogleCloudApigeeV1AddonsConfig",
          "description": "Addon configurations of the Apigee organization."
        },
        "caCertificate": {
          "readOnly": true,
          "format": "byte",
          "description": "Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType](#RuntimeType) is `CLOUD`.",
          "type": "string"
        },
        "environments": {
          "description": "Output only. List of environments in the Apigee organization.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "billingType": {
          "enum": [
            "BILLING_TYPE_UNSPECIFIED",
            "SUBSCRIPTION",
            "EVALUATION"
          ],
          "description": "Billing type of the Apigee organization. See [Apigee pricing](https://cloud.google.com/apigee/pricing).",
          "type": "string",
          "enumDescriptions": [
            "Billing type not specified.",
            "A pre-paid subscription to Apigee.",
            "Free and limited access to Apigee for evaluation purposes only. only."
          ]
        },
        "authorizedNetwork": {
          "type": "string",
          "description": "Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType](#RuntimeType) is set to `CLOUD`. The value must be set before the creation of a runtime instance and can be updated only when there are no runtime instances. For example: `default`. Apigee also supports shared VPC (that is, the host network project is not the same as the one that is peering with Apigee). See [Shared VPC overview](https://cloud.google.com/vpc/docs/shared-vpc). To use a shared VPC network, use the following format: `projects/{host-project-id}/{region}/networks/{network-name}`. For example: `projects/my-sharedvpc-host/global/networks/mynetwork` **Note:** Not supported for Apigee hybrid."
        },
        "expiresAt": {
          "description": "Output only. Time that the Apigee organization is scheduled for deletion.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "lastModifiedAt": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Time that the Apigee organization was last modified in milliseconds since epoch.",
          "type": "string"
        },
        "analyticsRegion": {
          "type": "string",
          "description": "Required. DEPRECATED: This field will be deprecated once Apigee supports DRZ. Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org)."
        },
        "displayName": {
          "description": "Display name for the Apigee organization. Unused, but reserved for future use.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "Output only. Project ID associated with the Apigee organization.",
          "readOnly": true
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_TRIAL",
            "TYPE_PAID",
            "TYPE_INTERNAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Subscription type not specified.",
            "Subscription to Apigee is free, limited, and used for evaluation purposes only.",
            "Full subscription to Apigee has been purchased. See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
            "For internal users only."
          ],
          "description": "Not used by Apigee."
        },
        "runtimeDatabaseEncryptionKeyName": {
          "description": "Cloud KMS key name used for encrypting the data that is stored and replicated across runtime instances. Update is not allowed after the organization is created. Required when [RuntimeType](#RuntimeType) is `CLOUD`. If not specified when [RuntimeType](#RuntimeType) is `TRIAL`, a Google-Managed encryption key will be used. For example: \"projects/foo/locations/us/keyRings/bar/cryptoKeys/baz\". **Note:** Not supported for Apigee hybrid.",
          "type": "string"
        },
        "attributes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Not used by Apigee."
        },
        "runtimeType": {
          "enumDescriptions": [
            "Runtime type not specified.",
            "Google-managed Apigee runtime.",
            "User-managed Apigee hybrid runtime."
          ],
          "description": "Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.",
          "type": "string",
          "enum": [
            "RUNTIME_TYPE_UNSPECIFIED",
            "CLOUD",
            "HYBRID"
          ]
        },
        "description": {
          "description": "Description of the Apigee organization.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. State of the organization. Values other than ACTIVE means the resource is not ready to use.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "Resource is in an unspecified state.",
            "Resource is being created.",
            "Resource is provisioned and ready to use.",
            "The resource is being deleted.",
            "The resource is being updated."
          ]
        },
        "customerName": {
          "description": "Not used by Apigee.",
          "type": "string"
        },
        "portalDisabled": {
          "description": "Configuration for the Portals settings.",
          "type": "boolean"
        },
        "subscriptionType": {
          "type": "string",
          "enum": [
            "SUBSCRIPTION_TYPE_UNSPECIFIED",
            "PAID",
            "TRIAL"
          ],
          "enumDescriptions": [
            "Subscription type not specified.",
            "Full subscription to Apigee has been purchased.",
            "Subscription to Apigee is free, limited, and used for evaluation purposes only."
          ],
          "description": "Output only. DEPRECATED: This will eventually be replaced by BillingType. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the Apigee organization."
        },
        "properties": {
          "description": "Properties defined in the Apigee organization profile.",
          "$ref": "GoogleCloudApigeeV1Properties"
        }
      }
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleIamV1TestIamPermissionsRequest",
      "type": "object"
    },
    "GoogleCloudApigeeV1OperationMetadata": {
      "id": "GoogleCloudApigeeV1OperationMetadata",
      "description": "Metadata describing an Operation.",
      "properties": {
        "operationType": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "INSERT",
            "DELETE",
            "UPDATE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "IN_PROGRESS",
            "FINISHED"
          ]
        },
        "targetResourceName": {
          "type": "string",
          "description": "Name of the resource for which the operation is operating on."
        },
        "progress": {
          "description": "Progress of the operation.",
          "$ref": "GoogleCloudApigeeV1OperationMetadataProgress"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1IngressConfig": {
      "properties": {
        "name": {
          "description": "Name of the resource in the following format: `organizations/{org}/deployedIngressConfig`.",
          "type": "string"
        },
        "uid": {
          "description": "A unique id for the ingress config that will only change if the organization is deleted and recreated.",
          "type": "string"
        },
        "environmentGroups": {
          "description": "List of environment groups in the organization.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1EnvironmentGroupConfig"
          }
        },
        "revisionId": {
          "description": "Revision id that defines the ordering on IngressConfig resources. The higher the revision, the more recently the configuration was deployed.",
          "format": "int64",
          "type": "string"
        },
        "revisionCreateTime": {
          "type": "string",
          "description": "Time at which the IngressConfig revision was created.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1IngressConfig"
    },
    "GoogleCloudApigeeV1DeveloperSubscription": {
      "description": "Structure of a DeveloperSubscription.",
      "id": "GoogleCloudApigeeV1DeveloperSubscription",
      "properties": {
        "apiproduct": {
          "type": "string",
          "description": "Name of the API product for which the developer is purchasing a subscription."
        },
        "endTime": {
          "description": "Time when the API product subscription ends in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Time when the API product subscription was last modified in milliseconds since epoch."
        },
        "createdAt": {
          "readOnly": true,
          "description": "Output only. Time when the API product subscription was created in milliseconds since epoch.",
          "format": "int64",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "description": "Time when the API product subscription starts in milliseconds since epoch."
        },
        "name": {
          "type": "string",
          "description": "Output only. Name of the API product subscription.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1KeystoreConfig": {
      "id": "GoogleCloudApigeeV1KeystoreConfig",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}`",
          "type": "string"
        },
        "aliases": {
          "description": "Aliases in the keystore.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1AliasRevisionConfig"
          }
        }
      }
    },
    "GoogleCloudApigeeV1OptimizedStatsResponse": {
      "id": "GoogleCloudApigeeV1OptimizedStatsResponse",
      "description": "Encapsulates a response format for JavaScript Optimized Scenario.",
      "type": "object",
      "properties": {
        "metaData": {
          "$ref": "GoogleCloudApigeeV1Metadata",
          "description": "Metadata information about the query executed."
        },
        "stats": {
          "$ref": "GoogleCloudApigeeV1OptimizedStatsNode",
          "description": "`stats` results."
        },
        "resultTruncated": {
          "type": "boolean",
          "description": "Boolean flag that indicates whether the results were truncated based on the limit parameter."
        },
        "TimeUnit": {
          "type": "array",
          "description": "List of time unit values. Time unit refers to an epoch timestamp value.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudApigeeV1ListAppsResponse": {
      "properties": {
        "app": {
          "items": {
            "$ref": "GoogleCloudApigeeV1App"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ListAppsResponse"
    },
    "GoogleCloudApigeeV1CertInfo": {
      "properties": {
        "basicConstraints": {
          "description": "X.509 basic constraints extension.",
          "type": "string"
        },
        "isValid": {
          "type": "string",
          "description": "Flag that specifies whether the certificate is valid. Flag is set to `Yes` if the certificate is valid, `No` if expired, or `Not yet` if not yet valid."
        },
        "validFrom": {
          "format": "int64",
          "description": "X.509 `notBefore` validity period in milliseconds since epoch.",
          "type": "string"
        },
        "issuer": {
          "description": "X.509 issuer.",
          "type": "string"
        },
        "subject": {
          "description": "X.509 subject.",
          "type": "string"
        },
        "serialNumber": {
          "description": "X.509 serial number.",
          "type": "string"
        },
        "sigAlgName": {
          "type": "string",
          "description": "X.509 signatureAlgorithm."
        },
        "expiryDate": {
          "format": "int64",
          "type": "string",
          "description": "X.509 `notAfter` validity period in milliseconds since epoch."
        },
        "version": {
          "description": "X.509 version.",
          "type": "integer",
          "format": "int32"
        },
        "publicKey": {
          "description": "Public key component of the X.509 subject public key info.",
          "type": "string"
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "X.509 subject alternative names (SANs) extension.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "X.509 certificate as defined in RFC 5280.",
      "id": "GoogleCloudApigeeV1CertInfo",
      "type": "object"
    },
    "GoogleCloudApigeeV1TargetServer": {
      "description": "TargetServer configuration. TargetServers are used to decouple a proxy's TargetEndpoint HTTPTargetConnections from concrete URLs for backend services.",
      "id": "GoogleCloudApigeeV1TargetServer",
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "description": "Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.",
          "format": "int32"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true."
        },
        "name": {
          "type": "string",
          "description": "Required. The resource id of this target server. Values must match the regular expression "
        },
        "host": {
          "description": "Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123.",
          "type": "string"
        },
        "description": {
          "description": "Optional. A human-readable description of this TargetServer.",
          "type": "string"
        },
        "sSLInfo": {
          "description": "Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration.",
          "$ref": "GoogleCloudApigeeV1TlsInfo"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "PROTOCOL_UNSPECIFIED",
            "HTTP",
            "GRPC"
          ],
          "description": "Immutable. The protocol used by this TargetServer.",
          "enumDescriptions": [
            "UNSPECIFIED defaults to HTTP for backwards compatibility.",
            "The TargetServer uses HTTP.",
            "The TargetServer uses GRPC."
          ]
        }
      }
    },
    "GoogleCloudApigeeV1ApiProductRef": {
      "id": "GoogleCloudApigeeV1ApiProductRef",
      "properties": {
        "status": {
          "description": "Status of the API product. Valid values are `approved` or `revoked`.",
          "type": "string"
        },
        "apiproduct": {
          "type": "string",
          "description": "Name of the API product."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ListOrganizationsResponse": {
      "id": "GoogleCloudApigeeV1ListOrganizationsResponse",
      "properties": {
        "organizations": {
          "description": "List of Apigee organizations and associated GCP projects.",
          "items": {
            "$ref": "GoogleCloudApigeeV1OrganizationProjectMapping"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ListEnvironmentResourcesResponse": {
      "type": "object",
      "id": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse",
      "properties": {
        "resourceFile": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceFile"
          },
          "type": "array",
          "description": "List of resources files."
        }
      },
      "description": "Response for ListEnvironmentResources"
    },
    "GoogleCloudApigeeV1RoutingRule": {
      "properties": {
        "receiver": {
          "description": "The resource name of the proxy revision that is receiving this basepath in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "The unix timestamp when this rule was updated. This is updated whenever env_group_revision is updated. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL.",
          "format": "google-datetime"
        },
        "environment": {
          "description": "Name of an environment bound to the environment group in the following format: `organizations/{org}/environments/{env}`.",
          "type": "string"
        },
        "basepath": {
          "description": "URI path prefix used to route to the specified environment. May contain one or more wildcards. For example, path segments consisting of a single `*` character will match any string.",
          "type": "string"
        },
        "envGroupRevision": {
          "description": "The env group config revision_id when this rule was added or last updated. This value is set when the rule is created and will only update if the the environment_id changes. It is used to determine if the runtime is up to date with respect to this rule. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with view=FULL.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1RoutingRule"
    },
    "GoogleCloudApigeeV1Subscription": {
      "id": "GoogleCloudApigeeV1Subscription",
      "properties": {
        "name": {
          "type": "string",
          "description": "Full name of the Pub/Sub subcription. Use the following structure in your request: `subscription \"projects/foo/subscription/bar\"`"
        }
      },
      "description": "Pub/Sub subscription of an environment.",
      "type": "object"
    },
    "GoogleCloudApigeeV1AccessSet": {
      "properties": {
        "value": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1AccessSet",
      "type": "object",
      "description": "Set action. For example, \"Set\" : { \"name\" : \"target.name\", \"success\" : true, \"value\" : \"default\" }"
    },
    "GoogleCloudApigeeV1ListEndpointAttachmentsResponse": {
      "id": "GoogleCloudApigeeV1ListEndpointAttachmentsResponse",
      "description": "Response for ListEndpointAttachments method.",
      "properties": {
        "endpointAttachments": {
          "description": "Endpoint attachments in the specified organization.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1EndpointAttachment"
          }
        },
        "nextPageToken": {
          "description": "Page token that you can include in an `ListEndpointAttachments` request to retrieve the next page. If omitted, no subsequent pages exist.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1InstanceAttachment": {
      "type": "object",
      "id": "GoogleCloudApigeeV1InstanceAttachment",
      "properties": {
        "createdAt": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Time the attachment was created in milliseconds since epoch."
        },
        "environment": {
          "type": "string",
          "description": "ID of the attached environment."
        },
        "name": {
          "type": "string",
          "description": "Output only. ID of the attachment.",
          "readOnly": true
        }
      },
      "description": "InstanceAttachment represents the installation of an environment onto an instance."
    },
    "GoogleCloudApigeeV1SchemaSchemaProperty": {
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Time the field was created in RFC3339 string form. For example: `2016-02-26T10:23:09.592Z`.",
          "type": "string"
        },
        "custom": {
          "description": "Flag that specifies whether the field is standard in the dataset or a custom field created by the customer. `true` indicates that it is a custom field.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Data type of the field."
        }
      },
      "description": "Properties for the schema field.",
      "id": "GoogleCloudApigeeV1SchemaSchemaProperty"
    },
    "GoogleCloudApigeeV1DimensionMetric": {
      "type": "object",
      "properties": {
        "metrics": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Metric"
          },
          "type": "array",
          "description": "List of metrics."
        },
        "name": {
          "description": "Name of the dimension.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DimensionMetric",
      "description": "Encapsulates a metric grouped by dimension."
    },
    "GoogleCloudApigeeV1OperationGroup": {
      "id": "GoogleCloudApigeeV1OperationGroup",
      "properties": {
        "operationConfigType": {
          "description": "Flag that specifes whether the configuration is for Apigee API proxy or a remote service. Valid values include `proxy` or `remoteservice`. Defaults to `proxy`. Set to `proxy` when Apigee API proxies are associated with the API product. Set to `remoteservice` when non-Apigee proxies like Istio-Envoy are associated with the API product.",
          "type": "string"
        },
        "operationConfigs": {
          "description": "Required. List of operation configurations for either Apigee API proxies or other remote services that are associated with this API product.",
          "items": {
            "$ref": "GoogleCloudApigeeV1OperationConfig"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "List of operation configuration details associated with Apigee API proxies or remote services. Remote services are non-Apigee proxies, such as Istio-Envoy."
    },
    "GoogleCloudApigeeV1DeveloperAppKey": {
      "type": "object",
      "properties": {
        "consumerKey": {
          "type": "string",
          "description": "Consumer key."
        },
        "issuedAt": {
          "type": "string",
          "description": "Time the developer app was created in milliseconds since epoch.",
          "format": "int64"
        },
        "expiresInSeconds": {
          "type": "string",
          "format": "int64",
          "description": "Input only. Expiration time, in seconds, for the consumer key. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
        },
        "expiresAt": {
          "type": "string",
          "format": "int64",
          "description": "Time the developer app expires in milliseconds since epoch."
        },
        "status": {
          "description": "Status of the credential. Valid values include `approved` or `revoked`.",
          "type": "string"
        },
        "apiProducts": {
          "type": "array",
          "items": {
            "type": "any"
          },
          "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created."
        },
        "attributes": {
          "description": "List of attributes associated with the credential.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "scopes": {
          "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "consumerSecret": {
          "description": "Secret key.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeveloperAppKey"
    },
    "GoogleCloudApigeeV1EnvironmentGroupAttachment": {
      "id": "GoogleCloudApigeeV1EnvironmentGroupAttachment",
      "description": "EnvironmentGroupAttachment is a resource which defines an attachment of an environment to an environment group.",
      "properties": {
        "name": {
          "type": "string",
          "description": "ID of the environment group attachment."
        },
        "environment": {
          "type": "string",
          "description": "Required. ID of the attached environment."
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "description": "Output only. The time at which the environment group attachment was created as milliseconds since epoch.",
          "readOnly": true
        },
        "environmentGroupId": {
          "description": "Output only. ID of the environment group.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1KeyAliasReference": {
      "properties": {
        "reference": {
          "type": "string",
          "description": "Reference name in the following format: `organizations/{org}/environments/{env}/references/{reference}`"
        },
        "aliasId": {
          "type": "string",
          "description": "Alias ID. Must exist in the keystore referred to by the reference."
        }
      },
      "id": "GoogleCloudApigeeV1KeyAliasReference",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListTraceConfigOverridesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token value that can be passed as `page_token` to retrieve the next page of content."
        },
        "traceConfigOverrides": {
          "type": "array",
          "description": "List all trace configuration overrides in an environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1TraceConfigOverride"
          }
        }
      },
      "id": "GoogleCloudApigeeV1ListTraceConfigOverridesResponse",
      "description": "Response for ListTraceConfigOverrides.",
      "type": "object"
    },
    "GoogleCloudApigeeV1Quota": {
      "id": "GoogleCloudApigeeV1Quota",
      "properties": {
        "interval": {
          "description": "Required. Time interval over which the number of request messages is calculated.",
          "type": "string"
        },
        "timeUnit": {
          "type": "string",
          "description": "Time unit defined for the `interval`. Valid values include `minute`, `hour`, `day`, or `month`. If `limit` and `interval` are valid, the default value is `hour`; otherwise, the default is null."
        },
        "limit": {
          "description": "Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.",
          "type": "string"
        }
      },
      "description": "Quota contains the essential parameters needed that can be applied on the resources, methods, API source combination associated with this API product. While Quota is optional, setting it prevents requests from exceeding the provisioned parameters.",
      "type": "object"
    },
    "GoogleCloudApigeeV1Export": {
      "id": "GoogleCloudApigeeV1Export",
      "description": "Details of an export job.",
      "properties": {
        "self": {
          "description": "Output only. Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of the export job.",
          "type": "string"
        },
        "state": {
          "description": "Output only. Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Display name of the export job."
        },
        "updated": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time the export job was last updated."
        },
        "error": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Error is set when export fails"
        },
        "executionTime": {
          "type": "string",
          "description": "Output only. Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.",
          "readOnly": true
        },
        "datastoreName": {
          "type": "string",
          "description": "Name of the datastore that is the destination of the export job [datastore]"
        },
        "created": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time the export job was created."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1IntegrationConfig": {
      "type": "object",
      "id": "GoogleCloudApigeeV1IntegrationConfig",
      "properties": {
        "enabled": {
          "description": "Flag that specifies whether the Integration add-on is enabled.",
          "type": "boolean"
        }
      },
      "description": "Configuration for the Integration add-on."
    },
    "GoogleCloudApigeeV1RateRange": {
      "properties": {
        "start": {
          "description": "Starting value of the range. Set to 0 or `null` for the initial range of values.",
          "format": "int64",
          "type": "string"
        },
        "fee": {
          "$ref": "GoogleTypeMoney",
          "description": "Fee to charge when total number of API calls falls within this range."
        },
        "end": {
          "format": "int64",
          "type": "string",
          "description": "Ending value of the range. Set to 0 or `null` for the last range of values."
        }
      },
      "description": "API call volume range and the fees charged when the total number of API calls is within the range.",
      "id": "GoogleCloudApigeeV1RateRange",
      "type": "object"
    },
    "GoogleCloudApigeeV1AsyncQuery": {
      "properties": {
        "envgroupHostname": {
          "type": "string",
          "description": "Hostname is available only when query is executed at host level."
        },
        "created": {
          "type": "string",
          "description": "Creation time of the query."
        },
        "resultFileSize": {
          "description": "ResultFileSize is available only after the query is completed.",
          "type": "string"
        },
        "name": {
          "description": "Asynchronous Query Name.",
          "type": "string"
        },
        "updated": {
          "description": "Last updated timestamp for the query.",
          "type": "string"
        },
        "queryParams": {
          "description": "Contains information like metrics, dimenstions etc of the AsyncQuery.",
          "$ref": "GoogleCloudApigeeV1QueryMetadata"
        },
        "state": {
          "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\".",
          "type": "string"
        },
        "resultRows": {
          "format": "int64",
          "description": "ResultRows is available only after the query is completed.",
          "type": "string"
        },
        "reportDefinitionId": {
          "type": "string",
          "description": "Asynchronous Report ID."
        },
        "self": {
          "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd` or following format if query is running at host level: `/organizations/myorg/hostQueries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`",
          "type": "string"
        },
        "executionTime": {
          "description": "ExecutionTime is available only after the query is completed.",
          "type": "string"
        },
        "error": {
          "description": "Error is set when query fails.",
          "type": "string"
        },
        "result": {
          "$ref": "GoogleCloudApigeeV1AsyncQueryResult",
          "description": "Result is available only after the query is completed."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1AsyncQuery"
    },
    "GoogleCloudApigeeV1ReportProperty": {
      "id": "GoogleCloudApigeeV1ReportProperty",
      "type": "object",
      "properties": {
        "property": {
          "type": "string",
          "description": "name of the property"
        },
        "value": {
          "description": "property values",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1EndpointAttachment": {
      "id": "GoogleCloudApigeeV1EndpointAttachment",
      "description": "Apigee endpoint attachment. For more information, see Southbound networking patterns.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Required. Location of the endpoint attachment."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING",
            "UPDATING"
          ],
          "enumDescriptions": [
            "Resource is in an unspecified state.",
            "Resource is being created.",
            "Resource is provisioned and ready to use.",
            "The resource is being deleted.",
            "The resource is being updated."
          ],
          "description": "Output only. State of the endpoint attachment. Values other than `ACTIVE` mean the resource is not ready to use."
        },
        "host": {
          "type": "string",
          "description": "Output only. Host that can be used in either the HTTP target endpoint directly or as the host in target server.",
          "readOnly": true
        },
        "serviceAttachment": {
          "type": "string",
          "description": "Format: projects/*/regions/*/serviceAttachments/*"
        },
        "name": {
          "type": "string",
          "description": "Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse": {
      "id": "GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse",
      "properties": {
        "nextStartKey": {
          "description": "Value that can be sent as `startKey` to retrieve the next page of content. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "developerSubscriptions": {
          "type": "array",
          "description": "List of all subscriptions.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeveloperSubscription"
          }
        }
      },
      "description": "Response for ListDeveloperSubscriptions.",
      "type": "object"
    },
    "GoogleCloudApigeeV1UpdateError": {
      "properties": {
        "type": {
          "type": "string",
          "description": "A string that uniquely identifies the type of error. This provides a more reliable means to deduplicate errors across revisions and instances."
        },
        "resource": {
          "description": "The sub resource specific to this error (e.g. a proxy deployed within the EnvironmentConfig). If empty the error refers to the top level resource.",
          "type": "string"
        },
        "code": {
          "description": "Status code.",
          "type": "string",
          "enumDescriptions": [
            "Not an error; returned on success HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level. For example, when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence. (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. For example, if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ],
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ]
        },
        "message": {
          "type": "string",
          "description": "User-friendly error message."
        }
      },
      "description": "Details on why a resource update failed in the runtime.",
      "type": "object",
      "id": "GoogleCloudApigeeV1UpdateError"
    },
    "GoogleCloudApigeeV1TlsInfoCommonName": {
      "properties": {
        "value": {
          "description": "The TLS Common Name string of the certificate.",
          "type": "string"
        },
        "wildcardMatch": {
          "type": "boolean",
          "description": "Indicates whether the cert should be matched against as a wildcard cert."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1TlsInfoCommonName"
    },
    "EdgeConfigstoreBundleBadBundle": {
      "description": "Describes why a bundle is invalid. Intended for use in error details.",
      "type": "object",
      "id": "EdgeConfigstoreBundleBadBundle",
      "properties": {
        "violations": {
          "description": "Describes all precondition violations.",
          "items": {
            "$ref": "EdgeConfigstoreBundleBadBundleViolation"
          },
          "type": "array"
        }
      }
    },
    "GoogleTypeMoney": {
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "GoogleTypeMoney",
      "description": "Represents an amount of money with its currency type."
    },
    "GoogleCloudApigeeV1CustomReportMetric": {
      "properties": {
        "function": {
          "description": "aggregate function",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "name of the metric"
        }
      },
      "id": "GoogleCloudApigeeV1CustomReportMetric",
      "description": "This encapsulates a metric property of the form sum(message_count) where name is message_count and function is sum",
      "type": "object"
    },
    "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment": {
      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
      "description": "Tuple representing a base path and the deployment containing it.",
      "type": "object",
      "properties": {
        "basepath": {
          "description": "Base path receiving traffic.",
          "type": "string"
        },
        "apiProxy": {
          "type": "string",
          "description": "Name of the deployed API proxy revision containing the base path."
        },
        "revision": {
          "type": "string",
          "description": "Name of the deployed API proxy revision containing the base path."
        },
        "environment": {
          "description": "Name of the environment in which the proxy is deployed.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Developer": {
      "properties": {
        "accessType": {
          "description": "Access type.",
          "type": "string"
        },
        "userName": {
          "type": "string",
          "description": "Required. User name of the developer. Not used by Apigee hybrid."
        },
        "email": {
          "type": "string",
          "description": "Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid. Note that the email address has to be in lowercase only."
        },
        "appFamily": {
          "type": "string",
          "description": "Developer app family."
        },
        "status": {
          "description": "Output only. Status of the developer. Valid values are `active` and `inactive`.",
          "type": "string",
          "readOnly": true
        },
        "companies": {
          "type": "array",
          "description": "List of companies associated with the developer.",
          "items": {
            "type": "string"
          }
        },
        "organizationName": {
          "description": "Output only. Name of the Apigee organization in which the developer resides.",
          "readOnly": true,
          "type": "string"
        },
        "lastModifiedAt": {
          "description": "Output only. Time at which the developer was last modified in milliseconds since epoch.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "apps": {
          "description": "List of apps associated with the developer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "developerId": {
          "type": "string",
          "description": "ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time."
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time at which the developer was created in milliseconds since epoch."
        },
        "firstName": {
          "description": "Required. First name of the developer.",
          "type": "string"
        },
        "lastName": {
          "description": "Required. Last name of the developer.",
          "type": "string"
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "description": "Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Developer",
      "type": "object"
    },
    "GoogleCloudApigeeV1CustomReport": {
      "id": "GoogleCloudApigeeV1CustomReport",
      "type": "object",
      "properties": {
        "timeUnit": {
          "description": "This field contains the time unit of aggregation for the report",
          "type": "string"
        },
        "chartType": {
          "description": "This field contains the chart type for the report",
          "type": "string"
        },
        "topk": {
          "type": "string",
          "description": "Legacy field: not used. This field contains the top k parameter value for restricting the result"
        },
        "organization": {
          "description": "Output only. Organization name",
          "type": "string",
          "readOnly": true
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1CustomReportMetric"
          },
          "description": "Required. This contains the list of metrics"
        },
        "sortOrder": {
          "description": "Legacy field: not used much. Contains the sort order for the sort columns",
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "description": "This contains the list of dimensions for the report",
          "items": {
            "type": "string"
          }
        },
        "lastViewedAt": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. Last viewed time of this entity as milliseconds since epoch"
        },
        "lastModifiedAt": {
          "readOnly": true,
          "description": "Output only. Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt",
          "type": "string",
          "format": "int64"
        },
        "sortByCols": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Legacy field: not used much. Contains the list of sort by columns"
        },
        "name": {
          "description": "Required. Unique identifier for the report T his is a legacy field used to encode custom report unique id",
          "type": "string"
        },
        "comments": {
          "items": {
            "type": "string"
          },
          "description": "Legacy field: not used. This field contains a list of comments associated with custom report",
          "type": "array"
        },
        "createdAt": {
          "format": "int64",
          "description": "Output only. Unix time when the app was created json key: createdAt",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ReportProperty"
          },
          "description": "This field contains report properties such as ui metadata etc.",
          "type": "array"
        },
        "limit": {
          "description": "Legacy field: not used This field contains the limit for the result retrieved",
          "type": "string"
        },
        "offset": {
          "description": "Legacy field: not used. This field contains the offset for the data",
          "type": "string"
        },
        "fromTime": {
          "type": "string",
          "description": "Legacy field: not used. Contains the from time for the report"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Legacy field: not used. This field contains a list of tags associated with custom report"
        },
        "displayName": {
          "description": "This is the display name for the report",
          "type": "string"
        },
        "toTime": {
          "type": "string",
          "description": "Legacy field: not used. Contains the end time for the report"
        },
        "filter": {
          "description": "This field contains the filter expression",
          "type": "string"
        },
        "environment": {
          "type": "string",
          "description": "Output only. Environment name",
          "readOnly": true
        }
      }
    },
    "GoogleCloudApigeeV1DebugMask": {
      "properties": {
        "variables": {
          "items": {
            "type": "string"
          },
          "description": "List of variables that should be masked from the debug output.",
          "type": "array"
        },
        "namespaces": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of namespaces to URIs."
        },
        "name": {
          "type": "string",
          "description": "Name of the debug mask."
        },
        "requestJSONPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON request message payloads."
        },
        "faultXPaths": {
          "description": "List of XPaths that specify the XML elements to be filtered from XML payloads in error flows.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "responseJSONPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON response message payloads."
        },
        "responseXPaths": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of XPaths that specify the XML elements to be filtered from XML response message payloads."
        },
        "requestXPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of XPaths that specify the XML elements to be filtered from XML request message payloads."
        },
        "faultJSONPaths": {
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON payloads in error flows.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1DebugMask",
      "type": "object"
    }
  },
  "description": "Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.",
  "version_module": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "version": "v1",
  "baseUrl": "https://apigee.googleapis.com/",
  "mtlsRootUrl": "https://apigee.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "canonicalName": "Apigee",
  "discoveryVersion": "v1",
  "name": "apigee",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "id": "apigee:v1",
  "title": "Apigee API",
  "basePath": "",
  "protocol": "rest"
}

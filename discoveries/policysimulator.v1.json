{
  "revision": "20230312",
  "description": " Policy Simulator is a collection of endpoints for creating, running, and viewing a Replay. A `Replay` is a type of simulation that lets you see how your members' access to resources might change if you changed your IAM policy. During a `Replay`, Policy Simulator re-evaluates, or replays, past access attempts under both the current policy and your proposed policy, and compares those results to determine how your members' access might change under the proposed policy.",
  "batchPath": "batch",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "id": "policysimulator:v1",
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "default": "json",
      "description": "Data format for response."
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "description": "V1 error format."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    }
  },
  "rootUrl": "https://policysimulator.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://policysimulator.googleapis.com/",
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "schemas": {
    "GoogleRpcStatus": {
      "type": "object",
      "id": "GoogleRpcStatus",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudPolicysimulatorV1ExplainedAccess": {
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudPolicysimulatorV1ExplainedPolicy"
          },
          "description": "If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted."
        },
        "accessState": {
          "enum": [
            "ACCESS_STATE_UNSPECIFIED",
            "GRANTED",
            "NOT_GRANTED",
            "UNKNOWN_CONDITIONAL",
            "UNKNOWN_INFO_DENIED"
          ],
          "description": "Whether the principal in the access tuple has permission to access the resource in the access tuple under the given policies.",
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The principal has the permission.",
            "The principal does not have the permission.",
            "The principal has the permission only if a condition expression evaluates to `true`.",
            "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
          ]
        }
      },
      "description": "Details about how a set of policies, listed in ExplainedPolicy, resulted in a certain AccessState when replaying an access tuple.",
      "id": "GoogleCloudPolicysimulatorV1ExplainedAccess",
      "type": "object"
    },
    "GoogleCloudPolicysimulatorV1ListReplayResultsResponse": {
      "properties": {
        "replayResults": {
          "items": {
            "$ref": "GoogleCloudPolicysimulatorV1ReplayResult"
          },
          "type": "array",
          "description": "The results of running a Replay."
        },
        "nextPageToken": {
          "description": "A token that you can use to retrieve the next page of ReplayResult objects. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for Simulator.ListReplayResults.",
      "id": "GoogleCloudPolicysimulatorV1ListReplayResultsResponse"
    },
    "GoogleCloudPolicysimulatorV1ReplayResultsSummary": {
      "properties": {
        "unchangedCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of replayed log entries with no difference between baseline and simulated policies."
        },
        "newestDate": {
          "description": "The date of the newest log entry replayed.",
          "$ref": "GoogleTypeDate"
        },
        "errorCount": {
          "description": "The number of log entries that could not be replayed.",
          "type": "integer",
          "format": "int32"
        },
        "differenceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of replayed log entries with a difference between baseline and simulated policies."
        },
        "logCount": {
          "description": "The total number of log entries replayed.",
          "format": "int32",
          "type": "integer"
        },
        "oldestDate": {
          "$ref": "GoogleTypeDate",
          "description": "The date of the oldest log entry replayed."
        }
      },
      "description": "Summary statistics about the replayed log entries.",
      "id": "GoogleCloudPolicysimulatorV1ReplayResultsSummary",
      "type": "object"
    },
    "GoogleTypeExpr": {
      "id": "GoogleTypeExpr",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object"
    },
    "GoogleCloudPolicysimulatorV1ReplayResult": {
      "properties": {
        "error": {
          "description": "The error that caused the access tuple replay to fail. This field is only included for access tuples that were not replayed successfully.",
          "$ref": "GoogleRpcStatus"
        },
        "accessTuple": {
          "$ref": "GoogleCloudPolicysimulatorV1AccessTuple",
          "description": "The access tuple that was replayed. This field includes information about the principal, resource, and permission that were involved in the access attempt."
        },
        "name": {
          "description": "The resource name of the `ReplayResult`, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`",
          "type": "string"
        },
        "parent": {
          "description": "The Replay that the access tuple was included in.",
          "type": "string"
        },
        "diff": {
          "description": "The difference between the principal's access under the current (baseline) policies and the principal's access under the proposed (simulated) policies. This field is only included for access tuples that were successfully replayed and had different results under the current policies and the proposed policies.",
          "$ref": "GoogleCloudPolicysimulatorV1ReplayDiff"
        },
        "lastSeenDate": {
          "$ref": "GoogleTypeDate",
          "description": "The latest date this access tuple was seen in the logs."
        }
      },
      "type": "object",
      "description": "The result of replaying a single access tuple against a simulated state.",
      "id": "GoogleCloudPolicysimulatorV1ReplayResult"
    },
    "GoogleCloudPolicysimulatorV1ReplayDiff": {
      "description": "The difference between the results of evaluating an access tuple under the current (baseline) policies and under the proposed (simulated) policies. This difference explains how a principal's access could change if the proposed policies were applied.",
      "properties": {
        "accessDiff": {
          "description": "A summary and comparison of the principal's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple. The evaluation of the principal's access is reported in the AccessState field.",
          "$ref": "GoogleCloudPolicysimulatorV1AccessStateDiff"
        }
      },
      "id": "GoogleCloudPolicysimulatorV1ReplayDiff",
      "type": "object"
    },
    "GoogleIamV1Binding": {
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "GoogleIamV1Binding",
      "type": "object"
    },
    "GoogleCloudPolicysimulatorV1ReplayOperationMetadata": {
      "description": "Metadata about a Replay operation.",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "Time when the request was received.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudPolicysimulatorV1ReplayOperationMetadata"
    },
    "GoogleCloudPolicysimulatorV1AccessStateDiff": {
      "properties": {
        "simulated": {
          "description": "The results of evaluating the access tuple under the proposed (simulated) policies. If the AccessState couldn't be fully evaluated, this field explains why.",
          "$ref": "GoogleCloudPolicysimulatorV1ExplainedAccess"
        },
        "accessChange": {
          "enum": [
            "ACCESS_CHANGE_TYPE_UNSPECIFIED",
            "NO_CHANGE",
            "UNKNOWN_CHANGE",
            "ACCESS_REVOKED",
            "ACCESS_GAINED",
            "ACCESS_MAYBE_REVOKED",
            "ACCESS_MAYBE_GAINED"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The principal's access did not change. This includes the case where both baseline and simulated are UNKNOWN, but the unknown information is equivalent.",
            "The principal's access under both the current policies and the proposed policies is `UNKNOWN`, but the unknown information differs between them.",
            "The principal had access under the current policies (`GRANTED`), but will no longer have access after the proposed changes (`NOT_GRANTED`).",
            "The principal did not have access under the current policies (`NOT_GRANTED`), but will have access after the proposed changes (`GRANTED`).",
            "This result can occur for the following reasons: * The principal had access under the current policies (`GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The principal's access under the current policies is `UNKNOWN`, but they will not have access after the proposed changes (`NOT_GRANTED`).",
            "This result can occur for the following reasons: * The principal did not have access under the current policies (`NOT_GRANTED`), but their access after the proposed changes is `UNKNOWN`. * The principal's access under the current policies is `UNKNOWN`, but they will have access after the proposed changes (`GRANTED`)."
          ],
          "description": "How the principal's access, specified in the AccessState field, changed between the current (baseline) policies and proposed (simulated) policies.",
          "type": "string"
        },
        "baseline": {
          "$ref": "GoogleCloudPolicysimulatorV1ExplainedAccess",
          "description": "The results of evaluating the access tuple under the current (baseline) policies. If the AccessState couldn't be fully evaluated, this field explains why."
        }
      },
      "id": "GoogleCloudPolicysimulatorV1AccessStateDiff",
      "description": "A summary and comparison of the principal's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple.",
      "type": "object"
    },
    "GoogleTypeDate": {
      "id": "GoogleTypeDate",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "month": {
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
          "type": "integer"
        },
        "day": {
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "format": "int32"
        },
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleIamV1AuditConfig": {
      "type": "object",
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      }
    },
    "GoogleCloudPolicysimulatorV1BindingExplanation": {
      "properties": {
        "condition": {
          "$ref": "GoogleTypeExpr",
          "description": "A condition expression that prevents this binding from granting access unless the expression evaluates to `true`. To learn about IAM Conditions, see https://cloud.google.com/iam/docs/conditions-overview."
        },
        "relevance": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "type": "string",
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "NORMAL",
            "HIGH"
          ],
          "description": "The relevance of this binding to the overall determination for the entire policy."
        },
        "memberships": {
          "type": "object",
          "description": "Indicates whether each principal in the binding includes the principal specified in the request, either directly or indirectly. Each key identifies a principal in the binding, and each value indicates whether the principal in the binding includes the principal in the request. For example, suppose that a binding includes the following principals: * `user:alice@example.com` * `group:product-eng@example.com` The principal in the replayed access tuple is `user:bob@example.com`. This user is a principal of the group `group:product-eng@example.com`. For the first principal in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second principal in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.",
          "additionalProperties": {
            "$ref": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership"
          }
        },
        "rolePermissionRelevance": {
          "description": "The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "NORMAL",
            "HIGH"
          ],
          "type": "string"
        },
        "rolePermission": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The permission is included in the role.",
            "The permission is not included in the role.",
            "The user who created the Replay is not allowed to access the binding."
          ],
          "type": "string",
          "enum": [
            "ROLE_PERMISSION_UNSPECIFIED",
            "ROLE_PERMISSION_INCLUDED",
            "ROLE_PERMISSION_NOT_INCLUDED",
            "ROLE_PERMISSION_UNKNOWN_INFO_DENIED"
          ],
          "description": "Indicates whether the role granted by this binding contains the specified permission."
        },
        "access": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The principal has the permission.",
            "The principal does not have the permission.",
            "The principal has the permission only if a condition expression evaluates to `true`.",
            "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
          ],
          "description": "Required. Indicates whether _this binding_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
          "type": "string",
          "enum": [
            "ACCESS_STATE_UNSPECIFIED",
            "GRANTED",
            "NOT_GRANTED",
            "UNKNOWN_CONDITIONAL",
            "UNKNOWN_INFO_DENIED"
          ]
        },
        "role": {
          "description": "The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Details about how a binding in a policy affects a principal's ability to use a permission.",
      "id": "GoogleCloudPolicysimulatorV1BindingExplanation"
    },
    "GoogleCloudPolicysimulatorV1Replay": {
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`",
          "type": "string"
        },
        "config": {
          "$ref": "GoogleCloudPolicysimulatorV1ReplayConfig",
          "description": "Required. The configuration used for the `Replay`."
        },
        "state": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The `Replay` has not started yet.",
            "The `Replay` is currently running.",
            "The `Replay` has successfully completed.",
            "The `Replay` has finished with an error."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ],
          "readOnly": true,
          "description": "Output only. The current state of the `Replay`."
        },
        "resultsSummary": {
          "readOnly": true,
          "$ref": "GoogleCloudPolicysimulatorV1ReplayResultsSummary",
          "description": "Output only. Summary statistics about the replayed log entries."
        }
      },
      "description": "A resource describing a `Replay`, or simulation.",
      "id": "GoogleCloudPolicysimulatorV1Replay"
    },
    "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership": {
      "description": "Details about whether the binding includes the principal.",
      "properties": {
        "relevance": {
          "description": "The relevance of the principal's status to the overall determination for the binding.",
          "type": "string",
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "NORMAL",
            "HIGH"
          ],
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ]
        },
        "membership": {
          "description": "Indicates whether the binding includes the principal.",
          "enum": [
            "MEMBERSHIP_UNSPECIFIED",
            "MEMBERSHIP_INCLUDED",
            "MEMBERSHIP_NOT_INCLUDED",
            "MEMBERSHIP_UNKNOWN_INFO_DENIED",
            "MEMBERSHIP_UNKNOWN_UNSUPPORTED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The binding includes the principal. The principal can be included directly or indirectly. For example: * A principal is included directly if that principal is listed in the binding. * A principal is included indirectly if that principal is in a Google group or Google Workspace domain that is listed in the binding.",
            "The binding does not include the principal.",
            "The user who created the Replay is not allowed to access the binding.",
            "The principal is an unsupported type. Only Google Accounts and service accounts are supported."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudPolicysimulatorV1BindingExplanationAnnotatedMembership"
    },
    "GoogleCloudPolicysimulatorV1ExplainedPolicy": {
      "type": "object",
      "id": "GoogleCloudPolicysimulatorV1ExplainedPolicy",
      "properties": {
        "bindingExplanations": {
          "type": "array",
          "description": "Details about how each binding in the policy affects the principal's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted.",
          "items": {
            "$ref": "GoogleCloudPolicysimulatorV1BindingExplanation"
          }
        },
        "relevance": {
          "enum": [
            "HEURISTIC_RELEVANCE_UNSPECIFIED",
            "NORMAL",
            "HIGH"
          ],
          "description": "The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The data point has a limited effect on the result. Changing the data point is unlikely to affect the overall determination.",
            "The data point has a strong effect on the result. Changing the data point is likely to affect the overall determination."
          ],
          "type": "string"
        },
        "fullResourceName": {
          "type": "string",
          "description": "The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
        },
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "The IAM policy attached to the resource. If the user who created the Replay does not have access to the policy, this field is empty."
        },
        "access": {
          "description": "Indicates whether _this policy_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The principal has the permission.",
            "The principal does not have the permission.",
            "The principal has the permission only if a condition expression evaluates to `true`.",
            "The user who created the Replay does not have access to all of the policies that Policy Simulator needs to evaluate."
          ],
          "type": "string",
          "enum": [
            "ACCESS_STATE_UNSPECIFIED",
            "GRANTED",
            "NOT_GRANTED",
            "UNKNOWN_CONDITIONAL",
            "UNKNOWN_INFO_DENIED"
          ]
        }
      },
      "description": "Details about how a specific IAM Policy contributed to the access check."
    },
    "GoogleIamV1AuditLogConfig": {
      "type": "object",
      "id": "GoogleIamV1AuditLogConfig",
      "properties": {
        "logType": {
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "GoogleIamV1Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "GoogleIamV1Policy",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "auditConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudPolicysimulatorV1ReplayConfig": {
      "properties": {
        "logSource": {
          "enumDescriptions": [
            "An unspecified log source. If the log source is unspecified, the Replay defaults to using `RECENT_ACCESSES`.",
            "All access logs from the last 90 days. These logs may not include logs from the most recent 7 days."
          ],
          "description": "The logs to use as input for the Replay.",
          "type": "string",
          "enum": [
            "LOG_SOURCE_UNSPECIFIED",
            "RECENT_ACCESSES"
          ]
        },
        "policyOverlay": {
          "additionalProperties": {
            "$ref": "GoogleIamV1Policy"
          },
          "type": "object",
          "description": "A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay."
        }
      },
      "description": "The configuration used for a Replay.",
      "type": "object",
      "id": "GoogleCloudPolicysimulatorV1ReplayConfig"
    },
    "GoogleCloudPolicysimulatorV1AccessTuple": {
      "description": "Information about the principal, resource, and permission to check.",
      "type": "object",
      "id": "GoogleCloudPolicysimulatorV1AccessTuple",
      "properties": {
        "permission": {
          "type": "string",
          "description": "Required. The IAM permission to check for the specified principal and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference. For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference."
        },
        "fullResourceName": {
          "type": "string",
          "description": "Required. The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names."
        },
        "principal": {
          "description": "Required. The principal whose access you want to check, in the form of the email address that represents that principal. For example, `alice@example.com` or `my-service-account@my-project.iam.gserviceaccount.com`. The principal must be a Google Account or a service account. Other types of principals are not supported.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "replays": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the Replay to retrieve, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the `Replay`. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/replays/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "policysimulator.projects.locations.replays.get",
                  "response": {
                    "$ref": "GoogleCloudPolicysimulatorV1Replay"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}",
                  "description": "Gets the specified Replay. Each `Replay` is available for at least 7 days."
                },
                "create": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example: `projects/my-example-project/locations/global`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "policysimulator.projects.locations.replays.create",
                  "request": {
                    "$ref": "GoogleCloudPolicysimulatorV1Replay"
                  },
                  "path": "v1/{+parent}/replays",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/replays",
                  "description": "Creates and starts a Replay using the given ReplayConfig."
                }
              },
              "resources": {
                "operations": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "policysimulator.projects.locations.replays.operations.list",
                      "parameters": {
                        "pageSize": {
                          "description": "The standard list page size.",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "filter": {
                          "location": "query",
                          "description": "The standard list filter.",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "The standard list page token.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the operation's parent resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/replays/[^/]+/operations$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningListOperationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/operations"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "id": "policysimulator.projects.locations.replays.operations.get",
                      "parameters": {
                        "name": {
                          "description": "The name of the operation resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/replays/[^/]+/operations/.*$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1/{+name}"
                    }
                  }
                },
                "results": {
                  "methods": {
                    "list": {
                      "id": "policysimulator.projects.locations.replays.results.list",
                      "description": "Lists the results of running a Replay.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "location": "query",
                          "description": "The maximum number of ReplayResult objects to return. Defaults to 5000. The maximum value is 5000; values above 5000 are rounded down to 5000."
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The Replay whose results are listed, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}` Example: `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/replays/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous Simulator.ListReplayResults call. Provide this token to retrieve the next page of results. When paginating, all other parameters provided to [Simulator.ListReplayResults[] must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/results",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/replays/{replaysId}/results",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudPolicysimulatorV1ListReplayResultsResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "id": "policysimulator.operations.get",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^operations/.*$",
              "location": "path",
              "type": "string",
              "description": "The name of the operation resource."
            }
          },
          "httpMethod": "GET",
          "flatPath": "v1/operations/{operationsId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "list": {
          "response": {
            "$ref": "GoogleLongrunningListOperationsResponse"
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "policysimulator.operations.list",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The name of the operation's parent resource.",
              "location": "path",
              "pattern": "^operations$",
              "required": true,
              "type": "string"
            },
            "filter": {
              "description": "The standard list filter.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "format": "int32",
              "description": "The standard list page size."
            }
          },
          "flatPath": "v1/operations",
          "path": "v1/{+name}"
        }
      }
    },
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "replays": {
              "resources": {
                "results": {
                  "methods": {
                    "list": {
                      "id": "policysimulator.organizations.locations.replays.results.list",
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/results",
                      "path": "v1/{+parent}/results",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A page token, received from a previous Simulator.ListReplayResults call. Provide this token to retrieve the next page of results. When paginating, all other parameters provided to [Simulator.ListReplayResults[] must match the call that provided the page token."
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of ReplayResult objects to return. Defaults to 5000. The maximum value is 5000; values above 5000 are rounded down to 5000.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/replays/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The Replay whose results are listed, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}` Example: `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists the results of running a Replay.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudPolicysimulatorV1ListReplayResultsResponse"
                      }
                    }
                  }
                },
                "operations": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "GoogleLongrunningListOperationsResponse"
                      },
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/operations",
                      "id": "policysimulator.organizations.locations.replays.operations.list",
                      "parameters": {
                        "name": {
                          "description": "The name of the operation's parent resource.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/replays/[^/]+/operations$"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "type": "integer",
                          "description": "The standard list page size."
                        },
                        "pageToken": {
                          "description": "The standard list page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "The standard list filter."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+name}"
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "The name of the operation resource.",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/replays/[^/]+/operations/.*$",
                          "required": true
                        }
                      },
                      "id": "policysimulator.organizations.locations.replays.operations.get",
                      "httpMethod": "GET",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "policysimulator.organizations.locations.replays.create",
                  "request": {
                    "$ref": "GoogleCloudPolicysimulatorV1Replay"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/replays",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/replays",
                  "description": "Creates and starts a Replay using the given ReplayConfig.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example: `projects/my-example-project/locations/global`",
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST"
                },
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/replays/{replaysId}",
                  "response": {
                    "$ref": "GoogleCloudPolicysimulatorV1Replay"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/locations/[^/]+/replays/[^/]+$",
                      "description": "Required. The name of the Replay to retrieve, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the `Replay`. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "policysimulator.organizations.locations.replays.get",
                  "description": "Gets the specified Replay. Each `Replay` is available for at least 7 days."
                }
              }
            }
          }
        }
      }
    },
    "folders": {
      "resources": {
        "locations": {
          "resources": {
            "replays": {
              "resources": {
                "results": {
                  "methods": {
                    "list": {
                      "description": "Lists the results of running a Replay.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "policysimulator.folders.locations.replays.results.list",
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/results",
                      "path": "v1/{+parent}/results",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A page token, received from a previous Simulator.ListReplayResults call. Provide this token to retrieve the next page of results. When paginating, all other parameters provided to [Simulator.ListReplayResults[] must match the call that provided the page token."
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of ReplayResult objects to return. Defaults to 5000. The maximum value is 5000; values above 5000 are rounded down to 5000.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/replays/[^/]+$",
                          "description": "Required. The Replay whose results are listed, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}` Example: `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudPolicysimulatorV1ListReplayResultsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "operations": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/operations",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "description": "The standard list filter.",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^folders/[^/]+/locations/[^/]+/replays/[^/]+/operations$",
                          "location": "path",
                          "description": "The name of the operation's parent resource.",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "The standard list page size.",
                          "location": "query",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The standard list page token.",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "policysimulator.folders.locations.replays.operations.list",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "response": {
                        "$ref": "GoogleLongrunningListOperationsResponse"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "GET"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "policysimulator.folders.locations.replays.operations.get",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "The name of the operation resource.",
                          "pattern": "^folders/[^/]+/locations/[^/]+/replays/[^/]+/operations/.*$",
                          "required": true
                        }
                      },
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}/operations/{operationsId}",
                      "httpMethod": "GET",
                      "path": "v1/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/replays",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates and starts a Replay using the given ReplayConfig.",
                  "path": "v1/{+parent}/replays",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example: `projects/my-example-project/locations/global`",
                      "pattern": "^folders/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudPolicysimulatorV1Replay"
                  },
                  "id": "policysimulator.folders.locations.replays.create"
                },
                "get": {
                  "description": "Gets the specified Replay. Each `Replay` is available for at least 7 days.",
                  "httpMethod": "GET",
                  "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/replays/{replaysId}",
                  "response": {
                    "$ref": "GoogleCloudPolicysimulatorV1Replay"
                  },
                  "path": "v1/{+name}",
                  "id": "policysimulator.folders.locations.replays.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the Replay to retrieve, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the `Replay`. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`",
                      "pattern": "^folders/[^/]+/locations/[^/]+/replays/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "version": "v1",
  "mtlsRootUrl": "https://policysimulator.mtls.googleapis.com/",
  "documentationLink": "https://cloud.google.com/iam/docs/simulating-access",
  "canonicalName": "Policy Simulator",
  "servicePath": "",
  "version_module": true,
  "kind": "discovery#restDescription",
  "title": "Policy Simulator API",
  "ownerName": "Google",
  "name": "policysimulator",
  "basePath": ""
}

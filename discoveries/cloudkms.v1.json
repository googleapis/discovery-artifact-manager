{
  "documentationLink": "https://cloud.google.com/kms/",
  "version_module": true,
  "name": "cloudkms",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "keyRings": {
              "resources": {
                "importJobs": {
                  "methods": {
                    "get": {
                      "id": "cloudkms.projects.locations.keyRings.importJobs.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ImportJob"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the ImportJob to get.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "description": "Returns metadata for a given ImportJob.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "getIamPolicy": {
                      "httpMethod": "GET",
                      "id": "cloudkms.projects.locations.keyRings.importJobs.getIamPolicy",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1/{+resource}:getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "type": "integer",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "format": "int32"
                        },
                        "resource": {
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$"
                        }
                      }
                    },
                    "setIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "path": "v1/{+resource}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "cloudkms.projects.locations.keyRings.importJobs.setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                    },
                    "list": {
                      "path": "v1/{+parent}/importJobs",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "cloudkms.projects.locations.keyRings.importJobs.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs",
                      "response": {
                        "$ref": "ListImportJobsResponse"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "Optional. Optional pagination token, returned earlier via ListImportJobsResponse.next_page_token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. Only include resources that match the filter in the response. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. Optional limit on the number of ImportJobs to include in the response. Further ImportJobs can subsequently be obtained by including the ListImportJobsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                          "format": "int32"
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "Optional. Specify how the results should be sorted. If not specified, the results will be sorted in the default order. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The resource name of the KeyRing to list, in the format `projects/*/locations/*/keyRings/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "description": "Lists ImportJobs."
                    },
                    "testIamPermissions": {
                      "path": "v1/{+resource}:testIamPermissions",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "id": "cloudkms.projects.locations.keyRings.importJobs.testIamPermissions",
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameters": {
                        "resource": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/importJobs/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs/{importJobsId}:testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      }
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/importJobs",
                      "httpMethod": "POST",
                      "description": "Create a new ImportJob within a KeyRing. ImportJob.import_method is required.",
                      "response": {
                        "$ref": "ImportJob"
                      },
                      "id": "cloudkms.projects.locations.keyRings.importJobs.create",
                      "request": {
                        "$ref": "ImportJob"
                      },
                      "path": "v1/{+parent}/importJobs",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "importJobId": {
                          "type": "string",
                          "description": "Required. It must be unique within a KeyRing and match the regular expression `[a-zA-Z0-9_-]{1,63}`",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the KeyRing associated with the ImportJobs.",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ]
                    }
                  }
                },
                "cryptoKeys": {
                  "methods": {
                    "list": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.list",
                      "path": "v1/{+parent}/cryptoKeys",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists CryptoKeys.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "response": {
                        "$ref": "ListCryptoKeysResponse"
                      },
                      "parameters": {
                        "filter": {
                          "description": "Optional. Only include resources that match the filter in the response. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "description": "Optional. Optional pagination token, returned earlier via ListCryptoKeysResponse.next_page_token.",
                          "type": "string",
                          "location": "query"
                        },
                        "versionView": {
                          "enum": [
                            "CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED",
                            "FULL"
                          ],
                          "location": "query",
                          "type": "string",
                          "enumDescriptions": [
                            "Default view for each CryptoKeyVersion. Does not include the attestation field.",
                            "Provides all fields in each CryptoKeyVersion, including the attestation."
                          ],
                          "description": "The fields of the primary version to include in the response."
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Specify how the results should be sorted. If not specified, the results will be sorted in the default order. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering)."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the KeyRing to list, in the format `projects/*/locations/*/keyRings/*`."
                        },
                        "pageSize": {
                          "description": "Optional. Optional limit on the number of CryptoKeys to include in the response. Further CryptoKeys can subsequently be obtained by including the ListCryptoKeysResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        }
                      }
                    },
                    "encrypt": {
                      "description": "Encrypts data, so that it can only be recovered by a call to Decrypt. The CryptoKey.purpose must be ENCRYPT_DECRYPT.",
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt",
                      "response": {
                        "$ref": "EncryptResponse"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:encrypt",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the CryptoKey or CryptoKeyVersion to use for encryption. If a CryptoKey is specified, the server will use its primary version.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/.*$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}:encrypt",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "EncryptRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ]
                    },
                    "decrypt": {
                      "request": {
                        "$ref": "DecryptRequest"
                      },
                      "response": {
                        "$ref": "DecryptResponse"
                      },
                      "description": "Decrypts data that was protected by Encrypt. The CryptoKey.purpose must be ENCRYPT_DECRYPT.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "description": "Required. The resource name of the CryptoKey to use for decryption. The server will choose the appropriate version.",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}:decrypt",
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:decrypt",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "updatePrimaryVersion": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The resource name of the CryptoKey to update.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
                      "request": {
                        "$ref": "UpdateCryptoKeyPrimaryVersionRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Update the version of a CryptoKey that will be used in Encrypt. Returns an error if called on a key whose purpose is not ENCRYPT_DECRYPT.",
                      "path": "v1/{+name}:updatePrimaryVersion",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:updatePrimaryVersion",
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "httpMethod": "POST"
                    },
                    "testIamPermissions": {
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.testIamPermissions",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:testIamPermissions",
                      "path": "v1/{+resource}:testIamPermissions",
                      "httpMethod": "POST"
                    },
                    "getIamPolicy": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$"
                        }
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "response": {
                        "$ref": "Policy"
                      },
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "create": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "parameters": {
                        "cryptoKeyId": {
                          "description": "Required. It must be unique within a KeyRing and match the regular expression `[a-zA-Z0-9_-]{1,63}`",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The name of the KeyRing associated with the CryptoKeys.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                          "required": true
                        },
                        "skipInitialVersionCreation": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set to true, the request will create a CryptoKey without any CryptoKeyVersions. You must manually call CreateCryptoKeyVersion or ImportCryptoKeyVersion before you can use this CryptoKey."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys",
                      "description": "Create a new CryptoKey within a KeyRing. CryptoKey.purpose and CryptoKey.version_template.algorithm are required.",
                      "request": {
                        "$ref": "CryptoKey"
                      },
                      "path": "v1/{+parent}/cryptoKeys",
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST"
                    },
                    "setIamPolicy": {
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy",
                      "path": "v1/{+resource}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "required": true
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}:setIamPolicy"
                    },
                    "get": {
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Returns metadata for a given CryptoKey, as well as its primary CryptoKeyVersion.",
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "description": "Required. The name of the CryptoKey to get."
                        }
                      },
                      "path": "v1/{+name}"
                    },
                    "patch": {
                      "response": {
                        "$ref": "CryptoKey"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "CryptoKey"
                      },
                      "description": "Update a CryptoKey.",
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "description": "Required. List of fields to be updated in this request.",
                          "location": "query",
                          "format": "google-fieldmask"
                        },
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                          "description": "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                          "type": "string"
                        }
                      },
                      "id": "cloudkms.projects.locations.keyRings.cryptoKeys.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloudkms"
                      ],
                      "httpMethod": "PATCH",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}"
                    }
                  },
                  "resources": {
                    "cryptoKeyVersions": {
                      "methods": {
                        "import": {
                          "description": "Import wrapped key material into a CryptoKeyVersion. All requests must specify a CryptoKey. If a CryptoKeyVersion is additionally specified in the request, key material will be reimported into that version. Otherwise, a new version will be created, and will be assigned the next sequential id within the CryptoKey.",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "ImportCryptoKeyVersionRequest"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions:import",
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                              "description": "Required. The name of the CryptoKey to be imported into. The create permission is only required on this key when creating a new CryptoKeyVersion.",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import",
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1/{+parent}/cryptoKeyVersions:import",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ]
                        },
                        "asymmetricDecrypt": {
                          "path": "v1/{+name}:asymmetricDecrypt",
                          "description": "Decrypts data that was encrypted with a public key retrieved from GetPublicKey corresponding to a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_DECRYPT.",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "AsymmetricDecryptRequest"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:asymmetricDecrypt",
                          "httpMethod": "POST",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt",
                          "response": {
                            "$ref": "AsymmetricDecryptResponse"
                          },
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "description": "Required. The resource name of the CryptoKeyVersion to use for decryption.",
                              "type": "string",
                              "location": "path",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ]
                        },
                        "getPublicKey": {
                          "path": "v1/{+name}/publicKey",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}/publicKey",
                          "httpMethod": "GET",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey",
                          "response": {
                            "$ref": "PublicKey"
                          },
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the CryptoKeyVersion public key to get.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "description": "Returns the public key for the given CryptoKeyVersion. The CryptoKey.purpose must be ASYMMETRIC_SIGN or ASYMMETRIC_DECRYPT.",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "list": {
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "response": {
                            "$ref": "ListCryptoKeyVersionsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "orderBy": {
                              "location": "query",
                              "description": "Optional. Specify how the results should be sorted. If not specified, the results will be sorted in the default order. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                              "type": "string"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "Required. The resource name of the CryptoKey to list, in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                              "type": "string"
                            },
                            "view": {
                              "location": "query",
                              "description": "The fields to include in the response.",
                              "enum": [
                                "CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED",
                                "FULL"
                              ],
                              "type": "string",
                              "enumDescriptions": [
                                "Default view for each CryptoKeyVersion. Does not include the attestation field.",
                                "Provides all fields in each CryptoKeyVersion, including the attestation."
                              ]
                            },
                            "filter": {
                              "description": "Optional. Only include resources that match the filter in the response. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "location": "query",
                              "description": "Optional. Optional limit on the number of CryptoKeyVersions to include in the response. Further CryptoKeyVersions can subsequently be obtained by including the ListCryptoKeyVersionsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "Optional. Optional pagination token, returned earlier via ListCryptoKeyVersionsResponse.next_page_token.",
                              "location": "query"
                            }
                          },
                          "path": "v1/{+parent}/cryptoKeyVersions",
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "description": "Lists CryptoKeyVersions."
                        },
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "path": "v1/{+name}",
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.get",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Returns metadata for a given CryptoKeyVersion.",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "description": "Required. The name of the CryptoKeyVersion to get.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          }
                        },
                        "create": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "path": "v1/{+parent}/cryptoKeyVersions",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+$",
                              "description": "Required. The name of the CryptoKey associated with the CryptoKeyVersions.",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "description": "Create a new CryptoKeyVersion in a CryptoKey. The server will assign the next sequential id. If unset, state will be set to ENABLED.",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
                          "httpMethod": "POST"
                        },
                        "restore": {
                          "request": {
                            "$ref": "RestoreCryptoKeyVersionRequest"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Restore a CryptoKeyVersion in the DESTROY_SCHEDULED state. Upon restoration of the CryptoKeyVersion, state will be set to DISABLED, and destroy_time will be cleared.",
                          "parameters": {
                            "name": {
                              "description": "Required. The resource name of the CryptoKeyVersion to restore.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "path": "v1/{+name}:restore",
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:restore",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ]
                        },
                        "destroy": {
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "description": "Required. The resource name of the CryptoKeyVersion to destroy.",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "request": {
                            "$ref": "DestroyCryptoKeyVersionRequest"
                          },
                          "description": "Schedule a CryptoKeyVersion for destruction. Upon calling this method, CryptoKeyVersion.state will be set to DESTROY_SCHEDULED, and destroy_time will be set to the time destroy_scheduled_duration in the future. At that time, the state will automatically change to DESTROYED, and the key material will be irrevocably destroyed. Before the destroy_time is reached, RestoreCryptoKeyVersion may be called to reverse the process.",
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
                          "path": "v1/{+name}:destroy",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:destroy"
                        },
                        "asymmetricSign": {
                          "httpMethod": "POST",
                          "parameters": {
                            "name": {
                              "required": true,
                              "description": "Required. The resource name of the CryptoKeyVersion to use for signing.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "AsymmetricSignResponse"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "AsymmetricSignRequest"
                          },
                          "path": "v1/{+name}:asymmetricSign",
                          "description": "Signs data using a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_SIGN, producing a signature that can be verified with the public key retrieved from GetPublicKey.",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:asymmetricSign",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ]
                        },
                        "macSign": {
                          "path": "v1/{+name}:macSign",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "Required. The resource name of the CryptoKeyVersion to use for signing.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "request": {
                            "$ref": "MacSignRequest"
                          },
                          "description": "Signs data using a CryptoKeyVersion with CryptoKey.purpose MAC, producing a tag that can be verified by another source with the same key.",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "MacSignResponse"
                          },
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macSign",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:macSign"
                        },
                        "patch": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "path": "v1/{+name}",
                          "parameters": {
                            "updateMask": {
                              "format": "google-fieldmask",
                              "type": "string",
                              "description": "Required. List of fields to be updated in this request.",
                              "location": "query"
                            },
                            "name": {
                              "description": "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}",
                          "description": "Update a CryptoKeyVersion's metadata. state may be changed between ENABLED and DISABLED using this method. See DestroyCryptoKeyVersion and RestoreCryptoKeyVersion to move between other states.",
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
                          "request": {
                            "$ref": "CryptoKeyVersion"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "PATCH"
                        },
                        "macVerify": {
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloudkms"
                          ],
                          "path": "v1/{+name}:macVerify",
                          "response": {
                            "$ref": "MacVerifyResponse"
                          },
                          "parameters": {
                            "name": {
                              "location": "path",
                              "description": "Required. The resource name of the CryptoKeyVersion to use for verification.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+/cryptoKeys/[^/]+/cryptoKeyVersions/[^/]+$",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "id": "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macVerify",
                          "request": {
                            "$ref": "MacVerifyRequest"
                          },
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}/cryptoKeys/{cryptoKeysId}/cryptoKeyVersions/{cryptoKeyVersionsId}:macVerify",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Verifies MAC tag using a CryptoKeyVersion with CryptoKey.purpose MAC, and returns a response that indicates whether or not the verification was successful."
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "response": {
                    "$ref": "KeyRing"
                  },
                  "id": "cloudkms.projects.locations.keyRings.get",
                  "description": "Returns metadata for a given KeyRing.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the KeyRing to get."
                    }
                  }
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "cloudkms.projects.locations.keyRings.setIamPolicy"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource name of the location associated with the KeyRings, in the format `projects/*/locations/*`.",
                      "required": true
                    },
                    "keyRingId": {
                      "description": "Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+parent}/keyRings",
                  "response": {
                    "$ref": "KeyRing"
                  },
                  "request": {
                    "$ref": "KeyRing"
                  },
                  "httpMethod": "POST",
                  "id": "cloudkms.projects.locations.keyRings.create",
                  "description": "Create a new KeyRing in a given Project and Location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings"
                },
                "testIamPermissions": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:testIamPermissions",
                  "id": "cloudkms.projects.locations.keyRings.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings/{keyRingsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "cloudkms.projects.locations.keyRings.getIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/keyRings/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloudkms"
                  ],
                  "response": {
                    "$ref": "ListKeyRingsResponse"
                  },
                  "id": "cloudkms.projects.locations.keyRings.list",
                  "description": "Lists KeyRings.",
                  "path": "v1/{+parent}/keyRings",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Specify how the results should be sorted. If not specified, the results will be sorted in the default order. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering)."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Optional. Optional limit on the number of KeyRings to include in the response. Further KeyRings can subsequently be obtained by including the ListKeyRingsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the location associated with the KeyRings, in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. Optional pagination token, returned earlier via ListKeyRingsResponse.next_page_token.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Optional. Only include resources that match the filter in the response. For more information, see [Sorting and filtering list results](https://cloud.google.com/kms/docs/sorting-and-filtering).",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/keyRings",
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloudkms"
              ],
              "id": "cloudkms.projects.locations.get",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}"
            },
            "generateRandomBytes": {
              "request": {
                "$ref": "GenerateRandomBytesRequest"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:generateRandomBytes",
              "parameterOrder": [
                "location"
              ],
              "response": {
                "$ref": "GenerateRandomBytesResponse"
              },
              "parameters": {
                "location": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "The project-specific location in which to generate random bytes. For example, \"projects/my-project/locations/us-central1\".",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "cloudkms.projects.locations.generateRandomBytes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloudkms"
              ],
              "httpMethod": "POST",
              "description": "Generate random bytes using the Cloud KMS randomness source in the provided location.",
              "path": "v1/{+location}:generateRandomBytes"
            },
            "list": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloudkms"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "path": "v1/{+name}/locations",
              "id": "cloudkms.projects.locations.list",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1/projects/{projectsId}/locations"
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://cloudkms.googleapis.com/",
  "schemas": {
    "MacVerifyRequest": {
      "description": "Request message for KeyManagementService.MacVerify.",
      "properties": {
        "macCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Optional. An optional CRC32C checksum of the MacVerifyRequest.mac. If specified, KeyManagementService will verify the integrity of the received MacVerifyRequest.mac using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(MacVerifyRequest.tag) is equal to MacVerifyRequest.mac_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type."
        },
        "data": {
          "description": "Required. The data used previously as a MacSignRequest.data to generate the MAC tag.",
          "format": "byte",
          "type": "string"
        },
        "mac": {
          "description": "Required. The signature to verify.",
          "type": "string",
          "format": "byte"
        },
        "dataCrc32c": {
          "type": "string",
          "description": "Optional. An optional CRC32C checksum of the MacVerifyRequest.data. If specified, KeyManagementService will verify the integrity of the received MacVerifyRequest.data using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(MacVerifyRequest.data) is equal to MacVerifyRequest.data_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "format": "int64"
        }
      },
      "id": "MacVerifyRequest",
      "type": "object"
    },
    "ListCryptoKeysResponse": {
      "description": "Response message for KeyManagementService.ListCryptoKeys.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in ListCryptoKeysRequest.page_token to retrieve the next page of results."
        },
        "totalSize": {
          "type": "integer",
          "description": "The total number of CryptoKeys that matched the query.",
          "format": "int32"
        },
        "cryptoKeys": {
          "description": "The list of CryptoKeys.",
          "items": {
            "$ref": "CryptoKey"
          },
          "type": "array"
        }
      },
      "id": "ListCryptoKeysResponse"
    },
    "Digest": {
      "id": "Digest",
      "description": "A Digest holds a cryptographic message digest.",
      "properties": {
        "sha256": {
          "type": "string",
          "description": "A message digest produced with the SHA-256 algorithm.",
          "format": "byte"
        },
        "sha512": {
          "description": "A message digest produced with the SHA-512 algorithm.",
          "format": "byte",
          "type": "string"
        },
        "sha384": {
          "type": "string",
          "description": "A message digest produced with the SHA-384 algorithm.",
          "format": "byte"
        }
      },
      "type": "object"
    },
    "AsymmetricSignResponse": {
      "id": "AsymmetricSignResponse",
      "type": "object",
      "description": "Response message for KeyManagementService.AsymmetricSign.",
      "properties": {
        "verifiedDataCrc32c": {
          "type": "boolean",
          "description": "Integrity verification field. A flag indicating whether AsymmetricSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that AsymmetricSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries."
        },
        "signatureCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Integrity verification field. A CRC32C checksum of the returned AsymmetricSignResponse.signature. An integrity check of AsymmetricSignResponse.signature can be performed by computing the CRC32C checksum of AsymmetricSignResponse.signature and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type."
        },
        "protectionLevel": {
          "description": "The ProtectionLevel of the CryptoKeyVersion used for signing.",
          "type": "string",
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ]
        },
        "verifiedDigestCrc32c": {
          "description": "Integrity verification field. A flag indicating whether AsymmetricSignRequest.digest_crc32c was received by KeyManagementService and used for the integrity verification of the digest. A false value of this field indicates either that AsymmetricSignRequest.digest_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.digest_crc32c but this field is still false, discard the response and perform a limited number of retries.",
          "type": "boolean"
        },
        "name": {
          "description": "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
          "type": "string"
        },
        "signature": {
          "format": "byte",
          "description": "The created signature.",
          "type": "string"
        }
      }
    },
    "ListCryptoKeyVersionsResponse": {
      "description": "Response message for KeyManagementService.ListCryptoKeyVersions.",
      "properties": {
        "cryptoKeyVersions": {
          "description": "The list of CryptoKeyVersions.",
          "type": "array",
          "items": {
            "$ref": "CryptoKeyVersion"
          }
        },
        "totalSize": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of CryptoKeyVersions that matched the query."
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in ListCryptoKeyVersionsRequest.page_token to retrieve the next page of results.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListCryptoKeyVersionsResponse"
    },
    "ListKeyRingsResponse": {
      "type": "object",
      "id": "ListKeyRingsResponse",
      "properties": {
        "totalSize": {
          "type": "integer",
          "description": "The total number of KeyRings that matched the query.",
          "format": "int32"
        },
        "keyRings": {
          "description": "The list of KeyRings.",
          "type": "array",
          "items": {
            "$ref": "KeyRing"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in ListKeyRingsRequest.page_token to retrieve the next page of results."
        }
      },
      "description": "Response message for KeyManagementService.ListKeyRings."
    },
    "DestroyCryptoKeyVersionRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for KeyManagementService.DestroyCryptoKeyVersion.",
      "id": "DestroyCryptoKeyVersionRequest"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AsymmetricDecryptRequest": {
      "description": "Request message for KeyManagementService.AsymmetricDecrypt.",
      "id": "AsymmetricDecryptRequest",
      "properties": {
        "ciphertext": {
          "description": "Required. The data encrypted with the named CryptoKeyVersion's public key using OAEP.",
          "format": "byte",
          "type": "string"
        },
        "ciphertextCrc32c": {
          "type": "string",
          "description": "Optional. An optional CRC32C checksum of the AsymmetricDecryptRequest.ciphertext. If specified, KeyManagementService will verify the integrity of the received AsymmetricDecryptRequest.ciphertext using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(AsymmetricDecryptRequest.ciphertext) is equal to AsymmetricDecryptRequest.ciphertext_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        }
      },
      "type": "object"
    },
    "CryptoKeyVersion": {
      "type": "object",
      "properties": {
        "attestation": {
          "readOnly": true,
          "description": "Output only. Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only provided for key versions with protection_level HSM.",
          "$ref": "KeyOperationAttestation"
        },
        "reimportEligible": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version."
        },
        "destroyEventTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this CryptoKeyVersion was created.",
          "type": "string"
        },
        "importFailureReason": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED."
        },
        "destroyTime": {
          "readOnly": true,
          "description": "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
          "type": "string",
          "format": "google-datetime"
        },
        "importJob": {
          "readOnly": true,
          "description": "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
          "readOnly": true
        },
        "protectionLevel": {
          "readOnly": true,
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "description": "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "type": "string"
        },
        "state": {
          "enum": [
            "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED",
            "PENDING_GENERATION",
            "ENABLED",
            "DISABLED",
            "DESTROYED",
            "DESTROY_SCHEDULED",
            "PENDING_IMPORT",
            "IMPORT_FAILED"
          ],
          "description": "The current state of the CryptoKeyVersion.",
          "enumDescriptions": [
            "Not specified.",
            "This version is still being generated. It may not be used, enabled, disabled, or destroyed yet. Cloud KMS will automatically mark this version ENABLED as soon as the version is ready.",
            "This version may be used for cryptographic operations.",
            "This version may not be used, but the key material is still available, and the version can be placed back into the ENABLED state.",
            "This version is destroyed, and the key material is no longer stored. This version may only become ENABLED again if this version is reimport_eligible and the original key material is reimported with a call to KeyManagementService.ImportCryptoKeyVersion.",
            "This version is scheduled for destruction, and will be destroyed soon. Call RestoreCryptoKeyVersion to put it back into the DISABLED state.",
            "This version is still being imported. It may not be used, enabled, disabled, or destroyed yet. Cloud KMS will automatically mark this version ENABLED as soon as the version is ready.",
            "This version was not imported successfully. It may not be used, enabled, disabled, or destroyed. The submitted key material has been discarded. Additional details can be found in CryptoKeyVersion.import_failure_reason."
          ],
          "type": "string"
        },
        "generateTime": {
          "description": "Output only. The time this CryptoKeyVersion's key material was generated.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "importTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
          "readOnly": true
        },
        "algorithm": {
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_SIGN_RAW_PKCS1_2048",
            "RSA_SIGN_RAW_PKCS1_3072",
            "RSA_SIGN_RAW_PKCS1_4096",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA1",
            "RSA_DECRYPT_OAEP_3072_SHA1",
            "RSA_DECRYPT_OAEP_4096_SHA1",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EC_SIGN_SECP256K1_SHA256",
            "HMAC_SHA256",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA1 digest.",
            "RSAES-OAEP 3072 bit key with a SHA1 digest.",
            "RSAES-OAEP 4096 bit key with a SHA1 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "ECDSA on the non-NIST secp256k1 curve. This curve is only supported for HSM protection level.",
            "HMAC-SHA256 signing with a 256 bit key.",
            "Algorithm representing symmetric encryption by an external key manager."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports."
        },
        "externalProtectionLevelOptions": {
          "description": "ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level.",
          "$ref": "ExternalProtectionLevelOptions"
        }
      },
      "description": "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
      "id": "CryptoKeyVersion"
    },
    "KeyRing": {
      "description": "A KeyRing is a toplevel logical grouping of CryptoKeys.",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this KeyRing was created.",
          "readOnly": true
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name for the KeyRing in the format `projects/*/locations/*/keyRings/*`."
        }
      },
      "type": "object",
      "id": "KeyRing"
    },
    "AsymmetricDecryptResponse": {
      "type": "object",
      "properties": {
        "plaintextCrc32c": {
          "description": "Integrity verification field. A CRC32C checksum of the returned AsymmetricDecryptResponse.plaintext. An integrity check of AsymmetricDecryptResponse.plaintext can be performed by computing the CRC32C checksum of AsymmetricDecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "type": "string",
          "format": "int64"
        },
        "verifiedCiphertextCrc32c": {
          "type": "boolean",
          "description": "Integrity verification field. A flag indicating whether AsymmetricDecryptRequest.ciphertext_crc32c was received by KeyManagementService and used for the integrity verification of the ciphertext. A false value of this field indicates either that AsymmetricDecryptRequest.ciphertext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricDecryptRequest.ciphertext_crc32c but this field is still false, discard the response and perform a limited number of retries."
        },
        "protectionLevel": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "description": "The ProtectionLevel of the CryptoKeyVersion used in decryption."
        },
        "plaintext": {
          "description": "The decrypted data originally encrypted with the matching public key.",
          "format": "byte",
          "type": "string"
        }
      },
      "description": "Response message for KeyManagementService.AsymmetricDecrypt.",
      "id": "AsymmetricDecryptResponse"
    },
    "GenerateRandomBytesRequest": {
      "id": "GenerateRandomBytesRequest",
      "properties": {
        "protectionLevel": {
          "type": "string",
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "description": "The ProtectionLevel to use when generating the random data. Defaults to SOFTWARE.",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ]
        },
        "lengthBytes": {
          "format": "int32",
          "description": "The length in bytes of the amount of randomness to retrieve. Minimum 8 bytes, maximum 1024 bytes.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "Request message for KeyManagementService.GenerateRandomBytes."
    },
    "KeyOperationAttestation": {
      "description": "Contains an HSM-generated attestation about a key operation. For more information, see [Verifying attestations] (https://cloud.google.com/kms/docs/attest-key).",
      "properties": {
        "format": {
          "enum": [
            "ATTESTATION_FORMAT_UNSPECIFIED",
            "CAVIUM_V1_COMPRESSED",
            "CAVIUM_V2_COMPRESSED"
          ],
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Cavium HSM attestation compressed with gzip. Note that this format is defined by Cavium and subject to change at any time.",
            "Cavium HSM attestation V2 compressed with gzip. This is a new format introduced in Cavium's version 3.2-08."
          ],
          "description": "Output only. The format of the attestation data."
        },
        "certChains": {
          "$ref": "CertificateChains",
          "description": "Output only. The certificate chains needed to validate the attestation",
          "readOnly": true
        },
        "content": {
          "type": "string",
          "readOnly": true,
          "format": "byte",
          "description": "Output only. The attestation data provided by the HSM when the key operation was performed."
        }
      },
      "id": "KeyOperationAttestation",
      "type": "object"
    },
    "AuditConfig": {
      "properties": {
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "id": "AuditConfig",
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
    },
    "MacVerifyResponse": {
      "properties": {
        "protectionLevel": {
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "description": "The ProtectionLevel of the CryptoKeyVersion used for verification.",
          "type": "string"
        },
        "verifiedMacCrc32c": {
          "type": "boolean",
          "description": "Integrity verification field. A flag indicating whether MacVerifyRequest.mac_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.mac_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.mac_crc32c but this field is still false, discard the response and perform a limited number of retries."
        },
        "verifiedSuccessIntegrity": {
          "type": "boolean",
          "description": "Integrity verification field. This value is used for the integrity verification of [MacVerifyResponse.success]. If the value of this field contradicts the value of [MacVerifyResponse.success], discard the response and perform a limited number of retries."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the CryptoKeyVersion used for verification. Check this field to verify that the intended resource was used for verification."
        },
        "success": {
          "type": "boolean",
          "description": "This field indicates whether or not the verification operation for MacVerifyRequest.mac over MacVerifyRequest.data was successful."
        },
        "verifiedDataCrc32c": {
          "type": "boolean",
          "description": "Integrity verification field. A flag indicating whether MacVerifyRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries."
        }
      },
      "description": "Response message for KeyManagementService.MacVerify.",
      "id": "MacVerifyResponse",
      "type": "object"
    },
    "Binding": {
      "type": "object",
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
        }
      }
    },
    "CryptoKey": {
      "id": "CryptoKey",
      "properties": {
        "primary": {
          "$ref": "CryptoKeyVersion",
          "readOnly": true,
          "description": "Output only. A copy of the \"primary\" CryptoKeyVersion that will be used by Encrypt when this CryptoKey is given in EncryptRequest.name. The CryptoKey's primary version can be updated via UpdateCryptoKeyPrimaryVersion. Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be omitted."
        },
        "rotationPeriod": {
          "format": "google-duration",
          "description": "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
          "type": "object"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this CryptoKey was created.",
          "type": "string"
        },
        "nextRotationTime": {
          "description": "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
          "format": "google-datetime",
          "type": "string"
        },
        "importOnly": {
          "type": "boolean",
          "description": "Immutable. Whether this key may contain imported versions only."
        },
        "destroyScheduledDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`."
        },
        "purpose": {
          "enum": [
            "CRYPTO_KEY_PURPOSE_UNSPECIFIED",
            "ENCRYPT_DECRYPT",
            "ASYMMETRIC_SIGN",
            "ASYMMETRIC_DECRYPT",
            "MAC"
          ],
          "enumDescriptions": [
            "Not specified.",
            "CryptoKeys with this purpose may be used with Encrypt and Decrypt.",
            "CryptoKeys with this purpose may be used with AsymmetricSign and GetPublicKey.",
            "CryptoKeys with this purpose may be used with AsymmetricDecrypt and GetPublicKey.",
            "CryptoKeys with this purpose may be used with MacSign."
          ],
          "type": "string",
          "description": "Immutable. The immutable purpose of this CryptoKey."
        },
        "versionTemplate": {
          "$ref": "CryptoKeyVersionTemplate",
          "description": "A template describing settings for new CryptoKeyVersion instances. The properties of new CryptoKeyVersion instances created by either CreateCryptoKeyVersion or auto-rotation are controlled by this template."
        }
      },
      "type": "object",
      "description": "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations."
    },
    "MacSignRequest": {
      "id": "MacSignRequest",
      "properties": {
        "dataCrc32c": {
          "type": "string",
          "description": "Optional. An optional CRC32C checksum of the MacSignRequest.data. If specified, KeyManagementService will verify the integrity of the received MacSignRequest.data using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(MacSignRequest.data) is equal to MacSignRequest.data_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "format": "int64"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Required. The data to sign. The MAC tag is computed over this data field based on the specific algorithm."
        }
      },
      "description": "Request message for KeyManagementService.MacSign.",
      "type": "object"
    },
    "CertificateChains": {
      "description": "Certificate chains needed to verify the attestation. Certificates in chains are PEM-encoded and are ordered based on https://tools.ietf.org/html/rfc5246#section-7.4.2.",
      "type": "object",
      "properties": {
        "caviumCerts": {
          "description": "Cavium certificate chain corresponding to the attestation.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "googleCardCerts": {
          "items": {
            "type": "string"
          },
          "description": "Google card certificate chain corresponding to the attestation.",
          "type": "array"
        },
        "googlePartitionCerts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Google partition certificate chain corresponding to the attestation."
        }
      },
      "id": "CertificateChains"
    },
    "DecryptRequest": {
      "id": "DecryptRequest",
      "description": "Request message for KeyManagementService.Decrypt.",
      "type": "object",
      "properties": {
        "ciphertextCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Optional. An optional CRC32C checksum of the DecryptRequest.ciphertext. If specified, KeyManagementService will verify the integrity of the received DecryptRequest.ciphertext using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(DecryptRequest.ciphertext) is equal to DecryptRequest.ciphertext_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type."
        },
        "ciphertext": {
          "type": "string",
          "description": "Required. The encrypted data originally returned in EncryptResponse.ciphertext.",
          "format": "byte"
        },
        "additionalAuthenticatedData": {
          "format": "byte",
          "type": "string",
          "description": "Optional. Optional data that must match the data originally supplied in EncryptRequest.additional_authenticated_data."
        },
        "additionalAuthenticatedDataCrc32c": {
          "format": "int64",
          "type": "string",
          "description": "Optional. An optional CRC32C checksum of the DecryptRequest.additional_authenticated_data. If specified, KeyManagementService will verify the integrity of the received DecryptRequest.additional_authenticated_data using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(DecryptRequest.additional_authenticated_data) is equal to DecryptRequest.additional_authenticated_data_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type."
        }
      }
    },
    "EncryptRequest": {
      "properties": {
        "plaintextCrc32c": {
          "description": "Optional. An optional CRC32C checksum of the EncryptRequest.plaintext. If specified, KeyManagementService will verify the integrity of the received EncryptRequest.plaintext using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(EncryptRequest.plaintext) is equal to EncryptRequest.plaintext_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "format": "int64",
          "type": "string"
        },
        "additionalAuthenticatedDataCrc32c": {
          "format": "int64",
          "description": "Optional. An optional CRC32C checksum of the EncryptRequest.additional_authenticated_data. If specified, KeyManagementService will verify the integrity of the received EncryptRequest.additional_authenticated_data using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(EncryptRequest.additional_authenticated_data) is equal to EncryptRequest.additional_authenticated_data_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "type": "string"
        },
        "additionalAuthenticatedData": {
          "format": "byte",
          "description": "Optional. Optional data that, if specified, must also be provided during decryption through DecryptRequest.additional_authenticated_data. The maximum size depends on the key version's protection_level. For SOFTWARE keys, the AAD must be no larger than 64KiB. For HSM keys, the combined length of the plaintext and additional_authenticated_data fields must be no larger than 8KiB.",
          "type": "string"
        },
        "plaintext": {
          "description": "Required. The data to encrypt. Must be no larger than 64KiB. The maximum size depends on the key version's protection_level. For SOFTWARE keys, the plaintext must be no larger than 64KiB. For HSM keys, the combined length of the plaintext and additional_authenticated_data fields must be no larger than 8KiB.",
          "format": "byte",
          "type": "string"
        }
      },
      "description": "Request message for KeyManagementService.Encrypt.",
      "id": "EncryptRequest",
      "type": "object"
    },
    "LocationMetadata": {
      "properties": {
        "ekmAvailable": {
          "type": "boolean",
          "description": "Indicates whether CryptoKeys with protection_level EXTERNAL can be created in this location."
        },
        "hsmAvailable": {
          "description": "Indicates whether CryptoKeys with protection_level HSM can be created in this location.",
          "type": "boolean"
        }
      },
      "description": "Cloud KMS metadata for the given google.cloud.location.Location.",
      "type": "object",
      "id": "LocationMetadata"
    },
    "MacSignResponse": {
      "type": "object",
      "properties": {
        "macCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Integrity verification field. A CRC32C checksum of the returned MacSignResponse.mac. An integrity check of MacSignResponse.mac can be performed by computing the CRC32C checksum of MacSignResponse.mac and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type."
        },
        "mac": {
          "format": "byte",
          "type": "string",
          "description": "The created signature."
        },
        "protectionLevel": {
          "description": "The ProtectionLevel of the CryptoKeyVersion used for signing.",
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ]
        },
        "name": {
          "type": "string",
          "description": "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing."
        },
        "verifiedDataCrc32c": {
          "description": "Integrity verification field. A flag indicating whether MacSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
          "type": "boolean"
        }
      },
      "id": "MacSignResponse",
      "description": "Response message for KeyManagementService.MacSign."
    },
    "Policy": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          }
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy"
    },
    "ImportJob": {
      "type": "object",
      "description": "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
      "id": "ImportJob",
      "properties": {
        "expireEventTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time this ImportJob expired. Only present if state is EXPIRED."
        },
        "importMethod": {
          "enum": [
            "IMPORT_METHOD_UNSPECIFIED",
            "RSA_OAEP_3072_SHA1_AES_256",
            "RSA_OAEP_4096_SHA1_AES_256"
          ],
          "enumDescriptions": [
            "Not specified.",
            "This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping scheme defined in the PKCS #11 standard. In summary, this involves wrapping the raw key with an ephemeral AES key, and wrapping the ephemeral AES key with a 3072 bit RSA key. For more details, see [RSA AES key wrap mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).",
            "This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping scheme defined in the PKCS #11 standard. In summary, this involves wrapping the raw key with an ephemeral AES key, and wrapping the ephemeral AES key with a 4096 bit RSA key. For more details, see [RSA AES key wrap mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908)."
          ],
          "type": "string",
          "description": "Required. Immutable. The wrapping method to be used for incoming key material."
        },
        "publicKey": {
          "readOnly": true,
          "description": "Output only. The public key with which to wrap key material prior to import. Only returned if state is ACTIVE.",
          "$ref": "WrappingPublicKey"
        },
        "expireTime": {
          "description": "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "attestation": {
          "$ref": "KeyOperationAttestation",
          "description": "Output only. Statement that was generated and signed by the key creator (for example, an HSM) at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google. Only present if the chosen ImportMethod is one with a protection level of HSM.",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time at which this ImportJob was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "generateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this ImportJob's key material was generated."
        },
        "state": {
          "type": "string",
          "description": "Output only. The current state of the ImportJob, indicating if it can be used.",
          "enum": [
            "IMPORT_JOB_STATE_UNSPECIFIED",
            "PENDING_GENERATION",
            "ACTIVE",
            "EXPIRED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Not specified.",
            "The wrapping key for this job is still being generated. It may not be used. Cloud KMS will automatically mark this job as ACTIVE as soon as the wrapping key is generated.",
            "This job may be used in CreateCryptoKey and CreateCryptoKeyVersion requests.",
            "This job can no longer be used and may not leave this state once entered."
          ]
        },
        "protectionLevel": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "description": "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
          "type": "string"
        }
      }
    },
    "ExternalProtectionLevelOptions": {
      "id": "ExternalProtectionLevelOptions",
      "description": "ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level.",
      "type": "object",
      "properties": {
        "externalKeyUri": {
          "description": "The URI for an external resource that this CryptoKeyVersion represents.",
          "type": "string"
        }
      }
    },
    "AsymmetricSignRequest": {
      "type": "object",
      "id": "AsymmetricSignRequest",
      "properties": {
        "data": {
          "description": "Optional. This field will only be honored for RAW_PKCS1 keys. The data to sign. A digest is computed over the data that will be signed, PKCS #1 padding is applied to the digest directly and then encrypted.",
          "type": "string",
          "format": "byte"
        },
        "dataCrc32c": {
          "description": "Optional. An optional CRC32C checksum of the AsymmetricSignRequest.data. If specified, KeyManagementService will verify the integrity of the received AsymmetricSignRequest.data using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(AsymmetricSignRequest.data) is equal to AsymmetricSignRequest.data_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "format": "int64",
          "type": "string"
        },
        "digest": {
          "description": "Optional. The digest of the data to sign. The digest must be produced with the same digest algorithm as specified by the key version's algorithm.",
          "$ref": "Digest"
        },
        "digestCrc32c": {
          "format": "int64",
          "description": "Optional. An optional CRC32C checksum of the AsymmetricSignRequest.digest. If specified, KeyManagementService will verify the integrity of the received AsymmetricSignRequest.digest using this checksum. KeyManagementService will report an error if the checksum verification fails. If you receive a checksum error, your client should verify that CRC32C(AsymmetricSignRequest.digest) is equal to AsymmetricSignRequest.digest_crc32c, and if so, perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "type": "string"
        }
      },
      "description": "Request message for KeyManagementService.AsymmetricSign."
    },
    "ListImportJobsResponse": {
      "id": "ListImportJobsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in ListImportJobsRequest.page_token to retrieve the next page of results."
        },
        "totalSize": {
          "type": "integer",
          "description": "The total number of ImportJobs that matched the query.",
          "format": "int32"
        },
        "importJobs": {
          "description": "The list of ImportJobs.",
          "items": {
            "$ref": "ImportJob"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for KeyManagementService.ListImportJobs."
    },
    "GenerateRandomBytesResponse": {
      "properties": {
        "dataCrc32c": {
          "type": "string",
          "format": "int64",
          "description": "Integrity verification field. A CRC32C checksum of the returned GenerateRandomBytesResponse.data. An integrity check of GenerateRandomBytesResponse.data can be performed by computing the CRC32C checksum of GenerateRandomBytesResponse.data and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type."
        },
        "data": {
          "type": "string",
          "description": "The generated data.",
          "format": "byte"
        }
      },
      "type": "object",
      "description": "Response message for KeyManagementService.GenerateRandomBytes.",
      "id": "GenerateRandomBytesResponse"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object"
    },
    "EncryptResponse": {
      "description": "Response message for KeyManagementService.Encrypt.",
      "type": "object",
      "id": "EncryptResponse",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name of the CryptoKeyVersion used in encryption. Check this field to verify that the intended resource was used for encryption."
        },
        "ciphertext": {
          "type": "string",
          "format": "byte",
          "description": "The encrypted data."
        },
        "verifiedAdditionalAuthenticatedDataCrc32c": {
          "type": "boolean",
          "description": "Integrity verification field. A flag indicating whether EncryptRequest.additional_authenticated_data_crc32c was received by KeyManagementService and used for the integrity verification of the AAD. A false value of this field indicates either that EncryptRequest.additional_authenticated_data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.additional_authenticated_data_crc32c but this field is still false, discard the response and perform a limited number of retries."
        },
        "ciphertextCrc32c": {
          "description": "Integrity verification field. A CRC32C checksum of the returned EncryptResponse.ciphertext. An integrity check of EncryptResponse.ciphertext can be performed by computing the CRC32C checksum of EncryptResponse.ciphertext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "format": "int64",
          "type": "string"
        },
        "protectionLevel": {
          "description": "The ProtectionLevel of the CryptoKeyVersion used in encryption.",
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ]
        },
        "verifiedPlaintextCrc32c": {
          "type": "boolean",
          "description": "Integrity verification field. A flag indicating whether EncryptRequest.plaintext_crc32c was received by KeyManagementService and used for the integrity verification of the plaintext. A false value of this field indicates either that EncryptRequest.plaintext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.plaintext_crc32c but this field is still false, discard the response and perform a limited number of retries."
        }
      }
    },
    "ImportCryptoKeyVersionRequest": {
      "type": "object",
      "id": "ImportCryptoKeyVersionRequest",
      "properties": {
        "importJob": {
          "type": "string",
          "description": "Required. The name of the ImportJob that was used to wrap this key material."
        },
        "rsaAesWrappedKey": {
          "format": "byte",
          "type": "string",
          "description": "Wrapped key material produced with RSA_OAEP_3072_SHA1_AES_256 or RSA_OAEP_4096_SHA1_AES_256. This field contains the concatenation of two wrapped keys: 1. An ephemeral AES-256 wrapping key wrapped with the public_key using RSAES-OAEP with SHA-1, MGF1 with SHA-1, and an empty label. 2. The key to be imported, wrapped with the ephemeral AES-256 key using AES-KWP (RFC 5649). If importing symmetric key material, it is expected that the unwrapped key contains plain bytes. If importing asymmetric key material, it is expected that the unwrapped key is in PKCS#8-encoded DER format (the PrivateKeyInfo structure from RFC 5208). This format is the same as the format produced by PKCS#11 mechanism CKM_RSA_AES_KEY_WRAP."
        },
        "algorithm": {
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_SIGN_RAW_PKCS1_2048",
            "RSA_SIGN_RAW_PKCS1_3072",
            "RSA_SIGN_RAW_PKCS1_4096",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA1",
            "RSA_DECRYPT_OAEP_3072_SHA1",
            "RSA_DECRYPT_OAEP_4096_SHA1",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EC_SIGN_SECP256K1_SHA256",
            "HMAC_SHA256",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "description": "Required. The algorithm of the key being imported. This does not need to match the version_template of the CryptoKey this version imports into.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA1 digest.",
            "RSAES-OAEP 3072 bit key with a SHA1 digest.",
            "RSAES-OAEP 4096 bit key with a SHA1 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "ECDSA on the non-NIST secp256k1 curve. This curve is only supported for HSM protection level.",
            "HMAC-SHA256 signing with a 256 bit key.",
            "Algorithm representing symmetric encryption by an external key manager."
          ]
        },
        "cryptoKeyVersion": {
          "type": "string",
          "description": "Optional. The optional name of an existing CryptoKeyVersion to target for an import operation. If this field is not present, a new CryptoKeyVersion containing the supplied key material is created. If this field is present, the supplied key material is imported into the existing CryptoKeyVersion. To import into an existing CryptoKeyVersion, the CryptoKeyVersion must be a child of ImportCryptoKeyVersionRequest.parent, have been previously created via ImportCryptoKeyVersion, and be in DESTROYED or IMPORT_FAILED state. The key material and algorithm must match the previous CryptoKeyVersion exactly if the CryptoKeyVersion has ever contained key material."
        }
      },
      "description": "Request message for KeyManagementService.ImportCryptoKeyVersion."
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      }
    },
    "RestoreCryptoKeyVersionRequest": {
      "id": "RestoreCryptoKeyVersionRequest",
      "properties": {},
      "type": "object",
      "description": "Request message for KeyManagementService.RestoreCryptoKeyVersion."
    },
    "PublicKey": {
      "id": "PublicKey",
      "description": "The public key for a given CryptoKeyVersion. Obtained via GetPublicKey.",
      "type": "object",
      "properties": {
        "protectionLevel": {
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "type": "string",
          "description": "The ProtectionLevel of the CryptoKeyVersion public key.",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ]
        },
        "algorithm": {
          "type": "string",
          "description": "The Algorithm associated with this key.",
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_SIGN_RAW_PKCS1_2048",
            "RSA_SIGN_RAW_PKCS1_3072",
            "RSA_SIGN_RAW_PKCS1_4096",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA1",
            "RSA_DECRYPT_OAEP_3072_SHA1",
            "RSA_DECRYPT_OAEP_4096_SHA1",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EC_SIGN_SECP256K1_SHA256",
            "HMAC_SHA256",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA1 digest.",
            "RSAES-OAEP 3072 bit key with a SHA1 digest.",
            "RSAES-OAEP 4096 bit key with a SHA1 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "ECDSA on the non-NIST secp256k1 curve. This curve is only supported for HSM protection level.",
            "HMAC-SHA256 signing with a 256 bit key.",
            "Algorithm representing symmetric encryption by an external key manager."
          ]
        },
        "pemCrc32c": {
          "type": "string",
          "description": "Integrity verification field. A CRC32C checksum of the returned PublicKey.pem. An integrity check of PublicKey.pem can be performed by computing the CRC32C checksum of PublicKey.pem and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type. NOTE: This field is in Beta.",
          "format": "int64"
        },
        "name": {
          "description": "The name of the CryptoKeyVersion public key. Provided here for verification. NOTE: This field is in Beta.",
          "type": "string"
        },
        "pem": {
          "description": "The public key, encoded in PEM format. For more information, see the [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and [Textual Encoding of Subject Public Key Info] (https://tools.ietf.org/html/rfc7468#section-13).",
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "id": "Location"
    },
    "UpdateCryptoKeyPrimaryVersionRequest": {
      "type": "object",
      "id": "UpdateCryptoKeyPrimaryVersionRequest",
      "properties": {
        "cryptoKeyVersionId": {
          "description": "Required. The id of the child CryptoKeyVersion to use as primary.",
          "type": "string"
        }
      },
      "description": "Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion."
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "WrappingPublicKey": {
      "description": "The public key component of the wrapping key. For details of the type of key this public key corresponds to, see the ImportMethod.",
      "id": "WrappingPublicKey",
      "type": "object",
      "properties": {
        "pem": {
          "type": "string",
          "description": "The public key, encoded in PEM format. For more information, see the [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and [Textual Encoding of Subject Public Key Info] (https://tools.ietf.org/html/rfc7468#section-13)."
        }
      }
    },
    "CryptoKeyVersionTemplate": {
      "description": "A CryptoKeyVersionTemplate specifies the properties to use when creating a new CryptoKeyVersion, either manually with CreateCryptoKeyVersion or automatically as a result of auto-rotation.",
      "type": "object",
      "properties": {
        "protectionLevel": {
          "type": "string",
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "description": "ProtectionLevel to use when creating a CryptoKeyVersion based on this template. Immutable. Defaults to SOFTWARE."
        },
        "algorithm": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Creates symmetric encryption keys.",
            "RSASSA-PSS 2048 bit key with a SHA256 digest.",
            "RSASSA-PSS 3072 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA256 digest.",
            "RSASSA-PSS 4096 bit key with a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.",
            "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key.",
            "RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key.",
            "RSAES-OAEP 2048 bit key with a SHA256 digest.",
            "RSAES-OAEP 3072 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA256 digest.",
            "RSAES-OAEP 4096 bit key with a SHA512 digest.",
            "RSAES-OAEP 2048 bit key with a SHA1 digest.",
            "RSAES-OAEP 3072 bit key with a SHA1 digest.",
            "RSAES-OAEP 4096 bit key with a SHA1 digest.",
            "ECDSA on the NIST P-256 curve with a SHA256 digest.",
            "ECDSA on the NIST P-384 curve with a SHA384 digest.",
            "ECDSA on the non-NIST secp256k1 curve. This curve is only supported for HSM protection level.",
            "HMAC-SHA256 signing with a 256 bit key.",
            "Algorithm representing symmetric encryption by an external key manager."
          ],
          "enum": [
            "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED",
            "GOOGLE_SYMMETRIC_ENCRYPTION",
            "RSA_SIGN_PSS_2048_SHA256",
            "RSA_SIGN_PSS_3072_SHA256",
            "RSA_SIGN_PSS_4096_SHA256",
            "RSA_SIGN_PSS_4096_SHA512",
            "RSA_SIGN_PKCS1_2048_SHA256",
            "RSA_SIGN_PKCS1_3072_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA256",
            "RSA_SIGN_PKCS1_4096_SHA512",
            "RSA_SIGN_RAW_PKCS1_2048",
            "RSA_SIGN_RAW_PKCS1_3072",
            "RSA_SIGN_RAW_PKCS1_4096",
            "RSA_DECRYPT_OAEP_2048_SHA256",
            "RSA_DECRYPT_OAEP_3072_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA256",
            "RSA_DECRYPT_OAEP_4096_SHA512",
            "RSA_DECRYPT_OAEP_2048_SHA1",
            "RSA_DECRYPT_OAEP_3072_SHA1",
            "RSA_DECRYPT_OAEP_4096_SHA1",
            "EC_SIGN_P256_SHA256",
            "EC_SIGN_P384_SHA384",
            "EC_SIGN_SECP256K1_SHA256",
            "HMAC_SHA256",
            "EXTERNAL_SYMMETRIC_ENCRYPTION"
          ],
          "description": "Required. Algorithm to use when creating a CryptoKeyVersion based on this template. For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both this field is omitted and CryptoKey.purpose is ENCRYPT_DECRYPT."
        }
      },
      "id": "CryptoKeyVersionTemplate"
    },
    "DecryptResponse": {
      "properties": {
        "usedPrimary": {
          "description": "Whether the Decryption was performed using the primary key version.",
          "type": "boolean"
        },
        "plaintextCrc32c": {
          "description": "Integrity verification field. A CRC32C checksum of the returned DecryptResponse.plaintext. An integrity check of DecryptResponse.plaintext can be performed by computing the CRC32C checksum of DecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: receiving this response message indicates that KeyManagementService is able to successfully decrypt the ciphertext. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
          "format": "int64",
          "type": "string"
        },
        "plaintext": {
          "type": "string",
          "format": "byte",
          "description": "The decrypted data originally supplied in EncryptRequest.plaintext."
        },
        "protectionLevel": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Crypto operations are performed in software.",
            "Crypto operations are performed in a Hardware Security Module.",
            "Crypto operations are performed by an external key manager."
          ],
          "enum": [
            "PROTECTION_LEVEL_UNSPECIFIED",
            "SOFTWARE",
            "HSM",
            "EXTERNAL"
          ],
          "description": "The ProtectionLevel of the CryptoKeyVersion used in decryption."
        }
      },
      "type": "object",
      "id": "DecryptResponse",
      "description": "Response message for KeyManagementService.Decrypt."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "type": "object",
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations."
    }
  },
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://cloudkms.mtls.googleapis.com/",
  "description": "Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. ",
  "id": "cloudkms:v1",
  "version": "v1",
  "ownerName": "Google",
  "canonicalName": "Cloud KMS",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloudkms": {
          "description": "View and manage your keys and secrets stored in Cloud Key Management Service"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "basePath": "",
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "rootUrl": "https://cloudkms.googleapis.com/",
  "title": "Cloud Key Management Service (KMS) API",
  "revision": "20211105",
  "parameters": {
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "default": "json",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "protocol": "rest"
}

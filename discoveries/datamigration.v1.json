{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version": "v1",
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ListMigrationJobsResponse": {
      "id": "ListMigrationJobsResponse",
      "description": "Response message for 'ListMigrationJobs' request.",
      "type": "object",
      "properties": {
        "migrationJobs": {
          "description": "The list of migration jobs objects.",
          "type": "array",
          "items": {
            "$ref": "MigrationJob"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MigrationJob": {
      "id": "MigrationJob",
      "description": "Represents a Database Migration Service migration job object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "The migration job display name.",
          "type": "string"
        },
        "state": {
          "description": "The current migration job state.",
          "type": "string",
          "enumDescriptions": [
            "The state of the migration job is unknown.",
            "The migration job is down for maintenance.",
            "The migration job is in draft mode and no resources are created.",
            "The migration job is being created.",
            "The migration job is created and not started.",
            "The migration job is running.",
            "The migration job failed.",
            "The migration job has been completed.",
            "The migration job is being deleted.",
            "The migration job is being stopped.",
            "The migration job is currently stopped.",
            "The migration job has been deleted.",
            "The migration job is being updated.",
            "The migration job is starting.",
            "The migration job is restarting.",
            "The migration job is resuming."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "MAINTENANCE",
            "DRAFT",
            "CREATING",
            "NOT_STARTED",
            "RUNNING",
            "FAILED",
            "COMPLETED",
            "DELETING",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPDATING",
            "STARTING",
            "RESTARTING",
            "RESUMING"
          ]
        },
        "phase": {
          "description": "Output only. The current migration job phase.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The phase of the migration job is unknown.",
            "The migration job is in the full dump phase.",
            "The migration job is CDC phase.",
            "The migration job is running the promote phase.",
            "Only RDS flow - waiting for source writes to stop",
            "Only RDS flow - the sources writes stopped, waiting for dump to begin",
            "The migration job is ready to be promoted."
          ],
          "enum": [
            "PHASE_UNSPECIFIED",
            "FULL_DUMP",
            "CDC",
            "PROMOTE_IN_PROGRESS",
            "WAITING_FOR_SOURCE_WRITES_TO_STOP",
            "PREPARING_THE_DUMP",
            "READY_FOR_PROMOTE"
          ]
        },
        "type": {
          "description": "Required. The migration job type.",
          "type": "string",
          "enumDescriptions": [
            "The type of the migration job is unknown.",
            "The migration job is a one time migration.",
            "The migration job is a continuous migration."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "ONE_TIME",
            "CONTINUOUS"
          ]
        },
        "dumpPath": {
          "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the \"dump_flags\" field are mutually exclusive.",
          "type": "string"
        },
        "dumpFlags": {
          "description": "The initial dump flags. This field and the \"dump_path\" field are mutually exclusive.",
          "$ref": "DumpFlags"
        },
        "source": {
          "description": "Required. The resource name (URI) of the source connection profile.",
          "type": "string"
        },
        "destination": {
          "description": "Required. The resource name (URI) of the destination connection profile.",
          "type": "string"
        },
        "reverseSshConnectivity": {
          "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity.",
          "$ref": "ReverseSshConnectivity"
        },
        "vpcPeeringConnectivity": {
          "description": "The details of the VPC network that the source database is located in.",
          "$ref": "VpcPeeringConnectivity"
        },
        "staticIpConnectivity": {
          "description": "static ip connectivity data (default, no additional details needed).",
          "$ref": "StaticIpConnectivity"
        },
        "duration": {
          "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        },
        "error": {
          "description": "Output only. The error details in case of state FAILED.",
          "readOnly": true,
          "$ref": "Status"
        },
        "sourceDatabase": {
          "description": "The database engine type and provider of the source.",
          "$ref": "DatabaseType"
        },
        "destinationDatabase": {
          "description": "The database engine type and provider of the destination.",
          "$ref": "DatabaseType"
        },
        "endTime": {
          "description": "Output only. If the migration job is completed, the time when it was completed.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "conversionWorkspace": {
          "description": "The conversion workspace used by the migration.",
          "$ref": "ConversionWorkspaceInfo"
        },
        "filter": {
          "description": "This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace.",
          "type": "string"
        },
        "cmekKeyName": {
          "description": "The CMEK (customer-managed encryption key) fully qualified key name used for the migration job. This field supports all migration jobs types except for: * Mysql to Mysql (use the cmek field in the cloudsql connection profile instead). * PostrgeSQL to PostgreSQL (use the cmek field in the cloudsql connection profile instead). * PostgreSQL to AlloyDB (use the kms_key_name field in the alloydb connection profile instead). Each Cloud CMEK key has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
          "type": "string"
        },
        "performanceConfig": {
          "description": "Optional. Data dump parallelism settings used by the migration. Currently applicable only for MySQL to Cloud SQL for MySQL migrations only.",
          "$ref": "PerformanceConfig"
        },
        "sqlserverHomogeneousMigrationJobConfig": {
          "description": "Optional. Configuration for SQL Server homogeneous migration.",
          "$ref": "SqlServerHomogeneousMigrationJobConfig"
        }
      }
    },
    "DumpFlags": {
      "id": "DumpFlags",
      "description": "Dump flags definition.",
      "type": "object",
      "properties": {
        "dumpFlags": {
          "description": "The flags for the initial dump.",
          "type": "array",
          "items": {
            "$ref": "DumpFlag"
          }
        }
      }
    },
    "DumpFlag": {
      "id": "DumpFlag",
      "description": "Dump flag definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the flag",
          "type": "string"
        },
        "value": {
          "description": "The value of the flag.",
          "type": "string"
        }
      }
    },
    "ReverseSshConnectivity": {
      "id": "ReverseSshConnectivity",
      "description": "The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.",
      "type": "object",
      "properties": {
        "vmIp": {
          "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        },
        "vmPort": {
          "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "integer",
          "format": "int32"
        },
        "vm": {
          "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        },
        "vpc": {
          "description": "The name of the VPC to peer with the Cloud SQL private network.",
          "type": "string"
        }
      }
    },
    "VpcPeeringConnectivity": {
      "id": "VpcPeeringConnectivity",
      "description": "The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.",
      "type": "object",
      "properties": {
        "vpc": {
          "description": "The name of the VPC network to peer with the Cloud SQL private network.",
          "type": "string"
        }
      }
    },
    "StaticIpConnectivity": {
      "id": "StaticIpConnectivity",
      "description": "The source database will allow incoming connections from the public IP of the destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.",
      "type": "object",
      "properties": {}
    },
    "DatabaseType": {
      "id": "DatabaseType",
      "description": "A message defining the database engine and provider.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "The database provider.",
          "type": "string",
          "enumDescriptions": [
            "Use this value for on-premise source database instances.",
            "Cloud SQL is the source instance provider.",
            "Amazon RDS is the source instance provider.",
            "Amazon Aurora is the source instance provider.",
            "AlloyDB for PostgreSQL is the source instance provider."
          ],
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ]
        },
        "engine": {
          "description": "The database engine.",
          "type": "string",
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is SQL Server.",
            "The source engine is Oracle."
          ],
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "SQLSERVER",
            "ORACLE"
          ]
        }
      }
    },
    "ConversionWorkspaceInfo": {
      "id": "ConversionWorkspaceInfo",
      "description": "A conversion workspace's version.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name (URI) of the conversion workspace.",
          "type": "string"
        },
        "commitId": {
          "description": "The commit ID of the conversion workspace.",
          "type": "string"
        }
      }
    },
    "PerformanceConfig": {
      "id": "PerformanceConfig",
      "description": "Performance configuration definition.",
      "type": "object",
      "properties": {
        "dumpParallelLevel": {
          "description": "Initial dump parallelism level.",
          "type": "string",
          "enumDescriptions": [
            "Unknown dump parallel level. Will be defaulted to OPTIMAL.",
            "Minimal parallel level.",
            "Optimal parallel level.",
            "Maximum parallel level."
          ],
          "enum": [
            "DUMP_PARALLEL_LEVEL_UNSPECIFIED",
            "MIN",
            "OPTIMAL",
            "MAX"
          ]
        }
      }
    },
    "SqlServerHomogeneousMigrationJobConfig": {
      "id": "SqlServerHomogeneousMigrationJobConfig",
      "description": "Configuration for homogeneous migration to Cloud SQL for SQL Server.",
      "type": "object",
      "properties": {
        "backupFilePattern": {
          "description": "Required. Pattern that describes the default backup naming strategy. The specified pattern should ensure lexicographical order of backups. The pattern must define one of the following capture group sets: Capture group set #1 yy/yyyy - year, 2 or 4 digits mm - month number, 1-12 dd - day of month, 1-31 hh - hour of day, 00-23 mi - minutes, 00-59 ss - seconds, 00-59 Example: For backup file TestDB_backup_20230802_155400.trn, use pattern: (?.*)_backup_(?\\d{4})(?\\d{2})(?\\d{2})_(?\\d{2})(?\\d{2})(?\\d{2}).trn Capture group set #2 timestamp - unix timestamp Example: For backup file TestDB_backup_1691448254.trn, use pattern: (?.*)_backup_(?.*).trn",
          "type": "string"
        },
        "databaseBackups": {
          "description": "Required. Backup details per database in Cloud Storage.",
          "type": "array",
          "items": {
            "$ref": "SqlServerDatabaseBackup"
          }
        }
      }
    },
    "SqlServerDatabaseBackup": {
      "id": "SqlServerDatabaseBackup",
      "description": "Specifies the backup details for a single database in Cloud Storage for homogeneous migration to Cloud SQL for SQL Server.",
      "type": "object",
      "properties": {
        "database": {
          "description": "Required. Name of a SQL Server database for which to define backup configuration.",
          "type": "string"
        },
        "encryptionOptions": {
          "description": "Optional. Encryption settings for the database. Required if provided database backups are encrypted. Encryption settings include path to certificate, path to certificate private key, and key password.",
          "$ref": "SqlServerEncryptionOptions"
        }
      }
    },
    "SqlServerEncryptionOptions": {
      "id": "SqlServerEncryptionOptions",
      "description": "Encryption settings for the SQL Server database.",
      "type": "object",
      "properties": {
        "certPath": {
          "description": "Required. Path to certificate.",
          "type": "string"
        },
        "pvkPath": {
          "description": "Required. Path to certificate private key.",
          "type": "string"
        },
        "pvkPassword": {
          "description": "Required. Input only. Private key password.",
          "type": "string"
        }
      }
    },
    "StartMigrationJobRequest": {
      "id": "StartMigrationJobRequest",
      "description": "Request message for 'StartMigrationJob' request.",
      "type": "object",
      "properties": {
        "skipValidation": {
          "description": "Optional. Start the migration job without running prior configuration verification. Defaults to `false`.",
          "type": "boolean"
        }
      }
    },
    "StopMigrationJobRequest": {
      "id": "StopMigrationJobRequest",
      "description": "Request message for 'StopMigrationJob' request.",
      "type": "object",
      "properties": {}
    },
    "ResumeMigrationJobRequest": {
      "id": "ResumeMigrationJobRequest",
      "description": "Request message for 'ResumeMigrationJob' request.",
      "type": "object",
      "properties": {}
    },
    "PromoteMigrationJobRequest": {
      "id": "PromoteMigrationJobRequest",
      "description": "Request message for 'PromoteMigrationJob' request.",
      "type": "object",
      "properties": {}
    },
    "DemoteDestinationRequest": {
      "id": "DemoteDestinationRequest",
      "description": "Request message for 'DemoteDestination' request.",
      "type": "object",
      "properties": {}
    },
    "VerifyMigrationJobRequest": {
      "id": "VerifyMigrationJobRequest",
      "description": "Request message for 'VerifyMigrationJob' request.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "Optional. Field mask is used to specify the changed fields to be verified. It will not update the migration job.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "migrationJob": {
          "description": "Optional. The changed migration job parameters to verify. It will not update the migration job.",
          "$ref": "MigrationJob"
        }
      }
    },
    "RestartMigrationJobRequest": {
      "id": "RestartMigrationJobRequest",
      "description": "Request message for 'RestartMigrationJob' request.",
      "type": "object",
      "properties": {
        "skipValidation": {
          "description": "Optional. Restart the migration job without running prior configuration verification. Defaults to `false`.",
          "type": "boolean"
        }
      }
    },
    "GenerateSshScriptRequest": {
      "id": "GenerateSshScriptRequest",
      "description": "Request message for 'GenerateSshScript' request.",
      "type": "object",
      "properties": {
        "vm": {
          "description": "Required. Bastion VM Instance name to use or to create.",
          "type": "string"
        },
        "vmCreationConfig": {
          "description": "The VM creation configuration",
          "$ref": "VmCreationConfig"
        },
        "vmSelectionConfig": {
          "description": "The VM selection configuration",
          "$ref": "VmSelectionConfig"
        },
        "vmPort": {
          "description": "The port that will be open on the bastion host.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VmCreationConfig": {
      "id": "VmCreationConfig",
      "description": "VM creation configuration message",
      "type": "object",
      "properties": {
        "vmMachineType": {
          "description": "Required. VM instance machine type to create.",
          "type": "string"
        },
        "vmZone": {
          "description": "The Google Cloud Platform zone to create the VM in.",
          "type": "string"
        },
        "subnet": {
          "description": "The subnet name the vm needs to be created in.",
          "type": "string"
        }
      }
    },
    "VmSelectionConfig": {
      "id": "VmSelectionConfig",
      "description": "VM selection configuration message",
      "type": "object",
      "properties": {
        "vmZone": {
          "description": "Required. The Google Cloud Platform zone the VM is located.",
          "type": "string"
        }
      }
    },
    "SshScript": {
      "id": "SshScript",
      "description": "Response message for 'GenerateSshScript' request.",
      "type": "object",
      "properties": {
        "script": {
          "description": "The ssh configuration script.",
          "type": "string"
        }
      }
    },
    "GenerateTcpProxyScriptRequest": {
      "id": "GenerateTcpProxyScriptRequest",
      "description": "Request message for 'GenerateTcpProxyScript' request.",
      "type": "object",
      "properties": {
        "vmName": {
          "description": "Required. The name of the Compute instance that will host the proxy.",
          "type": "string"
        },
        "vmMachineType": {
          "description": "Required. The type of the Compute instance that will host the proxy.",
          "type": "string"
        },
        "vmZone": {
          "description": "Optional. The Google Cloud Platform zone to create the VM in. The fully qualified name of the zone must be specified, including the region name, for example \"us-central1-b\". If not specified, uses the \"-b\" zone of the destination Connection Profile's region.",
          "type": "string"
        },
        "vmSubnet": {
          "description": "Required. The name of the subnet the Compute instance will use for private connectivity. Must be supplied in the form of projects/{project}/regions/{region}/subnetworks/{subnetwork}. Note: the region for the subnet must match the Compute instance region.",
          "type": "string"
        }
      }
    },
    "TcpProxyScript": {
      "id": "TcpProxyScript",
      "description": "Response message for 'GenerateTcpProxyScript' request.",
      "type": "object",
      "properties": {
        "script": {
          "description": "The TCP Proxy configuration script.",
          "type": "string"
        }
      }
    },
    "ListConnectionProfilesResponse": {
      "id": "ListConnectionProfilesResponse",
      "description": "Response message for 'ListConnectionProfiles' request.",
      "type": "object",
      "properties": {
        "connectionProfiles": {
          "description": "The response list of connection profiles.",
          "type": "array",
          "items": {
            "$ref": "ConnectionProfile"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConnectionProfile": {
      "id": "ConnectionProfile",
      "description": "A connection profile definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED).",
          "type": "string",
          "enumDescriptions": [
            "The state of the connection profile is unknown.",
            "The connection profile is in draft mode and fully editable.",
            "The connection profile is being created.",
            "The connection profile is ready.",
            "The connection profile is being updated.",
            "The connection profile is being deleted.",
            "The connection profile has been deleted.",
            "The last action on the connection profile failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "DELETED",
            "FAILED"
          ]
        },
        "displayName": {
          "description": "The connection profile display name.",
          "type": "string"
        },
        "mysql": {
          "description": "A MySQL database connection profile.",
          "$ref": "MySqlConnectionProfile"
        },
        "postgresql": {
          "description": "A PostgreSQL database connection profile.",
          "$ref": "PostgreSqlConnectionProfile"
        },
        "sqlserver": {
          "description": "Connection profile for a SQL Server data source.",
          "$ref": "SqlServerConnectionProfile"
        },
        "oracle": {
          "description": "An Oracle database connection profile.",
          "$ref": "OracleConnectionProfile"
        },
        "cloudsql": {
          "description": "A CloudSQL database connection profile.",
          "$ref": "CloudSqlConnectionProfile"
        },
        "alloydb": {
          "description": "An AlloyDB cluster connection profile.",
          "$ref": "AlloyDbConnectionProfile"
        },
        "error": {
          "description": "Output only. The error details in case of state FAILED.",
          "readOnly": true,
          "$ref": "Status"
        },
        "provider": {
          "description": "The database provider.",
          "type": "string",
          "enumDescriptions": [
            "Use this value for on-premise source database instances.",
            "Cloud SQL is the source instance provider.",
            "Amazon RDS is the source instance provider.",
            "Amazon Aurora is the source instance provider.",
            "AlloyDB for PostgreSQL is the source instance provider."
          ],
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ]
        }
      }
    },
    "MySqlConnectionProfile": {
      "id": "MySqlConnectionProfile",
      "description": "Specifies connection parameters required specifically for MySQL databases.",
      "type": "object",
      "properties": {
        "host": {
          "description": "Required. The IP or hostname of the source MySQL database.",
          "type": "string"
        },
        "port": {
          "description": "Required. The network port of the source MySQL database.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "passwordSet": {
          "description": "Output only. Indicates If this connection profile password is stored.",
          "readOnly": true,
          "type": "boolean"
        },
        "ssl": {
          "description": "SSL configuration for the destination to connect to the source database.",
          "$ref": "SslConfig"
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        }
      }
    },
    "SslConfig": {
      "id": "SslConfig",
      "description": "SSL configuration information.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Only 'ca_certificate' specified.",
            "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
          ],
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "SERVER_ONLY",
            "SERVER_CLIENT"
          ]
        },
        "clientKey": {
          "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory.",
          "type": "string"
        },
        "caCertificate": {
          "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.",
          "type": "string"
        }
      }
    },
    "PostgreSqlConnectionProfile": {
      "id": "PostgreSqlConnectionProfile",
      "description": "Specifies connection parameters required specifically for PostgreSQL databases.",
      "type": "object",
      "properties": {
        "host": {
          "description": "Required. The IP or hostname of the source PostgreSQL database.",
          "type": "string"
        },
        "port": {
          "description": "Required. The network port of the source PostgreSQL database.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "passwordSet": {
          "description": "Output only. Indicates If this connection profile password is stored.",
          "readOnly": true,
          "type": "boolean"
        },
        "ssl": {
          "description": "SSL configuration for the destination to connect to the source database.",
          "$ref": "SslConfig"
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        },
        "alloydbClusterId": {
          "description": "Optional. If the destination is an AlloyDB database, use this field to provide the AlloyDB cluster ID.",
          "type": "string"
        },
        "networkArchitecture": {
          "description": "Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "",
            "Instance is in Cloud SQL's old producer network architecture.",
            "Instance is in Cloud SQL's new producer network architecture."
          ],
          "enum": [
            "NETWORK_ARCHITECTURE_UNSPECIFIED",
            "NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER",
            "NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER"
          ]
        },
        "staticIpConnectivity": {
          "description": "Static ip connectivity data (default, no additional details needed).",
          "$ref": "StaticIpConnectivity"
        },
        "privateServiceConnectConnectivity": {
          "description": "Private service connect connectivity.",
          "$ref": "PrivateServiceConnectConnectivity"
        }
      }
    },
    "PrivateServiceConnectConnectivity": {
      "id": "PrivateServiceConnectConnectivity",
      "description": "[Private Service Connect connectivity](https://cloud.google.com/vpc/docs/private-service-connect#service-attachments)",
      "type": "object",
      "properties": {
        "serviceAttachment": {
          "description": "Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}",
          "type": "string"
        }
      }
    },
    "SqlServerConnectionProfile": {
      "id": "SqlServerConnectionProfile",
      "description": "Specifies connection parameters required specifically for SQL Server databases.",
      "type": "object",
      "properties": {
        "host": {
          "description": "Required. The IP or hostname of the source SQL Server database.",
          "type": "string"
        },
        "port": {
          "description": "Required. The network port of the source SQL Server database.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "passwordSet": {
          "description": "Output only. Indicates whether a new password is included in the request.",
          "readOnly": true,
          "type": "boolean"
        },
        "ssl": {
          "description": "SSL configuration for the destination to connect to the source database.",
          "$ref": "SslConfig"
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        },
        "backups": {
          "description": "The backup details in Cloud Storage for homogeneous migration to Cloud SQL for SQL Server.",
          "$ref": "SqlServerBackups"
        },
        "staticIpConnectivity": {
          "description": "Static IP connectivity data (default, no additional details needed).",
          "$ref": "StaticIpConnectivity"
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "privateServiceConnectConnectivity": {
          "description": "Private Service Connect connectivity.",
          "$ref": "PrivateServiceConnectConnectivity"
        }
      }
    },
    "SqlServerBackups": {
      "id": "SqlServerBackups",
      "description": "Specifies the backup details in Cloud Storage for homogeneous migration to Cloud SQL for SQL Server.",
      "type": "object",
      "properties": {
        "gcsBucket": {
          "description": "Required. The Cloud Storage bucket that stores backups for all replicated databases.",
          "type": "string"
        },
        "gcsPrefix": {
          "description": "Optional. Cloud Storage path inside the bucket that stores backups.",
          "type": "string"
        }
      }
    },
    "ForwardSshTunnelConnectivity": {
      "id": "ForwardSshTunnelConnectivity",
      "description": "Forward SSH Tunnel connectivity.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        },
        "port": {
          "description": "Port for the SSH tunnel, default value is 22.",
          "type": "integer",
          "format": "int32"
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        }
      }
    },
    "PrivateConnectivity": {
      "id": "PrivateConnectivity",
      "description": "Private Connectivity.",
      "type": "object",
      "properties": {
        "privateConnection": {
          "description": "Required. The resource name (URI) of the private connection.",
          "type": "string"
        }
      }
    },
    "OracleConnectionProfile": {
      "id": "OracleConnectionProfile",
      "description": "Specifies connection parameters required specifically for Oracle databases.",
      "type": "object",
      "properties": {
        "host": {
          "description": "Required. The IP or hostname of the source Oracle database.",
          "type": "string"
        },
        "port": {
          "description": "Required. The network port of the source Oracle database.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "passwordSet": {
          "description": "Output only. Indicates whether a new password is included in the request.",
          "readOnly": true,
          "type": "boolean"
        },
        "databaseService": {
          "description": "Required. Database service for the Oracle connection.",
          "type": "string"
        },
        "ssl": {
          "description": "SSL configuration for the connection to the source Oracle database. * Only `SERVER_ONLY` configuration is supported for Oracle SSL. * SSL is supported for Oracle versions 12 and above.",
          "$ref": "SslConfig"
        },
        "staticServiceIpConnectivity": {
          "description": "Static Service IP connectivity.",
          "$ref": "StaticServiceIpConnectivity"
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        }
      }
    },
    "StaticServiceIpConnectivity": {
      "id": "StaticServiceIpConnectivity",
      "description": "Static IP address connectivity configured on service project.",
      "type": "object",
      "properties": {}
    },
    "CloudSqlConnectionProfile": {
      "id": "CloudSqlConnectionProfile",
      "description": "Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.",
      "type": "object",
      "properties": {
        "cloudSqlId": {
          "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with.",
          "readOnly": true,
          "type": "string"
        },
        "settings": {
          "description": "Immutable. Metadata used to create the destination Cloud SQL database.",
          "$ref": "CloudSqlSettings"
        },
        "privateIp": {
          "description": "Output only. The Cloud SQL database instance's private IP.",
          "readOnly": true,
          "type": "string"
        },
        "publicIp": {
          "description": "Output only. The Cloud SQL database instance's public IP.",
          "readOnly": true,
          "type": "string"
        },
        "additionalPublicIp": {
          "description": "Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "CloudSqlSettings": {
      "id": "CloudSqlSettings",
      "description": "Settings for creating a Cloud SQL database instance.",
      "type": "object",
      "properties": {
        "databaseVersion": {
          "description": "The database engine type and version.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified version.",
            "MySQL 5.6.",
            "MySQL 5.7.",
            "MySQL 8.0.",
            "The database major version is MySQL 8.0 and the minor version is 18.",
            "The database major version is MySQL 8.0 and the minor version is 26.",
            "The database major version is MySQL 8.0 and the minor version is 27.",
            "The database major version is MySQL 8.0 and the minor version is 28.",
            "The database major version is MySQL 8.0 and the minor version is 30.",
            "The database major version is MySQL 8.0 and the minor version is 31.",
            "The database major version is MySQL 8.0 and the minor version is 32.",
            "The database major version is MySQL 8.0 and the minor version is 33.",
            "The database major version is MySQL 8.0 and the minor version is 34.",
            "The database major version is MySQL 8.0 and the minor version is 35.",
            "PostgreSQL 9.6.",
            "PostgreSQL 11.",
            "PostgreSQL 10.",
            "PostgreSQL 12.",
            "PostgreSQL 13.",
            "PostgreSQL 14.",
            "PostgreSQL 15."
          ],
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "MYSQL_8_0",
            "MYSQL_8_0_18",
            "MYSQL_8_0_26",
            "MYSQL_8_0_27",
            "MYSQL_8_0_28",
            "MYSQL_8_0_30",
            "MYSQL_8_0_31",
            "MYSQL_8_0_32",
            "MYSQL_8_0_33",
            "MYSQL_8_0_34",
            "MYSQL_8_0_35",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "POSTGRES_10",
            "POSTGRES_12",
            "POSTGRES_13",
            "POSTGRES_14",
            "POSTGRES_15"
          ]
        },
        "userLabels": {
          "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tier": {
          "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).",
          "type": "string"
        },
        "storageAutoResizeLimit": {
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
          "type": "string",
          "format": "int64"
        },
        "activationPolicy": {
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
          "type": "string",
          "enumDescriptions": [
            "unspecified policy.",
            "The instance is always up and running.",
            "The instance should never spin up."
          ],
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER"
          ]
        },
        "ipConfig": {
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.",
          "$ref": "SqlIpConfig"
        },
        "autoStorageIncrease": {
          "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.",
          "type": "boolean"
        },
        "databaseFlags": {
          "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dataDiskType": {
          "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "SSD disk.",
            "HDD disk."
          ],
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD"
          ]
        },
        "dataDiskSizeGb": {
          "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.",
          "type": "string",
          "format": "int64"
        },
        "zone": {
          "description": "The Google Cloud Platform zone where your Cloud SQL database instance is located.",
          "type": "string"
        },
        "secondaryZone": {
          "description": "Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).",
          "type": "string"
        },
        "sourceId": {
          "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`",
          "type": "string"
        },
        "rootPassword": {
          "description": "Input only. Initial root password.",
          "type": "string"
        },
        "rootPasswordSet": {
          "description": "Output only. Indicates If this connection profile root password is stored.",
          "readOnly": true,
          "type": "boolean"
        },
        "collation": {
          "description": "The Cloud SQL default instance level collation.",
          "type": "string"
        },
        "cmekKeyName": {
          "description": "The KMS key name used for the csql instance.",
          "type": "string"
        },
        "availabilityType": {
          "description": "Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).",
          "type": "string",
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal availablility instance.",
            "Regional availability instance."
          ],
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ]
        },
        "edition": {
          "description": "Optional. The edition of the given Cloud SQL instance.",
          "type": "string",
          "enumDescriptions": [
            "The instance did not specify the edition.",
            "The instance is an enterprise edition.",
            "The instance is an enterprise plus edition."
          ],
          "enum": [
            "EDITION_UNSPECIFIED",
            "ENTERPRISE",
            "ENTERPRISE_PLUS"
          ]
        },
        "dataCacheConfig": {
          "description": "Optional. Data cache is an optional feature available for Cloud SQL for MySQL Enterprise Plus edition only. For more information on data cache, see [Data cache overview](https://cloud.google.com/sql/help/mysql-data-cache) in Cloud SQL documentation.",
          "$ref": "DataCacheConfig"
        }
      }
    },
    "SqlIpConfig": {
      "id": "SqlIpConfig",
      "description": "IP Management configuration.",
      "type": "object",
      "properties": {
        "enableIpv4": {
          "description": "Whether the instance should be assigned an IPv4 address or not.",
          "type": "boolean"
        },
        "privateNetwork": {
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.",
          "type": "string"
        },
        "allocatedIpRange": {
          "description": "Optional. The name of the allocated IP address range for the private IP Cloud SQL instance. This name refers to an already allocated IP range address. If set, the instance IP address will be created in the allocated range. Note that this IP address range can't be modified after the instance is created. If you change the VPC when configuring connectivity settings for the migration job, this field is not relevant.",
          "type": "string"
        },
        "requireSsl": {
          "description": "Whether SSL connections over IP should be enforced or not.",
          "type": "boolean"
        },
        "authorizedNetworks": {
          "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).",
          "type": "array",
          "items": {
            "$ref": "SqlAclEntry"
          }
        }
      }
    },
    "SqlAclEntry": {
      "id": "SqlAclEntry",
      "description": "An entry for an Access Control list.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The allowlisted value for the access control list.",
          "type": "string"
        },
        "expireTime": {
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.",
          "type": "string",
          "format": "google-datetime"
        },
        "ttl": {
          "description": "Input only. The time-to-leave of this access control entry.",
          "type": "string",
          "format": "google-duration"
        },
        "label": {
          "description": "A label to identify this entry.",
          "type": "string"
        }
      }
    },
    "DataCacheConfig": {
      "id": "DataCacheConfig",
      "description": "Data cache is an optional feature available for Cloud SQL for MySQL Enterprise Plus edition only. For more information on data cache, see [Data cache overview](https://cloud.google.com/sql/help/mysql-data-cache) in Cloud SQL documentation.",
      "type": "object",
      "properties": {
        "dataCacheEnabled": {
          "description": "Optional. Whether data cache is enabled for the instance.",
          "type": "boolean"
        }
      }
    },
    "AlloyDbConnectionProfile": {
      "id": "AlloyDbConnectionProfile",
      "description": "Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.",
      "type": "object",
      "properties": {
        "clusterId": {
          "description": "Required. The AlloyDB cluster ID that this connection profile is associated with.",
          "type": "string"
        },
        "settings": {
          "description": "Immutable. Metadata used to create the destination AlloyDB cluster.",
          "$ref": "AlloyDbSettings"
        }
      }
    },
    "AlloyDbSettings": {
      "id": "AlloyDbSettings",
      "description": "Settings for creating an AlloyDB cluster.",
      "type": "object",
      "properties": {
        "initialUser": {
          "description": "Required. Input only. Initial user to setup during cluster creation. Required.",
          "$ref": "UserPassword"
        },
        "vpcNetwork": {
          "description": "Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \"projects/{project_number}/global/networks/{network_id}\". This is required to create a cluster.",
          "type": "string"
        },
        "labels": {
          "description": "Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "primaryInstanceSettings": {
          "$ref": "PrimaryInstanceSettings"
        },
        "encryptionConfig": {
          "description": "Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.",
          "$ref": "EncryptionConfig"
        },
        "databaseVersion": {
          "description": "Optional. The database engine major version. This is an optional field. If a database version is not supplied at cluster creation time, then a default database version will be used.",
          "type": "string",
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is Postgres 14.",
            "The database version is Postgres 15."
          ],
          "enum": [
            "DATABASE_VERSION_UNSPECIFIED",
            "POSTGRES_14",
            "POSTGRES_15"
          ]
        }
      }
    },
    "UserPassword": {
      "id": "UserPassword",
      "description": "The username/password for a database user. Used for specifying initial users at cluster creation time.",
      "type": "object",
      "properties": {
        "user": {
          "description": "The database username.",
          "type": "string"
        },
        "password": {
          "description": "The initial password for the user.",
          "type": "string"
        },
        "passwordSet": {
          "description": "Output only. Indicates if the initial_user.password field has been set.",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "PrimaryInstanceSettings": {
      "id": "PrimaryInstanceSettings",
      "description": "Settings for the cluster's primary instance",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \"[a-z0-9-]+\".",
          "type": "string"
        },
        "machineConfig": {
          "description": "Configuration for the machines that host the underlying database engine.",
          "$ref": "MachineConfig"
        },
        "databaseFlags": {
          "description": "Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "privateIp": {
          "description": "Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "MachineConfig": {
      "id": "MachineConfig",
      "description": "MachineConfig describes the configuration of a machine.",
      "type": "object",
      "properties": {
        "cpuCount": {
          "description": "The number of CPU's in the VM instance.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EncryptionConfig": {
      "id": "EncryptionConfig",
      "description": "EncryptionConfig describes the encryption config of a cluster that is encrypted with a CMEK (customer-managed encryption key).",
      "type": "object",
      "properties": {
        "kmsKeyName": {
          "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
          "type": "string"
        }
      }
    },
    "PrivateConnection": {
      "id": "PrivateConnection",
      "description": "The PrivateConnection resource is used to establish private connectivity with the customer's network.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last update time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "The private connection display name.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The state of the private connection.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state.",
            "The private connection has been deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE",
            "DELETED"
          ]
        },
        "error": {
          "description": "Output only. The error details in case of state FAILED.",
          "readOnly": true,
          "$ref": "Status"
        },
        "vpcPeeringConfig": {
          "description": "VPC peering configuration.",
          "$ref": "VpcPeeringConfig"
        }
      }
    },
    "VpcPeeringConfig": {
      "id": "VpcPeeringConfig",
      "description": "The VPC peering configuration is used to create VPC peering with the consumer's VPC.",
      "type": "object",
      "properties": {
        "vpcName": {
          "description": "Required. Fully qualified name of the VPC that Database Migration Service will peer to.",
          "type": "string"
        },
        "subnet": {
          "description": "Required. A free subnet for peering. (CIDR of /29)",
          "type": "string"
        }
      }
    },
    "ListPrivateConnectionsResponse": {
      "id": "ListPrivateConnectionsResponse",
      "description": "Response message for 'ListPrivateConnections' request.",
      "type": "object",
      "properties": {
        "privateConnections": {
          "description": "List of private connections.",
          "type": "array",
          "items": {
            "$ref": "PrivateConnection"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConversionWorkspace": {
      "id": "ConversionWorkspace",
      "description": "The main conversion workspace resource entity.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
          "type": "string"
        },
        "source": {
          "description": "Required. The source engine details.",
          "$ref": "DatabaseEngineInfo"
        },
        "destination": {
          "description": "Required. The destination engine details.",
          "$ref": "DatabaseEngineInfo"
        },
        "globalSettings": {
          "description": "Optional. A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hasUncommittedChanges": {
          "description": "Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed).",
          "readOnly": true,
          "type": "boolean"
        },
        "latestCommitId": {
          "description": "Output only. The latest commit ID.",
          "readOnly": true,
          "type": "string"
        },
        "latestCommitTime": {
          "description": "Output only. The timestamp when the workspace was committed.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "description": "Output only. The timestamp when the workspace resource was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the workspace resource was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Optional. The display name for the workspace.",
          "type": "string"
        }
      }
    },
    "DatabaseEngineInfo": {
      "id": "DatabaseEngineInfo",
      "description": "The type and version of a source or destination database.",
      "type": "object",
      "properties": {
        "engine": {
          "description": "Required. Engine type.",
          "type": "string",
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is SQL Server.",
            "The source engine is Oracle."
          ],
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "SQLSERVER",
            "ORACLE"
          ]
        },
        "version": {
          "description": "Required. Engine version, for example \"12.c.1\".",
          "type": "string"
        }
      }
    },
    "ListConversionWorkspacesResponse": {
      "id": "ListConversionWorkspacesResponse",
      "description": "Response message for 'ListConversionWorkspaces' request.",
      "type": "object",
      "properties": {
        "conversionWorkspaces": {
          "description": "The list of conversion workspace objects.",
          "type": "array",
          "items": {
            "$ref": "ConversionWorkspace"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MappingRule": {
      "id": "MappingRule",
      "description": "Definition of a transformation that is to be applied to a group of entities in the source schema. Several such transformations can be applied to an entity sequentially to define the corresponding entity in the target schema.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Full name of the mapping rule resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{set}/mappingRule/{rule}.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. A human readable name",
          "type": "string"
        },
        "state": {
          "description": "Optional. The mapping rule state",
          "type": "string",
          "enumDescriptions": [
            "The state of the mapping rule is unknown.",
            "The rule is enabled.",
            "The rule is disabled.",
            "The rule is logically deleted."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "DELETED"
          ]
        },
        "ruleScope": {
          "description": "Required. The rule scope",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "filter": {
          "description": "Required. The rule filter",
          "$ref": "MappingRuleFilter"
        },
        "ruleOrder": {
          "description": "Required. The order in which the rule is applied. Lower order rules are applied before higher value rules so they may end up being overridden.",
          "type": "string",
          "format": "int64"
        },
        "revisionId": {
          "description": "Output only. The revision ID of the mapping rule. A new revision is committed whenever the mapping rule is changed in any way. The format is an 8-character hexadecimal string.",
          "readOnly": true,
          "type": "string"
        },
        "revisionCreateTime": {
          "description": "Output only. The timestamp that the revision was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "singleEntityRename": {
          "description": "Optional. Rule to specify how a single entity should be renamed.",
          "$ref": "SingleEntityRename"
        },
        "multiEntityRename": {
          "description": "Optional. Rule to specify how multiple entities should be renamed.",
          "$ref": "MultiEntityRename"
        },
        "entityMove": {
          "description": "Optional. Rule to specify how multiple entities should be relocated into a different schema.",
          "$ref": "EntityMove"
        },
        "singleColumnChange": {
          "description": "Optional. Rule to specify how a single column is converted.",
          "$ref": "SingleColumnChange"
        },
        "multiColumnDataTypeChange": {
          "description": "Optional. Rule to specify how multiple columns should be converted to a different data type.",
          "$ref": "MultiColumnDatatypeChange"
        },
        "conditionalColumnSetValue": {
          "description": "Optional. Rule to specify how the data contained in a column should be transformed (such as trimmed, rounded, etc) provided that the data meets certain criteria.",
          "$ref": "ConditionalColumnSetValue"
        },
        "convertRowidColumn": {
          "description": "Optional. Rule to specify how multiple tables should be converted with an additional rowid column.",
          "$ref": "ConvertRowIdToColumn"
        },
        "setTablePrimaryKey": {
          "description": "Optional. Rule to specify the primary key for a table",
          "$ref": "SetTablePrimaryKey"
        },
        "singlePackageChange": {
          "description": "Optional. Rule to specify how a single package is converted.",
          "$ref": "SinglePackageChange"
        },
        "sourceSqlChange": {
          "description": "Optional. Rule to change the sql code for an entity, for example, function, procedure.",
          "$ref": "SourceSqlChange"
        },
        "filterTableColumns": {
          "description": "Optional. Rule to specify the list of columns to include or exclude from a table.",
          "$ref": "FilterTableColumns"
        }
      }
    },
    "MappingRuleFilter": {
      "id": "MappingRuleFilter",
      "description": "A filter defining the entities that a mapping rule should be applied to. When more than one field is specified, the rule is applied only to entities which match all the fields.",
      "type": "object",
      "properties": {
        "parentEntity": {
          "description": "Optional. The rule should be applied to entities whose parent entity (fully qualified name) matches the given value. For example, if the rule applies to a table entity, the expected value should be a schema (schema). If the rule applies to a column or index entity, the expected value can be either a schema (schema) or a table (schema.table)",
          "type": "string"
        },
        "entityNamePrefix": {
          "description": "Optional. The rule should be applied to entities whose non-qualified name starts with the given prefix.",
          "type": "string"
        },
        "entityNameSuffix": {
          "description": "Optional. The rule should be applied to entities whose non-qualified name ends with the given suffix.",
          "type": "string"
        },
        "entityNameContains": {
          "description": "Optional. The rule should be applied to entities whose non-qualified name contains the given string.",
          "type": "string"
        },
        "entities": {
          "description": "Optional. The rule should be applied to specific entities defined by their fully qualified names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SingleEntityRename": {
      "id": "SingleEntityRename",
      "description": "Options to configure rule type SingleEntityRename. The rule is used to rename an entity. The rule filter field can refer to only one entity. The rule scope can be one of: Database, Schema, Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT, Synonym",
      "type": "object",
      "properties": {
        "newName": {
          "description": "Required. The new name of the destination entity",
          "type": "string"
        }
      }
    },
    "MultiEntityRename": {
      "id": "MultiEntityRename",
      "description": "Options to configure rule type MultiEntityRename. The rule is used to rename multiple entities. The rule filter field can refer to one or more entities. The rule scope can be one of: Database, Schema, Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT",
      "type": "object",
      "properties": {
        "newNamePattern": {
          "description": "Optional. The pattern used to generate the new entity's name. This pattern must include the characters '{name}', which will be replaced with the name of the original entity. For example, the pattern 't_{name}' for an entity name jobs would be converted to 't_jobs'. If unspecified, the default value for this field is '{name}'",
          "type": "string"
        },
        "sourceNameTransformation": {
          "description": "Optional. Additional transformation that can be done on the source entity name before it is being used by the new_name_pattern, for example lower case. If no transformation is desired, use NO_TRANSFORMATION",
          "type": "string",
          "enumDescriptions": [
            "Entity name transformation unspecified.",
            "No transformation.",
            "Transform to lower case.",
            "Transform to upper case.",
            "Transform to capitalized case."
          ],
          "enum": [
            "ENTITY_NAME_TRANSFORMATION_UNSPECIFIED",
            "ENTITY_NAME_TRANSFORMATION_NO_TRANSFORMATION",
            "ENTITY_NAME_TRANSFORMATION_LOWER_CASE",
            "ENTITY_NAME_TRANSFORMATION_UPPER_CASE",
            "ENTITY_NAME_TRANSFORMATION_CAPITALIZED_CASE"
          ]
        }
      }
    },
    "EntityMove": {
      "id": "EntityMove",
      "description": "Options to configure rule type EntityMove. The rule is used to move an entity to a new schema. The rule filter field can refer to one or more entities. The rule scope can be one of: Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT",
      "type": "object",
      "properties": {
        "newSchema": {
          "description": "Required. The new schema",
          "type": "string"
        }
      }
    },
    "SingleColumnChange": {
      "id": "SingleColumnChange",
      "description": "Options to configure rule type SingleColumnChange. The rule is used to change the properties of a column. The rule filter field can refer to one entity. The rule scope can be one of: Column. When using this rule, if a field is not specified than the destination column's configuration will be the same as the one in the source column..",
      "type": "object",
      "properties": {
        "dataType": {
          "description": "Optional. Column data type name.",
          "type": "string"
        },
        "charset": {
          "description": "Optional. Charset override - instead of table level charset.",
          "type": "string"
        },
        "collation": {
          "description": "Optional. Collation override - instead of table level collation.",
          "type": "string"
        },
        "length": {
          "description": "Optional. Column length - e.g. 50 as in varchar (50) - when relevant.",
          "type": "string",
          "format": "int64"
        },
        "precision": {
          "description": "Optional. Column precision - e.g. 8 as in double (8,2) - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "description": "Optional. Column scale - e.g. 2 as in double (8,2) - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "fractionalSecondsPrecision": {
          "description": "Optional. Column fractional seconds precision - e.g. 2 as in timestamp (2) - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "array": {
          "description": "Optional. Is the column of array type.",
          "type": "boolean"
        },
        "arrayLength": {
          "description": "Optional. The length of the array, only relevant if the column type is an array.",
          "type": "integer",
          "format": "int32"
        },
        "nullable": {
          "description": "Optional. Is the column nullable.",
          "type": "boolean"
        },
        "autoGenerated": {
          "description": "Optional. Is the column auto-generated/identity.",
          "type": "boolean"
        },
        "udt": {
          "description": "Optional. Is the column a UDT (User-defined Type).",
          "type": "boolean"
        },
        "customFeatures": {
          "description": "Optional. Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "setValues": {
          "description": "Optional. Specifies the list of values allowed in the column.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "description": "Optional. Comment associated with the column.",
          "type": "string"
        }
      }
    },
    "MultiColumnDatatypeChange": {
      "id": "MultiColumnDatatypeChange",
      "description": "Options to configure rule type MultiColumnDatatypeChange. The rule is used to change the data type and associated properties of multiple columns at once. The rule filter field can refer to one or more entities. The rule scope can be one of:Column. This rule requires additional filters to be specified beyond the basic rule filter field, which is the source data type, but the rule supports additional filtering capabilities such as the minimum and maximum field length. All additional filters which are specified are required to be met in order for the rule to be applied (logical AND between the fields).",
      "type": "object",
      "properties": {
        "sourceDataTypeFilter": {
          "description": "Required. Filter on source data type.",
          "type": "string"
        },
        "sourceTextFilter": {
          "description": "Optional. Filter for text-based data types like varchar.",
          "$ref": "SourceTextFilter"
        },
        "sourceNumericFilter": {
          "description": "Optional. Filter for fixed point number data types such as NUMERIC/NUMBER.",
          "$ref": "SourceNumericFilter"
        },
        "newDataType": {
          "description": "Required. New data type.",
          "type": "string"
        },
        "overrideLength": {
          "description": "Optional. Column length - e.g. varchar (50) - if not specified and relevant uses the source column length.",
          "type": "string",
          "format": "int64"
        },
        "overrideScale": {
          "description": "Optional. Column scale - when relevant - if not specified and relevant uses the source column scale.",
          "type": "integer",
          "format": "int32"
        },
        "overridePrecision": {
          "description": "Optional. Column precision - when relevant - if not specified and relevant uses the source column precision.",
          "type": "integer",
          "format": "int32"
        },
        "overrideFractionalSecondsPrecision": {
          "description": "Optional. Column fractional seconds precision - used only for timestamp based datatypes - if not specified and relevant uses the source column fractional seconds precision.",
          "type": "integer",
          "format": "int32"
        },
        "customFeatures": {
          "description": "Optional. Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "SourceTextFilter": {
      "id": "SourceTextFilter",
      "description": "Filter for text-based data types like varchar.",
      "type": "object",
      "properties": {
        "sourceMinLengthFilter": {
          "description": "Optional. The filter will match columns with length greater than or equal to this number.",
          "type": "string",
          "format": "int64"
        },
        "sourceMaxLengthFilter": {
          "description": "Optional. The filter will match columns with length smaller than or equal to this number.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SourceNumericFilter": {
      "id": "SourceNumericFilter",
      "description": "Filter for fixed point number data types such as NUMERIC/NUMBER",
      "type": "object",
      "properties": {
        "sourceMinScaleFilter": {
          "description": "Optional. The filter will match columns with scale greater than or equal to this number.",
          "type": "integer",
          "format": "int32"
        },
        "sourceMaxScaleFilter": {
          "description": "Optional. The filter will match columns with scale smaller than or equal to this number.",
          "type": "integer",
          "format": "int32"
        },
        "sourceMinPrecisionFilter": {
          "description": "Optional. The filter will match columns with precision greater than or equal to this number.",
          "type": "integer",
          "format": "int32"
        },
        "sourceMaxPrecisionFilter": {
          "description": "Optional. The filter will match columns with precision smaller than or equal to this number.",
          "type": "integer",
          "format": "int32"
        },
        "numericFilterOption": {
          "description": "Required. Enum to set the option defining the datatypes numeric filter has to be applied to",
          "type": "string",
          "enumDescriptions": [
            "Numeric filter option unspecified",
            "Numeric filter option that matches all numeric columns.",
            "Numeric filter option that matches columns having numeric datatypes with specified precision and scale within the limited range of filter.",
            "Numeric filter option that matches only the numeric columns with no precision and scale specified."
          ],
          "enum": [
            "NUMERIC_FILTER_OPTION_UNSPECIFIED",
            "NUMERIC_FILTER_OPTION_ALL",
            "NUMERIC_FILTER_OPTION_LIMIT",
            "NUMERIC_FILTER_OPTION_LIMITLESS"
          ]
        }
      }
    },
    "ConditionalColumnSetValue": {
      "id": "ConditionalColumnSetValue",
      "description": "Options to configure rule type ConditionalColumnSetValue. The rule is used to transform the data which is being replicated/migrated. The rule filter field can refer to one or more entities. The rule scope can be one of: Column.",
      "type": "object",
      "properties": {
        "sourceTextFilter": {
          "description": "Optional. Optional filter on source column length. Used for text based data types like varchar.",
          "$ref": "SourceTextFilter"
        },
        "sourceNumericFilter": {
          "description": "Optional. Optional filter on source column precision and scale. Used for fixed point numbers such as NUMERIC/NUMBER data types.",
          "$ref": "SourceNumericFilter"
        },
        "valueTransformation": {
          "description": "Required. Description of data transformation during migration.",
          "$ref": "ValueTransformation"
        },
        "customFeatures": {
          "description": "Optional. Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "ValueTransformation": {
      "id": "ValueTransformation",
      "description": "Description of data transformation during migration as part of the ConditionalColumnSetValue.",
      "type": "object",
      "properties": {
        "isNull": {
          "description": "Optional. Value is null",
          "$ref": "Empty"
        },
        "valueList": {
          "description": "Optional. Value is found in the specified list.",
          "$ref": "ValueListFilter"
        },
        "intComparison": {
          "description": "Optional. Filter on relation between source value and compare value of type integer.",
          "$ref": "IntComparisonFilter"
        },
        "doubleComparison": {
          "description": "Optional. Filter on relation between source value and compare value of type double.",
          "$ref": "DoubleComparisonFilter"
        },
        "assignNull": {
          "description": "Optional. Set to null",
          "$ref": "Empty"
        },
        "assignSpecificValue": {
          "description": "Optional. Set to a specific value (value is converted to fit the target data type)",
          "$ref": "AssignSpecificValue"
        },
        "assignMinValue": {
          "description": "Optional. Set to min_value - if integer or numeric, will use int.minvalue, etc",
          "$ref": "Empty"
        },
        "assignMaxValue": {
          "description": "Optional. Set to max_value - if integer or numeric, will use int.maxvalue, etc",
          "$ref": "Empty"
        },
        "roundScale": {
          "description": "Optional. Allows the data to change scale",
          "$ref": "RoundToScale"
        },
        "applyHash": {
          "description": "Optional. Applies a hash function on the data",
          "$ref": "ApplyHash"
        }
      }
    },
    "ValueListFilter": {
      "id": "ValueListFilter",
      "description": "A list of values to filter by in ConditionalColumnSetValue",
      "type": "object",
      "properties": {
        "valuePresentList": {
          "description": "Required. Indicates whether the filter matches rows with values that are present in the list or those with values not present in it.",
          "type": "string",
          "enumDescriptions": [
            "Value present in list unspecified",
            "If the source value is in the supplied list at value_list",
            "If the source value is not in the supplied list at value_list"
          ],
          "enum": [
            "VALUE_PRESENT_IN_LIST_UNSPECIFIED",
            "VALUE_PRESENT_IN_LIST_IF_VALUE_LIST",
            "VALUE_PRESENT_IN_LIST_IF_VALUE_NOT_LIST"
          ]
        },
        "values": {
          "description": "Required. The list to be used to filter by",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoreCase": {
          "description": "Required. Whether to ignore case when filtering by values. Defaults to false",
          "type": "boolean"
        }
      }
    },
    "IntComparisonFilter": {
      "id": "IntComparisonFilter",
      "description": "Filter based on relation between source value and compare value of type integer in ConditionalColumnSetValue",
      "type": "object",
      "properties": {
        "valueComparison": {
          "description": "Required. Relation between source value and compare value",
          "type": "string",
          "enumDescriptions": [
            "Value comparison unspecified.",
            "Value is smaller than the Compare value.",
            "Value is smaller or equal than the Compare value.",
            "Value is larger than the Compare value.",
            "Value is larger or equal than the Compare value."
          ],
          "enum": [
            "VALUE_COMPARISON_UNSPECIFIED",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_THAN",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN"
          ]
        },
        "value": {
          "description": "Required. Integer compare value to be used",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "DoubleComparisonFilter": {
      "id": "DoubleComparisonFilter",
      "description": "Filter based on relation between source value and compare value of type double in ConditionalColumnSetValue",
      "type": "object",
      "properties": {
        "valueComparison": {
          "description": "Required. Relation between source value and compare value",
          "type": "string",
          "enumDescriptions": [
            "Value comparison unspecified.",
            "Value is smaller than the Compare value.",
            "Value is smaller or equal than the Compare value.",
            "Value is larger than the Compare value.",
            "Value is larger or equal than the Compare value."
          ],
          "enum": [
            "VALUE_COMPARISON_UNSPECIFIED",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_THAN",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN"
          ]
        },
        "value": {
          "description": "Required. Double compare value to be used",
          "type": "number",
          "format": "double"
        }
      }
    },
    "AssignSpecificValue": {
      "id": "AssignSpecificValue",
      "description": "Set to a specific value (value is converted to fit the target data type)",
      "type": "object",
      "properties": {
        "value": {
          "description": "Required. Specific value to be assigned",
          "type": "string"
        }
      }
    },
    "RoundToScale": {
      "id": "RoundToScale",
      "description": "This allows the data to change scale, for example if the source is 2 digits after the decimal point, specify round to scale value = 2. If for example the value needs to be converted to an integer, use round to scale value = 0.",
      "type": "object",
      "properties": {
        "scale": {
          "description": "Required. Scale value to be used",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ApplyHash": {
      "id": "ApplyHash",
      "description": "Apply a hash function on the value.",
      "type": "object",
      "properties": {
        "uuidFromBytes": {
          "description": "Optional. Generate UUID from the data's byte array",
          "$ref": "Empty"
        }
      }
    },
    "ConvertRowIdToColumn": {
      "id": "ConvertRowIdToColumn",
      "description": "Options to configure rule type ConvertROWIDToColumn. The rule is used to add column rowid to destination tables based on an Oracle rowid function/property. The rule filter field can refer to one or more entities. The rule scope can be one of: Table. This rule requires additional filter to be specified beyond the basic rule filter field, which is whether or not to work on tables which already have a primary key defined.",
      "type": "object",
      "properties": {
        "onlyIfNoPrimaryKey": {
          "description": "Required. Only work on tables without primary key defined",
          "type": "boolean"
        }
      }
    },
    "SetTablePrimaryKey": {
      "id": "SetTablePrimaryKey",
      "description": "Options to configure rule type SetTablePrimaryKey. The rule is used to specify the columns and name to configure/alter the primary key of a table. The rule filter field can refer to one entity. The rule scope can be one of: Table.",
      "type": "object",
      "properties": {
        "primaryKeyColumns": {
          "description": "Required. List of column names for the primary key",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primaryKey": {
          "description": "Optional. Name for the primary key",
          "type": "string"
        }
      }
    },
    "SinglePackageChange": {
      "id": "SinglePackageChange",
      "description": "Options to configure rule type SinglePackageChange. The rule is used to alter the sql code for a package entities. The rule filter field can refer to one entity. The rule scope can be: Package",
      "type": "object",
      "properties": {
        "packageDescription": {
          "description": "Optional. Sql code for package description",
          "type": "string"
        },
        "packageBody": {
          "description": "Optional. Sql code for package body",
          "type": "string"
        }
      }
    },
    "SourceSqlChange": {
      "id": "SourceSqlChange",
      "description": "Options to configure rule type SourceSqlChange. The rule is used to alter the sql code for database entities. The rule filter field can refer to one entity. The rule scope can be: StoredProcedure, Function, Trigger, View",
      "type": "object",
      "properties": {
        "sqlCode": {
          "description": "Required. Sql code for source (stored procedure, function, trigger or view)",
          "type": "string"
        }
      }
    },
    "FilterTableColumns": {
      "id": "FilterTableColumns",
      "description": "Options to configure rule type FilterTableColumns. The rule is used to filter the list of columns to include or exclude from a table. The rule filter field can refer to one entity. The rule scope can be: Table Only one of the two lists can be specified for the rule.",
      "type": "object",
      "properties": {
        "includeColumns": {
          "description": "Optional. List of columns to be included for a particular table.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludeColumns": {
          "description": "Optional. List of columns to be excluded for a particular table.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListMappingRulesResponse": {
      "id": "ListMappingRulesResponse",
      "description": "Response message for 'ListMappingRulesRequest' request.",
      "type": "object",
      "properties": {
        "mappingRules": {
          "description": "The list of conversion workspace mapping rules.",
          "type": "array",
          "items": {
            "$ref": "MappingRule"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "SeedConversionWorkspaceRequest": {
      "id": "SeedConversionWorkspaceRequest",
      "description": "Request message for 'SeedConversionWorkspace' request.",
      "type": "object",
      "properties": {
        "autoCommit": {
          "description": "Should the conversion workspace be committed automatically after the seed operation.",
          "type": "boolean"
        },
        "sourceConnectionProfile": {
          "description": "Optional. Fully qualified (Uri) name of the source connection profile.",
          "type": "string"
        },
        "destinationConnectionProfile": {
          "description": "Optional. Fully qualified (Uri) name of the destination connection profile.",
          "type": "string"
        }
      }
    },
    "ImportMappingRulesRequest": {
      "id": "ImportMappingRulesRequest",
      "description": "Request message for 'ImportMappingRules' request.",
      "type": "object",
      "properties": {
        "rulesFormat": {
          "description": "Required. The format of the rules content file.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ],
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ]
        },
        "rulesFiles": {
          "description": "Required. One or more rules files.",
          "type": "array",
          "items": {
            "$ref": "RulesFile"
          }
        },
        "autoCommit": {
          "description": "Required. Should the conversion workspace be committed automatically after the import operation.",
          "type": "boolean"
        }
      }
    },
    "RulesFile": {
      "id": "RulesFile",
      "description": "Details of a single rules file.",
      "type": "object",
      "properties": {
        "rulesSourceFilename": {
          "description": "Required. The filename of the rules that needs to be converted. The filename is used mainly so that future logs of the import rules job contain it, and can therefore be searched by it.",
          "type": "string"
        },
        "rulesContent": {
          "description": "Required. The text content of the rules that needs to be converted.",
          "type": "string"
        }
      }
    },
    "ConvertConversionWorkspaceRequest": {
      "id": "ConvertConversionWorkspaceRequest",
      "description": "Request message for 'ConvertConversionWorkspace' request.",
      "type": "object",
      "properties": {
        "autoCommit": {
          "description": "Optional. Specifies whether the conversion workspace is to be committed automatically after the conversion.",
          "type": "boolean"
        },
        "filter": {
          "description": "Optional. Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering.",
          "type": "string"
        },
        "convertFullPath": {
          "description": "Optional. Automatically convert the full entity path for each entity specified by the filter. For example, if the filter specifies a table, that table schema (and database if there is one) will also be converted.",
          "type": "boolean"
        }
      }
    },
    "CommitConversionWorkspaceRequest": {
      "id": "CommitConversionWorkspaceRequest",
      "description": "Request message for 'CommitConversionWorkspace' request.",
      "type": "object",
      "properties": {
        "commitName": {
          "description": "Optional. Optional name of the commit.",
          "type": "string"
        }
      }
    },
    "RollbackConversionWorkspaceRequest": {
      "id": "RollbackConversionWorkspaceRequest",
      "description": "Request message for 'RollbackConversionWorkspace' request.",
      "type": "object",
      "properties": {}
    },
    "ApplyConversionWorkspaceRequest": {
      "id": "ApplyConversionWorkspaceRequest",
      "description": "Request message for 'ApplyConversionWorkspace' request.",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Filter which entities to apply. Leaving this field empty will apply all of the entities. Supports Google AIP 160 based filtering.",
          "type": "string"
        },
        "dryRun": {
          "description": "Optional. Only validates the apply process, but doesn't change the destination database. Only works for PostgreSQL destination connection profile.",
          "type": "boolean"
        },
        "autoCommit": {
          "description": "Optional. Specifies whether the conversion workspace is to be committed automatically after the apply.",
          "type": "boolean"
        },
        "connectionProfile": {
          "description": "Optional. Fully qualified (Uri) name of the destination connection profile.",
          "type": "string"
        }
      }
    },
    "DescribeDatabaseEntitiesResponse": {
      "id": "DescribeDatabaseEntitiesResponse",
      "description": "Response message for 'DescribeDatabaseEntities' request.",
      "type": "object",
      "properties": {
        "databaseEntities": {
          "description": "The list of database entities for the conversion workspace.",
          "type": "array",
          "items": {
            "$ref": "DatabaseEntity"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "DatabaseEntity": {
      "id": "DatabaseEntity",
      "description": "The base entity type for all the database related entities. The message contains the entity name, the name of its parent, the entity type, and the specific details per entity type.",
      "type": "object",
      "properties": {
        "shortName": {
          "description": "The short name (e.g. table name) of the entity.",
          "type": "string"
        },
        "parentEntity": {
          "description": "The full name of the parent entity (e.g. schema name).",
          "type": "string"
        },
        "tree": {
          "description": "The type of tree the entity belongs to.",
          "type": "string",
          "enumDescriptions": [
            "Tree type unspecified.",
            "Tree of entities loaded from a source database.",
            "Tree of entities converted from the source tree using the mapping rules.",
            "Tree of entities observed on the destination database."
          ],
          "enum": [
            "TREE_TYPE_UNSPECIFIED",
            "SOURCE",
            "DRAFT",
            "DESTINATION"
          ]
        },
        "entityType": {
          "description": "The type of the database entity (table, view, index, ...).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "mappings": {
          "description": "Details about entity mappings. For source tree entities, this holds the draft entities which were generated by the mapping rules. For draft tree entities, this holds the source entities which were converted to form the draft entity. Destination entities will have no mapping details.",
          "type": "array",
          "items": {
            "$ref": "EntityMapping"
          }
        },
        "entityDdl": {
          "description": "Details about the entity DDL script. Multiple DDL scripts are provided for child entities such as a table entity will have one DDL for the table with additional DDLs for each index, constraint and such.",
          "type": "array",
          "items": {
            "$ref": "EntityDdl"
          }
        },
        "issues": {
          "description": "Details about the various issues found for the entity.",
          "type": "array",
          "items": {
            "$ref": "EntityIssue"
          }
        },
        "database": {
          "description": "Database.",
          "$ref": "DatabaseInstanceEntity"
        },
        "schema": {
          "description": "Schema.",
          "$ref": "SchemaEntity"
        },
        "table": {
          "description": "Table.",
          "$ref": "TableEntity"
        },
        "view": {
          "description": "View.",
          "$ref": "ViewEntity"
        },
        "sequence": {
          "description": "Sequence.",
          "$ref": "SequenceEntity"
        },
        "storedProcedure": {
          "description": "Stored procedure.",
          "$ref": "StoredProcedureEntity"
        },
        "databaseFunction": {
          "description": "Function.",
          "$ref": "FunctionEntity"
        },
        "synonym": {
          "description": "Synonym.",
          "$ref": "SynonymEntity"
        },
        "databasePackage": {
          "description": "Package.",
          "$ref": "PackageEntity"
        },
        "udt": {
          "description": "UDT.",
          "$ref": "UDTEntity"
        },
        "materializedView": {
          "description": "Materialized view.",
          "$ref": "MaterializedViewEntity"
        }
      }
    },
    "EntityMapping": {
      "id": "EntityMapping",
      "description": "Details of the mappings of a database entity.",
      "type": "object",
      "properties": {
        "sourceEntity": {
          "description": "Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column.",
          "type": "string"
        },
        "draftEntity": {
          "description": "Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column.",
          "type": "string"
        },
        "sourceType": {
          "description": "Type of source entity.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "draftType": {
          "description": "Type of draft entity.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "mappingLog": {
          "description": "Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity, such as a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along with the reason preventing them to do so.",
          "type": "array",
          "items": {
            "$ref": "EntityMappingLogEntry"
          }
        }
      }
    },
    "EntityMappingLogEntry": {
      "id": "EntityMappingLogEntry",
      "description": "A single record of a rule which was used for a mapping.",
      "type": "object",
      "properties": {
        "ruleId": {
          "description": "Which rule caused this log entry.",
          "type": "string"
        },
        "ruleRevisionId": {
          "description": "Rule revision ID.",
          "type": "string"
        },
        "mappingComment": {
          "description": "Comment.",
          "type": "string"
        }
      }
    },
    "EntityDdl": {
      "id": "EntityDdl",
      "description": "A single DDL statement for a specific entity",
      "type": "object",
      "properties": {
        "ddlType": {
          "description": "Type of DDL (Create, Alter).",
          "type": "string"
        },
        "entity": {
          "description": "The name of the database entity the ddl refers to.",
          "type": "string"
        },
        "ddl": {
          "description": "The actual ddl code.",
          "type": "string"
        },
        "entityType": {
          "description": "The entity type (if the DDL is for a sub entity).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "issueId": {
          "description": "EntityIssues found for this ddl.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EntityIssue": {
      "id": "EntityIssue",
      "description": "Issue related to the entity.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Issue ID.",
          "type": "string"
        },
        "type": {
          "description": "The type of the issue.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified issue type.",
            "Issue originated from the DDL",
            "Issue originated during the apply process",
            "Issue originated during the convert process"
          ],
          "enum": [
            "ISSUE_TYPE_UNSPECIFIED",
            "ISSUE_TYPE_DDL",
            "ISSUE_TYPE_APPLY",
            "ISSUE_TYPE_CONVERT"
          ]
        },
        "severity": {
          "description": "Severity of the issue",
          "type": "string",
          "enumDescriptions": [
            "Unspecified issue severity",
            "Info",
            "Warning",
            "Error"
          ],
          "enum": [
            "ISSUE_SEVERITY_UNSPECIFIED",
            "ISSUE_SEVERITY_INFO",
            "ISSUE_SEVERITY_WARNING",
            "ISSUE_SEVERITY_ERROR"
          ]
        },
        "message": {
          "description": "Issue detailed message",
          "type": "string"
        },
        "code": {
          "description": "Error/Warning code",
          "type": "string"
        },
        "ddl": {
          "description": "The ddl which caused the issue, if relevant.",
          "type": "string"
        },
        "position": {
          "description": "The position of the issue found, if relevant.",
          "$ref": "Position"
        },
        "entityType": {
          "description": "The entity type (if the DDL is for a sub entity).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        }
      }
    },
    "Position": {
      "id": "Position",
      "description": "Issue position.",
      "type": "object",
      "properties": {
        "line": {
          "description": "Issue line number",
          "type": "integer",
          "format": "int32"
        },
        "column": {
          "description": "Issue column number",
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "description": "Issue offset",
          "type": "integer",
          "format": "int32"
        },
        "length": {
          "description": "Issue length",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DatabaseInstanceEntity": {
      "id": "DatabaseInstanceEntity",
      "description": "DatabaseInstance acts as a parent entity to other database entities.",
      "type": "object",
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "SchemaEntity": {
      "id": "SchemaEntity",
      "description": "Schema typically has no parent entity, but can have a parent entity DatabaseInstance (for database engines which support it). For some database engines, the terms schema and user can be used interchangeably when they refer to a namespace or a collection of other database entities. Can store additional information which is schema specific.",
      "type": "object",
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "TableEntity": {
      "id": "TableEntity",
      "description": "Table's parent is a schema.",
      "type": "object",
      "properties": {
        "columns": {
          "description": "Table columns.",
          "type": "array",
          "items": {
            "$ref": "ColumnEntity"
          }
        },
        "constraints": {
          "description": "Table constraints.",
          "type": "array",
          "items": {
            "$ref": "ConstraintEntity"
          }
        },
        "indices": {
          "description": "Table indices.",
          "type": "array",
          "items": {
            "$ref": "IndexEntity"
          }
        },
        "triggers": {
          "description": "Table triggers.",
          "type": "array",
          "items": {
            "$ref": "TriggerEntity"
          }
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "comment": {
          "description": "Comment associated with the table.",
          "type": "string"
        }
      }
    },
    "ColumnEntity": {
      "id": "ColumnEntity",
      "description": "Column is not used as an independent entity, it is retrieved as part of a Table entity.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Column name.",
          "type": "string"
        },
        "dataType": {
          "description": "Column data type.",
          "type": "string"
        },
        "charset": {
          "description": "Charset override - instead of table level charset.",
          "type": "string"
        },
        "collation": {
          "description": "Collation override - instead of table level collation.",
          "type": "string"
        },
        "length": {
          "description": "Column length - e.g. varchar (50).",
          "type": "string",
          "format": "int64"
        },
        "precision": {
          "description": "Column precision - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "description": "Column scale - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "fractionalSecondsPrecision": {
          "description": "Column fractional second precision - used for timestamp based datatypes.",
          "type": "integer",
          "format": "int32"
        },
        "array": {
          "description": "Is the column of array type.",
          "type": "boolean"
        },
        "arrayLength": {
          "description": "If the column is array, of which length.",
          "type": "integer",
          "format": "int32"
        },
        "nullable": {
          "description": "Is the column nullable.",
          "type": "boolean"
        },
        "autoGenerated": {
          "description": "Is the column auto-generated/identity.",
          "type": "boolean"
        },
        "udt": {
          "description": "Is the column a UDT.",
          "type": "boolean"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "setValues": {
          "description": "Specifies the list of values allowed in the column. Only used for set data type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "comment": {
          "description": "Comment associated with the column.",
          "type": "string"
        },
        "ordinalPosition": {
          "description": "Column order in the table.",
          "type": "integer",
          "format": "int32"
        },
        "defaultValue": {
          "description": "Default value of the column.",
          "type": "string"
        }
      }
    },
    "ConstraintEntity": {
      "id": "ConstraintEntity",
      "description": "Constraint is not used as an independent entity, it is retrieved as part of another entity such as Table or View.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the table constraint.",
          "type": "string"
        },
        "type": {
          "description": "Type of constraint, for example unique, primary key, foreign key (currently only primary key is supported).",
          "type": "string"
        },
        "tableColumns": {
          "description": "Table columns used as part of the Constraint, for example primary key constraint should list the columns which constitutes the key.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "referenceColumns": {
          "description": "Reference columns which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full names of referenced columns by the foreign key.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceTable": {
          "description": "Reference table which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full name of the referenced table by the foreign key.",
          "type": "string"
        },
        "tableName": {
          "description": "Table which is associated with the constraint. In case the constraint is defined on a table, this field is left empty as this information is stored in parent_name. However, if constraint is defined on a view, this field stores the table name on which the view is defined.",
          "type": "string"
        }
      }
    },
    "IndexEntity": {
      "id": "IndexEntity",
      "description": "Index is not used as an independent entity, it is retrieved as part of a Table entity.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the index.",
          "type": "string"
        },
        "type": {
          "description": "Type of index, for example B-TREE.",
          "type": "string"
        },
        "tableColumns": {
          "description": "Table columns used as part of the Index, for example B-TREE index should list the columns which constitutes the index.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unique": {
          "description": "Boolean value indicating whether the index is unique.",
          "type": "boolean"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "TriggerEntity": {
      "id": "TriggerEntity",
      "description": "Trigger is not used as an independent entity, it is retrieved as part of a Table entity.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the trigger.",
          "type": "string"
        },
        "triggeringEvents": {
          "description": "The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "triggerType": {
          "description": "Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.",
          "type": "string"
        },
        "sqlCode": {
          "description": "The SQL code which creates the trigger.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "ViewEntity": {
      "id": "ViewEntity",
      "description": "View's parent is a schema.",
      "type": "object",
      "properties": {
        "sqlCode": {
          "description": "The SQL code which creates the view.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "constraints": {
          "description": "View constraints.",
          "type": "array",
          "items": {
            "$ref": "ConstraintEntity"
          }
        }
      }
    },
    "SequenceEntity": {
      "id": "SequenceEntity",
      "description": "Sequence's parent is a schema.",
      "type": "object",
      "properties": {
        "increment": {
          "description": "Increment value for the sequence.",
          "type": "string",
          "format": "int64"
        },
        "startValue": {
          "description": "Start number for the sequence represented as bytes to accommodate large. numbers",
          "type": "string",
          "format": "byte"
        },
        "maxValue": {
          "description": "Maximum number for the sequence represented as bytes to accommodate large. numbers",
          "type": "string",
          "format": "byte"
        },
        "minValue": {
          "description": "Minimum number for the sequence represented as bytes to accommodate large. numbers",
          "type": "string",
          "format": "byte"
        },
        "cycle": {
          "description": "Indicates whether the sequence value should cycle through.",
          "type": "boolean"
        },
        "cache": {
          "description": "Indicates number of entries to cache / precreate.",
          "type": "string",
          "format": "int64"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "StoredProcedureEntity": {
      "id": "StoredProcedureEntity",
      "description": "Stored procedure's parent is a schema.",
      "type": "object",
      "properties": {
        "sqlCode": {
          "description": "The SQL code which creates the stored procedure.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "FunctionEntity": {
      "id": "FunctionEntity",
      "description": "Function's parent is a schema.",
      "type": "object",
      "properties": {
        "sqlCode": {
          "description": "The SQL code which creates the function.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "SynonymEntity": {
      "id": "SynonymEntity",
      "description": "Synonym's parent is a schema.",
      "type": "object",
      "properties": {
        "sourceEntity": {
          "description": "The name of the entity for which the synonym is being created (the source).",
          "type": "string"
        },
        "sourceType": {
          "description": "The type of the entity for which the synonym is being created (usually a table or a sequence).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "PackageEntity": {
      "id": "PackageEntity",
      "description": "Package's parent is a schema.",
      "type": "object",
      "properties": {
        "packageSqlCode": {
          "description": "The SQL code which creates the package.",
          "type": "string"
        },
        "packageBody": {
          "description": "The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "UDTEntity": {
      "id": "UDTEntity",
      "description": "UDT's parent is a schema.",
      "type": "object",
      "properties": {
        "udtSqlCode": {
          "description": "The SQL code which creates the udt.",
          "type": "string"
        },
        "udtBody": {
          "description": "The SQL code which creates the udt body.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "MaterializedViewEntity": {
      "id": "MaterializedViewEntity",
      "description": "MaterializedView's parent is a schema.",
      "type": "object",
      "properties": {
        "sqlCode": {
          "description": "The SQL code which creates the view.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "SearchBackgroundJobsResponse": {
      "id": "SearchBackgroundJobsResponse",
      "description": "Response message for 'SearchBackgroundJobs' request.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "The list of conversion workspace mapping rules.",
          "type": "array",
          "items": {
            "$ref": "BackgroundJobLogEntry"
          }
        }
      }
    },
    "BackgroundJobLogEntry": {
      "id": "BackgroundJobLogEntry",
      "description": "Execution log of a background job.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The background job log entry ID.",
          "type": "string"
        },
        "jobType": {
          "description": "The type of job that was executed.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified background job type.",
            "Job to seed from the source database.",
            "Job to convert the source database into a draft of the destination database.",
            "Job to apply the draft tree onto the destination.",
            "Job to import and convert mapping rules from an external source such as an ora2pg config file."
          ],
          "enum": [
            "BACKGROUND_JOB_TYPE_UNSPECIFIED",
            "BACKGROUND_JOB_TYPE_SOURCE_SEED",
            "BACKGROUND_JOB_TYPE_CONVERT",
            "BACKGROUND_JOB_TYPE_APPLY_DESTINATION",
            "BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE"
          ]
        },
        "startTime": {
          "description": "The timestamp when the background job was started.",
          "type": "string",
          "format": "google-datetime"
        },
        "finishTime": {
          "description": "The timestamp when the background job was finished.",
          "type": "string",
          "format": "google-datetime"
        },
        "completionState": {
          "description": "Output only. Job completion state, i.e. the final state after the job completed.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The status is not specified. This state is used when job is not yet finished.",
            "Success.",
            "Error."
          ],
          "enum": [
            "JOB_COMPLETION_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "completionComment": {
          "description": "Output only. Job completion comment, such as how many entities were seeded, how many warnings were found during conversion, and similar information.",
          "readOnly": true,
          "type": "string"
        },
        "requestAutocommit": {
          "description": "Output only. Whether the client requested the conversion workspace to be committed after a successful completion of the job.",
          "readOnly": true,
          "type": "boolean"
        },
        "seedJobDetails": {
          "description": "Output only. Seed job details.",
          "readOnly": true,
          "$ref": "SeedJobDetails"
        },
        "importRulesJobDetails": {
          "description": "Output only. Import rules job details.",
          "readOnly": true,
          "$ref": "ImportRulesJobDetails"
        },
        "convertJobDetails": {
          "description": "Output only. Convert job details.",
          "readOnly": true,
          "$ref": "ConvertJobDetails"
        },
        "applyJobDetails": {
          "description": "Output only. Apply job details.",
          "readOnly": true,
          "$ref": "ApplyJobDetails"
        }
      }
    },
    "SeedJobDetails": {
      "id": "SeedJobDetails",
      "description": "Details regarding a Seed background job.",
      "type": "object",
      "properties": {
        "connectionProfile": {
          "description": "Output only. The connection profile which was used for the seed job.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ImportRulesJobDetails": {
      "id": "ImportRulesJobDetails",
      "description": "Details regarding an Import Rules background job.",
      "type": "object",
      "properties": {
        "files": {
          "description": "Output only. File names used for the import rules job.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileFormat": {
          "description": "Output only. The requested file format.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ],
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ]
        }
      }
    },
    "ConvertJobDetails": {
      "id": "ConvertJobDetails",
      "description": "Details regarding a Convert background job.",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Output only. AIP-160 based filter used to specify the entities to convert",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ApplyJobDetails": {
      "id": "ApplyJobDetails",
      "description": "Details regarding an Apply background job.",
      "type": "object",
      "properties": {
        "connectionProfile": {
          "description": "Output only. The connection profile which was used for the apply job.",
          "readOnly": true,
          "type": "string"
        },
        "filter": {
          "description": "Output only. AIP-160 based filter used to specify the entities to apply",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DescribeConversionWorkspaceRevisionsResponse": {
      "id": "DescribeConversionWorkspaceRevisionsResponse",
      "description": "Response message for 'DescribeConversionWorkspaceRevisions' request.",
      "type": "object",
      "properties": {
        "revisions": {
          "description": "The list of conversion workspace revisions.",
          "type": "array",
          "items": {
            "$ref": "ConversionWorkspace"
          }
        }
      }
    },
    "FetchStaticIpsResponse": {
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' request.",
      "type": "object",
      "properties": {
        "staticIps": {
          "description": "List of static IPs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudClouddmsV1OperationMetadata": {
      "id": "GoogleCloudClouddmsV1OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "MigrationJobVerificationError": {
      "id": "MigrationJobVerificationError",
      "description": "Error message of a verification Migration job.",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Output only. An instance of ErrorCode specifying the error that occurred.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "An unknown error occurred",
            "We failed to connect to one of the connection profile.",
            "We failed to authenticate to one of the connection profile.",
            "One of the involved connection profiles has an invalid configuration.",
            "The versions of the source and the destination are incompatible.",
            "The types of the source and the destination are incompatible.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions.",
            "Unsupported migration type.",
            "Invalid RDS logical replication.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "The table definition is not support due to missing primary key or replica identity.",
            "The definer is not supported.",
            "Migration is already running at the time of restart request.",
            "The source already has a replication setup.",
            "The source has tables with limited support. E.g. PostgreSQL tables without primary keys.",
            "The source uses an unsupported locale.",
            "The source uses an unsupported Foreign Data Wrapper configuration.",
            "There was an underlying RDBMS error.",
            "The source DB size in Bytes exceeds a certain threshold. The migration might require an increase of quota, or might not be supported.",
            "The destination DB contains existing databases that are conflicting with those in the source DB.",
            "Insufficient privilege to enable the parallelism configuration.",
            "The destination instance contains existing data or user defined entities (for example databases, tables, or functions). You can only migrate to empty instances. Clear your destination instance and retry the migration job.",
            "The migration job is configured to use max number of subscriptions to migrate data from the source to the destination."
          ],
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "AUTHENTICATION_FAILURE",
            "INVALID_CONNECTION_PROFILE_CONFIG",
            "VERSION_INCOMPATIBILITY",
            "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "UNSUPPORTED_MIGRATION_TYPE",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "UNSUPPORTED_GTID_MODE",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "CANT_RESTART_RUNNING_MIGRATION",
            "SOURCE_ALREADY_SETUP",
            "TABLES_WITH_LIMITED_SUPPORT",
            "UNSUPPORTED_DATABASE_LOCALE",
            "UNSUPPORTED_DATABASE_FDW_CONFIG",
            "ERROR_RDBMS",
            "SOURCE_SIZE_EXCEEDS_THRESHOLD",
            "EXISTING_CONFLICTING_DATABASES",
            "PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE",
            "EXISTING_DATA",
            "SOURCE_MAX_SUBSCRIPTIONS"
          ]
        },
        "errorMessage": {
          "description": "Output only. A formatted message with further details about the error and a CTA.",
          "readOnly": true,
          "type": "string"
        },
        "errorDetailMessage": {
          "description": "Output only. A specific detailed error message, if supplied by the engine.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "fetchStaticIps": {
              "id": "datamigration.projects.locations.fetchStaticIps",
              "path": "v1/{+name}:fetchStaticIps",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "Maximum number of IPs to return.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token, received from a previous `FetchStaticIps` call.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Fetches a set of static IP addresses that need to be allowlisted by the customer when using the static-IP connectivity method."
            },
            "list": {
              "id": "datamigration.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "datamigration.projects.locations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "datamigration.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "datamigration.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "datamigration.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "datamigration.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "migrationJobs": {
              "methods": {
                "list": {
                  "id": "datamigration.projects.locations.migrationJobs.list",
                  "path": "v1/{+parent}/migrationJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent which owns this collection of migrationJobs.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of migration jobs to return. The service may return fewer than this value. If unspecified, at most 50 migration jobs will be returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The nextPageToken value received in the previous call to migrationJobs.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to migrationJobs.list must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters migration jobs listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list migration jobs created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **reverseSshConnectivity.vmIp = \"1.2.3.4\"** to select all migration jobs connecting through the specific SSH tunnel bastion.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results based on the migration job name. Valid values are: \"name\", \"name asc\", and \"name desc\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMigrationJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists migration jobs in a given project and location."
                },
                "get": {
                  "id": "datamigration.projects.locations.migrationJobs.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the migration job resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "MigrationJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single migration job."
                },
                "create": {
                  "id": "datamigration.projects.locations.migrationJobs.create",
                  "path": "v1/{+parent}/migrationJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent which owns this collection of migration jobs.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "migrationJobId": {
                      "description": "Required. The ID of the instance to create.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new migration job in a given project and location."
                },
                "patch": {
                  "id": "datamigration.projects.locations.migrationJobs.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single migration job."
                },
                "delete": {
                  "id": "datamigration.projects.locations.migrationJobs.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the migration job resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "The destination CloudSQL connection profile is always deleted with the migration job. In case of force delete, the destination CloudSQL replica database is also deleted.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single migration job."
                },
                "start": {
                  "id": "datamigration.projects.locations.migrationJobs.start",
                  "path": "v1/{+name}:start",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to start.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StartMigrationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Start an already created migration job."
                },
                "stop": {
                  "id": "datamigration.projects.locations.migrationJobs.stop",
                  "path": "v1/{+name}:stop",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to stop.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "StopMigrationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Stops a running migration job."
                },
                "resume": {
                  "id": "datamigration.projects.locations.migrationJobs.resume",
                  "path": "v1/{+name}:resume",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to resume.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ResumeMigrationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase)."
                },
                "promote": {
                  "id": "datamigration.projects.locations.migrationJobs.promote",
                  "path": "v1/{+name}:promote",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to promote.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "PromoteMigrationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database."
                },
                "demoteDestination": {
                  "id": "datamigration.projects.locations.migrationJobs.demoteDestination",
                  "path": "v1/{+name}:demoteDestination",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:demoteDestination",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to demote its destination.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "DemoteDestinationRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Demotes the destination database to become a read replica of the source. This is applicable for the following migrations: 1. MySQL to Cloud SQL for MySQL 2. PostgreSQL to Cloud SQL for PostgreSQL 3. PostgreSQL to AlloyDB for PostgreSQL."
                },
                "verify": {
                  "id": "datamigration.projects.locations.migrationJobs.verify",
                  "path": "v1/{+name}:verify",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to verify.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "VerifyMigrationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met."
                },
                "restart": {
                  "id": "datamigration.projects.locations.migrationJobs.restart",
                  "path": "v1/{+name}:restart",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to restart.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RestartMigrationJobRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch."
                },
                "generateSshScript": {
                  "id": "datamigration.projects.locations.migrationJobs.generateSshScript",
                  "path": "v1/{+migrationJob}:generateSshScript",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript",
                  "httpMethod": "POST",
                  "parameters": {
                    "migrationJob": {
                      "description": "Name of the migration job resource to generate the SSH script.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "request": {
                    "$ref": "GenerateSshScriptRequest"
                  },
                  "response": {
                    "$ref": "SshScript"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Generate a SSH configuration script to configure the reverse SSH connectivity."
                },
                "generateTcpProxyScript": {
                  "id": "datamigration.projects.locations.migrationJobs.generateTcpProxyScript",
                  "path": "v1/{+migrationJob}:generateTcpProxyScript",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateTcpProxyScript",
                  "httpMethod": "POST",
                  "parameters": {
                    "migrationJob": {
                      "description": "Name of the migration job resource to generate the TCP Proxy script.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "request": {
                    "$ref": "GenerateTcpProxyScriptRequest"
                  },
                  "response": {
                    "$ref": "TcpProxyScript"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Generate a TCP Proxy configuration script to configure a cloud-hosted VM running a TCP Proxy."
                },
                "setIamPolicy": {
                  "id": "datamigration.projects.locations.migrationJobs.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "datamigration.projects.locations.migrationJobs.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "datamigration.projects.locations.migrationJobs.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "list": {
                  "id": "datamigration.projects.locations.connectionProfiles.list",
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent which owns this collection of connection profiles.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of connection profiles to return. The service may return fewer than this value. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters connection profiles listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list connection profiles created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z**. You can also filter nested fields. For example, you could specify **mySql.username = %lt;my_username%gt;** to list all connection profiles configured to connect with a specific username.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "A comma-separated list of fields to order results according to.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves a list of all connection profiles in a given project and location."
                },
                "get": {
                  "id": "datamigration.projects.locations.connectionProfiles.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the connection profile resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single connection profile."
                },
                "create": {
                  "id": "datamigration.projects.locations.connectionProfiles.create",
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent which owns this collection of connection profiles.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "skipValidation": {
                      "description": "Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new connection profile in a given project and location."
                },
                "patch": {
                  "id": "datamigration.projects.locations.connectionProfiles.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "skipValidation": {
                      "description": "Optional. Update the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update the configuration of a single connection profile."
                },
                "delete": {
                  "id": "datamigration.projects.locations.connectionProfiles.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the connection profile resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "In case of force delete, the CloudSQL replica database is also deleted (only for CloudSQL connection profile).",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs."
                },
                "setIamPolicy": {
                  "id": "datamigration.projects.locations.connectionProfiles.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "datamigration.projects.locations.connectionProfiles.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "datamigration.projects.locations.connectionProfiles.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "privateConnections": {
              "methods": {
                "create": {
                  "id": "datamigration.projects.locations.privateConnections.create",
                  "path": "v1/{+parent}/privateConnections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "privateConnectionId": {
                      "description": "Required. The private connection identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "skipValidation": {
                      "description": "Optional. If set to true, will skip validations.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new private connection in a given project and location."
                },
                "get": {
                  "id": "datamigration.projects.locations.privateConnections.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the private connection to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single private connection."
                },
                "list": {
                  "id": "datamigration.projects.locations.privateConnections.list",
                  "path": "v1/{+parent}/privateConnections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of private connections.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of private connections to return. If unspecified, at most 50 private connections that are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters private connections listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list private connections created this year by specifying **createTime %gt; 2021-01-01T00:00:00.000000000Z**.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves a list of private connections in a given project and location."
                },
                "delete": {
                  "id": "datamigration.projects.locations.privateConnections.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the private connection to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Database Migration Service private connection."
                },
                "setIamPolicy": {
                  "id": "datamigration.projects.locations.privateConnections.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "datamigration.projects.locations.privateConnections.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "datamigration.projects.locations.privateConnections.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "conversionWorkspaces": {
              "methods": {
                "get": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ConversionWorkspace"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single conversion workspace."
                },
                "list": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.list",
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent which owns this collection of conversion workspaces.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of conversion workspaces to return. The service may return fewer than this value. If unspecified, at most 50 sets are returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The nextPageToken value received in the previous call to conversionWorkspaces.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspaces.list must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters conversion workspaces listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list conversion workspaces created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **source.version = \"12.c.1\"** to select all conversion workspaces with source database version equal to 12.c.1.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListConversionWorkspacesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists conversion workspaces in a given project and location."
                },
                "create": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.create",
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent which owns this collection of conversion workspaces.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "conversionWorkspaceId": {
                      "description": "Required. The ID of the conversion workspace to create.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ConversionWorkspace"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new conversion workspace in a given project and location."
                },
                "patch": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ConversionWorkspace"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single conversion workspace."
                },
                "delete": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Force delete the conversion workspace, even if there's a running migration that is using the workspace.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single conversion workspace."
                },
                "seed": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.seed",
                  "path": "v1/{+name}:seed",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:seed",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the conversion workspace resource to seed with new database structure, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SeedConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Imports a snapshot of the source database into the conversion workspace."
                },
                "convert": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.convert",
                  "path": "v1/{+name}:convert",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:convert",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Name of the conversion workspace resource to convert in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ConvertConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a draft tree schema for the destination database."
                },
                "commit": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.commit",
                  "path": "v1/{+name}:commit",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:commit",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to commit.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CommitConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Marks all the data in the conversion workspace as committed."
                },
                "rollback": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.rollback",
                  "path": "v1/{+name}:rollback",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:rollback",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to roll back to.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RollbackConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rolls back a conversion workspace to the last committed snapshot."
                },
                "apply": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.apply",
                  "path": "v1/{+name}:apply",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:apply",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the conversion workspace resource for which to apply the draft tree. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ApplyConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Applies draft tree onto a specific destination database."
                },
                "describeDatabaseEntities": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeDatabaseEntities",
                  "path": "v1/{+conversionWorkspace}:describeDatabaseEntities",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeDatabaseEntities",
                  "httpMethod": "GET",
                  "parameters": {
                    "conversionWorkspace": {
                      "description": "Required. Name of the conversion workspace resource whose database entities are described. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of entities to return. The service may return fewer entities than the value specifies.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The nextPageToken value received in the previous call to conversionWorkspace.describeDatabaseEntities, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspace.describeDatabaseEntities must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "tree": {
                      "description": "Required. The tree to fetch.",
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "Unspecified tree type.",
                        "The source database tree.",
                        "The draft database tree.",
                        "The destination database tree."
                      ],
                      "enum": [
                        "DB_TREE_TYPE_UNSPECIFIED",
                        "SOURCE_TREE",
                        "DRAFT_TREE",
                        "DESTINATION_TREE"
                      ]
                    },
                    "uncommitted": {
                      "description": "Optional. Whether to retrieve the latest committed version of the entities or the latest version. This field is ignored if a specific commit_id is specified.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "commitId": {
                      "description": "Optional. Request a specific commit ID. If not specified, the entities from the latest commit are returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Filter the returned entities based on AIP-160 standard.",
                      "location": "query",
                      "type": "string"
                    },
                    "view": {
                      "description": "Optional. Results view based on AIP-157",
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "Unspecified view. Defaults to basic view.",
                        "Default view. Does not return DDLs or Issues.",
                        "Return full entity details including mappings, ddl and issues.",
                        "Top-most (Database, Schema) nodes which are returned contains summary details for their decendents such as the number of entities per type and issues rollups. When this view is used, only a single page of result is returned and the page_size property of the request is ignored. The returned page will only include the top-most node types."
                      ],
                      "enum": [
                        "DATABASE_ENTITY_VIEW_UNSPECIFIED",
                        "DATABASE_ENTITY_VIEW_BASIC",
                        "DATABASE_ENTITY_VIEW_FULL",
                        "DATABASE_ENTITY_VIEW_ROOT_SUMMARY"
                      ]
                    }
                  },
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "response": {
                    "$ref": "DescribeDatabaseEntitiesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Describes the database entities tree for a specific conversion workspace and a specific tree type. Database entities are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are simple data objects describing the structure of the client database."
                },
                "searchBackgroundJobs": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.searchBackgroundJobs",
                  "path": "v1/{+conversionWorkspace}:searchBackgroundJobs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:searchBackgroundJobs",
                  "httpMethod": "GET",
                  "parameters": {
                    "conversionWorkspace": {
                      "description": "Required. Name of the conversion workspace resource whose jobs are listed, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "returnMostRecentPerJobType": {
                      "description": "Optional. Whether or not to return just the most recent job per job type,",
                      "location": "query",
                      "type": "boolean"
                    },
                    "maxSize": {
                      "description": "Optional. The maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 100 jobs are returned. The maximum value is 100; values above 100 are coerced to 100.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "completedUntilTime": {
                      "description": "Optional. If provided, only returns jobs that completed until (not including) the given timestamp.",
                      "location": "query",
                      "type": "string",
                      "format": "google-datetime"
                    }
                  },
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "response": {
                    "$ref": "SearchBackgroundJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Searches/lists the background jobs for a specific conversion workspace. The background jobs are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are a way to expose the data plane jobs log."
                },
                "describeConversionWorkspaceRevisions": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeConversionWorkspaceRevisions",
                  "path": "v1/{+conversionWorkspace}:describeConversionWorkspaceRevisions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeConversionWorkspaceRevisions",
                  "httpMethod": "GET",
                  "parameters": {
                    "conversionWorkspace": {
                      "description": "Required. Name of the conversion workspace resource whose revisions are listed. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "commitId": {
                      "description": "Optional. Optional filter to request a specific commit ID.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "response": {
                    "$ref": "DescribeConversionWorkspaceRevisionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves a list of committed revisions of a specific conversion workspace."
                },
                "setIamPolicy": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              },
              "resources": {
                "mappingRules": {
                  "methods": {
                    "create": {
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.create",
                      "path": "v1/{+parent}/mappingRules",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent which owns this collection of mapping rules.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "mappingRuleId": {
                          "description": "Required. The ID of the rule to create.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "MappingRule"
                      },
                      "response": {
                        "$ref": "MappingRule"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Creates a new mapping rule for a given conversion workspace."
                    },
                    "delete": {
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.delete",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules/{mappingRulesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the mapping rule resource to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+/mappingRules/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Deletes a single mapping rule."
                    },
                    "list": {
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.list",
                      "path": "v1/{+parent}/mappingRules",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the conversion workspace resource whose mapping rules are listed in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of rules to return. The service may return fewer than this value.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "The nextPageToken value received in the previous call to mappingRules.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to mappingRules.list must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListMappingRulesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists the mapping rules for a specific conversion workspace."
                    },
                    "get": {
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules/{mappingRulesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the mapping rule resource to get. Example: conversionWorkspaces/123/mappingRules/rule123 In order to retrieve a previous revision of the mapping rule, also provide the revision ID. Example: conversionWorkspace/123/mappingRules/rule123@c7cfa2a8c7cfa2a8c7cfa2a8c7cfa2a8",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+/mappingRules/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "MappingRule"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the details of a mapping rule."
                    },
                    "import": {
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.import",
                      "path": "v1/{+parent}/mappingRules:import",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules:import",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the conversion workspace resource to import the rules to in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "ImportMappingRulesRequest"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Imports the mapping rules for a given conversion workspace. Supports various formats of external rules files."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20240312",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "basePath": "",
  "mtlsRootUrl": "https://datamigration.mtls.googleapis.com/",
  "name": "datamigration",
  "title": "Database Migration API",
  "ownerName": "Google",
  "batchPath": "batch",
  "baseUrl": "https://datamigration.googleapis.com/",
  "description": "Manage Cloud Database Migration Service resources on Google Cloud Platform.",
  "id": "datamigration:v1",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "canonicalName": "Database Migration Service",
  "kind": "discovery#restDescription",
  "documentationLink": "https://cloud.google.com/database-migration/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "servicePath": "",
  "rootUrl": "https://datamigration.googleapis.com/"
}

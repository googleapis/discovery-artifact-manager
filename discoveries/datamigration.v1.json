{
  "ownerDomain": "google.com",
  "rootUrl": "https://datamigration.googleapis.com/",
  "documentationLink": "https://cloud.google.com/database-migration/",
  "canonicalName": "Database Migration Service",
  "basePath": "",
  "protocol": "rest",
  "schemas": {
    "RestartMigrationJobRequest": {
      "properties": {},
      "id": "RestartMigrationJobRequest",
      "description": "Request message for 'RestartMigrationJob' request.",
      "type": "object"
    },
    "PostgreSqlConnectionProfile": {
      "id": "PostgreSqlConnectionProfile",
      "type": "object",
      "properties": {
        "staticIpConnectivity": {
          "description": "Static ip connectivity data (default, no additional details needed).",
          "$ref": "StaticIpConnectivity"
        },
        "privateServiceConnectConnectivity": {
          "$ref": "PrivateServiceConnectConnectivity",
          "description": "Private service connect connectivity."
        },
        "username": {
          "type": "string",
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
        },
        "ssl": {
          "$ref": "SslConfig",
          "description": "SSL configuration for the destination to connect to the source database."
        },
        "host": {
          "type": "string",
          "description": "Required. The IP or hostname of the source PostgreSQL database."
        },
        "passwordSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates If this connection profile password is stored."
        },
        "networkArchitecture": {
          "enumDescriptions": [
            "",
            "Instance is in Cloud SQL's old producer network architecture.",
            "Instance is in Cloud SQL's new producer network architecture."
          ],
          "type": "string",
          "description": "Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.",
          "readOnly": true,
          "enum": [
            "NETWORK_ARCHITECTURE_UNSPECIFIED",
            "NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER",
            "NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER"
          ]
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The network port of the source PostgreSQL database."
        }
      },
      "description": "Specifies connection parameters required specifically for PostgreSQL databases."
    },
    "ForwardSshTunnelConnectivity": {
      "id": "ForwardSshTunnelConnectivity",
      "description": "Forward SSH Tunnel connectivity.",
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port for the SSH tunnel, default value is 22."
        },
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Input only. SSH password."
        },
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        }
      }
    },
    "ConvertConversionWorkspaceRequest": {
      "id": "ConvertConversionWorkspaceRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering."
        },
        "autoCommit": {
          "description": "Should the conversion workspace be committed automatically after the conversion.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Request message for 'ConvertConversionWorkspace' request."
    },
    "BackgroundJobLogEntry": {
      "type": "object",
      "properties": {
        "importRulesJobDetails": {
          "$ref": "ImportRulesJobDetails",
          "description": "Import rules job details"
        },
        "seedJobDetails": {
          "$ref": "SeedJobDetails",
          "description": "Seed job details"
        },
        "jobType": {
          "description": "The type of job that was executed.",
          "enumDescriptions": [
            "Unspecified background job type",
            "Job to seed from the source database",
            "Job to convert the source database into a draft of the destination database",
            "Job to apply the draft tree onto the destination",
            "Job to import and convert mapping rules from an external source such as an ora2pg config file"
          ],
          "enum": [
            "BACKGROUND_JOB_TYPE_UNSPECIFIED",
            "BACKGROUND_JOB_TYPE_SOURCE_SEED",
            "BACKGROUND_JOB_TYPE_CONVERT",
            "BACKGROUND_JOB_TYPE_APPLY_DESTINATION",
            "BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE"
          ],
          "type": "string"
        },
        "requestAutocommit": {
          "description": "Whether the client requested the conversion workspace to be committed after a successful completion of the job.",
          "type": "boolean"
        },
        "completionState": {
          "type": "string",
          "enum": [
            "JOB_COMPLETION_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The status is not specified. This state will be used when job is not yet finished.",
            "Success.",
            "Error."
          ],
          "description": "Job completion state, i.e. the final state after the job completed."
        },
        "finishTime": {
          "type": "string",
          "description": "The timestamp when the background job was finished.",
          "format": "google-datetime"
        },
        "completionComment": {
          "description": "Job completion comment, such as how many entities were seeded, how many warnings were found during conversion and similar information.",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The timestamp when the background job was started.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The background job log entry id"
        }
      },
      "id": "BackgroundJobLogEntry",
      "description": "Execution log of a background job."
    },
    "StaticServiceIpConnectivity": {
      "id": "StaticServiceIpConnectivity",
      "properties": {},
      "type": "object",
      "description": "Static IP address connectivity configured on service project."
    },
    "GenerateSshScriptRequest": {
      "type": "object",
      "properties": {
        "vmCreationConfig": {
          "$ref": "VmCreationConfig",
          "description": "The VM creation configuration"
        },
        "vmPort": {
          "format": "int32",
          "description": "The port that will be open on the bastion host",
          "type": "integer"
        },
        "vmSelectionConfig": {
          "$ref": "VmSelectionConfig",
          "description": "The VM selection configuration"
        },
        "vm": {
          "description": "Required. Bastion VM Instance name to use or to create.",
          "type": "string"
        }
      },
      "description": "Request message for 'GenerateSshScript' request.",
      "id": "GenerateSshScriptRequest"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      }
    },
    "ColumnEntity": {
      "type": "object",
      "properties": {
        "udt": {
          "description": "Is the column a UDT",
          "type": "boolean"
        },
        "ordinalPosition": {
          "description": "Column order in the table",
          "format": "int32",
          "type": "integer"
        },
        "nullable": {
          "description": "Is the column nullable",
          "type": "boolean"
        },
        "array": {
          "type": "boolean",
          "description": "Is the column of array type"
        },
        "collation": {
          "description": "Collation override - instead of table level collation",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Column name"
        },
        "setValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the list of values allowed in the column. List is empty if set values is not required"
        },
        "dataType": {
          "type": "string",
          "description": "Column data type"
        },
        "autoGenerated": {
          "description": "Is the column auto-generated/identity",
          "type": "boolean"
        },
        "comment": {
          "type": "string",
          "description": "Comment associated with the column"
        },
        "precision": {
          "format": "int32",
          "description": "Column precision - when relevant",
          "type": "integer"
        },
        "scale": {
          "type": "integer",
          "format": "int32",
          "description": "Column scale - when relevant"
        },
        "defaultValue": {
          "description": "Default value of the column",
          "type": "string"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features"
        },
        "arrayLength": {
          "format": "int32",
          "type": "integer",
          "description": "If the column is array, of which length"
        },
        "fractionalSecondsPrecision": {
          "format": "int32",
          "type": "integer",
          "description": "Column fractional second precision - used for timestamp based datatypes"
        },
        "length": {
          "type": "string",
          "format": "int64",
          "description": "Column length - e.g. varchar (50)"
        },
        "charset": {
          "description": "Charset override - instead of table level charset",
          "type": "string"
        }
      },
      "id": "ColumnEntity",
      "description": "Column is not used as an independent entity, it is retrieved as part of a Table entity."
    },
    "ConnectionProfile": {
      "properties": {
        "provider": {
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ],
          "description": "The database provider.",
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ],
          "type": "string"
        },
        "displayName": {
          "description": "The connection profile display name.",
          "type": "string"
        },
        "oracle": {
          "description": "An Oracle database connection profile.",
          "$ref": "OracleConnectionProfile"
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. The error details in case of state FAILED."
        },
        "mysql": {
          "$ref": "MySqlConnectionProfile",
          "description": "A MySQL database connection profile."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "DELETED",
            "FAILED"
          ],
          "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED).",
          "enumDescriptions": [
            "The state of the connection profile is unknown.",
            "The connection profile is in draft mode and fully editable.",
            "The connection profile is being created.",
            "The connection profile is ready.",
            "The connection profile is being updated.",
            "The connection profile is being deleted.",
            "The connection profile has been deleted.",
            "The last action on the connection profile failed."
          ]
        },
        "postgresql": {
          "$ref": "PostgreSqlConnectionProfile",
          "description": "A PostgreSQL database connection profile."
        },
        "name": {
          "type": "string",
          "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}."
        },
        "cloudsql": {
          "$ref": "CloudSqlConnectionProfile",
          "description": "A CloudSQL database connection profile."
        },
        "alloydb": {
          "$ref": "AlloyDbConnectionProfile",
          "description": "An AlloyDB cluster connection profile."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`."
        }
      },
      "id": "ConnectionProfile",
      "type": "object",
      "description": "A connection profile definition."
    },
    "DatabaseEngineInfo": {
      "id": "DatabaseEngineInfo",
      "type": "object",
      "properties": {
        "engine": {
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle"
          ],
          "description": "Required. Engine Type.",
          "type": "string",
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ]
        },
        "version": {
          "description": "Required. Engine named version, for e.g. 12.c.1",
          "type": "string"
        }
      },
      "description": "The type and version of a source or destination DB."
    },
    "EntityMappingLogEntry": {
      "description": "A single record of a rule which was used for a mapping.",
      "properties": {
        "ruleRevisionId": {
          "type": "string",
          "description": "Rule revision id"
        },
        "ruleId": {
          "description": "Which rule caused it.",
          "type": "string"
        },
        "mappingComment": {
          "description": "Comment.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "EntityMappingLogEntry"
    },
    "Expr": {
      "id": "Expr",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "ReverseSshConnectivity": {
      "properties": {
        "vmPort": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
        },
        "vmIp": {
          "type": "string",
          "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
        },
        "vm": {
          "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        },
        "vpc": {
          "type": "string",
          "description": "The name of the VPC to peer with the Cloud SQL private network."
        }
      },
      "id": "ReverseSshConnectivity",
      "type": "object",
      "description": "The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC."
    },
    "TriggerEntity": {
      "description": "Trigger is not used as an independent entity, it is retrieved as part of a Table entity.",
      "properties": {
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "triggerType": {
          "description": "Indicates when the trigger fires, e.g. BEFORE STATEMENT, AFTER EACH ROW",
          "type": "string"
        },
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the trigger"
        },
        "triggeringEvents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The DML, DDL, or database events that fires the trigger, e.g. INSERT, UPDATE"
        },
        "name": {
          "description": "The name of the trigger",
          "type": "string"
        }
      },
      "type": "object",
      "id": "TriggerEntity"
    },
    "VpcPeeringConnectivity": {
      "description": "The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.",
      "id": "VpcPeeringConnectivity",
      "properties": {
        "vpc": {
          "description": "The name of the VPC network to peer with the Cloud SQL private network.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchBackgroundJobsResponse": {
      "description": "Response message for 'SearchBackgroundJobs' request.",
      "type": "object",
      "properties": {
        "jobs": {
          "type": "array",
          "items": {
            "$ref": "BackgroundJobLogEntry"
          },
          "description": "The list of conversion workspace mapping rules."
        }
      },
      "id": "SearchBackgroundJobsResponse"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
    },
    "TableEntity": {
      "type": "object",
      "properties": {
        "indices": {
          "description": "Table Indices.",
          "type": "array",
          "items": {
            "$ref": "IndexEntity"
          }
        },
        "constraints": {
          "items": {
            "$ref": "ConstraintEntity"
          },
          "description": "Table Constraints.",
          "type": "array"
        },
        "columns": {
          "type": "array",
          "description": "Table Columns.",
          "items": {
            "$ref": "ColumnEntity"
          }
        },
        "triggers": {
          "description": "Table triggers.",
          "type": "array",
          "items": {
            "$ref": "TriggerEntity"
          }
        },
        "customFeatures": {
          "description": "Custom engine specific features",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "comment": {
          "description": "Comment associated with the table",
          "type": "string"
        }
      },
      "id": "TableEntity",
      "description": "Table's parent is a schema."
    },
    "DatabaseType": {
      "type": "object",
      "properties": {
        "engine": {
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle"
          ],
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ],
          "type": "string",
          "description": "The database engine."
        },
        "provider": {
          "type": "string",
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ],
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ],
          "description": "The database provider."
        }
      },
      "id": "DatabaseType",
      "description": "A message defining the database engine and provider."
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object"
    },
    "CommitConversionWorkspaceRequest": {
      "id": "CommitConversionWorkspaceRequest",
      "type": "object",
      "properties": {
        "commitName": {
          "type": "string",
          "description": "Optional. Optional name of the commit."
        }
      },
      "description": "Request message for 'CommitConversionWorkspace' request."
    },
    "SeedJobDetails": {
      "description": "Details regarding a Seed background job",
      "properties": {
        "connectionProfile": {
          "type": "string",
          "description": "The connection profile which was used for the seed job"
        }
      },
      "id": "SeedJobDetails",
      "type": "object"
    },
    "ListConnectionProfilesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array",
          "description": "The response list of connection profiles."
        }
      },
      "description": "Response message for 'ListConnectionProfiles' request.",
      "id": "ListConnectionProfilesResponse",
      "type": "object"
    },
    "ListConversionWorkspacesResponse": {
      "type": "object",
      "id": "ListConversionWorkspacesResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "conversionWorkspaces": {
          "type": "array",
          "description": "The list of conversion workspace objects.",
          "items": {
            "$ref": "ConversionWorkspace"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for 'ListConversionWorkspaces' request."
    },
    "StopMigrationJobRequest": {
      "id": "StopMigrationJobRequest",
      "description": "Request message for 'StopMigrationJob' request.",
      "properties": {},
      "type": "object"
    },
    "RulesFile": {
      "description": "Details of a single rules file",
      "type": "object",
      "id": "RulesFile",
      "properties": {
        "rulesSourceFilename": {
          "type": "string",
          "description": "The filename of the rules that needs to be converted. This is used mainly so future logs of the import rules job will contain this detail and can therefore be searched by it later"
        },
        "rulesContent": {
          "type": "string",
          "description": "The text content of the rules that needs to be converted"
        }
      }
    },
    "SslConfig": {
      "type": "object",
      "description": "SSL configuration information.",
      "id": "SslConfig",
      "properties": {
        "clientCertificate": {
          "type": "string",
          "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
        },
        "clientKey": {
          "type": "string",
          "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
        },
        "caCertificate": {
          "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.",
          "type": "string"
        },
        "type": {
          "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "SERVER_ONLY",
            "SERVER_CLIENT"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Only 'ca_certificate' specified.",
            "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
          ]
        }
      }
    },
    "SchemaEntity": {
      "type": "object",
      "id": "SchemaEntity",
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "description": "Schema typically has no parent entity, but can have a parent entity DatabaseInstance (for database engines which supports it). For some database engines the term schema and user can be used interchangeably when they refer to a namespace or a collection of other database entities. Can store additional information which is schema specific."
    },
    "ResumeMigrationJobRequest": {
      "type": "object",
      "description": "Request message for 'ResumeMigrationJob' request.",
      "properties": {},
      "id": "ResumeMigrationJobRequest"
    },
    "ApplyConversionWorkspaceRequest": {
      "properties": {
        "connectionProfile": {
          "type": "string",
          "description": "Fully qualified (Uri) name of the destination connection profile."
        },
        "filter": {
          "type": "string",
          "description": "Filter which entities to apply. Leaving this field empty will apply all of the entities. Supports Google AIP 160 based filtering."
        }
      },
      "description": "Request message for 'ApplyConversionWorkspace' request.",
      "type": "object",
      "id": "ApplyConversionWorkspaceRequest"
    },
    "SynonymEntity": {
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "sourceEntity": {
          "type": "string",
          "description": "The name of the entity for which the synonym is being created (the source)"
        },
        "sourceType": {
          "enumDescriptions": [
            "Unspecified database entity type",
            "Schema",
            "Table",
            "Column",
            "Constraint",
            "Index",
            "Trigger",
            "View",
            "Sequence",
            "Stored Procedure",
            "Function",
            "Synonym",
            "Package",
            "UDT"
          ],
          "type": "string",
          "description": "The type of the entity for which the synonym is being created (usually a table or a sequence)",
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT"
          ]
        }
      },
      "description": "Synonym's parent is a schema.",
      "type": "object",
      "id": "SynonymEntity"
    },
    "SequenceEntity": {
      "properties": {
        "cache": {
          "description": "Indicates number of entries to cache / precreate",
          "type": "string",
          "format": "int64"
        },
        "startValue": {
          "format": "byte",
          "type": "string",
          "description": "Start number for the sequence represented as bytes to accommodate large numbers"
        },
        "cycle": {
          "type": "boolean",
          "description": "Indicates whether the sequence value should cycle through"
        },
        "minValue": {
          "description": "Minimum number for the sequence represented as bytes to accommodate large numbers",
          "type": "string",
          "format": "byte"
        },
        "increment": {
          "type": "string",
          "format": "int64",
          "description": "Increment value for the sequence"
        },
        "maxValue": {
          "type": "string",
          "description": "Maximum number for the sequence represented as bytes to accommodate large numbers",
          "format": "byte"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features"
        }
      },
      "id": "SequenceEntity",
      "type": "object",
      "description": "Sequence's parent is a schema."
    },
    "GoogleCloudClouddmsV1OperationMetadata": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "id": "GoogleCloudClouddmsV1OperationMetadata"
    },
    "ImportRulesJobDetails": {
      "properties": {
        "files": {
          "description": "File names used for the import rules job",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fileFormat": {
          "description": "The requested file format",
          "enumDescriptions": [
            "Unspecified Rules Format",
            "Harbour Bridge Session file",
            "ORA2PG config file"
          ],
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ],
          "type": "string"
        }
      },
      "description": "Details regarding an Import Rules background job",
      "id": "ImportRulesJobDetails",
      "type": "object"
    },
    "DescribeDatabaseEntitiesResponse": {
      "id": "DescribeDatabaseEntitiesResponse",
      "description": "Response message for 'DescribeDatabaseEntities' request.",
      "properties": {
        "databaseEntities": {
          "type": "array",
          "description": "The list of database entities for the conversion workspace.",
          "items": {
            "$ref": "DatabaseEntity"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse"
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "AlloyDbSettings": {
      "type": "object",
      "id": "AlloyDbSettings",
      "properties": {
        "primaryInstanceSettings": {
          "$ref": "PrimaryInstanceSettings"
        },
        "initialUser": {
          "description": "Required. Input only. Initial user to setup during cluster creation. Required.",
          "$ref": "UserPassword"
        },
        "vpcNetwork": {
          "type": "string",
          "description": "Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \"projects/{project_number}/global/networks/{network_id}\". This is required to create a cluster."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs.",
          "type": "object"
        }
      },
      "description": "Settings for creating an AlloyDB cluster."
    },
    "VpcPeeringConfig": {
      "id": "VpcPeeringConfig",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29)"
        },
        "vpcName": {
          "type": "string",
          "description": "Required. Fully qualified name of the VPC DMS will peer to."
        }
      },
      "type": "object",
      "description": "The VPC Peering configuration is used to create VPC peering with the consumer's VPC."
    },
    "StartMigrationJobRequest": {
      "type": "object",
      "properties": {},
      "id": "StartMigrationJobRequest",
      "description": "Request message for 'StartMigrationJob' request."
    },
    "DumpFlag": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the flag"
        },
        "value": {
          "description": "The value of the flag.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Dump flag definition.",
      "id": "DumpFlag"
    },
    "VmCreationConfig": {
      "properties": {
        "subnet": {
          "type": "string",
          "description": "The subnet name the vm needs to be created in."
        },
        "vmMachineType": {
          "description": "Required. VM instance machine type to create.",
          "type": "string"
        },
        "vmZone": {
          "description": "The Google Cloud Platform zone to create the VM in.",
          "type": "string"
        }
      },
      "id": "VmCreationConfig",
      "type": "object",
      "description": "VM creation configuration message"
    },
    "MachineConfig": {
      "description": "MachineConfig describes the configuration of a machine.",
      "type": "object",
      "id": "MachineConfig",
      "properties": {
        "cpuCount": {
          "description": "The number of CPU's in the VM instance.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PrivateConnectivity": {
      "id": "PrivateConnectivity",
      "type": "object",
      "properties": {
        "privateConnection": {
          "description": "Required. The resource name (URI) of the private connection.",
          "type": "string"
        }
      },
      "description": "Private Connectivity."
    },
    "ListMigrationJobsResponse": {
      "description": "Response message for 'ListMigrationJobs' request.",
      "id": "ListMigrationJobsResponse",
      "type": "object",
      "properties": {
        "migrationJobs": {
          "type": "array",
          "items": {
            "$ref": "MigrationJob"
          },
          "description": "The list of migration jobs objects."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "StaticIpConnectivity": {
      "id": "StaticIpConnectivity",
      "description": "The source database will allow incoming connections from the destination database's public IP. You can retrieve the Cloud SQL instance's public IP from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.",
      "properties": {},
      "type": "object"
    },
    "MySqlConnectionProfile": {
      "id": "MySqlConnectionProfile",
      "description": "Specifies connection parameters required specifically for MySQL databases.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        },
        "port": {
          "type": "integer",
          "description": "Required. The network port of the source MySQL database.",
          "format": "int32"
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "passwordSet": {
          "readOnly": true,
          "description": "Output only. Indicates If this connection profile password is stored.",
          "type": "boolean"
        },
        "ssl": {
          "description": "SSL configuration for the destination to connect to the source database.",
          "$ref": "SslConfig"
        },
        "host": {
          "type": "string",
          "description": "Required. The IP or hostname of the source MySQL database."
        }
      },
      "type": "object"
    },
    "PackageEntity": {
      "id": "PackageEntity",
      "type": "object",
      "properties": {
        "packageSqlCode": {
          "type": "string",
          "description": "The SQL code which creates the package"
        },
        "packageBody": {
          "description": "The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory.",
          "type": "string"
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom engine specific features"
        }
      },
      "description": "Package's parent is a schema."
    },
    "ConversionWorkspaceInfo": {
      "description": "A conversion workspace's version.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name (URI) of the conversion workspace.",
          "type": "string"
        },
        "commitId": {
          "type": "string",
          "description": "The commit ID of the conversion workspace."
        }
      },
      "id": "ConversionWorkspaceInfo"
    },
    "ViewEntity": {
      "properties": {
        "sqlCode": {
          "description": "The SQL code which creates the view.",
          "type": "string"
        },
        "constraints": {
          "description": "View Constraints.",
          "items": {
            "$ref": "ConstraintEntity"
          },
          "type": "array"
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom engine specific features"
        }
      },
      "id": "ViewEntity",
      "type": "object",
      "description": "View's parent is a schema."
    },
    "PromoteMigrationJobRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for 'PromoteMigrationJob' request.",
      "id": "PromoteMigrationJobRequest"
    },
    "SqlAclEntry": {
      "id": "SqlAclEntry",
      "properties": {
        "ttl": {
          "type": "string",
          "description": "Input only. The time-to-leave of this access control entry.",
          "format": "google-duration"
        },
        "value": {
          "description": "The allowlisted value for the access control list.",
          "type": "string"
        },
        "label": {
          "description": "A label to identify this entry.",
          "type": "string"
        },
        "expireTime": {
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "An entry for an Access Control list."
    },
    "OracleConnectionProfile": {
      "id": "OracleConnectionProfile",
      "description": "Specifies connection parameters required specifically for Oracle databases.",
      "properties": {
        "port": {
          "description": "Required. The network port of the source Oracle database.",
          "type": "integer",
          "format": "int32"
        },
        "databaseService": {
          "description": "Required. Database service for the Oracle connection.",
          "type": "string"
        },
        "privateConnectivity": {
          "$ref": "PrivateConnectivity",
          "description": "Private connectivity."
        },
        "staticServiceIpConnectivity": {
          "description": "Static Service IP connectivity.",
          "$ref": "StaticServiceIpConnectivity"
        },
        "username": {
          "type": "string",
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
        },
        "passwordSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether a new password is included in the request."
        },
        "host": {
          "type": "string",
          "description": "Required. The IP or hostname of the source Oracle database."
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        }
      },
      "type": "object"
    },
    "ListPrivateConnectionsResponse": {
      "id": "ListPrivateConnectionsResponse",
      "properties": {
        "privateConnections": {
          "description": "List of private connections.",
          "type": "array",
          "items": {
            "$ref": "PrivateConnection"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "description": "Response message for 'ListPrivateConnections' request."
    },
    "PrivateServiceConnectConnectivity": {
      "id": "PrivateServiceConnectConnectivity",
      "description": "Private Service Connect connectivity (https://cloud.google.com/vpc/docs/private-service-connect#benefits-services)",
      "type": "object",
      "properties": {
        "serviceAttachment": {
          "description": "Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}",
          "type": "string"
        }
      }
    },
    "SetIamPolicyRequest": {
      "properties": {
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask",
          "type": "string"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object"
    },
    "RollbackConversionWorkspaceRequest": {
      "description": "Request message for 'RollbackConversionWorkspace' request.",
      "properties": {},
      "type": "object",
      "id": "RollbackConversionWorkspaceRequest"
    },
    "ConversionWorkspace": {
      "properties": {
        "globalSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true",
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the workspace resource was last updated."
        },
        "source": {
          "$ref": "DatabaseEngineInfo",
          "description": "Required. The source engine details."
        },
        "latestCommitTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the workspace was committed.",
          "format": "google-datetime"
        },
        "destination": {
          "$ref": "DatabaseEngineInfo",
          "description": "Required. The destination engine details."
        },
        "name": {
          "type": "string",
          "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
        },
        "hasUncommittedChanges": {
          "type": "boolean",
          "description": "Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed)",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the workspace resource was created.",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "The display name for the workspace",
          "type": "string"
        },
        "latestCommitId": {
          "description": "Output only. The latest commit id",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "The main conversion workspace resource entity.",
      "type": "object",
      "id": "ConversionWorkspace"
    },
    "DatabaseEntity": {
      "id": "DatabaseEntity",
      "description": "The base entity type for all the database related entities The message contains the entity name, the name of its parent, its type and the specific details per its type",
      "type": "object",
      "properties": {
        "synonym": {
          "$ref": "SynonymEntity",
          "description": "Synonym"
        },
        "view": {
          "$ref": "ViewEntity",
          "description": "View"
        },
        "storedProcedure": {
          "description": "Stored Procedure",
          "$ref": "StoredProcedureEntity"
        },
        "sequence": {
          "$ref": "SequenceEntity",
          "description": "Sequence"
        },
        "mappings": {
          "description": "Details about entity mappings. For source tree entities, this holds the draft entities which were generated by the mapping rules. For draft tree entities, this holds the source entities which were converted to form the draft entity. Destination entities will have no mapping details.",
          "type": "array",
          "items": {
            "$ref": "EntityMapping"
          }
        },
        "databasePackage": {
          "$ref": "PackageEntity",
          "description": "Package"
        },
        "table": {
          "description": "Table.",
          "$ref": "TableEntity"
        },
        "tree": {
          "enumDescriptions": [
            "Tree Type Unspecified.",
            "Tree of entities loaded from a source database.",
            "Tree of entities converted from the source tree using the mapping rules.",
            "Tree of entities observed on the destination database."
          ],
          "enum": [
            "TREE_TYPE_UNSPECIFIED",
            "SOURCE",
            "DRAFT",
            "DESTINATION"
          ],
          "type": "string",
          "description": "The type of tree the entity belongs to."
        },
        "schema": {
          "description": "Schema.",
          "$ref": "SchemaEntity"
        },
        "shortName": {
          "description": "The short name (e.g. table name) of the entity.",
          "type": "string"
        },
        "entityType": {
          "description": "The type of the database entity (table, view, index, ...).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type",
            "Schema",
            "Table",
            "Column",
            "Constraint",
            "Index",
            "Trigger",
            "View",
            "Sequence",
            "Stored Procedure",
            "Function",
            "Synonym",
            "Package",
            "UDT"
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT"
          ]
        },
        "databaseFunction": {
          "$ref": "FunctionEntity",
          "description": "Function"
        },
        "parentEntity": {
          "description": "The full name of the parent entity (e.g. schema name).",
          "type": "string"
        }
      }
    },
    "Policy": {
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy."
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "Policy"
    },
    "CloudSqlConnectionProfile": {
      "description": "Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.",
      "id": "CloudSqlConnectionProfile",
      "properties": {
        "privateIp": {
          "type": "string",
          "description": "Output only. The Cloud SQL database instance's private IP.",
          "readOnly": true
        },
        "cloudSqlId": {
          "readOnly": true,
          "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with.",
          "type": "string"
        },
        "publicIp": {
          "description": "Output only. The Cloud SQL database instance's public IP.",
          "type": "string",
          "readOnly": true
        },
        "settings": {
          "$ref": "CloudSqlSettings",
          "description": "Immutable. Metadata used to create the destination Cloud SQL database."
        },
        "additionalPublicIp": {
          "readOnly": true,
          "description": "Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SqlIpConfig": {
      "type": "object",
      "description": "IP Management configuration.",
      "properties": {
        "privateNetwork": {
          "type": "string",
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."
        },
        "enableIpv4": {
          "type": "boolean",
          "description": "Whether the instance should be assigned an IPv4 address or not."
        },
        "requireSsl": {
          "type": "boolean",
          "description": "Whether SSL connections over IP should be enforced or not."
        },
        "authorizedNetworks": {
          "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).",
          "items": {
            "$ref": "SqlAclEntry"
          },
          "type": "array"
        }
      },
      "id": "SqlIpConfig"
    },
    "MigrationJobVerificationError": {
      "description": "Error message of a verification Migration job.",
      "type": "object",
      "properties": {
        "errorMessage": {
          "readOnly": true,
          "description": "Output only. A formatted message with further details about the error and a CTA.",
          "type": "string"
        },
        "errorDetailMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A specific detailed error message, if supplied by the engine."
        },
        "errorCode": {
          "enumDescriptions": [
            "An unknown error occurred",
            "We failed to connect to one of the connection profile.",
            "We failed to authenticate to one of the connection profile.",
            "One of the involved connection profiles has an invalid configuration.",
            "The versions of the source and the destination are incompatible.",
            "The types of the source and the destination are incompatible.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions.",
            "Unsupported migration type.",
            "Invalid RDS logical replication.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "The table definition is not support due to missing primary key or replica identity.",
            "The definer is not supported.",
            "Migration is already running at the time of restart request.",
            "The source has tables with limited support. E.g. PostgreSQL tables without primary keys."
          ],
          "type": "string",
          "description": "Output only. An instance of ErrorCode specifying the error that occurred.",
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "AUTHENTICATION_FAILURE",
            "INVALID_CONNECTION_PROFILE_CONFIG",
            "VERSION_INCOMPATIBILITY",
            "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "UNSUPPORTED_MIGRATION_TYPE",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "UNSUPPORTED_GTID_MODE",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "CANT_RESTART_RUNNING_MIGRATION",
            "TABLES_WITH_LIMITED_SUPPORT"
          ],
          "readOnly": true
        }
      },
      "id": "MigrationJobVerificationError"
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object"
    },
    "ConstraintEntity": {
      "description": "Constraint is not used as an independent entity, it is retrieved as part of another entity such as Table or View.",
      "type": "object",
      "id": "ConstraintEntity",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the table constraint"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features"
        },
        "referenceTable": {
          "type": "string",
          "description": "Reference table which may be associated with the constraint. eg: if the constraint is a FOREIGN_KEY, this represents the list of full name of the referenced table by the foreign key."
        },
        "tableColumns": {
          "description": "Table columns used as part of the Constraint for e.g. primary key constraint should list the columns which constitutes the key",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referenceColumns": {
          "description": "Reference Columns which may be associated with the constraint. eg: if the constraint is a FOREIGN_KEY, this represents the list of full names of referenced columns by the foreign key.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "description": "Type of constraint - e.g. unique, primary key, foreign key (currently only primary key is supported)"
        },
        "tableName": {
          "type": "string",
          "description": "Table which is associated with the constraint. In case the constraint is defined on a table, this field is left empty as this information is stored in parent_name. However, if constraint is defined on a view, this field stores the table name on which the view is defined."
        }
      }
    },
    "EntityMapping": {
      "description": "Details of the mappings of a database entity.",
      "properties": {
        "mappingLog": {
          "items": {
            "$ref": "EntityMappingLogEntry"
          },
          "type": "array",
          "description": "Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity such as, a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along the with the reason preventing them to do so."
        },
        "sourceEntity": {
          "type": "string",
          "description": "Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column"
        },
        "draftEntity": {
          "type": "string",
          "description": "Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column"
        }
      },
      "id": "EntityMapping",
      "type": "object"
    },
    "IndexEntity": {
      "description": "Index is not used as an independent entity, it is retrieved as part of a Table entity.",
      "properties": {
        "tableColumns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Table columns used as part of the Index for e.g. B-TREE index should list the columns which constitutes the index."
        },
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "unique": {
          "type": "boolean",
          "description": "boolean value indicating whether the index is unique"
        },
        "name": {
          "description": "The name of the index",
          "type": "string"
        },
        "type": {
          "description": "Type of index - e.g. B-TREE",
          "type": "string"
        }
      },
      "type": "object",
      "id": "IndexEntity"
    },
    "PrimaryInstanceSettings": {
      "description": "Settings for the cluster's primary instance",
      "id": "PrimaryInstanceSettings",
      "properties": {
        "privateIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application."
        },
        "id": {
          "type": "string",
          "description": "Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \"[a-z0-9-]+\"."
        },
        "machineConfig": {
          "description": "Configuration for the machines that host the underlying database engine.",
          "$ref": "MachineConfig"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs."
        },
        "databaseFlags": {
          "description": "Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "DumpFlags": {
      "id": "DumpFlags",
      "properties": {
        "dumpFlags": {
          "type": "array",
          "description": "The flags for the initial dump.",
          "items": {
            "$ref": "DumpFlag"
          }
        }
      },
      "description": "Dump flags definition.",
      "type": "object"
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FunctionEntity": {
      "properties": {
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the function"
        },
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "id": "FunctionEntity",
      "description": "Function's parent is a schema."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      }
    },
    "CloudSqlSettings": {
      "type": "object",
      "description": "Settings for creating a Cloud SQL database instance.",
      "id": "CloudSqlSettings",
      "properties": {
        "dataDiskSizeGb": {
          "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.",
          "format": "int64",
          "type": "string"
        },
        "zone": {
          "description": "The Google Cloud Platform zone where your Cloud SQL database instance is located.",
          "type": "string"
        },
        "cmekKeyName": {
          "type": "string",
          "description": "The KMS key name used for the csql instance."
        },
        "collation": {
          "description": "The Cloud SQL default instance level collation.",
          "type": "string"
        },
        "secondaryZone": {
          "type": "string",
          "description": "Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available)."
        },
        "autoStorageIncrease": {
          "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.",
          "type": "boolean"
        },
        "rootPasswordSet": {
          "description": "Output only. Indicates If this connection profile root password is stored.",
          "type": "boolean",
          "readOnly": true
        },
        "ipConfig": {
          "$ref": "SqlIpConfig",
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled."
        },
        "sourceId": {
          "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`",
          "type": "string"
        },
        "databaseVersion": {
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "POSTGRES_10",
            "MYSQL_8_0",
            "POSTGRES_12",
            "POSTGRES_13",
            "POSTGRES_14"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified version.",
            "MySQL 5.6.",
            "MySQL 5.7.",
            "PostgreSQL 9.6.",
            "PostgreSQL 11.",
            "PostgreSQL 10.",
            "MySQL 8.0.",
            "PostgreSQL 12.",
            "PostgreSQL 13.",
            "PostgreSQL 14."
          ],
          "description": "The database engine type and version."
        },
        "userLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`.",
          "type": "object"
        },
        "storageAutoResizeLimit": {
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
          "type": "string",
          "format": "int64"
        },
        "availabilityType": {
          "type": "string",
          "description": "Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).",
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal availablility instance.",
            "Regional availability instance."
          ]
        },
        "rootPassword": {
          "description": "Input only. Initial root password.",
          "type": "string"
        },
        "databaseFlags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }."
        },
        "activationPolicy": {
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER"
          ],
          "type": "string",
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
          "enumDescriptions": [
            "unspecified policy.",
            "The instance is always up and running.",
            "The instance should never spin up."
          ]
        },
        "tier": {
          "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).",
          "type": "string"
        },
        "dataDiskType": {
          "type": "string",
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "SSD disk.",
            "HDD disk."
          ],
          "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`."
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object"
    },
    "VmSelectionConfig": {
      "id": "VmSelectionConfig",
      "type": "object",
      "properties": {
        "vmZone": {
          "description": "Required. The Google Cloud Platform zone the VM is located.",
          "type": "string"
        }
      },
      "description": "VM selection configuration message"
    },
    "MigrationJob": {
      "id": "MigrationJob",
      "properties": {
        "filter": {
          "type": "string",
          "description": "This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`."
        },
        "vpcPeeringConnectivity": {
          "description": "The details of the VPC network that the source database is located in.",
          "$ref": "VpcPeeringConnectivity"
        },
        "state": {
          "description": "The current migration job state.",
          "enum": [
            "STATE_UNSPECIFIED",
            "MAINTENANCE",
            "DRAFT",
            "CREATING",
            "NOT_STARTED",
            "RUNNING",
            "FAILED",
            "COMPLETED",
            "DELETING",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPDATING",
            "STARTING",
            "RESTARTING",
            "RESUMING"
          ],
          "enumDescriptions": [
            "The state of the migration job is unknown.",
            "The migration job is down for maintenance.",
            "The migration job is in draft mode and no resources are created.",
            "The migration job is being created.",
            "The migration job is created and not started.",
            "The migration job is running.",
            "The migration job failed.",
            "The migration job has been completed.",
            "The migration job is being deleted.",
            "The migration job is being stopped.",
            "The migration job is currently stopped.",
            "The migration job has been deleted.",
            "The migration job is being updated.",
            "The migration job is starting.",
            "The migration job is restarting.",
            "The migration job is resuming."
          ],
          "type": "string"
        },
        "reverseSshConnectivity": {
          "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity.",
          "$ref": "ReverseSshConnectivity"
        },
        "source": {
          "type": "string",
          "description": "Required. The resource name (URI) of the source connection profile."
        },
        "dumpPath": {
          "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the \"dump_flags\" field are mutually exclusive.",
          "type": "string"
        },
        "duration": {
          "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
          "readOnly": true,
          "type": "string",
          "format": "google-duration"
        },
        "conversionWorkspace": {
          "description": "The conversion workspace used by the migration.",
          "$ref": "ConversionWorkspaceInfo"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}."
        },
        "staticIpConnectivity": {
          "$ref": "StaticIpConnectivity",
          "description": "static ip connectivity data (default, no additional details needed)."
        },
        "destinationDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the destination."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. If the migration job is completed, the time when it was completed.",
          "format": "google-datetime"
        },
        "phase": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "PHASE_UNSPECIFIED",
            "FULL_DUMP",
            "CDC",
            "PROMOTE_IN_PROGRESS",
            "WAITING_FOR_SOURCE_WRITES_TO_STOP",
            "PREPARING_THE_DUMP"
          ],
          "description": "Output only. The current migration job phase.",
          "enumDescriptions": [
            "The phase of the migration job is unknown.",
            "The migration job is in the full dump phase.",
            "The migration job is CDC phase.",
            "The migration job is running the promote phase.",
            "Only RDS flow - waiting for source writes to stop",
            "Only RDS flow - the sources writes stopped, waiting for dump to begin"
          ]
        },
        "type": {
          "description": "Required. The migration job type.",
          "enumDescriptions": [
            "The type of the migration job is unknown.",
            "The migration job is a one time migration.",
            "The migration job is a continuous migration."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ONE_TIME",
            "CONTINUOUS"
          ]
        },
        "dumpFlags": {
          "$ref": "DumpFlags",
          "description": "The initial dump flags. This field and the \"dump_path\" field are mutually exclusive."
        },
        "sourceDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the source."
        },
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. The error details in case of state FAILED."
        },
        "displayName": {
          "description": "The migration job display name.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "destination": {
          "description": "Required. The resource name (URI) of the destination connection profile.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents a Database Migration Service migration job object."
    },
    "ImportMappingRulesRequest": {
      "id": "ImportMappingRulesRequest",
      "type": "object",
      "properties": {
        "autoCommit": {
          "description": "Should the conversion workspace be committed automatically after the import operation.",
          "type": "boolean"
        },
        "rulesFiles": {
          "items": {
            "$ref": "RulesFile"
          },
          "description": "One or more rules files",
          "type": "array"
        },
        "rulesFormat": {
          "enumDescriptions": [
            "Unspecified Rules Format",
            "Harbour Bridge Session file",
            "ORA2PG config file"
          ],
          "description": "The format of the rules content file.",
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ],
          "type": "string"
        }
      },
      "description": "Request message for 'ImportMappingRules' request."
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        }
      }
    },
    "StoredProcedureEntity": {
      "type": "object",
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "sqlCode": {
          "description": "The SQL code which creates the stored procedure",
          "type": "string"
        }
      },
      "description": "Stored procedure's parent is a schema.",
      "id": "StoredProcedureEntity"
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "DescribeConversionWorkspaceRevisionsResponse": {
      "properties": {
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "ConversionWorkspace"
          },
          "description": "The list of conversion workspace revisions."
        }
      },
      "type": "object",
      "id": "DescribeConversionWorkspaceRevisionsResponse",
      "description": "Response message for 'DescribeConversionWorkspaceRevisions' request."
    },
    "AlloyDbConnectionProfile": {
      "id": "AlloyDbConnectionProfile",
      "type": "object",
      "description": "Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.",
      "properties": {
        "settings": {
          "$ref": "AlloyDbSettings",
          "description": "Immutable. Metadata used to create the destination AlloyDB cluster."
        },
        "clusterId": {
          "type": "string",
          "description": "Required. The AlloyDB cluster ID that this connection profile is associated with."
        }
      }
    },
    "VerifyMigrationJobRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for 'VerifyMigrationJob' request.",
      "id": "VerifyMigrationJobRequest"
    },
    "PrivateConnection": {
      "description": "The PrivateConnection resource is used to establish private connectivity with the customer's network.",
      "properties": {
        "vpcPeeringConfig": {
          "$ref": "VpcPeeringConfig",
          "description": "VPC Peering Config."
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. The error details in case of state FAILED."
        },
        "name": {
          "type": "string",
          "description": "The resource's name."
        },
        "displayName": {
          "type": "string",
          "description": "The private connection display name."
        },
        "labels": {
          "description": "The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The create time of the resource.",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The state of the Private Connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE",
            "DELETED"
          ],
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state.",
            "The private connection has been deleted."
          ],
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The last update time of the resource.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "PrivateConnection"
    },
    "SshScript": {
      "id": "SshScript",
      "description": "Response message for 'GenerateSshScript' request.",
      "type": "object",
      "properties": {
        "script": {
          "description": "The ssh configuration script.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "SeedConversionWorkspaceRequest": {
      "description": "Request message for 'SeedConversionWorkspace' request.",
      "properties": {
        "autoCommit": {
          "description": "Should the conversion workspace be committed automatically after the seed operation.",
          "type": "boolean"
        },
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Fully qualified (Uri) name of the destination connection profile."
        },
        "sourceConnectionProfile": {
          "description": "Fully qualified (Uri) name of the source connection profile.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SeedConversionWorkspaceRequest"
    },
    "UserPassword": {
      "id": "UserPassword",
      "properties": {
        "user": {
          "description": "The database username.",
          "type": "string"
        },
        "passwordSet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates if the initial_user.password field has been set."
        },
        "password": {
          "type": "string",
          "description": "The initial password for the user."
        }
      },
      "type": "object",
      "description": "The username/password for a database user. Used for specifying initial users at cluster creation time."
    }
  },
  "description": "Manage Cloud Database Migration Service resources on Google Cloud Platform.",
  "ownerName": "Google",
  "mtlsRootUrl": "https://datamigration.mtls.googleapis.com/",
  "parameters": {
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    }
  },
  "name": "datamigration",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "title": "Database Migration API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "id": "datamigration:v1",
  "kind": "discovery#restDescription",
  "baseUrl": "https://datamigration.googleapis.com/",
  "version_module": true,
  "servicePath": "",
  "revision": "20230118",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version": "v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "datamigration.projects.locations.list",
              "path": "v1/{+name}/locations",
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Gets information about a location.",
              "path": "v1/{+name}",
              "id": "datamigration.projects.locations.get",
              "response": {
                "$ref": "Location"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "conversionWorkspaces": {
              "methods": {
                "describeDatabaseEntities": {
                  "path": "v1/{+conversionWorkspace}:describeDatabaseEntities",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeDatabaseEntities",
                  "description": "Use this method to describe the database entities tree for a specific conversion workspace and a specific tree type. The DB Entities are not a resource like conversion workspace or mapping rule, and they can not be created, updated or deleted like one. Instead they are simple data objects describing the structure of the client database.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "DescribeDatabaseEntitiesResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of entities to return. The service may return fewer than this value.",
                      "format": "int32"
                    },
                    "tree": {
                      "enum": [
                        "DB_TREE_TYPE_UNSPECIFIED",
                        "SOURCE_TREE",
                        "DRAFT_TREE",
                        "DESTINATION_TREE"
                      ],
                      "location": "query",
                      "type": "string",
                      "description": "The tree to fetch.",
                      "enumDescriptions": [
                        "Unspecified tree type",
                        "The source database tree",
                        "The draft database tree",
                        "The destination database tree"
                      ]
                    },
                    "uncommitted": {
                      "description": "Whether to retrieve the latest committed version of the entities or the latest version. This field is ignored if a specific commit_id is specified.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "conversionWorkspace": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the conversion workspace resource whose DB entities are described in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The nextPageToken value received in the previous call to conversionWorkspace.describeDatabaseEntities, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspace.describeDatabaseEntities must match the call that provided the page token.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filter the returned entities based on AIP-160 standard.",
                      "location": "query",
                      "type": "string"
                    },
                    "commitId": {
                      "type": "string",
                      "description": "Request a specific commit id. If not specified, the entities from the latest commit are returned.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeDatabaseEntities"
                },
                "get": {
                  "response": {
                    "$ref": "ConversionWorkspace"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "id": "datamigration.projects.locations.conversionWorkspaces.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the conversion workspace resource to get."
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets details of a single conversion workspace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "commit": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Marks all the data in the conversion workspace as committed.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to commit.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.commit",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:commit",
                  "request": {
                    "$ref": "CommitConversionWorkspaceRequest"
                  },
                  "path": "v1/{+name}:commit",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "convert": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:convert",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ConvertConversionWorkspaceRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:convert",
                  "id": "datamigration.projects.locations.conversionWorkspaces.convert",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Name of the conversion workspace resource to convert in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Creates a draft tree schema for the destination database."
                },
                "patch": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "location": "path"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the conversion workspace resource by the update.",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "request": {
                    "$ref": "ConversionWorkspace"
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a single conversion workspace."
                },
                "searchBackgroundJobs": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.searchBackgroundJobs",
                  "response": {
                    "$ref": "SearchBackgroundJobsResponse"
                  },
                  "parameters": {
                    "maxSize": {
                      "description": "Optional. The maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 100 jobs will be returned. The maximum value is 100; values above 100 will be coerced to 100.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "returnMostRecentPerJobType": {
                      "type": "boolean",
                      "description": "Optional. Whether or not to return just the most recent job per job type",
                      "location": "query"
                    },
                    "conversionWorkspace": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the conversion workspace resource whos jobs are listed. in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "type": "string",
                      "required": true
                    },
                    "completedUntilTime": {
                      "location": "query",
                      "description": "Optional. If supplied, will only return jobs that completed until (not including) the given timestamp.",
                      "type": "string",
                      "format": "google-datetime"
                    }
                  },
                  "description": "Use this method to search/list the background jobs for a specific conversion workspace. The background jobs are not a resource like conversion workspace or mapping rule, and they can not be created, updated or deleted like one. Instead they are a way to expose the data plane jobs log.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:searchBackgroundJobs",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+conversionWorkspace}:searchBackgroundJobs"
                },
                "rollback": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "description": "Required. Name of the conversion workspace resource to rollback to.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.rollback",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:rollback",
                  "request": {
                    "$ref": "RollbackConversionWorkspaceRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rollbacks a conversion workspace to the last committed spanshot.",
                  "path": "v1/{+name}:rollback"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path"
                    },
                    "requestId": {
                      "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.delete",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single conversion workspace."
                },
                "apply": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource to apply draft to destination for. in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Apply draft tree onto a specific destination database",
                  "id": "datamigration.projects.locations.conversionWorkspaces.apply",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:apply",
                  "request": {
                    "$ref": "ApplyConversionWorkspaceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+name}:apply",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent, which owns this collection of conversion workspaces.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "requestId": {
                      "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "conversionWorkspaceId": {
                      "description": "Required. The ID of the conversion workspace to create.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new conversion workspace in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "request": {
                    "$ref": "ConversionWorkspace"
                  }
                },
                "list": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.list",
                  "description": "Lists conversion workspaces in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListConversionWorkspacesResponse"
                  },
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The nextPageToken value received in the previous call to conversionWorkspaces.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspaces.list must match the call that provided the page token.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent, which owns this collection of conversion workspaces.",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of conversion workspaces to return. The service may return fewer than this value. If unspecified, at most 50 sets will be returned."
                    },
                    "filter": {
                      "description": "A filter expression that filters conversion workspaces listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list conversion workspaces created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **source.version = \"12.c.1\"** to select all conversion workspaces with source database version equal to 12.c.1",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "httpMethod": "GET"
                },
                "seed": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:seed",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.seed",
                  "path": "v1/{+name}:seed",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Imports a snapshot of the source database into the conversion workspace.",
                  "parameters": {
                    "name": {
                      "description": "Name of the conversion workspace resource to seed with new database structure. in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "SeedConversionWorkspaceRequest"
                  }
                },
                "describeConversionWorkspaceRevisions": {
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "parameters": {
                    "commitId": {
                      "description": "Optional. Optional filter to request a specific commit id",
                      "type": "string",
                      "location": "query"
                    },
                    "conversionWorkspace": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource whose revisions are listed. in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "DescribeConversionWorkspaceRevisionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeConversionWorkspaceRevisions",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeConversionWorkspaceRevisions",
                  "description": "Retrieves a list of committed revisions of a specific conversion workspace.",
                  "path": "v1/{+conversionWorkspace}:describeConversionWorkspaceRevisions"
                }
              },
              "resources": {
                "mappingRules": {
                  "methods": {
                    "import": {
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "description": "Required. Name of the conversion workspace resource to import the rules to in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/mappingRules:import",
                      "request": {
                        "$ref": "ImportMappingRulesRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Imports the mapping rules for a given conversion workspace. Supports various formats of external rules files.",
                      "httpMethod": "POST",
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.import",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules:import"
                    }
                  }
                }
              }
            },
            "privateConnections": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the private connection to get.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "datamigration.projects.locations.privateConnections.get",
                  "description": "Gets details of a single private connection.",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "skipValidation": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to true, will skip validations."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "required": true,
                      "type": "string"
                    },
                    "privateConnectionId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The private connection identifier."
                    }
                  },
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "id": "datamigration.projects.locations.privateConnections.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new private connection in a given project and location.",
                  "path": "v1/{+parent}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "Maximum number of private connections to return. If unspecified, at most 50 private connections that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token."
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Order by fields for the result."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of private connections.",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter expression that filters private connections listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list private connections created this year by specifying **createTime %gt; 2021-01-01T00:00:00.000000000Z**.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.privateConnections.list",
                  "path": "v1/{+parent}/privateConnections",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "description": "Retrieves a list of private connections in a given project and location."
                },
                "delete": {
                  "description": "Deletes a single Database Migration Service private connection.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the private connection to delete."
                    },
                    "requestId": {
                      "description": "Optional. A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.privateConnections.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE"
                }
              }
            },
            "migrationJobs": {
              "methods": {
                "stop": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.stop",
                  "request": {
                    "$ref": "StopMigrationJobRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop",
                  "path": "v1/{+name}:stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Stops a running migration job.",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string",
                      "description": "Name of the migration job resource to stop.",
                      "location": "path"
                    }
                  }
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy",
                  "id": "datamigration.projects.locations.migrationJobs.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "generateSshScript": {
                  "request": {
                    "$ref": "GenerateSshScriptRequest"
                  },
                  "response": {
                    "$ref": "SshScript"
                  },
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Generate a SSH configuration script to configure the reverse SSH connectivity.",
                  "id": "datamigration.projects.locations.migrationJobs.generateSshScript",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript",
                  "httpMethod": "POST",
                  "path": "v1/{+migrationJob}:generateSshScript",
                  "parameters": {
                    "migrationJob": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Name of the migration job resource to generate the SSH script."
                    }
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the migration job resource to get."
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "response": {
                    "$ref": "MigrationJob"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.get",
                  "description": "Gets details of a single migration job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "force": {
                      "description": "The destination CloudSQL connection profile is always deleted with the migration job. In case of force delete, the destination CloudSQL replica database is also deleted.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the migration job resource to delete.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "id": "datamigration.projects.locations.migrationJobs.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single migration job."
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "name": {
                      "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the migration job resource by the update.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a single migration job.",
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "parameters": {
                    "migrationJobId": {
                      "location": "query",
                      "description": "Required. The ID of the instance to create.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent, which owns this collection of migration jobs."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    }
                  },
                  "description": "Creates a new migration job in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.create",
                  "path": "v1/{+parent}/migrationJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST"
                },
                "restart": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Name of the migration job resource to restart.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.restart",
                  "path": "v1/{+name}:restart",
                  "description": "Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch.",
                  "request": {
                    "$ref": "RestartMigrationJobRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart"
                },
                "list": {
                  "response": {
                    "$ref": "ListMigrationJobsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of migration jobs to return. The service may return fewer than this value. If unspecified, at most 50 migration jobs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter expression that filters migration jobs listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list migration jobs created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **reverseSshConnectivity.vmIp = \"1.2.3.4\"** to select all migration jobs connecting through the specific SSH tunnel bastion.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent, which owns this collection of migrationJobs.",
                      "required": true,
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Sort the results based on the migration job name. Valid values are: \"name\", \"name asc\", and \"name desc\".",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The nextPageToken value received in the previous call to migrationJobs.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to migrationJobs.list must match the call that provided the page token."
                    }
                  },
                  "description": "Lists migration jobs in a given project and location.",
                  "path": "v1/{+parent}/migrationJobs",
                  "id": "datamigration.projects.locations.migrationJobs.list",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "resume": {
                  "id": "datamigration.projects.locations.migrationJobs.resume",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume",
                  "path": "v1/{+name}:resume",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ResumeMigrationJobRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase).",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to resume.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "promote": {
                  "id": "datamigration.projects.locations.migrationJobs.promote",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Name of the migration job resource to promote.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote",
                  "request": {
                    "$ref": "PromoteMigrationJobRequest"
                  },
                  "path": "v1/{+name}:promote",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database."
                },
                "verify": {
                  "path": "v1/{+name}:verify",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "VerifyMigrationJobRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.verify",
                  "description": "Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Name of the migration job resource to verify.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify",
                  "httpMethod": "POST"
                },
                "testIamPermissions": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions",
                  "id": "datamigration.projects.locations.migrationJobs.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "start": {
                  "description": "Start an already created migration job.",
                  "id": "datamigration.projects.locations.migrationJobs.start",
                  "httpMethod": "POST",
                  "path": "v1/{+name}:start",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Name of the migration job resource to start."
                    }
                  },
                  "request": {
                    "$ref": "StartMigrationJobRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "datamigration.projects.locations.operations.cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1/{+name}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true
                    }
                  }
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "datamigration.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1/{+name}/operations",
                  "id": "datamigration.projects.locations.operations.list",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "datamigration.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.connectionProfiles.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Retrieves a list of all connection profiles in a given project and location.",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/connectionProfiles",
                  "id": "datamigration.projects.locations.connectionProfiles.list",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "A comma-separated list of fields to order results according to."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of connection profiles to return. The service may return fewer than this value. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A page token, received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter expression that filters connection profiles listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list connection profiles created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z**. You can also filter nested fields. For example, you could specify **mySql.username = %lt;my_username%gt;** to list all connection profiles configured to connect with a specific username."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent, which owns this collection of connection profiles."
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Required. Name of the connection profile resource to get.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single connection profile.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "id": "datamigration.projects.locations.connectionProfiles.get"
                },
                "getIamPolicy": {
                  "id": "datamigration.projects.locations.connectionProfiles.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the connection profile resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "required": true
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "In case of force delete, the CloudSQL replica database is also deleted (only for CloudSQL connection profile)."
                    }
                  },
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs."
                },
                "testIamPermissions": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "datamigration.projects.locations.connectionProfiles.testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions",
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Update the configuration of a single connection profile.",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "id": "datamigration.projects.locations.connectionProfiles.patch",
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query"
                    },
                    "skipValidation": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Update the connection profile without validating it. The default is false. Only supported for Oracle connection profiles."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the connection profile resource by the update.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "create": {
                  "description": "Creates a new connection profile in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "parameters": {
                    "skipValidation": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles."
                    },
                    "connectionProfileId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The connection profile identifier."
                    },
                    "requestId": {
                      "description": "Optional. A unique id used to identify the request. If the server receives two requests with the same id, then the second request will be ignored. It is recommended to always set this value to a UUID. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent, which owns this collection of connection profiles."
                    }
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/connectionProfiles",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true
}

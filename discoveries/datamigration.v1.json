{
  "version_module": true,
  "ownerName": "Google",
  "baseUrl": "https://datamigration.googleapis.com/",
  "mtlsRootUrl": "https://datamigration.mtls.googleapis.com/",
  "name": "datamigration",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    }
  },
  "kind": "discovery#restDescription",
  "id": "datamigration:v1",
  "ownerDomain": "google.com",
  "revision": "20231011",
  "basePath": "",
  "discoveryVersion": "v1",
  "rootUrl": "https://datamigration.googleapis.com/",
  "description": "Manage Cloud Database Migration Service resources on Google Cloud Platform.",
  "title": "Database Migration API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/database-migration/",
  "schemas": {
    "EntityDdl": {
      "id": "EntityDdl",
      "properties": {
        "ddlType": {
          "type": "string",
          "description": "Type of DDL (Create, Alter)."
        },
        "entityType": {
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ],
          "description": "The entity type (if the DDL is for a sub entity).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ]
        },
        "issueId": {
          "type": "array",
          "description": "EntityIssues found for this ddl.",
          "items": {
            "type": "string"
          }
        },
        "entity": {
          "type": "string",
          "description": "The name of the database entity the ddl refers to."
        },
        "ddl": {
          "description": "The actual ddl code.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A single DDL statement for a specific entity"
    },
    "IntComparisonFilter": {
      "type": "object",
      "properties": {
        "valueComparison": {
          "enumDescriptions": [
            "Value comparison unspecified.",
            "Value is smaller than the Compare value.",
            "Value is smaller or equal than the Compare value.",
            "Value is larger than the Compare value.",
            "Value is larger or equal than the Compare value."
          ],
          "enum": [
            "VALUE_COMPARISON_UNSPECIFIED",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_THAN",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN"
          ],
          "type": "string",
          "description": "Required. Relation between source value and compare value"
        },
        "value": {
          "type": "string",
          "description": "Required. Integer compare value to be used",
          "format": "int64"
        }
      },
      "id": "IntComparisonFilter",
      "description": "Filter based on relation between source value and compare value of type integer in ConditionalColumnSetValue"
    },
    "ValueTransformation": {
      "id": "ValueTransformation",
      "type": "object",
      "description": "Description of data transformation during migration as part of the ConditionalColumnSetValue.",
      "properties": {
        "doubleComparison": {
          "$ref": "DoubleComparisonFilter",
          "description": "Optional. Filter on relation between source value and compare value of type double."
        },
        "assignMinValue": {
          "description": "Optional. Set to min_value - if integer or numeric, will use int.minvalue, etc",
          "$ref": "Empty"
        },
        "isNull": {
          "$ref": "Empty",
          "description": "Optional. Value is null"
        },
        "assignMaxValue": {
          "$ref": "Empty",
          "description": "Optional. Set to max_value - if integer or numeric, will use int.maxvalue, etc"
        },
        "assignNull": {
          "$ref": "Empty",
          "description": "Optional. Set to null"
        },
        "applyHash": {
          "$ref": "ApplyHash",
          "description": "Optional. Applies a hash function on the data"
        },
        "roundScale": {
          "$ref": "RoundToScale",
          "description": "Optional. Allows the data to change scale"
        },
        "valueList": {
          "description": "Optional. Value is found in the specified list.",
          "$ref": "ValueListFilter"
        },
        "intComparison": {
          "$ref": "IntComparisonFilter",
          "description": "Optional. Filter on relation between source value and compare value of type integer."
        },
        "assignSpecificValue": {
          "description": "Optional. Set to a specific value (value is converted to fit the target data type)",
          "$ref": "AssignSpecificValue"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "id": "TestIamPermissionsRequest",
      "type": "object"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message for `TestIamPermissions` method."
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        }
      }
    },
    "SynonymEntity": {
      "type": "object",
      "description": "Synonym's parent is a schema.",
      "id": "SynonymEntity",
      "properties": {
        "sourceType": {
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ],
          "description": "The type of the entity for which the synonym is being created (usually a table or a sequence).",
          "type": "string"
        },
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "sourceEntity": {
          "type": "string",
          "description": "The name of the entity for which the synonym is being created (the source)."
        }
      }
    },
    "EntityIssue": {
      "id": "EntityIssue",
      "description": "Issue related to the entity.",
      "type": "object",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified issue type.",
            "Issue originated from the DDL",
            "Issue originated during the apply process",
            "Issue originated during the convert process"
          ],
          "enum": [
            "ISSUE_TYPE_UNSPECIFIED",
            "ISSUE_TYPE_DDL",
            "ISSUE_TYPE_APPLY",
            "ISSUE_TYPE_CONVERT"
          ],
          "description": "The type of the issue.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "description": "Error/Warning code"
        },
        "position": {
          "$ref": "Position",
          "description": "The position of the issue found, if relevant."
        },
        "id": {
          "type": "string",
          "description": "Unique Issue ID."
        },
        "entityType": {
          "type": "string",
          "description": "The entity type (if the DDL is for a sub entity).",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "severity": {
          "type": "string",
          "enum": [
            "ISSUE_SEVERITY_UNSPECIFIED",
            "ISSUE_SEVERITY_INFO",
            "ISSUE_SEVERITY_WARNING",
            "ISSUE_SEVERITY_ERROR"
          ],
          "enumDescriptions": [
            "Unspecified issue severity",
            "Info",
            "Warning",
            "Error"
          ],
          "description": "Severity of the issue"
        },
        "message": {
          "type": "string",
          "description": "Issue detailed message"
        },
        "ddl": {
          "description": "The ddl which caused the issue, if relevant.",
          "type": "string"
        }
      }
    },
    "ListConversionWorkspacesResponse": {
      "id": "ListConversionWorkspacesResponse",
      "type": "object",
      "description": "Response message for 'ListConversionWorkspaces' request.",
      "properties": {
        "conversionWorkspaces": {
          "type": "array",
          "description": "The list of conversion workspace objects.",
          "items": {
            "$ref": "ConversionWorkspace"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SingleColumnChange": {
      "id": "SingleColumnChange",
      "properties": {
        "udt": {
          "description": "Optional. Is the column a UDT (User-defined Type).",
          "type": "boolean"
        },
        "scale": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Column scale - e.g. 2 as in double (8,2) - when relevant."
        },
        "collation": {
          "description": "Optional. Collation override - instead of table level collation.",
          "type": "string"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Optional. Custom engine specific features."
        },
        "autoGenerated": {
          "description": "Optional. Is the column auto-generated/identity.",
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "description": "Optional. Column data type name."
        },
        "precision": {
          "format": "int32",
          "description": "Optional. Column precision - e.g. 8 as in double (8,2) - when relevant.",
          "type": "integer"
        },
        "comment": {
          "description": "Optional. Comment associated with the column.",
          "type": "string"
        },
        "setValues": {
          "description": "Optional. Specifies the list of values allowed in the column.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "charset": {
          "type": "string",
          "description": "Optional. Charset override - instead of table level charset."
        },
        "arrayLength": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The length of the array, only relevant if the column type is an array."
        },
        "nullable": {
          "type": "boolean",
          "description": "Optional. Is the column nullable."
        },
        "array": {
          "type": "boolean",
          "description": "Optional. Is the column of array type."
        },
        "fractionalSecondsPrecision": {
          "format": "int32",
          "description": "Optional. Column fractional seconds precision - e.g. 2 as in timestamp (2) - when relevant.",
          "type": "integer"
        },
        "length": {
          "type": "string",
          "format": "int64",
          "description": "Optional. Column length - e.g. 50 as in varchar (50) - when relevant."
        }
      },
      "description": "Options to configure rule type SingleColumnChange. The rule is used to change the properties of a column. The rule filter field can refer to one entity. The rule scope can be one of: Column. When using this rule, if a field is not specified than the destination column's configuration will be the same as the one in the source column..",
      "type": "object"
    },
    "DumpFlags": {
      "type": "object",
      "properties": {
        "dumpFlags": {
          "items": {
            "$ref": "DumpFlag"
          },
          "description": "The flags for the initial dump.",
          "type": "array"
        }
      },
      "id": "DumpFlags",
      "description": "Dump flags definition."
    },
    "ForwardSshTunnelConnectivity": {
      "description": "Forward SSH Tunnel connectivity.",
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "description": "Port for the SSH tunnel, default value is 22.",
          "type": "integer"
        },
        "privateKey": {
          "type": "string",
          "description": "Input only. SSH private key."
        },
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the SSH tunnel."
        }
      },
      "id": "ForwardSshTunnelConnectivity"
    },
    "IndexEntity": {
      "description": "Index is not used as an independent entity, it is retrieved as part of a Table entity.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the index."
        },
        "type": {
          "description": "Type of index, for example B-TREE.",
          "type": "string"
        },
        "unique": {
          "description": "Boolean value indicating whether the index is unique.",
          "type": "boolean"
        },
        "tableColumns": {
          "type": "array",
          "description": "Table columns used as part of the Index, for example B-TREE index should list the columns which constitutes the index.",
          "items": {
            "type": "string"
          }
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features."
        }
      },
      "id": "IndexEntity",
      "type": "object"
    },
    "ApplyConversionWorkspaceRequest": {
      "properties": {
        "dryRun": {
          "type": "boolean",
          "description": "Optional. Only validates the apply process, but doesn't change the destination database. Only works for PostgreSQL destination connection profile."
        },
        "filter": {
          "description": "Filter which entities to apply. Leaving this field empty will apply all of the entities. Supports Google AIP 160 based filtering.",
          "type": "string"
        },
        "autoCommit": {
          "description": "Optional. Specifies whether the conversion workspace is to be committed automatically after the apply.",
          "type": "boolean"
        },
        "connectionProfile": {
          "description": "Optional. Fully qualified (Uri) name of the destination connection profile.",
          "type": "string"
        }
      },
      "description": "Request message for 'ApplyConversionWorkspace' request.",
      "type": "object",
      "id": "ApplyConversionWorkspaceRequest"
    },
    "PerformanceConfig": {
      "description": "Performance configuration definition.",
      "properties": {
        "dumpParallelLevel": {
          "type": "string",
          "enumDescriptions": [
            "Unknown dump parallel level. Will be defaulted to OPTIMAL.",
            "Minimal parallel level.",
            "Optimal parallel level.",
            "Maximum parallel level."
          ],
          "description": "Initial dump parallelism level.",
          "enum": [
            "DUMP_PARALLEL_LEVEL_UNSPECIFIED",
            "MIN",
            "OPTIMAL",
            "MAX"
          ]
        }
      },
      "type": "object",
      "id": "PerformanceConfig"
    },
    "GenerateSshScriptRequest": {
      "type": "object",
      "description": "Request message for 'GenerateSshScript' request.",
      "properties": {
        "vmPort": {
          "type": "integer",
          "format": "int32",
          "description": "The port that will be open on the bastion host."
        },
        "vmCreationConfig": {
          "description": "The VM creation configuration",
          "$ref": "VmCreationConfig"
        },
        "vm": {
          "description": "Required. Bastion VM Instance name to use or to create.",
          "type": "string"
        },
        "vmSelectionConfig": {
          "description": "The VM selection configuration",
          "$ref": "VmSelectionConfig"
        }
      },
      "id": "GenerateSshScriptRequest"
    },
    "PrivateConnectivity": {
      "type": "object",
      "id": "PrivateConnectivity",
      "properties": {
        "privateConnection": {
          "type": "string",
          "description": "Required. The resource name (URI) of the private connection."
        }
      },
      "description": "Private Connectivity."
    },
    "Binding": {
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "Binding",
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object"
    },
    "StaticIpConnectivity": {
      "description": "The source database will allow incoming connections from the public IP of the destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.",
      "properties": {},
      "id": "StaticIpConnectivity",
      "type": "object"
    },
    "BackgroundJobLogEntry": {
      "id": "BackgroundJobLogEntry",
      "properties": {
        "importRulesJobDetails": {
          "$ref": "ImportRulesJobDetails",
          "readOnly": true,
          "description": "Output only. Import rules job details."
        },
        "jobType": {
          "enumDescriptions": [
            "Unspecified background job type.",
            "Job to seed from the source database.",
            "Job to convert the source database into a draft of the destination database.",
            "Job to apply the draft tree onto the destination.",
            "Job to import and convert mapping rules from an external source such as an ora2pg config file."
          ],
          "type": "string",
          "description": "The type of job that was executed.",
          "enum": [
            "BACKGROUND_JOB_TYPE_UNSPECIFIED",
            "BACKGROUND_JOB_TYPE_SOURCE_SEED",
            "BACKGROUND_JOB_TYPE_CONVERT",
            "BACKGROUND_JOB_TYPE_APPLY_DESTINATION",
            "BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE"
          ]
        },
        "completionComment": {
          "type": "string",
          "description": "Output only. Job completion comment, such as how many entities were seeded, how many warnings were found during conversion, and similar information.",
          "readOnly": true
        },
        "finishTime": {
          "format": "google-datetime",
          "description": "The timestamp when the background job was finished.",
          "type": "string"
        },
        "applyJobDetails": {
          "$ref": "ApplyJobDetails",
          "readOnly": true,
          "description": "Output only. Apply job details."
        },
        "seedJobDetails": {
          "description": "Output only. Seed job details.",
          "$ref": "SeedJobDetails",
          "readOnly": true
        },
        "requestAutocommit": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the client requested the conversion workspace to be committed after a successful completion of the job."
        },
        "completionState": {
          "type": "string",
          "enumDescriptions": [
            "The status is not specified. This state is used when job is not yet finished.",
            "Success.",
            "Error."
          ],
          "description": "Output only. Job completion state, i.e. the final state after the job completed.",
          "readOnly": true,
          "enum": [
            "JOB_COMPLETION_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "id": {
          "type": "string",
          "description": "The background job log entry ID."
        },
        "startTime": {
          "description": "The timestamp when the background job was started.",
          "format": "google-datetime",
          "type": "string"
        },
        "convertJobDetails": {
          "readOnly": true,
          "description": "Output only. Convert job details.",
          "$ref": "ConvertJobDetails"
        }
      },
      "description": "Execution log of a background job.",
      "type": "object"
    },
    "MaterializedViewEntity": {
      "properties": {
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom engine specific features."
        },
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the view."
        }
      },
      "id": "MaterializedViewEntity",
      "type": "object",
      "description": "MaterializedView's parent is a schema."
    },
    "DumpFlag": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the flag"
        },
        "value": {
          "description": "The value of the flag.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Dump flag definition.",
      "id": "DumpFlag"
    },
    "ImportRulesJobDetails": {
      "description": "Details regarding an Import Rules background job.",
      "properties": {
        "fileFormat": {
          "type": "string",
          "description": "Output only. The requested file format.",
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ],
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ],
          "readOnly": true
        },
        "files": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. File names used for the import rules job."
        }
      },
      "id": "ImportRulesJobDetails",
      "type": "object"
    },
    "ListMigrationJobsResponse": {
      "id": "ListMigrationJobsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "migrationJobs": {
          "items": {
            "$ref": "MigrationJob"
          },
          "description": "The list of migration jobs objects.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for 'ListMigrationJobs' request."
    },
    "ResumeMigrationJobRequest": {
      "description": "Request message for 'ResumeMigrationJob' request.",
      "properties": {},
      "type": "object",
      "id": "ResumeMigrationJobRequest"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "PrivateConnection": {
      "id": "PrivateConnection",
      "type": "object",
      "description": "The PrivateConnection resource is used to establish private connectivity with the customer's network.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "The private connection display name."
        },
        "vpcPeeringConfig": {
          "$ref": "VpcPeeringConfig",
          "description": "VPC peering configuration."
        },
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. The error details in case of state FAILED."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last update time of the resource."
        },
        "state": {
          "description": "Output only. The state of the private connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE",
            "DELETED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state.",
            "The private connection has been deleted."
          ],
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the resource."
        }
      }
    },
    "ConversionWorkspace": {
      "description": "The main conversion workspace resource entity.",
      "type": "object",
      "id": "ConversionWorkspace",
      "properties": {
        "globalSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true"
        },
        "source": {
          "description": "Required. The source engine details.",
          "$ref": "DatabaseEngineInfo"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. The display name for the workspace."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the workspace resource was last updated.",
          "readOnly": true,
          "type": "string"
        },
        "latestCommitId": {
          "description": "Output only. The latest commit ID.",
          "readOnly": true,
          "type": "string"
        },
        "hasUncommittedChanges": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed)."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the workspace resource was created."
        },
        "latestCommitTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the workspace was committed."
        },
        "name": {
          "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
          "type": "string"
        },
        "destination": {
          "$ref": "DatabaseEngineInfo",
          "description": "Required. The destination engine details."
        }
      }
    },
    "VpcPeeringConfig": {
      "properties": {
        "vpcName": {
          "description": "Required. Fully qualified name of the VPC that Database Migration Service will peer to.",
          "type": "string"
        },
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29)"
        }
      },
      "id": "VpcPeeringConfig",
      "description": "The VPC peering configuration is used to create VPC peering with the consumer's VPC.",
      "type": "object"
    },
    "ImportMappingRulesRequest": {
      "id": "ImportMappingRulesRequest",
      "type": "object",
      "properties": {
        "rulesFormat": {
          "type": "string",
          "description": "Required. The format of the rules content file.",
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ],
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ]
        },
        "autoCommit": {
          "type": "boolean",
          "description": "Required. Should the conversion workspace be committed automatically after the import operation."
        },
        "rulesFiles": {
          "type": "array",
          "description": "Required. One or more rules files.",
          "items": {
            "$ref": "RulesFile"
          }
        }
      },
      "description": "Request message for 'ImportMappingRules' request."
    },
    "MigrationJob": {
      "description": "Represents a Database Migration Service migration job object.",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
        },
        "filter": {
          "description": "This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace.",
          "type": "string"
        },
        "vpcPeeringConnectivity": {
          "description": "The details of the VPC network that the source database is located in.",
          "$ref": "VpcPeeringConnectivity"
        },
        "cmekKeyName": {
          "type": "string",
          "description": "The CMEK (customer-managed encryption key) fully qualified key name used for the migration job. This field supports all migration jobs types except for: * Mysql to Mysql (use the cmek field in the cloudsql connection profile instead). * PostrgeSQL to PostgreSQL (use the cmek field in the cloudsql connection profile instead). * PostgreSQL to AlloyDB (use the kms_key_name field in the alloydb connection profile instead). Each Cloud CMEK key has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]"
        },
        "duration": {
          "type": "string",
          "format": "google-duration",
          "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
          "readOnly": true
        },
        "conversionWorkspace": {
          "description": "The conversion workspace used by the migration.",
          "$ref": "ConversionWorkspaceInfo"
        },
        "type": {
          "description": "Required. The migration job type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ONE_TIME",
            "CONTINUOUS"
          ],
          "type": "string",
          "enumDescriptions": [
            "The type of the migration job is unknown.",
            "The migration job is a one time migration.",
            "The migration job is a continuous migration."
          ]
        },
        "performanceConfig": {
          "description": "Optional. Data dump parallelism settings used by the migration. Currently applicable only for MySQL to Cloud SQL for MySQL migrations only.",
          "$ref": "PerformanceConfig"
        },
        "phase": {
          "enum": [
            "PHASE_UNSPECIFIED",
            "FULL_DUMP",
            "CDC",
            "PROMOTE_IN_PROGRESS",
            "WAITING_FOR_SOURCE_WRITES_TO_STOP",
            "PREPARING_THE_DUMP"
          ],
          "enumDescriptions": [
            "The phase of the migration job is unknown.",
            "The migration job is in the full dump phase.",
            "The migration job is CDC phase.",
            "The migration job is running the promote phase.",
            "Only RDS flow - waiting for source writes to stop",
            "Only RDS flow - the sources writes stopped, waiting for dump to begin"
          ],
          "readOnly": true,
          "description": "Output only. The current migration job phase.",
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Required. The resource name (URI) of the source connection profile."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`."
        },
        "reverseSshConnectivity": {
          "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity.",
          "$ref": "ReverseSshConnectivity"
        },
        "displayName": {
          "description": "The migration job display name.",
          "type": "string"
        },
        "dumpFlags": {
          "$ref": "DumpFlags",
          "description": "The initial dump flags. This field and the \"dump_path\" field are mutually exclusive."
        },
        "staticIpConnectivity": {
          "description": "static ip connectivity data (default, no additional details needed).",
          "$ref": "StaticIpConnectivity"
        },
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. The error details in case of state FAILED."
        },
        "dumpPath": {
          "type": "string",
          "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the \"dump_flags\" field are mutually exclusive."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "MAINTENANCE",
            "DRAFT",
            "CREATING",
            "NOT_STARTED",
            "RUNNING",
            "FAILED",
            "COMPLETED",
            "DELETING",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPDATING",
            "STARTING",
            "RESTARTING",
            "RESUMING"
          ],
          "type": "string",
          "description": "The current migration job state.",
          "enumDescriptions": [
            "The state of the migration job is unknown.",
            "The migration job is down for maintenance.",
            "The migration job is in draft mode and no resources are created.",
            "The migration job is being created.",
            "The migration job is created and not started.",
            "The migration job is running.",
            "The migration job failed.",
            "The migration job has been completed.",
            "The migration job is being deleted.",
            "The migration job is being stopped.",
            "The migration job is currently stopped.",
            "The migration job has been deleted.",
            "The migration job is being updated.",
            "The migration job is starting.",
            "The migration job is restarting.",
            "The migration job is resuming."
          ]
        },
        "endTime": {
          "description": "Output only. If the migration job is completed, the time when it was completed.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "sourceDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the source."
        },
        "destinationDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the destination."
        },
        "createTime": {
          "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}."
        },
        "destination": {
          "description": "Required. The resource name (URI) of the destination connection profile.",
          "type": "string"
        }
      },
      "id": "MigrationJob"
    },
    "ConnectionProfile": {
      "id": "ConnectionProfile",
      "description": "A connection profile definition.",
      "properties": {
        "error": {
          "readOnly": true,
          "$ref": "Status",
          "description": "Output only. The error details in case of state FAILED."
        },
        "oracle": {
          "$ref": "OracleConnectionProfile",
          "description": "An Oracle database connection profile."
        },
        "labels": {
          "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\"."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "DELETED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The state of the connection profile is unknown.",
            "The connection profile is in draft mode and fully editable.",
            "The connection profile is being created.",
            "The connection profile is ready.",
            "The connection profile is being updated.",
            "The connection profile is being deleted.",
            "The connection profile has been deleted.",
            "The last action on the connection profile failed."
          ],
          "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED)."
        },
        "provider": {
          "description": "The database provider.",
          "type": "string",
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ],
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ]
        },
        "alloydb": {
          "$ref": "AlloyDbConnectionProfile",
          "description": "An AlloyDB cluster connection profile."
        },
        "mysql": {
          "$ref": "MySqlConnectionProfile",
          "description": "A MySQL database connection profile."
        },
        "displayName": {
          "description": "The connection profile display name.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "type": "string",
          "readOnly": true
        },
        "cloudsql": {
          "description": "A CloudSQL database connection profile.",
          "$ref": "CloudSqlConnectionProfile"
        },
        "postgresql": {
          "$ref": "PostgreSqlConnectionProfile",
          "description": "A PostgreSQL database connection profile."
        },
        "name": {
          "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TableEntity": {
      "type": "object",
      "id": "TableEntity",
      "description": "Table's parent is a schema.",
      "properties": {
        "indices": {
          "type": "array",
          "description": "Table indices.",
          "items": {
            "$ref": "IndexEntity"
          }
        },
        "comment": {
          "description": "Comment associated with the table.",
          "type": "string"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features."
        },
        "columns": {
          "description": "Table columns.",
          "type": "array",
          "items": {
            "$ref": "ColumnEntity"
          }
        },
        "triggers": {
          "items": {
            "$ref": "TriggerEntity"
          },
          "description": "Table triggers.",
          "type": "array"
        },
        "constraints": {
          "type": "array",
          "items": {
            "$ref": "ConstraintEntity"
          },
          "description": "Table constraints."
        }
      }
    },
    "TcpProxyScript": {
      "type": "object",
      "id": "TcpProxyScript",
      "properties": {
        "script": {
          "type": "string",
          "description": "The TCP Proxy configuration script."
        }
      },
      "description": "Response message for 'GenerateTcpProxyScript' request."
    },
    "MySqlConnectionProfile": {
      "properties": {
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        },
        "ssl": {
          "description": "SSL configuration for the destination to connect to the source database.",
          "$ref": "SslConfig"
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "host": {
          "description": "Required. The IP or hostname of the source MySQL database.",
          "type": "string"
        },
        "port": {
          "description": "Required. The network port of the source MySQL database.",
          "type": "integer",
          "format": "int32"
        },
        "passwordSet": {
          "readOnly": true,
          "description": "Output only. Indicates If this connection profile password is stored.",
          "type": "boolean"
        }
      },
      "description": "Specifies connection parameters required specifically for MySQL databases.",
      "type": "object",
      "id": "MySqlConnectionProfile"
    },
    "ConvertRowIdToColumn": {
      "properties": {
        "onlyIfNoPrimaryKey": {
          "description": "Required. Only work on tables without primary key defined",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "ConvertRowIdToColumn",
      "description": "Options to configure rule type ConvertROWIDToColumn. The rule is used to add column rowid to destination tables based on an Oracle rowid function/property. The rule filter field can refer to one or more entities. The rule scope can be one of: Table. This rule requires additional filter to be specified beyond the basic rule filter field, which is whether or not to work on tables which already have a primary key defined."
    },
    "MappingRuleFilter": {
      "description": "A filter defining the entities that a mapping rule should be applied to. When more than one field is specified, the rule is applied only to entities which match all the fields.",
      "id": "MappingRuleFilter",
      "properties": {
        "entityNamePrefix": {
          "description": "Optional. The rule should be applied to entities whose non-qualified name starts with the given prefix.",
          "type": "string"
        },
        "parentEntity": {
          "type": "string",
          "description": "Optional. The rule should be applied to entities whose parent entity (fully qualified name) matches the given value. For example, if the rule applies to a table entity, the expected value should be a schema (schema). If the rule applies to a column or index entity, the expected value can be either a schema (schema) or a table (schema.table)"
        },
        "entityNameContains": {
          "type": "string",
          "description": "Optional. The rule should be applied to entities whose non-qualified name contains the given string."
        },
        "entities": {
          "type": "array",
          "description": "Optional. The rule should be applied to specific entities defined by their fully qualified names.",
          "items": {
            "type": "string"
          }
        },
        "entityNameSuffix": {
          "description": "Optional. The rule should be applied to entities whose non-qualified name ends with the given suffix.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestartMigrationJobRequest": {
      "id": "RestartMigrationJobRequest",
      "properties": {
        "skipValidation": {
          "type": "boolean",
          "description": "Optional. Restart the migration job without running prior configuration verification. Defaults to `false`."
        }
      },
      "description": "Request message for 'RestartMigrationJob' request.",
      "type": "object"
    },
    "StoredProcedureEntity": {
      "id": "StoredProcedureEntity",
      "type": "object",
      "properties": {
        "sqlCode": {
          "description": "The SQL code which creates the stored procedure.",
          "type": "string"
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features.",
          "type": "object"
        }
      },
      "description": "Stored procedure's parent is a schema."
    },
    "MappingRule": {
      "properties": {
        "singlePackageChange": {
          "$ref": "SinglePackageChange",
          "description": "Optional. Rule to specify how a single package is converted."
        },
        "singleEntityRename": {
          "description": "Optional. Rule to specify how a single entity should be renamed.",
          "$ref": "SingleEntityRename"
        },
        "entityMove": {
          "description": "Optional. Rule to specify how multiple entities should be relocated into a different schema.",
          "$ref": "EntityMove"
        },
        "revisionCreateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The timestamp that the revision was created.",
          "readOnly": true
        },
        "multiColumnDataTypeChange": {
          "description": "Optional. Rule to specify how multiple columns should be converted to a different data type.",
          "$ref": "MultiColumnDatatypeChange"
        },
        "displayName": {
          "type": "string",
          "description": "Optional. A human readable name"
        },
        "conditionalColumnSetValue": {
          "$ref": "ConditionalColumnSetValue",
          "description": "Optional. Rule to specify how the data contained in a column should be transformed (such as trimmed, rounded, etc) provided that the data meets certain criteria."
        },
        "singleColumnChange": {
          "description": "Optional. Rule to specify how a single column is converted.",
          "$ref": "SingleColumnChange"
        },
        "multiEntityRename": {
          "$ref": "MultiEntityRename",
          "description": "Optional. Rule to specify how multiple entities should be renamed."
        },
        "filterTableColumns": {
          "$ref": "FilterTableColumns",
          "description": "Optional. Rule to specify the list of columns to include or exclude from a table."
        },
        "ruleScope": {
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ],
          "type": "string",
          "description": "Required. The rule scope"
        },
        "sourceSqlChange": {
          "description": "Optional. Rule to change the sql code for an entity, for example, function, procedure.",
          "$ref": "SourceSqlChange"
        },
        "ruleOrder": {
          "type": "string",
          "format": "int64",
          "description": "Required. The order in which the rule is applied. Lower order rules are applied before higher value rules so they may end up being overridden."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "DELETED"
          ],
          "type": "string",
          "description": "Optional. The mapping rule state",
          "enumDescriptions": [
            "The state of the mapping rule is unknown.",
            "The rule is enabled.",
            "The rule is disabled.",
            "The rule is logically deleted."
          ]
        },
        "filter": {
          "$ref": "MappingRuleFilter",
          "description": "Required. The rule filter"
        },
        "name": {
          "description": "Full name of the mapping rule resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{set}/mappingRule/{rule}.",
          "type": "string"
        },
        "revisionId": {
          "readOnly": true,
          "description": "Output only. The revision ID of the mapping rule. A new revision is committed whenever the mapping rule is changed in any way. The format is an 8-character hexadecimal string.",
          "type": "string"
        },
        "convertRowidColumn": {
          "$ref": "ConvertRowIdToColumn",
          "description": "Optional. Rule to specify how multiple tables should be converted with an additional rowid column."
        },
        "setTablePrimaryKey": {
          "description": "Optional. Rule to specify the primary key for a table",
          "$ref": "SetTablePrimaryKey"
        }
      },
      "id": "MappingRule",
      "description": "Definition of a transformation that is to be applied to a group of entities in the source schema. Several such transformations can be applied to an entity sequentially to define the corresponding entity in the target schema.",
      "type": "object"
    },
    "AlloyDbConnectionProfile": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "Required. The AlloyDB cluster ID that this connection profile is associated with."
        },
        "settings": {
          "description": "Immutable. Metadata used to create the destination AlloyDB cluster.",
          "$ref": "AlloyDbSettings"
        }
      },
      "id": "AlloyDbConnectionProfile",
      "description": "Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster."
    },
    "ListMappingRulesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "mappingRules": {
          "description": "The list of conversion workspace mapping rules.",
          "type": "array",
          "items": {
            "$ref": "MappingRule"
          }
        }
      },
      "description": "Response message for 'ListMappingRulesRequest' request.",
      "type": "object",
      "id": "ListMappingRulesResponse"
    },
    "GenerateTcpProxyScriptRequest": {
      "type": "object",
      "description": "Request message for 'GenerateTcpProxyScript' request.",
      "id": "GenerateTcpProxyScriptRequest",
      "properties": {
        "vmSubnet": {
          "description": "Required. The name of the subnet the Compute instance will use for private connectivity. Must be supplied in the form of projects/{project}/regions/{region}/subnetworks/{subnetwork}. Note: the region for the subnet must match the Compute instance region.",
          "type": "string"
        },
        "vmName": {
          "type": "string",
          "description": "Required. The name of the Compute instance that will host the proxy."
        },
        "vmMachineType": {
          "type": "string",
          "description": "Required. The type of the Compute instance that will host the proxy."
        },
        "vmZone": {
          "description": "Optional. The Google Cloud Platform zone to create the VM in. The fully qualified name of the zone must be specified, including the region name, for example \"us-central1-b\". If not specified, uses the \"-b\" zone of the destination Connection Profile's region.",
          "type": "string"
        }
      }
    },
    "UserPassword": {
      "description": "The username/password for a database user. Used for specifying initial users at cluster creation time.",
      "properties": {
        "passwordSet": {
          "description": "Output only. Indicates if the initial_user.password field has been set.",
          "readOnly": true,
          "type": "boolean"
        },
        "user": {
          "type": "string",
          "description": "The database username."
        },
        "password": {
          "description": "The initial password for the user.",
          "type": "string"
        }
      },
      "id": "UserPassword",
      "type": "object"
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      },
      "type": "object"
    },
    "ConversionWorkspaceInfo": {
      "id": "ConversionWorkspaceInfo",
      "type": "object",
      "description": "A conversion workspace's version.",
      "properties": {
        "name": {
          "description": "The resource name (URI) of the conversion workspace.",
          "type": "string"
        },
        "commitId": {
          "type": "string",
          "description": "The commit ID of the conversion workspace."
        }
      }
    },
    "MachineConfig": {
      "properties": {
        "cpuCount": {
          "description": "The number of CPU's in the VM instance.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "MachineConfig describes the configuration of a machine.",
      "id": "MachineConfig"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        }
      },
      "type": "object"
    },
    "FunctionEntity": {
      "properties": {
        "sqlCode": {
          "description": "The SQL code which creates the function.",
          "type": "string"
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom engine specific features."
        }
      },
      "description": "Function's parent is a schema.",
      "type": "object",
      "id": "FunctionEntity"
    },
    "MigrationJobVerificationError": {
      "description": "Error message of a verification Migration job.",
      "id": "MigrationJobVerificationError",
      "properties": {
        "errorCode": {
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "AUTHENTICATION_FAILURE",
            "INVALID_CONNECTION_PROFILE_CONFIG",
            "VERSION_INCOMPATIBILITY",
            "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "UNSUPPORTED_MIGRATION_TYPE",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "UNSUPPORTED_GTID_MODE",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "CANT_RESTART_RUNNING_MIGRATION",
            "SOURCE_ALREADY_SETUP",
            "TABLES_WITH_LIMITED_SUPPORT",
            "UNSUPPORTED_DATABASE_LOCALE",
            "UNSUPPORTED_DATABASE_FDW_CONFIG",
            "ERROR_RDBMS",
            "SOURCE_SIZE_EXCEEDS_THRESHOLD",
            "EXISTING_CONFLICTING_DATABASES",
            "PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE",
            "EXISTING_DATA"
          ],
          "enumDescriptions": [
            "An unknown error occurred",
            "We failed to connect to one of the connection profile.",
            "We failed to authenticate to one of the connection profile.",
            "One of the involved connection profiles has an invalid configuration.",
            "The versions of the source and the destination are incompatible.",
            "The types of the source and the destination are incompatible.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions.",
            "Unsupported migration type.",
            "Invalid RDS logical replication.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "The table definition is not support due to missing primary key or replica identity.",
            "The definer is not supported.",
            "Migration is already running at the time of restart request.",
            "The source already has a replication setup.",
            "The source has tables with limited support. E.g. PostgreSQL tables without primary keys.",
            "The source uses an unsupported locale.",
            "The source uses an unsupported Foreign Data Wrapper configuration.",
            "There was an underlying RDBMS error.",
            "The source DB size in Bytes exceeds a certain threshold. The migration might require an increase of quota, or might not be supported.",
            "The destination DB contains existing databases that are conflicting with those in the source DB.",
            "Insufficient privilege to enable the parallelism configuration.",
            "The destination instance contains existing data or user defined entities (for example databases, tables, or functions). You can only migrate to empty instances. Clear your destination instance and retry the migration job."
          ],
          "description": "Output only. An instance of ErrorCode specifying the error that occurred.",
          "readOnly": true,
          "type": "string"
        },
        "errorDetailMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A specific detailed error message, if supplied by the engine."
        },
        "errorMessage": {
          "description": "Output only. A formatted message with further details about the error and a CTA.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "VerifyMigrationJobRequest": {
      "type": "object",
      "description": "Request message for 'VerifyMigrationJob' request.",
      "properties": {
        "updateMask": {
          "description": "Optional. Field mask is used to specify the changed fields to be verified. It will not update the migration job.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "migrationJob": {
          "description": "Optional. The changed migration job parameters to verify. It will not update the migration job.",
          "$ref": "MigrationJob"
        }
      },
      "id": "VerifyMigrationJobRequest"
    },
    "PromoteMigrationJobRequest": {
      "id": "PromoteMigrationJobRequest",
      "type": "object",
      "description": "Request message for 'PromoteMigrationJob' request.",
      "properties": {}
    },
    "ApplyHash": {
      "id": "ApplyHash",
      "properties": {
        "uuidFromBytes": {
          "description": "Optional. Generate UUID from the data's byte array",
          "$ref": "Empty"
        }
      },
      "type": "object",
      "description": "Apply a hash function on the value."
    },
    "AlloyDbSettings": {
      "description": "Settings for creating an AlloyDB cluster.",
      "id": "AlloyDbSettings",
      "properties": {
        "initialUser": {
          "$ref": "UserPassword",
          "description": "Required. Input only. Initial user to setup during cluster creation. Required."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs."
        },
        "primaryInstanceSettings": {
          "$ref": "PrimaryInstanceSettings"
        },
        "encryptionConfig": {
          "description": "Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data.",
          "$ref": "EncryptionConfig"
        },
        "vpcNetwork": {
          "description": "Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \"projects/{project_number}/global/networks/{network_id}\". This is required to create a cluster.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FetchStaticIpsResponse": {
      "type": "object",
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' request.",
      "properties": {
        "staticIps": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of static IPs."
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "MultiEntityRename": {
      "properties": {
        "newNamePattern": {
          "description": "Optional. The pattern used to generate the new entity's name. This pattern must include the characters '{name}', which will be replaced with the name of the original entity. For example, the pattern 't_{name}' for an entity name jobs would be converted to 't_jobs'. If unspecified, the default value for this field is '{name}'",
          "type": "string"
        },
        "sourceNameTransformation": {
          "type": "string",
          "description": "Optional. Additional transformation that can be done on the source entity name before it is being used by the new_name_pattern, for example lower case. If no transformation is desired, use NO_TRANSFORMATION",
          "enumDescriptions": [
            "Entity name transformation unspecified.",
            "No transformation.",
            "Transform to lower case.",
            "Transform to upper case.",
            "Transform to capitalized case."
          ],
          "enum": [
            "ENTITY_NAME_TRANSFORMATION_UNSPECIFIED",
            "ENTITY_NAME_TRANSFORMATION_NO_TRANSFORMATION",
            "ENTITY_NAME_TRANSFORMATION_LOWER_CASE",
            "ENTITY_NAME_TRANSFORMATION_UPPER_CASE",
            "ENTITY_NAME_TRANSFORMATION_CAPITALIZED_CASE"
          ]
        }
      },
      "id": "MultiEntityRename",
      "description": "Options to configure rule type MultiEntityRename. The rule is used to rename multiple entities. The rule filter field can refer to one or more entities. The rule scope can be one of: Database, Schema, Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT",
      "type": "object"
    },
    "ConvertConversionWorkspaceRequest": {
      "properties": {
        "convertFullPath": {
          "type": "boolean",
          "description": "Optional. Automatically convert the full entity path for each entity specified by the filter. For example, if the filter specifies a table, that table schema (and database if there is one) will also be converted."
        },
        "autoCommit": {
          "type": "boolean",
          "description": "Optional. Specifies whether the conversion workspace is to be committed automatically after the conversion."
        },
        "filter": {
          "type": "string",
          "description": "Optional. Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering."
        }
      },
      "description": "Request message for 'ConvertConversionWorkspace' request.",
      "id": "ConvertConversionWorkspaceRequest",
      "type": "object"
    },
    "SingleEntityRename": {
      "type": "object",
      "properties": {
        "newName": {
          "description": "Required. The new name of the destination entity",
          "type": "string"
        }
      },
      "description": "Options to configure rule type SingleEntityRename. The rule is used to rename an entity. The rule filter field can refer to only one entity. The rule scope can be one of: Database, Schema, Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT, Synonym",
      "id": "SingleEntityRename"
    },
    "SshScript": {
      "properties": {
        "script": {
          "description": "The ssh configuration script.",
          "type": "string"
        }
      },
      "description": "Response message for 'GenerateSshScript' request.",
      "type": "object",
      "id": "SshScript"
    },
    "ColumnEntity": {
      "type": "object",
      "id": "ColumnEntity",
      "properties": {
        "autoGenerated": {
          "description": "Is the column auto-generated/identity.",
          "type": "boolean"
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "Column order in the table.",
          "format": "int32"
        },
        "length": {
          "format": "int64",
          "type": "string",
          "description": "Column length - e.g. varchar (50)."
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value of the column."
        },
        "dataType": {
          "type": "string",
          "description": "Column data type."
        },
        "collation": {
          "description": "Collation override - instead of table level collation.",
          "type": "string"
        },
        "udt": {
          "type": "boolean",
          "description": "Is the column a UDT."
        },
        "name": {
          "description": "Column name.",
          "type": "string"
        },
        "scale": {
          "format": "int32",
          "type": "integer",
          "description": "Column scale - when relevant."
        },
        "array": {
          "description": "Is the column of array type.",
          "type": "boolean"
        },
        "charset": {
          "type": "string",
          "description": "Charset override - instead of table level charset."
        },
        "nullable": {
          "description": "Is the column nullable.",
          "type": "boolean"
        },
        "arrayLength": {
          "type": "integer",
          "format": "int32",
          "description": "If the column is array, of which length."
        },
        "comment": {
          "description": "Comment associated with the column.",
          "type": "string"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features."
        },
        "fractionalSecondsPrecision": {
          "description": "Column fractional second precision - used for timestamp based datatypes.",
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "description": "Column precision - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "setValues": {
          "description": "Specifies the list of values allowed in the column. Only used for set data type.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Column is not used as an independent entity, it is retrieved as part of a Table entity."
    },
    "ListConnectionProfilesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "description": "The response list of connection profiles.",
          "type": "array"
        }
      },
      "description": "Response message for 'ListConnectionProfiles' request.",
      "id": "ListConnectionProfilesResponse",
      "type": "object"
    },
    "CancelOperationRequest": {
      "type": "object",
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "ListPrivateConnectionsResponse": {
      "description": "Response message for 'ListPrivateConnections' request.",
      "id": "ListPrivateConnectionsResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "privateConnections": {
          "type": "array",
          "items": {
            "$ref": "PrivateConnection"
          },
          "description": "List of private connections."
        }
      },
      "type": "object"
    },
    "CloudSqlConnectionProfile": {
      "properties": {
        "additionalPublicIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available)."
        },
        "settings": {
          "description": "Immutable. Metadata used to create the destination Cloud SQL database.",
          "$ref": "CloudSqlSettings"
        },
        "cloudSqlId": {
          "readOnly": true,
          "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with.",
          "type": "string"
        },
        "publicIp": {
          "readOnly": true,
          "description": "Output only. The Cloud SQL database instance's public IP.",
          "type": "string"
        },
        "privateIp": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Cloud SQL database instance's private IP."
        }
      },
      "id": "CloudSqlConnectionProfile",
      "description": "Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        }
      }
    },
    "PackageEntity": {
      "description": "Package's parent is a schema.",
      "id": "PackageEntity",
      "properties": {
        "packageBody": {
          "type": "string",
          "description": "The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory."
        },
        "packageSqlCode": {
          "type": "string",
          "description": "The SQL code which creates the package."
        },
        "customFeatures": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Custom engine specific features."
        }
      },
      "type": "object"
    },
    "ReverseSshConnectivity": {
      "description": "The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.",
      "type": "object",
      "properties": {
        "vpc": {
          "type": "string",
          "description": "The name of the VPC to peer with the Cloud SQL private network."
        },
        "vm": {
          "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        },
        "vmIp": {
          "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        },
        "vmPort": {
          "format": "int32",
          "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "integer"
        }
      },
      "id": "ReverseSshConnectivity"
    },
    "DescribeDatabaseEntitiesResponse": {
      "type": "object",
      "description": "Response message for 'DescribeDatabaseEntities' request.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "databaseEntities": {
          "type": "array",
          "items": {
            "$ref": "DatabaseEntity"
          },
          "description": "The list of database entities for the conversion workspace."
        }
      },
      "id": "DescribeDatabaseEntitiesResponse"
    },
    "GoogleCloudClouddmsV1OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "properties": {
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      },
      "type": "object",
      "id": "GoogleCloudClouddmsV1OperationMetadata"
    },
    "RollbackConversionWorkspaceRequest": {
      "description": "Request message for 'RollbackConversionWorkspace' request.",
      "type": "object",
      "properties": {},
      "id": "RollbackConversionWorkspaceRequest"
    },
    "SinglePackageChange": {
      "properties": {
        "packageDescription": {
          "description": "Optional. Sql code for package description",
          "type": "string"
        },
        "packageBody": {
          "type": "string",
          "description": "Optional. Sql code for package body"
        }
      },
      "type": "object",
      "description": "Options to configure rule type SinglePackageChange. The rule is used to alter the sql code for a package entities. The rule filter field can refer to one entity. The rule scope can be: Package",
      "id": "SinglePackageChange"
    },
    "StopMigrationJobRequest": {
      "properties": {},
      "description": "Request message for 'StopMigrationJob' request.",
      "type": "object",
      "id": "StopMigrationJobRequest"
    },
    "ViewEntity": {
      "id": "ViewEntity",
      "description": "View's parent is a schema.",
      "properties": {
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the view."
        },
        "constraints": {
          "items": {
            "$ref": "ConstraintEntity"
          },
          "type": "array",
          "description": "View constraints."
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom engine specific features."
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      }
    },
    "VpcPeeringConnectivity": {
      "properties": {
        "vpc": {
          "type": "string",
          "description": "The name of the VPC network to peer with the Cloud SQL private network."
        }
      },
      "type": "object",
      "id": "VpcPeeringConnectivity",
      "description": "The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC."
    },
    "PrivateServiceConnectConnectivity": {
      "id": "PrivateServiceConnectConnectivity",
      "description": "[Private Service Connect connectivity](https://cloud.google.com/vpc/docs/private-service-connect#service-attachments)",
      "properties": {
        "serviceAttachment": {
          "description": "Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Position": {
      "id": "Position",
      "type": "object",
      "description": "Issue position.",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Issue offset"
        },
        "column": {
          "type": "integer",
          "description": "Issue column number",
          "format": "int32"
        },
        "length": {
          "type": "integer",
          "description": "Issue length",
          "format": "int32"
        },
        "line": {
          "type": "integer",
          "format": "int32",
          "description": "Issue line number"
        }
      }
    },
    "CommitConversionWorkspaceRequest": {
      "description": "Request message for 'CommitConversionWorkspace' request.",
      "id": "CommitConversionWorkspaceRequest",
      "properties": {
        "commitName": {
          "description": "Optional. Optional name of the commit.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MultiColumnDatatypeChange": {
      "description": "Options to configure rule type MultiColumnDatatypeChange. The rule is used to change the data type and associated properties of multiple columns at once. The rule filter field can refer to one or more entities. The rule scope can be one of:Column. This rule requires additional filters to be specified beyond the basic rule filter field, which is the source data type, but the rule supports additional filtering capabilities such as the minimum and maximum field length. All additional filters which are specified are required to be met in order for the rule to be applied (logical AND between the fields).",
      "properties": {
        "sourceDataTypeFilter": {
          "description": "Required. Filter on source data type.",
          "type": "string"
        },
        "newDataType": {
          "description": "Required. New data type.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Optional. Custom engine specific features.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "overrideFractionalSecondsPrecision": {
          "description": "Optional. Column fractional seconds precision - used only for timestamp based datatypes - if not specified and relevant uses the source column fractional seconds precision.",
          "type": "integer",
          "format": "int32"
        },
        "overrideScale": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Column scale - when relevant - if not specified and relevant uses the source column scale."
        },
        "overridePrecision": {
          "format": "int32",
          "description": "Optional. Column precision - when relevant - if not specified and relevant uses the source column precision.",
          "type": "integer"
        },
        "sourceNumericFilter": {
          "description": "Optional. Filter for fixed point number data types such as NUMERIC/NUMBER.",
          "$ref": "SourceNumericFilter"
        },
        "overrideLength": {
          "description": "Optional. Column length - e.g. varchar (50) - if not specified and relevant uses the source column length.",
          "format": "int64",
          "type": "string"
        },
        "sourceTextFilter": {
          "description": "Optional. Filter for text-based data types like varchar.",
          "$ref": "SourceTextFilter"
        }
      },
      "type": "object",
      "id": "MultiColumnDatatypeChange"
    },
    "SeedJobDetails": {
      "properties": {
        "connectionProfile": {
          "type": "string",
          "description": "Output only. The connection profile which was used for the seed job.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "SeedJobDetails",
      "description": "Details regarding a Seed background job."
    },
    "RulesFile": {
      "type": "object",
      "properties": {
        "rulesSourceFilename": {
          "description": "Required. The filename of the rules that needs to be converted. The filename is used mainly so that future logs of the import rules job contain it, and can therefore be searched by it.",
          "type": "string"
        },
        "rulesContent": {
          "description": "Required. The text content of the rules that needs to be converted.",
          "type": "string"
        }
      },
      "description": "Details of a single rules file.",
      "id": "RulesFile"
    },
    "TriggerEntity": {
      "description": "Trigger is not used as an independent entity, it is retrieved as part of a Table entity.",
      "id": "TriggerEntity",
      "properties": {
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the trigger."
        },
        "name": {
          "type": "string",
          "description": "The name of the trigger."
        },
        "triggeringEvents": {
          "description": "The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "triggerType": {
          "description": "Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValueListFilter": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "description": "Required. The list to be used to filter by",
          "items": {
            "type": "string"
          }
        },
        "ignoreCase": {
          "type": "boolean",
          "description": "Required. Whether to ignore case when filtering by values. Defaults to false"
        },
        "valuePresentList": {
          "description": "Required. Indicates whether the filter matches rows with values that are present in the list or those with values not present in it.",
          "enum": [
            "VALUE_PRESENT_IN_LIST_UNSPECIFIED",
            "VALUE_PRESENT_IN_LIST_IF_VALUE_LIST",
            "VALUE_PRESENT_IN_LIST_IF_VALUE_NOT_LIST"
          ],
          "enumDescriptions": [
            "Value present in list unspecified",
            "If the source value is in the supplied list at value_list",
            "If the source value is not in the supplied list at value_list"
          ],
          "type": "string"
        }
      },
      "description": "A list of values to filter by in ConditionalColumnSetValue",
      "id": "ValueListFilter"
    },
    "EntityMappingLogEntry": {
      "type": "object",
      "id": "EntityMappingLogEntry",
      "properties": {
        "ruleRevisionId": {
          "type": "string",
          "description": "Rule revision ID."
        },
        "mappingComment": {
          "type": "string",
          "description": "Comment."
        },
        "ruleId": {
          "description": "Which rule caused this log entry.",
          "type": "string"
        }
      },
      "description": "A single record of a rule which was used for a mapping."
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "Empty",
      "type": "object"
    },
    "SourceNumericFilter": {
      "description": "Filter for fixed point number data types such as NUMERIC/NUMBER",
      "id": "SourceNumericFilter",
      "type": "object",
      "properties": {
        "numericFilterOption": {
          "enum": [
            "NUMERIC_FILTER_OPTION_UNSPECIFIED",
            "NUMERIC_FILTER_OPTION_ALL",
            "NUMERIC_FILTER_OPTION_LIMIT",
            "NUMERIC_FILTER_OPTION_LIMITLESS"
          ],
          "type": "string",
          "description": "Required. Enum to set the option defining the datatypes numeric filter has to be applied to",
          "enumDescriptions": [
            "Numeric filter option unspecified",
            "Numeric filter option that matches all numeric columns.",
            "Numeric filter option that matches columns having numeric datatypes with specified precision and scale within the limited range of filter.",
            "Numeric filter option that matches only the numeric columns with no precision and scale specified."
          ]
        },
        "sourceMinPrecisionFilter": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. The filter will match columns with precision greater than or equal to this number."
        },
        "sourceMinScaleFilter": {
          "type": "integer",
          "description": "Optional. The filter will match columns with scale greater than or equal to this number.",
          "format": "int32"
        },
        "sourceMaxPrecisionFilter": {
          "type": "integer",
          "description": "Optional. The filter will match columns with precision smaller than or equal to this number.",
          "format": "int32"
        },
        "sourceMaxScaleFilter": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The filter will match columns with scale smaller than or equal to this number."
        }
      }
    },
    "VmCreationConfig": {
      "description": "VM creation configuration message",
      "id": "VmCreationConfig",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "The subnet name the vm needs to be created in."
        },
        "vmZone": {
          "description": "The Google Cloud Platform zone to create the VM in.",
          "type": "string"
        },
        "vmMachineType": {
          "type": "string",
          "description": "Required. VM instance machine type to create."
        }
      },
      "type": "object"
    },
    "SearchBackgroundJobsResponse": {
      "type": "object",
      "properties": {
        "jobs": {
          "items": {
            "$ref": "BackgroundJobLogEntry"
          },
          "type": "array",
          "description": "The list of conversion workspace mapping rules."
        }
      },
      "id": "SearchBackgroundJobsResponse",
      "description": "Response message for 'SearchBackgroundJobs' request."
    },
    "Operation": {
      "properties": {
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "VmSelectionConfig": {
      "properties": {
        "vmZone": {
          "type": "string",
          "description": "Required. The Google Cloud Platform zone the VM is located."
        }
      },
      "type": "object",
      "id": "VmSelectionConfig",
      "description": "VM selection configuration message"
    },
    "FilterTableColumns": {
      "type": "object",
      "description": "Options to configure rule type FilterTableColumns. The rule is used to filter the list of columns to include or exclude from a table. The rule filter field can refer to one entity. The rule scope can be: Table Only one of the two lists can be specified for the rule.",
      "id": "FilterTableColumns",
      "properties": {
        "includeColumns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. List of columns to be included for a particular table."
        },
        "excludeColumns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. List of columns to be excluded for a particular table."
        }
      }
    },
    "RoundToScale": {
      "id": "RoundToScale",
      "type": "object",
      "properties": {
        "scale": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Scale value to be used"
        }
      },
      "description": "This allows the data to change scale, for example if the source is 2 digits after the decimal point, specify round to scale value = 2. If for example the value needs to be converted to an integer, use round to scale value = 0."
    },
    "ConvertJobDetails": {
      "properties": {
        "filter": {
          "description": "Output only. AIP-160 based filter used to specify the entities to convert",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "ConvertJobDetails",
      "description": "Details regarding a Convert background job."
    },
    "SeedConversionWorkspaceRequest": {
      "properties": {
        "autoCommit": {
          "type": "boolean",
          "description": "Should the conversion workspace be committed automatically after the seed operation."
        },
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Optional. Fully qualified (Uri) name of the destination connection profile."
        },
        "sourceConnectionProfile": {
          "type": "string",
          "description": "Optional. Fully qualified (Uri) name of the source connection profile."
        }
      },
      "type": "object",
      "description": "Request message for 'SeedConversionWorkspace' request.",
      "id": "SeedConversionWorkspaceRequest"
    },
    "AssignSpecificValue": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Required. Specific value to be assigned",
          "type": "string"
        }
      },
      "description": "Set to a specific value (value is converted to fit the target data type)",
      "id": "AssignSpecificValue"
    },
    "SqlIpConfig": {
      "id": "SqlIpConfig",
      "description": "IP Management configuration.",
      "properties": {
        "authorizedNetworks": {
          "type": "array",
          "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).",
          "items": {
            "$ref": "SqlAclEntry"
          }
        },
        "enableIpv4": {
          "type": "boolean",
          "description": "Whether the instance should be assigned an IPv4 address or not."
        },
        "privateNetwork": {
          "type": "string",
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."
        },
        "allocatedIpRange": {
          "description": "Optional. The name of the allocated IP address range for the private IP Cloud SQL instance. This name refers to an already allocated IP range address. If set, the instance IP address will be created in the allocated range. Note that this IP address range can't be modified after the instance is created. If you change the VPC when configuring connectivity settings for the migration job, this field is not relevant.",
          "type": "string"
        },
        "requireSsl": {
          "description": "Whether SSL connections over IP should be enforced or not.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ConditionalColumnSetValue": {
      "id": "ConditionalColumnSetValue",
      "type": "object",
      "description": "Options to configure rule type ConditionalColumnSetValue. The rule is used to transform the data which is being replicated/migrated. The rule filter field can refer to one or more entities. The rule scope can be one of: Column.",
      "properties": {
        "customFeatures": {
          "type": "object",
          "description": "Optional. Custom engine specific features.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "sourceNumericFilter": {
          "$ref": "SourceNumericFilter",
          "description": "Optional. Optional filter on source column precision and scale. Used for fixed point numbers such as NUMERIC/NUMBER data types."
        },
        "valueTransformation": {
          "$ref": "ValueTransformation",
          "description": "Required. Description of data transformation during migration."
        },
        "sourceTextFilter": {
          "$ref": "SourceTextFilter",
          "description": "Optional. Optional filter on source column length. Used for text based data types like varchar."
        }
      }
    },
    "PostgreSqlConnectionProfile": {
      "id": "PostgreSqlConnectionProfile",
      "type": "object",
      "description": "Specifies connection parameters required specifically for PostgreSQL databases.",
      "properties": {
        "host": {
          "type": "string",
          "description": "Required. The IP or hostname of the source PostgreSQL database."
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "staticIpConnectivity": {
          "description": "Static ip connectivity data (default, no additional details needed).",
          "$ref": "StaticIpConnectivity"
        },
        "port": {
          "description": "Required. The network port of the source PostgreSQL database.",
          "type": "integer",
          "format": "int32"
        },
        "privateServiceConnectConnectivity": {
          "description": "Private service connect connectivity.",
          "$ref": "PrivateServiceConnectConnectivity"
        },
        "ssl": {
          "description": "SSL configuration for the destination to connect to the source database.",
          "$ref": "SslConfig"
        },
        "networkArchitecture": {
          "type": "string",
          "description": "Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.",
          "readOnly": true,
          "enum": [
            "NETWORK_ARCHITECTURE_UNSPECIFIED",
            "NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER",
            "NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER"
          ],
          "enumDescriptions": [
            "",
            "Instance is in Cloud SQL's old producer network architecture.",
            "Instance is in Cloud SQL's new producer network architecture."
          ]
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
        },
        "passwordSet": {
          "type": "boolean",
          "description": "Output only. Indicates If this connection profile password is stored.",
          "readOnly": true
        }
      }
    },
    "EncryptionConfig": {
      "properties": {
        "kmsKeyName": {
          "type": "string",
          "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]"
        }
      },
      "type": "object",
      "id": "EncryptionConfig",
      "description": "EncryptionConfig describes the encryption config of a cluster that is encrypted with a CMEK (customer-managed encryption key)."
    },
    "CloudSqlSettings": {
      "id": "CloudSqlSettings",
      "description": "Settings for creating a Cloud SQL database instance.",
      "type": "object",
      "properties": {
        "userLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`."
        },
        "zone": {
          "description": "The Google Cloud Platform zone where your Cloud SQL database instance is located.",
          "type": "string"
        },
        "autoStorageIncrease": {
          "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.",
          "type": "boolean"
        },
        "rootPassword": {
          "type": "string",
          "description": "Input only. Initial root password."
        },
        "edition": {
          "type": "string",
          "description": "Optional. The edition of the given Cloud SQL instance.",
          "enum": [
            "EDITION_UNSPECIFIED",
            "ENTERPRISE",
            "ENTERPRISE_PLUS"
          ],
          "enumDescriptions": [
            "The instance did not specify the edition.",
            "The instance is an enterprise edition.",
            "The instance is an enterprise plus edition."
          ]
        },
        "dataDiskSizeGb": {
          "format": "int64",
          "type": "string",
          "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB."
        },
        "ipConfig": {
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled.",
          "$ref": "SqlIpConfig"
        },
        "dataCacheConfig": {
          "description": "Optional. Data cache is an optional feature available for Cloud SQL for MySQL Enterprise Plus edition only. For more information on data cache, see [Data cache overview](https://cloud.google.com/sql/help/mysql-data-cache) in Cloud SQL documentation.",
          "$ref": "DataCacheConfig"
        },
        "rootPasswordSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates If this connection profile root password is stored."
        },
        "cmekKeyName": {
          "type": "string",
          "description": "The KMS key name used for the csql instance."
        },
        "collation": {
          "type": "string",
          "description": "The Cloud SQL default instance level collation."
        },
        "availabilityType": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal availablility instance.",
            "Regional availability instance."
          ],
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "description": "Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)."
        },
        "storageAutoResizeLimit": {
          "format": "int64",
          "type": "string",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
        },
        "sourceId": {
          "type": "string",
          "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`"
        },
        "secondaryZone": {
          "type": "string",
          "description": "Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available)."
        },
        "dataDiskType": {
          "enumDescriptions": [
            "Unspecified.",
            "SSD disk.",
            "HDD disk."
          ],
          "type": "string",
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD"
          ],
          "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`."
        },
        "databaseFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }."
        },
        "databaseVersion": {
          "enumDescriptions": [
            "Unspecified version.",
            "MySQL 5.6.",
            "MySQL 5.7.",
            "MySQL 8.0.",
            "PostgreSQL 9.6.",
            "PostgreSQL 11.",
            "PostgreSQL 10.",
            "PostgreSQL 12.",
            "PostgreSQL 13.",
            "PostgreSQL 14.",
            "PostgreSQL 15."
          ],
          "type": "string",
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "MYSQL_8_0",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "POSTGRES_10",
            "POSTGRES_12",
            "POSTGRES_13",
            "POSTGRES_14",
            "POSTGRES_15"
          ],
          "description": "The database engine type and version."
        },
        "activationPolicy": {
          "type": "string",
          "enumDescriptions": [
            "unspecified policy.",
            "The instance is always up and running.",
            "The instance should never spin up."
          ],
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER"
          ],
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives."
        },
        "tier": {
          "type": "string",
          "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings)."
        }
      }
    },
    "SequenceEntity": {
      "description": "Sequence's parent is a schema.",
      "id": "SequenceEntity",
      "properties": {
        "startValue": {
          "type": "string",
          "format": "byte",
          "description": "Start number for the sequence represented as bytes to accommodate large. numbers"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "increment": {
          "type": "string",
          "description": "Increment value for the sequence.",
          "format": "int64"
        },
        "cache": {
          "type": "string",
          "description": "Indicates number of entries to cache / precreate.",
          "format": "int64"
        },
        "minValue": {
          "format": "byte",
          "type": "string",
          "description": "Minimum number for the sequence represented as bytes to accommodate large. numbers"
        },
        "maxValue": {
          "description": "Maximum number for the sequence represented as bytes to accommodate large. numbers",
          "format": "byte",
          "type": "string"
        },
        "cycle": {
          "type": "boolean",
          "description": "Indicates whether the sequence value should cycle through."
        }
      },
      "type": "object"
    },
    "DatabaseEntity": {
      "properties": {
        "entityType": {
          "type": "string",
          "description": "The type of the database entity (table, view, index, ...).",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "databaseFunction": {
          "$ref": "FunctionEntity",
          "description": "Function."
        },
        "materializedView": {
          "description": "Materialized view.",
          "$ref": "MaterializedViewEntity"
        },
        "synonym": {
          "$ref": "SynonymEntity",
          "description": "Synonym."
        },
        "database": {
          "description": "Database.",
          "$ref": "DatabaseInstanceEntity"
        },
        "storedProcedure": {
          "description": "Stored procedure.",
          "$ref": "StoredProcedureEntity"
        },
        "mappings": {
          "items": {
            "$ref": "EntityMapping"
          },
          "type": "array",
          "description": "Details about entity mappings. For source tree entities, this holds the draft entities which were generated by the mapping rules. For draft tree entities, this holds the source entities which were converted to form the draft entity. Destination entities will have no mapping details."
        },
        "databasePackage": {
          "$ref": "PackageEntity",
          "description": "Package."
        },
        "schema": {
          "description": "Schema.",
          "$ref": "SchemaEntity"
        },
        "parentEntity": {
          "type": "string",
          "description": "The full name of the parent entity (e.g. schema name)."
        },
        "view": {
          "$ref": "ViewEntity",
          "description": "View."
        },
        "udt": {
          "description": "UDT.",
          "$ref": "UDTEntity"
        },
        "shortName": {
          "type": "string",
          "description": "The short name (e.g. table name) of the entity."
        },
        "tree": {
          "enumDescriptions": [
            "Tree type unspecified.",
            "Tree of entities loaded from a source database.",
            "Tree of entities converted from the source tree using the mapping rules.",
            "Tree of entities observed on the destination database."
          ],
          "description": "The type of tree the entity belongs to.",
          "enum": [
            "TREE_TYPE_UNSPECIFIED",
            "SOURCE",
            "DRAFT",
            "DESTINATION"
          ],
          "type": "string"
        },
        "sequence": {
          "$ref": "SequenceEntity",
          "description": "Sequence."
        },
        "entityDdl": {
          "type": "array",
          "description": "Details about the entity DDL script. Multiple DDL scripts are provided for child entities such as a table entity will have one DDL for the table with additional DDLs for each index, constraint and such.",
          "items": {
            "$ref": "EntityDdl"
          }
        },
        "table": {
          "$ref": "TableEntity",
          "description": "Table."
        },
        "issues": {
          "items": {
            "$ref": "EntityIssue"
          },
          "type": "array",
          "description": "Details about the various issues found for the entity."
        }
      },
      "id": "DatabaseEntity",
      "type": "object",
      "description": "The base entity type for all the database related entities. The message contains the entity name, the name of its parent, the entity type, and the specific details per entity type."
    },
    "SourceTextFilter": {
      "description": "Filter for text-based data types like varchar.",
      "id": "SourceTextFilter",
      "properties": {
        "sourceMinLengthFilter": {
          "type": "string",
          "description": "Optional. The filter will match columns with length greater than or equal to this number.",
          "format": "int64"
        },
        "sourceMaxLengthFilter": {
          "description": "Optional. The filter will match columns with length smaller than or equal to this number.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuditLogConfig": {
      "type": "object",
      "id": "AuditLogConfig",
      "properties": {
        "logType": {
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "EntityMapping": {
      "properties": {
        "draftEntity": {
          "description": "Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column.",
          "type": "string"
        },
        "sourceType": {
          "description": "Type of source entity.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "draftType": {
          "description": "Type of draft entity.",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ],
          "type": "string"
        },
        "mappingLog": {
          "description": "Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity, such as a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along with the reason preventing them to do so.",
          "type": "array",
          "items": {
            "$ref": "EntityMappingLogEntry"
          }
        },
        "sourceEntity": {
          "description": "Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "EntityMapping",
      "description": "Details of the mappings of a database entity."
    },
    "SqlAclEntry": {
      "properties": {
        "label": {
          "type": "string",
          "description": "A label to identify this entry."
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.",
          "type": "string"
        },
        "ttl": {
          "description": "Input only. The time-to-leave of this access control entry.",
          "format": "google-duration",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "The allowlisted value for the access control list."
        }
      },
      "type": "object",
      "id": "SqlAclEntry",
      "description": "An entry for an Access Control list."
    },
    "ConstraintEntity": {
      "id": "ConstraintEntity",
      "properties": {
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "tableName": {
          "description": "Table which is associated with the constraint. In case the constraint is defined on a table, this field is left empty as this information is stored in parent_name. However, if constraint is defined on a view, this field stores the table name on which the view is defined.",
          "type": "string"
        },
        "tableColumns": {
          "type": "array",
          "description": "Table columns used as part of the Constraint, for example primary key constraint should list the columns which constitutes the key.",
          "items": {
            "type": "string"
          }
        },
        "referenceColumns": {
          "description": "Reference columns which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full names of referenced columns by the foreign key.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "referenceTable": {
          "type": "string",
          "description": "Reference table which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full name of the referenced table by the foreign key."
        },
        "type": {
          "type": "string",
          "description": "Type of constraint, for example unique, primary key, foreign key (currently only primary key is supported)."
        },
        "name": {
          "description": "The name of the table constraint.",
          "type": "string"
        }
      },
      "description": "Constraint is not used as an independent entity, it is retrieved as part of another entity such as Table or View.",
      "type": "object"
    },
    "DatabaseInstanceEntity": {
      "type": "object",
      "description": "DatabaseInstance acts as a parent entity to other database entities.",
      "id": "DatabaseInstanceEntity",
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        }
      }
    },
    "OracleConnectionProfile": {
      "description": "Specifies connection parameters required specifically for Oracle databases.",
      "properties": {
        "passwordSet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether a new password is included in the request."
        },
        "ssl": {
          "description": "SSL configuration for the connection to the source Oracle database. * Only `SERVER_ONLY` configuration is supported for Oracle SSL. * SSL is supported for Oracle versions 12 and above.",
          "$ref": "SslConfig"
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
        },
        "host": {
          "type": "string",
          "description": "Required. The IP or hostname of the source Oracle database."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The network port of the source Oracle database."
        },
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "databaseService": {
          "type": "string",
          "description": "Required. Database service for the Oracle connection."
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        }
      },
      "id": "OracleConnectionProfile",
      "type": "object"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte",
          "type": "string"
        },
        "bindings": {
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "auditConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy."
        }
      },
      "id": "Policy",
      "type": "object"
    },
    "EntityMove": {
      "description": "Options to configure rule type EntityMove. The rule is used to move an entity to a new schema. The rule filter field can refer to one or more entities. The rule scope can be one of: Table, Column, Constraint, Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT",
      "type": "object",
      "properties": {
        "newSchema": {
          "type": "string",
          "description": "Required. The new schema"
        }
      },
      "id": "EntityMove"
    },
    "SourceSqlChange": {
      "type": "object",
      "description": "Options to configure rule type SourceSqlChange. The rule is used to alter the sql code for database entities. The rule filter field can refer to one entity. The rule scope can be: StoredProcedure, Function, Trigger, View",
      "properties": {
        "sqlCode": {
          "description": "Required. Sql code for source (stored procedure, function, trigger or view)",
          "type": "string"
        }
      },
      "id": "SourceSqlChange"
    },
    "DoubleComparisonFilter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "description": "Required. Double compare value to be used",
          "format": "double"
        },
        "valueComparison": {
          "enumDescriptions": [
            "Value comparison unspecified.",
            "Value is smaller than the Compare value.",
            "Value is smaller or equal than the Compare value.",
            "Value is larger than the Compare value.",
            "Value is larger or equal than the Compare value."
          ],
          "enum": [
            "VALUE_COMPARISON_UNSPECIFIED",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_THAN",
            "VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_THAN",
            "VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN"
          ],
          "type": "string",
          "description": "Required. Relation between source value and compare value"
        }
      },
      "id": "DoubleComparisonFilter",
      "description": "Filter based on relation between source value and compare value of type double in ConditionalColumnSetValue"
    },
    "PrimaryInstanceSettings": {
      "id": "PrimaryInstanceSettings",
      "description": "Settings for the cluster's primary instance",
      "properties": {
        "labels": {
          "description": "Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "databaseFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used."
        },
        "machineConfig": {
          "description": "Configuration for the machines that host the underlying database engine.",
          "$ref": "MachineConfig"
        },
        "id": {
          "description": "Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \"[a-z0-9-]+\".",
          "type": "string"
        },
        "privateIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application."
        }
      },
      "type": "object"
    },
    "SetTablePrimaryKey": {
      "id": "SetTablePrimaryKey",
      "properties": {
        "primaryKeyColumns": {
          "description": "Required. List of column names for the primary key",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primaryKey": {
          "type": "string",
          "description": "Optional. Name for the primary key"
        }
      },
      "type": "object",
      "description": "Options to configure rule type SetTablePrimaryKey. The rule is used to specify the columns and name to configure/alter the primary key of a table. The rule filter field can refer to one entity. The rule scope can be one of: Table."
    },
    "SchemaEntity": {
      "type": "object",
      "description": "Schema typically has no parent entity, but can have a parent entity DatabaseInstance (for database engines which support it). For some database engines, the terms schema and user can be used interchangeably when they refer to a namespace or a collection of other database entities. Can store additional information which is schema specific.",
      "id": "SchemaEntity",
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        }
      }
    },
    "SslConfig": {
      "description": "SSL configuration information.",
      "type": "object",
      "properties": {
        "type": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified.",
            "Only 'ca_certificate' specified.",
            "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
          ],
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "SERVER_ONLY",
            "SERVER_CLIENT"
          ],
          "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
          "type": "string"
        },
        "clientKey": {
          "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory.",
          "type": "string"
        },
        "caCertificate": {
          "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory.",
          "type": "string"
        }
      },
      "id": "SslConfig"
    },
    "DataCacheConfig": {
      "type": "object",
      "properties": {
        "dataCacheEnabled": {
          "description": "Optional. Whether data cache is enabled for the instance.",
          "type": "boolean"
        }
      },
      "description": "Data cache is an optional feature available for Cloud SQL for MySQL Enterprise Plus edition only. For more information on data cache, see [Data cache overview](https://cloud.google.com/sql/help/mysql-data-cache) in Cloud SQL documentation.",
      "id": "DataCacheConfig"
    },
    "DescribeConversionWorkspaceRevisionsResponse": {
      "properties": {
        "revisions": {
          "description": "The list of conversion workspace revisions.",
          "items": {
            "$ref": "ConversionWorkspace"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for 'DescribeConversionWorkspaceRevisions' request.",
      "id": "DescribeConversionWorkspaceRevisionsResponse"
    },
    "ApplyJobDetails": {
      "description": "Details regarding an Apply background job.",
      "id": "ApplyJobDetails",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Output only. AIP-160 based filter used to specify the entities to apply",
          "readOnly": true,
          "type": "string"
        },
        "connectionProfile": {
          "readOnly": true,
          "description": "Output only. The connection profile which was used for the apply job.",
          "type": "string"
        }
      }
    },
    "DatabaseType": {
      "properties": {
        "engine": {
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ],
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle."
          ],
          "description": "The database engine.",
          "type": "string"
        },
        "provider": {
          "description": "The database provider.",
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ],
          "type": "string",
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ]
        }
      },
      "description": "A message defining the database engine and provider.",
      "type": "object",
      "id": "DatabaseType"
    },
    "StartMigrationJobRequest": {
      "properties": {
        "skipValidation": {
          "description": "Optional. Start the migration job without running prior configuration verification. Defaults to `false`.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "StartMigrationJobRequest",
      "description": "Request message for 'StartMigrationJob' request."
    },
    "UDTEntity": {
      "id": "UDTEntity",
      "type": "object",
      "description": "UDT's parent is a schema.",
      "properties": {
        "udtBody": {
          "type": "string",
          "description": "The SQL code which creates the udt body."
        },
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "udtSqlCode": {
          "description": "The SQL code which creates the udt.",
          "type": "string"
        }
      }
    },
    "DatabaseEngineInfo": {
      "properties": {
        "engine": {
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle."
          ],
          "type": "string",
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ],
          "description": "Required. Engine type."
        },
        "version": {
          "type": "string",
          "description": "Required. Engine version, for example \"12.c.1\"."
        }
      },
      "description": "The type and version of a source or destination database.",
      "type": "object",
      "id": "DatabaseEngineInfo"
    },
    "StaticServiceIpConnectivity": {
      "type": "object",
      "properties": {},
      "id": "StaticServiceIpConnectivity",
      "description": "Static IP address connectivity configured on service project."
    }
  },
  "version": "v1",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "privateConnections": {
              "methods": {
                "getIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "datamigration.projects.locations.privateConnections.getIamPolicy"
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "datamigration.projects.locations.privateConnections.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:testIamPermissions"
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of private connections.",
                      "required": true
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Order by fields for the result.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter expression that filters private connections listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list private connections created this year by specifying **createTime %gt; 2021-01-01T00:00:00.000000000Z**."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of private connections to return. If unspecified, at most 50 private connections that are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.privateConnections.list",
                  "description": "Retrieves a list of private connections in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "path": "v1/{+parent}/privateConnections",
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "path": "v1/{+parent}/privateConnections",
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datamigration.projects.locations.privateConnections.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string"
                    },
                    "skipValidation": {
                      "description": "Optional. If set to true, will skip validations.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "privateConnectionId": {
                      "description": "Required. The private connection identifier.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Creates a new private connection in a given project and location."
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "datamigration.projects.locations.privateConnections.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the private connection to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "description": "Gets details of a single private connection.",
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.privateConnections.get",
                  "path": "v1/{+name}"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "description": "Deletes a single Database Migration Service private connection.",
                  "path": "v1/{+name}",
                  "id": "datamigration.projects.locations.privateConnections.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the private connection to delete.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the connection profile resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets details of a single connection profile.",
                  "id": "datamigration.projects.locations.connectionProfiles.get",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "ConnectionProfile"
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query"
                    },
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "skipValidation": {
                      "type": "boolean",
                      "description": "Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent which owns this collection of connection profiles."
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/connectionProfiles",
                  "id": "datamigration.projects.locations.connectionProfiles.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "description": "Creates a new connection profile in a given project and location."
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "id": "datamigration.projects.locations.connectionProfiles.testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.patch",
                  "description": "Update the configuration of a single connection profile.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false. Only supported for Oracle connection profiles."
                    },
                    "skipValidation": {
                      "description": "Optional. Update the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "getIamPolicy": {
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "datamigration.projects.locations.connectionProfiles.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs.",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the connection profile resource to delete.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    },
                    "force": {
                      "description": "In case of force delete, the CloudSQL replica database is also deleted (only for CloudSQL connection profile).",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.setIamPolicy",
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "description": "A comma-separated list of fields to order results according to.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent which owns this collection of connection profiles.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A page token, received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of connection profiles to return. The service may return fewer than this value. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 are coerced to 1000."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter expression that filters connection profiles listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list connection profiles created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z**. You can also filter nested fields. For example, you could specify **mySql.username = %lt;my_username%gt;** to list all connection profiles configured to connect with a specific username."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "path": "v1/{+parent}/connectionProfiles",
                  "description": "Retrieves a list of all connection profiles in a given project and location.",
                  "id": "datamigration.projects.locations.connectionProfiles.list"
                }
              }
            },
            "migrationJobs": {
              "methods": {
                "restart": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.migrationJobs.restart",
                  "path": "v1/{+name}:restart",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to restart.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart",
                  "description": "Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch.",
                  "request": {
                    "$ref": "RestartMigrationJobRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "promote": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string",
                      "description": "Name of the migration job resource to promote."
                    }
                  },
                  "description": "Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote",
                  "path": "v1/{+name}:promote",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "PromoteMigrationJobRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.promote"
                },
                "generateTcpProxyScript": {
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+migrationJob}:generateTcpProxyScript",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateTcpProxyScript",
                  "response": {
                    "$ref": "TcpProxyScript"
                  },
                  "description": "Generate a TCP Proxy configuration script to configure a cloud-hosted VM running a TCP Proxy.",
                  "request": {
                    "$ref": "GenerateTcpProxyScriptRequest"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.generateTcpProxyScript",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "migrationJob": {
                      "type": "string",
                      "required": true,
                      "description": "Name of the migration job resource to generate the TCP Proxy script.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "name": {
                      "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates the parameters of a single migration job.",
                  "id": "datamigration.projects.locations.migrationJobs.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}"
                },
                "verify": {
                  "description": "Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Name of the migration job resource to verify.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}:verify",
                  "id": "datamigration.projects.locations.migrationJobs.verify",
                  "request": {
                    "$ref": "VerifyMigrationJobRequest"
                  }
                },
                "resume": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Name of the migration job resource to resume.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:resume",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.resume",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ResumeMigrationJobRequest"
                  },
                  "description": "Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase)."
                },
                "start": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Start an already created migration job.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "description": "Name of the migration job resource to start."
                    }
                  },
                  "request": {
                    "$ref": "StartMigrationJobRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:start",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start",
                  "id": "datamigration.projects.locations.migrationJobs.start"
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy"
                },
                "stop": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop",
                  "id": "datamigration.projects.locations.migrationJobs.stop",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to stop.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}:stop",
                  "request": {
                    "$ref": "StopMigrationJobRequest"
                  },
                  "description": "Stops a running migration job."
                },
                "create": {
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/migrationJobs",
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "parameters": {
                    "migrationJobId": {
                      "location": "query",
                      "description": "Required. The ID of the instance to create.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent which owns this collection of migration jobs.",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "description": "Creates a new migration job in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.create"
                },
                "generateSshScript": {
                  "path": "v1/{+migrationJob}:generateSshScript",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "migrationJob": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string",
                      "description": "Name of the migration job resource to generate the SSH script.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript",
                  "request": {
                    "$ref": "GenerateSshScriptRequest"
                  },
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SshScript"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.generateSshScript",
                  "description": "Generate a SSH configuration script to configure the reverse SSH connectivity."
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.setIamPolicy"
                },
                "get": {
                  "response": {
                    "$ref": "MigrationJob"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Required. Name of the migration job resource to get.",
                      "location": "path"
                    }
                  },
                  "id": "datamigration.projects.locations.migrationJobs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single migration job.",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "testIamPermissions": {
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "description": "The destination CloudSQL connection profile is always deleted with the migration job. In case of force delete, the destination CloudSQL replica database is also deleted.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. Name of the migration job resource to delete.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "description": "Deletes a single migration job.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "id": "datamigration.projects.locations.migrationJobs.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "path": "v1/{+parent}/migrationJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMigrationJobsResponse"
                  },
                  "description": "Lists migration jobs in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of migration jobs to return. The service may return fewer than this value. If unspecified, at most 50 migration jobs will be returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter expression that filters migration jobs listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list migration jobs created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **reverseSshConnectivity.vmIp = \"1.2.3.4\"** to select all migration jobs connecting through the specific SSH tunnel bastion."
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of migrationJobs.",
                      "location": "path"
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Sort the results based on the migration job name. Valid values are: \"name\", \"name asc\", and \"name desc\".",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The nextPageToken value received in the previous call to migrationJobs.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to migrationJobs.list must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.migrationJobs.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs"
                }
              }
            },
            "operations": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datamigration.projects.locations.operations.list",
                  "parameters": {
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The name of the operation's parent resource."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The standard list page size.",
                      "type": "integer"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "datamigration.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true
                    }
                  }
                },
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "id": "datamigration.projects.locations.operations.delete",
                  "path": "v1/{+name}"
                }
              }
            },
            "conversionWorkspaces": {
              "resources": {
                "mappingRules": {
                  "methods": {
                    "import": {
                      "request": {
                        "$ref": "ImportMappingRulesRequest"
                      },
                      "description": "Imports the mapping rules for a given conversion workspace. Supports various formats of external rules files.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.import",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules:import",
                      "path": "v1/{+parent}/mappingRules:import",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the conversion workspace resource to import the rules to in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                        }
                      }
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the mapping rule resource to get. Example: conversionWorkspaces/123/mappingRules/rule123 In order to retrieve a previous revision of the mapping rule, also provide the revision ID. Example: conversionWorkspace/123/mappingRules/rule123@c7cfa2a8c7cfa2a8c7cfa2a8c7cfa2a8",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+/mappingRules/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules/{mappingRulesId}",
                      "description": "Gets the details of a mapping rule.",
                      "response": {
                        "$ref": "MappingRule"
                      },
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.get"
                    },
                    "list": {
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the conversion workspace resource whose mapping rules are listed in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of rules to return. The service may return fewer than this value.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The nextPageToken value received in the previous call to mappingRules.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to mappingRules.list must match the call that provided the page token."
                        }
                      },
                      "path": "v1/{+parent}/mappingRules",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListMappingRulesResponse"
                      },
                      "httpMethod": "GET",
                      "description": "Lists the mapping rules for a specific conversion workspace."
                    },
                    "delete": {
                      "response": {
                        "$ref": "Empty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.delete",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules/{mappingRulesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                          "location": "query"
                        },
                        "name": {
                          "description": "Required. Name of the mapping rule resource to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+/mappingRules/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "description": "Deletes a single mapping rule.",
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE"
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "MappingRule"
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/mappingRules",
                      "parameters": {
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                        },
                        "mappingRuleId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The ID of the rule to create."
                        },
                        "parent": {
                          "description": "Required. The parent which owns this collection of mapping rules.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Creates a new mapping rule for a given conversion workspace.",
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "MappingRule"
                      }
                    }
                  }
                }
              },
              "methods": {
                "convert": {
                  "path": "v1/{+name}:convert",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a draft tree schema for the destination database.",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ConvertConversionWorkspaceRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:convert",
                  "id": "datamigration.projects.locations.conversionWorkspaces.convert",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Name of the conversion workspace resource to convert in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  }
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer"
                    },
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy"
                },
                "describeDatabaseEntities": {
                  "response": {
                    "$ref": "DescribeDatabaseEntitiesResponse"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeDatabaseEntities",
                  "httpMethod": "GET",
                  "path": "v1/{+conversionWorkspace}:describeDatabaseEntities",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Filter the returned entities based on AIP-160 standard."
                    },
                    "commitId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Request a specific commit ID. If not specified, the entities from the latest commit are returned."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum number of entities to return. The service may return fewer entities than the value specifies.",
                      "format": "int32"
                    },
                    "view": {
                      "description": "Optional. Results view based on AIP-157",
                      "enumDescriptions": [
                        "Unspecified view. Defaults to basic view.",
                        "Default view. Does not return DDLs or Issues.",
                        "Return full entity details including mappings, ddl and issues.",
                        "Top-most (Database, Schema) nodes which are returned contains summary details for their decendents such as the number of entities per type and issues rollups. When this view is used, only a single page of result is returned and the page_size property of the request is ignored. The returned page will only include the top-most node types."
                      ],
                      "location": "query",
                      "enum": [
                        "DATABASE_ENTITY_VIEW_UNSPECIFIED",
                        "DATABASE_ENTITY_VIEW_BASIC",
                        "DATABASE_ENTITY_VIEW_FULL",
                        "DATABASE_ENTITY_VIEW_ROOT_SUMMARY"
                      ],
                      "type": "string"
                    },
                    "conversionWorkspace": {
                      "required": true,
                      "description": "Required. Name of the conversion workspace resource whose database entities are described. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "tree": {
                      "location": "query",
                      "enumDescriptions": [
                        "Unspecified tree type.",
                        "The source database tree.",
                        "The draft database tree.",
                        "The destination database tree."
                      ],
                      "description": "Required. The tree to fetch.",
                      "enum": [
                        "DB_TREE_TYPE_UNSPECIFIED",
                        "SOURCE_TREE",
                        "DRAFT_TREE",
                        "DESTINATION_TREE"
                      ],
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The nextPageToken value received in the previous call to conversionWorkspace.describeDatabaseEntities, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspace.describeDatabaseEntities must match the call that provided the page token.",
                      "location": "query"
                    },
                    "uncommitted": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Whether to retrieve the latest committed version of the entities or the latest version. This field is ignored if a specific commit_id is specified."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeDatabaseEntities",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "description": "Describes the database entities tree for a specific conversion workspace and a specific tree type. Database entities are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are simple data objects describing the structure of the client database."
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "id": "datamigration.projects.locations.conversionWorkspaces.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "description": "Lists conversion workspaces in a given project and location.",
                  "id": "datamigration.projects.locations.conversionWorkspaces.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "response": {
                    "$ref": "ListConversionWorkspacesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent which owns this collection of conversion workspaces.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "The nextPageToken value received in the previous call to conversionWorkspaces.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspaces.list must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A filter expression that filters conversion workspaces listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list conversion workspaces created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **source.version = \"12.c.1\"** to select all conversion workspaces with source database version equal to 12.c.1."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of conversion workspaces to return. The service may return fewer than this value. If unspecified, at most 50 sets are returned."
                    }
                  }
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:setIamPolicy",
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "datamigration.projects.locations.conversionWorkspaces.setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "rollback": {
                  "request": {
                    "$ref": "RollbackConversionWorkspaceRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "description": "Required. Name of the conversion workspace resource to roll back to.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Rolls back a conversion workspace to the last committed snapshot.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:rollback",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:rollback",
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.conversionWorkspaces.rollback"
                },
                "apply": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Applies draft tree onto a specific destination database.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the conversion workspace resource for which to apply the draft tree. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:apply",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:apply",
                  "request": {
                    "$ref": "ApplyConversionWorkspaceRequest"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.apply",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "location": "query",
                      "description": "Force delete the conversion workspace, even if there's a running migration that is using the workspace.",
                      "type": "boolean"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource to delete."
                    }
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single conversion workspace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.delete"
                },
                "searchBackgroundJobs": {
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:searchBackgroundJobs",
                  "response": {
                    "$ref": "SearchBackgroundJobsResponse"
                  },
                  "description": "Searches/lists the background jobs for a specific conversion workspace. The background jobs are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are a way to expose the data plane jobs log.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "completedUntilTime": {
                      "format": "google-datetime",
                      "description": "Optional. If provided, only returns jobs that completed until (not including) the given timestamp.",
                      "location": "query",
                      "type": "string"
                    },
                    "conversionWorkspace": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource whose jobs are listed, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "location": "path"
                    },
                    "maxSize": {
                      "location": "query",
                      "description": "Optional. The maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 100 jobs are returned. The maximum value is 100; values above 100 are coerced to 100.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "returnMostRecentPerJobType": {
                      "description": "Optional. Whether or not to return just the most recent job per job type,",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+conversionWorkspace}:searchBackgroundJobs",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.searchBackgroundJobs"
                },
                "seed": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Imports a snapshot of the source database into the conversion workspace.",
                  "path": "v1/{+name}:seed",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.seed",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "SeedConversionWorkspaceRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:seed",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Name of the conversion workspace resource to seed with new database structure, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "required": true
                    }
                  }
                },
                "commit": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.commit",
                  "description": "Marks all the data in the conversion workspace as committed.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "CommitConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to commit.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}:commit",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:commit",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "description": "Updates the parameters of a single conversion workspace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ConversionWorkspace"
                  },
                  "parameters": {
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource."
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH"
                },
                "create": {
                  "request": {
                    "$ref": "ConversionWorkspace"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent which owns this collection of conversion workspaces.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    },
                    "conversionWorkspaceId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The ID of the conversion workspace to create."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.conversionWorkspaces.create",
                  "description": "Creates a new conversion workspace in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces"
                },
                "describeConversionWorkspaceRevisions": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "description": "Retrieves a list of committed revisions of a specific conversion workspace.",
                  "path": "v1/{+conversionWorkspace}:describeConversionWorkspaceRevisions",
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeConversionWorkspaceRevisions",
                  "response": {
                    "$ref": "DescribeConversionWorkspaceRevisionsResponse"
                  },
                  "parameters": {
                    "conversionWorkspace": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the conversion workspace resource whose revisions are listed. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    },
                    "commitId": {
                      "type": "string",
                      "description": "Optional. Optional filter to request a specific commit ID.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeConversionWorkspaceRevisions"
                },
                "get": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single conversion workspace.",
                  "response": {
                    "$ref": "ConversionWorkspace"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to get.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.conversionWorkspaces.get"
                }
              }
            }
          },
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "datamigration.projects.locations.list",
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              }
            },
            "fetchStaticIps": {
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "id": "datamigration.projects.locations.fetchStaticIps",
              "parameters": {
                "pageSize": {
                  "description": "Maximum number of IPs to return.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token, received from a previous `FetchStaticIps` call."
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true
                }
              },
              "path": "v1/{+name}:fetchStaticIps",
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Fetches a set of static IP addresses that need to be allowlisted by the customer when using the static-IP connectivity method."
            },
            "get": {
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "id": "datamigration.projects.locations.get",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "canonicalName": "Database Migration Service",
  "protocol": "rest"
}

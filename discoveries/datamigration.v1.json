{
  "ownerName": "Google",
  "schemas": {
    "ReverseSshConnectivity": {
      "properties": {
        "vmIp": {
          "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        },
        "vmPort": {
          "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "integer",
          "format": "int32"
        },
        "vpc": {
          "type": "string",
          "description": "The name of the VPC to peer with the Cloud SQL private network."
        },
        "vm": {
          "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        }
      },
      "id": "ReverseSshConnectivity",
      "description": "The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.",
      "type": "object"
    },
    "StopMigrationJobRequest": {
      "properties": {},
      "type": "object",
      "id": "StopMigrationJobRequest",
      "description": "Request message for 'StopMigrationJob' request."
    },
    "DatabaseEngineInfo": {
      "id": "DatabaseEngineInfo",
      "description": "The type and version of a source or destination database.",
      "type": "object",
      "properties": {
        "engine": {
          "type": "string",
          "description": "Required. Engine type.",
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ],
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle."
          ]
        },
        "version": {
          "type": "string",
          "description": "Required. Engine named version, for example 12.c.1."
        }
      }
    },
    "SqlAclEntry": {
      "id": "SqlAclEntry",
      "type": "object",
      "properties": {
        "label": {
          "description": "A label to identify this entry.",
          "type": "string"
        },
        "value": {
          "description": "The allowlisted value for the access control list.",
          "type": "string"
        },
        "ttl": {
          "description": "Input only. The time-to-leave of this access control entry.",
          "format": "google-duration",
          "type": "string"
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`."
        }
      },
      "description": "An entry for an Access Control list."
    },
    "RestartMigrationJobRequest": {
      "properties": {},
      "id": "RestartMigrationJobRequest",
      "type": "object",
      "description": "Request message for 'RestartMigrationJob' request."
    },
    "PrivateServiceConnectConnectivity": {
      "id": "PrivateServiceConnectConnectivity",
      "type": "object",
      "properties": {
        "serviceAttachment": {
          "type": "string",
          "description": "Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}"
        }
      },
      "description": "Private Service Connect connectivity (https://cloud.google.com/vpc/docs/private-service-connect#benefits-services)"
    },
    "PromoteMigrationJobRequest": {
      "id": "PromoteMigrationJobRequest",
      "description": "Request message for 'PromoteMigrationJob' request.",
      "properties": {},
      "type": "object"
    },
    "GenerateSshScriptRequest": {
      "id": "GenerateSshScriptRequest",
      "description": "Request message for 'GenerateSshScript' request.",
      "properties": {
        "vmPort": {
          "description": "The port that will be open on the bastion host.",
          "type": "integer",
          "format": "int32"
        },
        "vm": {
          "type": "string",
          "description": "Required. Bastion VM Instance name to use or to create."
        },
        "vmSelectionConfig": {
          "$ref": "VmSelectionConfig",
          "description": "The VM selection configuration"
        },
        "vmCreationConfig": {
          "description": "The VM creation configuration",
          "$ref": "VmCreationConfig"
        }
      },
      "type": "object"
    },
    "UserPassword": {
      "type": "object",
      "id": "UserPassword",
      "description": "The username/password for a database user. Used for specifying initial users at cluster creation time.",
      "properties": {
        "user": {
          "description": "The database username.",
          "type": "string"
        },
        "passwordSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates if the initial_user.password field has been set."
        },
        "password": {
          "description": "The initial password for the user.",
          "type": "string"
        }
      }
    },
    "ResumeMigrationJobRequest": {
      "properties": {},
      "type": "object",
      "description": "Request message for 'ResumeMigrationJob' request.",
      "id": "ResumeMigrationJobRequest"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "properties": {
        "version": {
          "format": "int32",
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        }
      },
      "id": "Policy"
    },
    "Operation": {
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "ConvertConversionWorkspaceRequest": {
      "properties": {
        "autoCommit": {
          "type": "boolean",
          "description": "Specifies whether the conversion workspace is to be committed automatically after the conversion."
        },
        "filter": {
          "type": "string",
          "description": "Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering."
        }
      },
      "type": "object",
      "description": "Request message for 'ConvertConversionWorkspace' request.",
      "id": "ConvertConversionWorkspaceRequest"
    },
    "SshScript": {
      "properties": {
        "script": {
          "type": "string",
          "description": "The ssh configuration script."
        }
      },
      "type": "object",
      "id": "SshScript",
      "description": "Response message for 'GenerateSshScript' request."
    },
    "CloudSqlSettings": {
      "properties": {
        "rootPasswordSet": {
          "type": "boolean",
          "description": "Output only. Indicates If this connection profile root password is stored.",
          "readOnly": true
        },
        "userLabels": {
          "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "autoStorageIncrease": {
          "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.",
          "type": "boolean"
        },
        "sourceId": {
          "type": "string",
          "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`"
        },
        "availabilityType": {
          "type": "string",
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "description": "Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).",
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal availablility instance.",
            "Regional availability instance."
          ]
        },
        "databaseFlags": {
          "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zone": {
          "type": "string",
          "description": "The Google Cloud Platform zone where your Cloud SQL database instance is located."
        },
        "tier": {
          "type": "string",
          "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings)."
        },
        "activationPolicy": {
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER"
          ],
          "type": "string",
          "enumDescriptions": [
            "unspecified policy.",
            "The instance is always up and running.",
            "The instance should never spin up."
          ]
        },
        "rootPassword": {
          "type": "string",
          "description": "Input only. Initial root password."
        },
        "collation": {
          "type": "string",
          "description": "The Cloud SQL default instance level collation."
        },
        "storageAutoResizeLimit": {
          "type": "string",
          "format": "int64",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
        },
        "cmekKeyName": {
          "description": "The KMS key name used for the csql instance.",
          "type": "string"
        },
        "databaseVersion": {
          "type": "string",
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "POSTGRES_10",
            "MYSQL_8_0",
            "POSTGRES_12",
            "POSTGRES_13",
            "POSTGRES_14"
          ],
          "enumDescriptions": [
            "Unspecified version.",
            "MySQL 5.6.",
            "MySQL 5.7.",
            "PostgreSQL 9.6.",
            "PostgreSQL 11.",
            "PostgreSQL 10.",
            "MySQL 8.0.",
            "PostgreSQL 12.",
            "PostgreSQL 13.",
            "PostgreSQL 14."
          ],
          "description": "The database engine type and version."
        },
        "dataDiskType": {
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "SSD disk.",
            "HDD disk."
          ],
          "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`.",
          "type": "string"
        },
        "dataDiskSizeGb": {
          "type": "string",
          "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.",
          "format": "int64"
        },
        "secondaryZone": {
          "description": "Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).",
          "type": "string"
        },
        "ipConfig": {
          "$ref": "SqlIpConfig",
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled."
        }
      },
      "type": "object",
      "description": "Settings for creating a Cloud SQL database instance.",
      "id": "CloudSqlSettings"
    },
    "MigrationJob": {
      "type": "object",
      "id": "MigrationJob",
      "properties": {
        "error": {
          "description": "Output only. The error details in case of state FAILED.",
          "$ref": "Status",
          "readOnly": true
        },
        "reverseSshConnectivity": {
          "$ref": "ReverseSshConnectivity",
          "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity."
        },
        "phase": {
          "readOnly": true,
          "description": "Output only. The current migration job phase.",
          "enumDescriptions": [
            "The phase of the migration job is unknown.",
            "The migration job is in the full dump phase.",
            "The migration job is CDC phase.",
            "The migration job is running the promote phase.",
            "Only RDS flow - waiting for source writes to stop",
            "Only RDS flow - the sources writes stopped, waiting for dump to begin"
          ],
          "type": "string",
          "enum": [
            "PHASE_UNSPECIFIED",
            "FULL_DUMP",
            "CDC",
            "PROMOTE_IN_PROGRESS",
            "WAITING_FOR_SOURCE_WRITES_TO_STOP",
            "PREPARING_THE_DUMP"
          ]
        },
        "sourceDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the source."
        },
        "conversionWorkspace": {
          "description": "The conversion workspace used by the migration.",
          "$ref": "ConversionWorkspaceInfo"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Output only. If the migration job is completed, the time when it was completed.",
          "type": "string",
          "readOnly": true
        },
        "filter": {
          "type": "string",
          "description": "This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "format": "google-datetime",
          "readOnly": true
        },
        "duration": {
          "readOnly": true,
          "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
          "type": "string",
          "format": "google-duration"
        },
        "updateTime": {
          "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "MAINTENANCE",
            "DRAFT",
            "CREATING",
            "NOT_STARTED",
            "RUNNING",
            "FAILED",
            "COMPLETED",
            "DELETING",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPDATING",
            "STARTING",
            "RESTARTING",
            "RESUMING"
          ],
          "enumDescriptions": [
            "The state of the migration job is unknown.",
            "The migration job is down for maintenance.",
            "The migration job is in draft mode and no resources are created.",
            "The migration job is being created.",
            "The migration job is created and not started.",
            "The migration job is running.",
            "The migration job failed.",
            "The migration job has been completed.",
            "The migration job is being deleted.",
            "The migration job is being stopped.",
            "The migration job is currently stopped.",
            "The migration job has been deleted.",
            "The migration job is being updated.",
            "The migration job is starting.",
            "The migration job is restarting.",
            "The migration job is resuming."
          ],
          "type": "string",
          "description": "The current migration job state."
        },
        "dumpFlags": {
          "$ref": "DumpFlags",
          "description": "The initial dump flags. This field and the \"dump_path\" field are mutually exclusive."
        },
        "staticIpConnectivity": {
          "$ref": "StaticIpConnectivity",
          "description": "static ip connectivity data (default, no additional details needed)."
        },
        "type": {
          "enumDescriptions": [
            "The type of the migration job is unknown.",
            "The migration job is a one time migration.",
            "The migration job is a continuous migration."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "ONE_TIME",
            "CONTINUOUS"
          ],
          "type": "string",
          "description": "Required. The migration job type."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`."
        },
        "displayName": {
          "description": "The migration job display name.",
          "type": "string"
        },
        "source": {
          "description": "Required. The resource name (URI) of the source connection profile.",
          "type": "string"
        },
        "destinationDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the destination."
        },
        "destination": {
          "description": "Required. The resource name (URI) of the destination connection profile.",
          "type": "string"
        },
        "dumpPath": {
          "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the \"dump_flags\" field are mutually exclusive.",
          "type": "string"
        },
        "vpcPeeringConnectivity": {
          "description": "The details of the VPC network that the source database is located in.",
          "$ref": "VpcPeeringConnectivity"
        }
      },
      "description": "Represents a Database Migration Service migration job object."
    },
    "AlloyDbConnectionProfile": {
      "properties": {
        "clusterId": {
          "description": "Required. The AlloyDB cluster ID that this connection profile is associated with.",
          "type": "string"
        },
        "settings": {
          "$ref": "AlloyDbSettings",
          "description": "Immutable. Metadata used to create the destination AlloyDB cluster."
        }
      },
      "type": "object",
      "id": "AlloyDbConnectionProfile",
      "description": "Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster."
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        }
      },
      "type": "object",
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse"
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "properties": {
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string"
        },
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object"
    },
    "PostgreSqlConnectionProfile": {
      "properties": {
        "networkArchitecture": {
          "enum": [
            "NETWORK_ARCHITECTURE_UNSPECIFIED",
            "NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER",
            "NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER"
          ],
          "enumDescriptions": [
            "",
            "Instance is in Cloud SQL's old producer network architecture.",
            "Instance is in Cloud SQL's new producer network architecture."
          ],
          "type": "string",
          "description": "Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.",
          "readOnly": true
        },
        "host": {
          "type": "string",
          "description": "Required. The IP or hostname of the source PostgreSQL database."
        },
        "staticIpConnectivity": {
          "$ref": "StaticIpConnectivity",
          "description": "Static ip connectivity data (default, no additional details needed)."
        },
        "passwordSet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates If this connection profile password is stored."
        },
        "cloudSqlId": {
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The network port of the source PostgreSQL database."
        },
        "ssl": {
          "$ref": "SslConfig",
          "description": "SSL configuration for the destination to connect to the source database."
        },
        "privateServiceConnectConnectivity": {
          "description": "Private service connect connectivity.",
          "$ref": "PrivateServiceConnectConnectivity"
        }
      },
      "type": "object",
      "id": "PostgreSqlConnectionProfile",
      "description": "Specifies connection parameters required specifically for PostgreSQL databases."
    },
    "DatabaseEntity": {
      "properties": {
        "databasePackage": {
          "description": "Package.",
          "$ref": "PackageEntity"
        },
        "schema": {
          "description": "Schema.",
          "$ref": "SchemaEntity"
        },
        "databaseFunction": {
          "description": "Function.",
          "$ref": "FunctionEntity"
        },
        "storedProcedure": {
          "$ref": "StoredProcedureEntity",
          "description": "Stored procedure."
        },
        "entityType": {
          "description": "The type of the database entity (table, view, index, ...).",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Material View."
          ],
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIAL_VIEW"
          ],
          "type": "string"
        },
        "shortName": {
          "description": "The short name (e.g. table name) of the entity.",
          "type": "string"
        },
        "table": {
          "description": "Table.",
          "$ref": "TableEntity"
        },
        "parentEntity": {
          "type": "string",
          "description": "The full name of the parent entity (e.g. schema name)."
        },
        "mappings": {
          "description": "Details about entity mappings. For source tree entities, this holds the draft entities which were generated by the mapping rules. For draft tree entities, this holds the source entities which were converted to form the draft entity. Destination entities will have no mapping details.",
          "type": "array",
          "items": {
            "$ref": "EntityMapping"
          }
        },
        "sequence": {
          "description": "Sequence.",
          "$ref": "SequenceEntity"
        },
        "synonym": {
          "$ref": "SynonymEntity",
          "description": "Synonym."
        },
        "view": {
          "description": "View.",
          "$ref": "ViewEntity"
        },
        "tree": {
          "enumDescriptions": [
            "Tree type unspecified.",
            "Tree of entities loaded from a source database.",
            "Tree of entities converted from the source tree using the mapping rules.",
            "Tree of entities observed on the destination database."
          ],
          "description": "The type of tree the entity belongs to.",
          "type": "string",
          "enum": [
            "TREE_TYPE_UNSPECIFIED",
            "SOURCE",
            "DRAFT",
            "DESTINATION"
          ]
        }
      },
      "description": "The base entity type for all the database related entities. The message contains the entity name, the name of its parent, the entity type, and the specific details per entity type.",
      "id": "DatabaseEntity",
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "Empty",
      "properties": {}
    },
    "BackgroundJobLogEntry": {
      "id": "BackgroundJobLogEntry",
      "properties": {
        "completionComment": {
          "description": "Job completion comment, such as how many entities were seeded, how many warnings were found during conversion, and similar information.",
          "type": "string"
        },
        "jobType": {
          "description": "The type of job that was executed.",
          "enum": [
            "BACKGROUND_JOB_TYPE_UNSPECIFIED",
            "BACKGROUND_JOB_TYPE_SOURCE_SEED",
            "BACKGROUND_JOB_TYPE_CONVERT",
            "BACKGROUND_JOB_TYPE_APPLY_DESTINATION",
            "BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified background job type.",
            "Job to seed from the source database.",
            "Job to convert the source database into a draft of the destination database.",
            "Job to apply the draft tree onto the destination.",
            "Job to import and convert mapping rules from an external source such as an ora2pg config file."
          ]
        },
        "finishTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the background job was finished."
        },
        "id": {
          "description": "The background job log entry ID.",
          "type": "string"
        },
        "completionState": {
          "description": "Job completion state, i.e. the final state after the job completed.",
          "type": "string",
          "enumDescriptions": [
            "The status is not specified. This state is used when job is not yet finished.",
            "Success.",
            "Error."
          ],
          "enum": [
            "JOB_COMPLETION_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "seedJobDetails": {
          "$ref": "SeedJobDetails",
          "description": "Seed job details."
        },
        "importRulesJobDetails": {
          "$ref": "ImportRulesJobDetails",
          "description": "Import rules job details."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the background job was started."
        },
        "requestAutocommit": {
          "type": "boolean",
          "description": "Whether the client requested the conversion workspace to be committed after a successful completion of the job."
        }
      },
      "type": "object",
      "description": "Execution log of a background job."
    },
    "ColumnEntity": {
      "id": "ColumnEntity",
      "type": "object",
      "properties": {
        "collation": {
          "description": "Collation override - instead of table level collation.",
          "type": "string"
        },
        "nullable": {
          "type": "boolean",
          "description": "Is the column nullable."
        },
        "dataType": {
          "description": "Column data type.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "defaultValue": {
          "description": "Default value of the column.",
          "type": "string"
        },
        "fractionalSecondsPrecision": {
          "type": "integer",
          "description": "Column fractional second precision - used for timestamp based datatypes.",
          "format": "int32"
        },
        "array": {
          "type": "boolean",
          "description": "Is the column of array type."
        },
        "length": {
          "description": "Column length - e.g. varchar (50).",
          "format": "int64",
          "type": "string"
        },
        "setValues": {
          "description": "Specifies the list of values allowed in the column. List is empty if setValues is not required.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "charset": {
          "description": "Charset override - instead of table level charset.",
          "type": "string"
        },
        "scale": {
          "type": "integer",
          "description": "Column scale - when relevant.",
          "format": "int32"
        },
        "name": {
          "description": "Column name.",
          "type": "string"
        },
        "udt": {
          "type": "boolean",
          "description": "Is the column a UDT."
        },
        "autoGenerated": {
          "description": "Is the column auto-generated/identity.",
          "type": "boolean"
        },
        "arrayLength": {
          "description": "If the column is array, of which length.",
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string",
          "description": "Comment associated with the column."
        },
        "precision": {
          "description": "Column precision - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "Column order in the table.",
          "format": "int32"
        }
      },
      "description": "Column is not used as an independent entity, it is retrieved as part of a Table entity."
    },
    "SynonymEntity": {
      "type": "object",
      "id": "SynonymEntity",
      "description": "Synonym's parent is a schema.",
      "properties": {
        "sourceEntity": {
          "description": "The name of the entity for which the synonym is being created (the source).",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "sourceType": {
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Material View."
          ],
          "type": "string",
          "description": "The type of the entity for which the synonym is being created (usually a table or a sequence).",
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIAL_VIEW"
          ]
        }
      }
    },
    "ConnectionProfile": {
      "description": "A connection profile definition.",
      "type": "object",
      "id": "ConnectionProfile",
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The state of the connection profile is unknown.",
            "The connection profile is in draft mode and fully editable.",
            "The connection profile is being created.",
            "The connection profile is ready.",
            "The connection profile is being updated.",
            "The connection profile is being deleted.",
            "The connection profile has been deleted.",
            "The last action on the connection profile failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "DELETED",
            "FAILED"
          ],
          "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED)."
        },
        "error": {
          "readOnly": true,
          "description": "Output only. The error details in case of state FAILED.",
          "$ref": "Status"
        },
        "mysql": {
          "description": "A MySQL database connection profile.",
          "$ref": "MySqlConnectionProfile"
        },
        "oracle": {
          "description": "An Oracle database connection profile.",
          "$ref": "OracleConnectionProfile"
        },
        "displayName": {
          "type": "string",
          "description": "The connection profile display name."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}."
        },
        "alloydb": {
          "$ref": "AlloyDbConnectionProfile",
          "description": "An AlloyDB cluster connection profile."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true
        },
        "postgresql": {
          "$ref": "PostgreSqlConnectionProfile",
          "description": "A PostgreSQL database connection profile."
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "format": "google-datetime"
        },
        "cloudsql": {
          "$ref": "CloudSqlConnectionProfile",
          "description": "A CloudSQL database connection profile."
        },
        "provider": {
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ],
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ],
          "description": "The database provider.",
          "type": "string"
        }
      }
    },
    "VerifyMigrationJobRequest": {
      "type": "object",
      "description": "Request message for 'VerifyMigrationJob' request.",
      "properties": {},
      "id": "VerifyMigrationJobRequest"
    },
    "StoredProcedureEntity": {
      "type": "object",
      "id": "StoredProcedureEntity",
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the stored procedure."
        }
      },
      "description": "Stored procedure's parent is a schema."
    },
    "PrivateConnectivity": {
      "properties": {
        "privateConnection": {
          "type": "string",
          "description": "Required. The resource name (URI) of the private connection."
        }
      },
      "id": "PrivateConnectivity",
      "description": "Private Connectivity.",
      "type": "object"
    },
    "EntityMappingLogEntry": {
      "description": "A single record of a rule which was used for a mapping.",
      "type": "object",
      "id": "EntityMappingLogEntry",
      "properties": {
        "ruleRevisionId": {
          "description": "Rule revision ID.",
          "type": "string"
        },
        "mappingComment": {
          "type": "string",
          "description": "Comment."
        },
        "ruleId": {
          "type": "string",
          "description": "Which rule caused this log entry."
        }
      }
    },
    "AlloyDbSettings": {
      "description": "Settings for creating an AlloyDB cluster.",
      "id": "AlloyDbSettings",
      "properties": {
        "primaryInstanceSettings": {
          "$ref": "PrimaryInstanceSettings"
        },
        "initialUser": {
          "$ref": "UserPassword",
          "description": "Required. Input only. Initial user to setup during cluster creation. Required."
        },
        "labels": {
          "description": "Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "vpcNetwork": {
          "type": "string",
          "description": "Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \"projects/{project_number}/global/networks/{network_id}\". This is required to create a cluster."
        }
      },
      "type": "object"
    },
    "RulesFile": {
      "type": "object",
      "id": "RulesFile",
      "description": "Details of a single rules file.",
      "properties": {
        "rulesSourceFilename": {
          "type": "string",
          "description": "The filename of the rules that needs to be converted. The filename is used mainly so that future logs of the import rules job contain it, and can therefore be searched by it."
        },
        "rulesContent": {
          "description": "The text content of the rules that needs to be converted.",
          "type": "string"
        }
      }
    },
    "VpcPeeringConnectivity": {
      "description": "The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.",
      "id": "VpcPeeringConnectivity",
      "type": "object",
      "properties": {
        "vpc": {
          "type": "string",
          "description": "The name of the VPC network to peer with the Cloud SQL private network."
        }
      }
    },
    "SchemaEntity": {
      "properties": {
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "description": "Schema typically has no parent entity, but can have a parent entity DatabaseInstance (for database engines which support it). For some database engines, the terms schema and user can be used interchangeably when they refer to a namespace or a collection of other database entities. Can store additional information which is schema specific.",
      "id": "SchemaEntity",
      "type": "object"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "id": "Expr",
      "type": "object"
    },
    "FunctionEntity": {
      "id": "FunctionEntity",
      "properties": {
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features."
        },
        "sqlCode": {
          "description": "The SQL code which creates the function.",
          "type": "string"
        }
      },
      "description": "Function's parent is a schema.",
      "type": "object"
    },
    "ApplyConversionWorkspaceRequest": {
      "description": "Request message for 'ApplyConversionWorkspace' request.",
      "id": "ApplyConversionWorkspaceRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "Filter which entities to apply. Leaving this field empty will apply all of the entities. Supports Google AIP 160 based filtering."
        },
        "connectionProfile": {
          "description": "Fully qualified (Uri) name of the destination connection profile.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "PrimaryInstanceSettings": {
      "description": "Settings for the cluster's primary instance",
      "type": "object",
      "properties": {
        "databaseFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used."
        },
        "machineConfig": {
          "$ref": "MachineConfig",
          "description": "Configuration for the machines that host the underlying database engine."
        },
        "privateIp": {
          "type": "string",
          "description": "Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application.",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs."
        },
        "id": {
          "type": "string",
          "description": "Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \"[a-z0-9-]+\"."
        }
      },
      "id": "PrimaryInstanceSettings"
    },
    "ConversionWorkspaceInfo": {
      "type": "object",
      "description": "A conversion workspace's version.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name (URI) of the conversion workspace."
        },
        "commitId": {
          "type": "string",
          "description": "The commit ID of the conversion workspace."
        }
      },
      "id": "ConversionWorkspaceInfo"
    },
    "SqlIpConfig": {
      "id": "SqlIpConfig",
      "type": "object",
      "properties": {
        "requireSsl": {
          "description": "Whether SSL connections over IP should be enforced or not.",
          "type": "boolean"
        },
        "enableIpv4": {
          "description": "Whether the instance should be assigned an IPv4 address or not.",
          "type": "boolean"
        },
        "authorizedNetworks": {
          "type": "array",
          "items": {
            "$ref": "SqlAclEntry"
          },
          "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`)."
        },
        "privateNetwork": {
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.",
          "type": "string"
        }
      },
      "description": "IP Management configuration."
    },
    "ConstraintEntity": {
      "description": "Constraint is not used as an independent entity, it is retrieved as part of another entity such as Table or View.",
      "type": "object",
      "id": "ConstraintEntity",
      "properties": {
        "type": {
          "description": "Type of constraint, for example unique, primary key, foreign key (currently only primary key is supported).",
          "type": "string"
        },
        "referenceColumns": {
          "description": "Reference columns which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full names of referenced columns by the foreign key.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tableColumns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Table columns used as part of the Constraint, for example primary key constraint should list the columns which constitutes the key."
        },
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "referenceTable": {
          "description": "Reference table which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full name of the referenced table by the foreign key.",
          "type": "string"
        },
        "tableName": {
          "type": "string",
          "description": "Table which is associated with the constraint. In case the constraint is defined on a table, this field is left empty as this information is stored in parent_name. However, if constraint is defined on a view, this field stores the table name on which the view is defined."
        },
        "name": {
          "description": "The name of the table constraint.",
          "type": "string"
        }
      }
    },
    "VmSelectionConfig": {
      "properties": {
        "vmZone": {
          "type": "string",
          "description": "Required. The Google Cloud Platform zone the VM is located."
        }
      },
      "description": "VM selection configuration message",
      "id": "VmSelectionConfig",
      "type": "object"
    },
    "ImportMappingRulesRequest": {
      "type": "object",
      "properties": {
        "autoCommit": {
          "type": "boolean",
          "description": "Should the conversion workspace be committed automatically after the import operation."
        },
        "rulesFormat": {
          "description": "The format of the rules content file.",
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ],
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ],
          "type": "string"
        },
        "rulesFiles": {
          "items": {
            "$ref": "RulesFile"
          },
          "description": "One or more rules files.",
          "type": "array"
        }
      },
      "description": "Request message for 'ImportMappingRules' request.",
      "id": "ImportMappingRulesRequest"
    },
    "DescribeDatabaseEntitiesResponse": {
      "properties": {
        "databaseEntities": {
          "type": "array",
          "description": "The list of database entities for the conversion workspace.",
          "items": {
            "$ref": "DatabaseEntity"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for 'DescribeDatabaseEntities' request.",
      "id": "DescribeDatabaseEntitiesResponse"
    },
    "DumpFlags": {
      "properties": {
        "dumpFlags": {
          "type": "array",
          "description": "The flags for the initial dump.",
          "items": {
            "$ref": "DumpFlag"
          }
        }
      },
      "type": "object",
      "description": "Dump flags definition.",
      "id": "DumpFlags"
    },
    "StaticIpConnectivity": {
      "properties": {},
      "id": "StaticIpConnectivity",
      "type": "object",
      "description": "The source database will allow incoming connections from the public IP of the destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required."
    },
    "MachineConfig": {
      "description": "MachineConfig describes the configuration of a machine.",
      "properties": {
        "cpuCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of CPU's in the VM instance."
        }
      },
      "type": "object",
      "id": "MachineConfig"
    },
    "CancelOperationRequest": {
      "properties": {},
      "type": "object",
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation."
    },
    "CloudSqlConnectionProfile": {
      "description": "Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.",
      "id": "CloudSqlConnectionProfile",
      "type": "object",
      "properties": {
        "publicIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Cloud SQL database instance's public IP."
        },
        "settings": {
          "$ref": "CloudSqlSettings",
          "description": "Immutable. Metadata used to create the destination Cloud SQL database."
        },
        "cloudSqlId": {
          "type": "string",
          "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with.",
          "readOnly": true
        },
        "additionalPublicIp": {
          "description": "Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).",
          "readOnly": true,
          "type": "string"
        },
        "privateIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Cloud SQL database instance's private IP."
        }
      }
    },
    "StartMigrationJobRequest": {
      "type": "object",
      "properties": {},
      "id": "StartMigrationJobRequest",
      "description": "Request message for 'StartMigrationJob' request."
    },
    "DatabaseType": {
      "description": "A message defining the database engine and provider.",
      "id": "DatabaseType",
      "properties": {
        "provider": {
          "description": "The database provider.",
          "type": "string",
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ],
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ]
        },
        "engine": {
          "type": "string",
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle."
          ],
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ],
          "description": "The database engine."
        }
      },
      "type": "object"
    },
    "DescribeConversionWorkspaceRevisionsResponse": {
      "type": "object",
      "description": "Response message for 'DescribeConversionWorkspaceRevisions' request.",
      "properties": {
        "revisions": {
          "items": {
            "$ref": "ConversionWorkspace"
          },
          "description": "The list of conversion workspace revisions.",
          "type": "array"
        }
      },
      "id": "DescribeConversionWorkspaceRevisionsResponse"
    },
    "SeedConversionWorkspaceRequest": {
      "type": "object",
      "properties": {
        "autoCommit": {
          "type": "boolean",
          "description": "Should the conversion workspace be committed automatically after the seed operation."
        },
        "sourceConnectionProfile": {
          "description": "Fully qualified (Uri) name of the source connection profile.",
          "type": "string"
        },
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Fully qualified (Uri) name of the destination connection profile."
        }
      },
      "id": "SeedConversionWorkspaceRequest",
      "description": "Request message for 'SeedConversionWorkspace' request."
    },
    "VmCreationConfig": {
      "id": "VmCreationConfig",
      "properties": {
        "subnet": {
          "description": "The subnet name the vm needs to be created in.",
          "type": "string"
        },
        "vmZone": {
          "description": "The Google Cloud Platform zone to create the VM in.",
          "type": "string"
        },
        "vmMachineType": {
          "description": "Required. VM instance machine type to create.",
          "type": "string"
        }
      },
      "description": "VM creation configuration message",
      "type": "object"
    },
    "VpcPeeringConfig": {
      "id": "VpcPeeringConfig",
      "description": "The VPC peering configuration is used to create VPC peering with the consumer's VPC.",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29)"
        },
        "vpcName": {
          "description": "Required. Fully qualified name of the VPC that Database Migration Service will peer to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse"
    },
    "ImportRulesJobDetails": {
      "id": "ImportRulesJobDetails",
      "type": "object",
      "properties": {
        "files": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "File names used for the import rules job."
        },
        "fileFormat": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ],
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ],
          "description": "The requested file format."
        }
      },
      "description": "Details regarding an Import Rules background job."
    },
    "CommitConversionWorkspaceRequest": {
      "id": "CommitConversionWorkspaceRequest",
      "properties": {
        "commitName": {
          "type": "string",
          "description": "Optional. Optional name of the commit."
        }
      },
      "description": "Request message for 'CommitConversionWorkspace' request.",
      "type": "object"
    },
    "ListPrivateConnectionsResponse": {
      "id": "ListPrivateConnectionsResponse",
      "description": "Response message for 'ListPrivateConnections' request.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "privateConnections": {
          "items": {
            "$ref": "PrivateConnection"
          },
          "type": "array",
          "description": "List of private connections."
        }
      },
      "type": "object"
    },
    "FetchStaticIpsResponse": {
      "type": "object",
      "description": "Response message for a 'FetchStaticIps' request.",
      "id": "FetchStaticIpsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "staticIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of static IPs."
        }
      }
    },
    "EntityMapping": {
      "id": "EntityMapping",
      "description": "Details of the mappings of a database entity.",
      "type": "object",
      "properties": {
        "sourceEntity": {
          "type": "string",
          "description": "Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column."
        },
        "draftEntity": {
          "type": "string",
          "description": "Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column."
        },
        "mappingLog": {
          "items": {
            "$ref": "EntityMappingLogEntry"
          },
          "type": "array",
          "description": "Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity, such as a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along with the reason preventing them to do so."
        }
      }
    },
    "ConversionWorkspace": {
      "id": "ConversionWorkspace",
      "type": "object",
      "description": "The main conversion workspace resource entity.",
      "properties": {
        "globalSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true",
          "type": "object"
        },
        "latestCommitTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the workspace was committed."
        },
        "destination": {
          "$ref": "DatabaseEngineInfo",
          "description": "Required. The destination engine details."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the workspace resource was last updated."
        },
        "hasUncommittedChanges": {
          "type": "boolean",
          "description": "Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed).",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name for the workspace.",
          "type": "string"
        },
        "name": {
          "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The timestamp when the workspace resource was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "source": {
          "$ref": "DatabaseEngineInfo",
          "description": "Required. The source engine details."
        },
        "latestCommitId": {
          "readOnly": true,
          "description": "Output only. The latest commit ID.",
          "type": "string"
        }
      }
    },
    "ListConnectionProfilesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array",
          "description": "The response list of connection profiles."
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response message for 'ListConnectionProfiles' request.",
      "id": "ListConnectionProfilesResponse"
    },
    "ViewEntity": {
      "properties": {
        "constraints": {
          "type": "array",
          "description": "View constraints.",
          "items": {
            "$ref": "ConstraintEntity"
          }
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom engine specific features."
        },
        "sqlCode": {
          "description": "The SQL code which creates the view.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ViewEntity",
      "description": "View's parent is a schema."
    },
    "TableEntity": {
      "id": "TableEntity",
      "description": "Table's parent is a schema.",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment associated with the table."
        },
        "columns": {
          "items": {
            "$ref": "ColumnEntity"
          },
          "description": "Table columns.",
          "type": "array"
        },
        "customFeatures": {
          "type": "object",
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "indices": {
          "type": "array",
          "description": "Table indices.",
          "items": {
            "$ref": "IndexEntity"
          }
        },
        "triggers": {
          "items": {
            "$ref": "TriggerEntity"
          },
          "description": "Table triggers.",
          "type": "array"
        },
        "constraints": {
          "items": {
            "$ref": "ConstraintEntity"
          },
          "description": "Table constraints.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchBackgroundJobsResponse": {
      "description": "Response message for 'SearchBackgroundJobs' request.",
      "id": "SearchBackgroundJobsResponse",
      "type": "object",
      "properties": {
        "jobs": {
          "items": {
            "$ref": "BackgroundJobLogEntry"
          },
          "type": "array",
          "description": "The list of conversion workspace mapping rules."
        }
      }
    },
    "GoogleCloudClouddmsV1OperationMetadata": {
      "properties": {
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "statusMessage": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true
        }
      },
      "id": "GoogleCloudClouddmsV1OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object"
    },
    "SeedJobDetails": {
      "description": "Details regarding a Seed background job.",
      "type": "object",
      "properties": {
        "connectionProfile": {
          "type": "string",
          "description": "The connection profile which was used for the seed job."
        }
      },
      "id": "SeedJobDetails"
    },
    "MySqlConnectionProfile": {
      "properties": {
        "host": {
          "description": "Required. The IP or hostname of the source MySQL database.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service."
        },
        "passwordSet": {
          "description": "Output only. Indicates If this connection profile password is stored.",
          "type": "boolean",
          "readOnly": true
        },
        "ssl": {
          "$ref": "SslConfig",
          "description": "SSL configuration for the destination to connect to the source database."
        },
        "port": {
          "format": "int32",
          "description": "Required. The network port of the source MySQL database.",
          "type": "integer"
        },
        "cloudSqlId": {
          "type": "string",
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
        }
      },
      "description": "Specifies connection parameters required specifically for MySQL databases.",
      "id": "MySqlConnectionProfile",
      "type": "object"
    },
    "ListMigrationJobsResponse": {
      "description": "Response message for 'ListMigrationJobs' request.",
      "id": "ListMigrationJobsResponse",
      "type": "object",
      "properties": {
        "migrationJobs": {
          "type": "array",
          "description": "The list of migration jobs objects.",
          "items": {
            "$ref": "MigrationJob"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "SslConfig": {
      "properties": {
        "clientKey": {
          "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory.",
          "type": "string"
        },
        "caCertificate": {
          "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Only 'ca_certificate' specified.",
            "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
          ],
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "SERVER_ONLY",
            "SERVER_CLIENT"
          ],
          "readOnly": true,
          "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'."
        }
      },
      "type": "object",
      "description": "SSL configuration information.",
      "id": "SslConfig"
    },
    "Status": {
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status"
    },
    "Location": {
      "id": "Location",
      "type": "object",
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "description": "A resource that represents Google Cloud Platform location."
    },
    "OracleConnectionProfile": {
      "description": "Specifies connection parameters required specifically for Oracle databases.",
      "type": "object",
      "properties": {
        "forwardSshConnectivity": {
          "$ref": "ForwardSshTunnelConnectivity",
          "description": "Forward SSH tunnel connectivity."
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "passwordSet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether a new password is included in the request."
        },
        "port": {
          "type": "integer",
          "description": "Required. The network port of the source Oracle database.",
          "format": "int32"
        },
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        },
        "host": {
          "description": "Required. The IP or hostname of the source Oracle database.",
          "type": "string"
        },
        "databaseService": {
          "type": "string",
          "description": "Required. Database service for the Oracle connection."
        },
        "privateConnectivity": {
          "$ref": "PrivateConnectivity",
          "description": "Private connectivity."
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        }
      },
      "id": "OracleConnectionProfile"
    },
    "DumpFlag": {
      "id": "DumpFlag",
      "description": "Dump flag definition.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the flag."
        },
        "name": {
          "type": "string",
          "description": "The name of the flag"
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      },
      "type": "object",
      "description": "Request message for `SetIamPolicy` method."
    },
    "ListConversionWorkspacesResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "conversionWorkspaces": {
          "description": "The list of conversion workspace objects.",
          "type": "array",
          "items": {
            "$ref": "ConversionWorkspace"
          }
        }
      },
      "description": "Response message for 'ListConversionWorkspaces' request.",
      "id": "ListConversionWorkspacesResponse"
    },
    "Binding": {
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "members": {
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      },
      "id": "Binding"
    },
    "ForwardSshTunnelConnectivity": {
      "id": "ForwardSshTunnelConnectivity",
      "description": "Forward SSH Tunnel connectivity.",
      "properties": {
        "privateKey": {
          "type": "string",
          "description": "Input only. SSH private key."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port for the SSH tunnel, default value is 22."
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        },
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MigrationJobVerificationError": {
      "id": "MigrationJobVerificationError",
      "type": "object",
      "description": "Error message of a verification Migration job.",
      "properties": {
        "errorMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A formatted message with further details about the error and a CTA."
        },
        "errorCode": {
          "description": "Output only. An instance of ErrorCode specifying the error that occurred.",
          "type": "string",
          "enumDescriptions": [
            "An unknown error occurred",
            "We failed to connect to one of the connection profile.",
            "We failed to authenticate to one of the connection profile.",
            "One of the involved connection profiles has an invalid configuration.",
            "The versions of the source and the destination are incompatible.",
            "The types of the source and the destination are incompatible.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions.",
            "Unsupported migration type.",
            "Invalid RDS logical replication.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "The table definition is not support due to missing primary key or replica identity.",
            "The definer is not supported.",
            "Migration is already running at the time of restart request.",
            "The source has tables with limited support. E.g. PostgreSQL tables without primary keys."
          ],
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "AUTHENTICATION_FAILURE",
            "INVALID_CONNECTION_PROFILE_CONFIG",
            "VERSION_INCOMPATIBILITY",
            "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "UNSUPPORTED_MIGRATION_TYPE",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "UNSUPPORTED_GTID_MODE",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "CANT_RESTART_RUNNING_MIGRATION",
            "TABLES_WITH_LIMITED_SUPPORT"
          ],
          "readOnly": true
        },
        "errorDetailMessage": {
          "description": "Output only. A specific detailed error message, if supplied by the engine.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StaticServiceIpConnectivity": {
      "properties": {},
      "type": "object",
      "id": "StaticServiceIpConnectivity",
      "description": "Static IP address connectivity configured on service project."
    },
    "IndexEntity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the index."
        },
        "unique": {
          "type": "boolean",
          "description": "Boolean value indicating whether the index is unique."
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features.",
          "type": "object"
        },
        "type": {
          "type": "string",
          "description": "Type of index, for example B-TREE."
        },
        "tableColumns": {
          "type": "array",
          "description": "Table columns used as part of the Index, for example B-TREE index should list the columns which constitutes the index.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Index is not used as an independent entity, it is retrieved as part of a Table entity.",
      "id": "IndexEntity"
    },
    "TriggerEntity": {
      "id": "TriggerEntity",
      "description": "Trigger is not used as an independent entity, it is retrieved as part of a Table entity.",
      "properties": {
        "triggerType": {
          "description": "Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.",
          "type": "string"
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features.",
          "type": "object"
        },
        "triggeringEvents": {
          "type": "array",
          "description": "The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.",
          "items": {
            "type": "string"
          }
        },
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the trigger."
        },
        "name": {
          "description": "The name of the trigger.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateConnection": {
      "type": "object",
      "description": "The PrivateConnection resource is used to establish private connectivity with the customer's network.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last update time of the resource.",
          "readOnly": true
        },
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. The error details in case of state FAILED."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The create time of the resource.",
          "type": "string"
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The state of the private connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE",
            "DELETED"
          ],
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state.",
            "The private connection has been deleted."
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The private connection display name."
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "vpcPeeringConfig": {
          "description": "VPC peering configuration.",
          "$ref": "VpcPeeringConfig"
        }
      },
      "id": "PrivateConnection"
    },
    "SequenceEntity": {
      "description": "Sequence's parent is a schema.",
      "properties": {
        "startValue": {
          "format": "byte",
          "type": "string",
          "description": "Start number for the sequence represented as bytes to accommodate large. numbers"
        },
        "increment": {
          "type": "string",
          "format": "int64",
          "description": "Increment value for the sequence."
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "cycle": {
          "description": "Indicates whether the sequence value should cycle through.",
          "type": "boolean"
        },
        "cache": {
          "description": "Indicates number of entries to cache / precreate.",
          "type": "string",
          "format": "int64"
        },
        "minValue": {
          "description": "Minimum number for the sequence represented as bytes to accommodate large. numbers",
          "type": "string",
          "format": "byte"
        },
        "maxValue": {
          "format": "byte",
          "description": "Maximum number for the sequence represented as bytes to accommodate large. numbers",
          "type": "string"
        }
      },
      "id": "SequenceEntity",
      "type": "object"
    },
    "RollbackConversionWorkspaceRequest": {
      "id": "RollbackConversionWorkspaceRequest",
      "description": "Request message for 'RollbackConversionWorkspace' request.",
      "properties": {},
      "type": "object"
    },
    "PackageEntity": {
      "type": "object",
      "description": "Package's parent is a schema.",
      "id": "PackageEntity",
      "properties": {
        "packageSqlCode": {
          "description": "The SQL code which creates the package.",
          "type": "string"
        },
        "customFeatures": {
          "description": "Custom engine specific features.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "packageBody": {
          "description": "The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "version": "v1",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "id": "datamigration:v1",
  "name": "datamigration",
  "protocol": "rest",
  "mtlsRootUrl": "https://datamigration.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "rootUrl": "https://datamigration.googleapis.com/",
  "revision": "20230215",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "baseUrl": "https://datamigration.googleapis.com/",
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "fetchStaticIps": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Fetches a set of static IP addresses that need to be allowlisted by the customer when using the static-IP connectivity method.",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A page token, received from a previous `FetchStaticIps` call.",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`.",
                  "location": "path",
                  "required": true
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Maximum number of IPs to return.",
                  "type": "integer",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "id": "datamigration.projects.locations.fetchStaticIps",
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "path": "v1/{+name}:fetchStaticIps",
              "httpMethod": "GET"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "datamigration.projects.locations.list",
              "flatPath": "v1/projects/{projectsId}/locations"
            },
            "get": {
              "id": "datamigration.projects.locations.get",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "privateConnections": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.privateConnections.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/privateConnections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "parameters": {
                    "pageSize": {
                      "description": "Maximum number of private connections to return. If unspecified, at most 50 private connections that are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "A filter expression that filters private connections listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list private connections created this year by specifying **createTime %gt; 2021-01-01T00:00:00.000000000Z**.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent that owns the collection of private connections.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Retrieves a list of private connections in a given project and location."
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.privateConnections.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single private connection.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "description": "Required. The name of the private connection to get.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "PrivateConnection"
                  }
                },
                "create": {
                  "parameters": {
                    "skipValidation": {
                      "description": "Optional. If set to true, will skip validations.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "privateConnectionId": {
                      "description": "Required. The private connection identifier.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}/privateConnections",
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.privateConnections.create",
                  "httpMethod": "POST",
                  "description": "Creates a new private connection in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.privateConnections.delete",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the private connection to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "description": "Deletes a single Database Migration Service private connection.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                }
              }
            },
            "migrationJobs": {
              "methods": {
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "id": "datamigration.projects.locations.migrationJobs.testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "datamigration.projects.locations.migrationJobs.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "force": {
                      "location": "query",
                      "description": "The destination CloudSQL connection profile is always deleted with the migration job. In case of force delete, the destination CloudSQL replica database is also deleted.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Required. Name of the migration job resource to delete.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Deletes a single migration job.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE"
                },
                "list": {
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.migrationJobs.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "path": "v1/{+parent}/migrationJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListMigrationJobsResponse"
                  },
                  "description": "Lists migration jobs in a given project and location.",
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Sort the results based on the migration job name. Valid values are: \"name\", \"name asc\", and \"name desc\"."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter expression that filters migration jobs listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list migration jobs created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **reverseSshConnectivity.vmIp = \"1.2.3.4\"** to select all migration jobs connecting through the specific SSH tunnel bastion."
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of migration jobs to return. The service may return fewer than this value. If unspecified, at most 50 migration jobs will be returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "type": "integer"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent which owns this collection of migrationJobs."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The nextPageToken value received in the previous call to migrationJobs.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to migrationJobs.list must match the call that provided the page token.",
                      "type": "string"
                    }
                  }
                },
                "start": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:start",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to start.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "datamigration.projects.locations.migrationJobs.start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Start an already created migration job.",
                  "request": {
                    "$ref": "StartMigrationJobRequest"
                  }
                },
                "promote": {
                  "request": {
                    "$ref": "PromoteMigrationJobRequest"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.promote",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:promote",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to promote.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "resume": {
                  "request": {
                    "$ref": "ResumeMigrationJobRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.migrationJobs.resume",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Name of the migration job resource to resume.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume",
                  "description": "Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase).",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:resume"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.",
                      "type": "string",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates the parameters of a single migration job.",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "stop": {
                  "request": {
                    "$ref": "StopMigrationJobRequest"
                  },
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.migrationJobs.stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:stop",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Name of the migration job resource to stop.",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Stops a running migration job."
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "restart": {
                  "path": "v1/{+name}:restart",
                  "id": "datamigration.projects.locations.migrationJobs.restart",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Name of the migration job resource to restart.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RestartMigrationJobRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "generateSshScript": {
                  "path": "v1/{+migrationJob}:generateSshScript",
                  "response": {
                    "$ref": "SshScript"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "migrationJob": {
                      "location": "path",
                      "required": true,
                      "description": "Name of the migration job resource to generate the SSH script.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Generate a SSH configuration script to configure the reverse SSH connectivity.",
                  "id": "datamigration.projects.locations.migrationJobs.generateSshScript",
                  "request": {
                    "$ref": "GenerateSshScriptRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript"
                },
                "verify": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Name of the migration job resource to verify."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "description": "Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met.",
                  "request": {
                    "$ref": "VerifyMigrationJobRequest"
                  },
                  "path": "v1/{+name}:verify",
                  "id": "datamigration.projects.locations.migrationJobs.verify"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Required. Name of the migration job resource to get."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "MigrationJob"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.get",
                  "description": "Gets details of a single migration job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "create": {
                  "description": "Creates a new migration job in a given project and location.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/migrationJobs",
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "migrationJobId": {
                      "type": "string",
                      "description": "Required. The ID of the instance to create.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of migration jobs."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    }
                  },
                  "id": "datamigration.projects.locations.migrationJobs.create"
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false. Only supported for Oracle connection profiles."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    },
                    "skipValidation": {
                      "type": "boolean",
                      "description": "Optional. Update the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}."
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource."
                    }
                  },
                  "path": "v1/{+name}",
                  "httpMethod": "PATCH",
                  "id": "datamigration.projects.locations.connectionProfiles.patch",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update the configuration of a single connection profile.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.connectionProfiles.testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single connection profile.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the connection profile resource to get.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "id": "datamigration.projects.locations.connectionProfiles.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs.",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "In case of force delete, the CloudSQL replica database is also deleted (only for CloudSQL connection profile).",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Required. Name of the connection profile resource to delete."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "create": {
                  "description": "Creates a new connection profile in a given project and location.",
                  "httpMethod": "POST",
                  "parameters": {
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "type": "string",
                      "location": "query"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles."
                    },
                    "parent": {
                      "description": "Required. The parent which owns this collection of connection profiles.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "skipValidation": {
                      "description": "Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datamigration.projects.locations.connectionProfiles.create",
                  "path": "v1/{+parent}/connectionProfiles",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    }
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy"
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "datamigration.projects.locations.connectionProfiles.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "A filter expression that filters connection profiles listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list connection profiles created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z**. You can also filter nested fields. For example, you could specify **mySql.username = %lt;my_username%gt;** to list all connection profiles configured to connect with a specific username.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of connection profiles to return. The service may return fewer than this value. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "A comma-separated list of fields to order results according to."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of connection profiles.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A page token, received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datamigration.projects.locations.connectionProfiles.list",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/connectionProfiles",
                  "description": "Retrieves a list of all connection profiles in a given project and location."
                }
              }
            },
            "conversionWorkspaces": {
              "resources": {
                "mappingRules": {
                  "methods": {
                    "import": {
                      "path": "v1/{+parent}/mappingRules:import",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules:import",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the conversion workspace resource to import the rules to in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "ImportMappingRulesRequest"
                      },
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.import",
                      "description": "Imports the mapping rules for a given conversion workspace. Supports various formats of external rules files."
                    }
                  }
                }
              },
              "methods": {
                "commit": {
                  "path": "v1/{+name}:commit",
                  "request": {
                    "$ref": "CommitConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:commit",
                  "description": "Marks all the data in the conversion workspace as committed.",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the conversion workspace resource to commit.",
                      "type": "string"
                    }
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.commit",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "convert": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Name of the conversion workspace resource to convert in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}:convert",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.convert",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a draft tree schema for the destination database.",
                  "request": {
                    "$ref": "ConvertConversionWorkspaceRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:convert",
                  "httpMethod": "POST"
                },
                "rollback": {
                  "description": "Rolls back a conversion workspace to the last committed snapshot.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.rollback",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource to roll back to.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:rollback",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:rollback",
                  "request": {
                    "$ref": "RollbackConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:setIamPolicy",
                  "id": "datamigration.projects.locations.conversionWorkspaces.setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "A filter expression that filters conversion workspaces listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list conversion workspaces created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **source.version = \"12.c.1\"** to select all conversion workspaces with source database version equal to 12.c.1.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The nextPageToken value received in the previous call to conversionWorkspaces.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspaces.list must match the call that provided the page token.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent which owns this collection of conversion workspaces.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of conversion workspaces to return. The service may return fewer than this value. If unspecified, at most 50 sets are returned.",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "description": "Lists conversion workspaces in a given project and location.",
                  "response": {
                    "$ref": "ListConversionWorkspacesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "id": "datamigration.projects.locations.conversionWorkspaces.list",
                  "path": "v1/{+parent}/conversionWorkspaces"
                },
                "describeDatabaseEntities": {
                  "description": "Describes the database entities tree for a specific conversion workspace and a specific tree type. Database entities are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are simple data objects describing the structure of the client database.",
                  "parameters": {
                    "commitId": {
                      "type": "string",
                      "location": "query",
                      "description": "Request a specific commit ID. If not specified, the entities from the latest commit are returned."
                    },
                    "uncommitted": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Whether to retrieve the latest committed version of the entities or the latest version. This field is ignored if a specific commit_id is specified."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filter the returned entities based on AIP-160 standard.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The nextPageToken value received in the previous call to conversionWorkspace.describeDatabaseEntities, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspace.describeDatabaseEntities must match the call that provided the page token.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of entities to return. The service may return fewer entities than the value specifies.",
                      "location": "query",
                      "type": "integer"
                    },
                    "tree": {
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "DB_TREE_TYPE_UNSPECIFIED",
                        "SOURCE_TREE",
                        "DRAFT_TREE",
                        "DESTINATION_TREE"
                      ],
                      "enumDescriptions": [
                        "Unspecified tree type.",
                        "The source database tree.",
                        "The draft database tree.",
                        "The destination database tree."
                      ],
                      "description": "The tree to fetch."
                    },
                    "conversionWorkspace": {
                      "required": true,
                      "description": "Required. Name of the conversion workspace resource whose database entities are described. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeDatabaseEntities",
                  "path": "v1/{+conversionWorkspace}:describeDatabaseEntities",
                  "response": {
                    "$ref": "DescribeDatabaseEntitiesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeDatabaseEntities"
                },
                "searchBackgroundJobs": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.searchBackgroundJobs",
                  "description": "Searches/lists the background jobs for a specific conversion workspace. The background jobs are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are a way to expose the data plane jobs log.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:searchBackgroundJobs",
                  "path": "v1/{+conversionWorkspace}:searchBackgroundJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "parameters": {
                    "completedUntilTime": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. If provided, only returns jobs that completed until (not including) the given timestamp.",
                      "format": "google-datetime"
                    },
                    "returnMostRecentPerJobType": {
                      "description": "Optional. Whether or not to return just the most recent job per job type,",
                      "type": "boolean",
                      "location": "query"
                    },
                    "maxSize": {
                      "location": "query",
                      "description": "Optional. The maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 100 jobs are returned. The maximum value is 100; values above 100 are coerced to 100.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "conversionWorkspace": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "description": "Required. Name of the conversion workspace resource whose jobs are listed, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                    }
                  },
                  "response": {
                    "$ref": "SearchBackgroundJobsResponse"
                  },
                  "httpMethod": "GET"
                },
                "create": {
                  "request": {
                    "$ref": "ConversionWorkspace"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "parameters": {
                    "conversionWorkspaceId": {
                      "location": "query",
                      "description": "Required. The ID of the conversion workspace to create.",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of conversion workspaces."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.conversionWorkspaces.create",
                  "description": "Creates a new conversion workspace in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "apply": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Applies draft tree onto a specific destination database.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:apply",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the conversion workspace resource for which to apply the draft tree. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                    }
                  },
                  "path": "v1/{+name}:apply",
                  "id": "datamigration.projects.locations.conversionWorkspaces.apply",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ApplyConversionWorkspaceRequest"
                  }
                },
                "get": {
                  "description": "Gets details of a single conversion workspace.",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the conversion workspace resource to get.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ConversionWorkspace"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.get",
                  "path": "v1/{+name}"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the conversion workspace resource to delete."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single conversion workspace.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "id": "datamigration.projects.locations.conversionWorkspaces.delete",
                  "httpMethod": "DELETE"
                },
                "testIamPermissions": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.testIamPermissions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  }
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "id": "datamigration.projects.locations.conversionWorkspaces.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:getIamPolicy"
                },
                "describeConversionWorkspaceRevisions": {
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeConversionWorkspaceRevisions",
                  "response": {
                    "$ref": "DescribeConversionWorkspaceRevisionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeConversionWorkspaceRevisions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves a list of committed revisions of a specific conversion workspace.",
                  "path": "v1/{+conversionWorkspace}:describeConversionWorkspaceRevisions",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "parameters": {
                    "commitId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Optional filter to request a specific commit ID."
                    },
                    "conversionWorkspace": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the conversion workspace resource whose revisions are listed. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "location": "path"
                    }
                  }
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the parameters of a single conversion workspace.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "id": "datamigration.projects.locations.conversionWorkspaces.patch",
                  "request": {
                    "$ref": "ConversionWorkspace"
                  }
                },
                "seed": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:seed",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+name}:seed",
                  "id": "datamigration.projects.locations.conversionWorkspaces.seed",
                  "description": "Imports a snapshot of the source database into the conversion workspace.",
                  "parameters": {
                    "name": {
                      "description": "Name of the conversion workspace resource to seed with new database structure, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SeedConversionWorkspaceRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "datamigration.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1/{+name}:cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "datamigration.projects.locations.operations.cancel"
                },
                "list": {
                  "id": "datamigration.projects.locations.operations.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "datamigration.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE"
                }
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "batchPath": "batch",
  "description": "Manage Cloud Database Migration Service resources on Google Cloud Platform.",
  "canonicalName": "Database Migration Service",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/database-migration/",
  "title": "Database Migration API",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  }
}

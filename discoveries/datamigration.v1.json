{
  "rootUrl": "https://datamigration.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "Manage Cloud Database Migration Service resources on Google Cloud Platform.",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "SearchBackgroundJobsResponse": {
      "id": "SearchBackgroundJobsResponse",
      "description": "Response message for 'SearchBackgroundJobs' request.",
      "type": "object",
      "properties": {
        "jobs": {
          "items": {
            "$ref": "BackgroundJobLogEntry"
          },
          "type": "array",
          "description": "The list of conversion workspace mapping rules."
        }
      }
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "type": "object",
      "properties": {}
    },
    "ViewEntity": {
      "description": "View's parent is a schema.",
      "type": "object",
      "id": "ViewEntity",
      "properties": {
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the view."
        },
        "constraints": {
          "items": {
            "$ref": "ConstraintEntity"
          },
          "description": "View constraints.",
          "type": "array"
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom engine specific features."
        }
      }
    },
    "SeedJobDetails": {
      "type": "object",
      "id": "SeedJobDetails",
      "properties": {
        "connectionProfile": {
          "description": "The connection profile which was used for the seed job.",
          "type": "string"
        }
      },
      "description": "Details regarding a Seed background job."
    },
    "PackageEntity": {
      "type": "object",
      "description": "Package's parent is a schema.",
      "properties": {
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features."
        },
        "packageSqlCode": {
          "type": "string",
          "description": "The SQL code which creates the package."
        },
        "packageBody": {
          "description": "The SQL code which creates the package body. If the package specification has cursors or subprograms, then the package body is mandatory.",
          "type": "string"
        }
      },
      "id": "PackageEntity"
    },
    "ApplyJobDetails": {
      "id": "ApplyJobDetails",
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "description": "AIP-160 based filter used to specify the entities to apply"
        },
        "connectionProfile": {
          "type": "string",
          "description": "The connection profile which was used for the apply job."
        }
      },
      "description": "Details regarding an Apply background job."
    },
    "CloudSqlConnectionProfile": {
      "id": "CloudSqlConnectionProfile",
      "properties": {
        "settings": {
          "$ref": "CloudSqlSettings",
          "description": "Immutable. Metadata used to create the destination Cloud SQL database."
        },
        "cloudSqlId": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Cloud SQL instance ID that this connection profile is associated with."
        },
        "publicIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Cloud SQL database instance's public IP."
        },
        "additionalPublicIp": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The Cloud SQL database instance's additional (outgoing) public IP. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available)."
        },
        "privateIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The Cloud SQL database instance's private IP."
        }
      },
      "description": "Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.",
      "type": "object"
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      }
    },
    "ColumnEntity": {
      "description": "Column is not used as an independent entity, it is retrieved as part of a Table entity.",
      "id": "ColumnEntity",
      "properties": {
        "length": {
          "description": "Column length - e.g. varchar (50).",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "description": "Column name.",
          "type": "string"
        },
        "udt": {
          "description": "Is the column a UDT.",
          "type": "boolean"
        },
        "autoGenerated": {
          "type": "boolean",
          "description": "Is the column auto-generated/identity."
        },
        "dataType": {
          "type": "string",
          "description": "Column data type."
        },
        "arrayLength": {
          "description": "If the column is array, of which length.",
          "format": "int32",
          "type": "integer"
        },
        "setValues": {
          "description": "Specifies the list of values allowed in the column. Only used for set data type.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "array": {
          "type": "boolean",
          "description": "Is the column of array type."
        },
        "charset": {
          "type": "string",
          "description": "Charset override - instead of table level charset."
        },
        "precision": {
          "description": "Column precision - when relevant.",
          "format": "int32",
          "type": "integer"
        },
        "customFeatures": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features.",
          "type": "object"
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value of the column."
        },
        "scale": {
          "description": "Column scale - when relevant.",
          "type": "integer",
          "format": "int32"
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "Column order in the table.",
          "format": "int32"
        },
        "comment": {
          "description": "Comment associated with the column.",
          "type": "string"
        },
        "collation": {
          "description": "Collation override - instead of table level collation.",
          "type": "string"
        },
        "nullable": {
          "type": "boolean",
          "description": "Is the column nullable."
        },
        "fractionalSecondsPrecision": {
          "description": "Column fractional second precision - used for timestamp based datatypes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ImportRulesJobDetails": {
      "description": "Details regarding an Import Rules background job.",
      "id": "ImportRulesJobDetails",
      "type": "object",
      "properties": {
        "fileFormat": {
          "type": "string",
          "description": "The requested file format.",
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ],
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ]
        },
        "files": {
          "description": "File names used for the import rules job.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "PrivateConnectivity": {
      "properties": {
        "privateConnection": {
          "type": "string",
          "description": "Required. The resource name (URI) of the private connection."
        }
      },
      "id": "PrivateConnectivity",
      "type": "object",
      "description": "Private Connectivity."
    },
    "ConversionWorkspace": {
      "id": "ConversionWorkspace",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name for the workspace."
        },
        "latestCommitId": {
          "type": "string",
          "description": "Output only. The latest commit ID.",
          "readOnly": true
        },
        "globalSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true",
          "type": "object"
        },
        "destination": {
          "$ref": "DatabaseEngineInfo",
          "description": "Required. The destination engine details."
        },
        "updateTime": {
          "description": "Output only. The timestamp when the workspace resource was last updated.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The timestamp when the workspace resource was created.",
          "type": "string"
        },
        "source": {
          "description": "Required. The source engine details.",
          "$ref": "DatabaseEngineInfo"
        },
        "latestCommitTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The timestamp when the workspace was committed."
        },
        "hasUncommittedChanges": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed)."
        },
        "name": {
          "type": "string",
          "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
        }
      },
      "description": "The main conversion workspace resource entity.",
      "type": "object"
    },
    "AlloyDbSettings": {
      "properties": {
        "initialUser": {
          "description": "Required. Input only. Initial user to setup during cluster creation. Required.",
          "$ref": "UserPassword"
        },
        "primaryInstanceSettings": {
          "$ref": "PrimaryInstanceSettings"
        },
        "vpcNetwork": {
          "type": "string",
          "description": "Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \"projects/{project_number}/global/networks/{network_id}\". This is required to create a cluster."
        },
        "encryptionConfig": {
          "$ref": "EncryptionConfig",
          "description": "Optional. The encryption config can be specified to encrypt the data disks and other persistent data resources of a cluster with a customer-managed encryption key (CMEK). When this field is not specified, the cluster will then use default encryption scheme to protect the user data."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs."
        }
      },
      "description": "Settings for creating an AlloyDB cluster.",
      "id": "AlloyDbSettings",
      "type": "object"
    },
    "SshScript": {
      "id": "SshScript",
      "type": "object",
      "properties": {
        "script": {
          "type": "string",
          "description": "The ssh configuration script."
        }
      },
      "description": "Response message for 'GenerateSshScript' request."
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Expr"
    },
    "SchemaEntity": {
      "id": "SchemaEntity",
      "properties": {
        "customFeatures": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "Schema typically has no parent entity, but can have a parent entity DatabaseInstance (for database engines which support it). For some database engines, the terms schema and user can be used interchangeably when they refer to a namespace or a collection of other database entities. Can store additional information which is schema specific."
    },
    "ListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "id": "ListOperationsResponse"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "id": "Empty",
      "properties": {}
    },
    "PrivateConnection": {
      "description": "The PrivateConnection resource is used to establish private connectivity with the customer's network.",
      "properties": {
        "name": {
          "description": "The name of the resource.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "The private connection display name."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state.",
            "The private connection has been deleted."
          ],
          "description": "Output only. The state of the private connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE",
            "DELETED"
          ],
          "readOnly": true
        },
        "vpcPeeringConfig": {
          "description": "VPC peering configuration.",
          "$ref": "VpcPeeringConfig"
        },
        "error": {
          "$ref": "Status",
          "readOnly": true,
          "description": "Output only. The error details in case of state FAILED."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The last update time of the resource."
        }
      },
      "type": "object",
      "id": "PrivateConnection"
    },
    "FunctionEntity": {
      "type": "object",
      "description": "Function's parent is a schema.",
      "id": "FunctionEntity",
      "properties": {
        "customFeatures": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Custom engine specific features."
        },
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the function."
        }
      }
    },
    "RollbackConversionWorkspaceRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for 'RollbackConversionWorkspace' request.",
      "id": "RollbackConversionWorkspaceRequest"
    },
    "ListConversionWorkspacesResponse": {
      "type": "object",
      "properties": {
        "conversionWorkspaces": {
          "items": {
            "$ref": "ConversionWorkspace"
          },
          "type": "array",
          "description": "The list of conversion workspace objects."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for 'ListConversionWorkspaces' request.",
      "id": "ListConversionWorkspacesResponse"
    },
    "GenerateSshScriptRequest": {
      "description": "Request message for 'GenerateSshScript' request.",
      "properties": {
        "vmSelectionConfig": {
          "$ref": "VmSelectionConfig",
          "description": "The VM selection configuration"
        },
        "vmPort": {
          "format": "int32",
          "description": "The port that will be open on the bastion host.",
          "type": "integer"
        },
        "vmCreationConfig": {
          "$ref": "VmCreationConfig",
          "description": "The VM creation configuration"
        },
        "vm": {
          "description": "Required. Bastion VM Instance name to use or to create.",
          "type": "string"
        }
      },
      "id": "GenerateSshScriptRequest",
      "type": "object"
    },
    "ReverseSshConnectivity": {
      "description": "The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.",
      "properties": {
        "vmIp": {
          "type": "string",
          "description": "Required. The IP of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
        },
        "vmPort": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The forwarding port of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel."
        },
        "vm": {
          "description": "The name of the virtual machine (Compute Engine) used as the bastion server for the SSH tunnel.",
          "type": "string"
        },
        "vpc": {
          "description": "The name of the VPC to peer with the Cloud SQL private network.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ReverseSshConnectivity"
    },
    "ImportMappingRulesRequest": {
      "properties": {
        "rulesFormat": {
          "enum": [
            "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED",
            "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE",
            "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
          ],
          "enumDescriptions": [
            "Unspecified rules format.",
            "HarbourBridge session file.",
            "Ora2Pg configuration file."
          ],
          "description": "The format of the rules content file.",
          "type": "string"
        },
        "autoCommit": {
          "type": "boolean",
          "description": "Should the conversion workspace be committed automatically after the import operation."
        },
        "rulesFiles": {
          "items": {
            "$ref": "RulesFile"
          },
          "description": "One or more rules files.",
          "type": "array"
        }
      },
      "description": "Request message for 'ImportMappingRules' request.",
      "id": "ImportMappingRulesRequest",
      "type": "object"
    },
    "BackgroundJobLogEntry": {
      "type": "object",
      "description": "Execution log of a background job.",
      "id": "BackgroundJobLogEntry",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the background job was started."
        },
        "importRulesJobDetails": {
          "description": "Import rules job details.",
          "$ref": "ImportRulesJobDetails"
        },
        "requestAutocommit": {
          "description": "Whether the client requested the conversion workspace to be committed after a successful completion of the job.",
          "type": "boolean"
        },
        "convertJobDetails": {
          "description": "Convert job details.",
          "$ref": "ConvertJobDetails"
        },
        "applyJobDetails": {
          "description": "Apply job details.",
          "$ref": "ApplyJobDetails"
        },
        "jobType": {
          "type": "string",
          "enum": [
            "BACKGROUND_JOB_TYPE_UNSPECIFIED",
            "BACKGROUND_JOB_TYPE_SOURCE_SEED",
            "BACKGROUND_JOB_TYPE_CONVERT",
            "BACKGROUND_JOB_TYPE_APPLY_DESTINATION",
            "BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE"
          ],
          "description": "The type of job that was executed.",
          "enumDescriptions": [
            "Unspecified background job type.",
            "Job to seed from the source database.",
            "Job to convert the source database into a draft of the destination database.",
            "Job to apply the draft tree onto the destination.",
            "Job to import and convert mapping rules from an external source such as an ora2pg config file."
          ]
        },
        "completionComment": {
          "description": "Job completion comment, such as how many entities were seeded, how many warnings were found during conversion, and similar information.",
          "type": "string"
        },
        "seedJobDetails": {
          "$ref": "SeedJobDetails",
          "description": "Seed job details."
        },
        "finishTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the background job was finished."
        },
        "id": {
          "type": "string",
          "description": "The background job log entry ID."
        },
        "completionState": {
          "enum": [
            "JOB_COMPLETION_STATE_UNSPECIFIED",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string",
          "enumDescriptions": [
            "The status is not specified. This state is used when job is not yet finished.",
            "Success.",
            "Error."
          ],
          "description": "Job completion state, i.e. the final state after the job completed."
        }
      }
    },
    "ConnectionProfile": {
      "description": "A connection profile definition.",
      "properties": {
        "mysql": {
          "$ref": "MySqlConnectionProfile",
          "description": "A MySQL database connection profile."
        },
        "provider": {
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ],
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ],
          "type": "string",
          "description": "The database provider."
        },
        "cloudsql": {
          "$ref": "CloudSqlConnectionProfile",
          "description": "A CloudSQL database connection profile."
        },
        "displayName": {
          "type": "string",
          "description": "The connection profile display name."
        },
        "labels": {
          "description": "The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "state": {
          "description": "The current connection profile state (e.g. DRAFT, READY, or FAILED).",
          "enumDescriptions": [
            "The state of the connection profile is unknown.",
            "The connection profile is in draft mode and fully editable.",
            "The connection profile is being created.",
            "The connection profile is ready.",
            "The connection profile is being updated.",
            "The connection profile is being deleted.",
            "The connection profile has been deleted.",
            "The last action on the connection profile failed."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "CREATING",
            "READY",
            "UPDATING",
            "DELETING",
            "DELETED",
            "FAILED"
          ]
        },
        "createTime": {
          "description": "Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}."
        },
        "alloydb": {
          "description": "An AlloyDB cluster connection profile.",
          "$ref": "AlloyDbConnectionProfile"
        },
        "error": {
          "$ref": "Status",
          "description": "Output only. The error details in case of state FAILED.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "readOnly": true
        },
        "postgresql": {
          "description": "A PostgreSQL database connection profile.",
          "$ref": "PostgreSqlConnectionProfile"
        },
        "oracle": {
          "description": "An Oracle database connection profile.",
          "$ref": "OracleConnectionProfile"
        }
      },
      "type": "object",
      "id": "ConnectionProfile"
    },
    "ListLocationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "ConvertConversionWorkspaceRequest": {
      "id": "ConvertConversionWorkspaceRequest",
      "type": "object",
      "properties": {
        "filter": {
          "description": "Filter the entities to convert. Leaving this field empty will convert all of the entities. Supports Google AIP-160 style filtering.",
          "type": "string"
        },
        "autoCommit": {
          "description": "Specifies whether the conversion workspace is to be committed automatically after the conversion.",
          "type": "boolean"
        }
      },
      "description": "Request message for 'ConvertConversionWorkspace' request."
    },
    "DumpFlags": {
      "properties": {
        "dumpFlags": {
          "items": {
            "$ref": "DumpFlag"
          },
          "type": "array",
          "description": "The flags for the initial dump."
        }
      },
      "id": "DumpFlags",
      "description": "Dump flags definition.",
      "type": "object"
    },
    "DatabaseEngineInfo": {
      "type": "object",
      "id": "DatabaseEngineInfo",
      "properties": {
        "version": {
          "description": "Required. Engine named version, for example 12.c.1.",
          "type": "string"
        },
        "engine": {
          "type": "string",
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ],
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle."
          ],
          "description": "Required. Engine type."
        }
      },
      "description": "The type and version of a source or destination database."
    },
    "ConstraintEntity": {
      "id": "ConstraintEntity",
      "type": "object",
      "description": "Constraint is not used as an independent entity, it is retrieved as part of another entity such as Table or View.",
      "properties": {
        "referenceColumns": {
          "items": {
            "type": "string"
          },
          "description": "Reference columns which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full names of referenced columns by the foreign key.",
          "type": "array"
        },
        "type": {
          "type": "string",
          "description": "Type of constraint, for example unique, primary key, foreign key (currently only primary key is supported)."
        },
        "customFeatures": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features.",
          "type": "object"
        },
        "tableColumns": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Table columns used as part of the Constraint, for example primary key constraint should list the columns which constitutes the key."
        },
        "referenceTable": {
          "description": "Reference table which may be associated with the constraint. For example, if the constraint is a FOREIGN_KEY, this represents the list of full name of the referenced table by the foreign key.",
          "type": "string"
        },
        "name": {
          "description": "The name of the table constraint.",
          "type": "string"
        },
        "tableName": {
          "type": "string",
          "description": "Table which is associated with the constraint. In case the constraint is defined on a table, this field is left empty as this information is stored in parent_name. However, if constraint is defined on a view, this field stores the table name on which the view is defined."
        }
      }
    },
    "ListMigrationJobsResponse": {
      "description": "Response message for 'ListMigrationJobs' request.",
      "type": "object",
      "properties": {
        "migrationJobs": {
          "items": {
            "$ref": "MigrationJob"
          },
          "type": "array",
          "description": "The list of migration jobs objects."
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "ListMigrationJobsResponse"
    },
    "StaticServiceIpConnectivity": {
      "properties": {},
      "type": "object",
      "description": "Static IP address connectivity configured on service project.",
      "id": "StaticServiceIpConnectivity"
    },
    "Location": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        }
      },
      "id": "Location",
      "description": "A resource that represents a Google Cloud location."
    },
    "TcpProxyScript": {
      "properties": {
        "script": {
          "type": "string",
          "description": "The TCP Proxy configuration script."
        }
      },
      "id": "TcpProxyScript",
      "type": "object",
      "description": "Response message for 'GenerateTcpProxyScript' request."
    },
    "GoogleCloudClouddmsV1OperationMetadata": {
      "id": "GoogleCloudClouddmsV1OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time the operation was created."
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        }
      }
    },
    "ResumeMigrationJobRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for 'ResumeMigrationJob' request.",
      "id": "ResumeMigrationJobRequest"
    },
    "MigrationJob": {
      "properties": {
        "state": {
          "description": "The current migration job state.",
          "enumDescriptions": [
            "The state of the migration job is unknown.",
            "The migration job is down for maintenance.",
            "The migration job is in draft mode and no resources are created.",
            "The migration job is being created.",
            "The migration job is created and not started.",
            "The migration job is running.",
            "The migration job failed.",
            "The migration job has been completed.",
            "The migration job is being deleted.",
            "The migration job is being stopped.",
            "The migration job is currently stopped.",
            "The migration job has been deleted.",
            "The migration job is being updated.",
            "The migration job is starting.",
            "The migration job is restarting.",
            "The migration job is resuming."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "MAINTENANCE",
            "DRAFT",
            "CREATING",
            "NOT_STARTED",
            "RUNNING",
            "FAILED",
            "COMPLETED",
            "DELETING",
            "STOPPING",
            "STOPPED",
            "DELETED",
            "UPDATING",
            "STARTING",
            "RESTARTING",
            "RESUMING"
          ]
        },
        "source": {
          "type": "string",
          "description": "Required. The resource name (URI) of the source connection profile."
        },
        "vpcPeeringConnectivity": {
          "$ref": "VpcPeeringConnectivity",
          "description": "The details of the VPC network that the source database is located in."
        },
        "type": {
          "description": "Required. The migration job type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ONE_TIME",
            "CONTINUOUS"
          ],
          "type": "string",
          "enumDescriptions": [
            "The type of the migration job is unknown.",
            "The migration job is a one time migration.",
            "The migration job is a continuous migration."
          ]
        },
        "reverseSshConnectivity": {
          "description": "The details needed to communicate to the source over Reverse SSH tunnel connectivity.",
          "$ref": "ReverseSshConnectivity"
        },
        "createTime": {
          "description": "Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}."
        },
        "phase": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The current migration job phase.",
          "enumDescriptions": [
            "The phase of the migration job is unknown.",
            "The migration job is in the full dump phase.",
            "The migration job is CDC phase.",
            "The migration job is running the promote phase.",
            "Only RDS flow - waiting for source writes to stop",
            "Only RDS flow - the sources writes stopped, waiting for dump to begin"
          ],
          "enum": [
            "PHASE_UNSPECIFIED",
            "FULL_DUMP",
            "CDC",
            "PROMOTE_IN_PROGRESS",
            "WAITING_FOR_SOURCE_WRITES_TO_STOP",
            "PREPARING_THE_DUMP"
          ]
        },
        "destinationDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the destination."
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "format": "google-datetime"
        },
        "error": {
          "readOnly": true,
          "description": "Output only. The error details in case of state FAILED.",
          "$ref": "Status"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }`."
        },
        "dumpFlags": {
          "$ref": "DumpFlags",
          "description": "The initial dump flags. This field and the \"dump_path\" field are mutually exclusive."
        },
        "dumpPath": {
          "type": "string",
          "description": "The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the \"dump_flags\" field are mutually exclusive."
        },
        "staticIpConnectivity": {
          "description": "static ip connectivity data (default, no additional details needed).",
          "$ref": "StaticIpConnectivity"
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. If the migration job is completed, the time when it was completed.",
          "format": "google-datetime"
        },
        "filter": {
          "description": "This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace.",
          "type": "string"
        },
        "sourceDatabase": {
          "$ref": "DatabaseType",
          "description": "The database engine type and provider of the source."
        },
        "cmekKeyName": {
          "type": "string",
          "description": "The CMEK (customer-managed encryption key) fully qualified key name used for the migration job. This field supports all migration jobs types except for: * Mysql to Mysql (use the cmek field in the cloudsql connection profile instead). * PostrgeSQL to PostgreSQL (use the cmek field in the cloudsql connection profile instead). * PostgreSQL to AlloyDB (use the kms_key_name field in the alloydb connection profile instead). Each Cloud CMEK key has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]"
        },
        "destination": {
          "type": "string",
          "description": "Required. The resource name (URI) of the destination connection profile."
        },
        "conversionWorkspace": {
          "description": "The conversion workspace used by the migration.",
          "$ref": "ConversionWorkspaceInfo"
        },
        "displayName": {
          "type": "string",
          "description": "The migration job display name."
        },
        "duration": {
          "type": "string",
          "description": "Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
          "format": "google-duration",
          "readOnly": true
        }
      },
      "description": "Represents a Database Migration Service migration job object.",
      "type": "object",
      "id": "MigrationJob"
    },
    "VmCreationConfig": {
      "description": "VM creation configuration message",
      "type": "object",
      "properties": {
        "vmZone": {
          "description": "The Google Cloud Platform zone to create the VM in.",
          "type": "string"
        },
        "vmMachineType": {
          "type": "string",
          "description": "Required. VM instance machine type to create."
        },
        "subnet": {
          "type": "string",
          "description": "The subnet name the vm needs to be created in."
        }
      },
      "id": "VmCreationConfig"
    },
    "ApplyConversionWorkspaceRequest": {
      "description": "Request message for 'ApplyConversionWorkspace' request.",
      "type": "object",
      "id": "ApplyConversionWorkspaceRequest",
      "properties": {
        "filter": {
          "type": "string",
          "description": "Filter which entities to apply. Leaving this field empty will apply all of the entities. Supports Google AIP 160 based filtering."
        },
        "connectionProfile": {
          "type": "string",
          "description": "Fully qualified (Uri) name of the destination connection profile."
        }
      }
    },
    "DescribeDatabaseEntitiesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "databaseEntities": {
          "description": "The list of database entities for the conversion workspace.",
          "type": "array",
          "items": {
            "$ref": "DatabaseEntity"
          }
        }
      },
      "type": "object",
      "description": "Response message for 'DescribeDatabaseEntities' request.",
      "id": "DescribeDatabaseEntitiesResponse"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        }
      }
    },
    "ConvertJobDetails": {
      "description": "Details regarding a Convert background job.",
      "properties": {
        "filter": {
          "type": "string",
          "description": "AIP-160 based filter used to specify the entities to convert"
        }
      },
      "type": "object",
      "id": "ConvertJobDetails"
    },
    "FetchStaticIpsResponse": {
      "id": "FetchStaticIpsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "staticIps": {
          "description": "List of static IPs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for a 'FetchStaticIps' request.",
      "type": "object"
    },
    "SequenceEntity": {
      "type": "object",
      "description": "Sequence's parent is a schema.",
      "properties": {
        "cache": {
          "description": "Indicates number of entries to cache / precreate.",
          "type": "string",
          "format": "int64"
        },
        "cycle": {
          "description": "Indicates whether the sequence value should cycle through.",
          "type": "boolean"
        },
        "maxValue": {
          "description": "Maximum number for the sequence represented as bytes to accommodate large. numbers",
          "format": "byte",
          "type": "string"
        },
        "increment": {
          "format": "int64",
          "type": "string",
          "description": "Increment value for the sequence."
        },
        "minValue": {
          "type": "string",
          "format": "byte",
          "description": "Minimum number for the sequence represented as bytes to accommodate large. numbers"
        },
        "startValue": {
          "type": "string",
          "format": "byte",
          "description": "Start number for the sequence represented as bytes to accommodate large. numbers"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features."
        }
      },
      "id": "SequenceEntity"
    },
    "EntityMappingLogEntry": {
      "properties": {
        "mappingComment": {
          "type": "string",
          "description": "Comment."
        },
        "ruleRevisionId": {
          "description": "Rule revision ID.",
          "type": "string"
        },
        "ruleId": {
          "type": "string",
          "description": "Which rule caused this log entry."
        }
      },
      "type": "object",
      "description": "A single record of a rule which was used for a mapping.",
      "id": "EntityMappingLogEntry"
    },
    "EncryptionConfig": {
      "id": "EncryptionConfig",
      "type": "object",
      "properties": {
        "kmsKeyName": {
          "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME]",
          "type": "string"
        }
      },
      "description": "EncryptionConfig describes the encryption config of a cluster that is encrypted with a CMEK (customer-managed encryption key)."
    },
    "OracleConnectionProfile": {
      "type": "object",
      "id": "OracleConnectionProfile",
      "properties": {
        "databaseService": {
          "type": "string",
          "description": "Required. Database service for the Oracle connection."
        },
        "forwardSshConnectivity": {
          "$ref": "ForwardSshTunnelConnectivity",
          "description": "Forward SSH tunnel connectivity."
        },
        "password": {
          "type": "string",
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
        },
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "ssl": {
          "description": "SSL configuration for the connection to the source Oracle database. * Only `SERVER_ONLY` configuration is supported for Oracle SSL. * SSL is supported for Oracle versions 12 and above.",
          "$ref": "SslConfig"
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The network port of the source Oracle database."
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "passwordSet": {
          "type": "boolean",
          "description": "Output only. Indicates whether a new password is included in the request.",
          "readOnly": true
        },
        "host": {
          "type": "string",
          "description": "Required. The IP or hostname of the source Oracle database."
        }
      },
      "description": "Specifies connection parameters required specifically for Oracle databases."
    },
    "GenerateTcpProxyScriptRequest": {
      "description": "Request message for 'GenerateTcpProxyScript' request.",
      "type": "object",
      "id": "GenerateTcpProxyScriptRequest",
      "properties": {
        "vmName": {
          "description": "Required. The name of the Compute instance that will host the proxy.",
          "type": "string"
        },
        "vmZone": {
          "description": "Optional. The Google Cloud Platform zone to create the VM in. The fully qualified name of the zone must be specified, including the region name, for example \"us-central1-b\". If not specified, uses the \"-b\" zone of the destination Connection Profile's region.",
          "type": "string"
        },
        "vmSubnet": {
          "description": "Required. The name of the subnet the Compute instance will use for private connectivity. Must be supplied in the form of projects/{project}/regions/{region}/subnetworks/{subnetwork}. Note: the region for the subnet must match the Compute instance region.",
          "type": "string"
        },
        "vmMachineType": {
          "type": "string",
          "description": "Required. The type of the Compute instance that will host the proxy."
        }
      }
    },
    "StoredProcedureEntity": {
      "description": "Stored procedure's parent is a schema.",
      "type": "object",
      "id": "StoredProcedureEntity",
      "properties": {
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the stored procedure."
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features."
        }
      }
    },
    "ForwardSshTunnelConnectivity": {
      "properties": {
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        },
        "privateKey": {
          "type": "string",
          "description": "Input only. SSH private key."
        },
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port for the SSH tunnel, default value is 22."
        },
        "username": {
          "type": "string",
          "description": "Required. Username for the SSH tunnel."
        }
      },
      "type": "object",
      "id": "ForwardSshTunnelConnectivity",
      "description": "Forward SSH Tunnel connectivity."
    },
    "RulesFile": {
      "description": "Details of a single rules file.",
      "type": "object",
      "id": "RulesFile",
      "properties": {
        "rulesSourceFilename": {
          "description": "The filename of the rules that needs to be converted. The filename is used mainly so that future logs of the import rules job contain it, and can therefore be searched by it.",
          "type": "string"
        },
        "rulesContent": {
          "description": "The text content of the rules that needs to be converted.",
          "type": "string"
        }
      }
    },
    "MachineConfig": {
      "description": "MachineConfig describes the configuration of a machine.",
      "properties": {
        "cpuCount": {
          "description": "The number of CPU's in the VM instance.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "MachineConfig"
    },
    "Binding": {
      "id": "Binding",
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object"
    },
    "DescribeConversionWorkspaceRevisionsResponse": {
      "type": "object",
      "properties": {
        "revisions": {
          "type": "array",
          "description": "The list of conversion workspace revisions.",
          "items": {
            "$ref": "ConversionWorkspace"
          }
        }
      },
      "description": "Response message for 'DescribeConversionWorkspaceRevisions' request.",
      "id": "DescribeConversionWorkspaceRevisionsResponse"
    },
    "VpcPeeringConnectivity": {
      "id": "VpcPeeringConnectivity",
      "type": "object",
      "properties": {
        "vpc": {
          "type": "string",
          "description": "The name of the VPC network to peer with the Cloud SQL private network."
        }
      },
      "description": "The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC."
    },
    "VpcPeeringConfig": {
      "id": "VpcPeeringConfig",
      "description": "The VPC peering configuration is used to create VPC peering with the consumer's VPC.",
      "type": "object",
      "properties": {
        "vpcName": {
          "description": "Required. Fully qualified name of the VPC that Database Migration Service will peer to.",
          "type": "string"
        },
        "subnet": {
          "description": "Required. A free subnet for peering. (CIDR of /29)",
          "type": "string"
        }
      }
    },
    "AlloyDbConnectionProfile": {
      "properties": {
        "settings": {
          "$ref": "AlloyDbSettings",
          "description": "Immutable. Metadata used to create the destination AlloyDB cluster."
        },
        "clusterId": {
          "type": "string",
          "description": "Required. The AlloyDB cluster ID that this connection profile is associated with."
        }
      },
      "description": "Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.",
      "type": "object",
      "id": "AlloyDbConnectionProfile"
    },
    "StopMigrationJobRequest": {
      "description": "Request message for 'StopMigrationJob' request.",
      "type": "object",
      "properties": {},
      "id": "StopMigrationJobRequest"
    },
    "AuditConfig": {
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      },
      "id": "AuditConfig",
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
    },
    "SeedConversionWorkspaceRequest": {
      "properties": {
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Fully qualified (Uri) name of the destination connection profile."
        },
        "sourceConnectionProfile": {
          "type": "string",
          "description": "Fully qualified (Uri) name of the source connection profile."
        },
        "autoCommit": {
          "type": "boolean",
          "description": "Should the conversion workspace be committed automatically after the seed operation."
        }
      },
      "description": "Request message for 'SeedConversionWorkspace' request.",
      "type": "object",
      "id": "SeedConversionWorkspaceRequest"
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TableEntity": {
      "id": "TableEntity",
      "description": "Table's parent is a schema.",
      "type": "object",
      "properties": {
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom engine specific features."
        },
        "constraints": {
          "items": {
            "$ref": "ConstraintEntity"
          },
          "type": "array",
          "description": "Table constraints."
        },
        "indices": {
          "type": "array",
          "items": {
            "$ref": "IndexEntity"
          },
          "description": "Table indices."
        },
        "columns": {
          "items": {
            "$ref": "ColumnEntity"
          },
          "description": "Table columns.",
          "type": "array"
        },
        "comment": {
          "type": "string",
          "description": "Comment associated with the table."
        },
        "triggers": {
          "description": "Table triggers.",
          "items": {
            "$ref": "TriggerEntity"
          },
          "type": "array"
        }
      }
    },
    "SqlAclEntry": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "A label to identify this entry."
        },
        "ttl": {
          "type": "string",
          "description": "Input only. The time-to-leave of this access control entry.",
          "format": "google-duration"
        },
        "value": {
          "description": "The allowlisted value for the access control list.",
          "type": "string"
        },
        "expireTime": {
          "description": "The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example: `2012-11-15T16:19:00.094Z`.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "An entry for an Access Control list.",
      "id": "SqlAclEntry"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "EntityMapping": {
      "properties": {
        "mappingLog": {
          "type": "array",
          "items": {
            "$ref": "EntityMappingLogEntry"
          },
          "description": "Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity, such as a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along with the reason preventing them to do so."
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ],
          "description": "Type of source entity.",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ]
        },
        "draftType": {
          "type": "string",
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ],
          "description": "Type of draft entity.",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ]
        },
        "draftEntity": {
          "type": "string",
          "description": "Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column."
        },
        "sourceEntity": {
          "type": "string",
          "description": "Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column."
        }
      },
      "description": "Details of the mappings of a database entity.",
      "type": "object",
      "id": "EntityMapping"
    },
    "PromoteMigrationJobRequest": {
      "properties": {},
      "description": "Request message for 'PromoteMigrationJob' request.",
      "type": "object",
      "id": "PromoteMigrationJobRequest"
    },
    "PrivateServiceConnectConnectivity": {
      "type": "object",
      "description": "Private Service Connect connectivity (https://cloud.google.com/vpc/docs/private-service-connect#service-attachments)",
      "id": "PrivateServiceConnectConnectivity",
      "properties": {
        "serviceAttachment": {
          "type": "string",
          "description": "Required. A service attachment that exposes a database, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}"
        }
      }
    },
    "DatabaseType": {
      "type": "object",
      "properties": {
        "engine": {
          "type": "string",
          "enumDescriptions": [
            "The source database engine of the migration job is unknown.",
            "The source engine is MySQL.",
            "The source engine is PostgreSQL.",
            "The source engine is Oracle."
          ],
          "enum": [
            "DATABASE_ENGINE_UNSPECIFIED",
            "MYSQL",
            "POSTGRESQL",
            "ORACLE"
          ],
          "description": "The database engine."
        },
        "provider": {
          "type": "string",
          "enumDescriptions": [
            "The database provider is unknown.",
            "CloudSQL runs the database.",
            "RDS runs the database.",
            "Amazon Aurora.",
            "AlloyDB."
          ],
          "description": "The database provider.",
          "enum": [
            "DATABASE_PROVIDER_UNSPECIFIED",
            "CLOUDSQL",
            "RDS",
            "AURORA",
            "ALLOYDB"
          ]
        }
      },
      "description": "A message defining the database engine and provider.",
      "id": "DatabaseType"
    },
    "UserPassword": {
      "type": "object",
      "id": "UserPassword",
      "description": "The username/password for a database user. Used for specifying initial users at cluster creation time.",
      "properties": {
        "password": {
          "description": "The initial password for the user.",
          "type": "string"
        },
        "user": {
          "description": "The database username.",
          "type": "string"
        },
        "passwordSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates if the initial_user.password field has been set."
        }
      }
    },
    "ListConnectionProfilesResponse": {
      "type": "object",
      "description": "Response message for 'ListConnectionProfiles' request.",
      "id": "ListConnectionProfilesResponse",
      "properties": {
        "connectionProfiles": {
          "type": "array",
          "description": "The response list of connection profiles.",
          "items": {
            "$ref": "ConnectionProfile"
          }
        },
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StaticIpConnectivity": {
      "properties": {},
      "description": "The source database will allow incoming connections from the public IP of the destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.",
      "type": "object",
      "id": "StaticIpConnectivity"
    },
    "CloudSqlSettings": {
      "properties": {
        "dataDiskSizeGb": {
          "description": "The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.",
          "type": "string",
          "format": "int64"
        },
        "edition": {
          "enum": [
            "EDITION_UNSPECIFIED",
            "ENTERPRISE",
            "ENTERPRISE_PLUS"
          ],
          "enumDescriptions": [
            "The instance did not specify the edition.",
            "The instance is an enterprise edition.",
            "The instance is an enterprise plus edition."
          ],
          "description": "Optional. The edition of the given Cloud SQL instance.",
          "type": "string"
        },
        "activationPolicy": {
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER"
          ],
          "type": "string",
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.",
          "enumDescriptions": [
            "unspecified policy.",
            "The instance is always up and running.",
            "The instance should never spin up."
          ]
        },
        "rootPassword": {
          "description": "Input only. Initial root password.",
          "type": "string"
        },
        "secondaryZone": {
          "type": "string",
          "description": "Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available)."
        },
        "dataDiskType": {
          "enumDescriptions": [
            "Unspecified.",
            "SSD disk.",
            "HDD disk."
          ],
          "type": "string",
          "description": "The type of storage: `PD_SSD` (default) or `PD_HDD`.",
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD"
          ]
        },
        "storageAutoResizeLimit": {
          "format": "int64",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
          "type": "string"
        },
        "autoStorageIncrease": {
          "description": "[default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.",
          "type": "boolean"
        },
        "databaseFlags": {
          "type": "object",
          "description": "The database flags passed to the Cloud SQL instance at startup. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zone": {
          "type": "string",
          "description": "The Google Cloud Platform zone where your Cloud SQL database instance is located."
        },
        "availabilityType": {
          "type": "string",
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal availablility instance.",
            "Regional availability instance."
          ],
          "description": "Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)."
        },
        "databaseVersion": {
          "enumDescriptions": [
            "Unspecified version.",
            "MySQL 5.6.",
            "MySQL 5.7.",
            "PostgreSQL 9.6.",
            "PostgreSQL 11.",
            "PostgreSQL 10.",
            "MySQL 8.0.",
            "PostgreSQL 12.",
            "PostgreSQL 13.",
            "PostgreSQL 14.",
            "PostgreSQL 15."
          ],
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "POSTGRES_10",
            "MYSQL_8_0",
            "POSTGRES_12",
            "POSTGRES_13",
            "POSTGRES_14",
            "POSTGRES_15"
          ],
          "type": "string",
          "description": "The database engine type and version."
        },
        "userLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of \"key\": \"value\" pairs. Example: `{ \"name\": \"wrench\", \"mass\": \"18kg\", \"count\": \"3\" }`."
        },
        "tier": {
          "type": "string",
          "description": "The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings)."
        },
        "rootPasswordSet": {
          "type": "boolean",
          "description": "Output only. Indicates If this connection profile root password is stored.",
          "readOnly": true
        },
        "ipConfig": {
          "$ref": "SqlIpConfig",
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled."
        },
        "sourceId": {
          "description": "The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`",
          "type": "string"
        },
        "collation": {
          "description": "The Cloud SQL default instance level collation.",
          "type": "string"
        },
        "cmekKeyName": {
          "type": "string",
          "description": "The KMS key name used for the csql instance."
        }
      },
      "description": "Settings for creating a Cloud SQL database instance.",
      "id": "CloudSqlSettings",
      "type": "object"
    },
    "SynonymEntity": {
      "properties": {
        "sourceType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "description": "The type of the entity for which the synonym is being created (usually a table or a sequence).",
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ]
        },
        "sourceEntity": {
          "description": "The name of the entity for which the synonym is being created (the source).",
          "type": "string"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features."
        }
      },
      "id": "SynonymEntity",
      "type": "object",
      "description": "Synonym's parent is a schema."
    },
    "AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "id": "AuditLogConfig"
    },
    "SqlIpConfig": {
      "type": "object",
      "description": "IP Management configuration.",
      "properties": {
        "authorizedNetworks": {
          "description": "The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).",
          "type": "array",
          "items": {
            "$ref": "SqlAclEntry"
          }
        },
        "enableIpv4": {
          "type": "boolean",
          "description": "Whether the instance should be assigned an IPv4 address or not."
        },
        "allocatedIpRange": {
          "description": "Optional. The name of the allocated IP address range for the private IP Cloud SQL instance. This name refers to an already allocated IP range address. If set, the instance IP address will be created in the allocated range. Note that this IP address range can't be modified after the instance is created. If you change the VPC when configuring connectivity settings for the migration job, this field is not relevant.",
          "type": "string"
        },
        "privateNetwork": {
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.",
          "type": "string"
        },
        "requireSsl": {
          "description": "Whether SSL connections over IP should be enforced or not.",
          "type": "boolean"
        }
      },
      "id": "SqlIpConfig"
    },
    "MigrationJobVerificationError": {
      "id": "MigrationJobVerificationError",
      "properties": {
        "errorDetailMessage": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A specific detailed error message, if supplied by the engine."
        },
        "errorCode": {
          "description": "Output only. An instance of ErrorCode specifying the error that occurred.",
          "readOnly": true,
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "AUTHENTICATION_FAILURE",
            "INVALID_CONNECTION_PROFILE_CONFIG",
            "VERSION_INCOMPATIBILITY",
            "CONNECTION_PROFILE_TYPES_INCOMPATIBILITY",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "UNSUPPORTED_MIGRATION_TYPE",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "UNSUPPORTED_GTID_MODE",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER",
            "CANT_RESTART_RUNNING_MIGRATION",
            "TABLES_WITH_LIMITED_SUPPORT",
            "UNSUPPORTED_DATABASE_LOCALE",
            "UNSUPPORTED_DATABASE_FDW_CONFIG",
            "ERROR_RDBMS",
            "SOURCE_SIZE_EXCEEDS_THRESHOLD"
          ],
          "type": "string",
          "enumDescriptions": [
            "An unknown error occurred",
            "We failed to connect to one of the connection profile.",
            "We failed to authenticate to one of the connection profile.",
            "One of the involved connection profiles has an invalid configuration.",
            "The versions of the source and the destination are incompatible.",
            "The types of the source and the destination are incompatible.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions.",
            "Unsupported migration type.",
            "Invalid RDS logical replication.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "The table definition is not support due to missing primary key or replica identity.",
            "The definer is not supported.",
            "Migration is already running at the time of restart request.",
            "The source has tables with limited support. E.g. PostgreSQL tables without primary keys.",
            "The source uses an unsupported locale.",
            "The source uses an unsupported Foreign Data Wrapper configuration.",
            "There was an underlying RDBMS error.",
            "The source DB size in Bytes exceeds a certain threshold. The migration might require an increase of quota, or might not be supported."
          ]
        },
        "errorMessage": {
          "description": "Output only. A formatted message with further details about the error and a CTA.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Error message of a verification Migration job.",
      "type": "object"
    },
    "StartMigrationJobRequest": {
      "type": "object",
      "id": "StartMigrationJobRequest",
      "properties": {},
      "description": "Request message for 'StartMigrationJob' request."
    },
    "RestartMigrationJobRequest": {
      "properties": {},
      "description": "Request message for 'RestartMigrationJob' request.",
      "type": "object",
      "id": "RestartMigrationJobRequest"
    },
    "Policy": {
      "id": "Policy",
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string"
        },
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        }
      }
    },
    "CommitConversionWorkspaceRequest": {
      "type": "object",
      "properties": {
        "commitName": {
          "description": "Optional. Optional name of the commit.",
          "type": "string"
        }
      },
      "description": "Request message for 'CommitConversionWorkspace' request.",
      "id": "CommitConversionWorkspaceRequest"
    },
    "ConversionWorkspaceInfo": {
      "type": "object",
      "description": "A conversion workspace's version.",
      "properties": {
        "commitId": {
          "description": "The commit ID of the conversion workspace.",
          "type": "string"
        },
        "name": {
          "description": "The resource name (URI) of the conversion workspace.",
          "type": "string"
        }
      },
      "id": "ConversionWorkspaceInfo"
    },
    "DumpFlag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the flag"
        },
        "value": {
          "type": "string",
          "description": "The value of the flag."
        }
      },
      "description": "Dump flag definition.",
      "id": "DumpFlag"
    },
    "SslConfig": {
      "id": "SslConfig",
      "type": "object",
      "description": "SSL configuration information.",
      "properties": {
        "clientCertificate": {
          "type": "string",
          "description": "Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.If this field is used then the 'client_key' field is mandatory."
        },
        "caCertificate": {
          "type": "string",
          "description": "Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate. The replica will use this certificate to verify it's connecting to the right host."
        },
        "type": {
          "description": "Output only. The ssl config type according to 'client_key', 'client_certificate' and 'ca_certificate'.",
          "enumDescriptions": [
            "Unspecified.",
            "Only 'ca_certificate' specified.",
            "Both server ('ca_certificate'), and client ('client_key', 'client_certificate') specified."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "SSL_TYPE_UNSPECIFIED",
            "SERVER_ONLY",
            "SERVER_CLIENT"
          ]
        },
        "clientKey": {
          "type": "string",
          "description": "Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' field is mandatory."
        }
      }
    },
    "VerifyMigrationJobRequest": {
      "properties": {},
      "id": "VerifyMigrationJobRequest",
      "description": "Request message for 'VerifyMigrationJob' request.",
      "type": "object"
    },
    "TriggerEntity": {
      "type": "object",
      "id": "TriggerEntity",
      "properties": {
        "name": {
          "description": "The name of the trigger.",
          "type": "string"
        },
        "triggeringEvents": {
          "items": {
            "type": "string"
          },
          "description": "The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.",
          "type": "array"
        },
        "customFeatures": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom engine specific features."
        },
        "sqlCode": {
          "type": "string",
          "description": "The SQL code which creates the trigger."
        },
        "triggerType": {
          "description": "Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.",
          "type": "string"
        }
      },
      "description": "Trigger is not used as an independent entity, it is retrieved as part of a Table entity."
    },
    "MySqlConnectionProfile": {
      "description": "Specifies connection parameters required specifically for MySQL databases.",
      "id": "MySqlConnectionProfile",
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service."
        },
        "host": {
          "description": "Required. The IP or hostname of the source MySQL database.",
          "type": "string"
        },
        "passwordSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates If this connection profile password is stored."
        },
        "ssl": {
          "description": "SSL configuration for the destination to connect to the source database.",
          "$ref": "SslConfig"
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Required. The network port of the source MySQL database."
        },
        "cloudSqlId": {
          "type": "string",
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
        }
      }
    },
    "ListPrivateConnectionsResponse": {
      "type": "object",
      "description": "Response message for 'ListPrivateConnections' request.",
      "id": "ListPrivateConnectionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "privateConnections": {
          "type": "array",
          "items": {
            "$ref": "PrivateConnection"
          },
          "description": "List of private connections."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      }
    },
    "PrimaryInstanceSettings": {
      "description": "Settings for the cluster's primary instance",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs."
        },
        "databaseFlags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used.",
          "type": "object"
        },
        "privateIp": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application."
        },
        "id": {
          "type": "string",
          "description": "Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \"[a-z0-9-]+\"."
        },
        "machineConfig": {
          "description": "Configuration for the machines that host the underlying database engine.",
          "$ref": "MachineConfig"
        }
      },
      "type": "object",
      "id": "PrimaryInstanceSettings"
    },
    "VmSelectionConfig": {
      "description": "VM selection configuration message",
      "id": "VmSelectionConfig",
      "properties": {
        "vmZone": {
          "description": "Required. The Google Cloud Platform zone the VM is located.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Operation": {
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "IndexEntity": {
      "description": "Index is not used as an independent entity, it is retrieved as part of a Table entity.",
      "id": "IndexEntity",
      "properties": {
        "customFeatures": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Custom engine specific features."
        },
        "name": {
          "description": "The name of the index.",
          "type": "string"
        },
        "unique": {
          "description": "Boolean value indicating whether the index is unique.",
          "type": "boolean"
        },
        "tableColumns": {
          "type": "array",
          "description": "Table columns used as part of the Index, for example B-TREE index should list the columns which constitutes the index.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Type of index, for example B-TREE.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseEntity": {
      "description": "The base entity type for all the database related entities. The message contains the entity name, the name of its parent, the entity type, and the specific details per entity type.",
      "properties": {
        "table": {
          "description": "Table.",
          "$ref": "TableEntity"
        },
        "parentEntity": {
          "type": "string",
          "description": "The full name of the parent entity (e.g. schema name)."
        },
        "schema": {
          "description": "Schema.",
          "$ref": "SchemaEntity"
        },
        "view": {
          "$ref": "ViewEntity",
          "description": "View."
        },
        "tree": {
          "description": "The type of tree the entity belongs to.",
          "enum": [
            "TREE_TYPE_UNSPECIFIED",
            "SOURCE",
            "DRAFT",
            "DESTINATION"
          ],
          "enumDescriptions": [
            "Tree type unspecified.",
            "Tree of entities loaded from a source database.",
            "Tree of entities converted from the source tree using the mapping rules.",
            "Tree of entities observed on the destination database."
          ],
          "type": "string"
        },
        "synonym": {
          "description": "Synonym.",
          "$ref": "SynonymEntity"
        },
        "entityType": {
          "enumDescriptions": [
            "Unspecified database entity type.",
            "Schema.",
            "Table.",
            "Column.",
            "Constraint.",
            "Index.",
            "Trigger.",
            "View.",
            "Sequence.",
            "Stored Procedure.",
            "Function.",
            "Synonym.",
            "Package.",
            "UDT.",
            "Materialized View.",
            "Database."
          ],
          "description": "The type of the database entity (table, view, index, ...).",
          "enum": [
            "DATABASE_ENTITY_TYPE_UNSPECIFIED",
            "DATABASE_ENTITY_TYPE_SCHEMA",
            "DATABASE_ENTITY_TYPE_TABLE",
            "DATABASE_ENTITY_TYPE_COLUMN",
            "DATABASE_ENTITY_TYPE_CONSTRAINT",
            "DATABASE_ENTITY_TYPE_INDEX",
            "DATABASE_ENTITY_TYPE_TRIGGER",
            "DATABASE_ENTITY_TYPE_VIEW",
            "DATABASE_ENTITY_TYPE_SEQUENCE",
            "DATABASE_ENTITY_TYPE_STORED_PROCEDURE",
            "DATABASE_ENTITY_TYPE_FUNCTION",
            "DATABASE_ENTITY_TYPE_SYNONYM",
            "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE",
            "DATABASE_ENTITY_TYPE_UDT",
            "DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW",
            "DATABASE_ENTITY_TYPE_DATABASE"
          ],
          "type": "string"
        },
        "shortName": {
          "type": "string",
          "description": "The short name (e.g. table name) of the entity."
        },
        "sequence": {
          "description": "Sequence.",
          "$ref": "SequenceEntity"
        },
        "storedProcedure": {
          "$ref": "StoredProcedureEntity",
          "description": "Stored procedure."
        },
        "databaseFunction": {
          "description": "Function.",
          "$ref": "FunctionEntity"
        },
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "EntityMapping"
          },
          "description": "Details about entity mappings. For source tree entities, this holds the draft entities which were generated by the mapping rules. For draft tree entities, this holds the source entities which were converted to form the draft entity. Destination entities will have no mapping details."
        },
        "databasePackage": {
          "description": "Package.",
          "$ref": "PackageEntity"
        }
      },
      "id": "DatabaseEntity",
      "type": "object"
    },
    "PostgreSqlConnectionProfile": {
      "id": "PostgreSqlConnectionProfile",
      "type": "object",
      "properties": {
        "ssl": {
          "$ref": "SslConfig",
          "description": "SSL configuration for the destination to connect to the source database."
        },
        "password": {
          "description": "Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "networkArchitecture": {
          "description": "Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.",
          "enumDescriptions": [
            "",
            "Instance is in Cloud SQL's old producer network architecture.",
            "Instance is in Cloud SQL's new producer network architecture."
          ],
          "enum": [
            "NETWORK_ARCHITECTURE_UNSPECIFIED",
            "NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER",
            "NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER"
          ],
          "readOnly": true,
          "type": "string"
        },
        "username": {
          "description": "Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.",
          "type": "string"
        },
        "host": {
          "description": "Required. The IP or hostname of the source PostgreSQL database.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The network port of the source PostgreSQL database."
        },
        "cloudSqlId": {
          "type": "string",
          "description": "If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source."
        },
        "staticIpConnectivity": {
          "$ref": "StaticIpConnectivity",
          "description": "Static ip connectivity data (default, no additional details needed)."
        },
        "passwordSet": {
          "readOnly": true,
          "description": "Output only. Indicates If this connection profile password is stored.",
          "type": "boolean"
        },
        "privateServiceConnectConnectivity": {
          "$ref": "PrivateServiceConnectConnectivity",
          "description": "Private service connect connectivity."
        }
      },
      "description": "Specifies connection parameters required specifically for PostgreSQL databases."
    }
  },
  "id": "datamigration:v1",
  "protocol": "rest",
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    }
  },
  "name": "datamigration",
  "documentationLink": "https://cloud.google.com/database-migration/",
  "baseUrl": "https://datamigration.googleapis.com/",
  "title": "Database Migration API",
  "basePath": "",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "version": "v1",
  "ownerName": "Google",
  "revision": "20230622",
  "mtlsRootUrl": "https://datamigration.mtls.googleapis.com/",
  "version_module": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "fetchStaticIps": {
              "id": "datamigration.projects.locations.fetchStaticIps",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A page token, received from a previous `FetchStaticIps` call.",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of IPs to return."
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`."
                }
              },
              "path": "v1/{+name}:fetchStaticIps",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "httpMethod": "GET",
              "description": "Fetches a set of static IP addresses that need to be allowlisted by the customer when using the static-IP connectivity method."
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "datamigration.projects.locations.list",
              "httpMethod": "GET"
            },
            "get": {
              "id": "datamigration.projects.locations.get",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "path": "v1/{+name}",
              "description": "Gets information about a location.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "connectionProfiles": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of connection profiles.",
                      "required": true,
                      "location": "path"
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "A comma-separated list of fields to order results according to.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "A filter expression that filters connection profiles listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list connection profiles created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z**. You can also filter nested fields. For example, you could specify **mySql.username = %lt;my_username%gt;** to list all connection profiles configured to connect with a specific username.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of connection profiles to return. The service may return fewer than this value. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 are coerced to 1000."
                    }
                  },
                  "path": "v1/{+parent}/connectionProfiles",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datamigration.projects.locations.connectionProfiles.list",
                  "description": "Retrieves a list of all connection profiles in a given project and location."
                },
                "create": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new connection profile in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "id": "datamigration.projects.locations.connectionProfiles.create",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of connection profiles."
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false. Only supported for Oracle connection profiles.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "skipValidation": {
                      "description": "Optional. Create the connection profile without validating it. The default is false. Only supported for Oracle connection profiles.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "description": "Gets details of a single connection profile.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Required. Name of the connection profile resource to get.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "GET"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false. Only supported for Oracle connection profiles.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}."
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "skipValidation": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Update the connection profile without validating it. The default is false. Only supported for Oracle connection profiles."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource."
                    }
                  },
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "description": "Update the configuration of a single connection profile.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "datamigration.projects.locations.connectionProfiles.patch"
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.connectionProfiles.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.connectionProfiles.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.connectionProfiles.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single Database Migration Service connection profile. A connection profile can only be deleted if it is not in use by any active migration jobs.",
                  "parameters": {
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the connection profile resource to delete.",
                      "required": true
                    },
                    "force": {
                      "description": "In case of force delete, the CloudSQL replica database is also deleted (only for CloudSQL connection profile).",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}"
                },
                "setIamPolicy": {
                  "id": "datamigration.projects.locations.connectionProfiles.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                }
              }
            },
            "migrationJobs": {
              "methods": {
                "restart": {
                  "id": "datamigration.projects.locations.migrationJobs.restart",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to restart.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:restart",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Restart a stopped or failed migration job, resetting the destination instance to its original state and starting the migration process from scratch.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:restart",
                  "request": {
                    "$ref": "RestartMigrationJobRequest"
                  }
                },
                "setIamPolicy": {
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST"
                },
                "generateTcpProxyScript": {
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "response": {
                    "$ref": "TcpProxyScript"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.generateTcpProxyScript",
                  "parameters": {
                    "migrationJob": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "required": true,
                      "description": "Name of the migration job resource to generate the TCP Proxy script."
                    }
                  },
                  "path": "v1/{+migrationJob}:generateTcpProxyScript",
                  "request": {
                    "$ref": "GenerateTcpProxyScriptRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateTcpProxyScript",
                  "description": "Generate a TCP Proxy configuration script to configure a cloud-hosted VM running a TCP Proxy.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "verify": {
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.migrationJobs.verify",
                  "request": {
                    "$ref": "VerifyMigrationJobRequest"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Name of the migration job resource to verify.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:verify",
                  "description": "Verify a migration job, making sure the destination can reach the source and that all configuration and prerequisites are met.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:verify"
                },
                "stop": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "StopMigrationJobRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:stop",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.stop",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Name of the migration job resource to stop.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Stops a running migration job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:stop"
                },
                "generateSshScript": {
                  "parameterOrder": [
                    "migrationJob"
                  ],
                  "description": "Generate a SSH configuration script to configure the reverse SSH connectivity.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GenerateSshScriptRequest"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.generateSshScript",
                  "httpMethod": "POST",
                  "path": "v1/{+migrationJob}:generateSshScript",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:generateSshScript",
                  "parameters": {
                    "migrationJob": {
                      "location": "path",
                      "description": "Name of the migration job resource to generate the SSH script.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "SshScript"
                  }
                },
                "promote": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:promote",
                  "id": "datamigration.projects.locations.migrationJobs.promote",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:promote",
                  "parameters": {
                    "name": {
                      "description": "Name of the migration job resource to promote.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Promote a migration job, stopping replication to the destination and promoting the destination to be a standalone database.",
                  "request": {
                    "$ref": "PromoteMigrationJobRequest"
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource.",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+name}",
                  "id": "datamigration.projects.locations.migrationJobs.patch",
                  "description": "Updates the parameters of a single migration job.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH"
                },
                "resume": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Resume a migration job that is currently stopped and is resumable (was stopped during CDC phase).",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string",
                      "description": "Name of the migration job resource to resume.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "ResumeMigrationJobRequest"
                  },
                  "path": "v1/{+name}:resume",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:resume",
                  "id": "datamigration.projects.locations.migrationJobs.resume"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "migrationJobId": {
                      "type": "string",
                      "description": "Required. The ID of the instance to create.",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of migration jobs."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    }
                  },
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.migrationJobs.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "path": "v1/{+parent}/migrationJobs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "MigrationJob"
                  },
                  "description": "Creates a new migration job in a given project and location."
                },
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the migration job resource to get.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Gets details of a single migration job.",
                  "id": "datamigration.projects.locations.migrationJobs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "MigrationJob"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}"
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "description": "A filter expression that filters migration jobs listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list migration jobs created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **reverseSshConnectivity.vmIp = \"1.2.3.4\"** to select all migration jobs connecting through the specific SSH tunnel bastion.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Sort the results based on the migration job name. Valid values are: \"name\", \"name asc\", and \"name desc\"."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The nextPageToken value received in the previous call to migrationJobs.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to migrationJobs.list must match the call that provided the page token.",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent which owns this collection of migrationJobs.",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of migration jobs to return. The service may return fewer than this value. If unspecified, at most 50 migration jobs will be returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "path": "v1/{+parent}/migrationJobs",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListMigrationJobsResponse"
                  },
                  "description": "Lists migration jobs in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.list"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "The destination CloudSQL connection profile is always deleted with the migration job. In case of force delete, the destination CloudSQL replica database is also deleted.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Required. Name of the migration job resource to delete.",
                      "type": "string"
                    },
                    "requestId": {
                      "location": "query",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a single migration job.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.migrationJobs.delete",
                  "path": "v1/{+name}"
                },
                "start": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "description": "Name of the migration job resource to start.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "StartMigrationJobRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:start",
                  "path": "v1/{+name}:start",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.migrationJobs.start",
                  "description": "Start an already created migration job.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "id": "datamigration.projects.locations.migrationJobs.testIamPermissions",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:testIamPermissions",
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/migrationJobs/{migrationJobsId}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    },
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/migrationJobs/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "id": "datamigration.projects.locations.migrationJobs.getIamPolicy"
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "datamigration.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}"
                },
                "cancel": {
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "datamigration.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "datamigration.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "id": "datamigration.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  }
                }
              }
            },
            "privateConnections": {
              "methods": {
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    }
                  },
                  "id": "datamigration.projects.locations.privateConnections.getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "setIamPolicy": {
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "datamigration.projects.locations.privateConnections.setIamPolicy",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:setIamPolicy",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single private connection.",
                  "httpMethod": "GET",
                  "id": "datamigration.projects.locations.privateConnections.get",
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the private connection to get.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "path": "v1/{+parent}/privateConnections",
                  "description": "Creates a new private connection in a given project and location.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "id": "datamigration.projects.locations.privateConnections.create",
                  "parameters": {
                    "skipValidation": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to true, will skip validations."
                    },
                    "privateConnectionId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The private connection identifier."
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of PrivateConnections."
                    }
                  }
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "datamigration.projects.locations.privateConnections.testIamPermissions",
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "id": "datamigration.projects.locations.privateConnections.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Retrieves a list of private connections in a given project and location.",
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "path": "v1/{+parent}/privateConnections",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of private connections.",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "A filter expression that filters private connections listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list private connections created this year by specifying **createTime %gt; 2021-01-01T00:00:00.000000000Z**.",
                      "type": "string",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Order by fields for the result."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum number of private connections to return. If unspecified, at most 50 private connections that are returned. The maximum value is 1000; values above 1000 are coerced to 1000.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "description": "Deletes a single Database Migration Service private connection.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the private connection to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.privateConnections.delete"
                }
              }
            },
            "conversionWorkspaces": {
              "methods": {
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:getIamPolicy",
                  "id": "datamigration.projects.locations.conversionWorkspaces.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "A filter expression that filters conversion workspaces listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be either =, !=, \u003e, or \u003c. For example, list conversion workspaces created this year by specifying **createTime %gt; 2020-01-01T00:00:00.000000000Z.** You can also filter nested fields. For example, you could specify **source.version = \"12.c.1\"** to select all conversion workspaces with source database version equal to 12.c.1.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The nextPageToken value received in the previous call to conversionWorkspaces.list, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspaces.list must match the call that provided the page token."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent which owns this collection of conversion workspaces.",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of conversion workspaces to return. The service may return fewer than this value. If unspecified, at most 50 sets are returned.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "id": "datamigration.projects.locations.conversionWorkspaces.list",
                  "response": {
                    "$ref": "ListConversionWorkspacesResponse"
                  },
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "description": "Lists conversion workspaces in a given project and location."
                },
                "testIamPermissions": {
                  "id": "datamigration.projects.locations.conversionWorkspaces.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ConversionWorkspace"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.get",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "description": "Gets details of a single conversion workspace.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "description": "Required. Name of the conversion workspace resource to get.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "searchBackgroundJobs": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:searchBackgroundJobs",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.searchBackgroundJobs",
                  "httpMethod": "GET",
                  "path": "v1/{+conversionWorkspace}:searchBackgroundJobs",
                  "parameters": {
                    "completedUntilTime": {
                      "format": "google-datetime",
                      "location": "query",
                      "type": "string",
                      "description": "Optional. If provided, only returns jobs that completed until (not including) the given timestamp."
                    },
                    "maxSize": {
                      "format": "int32",
                      "description": "Optional. The maximum number of jobs to return. The service may return fewer than this value. If unspecified, at most 100 jobs are returned. The maximum value is 100; values above 100 are coerced to 100.",
                      "location": "query",
                      "type": "integer"
                    },
                    "conversionWorkspace": {
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource whose jobs are listed, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "returnMostRecentPerJobType": {
                      "description": "Optional. Whether or not to return just the most recent job per job type,",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "description": "Searches/lists the background jobs for a specific conversion workspace. The background jobs are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are a way to expose the data plane jobs log.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "SearchBackgroundJobsResponse"
                  }
                },
                "setIamPolicy": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST",
                  "id": "datamigration.projects.locations.conversionWorkspaces.setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the conversion workspace resource to delete."
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Force delete the conversion workspace, even if there's a running migration that is using the workspace."
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
                    }
                  },
                  "path": "v1/{+name}",
                  "id": "datamigration.projects.locations.conversionWorkspaces.delete",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single conversion workspace.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}"
                },
                "convert": {
                  "description": "Creates a draft tree schema for the destination database.",
                  "id": "datamigration.projects.locations.conversionWorkspaces.convert",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:convert",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ConvertConversionWorkspaceRequest"
                  },
                  "path": "v1/{+name}:convert",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Name of the conversion workspace resource to convert in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                    }
                  }
                },
                "describeDatabaseEntities": {
                  "path": "v1/{+conversionWorkspace}:describeDatabaseEntities",
                  "description": "Describes the database entities tree for a specific conversion workspace and a specific tree type. Database entities are not resources like conversion workspaces or mapping rules, and they can't be created, updated or deleted. Instead, they are simple data objects describing the structure of the client database.",
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeDatabaseEntities",
                  "parameterOrder": [
                    "conversionWorkspace"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "DescribeDatabaseEntitiesResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeDatabaseEntities",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of entities to return. The service may return fewer entities than the value specifies.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "conversionWorkspace": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource whose database entities are described. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                    },
                    "uncommitted": {
                      "type": "boolean",
                      "description": "Whether to retrieve the latest committed version of the entities or the latest version. This field is ignored if a specific commit_id is specified.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filter the returned entities based on AIP-160 standard.",
                      "type": "string",
                      "location": "query"
                    },
                    "commitId": {
                      "location": "query",
                      "type": "string",
                      "description": "Request a specific commit ID. If not specified, the entities from the latest commit are returned."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The nextPageToken value received in the previous call to conversionWorkspace.describeDatabaseEntities, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspace.describeDatabaseEntities must match the call that provided the page token.",
                      "location": "query"
                    },
                    "tree": {
                      "enum": [
                        "DB_TREE_TYPE_UNSPECIFIED",
                        "SOURCE_TREE",
                        "DRAFT_TREE",
                        "DESTINATION_TREE"
                      ],
                      "type": "string",
                      "description": "The tree to fetch.",
                      "enumDescriptions": [
                        "Unspecified tree type.",
                        "The source database tree.",
                        "The draft database tree.",
                        "The destination database tree."
                      ],
                      "location": "query"
                    }
                  }
                },
                "rollback": {
                  "request": {
                    "$ref": "RollbackConversionWorkspaceRequest"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource to roll back to.",
                      "location": "path"
                    }
                  },
                  "description": "Rolls back a conversion workspace to the last committed snapshot.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:rollback",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:rollback",
                  "id": "datamigration.projects.locations.conversionWorkspaces.rollback",
                  "httpMethod": "POST"
                },
                "seed": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SeedConversionWorkspaceRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Imports a snapshot of the source database into the conversion workspace.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:seed",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "description": "Name of the conversion workspace resource to seed with new database structure, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.seed",
                  "path": "v1/{+name}:seed"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "description": "Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. Field mask is used to specify the fields to be overwritten by the update in the conversion workspace resource."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of a single conversion workspace.",
                  "id": "datamigration.projects.locations.conversionWorkspaces.patch",
                  "request": {
                    "$ref": "ConversionWorkspace"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "ConversionWorkspace"
                  },
                  "description": "Creates a new conversion workspace in a given project and location.",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/conversionWorkspaces",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datamigration.projects.locations.conversionWorkspaces.create",
                  "parameters": {
                    "requestId": {
                      "description": "A unique ID used to identify the request. If the server receives two requests with the same ID, then the second request is ignored. It is recommended to always set this value to a UUID. The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.",
                      "location": "query",
                      "type": "string"
                    },
                    "conversionWorkspaceId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID of the conversion workspace to create."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent which owns this collection of conversion workspaces.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "describeConversionWorkspaceRevisions": {
                  "httpMethod": "GET",
                  "parameters": {
                    "conversionWorkspace": {
                      "required": true,
                      "description": "Required. Name of the conversion workspace resource whose revisions are listed. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    },
                    "commitId": {
                      "type": "string",
                      "description": "Optional. Optional filter to request a specific commit ID.",
                      "location": "query"
                    }
                  },
                  "description": "Retrieves a list of committed revisions of a specific conversion workspace.",
                  "path": "v1/{+conversionWorkspace}:describeConversionWorkspaceRevisions",
                  "response": {
                    "$ref": "DescribeConversionWorkspaceRevisionsResponse"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.describeConversionWorkspaceRevisions",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:describeConversionWorkspaceRevisions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "conversionWorkspace"
                  ]
                },
                "apply": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the conversion workspace resource for which to apply the draft tree. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}:apply",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datamigration.projects.locations.conversionWorkspaces.apply",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:apply",
                  "request": {
                    "$ref": "ApplyConversionWorkspaceRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Applies draft tree onto a specific destination database."
                },
                "commit": {
                  "path": "v1/{+name}:commit",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the conversion workspace resource to commit."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}:commit",
                  "id": "datamigration.projects.locations.conversionWorkspaces.commit",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Marks all the data in the conversion workspace as committed.",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CommitConversionWorkspaceRequest"
                  }
                }
              },
              "resources": {
                "mappingRules": {
                  "methods": {
                    "import": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "ImportMappingRulesRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/mappingRules:import",
                      "id": "datamigration.projects.locations.conversionWorkspaces.mappingRules.import",
                      "description": "Imports the mapping rules for a given conversion workspace. Supports various formats of external rules files.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversionWorkspaces/[^/]+$",
                          "description": "Required. Name of the conversion workspace resource to import the rules to in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}."
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/conversionWorkspaces/{conversionWorkspacesId}/mappingRules:import"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "canonicalName": "Database Migration Service"
}

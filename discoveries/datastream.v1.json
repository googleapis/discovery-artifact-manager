{
  "servicePath": "",
  "ownerDomain": "google.com",
  "rootUrl": "https://datastream.googleapis.com/",
  "name": "datastream",
  "canonicalName": "Datastream",
  "version_module": true,
  "ownerName": "Google",
  "basePath": "",
  "id": "datastream:v1",
  "documentationLink": "https://cloud.google.com/datastream/",
  "discoveryVersion": "v1",
  "revision": "20240515",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "fetchStaticIps": {
              "id": "datastream.projects.locations.fetchStaticIps",
              "path": "v1/{+name}:fetchStaticIps",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "Maximum number of Ips to return, will likely not be specified.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "The FetchStaticIps API call exposes the static IP addresses used by Datastream."
            },
            "list": {
              "id": "datastream.projects.locations.list",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "datastream.projects.locations.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "datastream.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                },
                "get": {
                  "id": "datastream.projects.locations.operations.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "datastream.projects.locations.operations.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "datastream.projects.locations.operations.cancel",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "list": {
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of connection profiles.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to list connection profiles created in a project and location."
                },
                "get": {
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the connection profile resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to get details about a connection profile."
                },
                "create": {
                  "id": "datastream.projects.locations.connectionProfiles.create",
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "force": {
                      "description": "Optional. Create the connection profile without validating it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to create a connection profile in a project and location."
                },
                "patch": {
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The resource's name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "force": {
                      "description": "Optional. Update the connection profile without validating it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to update the parameters of a connection profile."
                },
                "delete": {
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the connection profile resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to delete a connection profile."
                },
                "discover": {
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "path": "v1/{+parent}/connectionProfiles:discover",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the connection profile type. Must be in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects of a parent data object that's optionally supplied in the request."
                }
              }
            },
            "streams": {
              "methods": {
                "list": {
                  "id": "datastream.projects.locations.streams.list",
                  "path": "v1/{+parent}/streams",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of streams.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to list streams in a project and location."
                },
                "get": {
                  "id": "datastream.projects.locations.streams.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the stream resource to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Stream"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to get details about a stream."
                },
                "create": {
                  "id": "datastream.projects.locations.streams.create",
                  "path": "v1/{+parent}/streams",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of streams.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "streamId": {
                      "description": "Required. The stream identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the stream, but don't create any resources. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "force": {
                      "description": "Optional. Create the stream without validating it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Stream"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to create a stream."
                },
                "patch": {
                  "id": "datastream.projects.locations.streams.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Output only. The stream's name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "force": {
                      "description": "Optional. Update the stream without validating it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Stream"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to update the configuration of a stream."
                },
                "delete": {
                  "id": "datastream.projects.locations.streams.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the stream resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to delete a stream."
                },
                "run": {
                  "id": "datastream.projects.locations.streams.run",
                  "path": "v1/{+name}:run",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:run",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the stream resource to start, in the format: projects/{project_id}/locations/{location}/streams/{stream_name}",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "RunStreamRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to start, resume or recover a stream with a non default CDC strategy. NOTE: This feature is currently experimental."
                }
              },
              "resources": {
                "objects": {
                  "methods": {
                    "get": {
                      "id": "datastream.projects.locations.streams.objects.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the stream object resource to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to get details about a stream object."
                    },
                    "lookup": {
                      "id": "datastream.projects.locations.streams.objects.lookup",
                      "path": "v1/{+parent}/objects:lookup",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:lookup",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "LookupStreamObjectRequest"
                      },
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to look up a stream object by its source object identifier."
                    },
                    "list": {
                      "id": "datastream.projects.locations.streams.objects.list",
                      "path": "v1/{+parent}/objects",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListStreamObjectsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to list the objects of a specific stream."
                    },
                    "startBackfillJob": {
                      "id": "datastream.projects.locations.streams.objects.startBackfillJob",
                      "path": "v1/{+object}:startBackfillJob",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob",
                      "httpMethod": "POST",
                      "parameters": {
                        "object": {
                          "description": "Required. The name of the stream object resource to start a backfill job for.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "object"
                      ],
                      "request": {
                        "$ref": "StartBackfillJobRequest"
                      },
                      "response": {
                        "$ref": "StartBackfillJobResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to start a backfill job for the specified stream object."
                    },
                    "stopBackfillJob": {
                      "id": "datastream.projects.locations.streams.objects.stopBackfillJob",
                      "path": "v1/{+object}:stopBackfillJob",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob",
                      "httpMethod": "POST",
                      "parameters": {
                        "object": {
                          "description": "Required. The name of the stream object resource to stop the backfill job for.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "object"
                      ],
                      "request": {
                        "$ref": "StopBackfillJobRequest"
                      },
                      "response": {
                        "$ref": "StopBackfillJobResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to stop a backfill job for the specified stream object."
                    }
                  }
                }
              }
            },
            "privateConnections": {
              "methods": {
                "create": {
                  "id": "datastream.projects.locations.privateConnections.create",
                  "path": "v1/{+parent}/privateConnections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "privateConnectionId": {
                      "description": "Required. The private connectivity identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. If set to true, will skip validations.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to create a private connectivity configuration."
                },
                "get": {
                  "id": "datastream.projects.locations.privateConnections.get",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the private connectivity configuration to get.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to get details about a private connectivity configuration."
                },
                "list": {
                  "id": "datastream.projects.locations.privateConnections.list",
                  "path": "v1/{+parent}/privateConnections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to list private connectivity configurations in a project and location."
                },
                "delete": {
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the private connectivity configuration to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to delete a private connectivity configuration."
                }
              },
              "resources": {
                "routes": {
                  "methods": {
                    "create": {
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "path": "v1/{+parent}/routes",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent that owns the collection of Routes.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "routeId": {
                          "description": "Required. The Route identifier.",
                          "location": "query",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Route"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to create a route for a private connectivity configuration in a project and location."
                    },
                    "get": {
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Route resource to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Route"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to get details about a route."
                    },
                    "list": {
                      "id": "datastream.projects.locations.privateConnections.routes.list",
                      "path": "v1/{+parent}/routes",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent that owns the collection of Routess.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter request.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to list routes created for a private connectivity configuration in a project and location."
                    },
                    "delete": {
                      "id": "datastream.projects.locations.privateConnections.routes.delete",
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Route resource to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Use this method to delete a route."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "ListConnectionProfilesResponse": {
      "id": "ListConnectionProfilesResponse",
      "description": "Response message for listing connection profiles.",
      "type": "object",
      "properties": {
        "connectionProfiles": {
          "description": "List of connection profiles.",
          "type": "array",
          "items": {
            "$ref": "ConnectionProfile"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConnectionProfile": {
      "id": "ConnectionProfile",
      "description": "A set of reusable connection configurations to be used as a source or destination for a stream.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource's name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "$ref": "OracleProfile"
        },
        "gcsProfile": {
          "description": "Cloud Storage ConnectionProfile configuration.",
          "$ref": "GcsProfile"
        },
        "mysqlProfile": {
          "description": "MySQL ConnectionProfile configuration.",
          "$ref": "MysqlProfile"
        },
        "bigqueryProfile": {
          "description": "BigQuery Connection Profile configuration.",
          "$ref": "BigQueryProfile"
        },
        "postgresqlProfile": {
          "description": "PostgreSQL Connection Profile configuration.",
          "$ref": "PostgresqlProfile"
        },
        "sqlServerProfile": {
          "description": "SQLServer Connection Profile configuration.",
          "$ref": "SqlServerProfile"
        },
        "staticServiceIpConnectivity": {
          "description": "Static Service IP connectivity.",
          "$ref": "StaticServiceIpConnectivity"
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        }
      }
    },
    "OracleProfile": {
      "id": "OracleProfile",
      "description": "Oracle database profile.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the Oracle connection.",
          "type": "string"
        },
        "port": {
          "description": "Port for the Oracle connection, default value is 1521.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. Username for the Oracle connection.",
          "type": "string"
        },
        "password": {
          "description": "Required. Password for the Oracle connection.",
          "type": "string"
        },
        "databaseService": {
          "description": "Required. Database for the Oracle connection.",
          "type": "string"
        },
        "connectionAttributes": {
          "description": "Connection string attributes",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "oracleSslConfig": {
          "description": "Optional. SSL configuration for the Oracle connection.",
          "$ref": "OracleSslConfig"
        }
      }
    },
    "OracleSslConfig": {
      "id": "OracleSslConfig",
      "description": "Oracle SSL configuration information.",
      "type": "object",
      "properties": {
        "caCertificate": {
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
          "type": "string"
        },
        "caCertificateSet": {
          "description": "Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile.",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "GcsProfile": {
      "id": "GcsProfile",
      "description": "Cloud Storage bucket profile.",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Required. The Cloud Storage bucket name.",
          "type": "string"
        },
        "rootPath": {
          "description": "The root path inside the Cloud Storage bucket.",
          "type": "string"
        }
      }
    },
    "MysqlProfile": {
      "id": "MysqlProfile",
      "description": "MySQL database profile.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the MySQL connection.",
          "type": "string"
        },
        "port": {
          "description": "Port for the MySQL connection, default value is 3306.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. Password for the MySQL connection.",
          "type": "string"
        },
        "sslConfig": {
          "description": "SSL configuration for the MySQL connection.",
          "$ref": "MysqlSslConfig"
        }
      }
    },
    "MysqlSslConfig": {
      "id": "MysqlSslConfig",
      "description": "MySQL SSL configuration information.",
      "type": "object",
      "properties": {
        "clientKey": {
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "clientKeySet": {
          "description": "Output only. Indicates whether the client_key field is set.",
          "readOnly": true,
          "type": "boolean"
        },
        "clientCertificate": {
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "clientCertificateSet": {
          "description": "Output only. Indicates whether the client_certificate field is set.",
          "readOnly": true,
          "type": "boolean"
        },
        "caCertificate": {
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
          "type": "string"
        },
        "caCertificateSet": {
          "description": "Output only. Indicates whether the ca_certificate field is set.",
          "readOnly": true,
          "type": "boolean"
        }
      }
    },
    "BigQueryProfile": {
      "id": "BigQueryProfile",
      "description": "BigQuery warehouse profile.",
      "type": "object",
      "properties": {}
    },
    "PostgresqlProfile": {
      "id": "PostgresqlProfile",
      "description": "PostgreSQL database profile.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the PostgreSQL connection.",
          "type": "string"
        },
        "port": {
          "description": "Port for the PostgreSQL connection, default value is 5432.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. Username for the PostgreSQL connection.",
          "type": "string"
        },
        "password": {
          "description": "Required. Password for the PostgreSQL connection.",
          "type": "string"
        },
        "database": {
          "description": "Required. Database for the PostgreSQL connection.",
          "type": "string"
        }
      }
    },
    "SqlServerProfile": {
      "id": "SqlServerProfile",
      "description": "SQLServer database profile",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the SQLServer connection.",
          "type": "string"
        },
        "port": {
          "description": "Port for the SQLServer connection, default value is 1433.",
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "description": "Required. Username for the SQLServer connection.",
          "type": "string"
        },
        "password": {
          "description": "Required. Password for the SQLServer connection.",
          "type": "string"
        },
        "database": {
          "description": "Required. Database for the SQLServer connection.",
          "type": "string"
        }
      }
    },
    "StaticServiceIpConnectivity": {
      "id": "StaticServiceIpConnectivity",
      "description": "Static IP address connectivity. Used when the source database is configured to allow incoming connections from the Datastream public IP addresses for the region specified in the connection profile.",
      "type": "object",
      "properties": {}
    },
    "ForwardSshTunnelConnectivity": {
      "id": "ForwardSshTunnelConnectivity",
      "description": "Forward SSH Tunnel connectivity.",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the SSH tunnel.",
          "type": "string"
        },
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        },
        "port": {
          "description": "Port for the SSH tunnel, default value is 22.",
          "type": "integer",
          "format": "int32"
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        }
      }
    },
    "PrivateConnectivity": {
      "id": "PrivateConnectivity",
      "description": "Private Connectivity",
      "type": "object",
      "properties": {
        "privateConnection": {
          "description": "Required. A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`",
          "type": "string"
        }
      }
    },
    "DiscoverConnectionProfileRequest": {
      "id": "DiscoverConnectionProfileRequest",
      "description": "Request message for 'discover' ConnectionProfile request.",
      "type": "object",
      "properties": {
        "connectionProfile": {
          "description": "An ad-hoc connection profile configuration.",
          "$ref": "ConnectionProfile"
        },
        "connectionProfileName": {
          "description": "A reference to an existing connection profile.",
          "type": "string"
        },
        "fullHierarchy": {
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
          "type": "boolean"
        },
        "hierarchyDepth": {
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "type": "integer",
          "format": "int32"
        },
        "oracleRdbms": {
          "description": "Oracle RDBMS to enrich with child data objects and metadata.",
          "$ref": "OracleRdbms"
        },
        "mysqlRdbms": {
          "description": "MySQL RDBMS to enrich with child data objects and metadata.",
          "$ref": "MysqlRdbms"
        },
        "postgresqlRdbms": {
          "description": "PostgreSQL RDBMS to enrich with child data objects and metadata.",
          "$ref": "PostgresqlRdbms"
        }
      }
    },
    "OracleRdbms": {
      "id": "OracleRdbms",
      "description": "Oracle database structure.",
      "type": "object",
      "properties": {
        "oracleSchemas": {
          "description": "Oracle schemas/databases in the database server.",
          "type": "array",
          "items": {
            "$ref": "OracleSchema"
          }
        }
      }
    },
    "OracleSchema": {
      "id": "OracleSchema",
      "description": "Oracle schema.",
      "type": "object",
      "properties": {
        "schema": {
          "description": "Schema name.",
          "type": "string"
        },
        "oracleTables": {
          "description": "Tables in the schema.",
          "type": "array",
          "items": {
            "$ref": "OracleTable"
          }
        }
      }
    },
    "OracleTable": {
      "id": "OracleTable",
      "description": "Oracle table.",
      "type": "object",
      "properties": {
        "table": {
          "description": "Table name.",
          "type": "string"
        },
        "oracleColumns": {
          "description": "Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "type": "array",
          "items": {
            "$ref": "OracleColumn"
          }
        }
      }
    },
    "OracleColumn": {
      "id": "OracleColumn",
      "description": "Oracle Column.",
      "type": "object",
      "properties": {
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "dataType": {
          "description": "The Oracle data type.",
          "type": "string"
        },
        "length": {
          "description": "Column length.",
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "description": "Column precision.",
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "description": "Column scale.",
          "type": "integer",
          "format": "int32"
        },
        "encoding": {
          "description": "Column encoding.",
          "type": "string"
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MysqlRdbms": {
      "id": "MysqlRdbms",
      "description": "MySQL database structure",
      "type": "object",
      "properties": {
        "mysqlDatabases": {
          "description": "Mysql databases on the server",
          "type": "array",
          "items": {
            "$ref": "MysqlDatabase"
          }
        }
      }
    },
    "MysqlDatabase": {
      "id": "MysqlDatabase",
      "description": "MySQL database.",
      "type": "object",
      "properties": {
        "database": {
          "description": "Database name.",
          "type": "string"
        },
        "mysqlTables": {
          "description": "Tables in the database.",
          "type": "array",
          "items": {
            "$ref": "MysqlTable"
          }
        }
      }
    },
    "MysqlTable": {
      "id": "MysqlTable",
      "description": "MySQL table.",
      "type": "object",
      "properties": {
        "table": {
          "description": "Table name.",
          "type": "string"
        },
        "mysqlColumns": {
          "description": "MySQL columns in the database. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "type": "array",
          "items": {
            "$ref": "MysqlColumn"
          }
        }
      }
    },
    "MysqlColumn": {
      "id": "MysqlColumn",
      "description": "MySQL Column.",
      "type": "object",
      "properties": {
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "dataType": {
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html",
          "type": "string"
        },
        "length": {
          "description": "Column length.",
          "type": "integer",
          "format": "int32"
        },
        "collation": {
          "description": "Column collation.",
          "type": "string"
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "description": "Column precision.",
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "description": "Column scale.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PostgresqlRdbms": {
      "id": "PostgresqlRdbms",
      "description": "PostgreSQL database structure.",
      "type": "object",
      "properties": {
        "postgresqlSchemas": {
          "description": "PostgreSQL schemas in the database server.",
          "type": "array",
          "items": {
            "$ref": "PostgresqlSchema"
          }
        }
      }
    },
    "PostgresqlSchema": {
      "id": "PostgresqlSchema",
      "description": "PostgreSQL schema.",
      "type": "object",
      "properties": {
        "schema": {
          "description": "Schema name.",
          "type": "string"
        },
        "postgresqlTables": {
          "description": "Tables in the schema.",
          "type": "array",
          "items": {
            "$ref": "PostgresqlTable"
          }
        }
      }
    },
    "PostgresqlTable": {
      "id": "PostgresqlTable",
      "description": "PostgreSQL table.",
      "type": "object",
      "properties": {
        "table": {
          "description": "Table name.",
          "type": "string"
        },
        "postgresqlColumns": {
          "description": "PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "type": "array",
          "items": {
            "$ref": "PostgresqlColumn"
          }
        }
      }
    },
    "PostgresqlColumn": {
      "id": "PostgresqlColumn",
      "description": "PostgreSQL Column.",
      "type": "object",
      "properties": {
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "dataType": {
          "description": "The PostgreSQL data type.",
          "type": "string"
        },
        "length": {
          "description": "Column length.",
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "description": "Column precision.",
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "description": "Column scale.",
          "type": "integer",
          "format": "int32"
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DiscoverConnectionProfileResponse": {
      "id": "DiscoverConnectionProfileResponse",
      "description": "Response from a discover request.",
      "type": "object",
      "properties": {
        "oracleRdbms": {
          "description": "Enriched Oracle RDBMS object.",
          "$ref": "OracleRdbms"
        },
        "mysqlRdbms": {
          "description": "Enriched MySQL RDBMS object.",
          "$ref": "MysqlRdbms"
        },
        "postgresqlRdbms": {
          "description": "Enriched PostgreSQL RDBMS object.",
          "$ref": "PostgresqlRdbms"
        }
      }
    },
    "ListStreamsResponse": {
      "id": "ListStreamsResponse",
      "description": "Response message for listing streams.",
      "type": "object",
      "properties": {
        "streams": {
          "description": "List of streams",
          "type": "array",
          "items": {
            "$ref": "Stream"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Stream": {
      "id": "Stream",
      "description": "A resource representing streaming data from a source to a destination.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The stream's name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time of the stream.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last update time of the stream.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "sourceConfig": {
          "description": "Required. Source connection profile configuration.",
          "$ref": "SourceConfig"
        },
        "destinationConfig": {
          "description": "Required. Destination connection profile configuration.",
          "$ref": "DestinationConfig"
        },
        "state": {
          "description": "The state of the stream.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created but has not yet started streaming data.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ]
        },
        "backfillAll": {
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded.",
          "$ref": "BackfillAllStrategy"
        },
        "backfillNone": {
          "description": "Do not automatically backfill any objects.",
          "$ref": "BackfillNoneStrategy"
        },
        "errors": {
          "description": "Output only. Errors on the Stream.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        },
        "customerManagedEncryptionKey": {
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS.",
          "type": "string"
        },
        "lastRecoveryTime": {
          "description": "Output only. If the stream was recovered, the time of the last recovery. Note: This field is currently experimental.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "SourceConfig": {
      "id": "SourceConfig",
      "description": "The configuration of the stream source.",
      "type": "object",
      "properties": {
        "sourceConnectionProfile": {
          "description": "Required. Source connection profile resoource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`",
          "type": "string"
        },
        "oracleSourceConfig": {
          "description": "Oracle data source configuration.",
          "$ref": "OracleSourceConfig"
        },
        "mysqlSourceConfig": {
          "description": "MySQL data source configuration.",
          "$ref": "MysqlSourceConfig"
        },
        "postgresqlSourceConfig": {
          "description": "PostgreSQL data source configuration.",
          "$ref": "PostgresqlSourceConfig"
        },
        "sqlServerSourceConfig": {
          "description": "SQLServer data source configuration.",
          "$ref": "SqlServerSourceConfig"
        }
      }
    },
    "OracleSourceConfig": {
      "id": "OracleSourceConfig",
      "description": "Oracle data source configuration",
      "type": "object",
      "properties": {
        "includeObjects": {
          "description": "Oracle objects to include in the stream.",
          "$ref": "OracleRdbms"
        },
        "excludeObjects": {
          "description": "Oracle objects to exclude from the stream.",
          "$ref": "OracleRdbms"
        },
        "maxConcurrentCdcTasks": {
          "description": "Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used.",
          "type": "integer",
          "format": "int32"
        },
        "maxConcurrentBackfillTasks": {
          "description": "Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used.",
          "type": "integer",
          "format": "int32"
        },
        "dropLargeObjects": {
          "description": "Drop large object values.",
          "$ref": "DropLargeObjects"
        },
        "streamLargeObjects": {
          "description": "Stream large object values.",
          "$ref": "StreamLargeObjects"
        }
      }
    },
    "DropLargeObjects": {
      "id": "DropLargeObjects",
      "description": "Configuration to drop large object values.",
      "type": "object",
      "properties": {}
    },
    "StreamLargeObjects": {
      "id": "StreamLargeObjects",
      "description": "Configuration to stream large object values.",
      "type": "object",
      "properties": {}
    },
    "MysqlSourceConfig": {
      "id": "MysqlSourceConfig",
      "description": "MySQL source configuration",
      "type": "object",
      "properties": {
        "includeObjects": {
          "description": "MySQL objects to retrieve from the source.",
          "$ref": "MysqlRdbms"
        },
        "excludeObjects": {
          "description": "MySQL objects to exclude from the stream.",
          "$ref": "MysqlRdbms"
        },
        "maxConcurrentCdcTasks": {
          "description": "Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "type": "integer",
          "format": "int32"
        },
        "maxConcurrentBackfillTasks": {
          "description": "Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PostgresqlSourceConfig": {
      "id": "PostgresqlSourceConfig",
      "description": "PostgreSQL data source configuration",
      "type": "object",
      "properties": {
        "includeObjects": {
          "description": "PostgreSQL objects to include in the stream.",
          "$ref": "PostgresqlRdbms"
        },
        "excludeObjects": {
          "description": "PostgreSQL objects to exclude from the stream.",
          "$ref": "PostgresqlRdbms"
        },
        "replicationSlot": {
          "description": "Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin.",
          "type": "string"
        },
        "publication": {
          "description": "Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects.",
          "type": "string"
        },
        "maxConcurrentBackfillTasks": {
          "description": "Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SqlServerSourceConfig": {
      "id": "SqlServerSourceConfig",
      "description": "SQLServer data source configuration",
      "type": "object",
      "properties": {
        "includeObjects": {
          "description": "SQLServer objects to include in the stream.",
          "$ref": "SqlServerRdbms"
        },
        "excludeObjects": {
          "description": "SQLServer objects to exclude from the stream.",
          "$ref": "SqlServerRdbms"
        },
        "maxConcurrentCdcTasks": {
          "description": "Max concurrent CDC tasks.",
          "type": "integer",
          "format": "int32"
        },
        "maxConcurrentBackfillTasks": {
          "description": "Max concurrent backfill tasks.",
          "type": "integer",
          "format": "int32"
        },
        "transactionLogs": {
          "description": "CDC reader reads from transaction logs.",
          "$ref": "SqlServerTransactionLogs"
        },
        "changeTables": {
          "description": "CDC reader reads from change tables.",
          "$ref": "SqlServerChangeTables"
        }
      }
    },
    "SqlServerRdbms": {
      "id": "SqlServerRdbms",
      "description": "SQLServer database structure.",
      "type": "object",
      "properties": {
        "schemas": {
          "description": "SQLServer schemas in the database server.",
          "type": "array",
          "items": {
            "$ref": "SqlServerSchema"
          }
        }
      }
    },
    "SqlServerSchema": {
      "id": "SqlServerSchema",
      "description": "SQLServer schema.",
      "type": "object",
      "properties": {
        "schema": {
          "description": "Schema name.",
          "type": "string"
        },
        "tables": {
          "description": "Tables in the schema.",
          "type": "array",
          "items": {
            "$ref": "SqlServerTable"
          }
        }
      }
    },
    "SqlServerTable": {
      "id": "SqlServerTable",
      "description": "SQLServer table.",
      "type": "object",
      "properties": {
        "table": {
          "description": "Table name.",
          "type": "string"
        },
        "columns": {
          "description": "SQLServer columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "type": "array",
          "items": {
            "$ref": "SqlServerColumn"
          }
        }
      }
    },
    "SqlServerColumn": {
      "id": "SqlServerColumn",
      "description": "SQLServer Column.",
      "type": "object",
      "properties": {
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "dataType": {
          "description": "The SQLServer data type.",
          "type": "string"
        },
        "length": {
          "description": "Column length.",
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "description": "Column precision.",
          "type": "integer",
          "format": "int32"
        },
        "scale": {
          "description": "Column scale.",
          "type": "integer",
          "format": "int32"
        },
        "primaryKey": {
          "description": "Whether or not the column represents a primary key.",
          "type": "boolean"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SqlServerTransactionLogs": {
      "id": "SqlServerTransactionLogs",
      "description": "Configuration to use Transaction Logs CDC read method.",
      "type": "object",
      "properties": {}
    },
    "SqlServerChangeTables": {
      "id": "SqlServerChangeTables",
      "description": "Configuration to use Change Tables CDC read method.",
      "type": "object",
      "properties": {}
    },
    "DestinationConfig": {
      "id": "DestinationConfig",
      "description": "The configuration of the stream destination.",
      "type": "object",
      "properties": {
        "destinationConnectionProfile": {
          "description": "Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`",
          "type": "string"
        },
        "gcsDestinationConfig": {
          "description": "A configuration for how data should be loaded to Cloud Storage.",
          "$ref": "GcsDestinationConfig"
        },
        "bigqueryDestinationConfig": {
          "description": "BigQuery destination configuration.",
          "$ref": "BigQueryDestinationConfig"
        }
      }
    },
    "GcsDestinationConfig": {
      "id": "GcsDestinationConfig",
      "description": "Google Cloud Storage destination configuration",
      "type": "object",
      "properties": {
        "path": {
          "description": "Path inside the Cloud Storage bucket to write data to.",
          "type": "string"
        },
        "fileRotationMb": {
          "description": "The maximum file size to be saved in the bucket.",
          "type": "integer",
          "format": "int32"
        },
        "fileRotationInterval": {
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created. Values within the range of 15-60 seconds are allowed.",
          "type": "string",
          "format": "google-duration"
        },
        "avroFileFormat": {
          "description": "AVRO file format configuration.",
          "$ref": "AvroFileFormat"
        },
        "jsonFileFormat": {
          "description": "JSON file format configuration.",
          "$ref": "JsonFileFormat"
        }
      }
    },
    "AvroFileFormat": {
      "id": "AvroFileFormat",
      "description": "AVRO file format configuration.",
      "type": "object",
      "properties": {}
    },
    "JsonFileFormat": {
      "id": "JsonFileFormat",
      "description": "JSON file format configuration.",
      "type": "object",
      "properties": {
        "schemaFileFormat": {
          "description": "The schema file format along JSON data files.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ],
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ]
        },
        "compression": {
          "description": "Compression of the loaded JSON file.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ]
        }
      }
    },
    "BigQueryDestinationConfig": {
      "id": "BigQueryDestinationConfig",
      "description": "BigQuery destination configuration",
      "type": "object",
      "properties": {
        "singleTargetDataset": {
          "description": "Single destination dataset.",
          "$ref": "SingleTargetDataset"
        },
        "sourceHierarchyDatasets": {
          "description": "Source hierarchy datasets.",
          "$ref": "SourceHierarchyDatasets"
        },
        "dataFreshness": {
          "description": "The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost.",
          "type": "string",
          "format": "google-duration"
        },
        "merge": {
          "description": "The standard mode",
          "$ref": "Merge"
        },
        "appendOnly": {
          "description": "Append only mode",
          "$ref": "AppendOnly"
        }
      }
    },
    "SingleTargetDataset": {
      "id": "SingleTargetDataset",
      "description": "A single target dataset to which all data will be streamed.",
      "type": "object",
      "properties": {
        "datasetId": {
          "description": "The dataset ID of the target dataset. DatasetIds allowed characters: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#datasetreference.",
          "type": "string"
        }
      }
    },
    "SourceHierarchyDatasets": {
      "id": "SourceHierarchyDatasets",
      "description": "Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy.",
      "type": "object",
      "properties": {
        "datasetTemplate": {
          "description": "The dataset template to use for dynamic dataset creation.",
          "$ref": "DatasetTemplate"
        }
      }
    },
    "DatasetTemplate": {
      "id": "DatasetTemplate",
      "description": "Dataset template used for dynamic dataset creation.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.",
          "type": "string"
        },
        "datasetIdPrefix": {
          "description": "If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. _.",
          "type": "string"
        },
        "kmsKeyName": {
          "description": "Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information.",
          "type": "string"
        }
      }
    },
    "Merge": {
      "id": "Merge",
      "description": "Merge mode defines that all changes to a table will be merged at the destination table.",
      "type": "object",
      "properties": {}
    },
    "AppendOnly": {
      "id": "AppendOnly",
      "description": "AppendOnly mode defines that all changes to a table will be written to the destination table.",
      "type": "object",
      "properties": {}
    },
    "BackfillAllStrategy": {
      "id": "BackfillAllStrategy",
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.",
      "type": "object",
      "properties": {
        "oracleExcludedObjects": {
          "description": "Oracle data source objects to avoid backfilling.",
          "$ref": "OracleRdbms"
        },
        "mysqlExcludedObjects": {
          "description": "MySQL data source objects to avoid backfilling.",
          "$ref": "MysqlRdbms"
        },
        "postgresqlExcludedObjects": {
          "description": "PostgreSQL data source objects to avoid backfilling.",
          "$ref": "PostgresqlRdbms"
        },
        "sqlServerExcludedObjects": {
          "description": "SQLServer data source objects to avoid backfilling",
          "$ref": "SqlServerRdbms"
        }
      }
    },
    "BackfillNoneStrategy": {
      "id": "BackfillNoneStrategy",
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects.",
      "type": "object",
      "properties": {}
    },
    "Error": {
      "id": "Error",
      "description": "Represent a user-facing Error.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "A title that explains the reason for the error.",
          "type": "string"
        },
        "errorUuid": {
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses.",
          "type": "string"
        },
        "message": {
          "description": "A message containing more information about the error that occurred.",
          "type": "string"
        },
        "errorTime": {
          "description": "The time when the error occurred.",
          "type": "string",
          "format": "google-datetime"
        },
        "details": {
          "description": "Additional information about the error.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RunStreamRequest": {
      "id": "RunStreamRequest",
      "description": "Request message for running a stream.",
      "type": "object",
      "properties": {
        "cdcStrategy": {
          "description": "Optional. The CDC strategy of the stream. If not set, the system's default value will be used.",
          "$ref": "CdcStrategy"
        }
      }
    },
    "CdcStrategy": {
      "id": "CdcStrategy",
      "description": "The strategy that the stream uses for CDC replication.",
      "type": "object",
      "properties": {
        "mostRecentStartPosition": {
          "description": "Optional. Start replicating from the most recent position in the source.",
          "$ref": "MostRecentStartPosition"
        },
        "nextAvailableStartPosition": {
          "description": "Optional. Resume replication from the next available position in the source.",
          "$ref": "NextAvailableStartPosition"
        },
        "specificStartPosition": {
          "description": "Optional. Start replicating from a specific position in the source.",
          "$ref": "SpecificStartPosition"
        }
      }
    },
    "MostRecentStartPosition": {
      "id": "MostRecentStartPosition",
      "description": "CDC strategy to start replicating from the most recent position in the source.",
      "type": "object",
      "properties": {}
    },
    "NextAvailableStartPosition": {
      "id": "NextAvailableStartPosition",
      "description": "CDC strategy to resume replication from the next available position in the source.",
      "type": "object",
      "properties": {}
    },
    "SpecificStartPosition": {
      "id": "SpecificStartPosition",
      "description": "CDC strategy to start replicating from a specific position in the source.",
      "type": "object",
      "properties": {
        "mysqlLogPosition": {
          "description": "MySQL specific log position to start replicating from.",
          "$ref": "MysqlLogPosition"
        },
        "oracleScnPosition": {
          "description": "Oracle SCN to start replicating from.",
          "$ref": "OracleScnPosition"
        }
      }
    },
    "MysqlLogPosition": {
      "id": "MysqlLogPosition",
      "description": "MySQL log position",
      "type": "object",
      "properties": {
        "logFile": {
          "description": "Required. The binary log file name.",
          "type": "string"
        },
        "logPosition": {
          "description": "Optional. The position within the binary log file. Default is head of file.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OracleScnPosition": {
      "id": "OracleScnPosition",
      "description": "Oracle SCN position",
      "type": "object",
      "properties": {
        "scn": {
          "description": "Required. SCN number from where Logs will be read",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "StreamObject": {
      "id": "StreamObject",
      "description": "A specific stream object (e.g a specific DB table).",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The object resource's name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time of the object.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The last update time of the object.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "errors": {
          "description": "Output only. Active errors on the object.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        },
        "backfillJob": {
          "description": "The latest backfill job that was initiated for the stream object.",
          "$ref": "BackfillJob"
        },
        "sourceObject": {
          "description": "The object identifier in the data source.",
          "$ref": "SourceObjectIdentifier"
        }
      }
    },
    "BackfillJob": {
      "id": "BackfillJob",
      "description": "Represents a backfill job on a specific stream object.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. Backfill job state.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).",
            "Backfill job will start pending available resources.",
            "Backfill job is running.",
            "Backfill job stopped (next job run will start from beginning).",
            "Backfill job failed (due to an error).",
            "Backfill completed successfully.",
            "Backfill job failed since the table structure is currently unsupported for backfill."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "PENDING",
            "ACTIVE",
            "STOPPED",
            "FAILED",
            "COMPLETED",
            "UNSUPPORTED"
          ]
        },
        "trigger": {
          "description": "Backfill job's triggering reason.",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Object backfill job was triggered automatically according to the stream's backfill strategy.",
            "Object backfill job was triggered manually using the dedicated API."
          ],
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ]
        },
        "lastStartTime": {
          "description": "Output only. Backfill job's start time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "lastEndTime": {
          "description": "Output only. Backfill job's end time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "errors": {
          "description": "Output only. Errors which caused the backfill job to fail.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        }
      }
    },
    "SourceObjectIdentifier": {
      "id": "SourceObjectIdentifier",
      "description": "Represents an identifier of an object in the data source.",
      "type": "object",
      "properties": {
        "oracleIdentifier": {
          "description": "Oracle data source object identifier.",
          "$ref": "OracleObjectIdentifier"
        },
        "mysqlIdentifier": {
          "description": "Mysql data source object identifier.",
          "$ref": "MysqlObjectIdentifier"
        },
        "postgresqlIdentifier": {
          "description": "PostgreSQL data source object identifier.",
          "$ref": "PostgresqlObjectIdentifier"
        },
        "sqlServerIdentifier": {
          "description": "SQLServer data source object identifier.",
          "$ref": "SqlServerObjectIdentifier"
        }
      }
    },
    "OracleObjectIdentifier": {
      "id": "OracleObjectIdentifier",
      "description": "Oracle data source object identifier.",
      "type": "object",
      "properties": {
        "schema": {
          "description": "Required. The schema name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "MysqlObjectIdentifier": {
      "id": "MysqlObjectIdentifier",
      "description": "Mysql data source object identifier.",
      "type": "object",
      "properties": {
        "database": {
          "description": "Required. The database name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "PostgresqlObjectIdentifier": {
      "id": "PostgresqlObjectIdentifier",
      "description": "PostgreSQL data source object identifier.",
      "type": "object",
      "properties": {
        "schema": {
          "description": "Required. The schema name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "SqlServerObjectIdentifier": {
      "id": "SqlServerObjectIdentifier",
      "description": "SQLServer data source object identifier.",
      "type": "object",
      "properties": {
        "schema": {
          "description": "Required. The schema name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "LookupStreamObjectRequest": {
      "id": "LookupStreamObjectRequest",
      "description": "Request for looking up a specific stream object by its source object identifier.",
      "type": "object",
      "properties": {
        "sourceObjectIdentifier": {
          "description": "Required. The source object identifier which maps to the stream object.",
          "$ref": "SourceObjectIdentifier"
        }
      }
    },
    "ListStreamObjectsResponse": {
      "id": "ListStreamObjectsResponse",
      "description": "Response containing the objects for a stream.",
      "type": "object",
      "properties": {
        "streamObjects": {
          "description": "List of stream objects.",
          "type": "array",
          "items": {
            "$ref": "StreamObject"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page.",
          "type": "string"
        }
      }
    },
    "StartBackfillJobRequest": {
      "id": "StartBackfillJobRequest",
      "description": "Request for manually initiating a backfill job for a specific stream object.",
      "type": "object",
      "properties": {}
    },
    "StartBackfillJobResponse": {
      "id": "StartBackfillJobResponse",
      "description": "Response for manually initiating a backfill job for a specific stream object.",
      "type": "object",
      "properties": {
        "object": {
          "description": "The stream object resource a backfill job was started for.",
          "$ref": "StreamObject"
        }
      }
    },
    "StopBackfillJobRequest": {
      "id": "StopBackfillJobRequest",
      "description": "Request for manually stopping a running backfill job for a specific stream object.",
      "type": "object",
      "properties": {}
    },
    "StopBackfillJobResponse": {
      "id": "StopBackfillJobResponse",
      "description": "Response for manually stop a backfill job for a specific stream object.",
      "type": "object",
      "properties": {
        "object": {
          "description": "The stream object resource the backfill job was stopped for.",
          "$ref": "StreamObject"
        }
      }
    },
    "FetchStaticIpsResponse": {
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' response.",
      "type": "object",
      "properties": {
        "staticIps": {
          "description": "list of static ips by account",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "PrivateConnection": {
      "id": "PrivateConnection",
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource's name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "state": {
          "description": "Output only. The state of the Private Connection.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ]
        },
        "error": {
          "description": "Output only. In case of error, the details of the error in a user-friendly format.",
          "readOnly": true,
          "$ref": "Error"
        },
        "vpcPeeringConfig": {
          "description": "VPC Peering Config.",
          "$ref": "VpcPeeringConfig"
        }
      }
    },
    "VpcPeeringConfig": {
      "id": "VpcPeeringConfig",
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.",
      "type": "object",
      "properties": {
        "vpc": {
          "description": "Required. Fully qualified name of the VPC that Datastream will peer to. Format: `projects/{project}/global/{networks}/{name}`",
          "type": "string"
        },
        "subnet": {
          "description": "Required. A free subnet for peering. (CIDR of /29)",
          "type": "string"
        }
      }
    },
    "ListPrivateConnectionsResponse": {
      "id": "ListPrivateConnectionsResponse",
      "description": "Response containing a list of private connection configurations.",
      "type": "object",
      "properties": {
        "privateConnections": {
          "description": "List of private connectivity configurations.",
          "type": "array",
          "items": {
            "$ref": "PrivateConnection"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Route": {
      "id": "Route",
      "description": "The route resource is the child of the private connection resource, used for defining a route for a private connection.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource's name.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "destinationAddress": {
          "description": "Required. Destination address for connection",
          "type": "string"
        },
        "destinationPort": {
          "description": "Destination port for connection",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListRoutesResponse": {
      "id": "ListRoutesResponse",
      "description": "Route list response.",
      "type": "object",
      "properties": {
        "routes": {
          "description": "List of Routes.",
          "type": "array",
          "items": {
            "$ref": "Route"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents a Google Cloud location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        },
        "validationResult": {
          "description": "Output only. Results of executed validations if there are any.",
          "readOnly": true,
          "$ref": "ValidationResult"
        }
      }
    },
    "ValidationResult": {
      "id": "ValidationResult",
      "description": "Contains the current validation results.",
      "type": "object",
      "properties": {
        "validations": {
          "description": "A list of validations (includes both executed as well as not executed validations).",
          "type": "array",
          "items": {
            "$ref": "Validation"
          }
        }
      }
    },
    "Validation": {
      "id": "Validation",
      "description": "A validation to perform on a stream.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A short description of the validation.",
          "type": "string"
        },
        "state": {
          "description": "Output only. Validation execution status.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed.",
            "Validation executed with warnings."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED",
            "WARNING"
          ]
        },
        "message": {
          "description": "Messages reflecting the validation results.",
          "type": "array",
          "items": {
            "$ref": "ValidationMessage"
          }
        },
        "code": {
          "description": "A custom code identifying this validation.",
          "type": "string"
        }
      }
    },
    "ValidationMessage": {
      "id": "ValidationMessage",
      "description": "Represent user-facing validation result message.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The result of the validation.",
          "type": "string"
        },
        "level": {
          "description": "Message severity level (warning or error).",
          "type": "string",
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ],
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ]
        },
        "metadata": {
          "description": "Additional metadata related to the result.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "description": "A custom code identifying this specific message.",
          "type": "string"
        }
      }
    }
  },
  "baseUrl": "https://datastream.googleapis.com/",
  "kind": "discovery#restDescription",
  "fullyEncodeReservedExpansion": true,
  "title": "Datastream API",
  "protocol": "rest",
  "description": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version": "v1",
  "batchPath": "batch"
}

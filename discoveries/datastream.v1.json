{
  "version": "v1",
  "ownerName": "Google",
  "description": "",
  "title": "Datastream API",
  "schemas": {
    "ForwardSshTunnelConnectivity": {
      "description": "Forward SSH Tunnel connectivity.",
      "properties": {
        "username": {
          "description": "Required. Username for the SSH tunnel.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "Input only. SSH password."
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the SSH tunnel."
        },
        "port": {
          "description": "Port for the SSH tunnel, default value is 22.",
          "type": "integer",
          "format": "int32"
        },
        "privateKey": {
          "type": "string",
          "description": "Input only. SSH private key."
        }
      },
      "type": "object",
      "id": "ForwardSshTunnelConnectivity"
    },
    "MysqlColumn": {
      "properties": {
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "scale": {
          "format": "int32",
          "type": "integer",
          "description": "Column scale."
        },
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "dataType": {
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html",
          "type": "string"
        },
        "ordinalPosition": {
          "format": "int32",
          "type": "integer",
          "description": "The ordinal position of the column in the table."
        },
        "precision": {
          "format": "int32",
          "description": "Column precision.",
          "type": "integer"
        },
        "length": {
          "format": "int32",
          "type": "integer",
          "description": "Column length."
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "collation": {
          "description": "Column collation.",
          "type": "string"
        }
      },
      "id": "MysqlColumn",
      "type": "object",
      "description": "MySQL Column."
    },
    "StreamLargeObjects": {
      "properties": {},
      "description": "Configuration to stream large object values.",
      "type": "object",
      "id": "StreamLargeObjects"
    },
    "SourceHierarchyDatasets": {
      "type": "object",
      "id": "SourceHierarchyDatasets",
      "properties": {
        "datasetTemplate": {
          "description": "The dataset template to use for dynamic dataset creation.",
          "$ref": "DatasetTemplate"
        }
      },
      "description": "Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy."
    },
    "PostgresqlTable": {
      "id": "PostgresqlTable",
      "type": "object",
      "description": "PostgreSQL table.",
      "properties": {
        "postgresqlColumns": {
          "type": "array",
          "description": "PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "items": {
            "$ref": "PostgresqlColumn"
          }
        },
        "table": {
          "description": "Table name.",
          "type": "string"
        }
      }
    },
    "MysqlDatabase": {
      "description": "MySQL database.",
      "properties": {
        "mysqlTables": {
          "type": "array",
          "items": {
            "$ref": "MysqlTable"
          },
          "description": "Tables in the database."
        },
        "database": {
          "description": "Database name.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MysqlDatabase"
    },
    "OracleSourceConfig": {
      "id": "OracleSourceConfig",
      "properties": {
        "streamLargeObjects": {
          "description": "Stream large object values. NOTE: This feature is currently experimental.",
          "$ref": "StreamLargeObjects"
        },
        "maxConcurrentCdcTasks": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used."
        },
        "excludeObjects": {
          "description": "Oracle objects to exclude from the stream.",
          "$ref": "OracleRdbms"
        },
        "maxConcurrentBackfillTasks": {
          "description": "Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used.",
          "format": "int32",
          "type": "integer"
        },
        "includeObjects": {
          "description": "Oracle objects to include in the stream.",
          "$ref": "OracleRdbms"
        },
        "dropLargeObjects": {
          "description": "Drop large object values.",
          "$ref": "DropLargeObjects"
        }
      },
      "type": "object",
      "description": "Oracle data source configuration"
    },
    "Route": {
      "type": "object",
      "description": "The route resource is the child of the private connection resource, used for defining a route for a private connection.",
      "id": "Route",
      "properties": {
        "destinationAddress": {
          "type": "string",
          "description": "Required. Destination address for connection"
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource's name."
        },
        "destinationPort": {
          "format": "int32",
          "type": "integer",
          "description": "Destination port for connection"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        }
      }
    },
    "VpcPeeringConfig": {
      "properties": {
        "subnet": {
          "type": "string",
          "description": "Required. A free subnet for peering. (CIDR of /29)"
        },
        "vpc": {
          "type": "string",
          "description": "Required. Fully qualified name of the VPC that Datastream will peer to. Format: `projects/{project}/global/{networks}/{name}`"
        }
      },
      "id": "VpcPeeringConfig",
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.",
      "type": "object"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "RunStreamRequest": {
      "properties": {
        "cdcStrategy": {
          "description": "Optional. The CDC strategy of the stream. If not set, the system's default value will be used.",
          "$ref": "CdcStrategy"
        }
      },
      "type": "object",
      "description": "Request message for running a stream.",
      "id": "RunStreamRequest"
    },
    "BackfillJob": {
      "type": "object",
      "properties": {
        "errors": {
          "readOnly": true,
          "items": {
            "$ref": "Error"
          },
          "type": "array",
          "description": "Output only. Errors which caused the backfill job to fail."
        },
        "lastEndTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Backfill job's end time.",
          "readOnly": true
        },
        "trigger": {
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "description": "Backfill job's triggering reason.",
          "enumDescriptions": [
            "Default value.",
            "Object backfill job was triggered automatically according to the stream's backfill strategy.",
            "Object backfill job was triggered manually using the dedicated API."
          ],
          "type": "string"
        },
        "lastStartTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Backfill job's start time.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "PENDING",
            "ACTIVE",
            "STOPPED",
            "FAILED",
            "COMPLETED",
            "UNSUPPORTED"
          ],
          "enumDescriptions": [
            "Default value.",
            "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).",
            "Backfill job will start pending available resources.",
            "Backfill job is running.",
            "Backfill job stopped (next job run will start from beginning).",
            "Backfill job failed (due to an error).",
            "Backfill completed successfully.",
            "Backfill job failed since the table structure is currently unsupported for backfill."
          ],
          "description": "Output only. Backfill job state.",
          "readOnly": true
        }
      },
      "id": "BackfillJob",
      "description": "Represents a backfill job on a specific stream object."
    },
    "FetchStaticIpsResponse": {
      "properties": {
        "staticIps": {
          "type": "array",
          "description": "list of static ips by account",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' response.",
      "type": "object"
    },
    "DestinationConfig": {
      "description": "The configuration of the stream destination.",
      "type": "object",
      "id": "DestinationConfig",
      "properties": {
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        },
        "bigqueryDestinationConfig": {
          "description": "BigQuery destination configuration.",
          "$ref": "BigQueryDestinationConfig"
        },
        "gcsDestinationConfig": {
          "$ref": "GcsDestinationConfig",
          "description": "A configuration for how data should be loaded to Cloud Storage."
        }
      }
    },
    "LookupStreamObjectRequest": {
      "description": "Request for looking up a specific stream object by its source object identifier.",
      "id": "LookupStreamObjectRequest",
      "type": "object",
      "properties": {
        "sourceObjectIdentifier": {
          "description": "Required. The source object identifier which maps to the stream object.",
          "$ref": "SourceObjectIdentifier"
        }
      }
    },
    "BackfillAllStrategy": {
      "type": "object",
      "properties": {
        "oracleExcludedObjects": {
          "$ref": "OracleRdbms",
          "description": "Oracle data source objects to avoid backfilling."
        },
        "postgresqlExcludedObjects": {
          "$ref": "PostgresqlRdbms",
          "description": "PostgreSQL data source objects to avoid backfilling."
        },
        "mysqlExcludedObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL data source objects to avoid backfilling."
        }
      },
      "id": "BackfillAllStrategy",
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded."
    },
    "CdcStrategy": {
      "type": "object",
      "description": "The strategy that the stream uses for CDC replication.",
      "id": "CdcStrategy",
      "properties": {
        "specificStartPosition": {
          "$ref": "SpecificStartPosition",
          "description": "Optional. Start replicating from a specific position in the source."
        },
        "mostRecentStartPosition": {
          "description": "Optional. Start replicating from the most recent position in the source.",
          "$ref": "MostRecentStartPosition"
        },
        "nextAvailableStartPosition": {
          "description": "Optional. Resume replication from the next available position in the source.",
          "$ref": "NextAvailableStartPosition"
        }
      }
    },
    "DropLargeObjects": {
      "properties": {},
      "id": "DropLargeObjects",
      "description": "Configuration to drop large object values.",
      "type": "object"
    },
    "ListRoutesResponse": {
      "type": "object",
      "id": "ListRoutesResponse",
      "description": "Route list response.",
      "properties": {
        "routes": {
          "description": "List of Routes.",
          "items": {
            "$ref": "Route"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "OracleProfile": {
      "properties": {
        "password": {
          "type": "string",
          "description": "Required. Password for the Oracle connection."
        },
        "hostname": {
          "description": "Required. Hostname for the Oracle connection.",
          "type": "string"
        },
        "connectionAttributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Connection string attributes",
          "type": "object"
        },
        "port": {
          "description": "Port for the Oracle connection, default value is 1521.",
          "format": "int32",
          "type": "integer"
        },
        "databaseService": {
          "type": "string",
          "description": "Required. Database for the Oracle connection."
        },
        "username": {
          "description": "Required. Username for the Oracle connection.",
          "type": "string"
        }
      },
      "description": "Oracle database profile.",
      "type": "object",
      "id": "OracleProfile"
    },
    "OracleRdbms": {
      "type": "object",
      "description": "Oracle database structure.",
      "properties": {
        "oracleSchemas": {
          "type": "array",
          "description": "Oracle schemas/databases in the database server.",
          "items": {
            "$ref": "OracleSchema"
          }
        }
      },
      "id": "OracleRdbms"
    },
    "OracleTable": {
      "type": "object",
      "id": "OracleTable",
      "description": "Oracle table.",
      "properties": {
        "oracleColumns": {
          "type": "array",
          "items": {
            "$ref": "OracleColumn"
          },
          "description": "Oracle columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything."
        },
        "table": {
          "description": "Table name.",
          "type": "string"
        }
      }
    },
    "Location": {
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      },
      "type": "object"
    },
    "SourceObjectIdentifier": {
      "type": "object",
      "properties": {
        "mysqlIdentifier": {
          "$ref": "MysqlObjectIdentifier",
          "description": "Mysql data source object identifier."
        },
        "oracleIdentifier": {
          "$ref": "OracleObjectIdentifier",
          "description": "Oracle data source object identifier."
        },
        "postgresqlIdentifier": {
          "description": "PostgreSQL data source object identifier.",
          "$ref": "PostgresqlObjectIdentifier"
        }
      },
      "id": "SourceObjectIdentifier",
      "description": "Represents an identifier of an object in the data source."
    },
    "DatasetTemplate": {
      "type": "object",
      "id": "DatasetTemplate",
      "description": "Dataset template used for dynamic dataset creation.",
      "properties": {
        "kmsKeyName": {
          "description": "Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key. i.e. projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{cryptoKey}. See https://cloud.google.com/bigquery/docs/customer-managed-encryption for more information.",
          "type": "string"
        },
        "datasetIdPrefix": {
          "type": "string",
          "description": "If supplied, every created dataset will have its name prefixed by the provided value. The prefix and name will be separated by an underscore. i.e. _."
        },
        "location": {
          "description": "Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.",
          "type": "string"
        }
      }
    },
    "PrivateConnection": {
      "type": "object",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The update time of the resource."
        },
        "error": {
          "description": "Output only. In case of error, the details of the error in a user-friendly format.",
          "$ref": "Error",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource's name.",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Unspecified state.",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "type": "string",
          "description": "Output only. The state of the Private Connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ]
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "vpcPeeringConfig": {
          "$ref": "VpcPeeringConfig",
          "description": "VPC Peering Config."
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        }
      },
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "id": "PrivateConnection"
    },
    "MysqlSslConfig": {
      "type": "object",
      "properties": {
        "clientKeySet": {
          "description": "Output only. Indicates whether the client_key field is set.",
          "type": "boolean",
          "readOnly": true
        },
        "caCertificateSet": {
          "readOnly": true,
          "description": "Output only. Indicates whether the ca_certificate field is set.",
          "type": "boolean"
        },
        "clientCertificate": {
          "type": "string",
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory."
        },
        "clientCertificateSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether the client_certificate field is set."
        },
        "caCertificate": {
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
          "type": "string"
        },
        "clientKey": {
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        }
      },
      "id": "MysqlSslConfig",
      "description": "MySQL SSL configuration information."
    },
    "StartBackfillJobRequest": {
      "id": "StartBackfillJobRequest",
      "description": "Request for manually initiating a backfill job for a specific stream object.",
      "properties": {},
      "type": "object"
    },
    "ConnectionProfile": {
      "id": "ConnectionProfile",
      "properties": {
        "oracleProfile": {
          "$ref": "OracleProfile",
          "description": "Oracle ConnectionProfile configuration."
        },
        "gcsProfile": {
          "description": "Cloud Storage ConnectionProfile configuration.",
          "$ref": "GcsProfile"
        },
        "mysqlProfile": {
          "$ref": "MysqlProfile",
          "description": "MySQL ConnectionProfile configuration."
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "staticServiceIpConnectivity": {
          "$ref": "StaticServiceIpConnectivity",
          "description": "Static Service IP connectivity."
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "postgresqlProfile": {
          "$ref": "PostgresqlProfile",
          "description": "PostgreSQL Connection Profile configuration."
        },
        "forwardSshConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "$ref": "ForwardSshTunnelConnectivity"
        },
        "bigqueryProfile": {
          "description": "BigQuery Connection Profile configuration.",
          "$ref": "BigQueryProfile"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource's name."
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The create time of the resource.",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "description": "A set of reusable connection configurations to be used as a source or destination for a stream.",
      "type": "object"
    },
    "MysqlRdbms": {
      "description": "MySQL database structure",
      "properties": {
        "mysqlDatabases": {
          "description": "Mysql databases on the server",
          "type": "array",
          "items": {
            "$ref": "MysqlDatabase"
          }
        }
      },
      "type": "object",
      "id": "MysqlRdbms"
    },
    "PostgresqlColumn": {
      "type": "object",
      "description": "PostgreSQL Column.",
      "properties": {
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "precision": {
          "description": "Column precision.",
          "format": "int32",
          "type": "integer"
        },
        "scale": {
          "description": "Column scale.",
          "format": "int32",
          "type": "integer"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "dataType": {
          "type": "string",
          "description": "The PostgreSQL data type."
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        },
        "column": {
          "type": "string",
          "description": "Column name."
        },
        "length": {
          "type": "integer",
          "description": "Column length.",
          "format": "int32"
        }
      },
      "id": "PostgresqlColumn"
    },
    "OracleObjectIdentifier": {
      "description": "Oracle data source object identifier.",
      "type": "object",
      "id": "OracleObjectIdentifier",
      "properties": {
        "schema": {
          "description": "Required. The schema name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValidationMessage": {
      "id": "ValidationMessage",
      "properties": {
        "code": {
          "description": "A custom code identifying this specific message.",
          "type": "string"
        },
        "metadata": {
          "description": "Additional metadata related to the result.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "description": "The result of the validation.",
          "type": "string"
        },
        "level": {
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ],
          "description": "Message severity level (warning or error).",
          "type": "string",
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ]
        }
      },
      "description": "Represent user-facing validation result message.",
      "type": "object"
    },
    "OperationMetadata": {
      "properties": {
        "verb": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation."
        },
        "apiVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. API version used to start the operation."
        },
        "validationResult": {
          "description": "Output only. Results of executed validations if there are any.",
          "$ref": "ValidationResult",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "type": "object"
    },
    "GcsDestinationConfig": {
      "properties": {
        "path": {
          "description": "Path inside the Cloud Storage bucket to write data to.",
          "type": "string"
        },
        "fileRotationMb": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum file size to be saved in the bucket."
        },
        "fileRotationInterval": {
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created. Values within the range of 15-60 seconds are allowed.",
          "type": "string",
          "format": "google-duration"
        },
        "jsonFileFormat": {
          "description": "JSON file format configuration.",
          "$ref": "JsonFileFormat"
        },
        "avroFileFormat": {
          "description": "AVRO file format configuration.",
          "$ref": "AvroFileFormat"
        }
      },
      "id": "GcsDestinationConfig",
      "description": "Google Cloud Storage destination configuration",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        }
      },
      "type": "object",
      "id": "ListLocationsResponse"
    },
    "Error": {
      "id": "Error",
      "type": "object",
      "description": "Represent a user-facing Error.",
      "properties": {
        "message": {
          "type": "string",
          "description": "A message containing more information about the error that occurred."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional information about the error."
        },
        "errorTime": {
          "description": "The time when the error occurred.",
          "type": "string",
          "format": "google-datetime"
        },
        "errorUuid": {
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses.",
          "type": "string"
        },
        "reason": {
          "description": "A title that explains the reason for the error.",
          "type": "string"
        }
      }
    },
    "StopBackfillJobRequest": {
      "description": "Request for manually stopping a running backfill job for a specific stream object.",
      "type": "object",
      "id": "StopBackfillJobRequest",
      "properties": {}
    },
    "SingleTargetDataset": {
      "properties": {
        "datasetId": {
          "description": "The dataset ID of the target dataset. DatasetIds allowed characters: https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets#datasetreference.",
          "type": "string"
        }
      },
      "id": "SingleTargetDataset",
      "description": "A single target dataset to which all data will be streamed.",
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "id": "Empty",
      "type": "object"
    },
    "SpecificStartPosition": {
      "type": "object",
      "description": "CDC strategy to start replicating from a specific position in the source.",
      "id": "SpecificStartPosition",
      "properties": {
        "mysqlLogPosition": {
          "description": "MySQL specific log position to start replicating from.",
          "$ref": "MysqlLogPosition"
        }
      }
    },
    "BackfillNoneStrategy": {
      "type": "object",
      "id": "BackfillNoneStrategy",
      "properties": {},
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects."
    },
    "BigQueryDestinationConfig": {
      "properties": {
        "sourceHierarchyDatasets": {
          "description": "Source hierarchy datasets.",
          "$ref": "SourceHierarchyDatasets"
        },
        "dataFreshness": {
          "type": "string",
          "description": "The guaranteed data freshness (in seconds) when querying tables created by the stream. Editing this field will only affect new tables created in the future, but existing tables will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost.",
          "format": "google-duration"
        },
        "singleTargetDataset": {
          "$ref": "SingleTargetDataset",
          "description": "Single destination dataset."
        }
      },
      "id": "BigQueryDestinationConfig",
      "type": "object",
      "description": "BigQuery destination configuration"
    },
    "ListStreamObjectsResponse": {
      "type": "object",
      "id": "ListStreamObjectsResponse",
      "properties": {
        "streamObjects": {
          "items": {
            "$ref": "StreamObject"
          },
          "description": "List of stream objects.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page.",
          "type": "string"
        }
      },
      "description": "Response containing the objects for a stream."
    },
    "MysqlSourceConfig": {
      "description": "MySQL source configuration",
      "id": "MysqlSourceConfig",
      "type": "object",
      "properties": {
        "maxConcurrentBackfillTasks": {
          "description": "Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "format": "int32",
          "type": "integer"
        },
        "includeObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to retrieve from the source."
        },
        "excludeObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to exclude from the stream."
        },
        "maxConcurrentCdcTasks": {
          "description": "Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MysqlTable": {
      "type": "object",
      "properties": {
        "table": {
          "type": "string",
          "description": "Table name."
        },
        "mysqlColumns": {
          "items": {
            "$ref": "MysqlColumn"
          },
          "description": "MySQL columns in the database. When unspecified as part of include/exclude objects, includes/excludes everything.",
          "type": "array"
        }
      },
      "id": "MysqlTable",
      "description": "MySQL table."
    },
    "MysqlLogPosition": {
      "description": "MySQL log position",
      "properties": {
        "logFile": {
          "description": "The binary log file name.",
          "type": "string"
        },
        "logPosition": {
          "description": "The position within the binary log file. Default is head of file.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "MysqlLogPosition"
    },
    "SourceConfig": {
      "description": "The configuration of the stream source.",
      "id": "SourceConfig",
      "type": "object",
      "properties": {
        "sourceConnectionProfile": {
          "type": "string",
          "description": "Required. Source connection profile resoource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        },
        "mysqlSourceConfig": {
          "$ref": "MysqlSourceConfig",
          "description": "MySQL data source configuration."
        },
        "oracleSourceConfig": {
          "$ref": "OracleSourceConfig",
          "description": "Oracle data source configuration."
        },
        "postgresqlSourceConfig": {
          "description": "PostgreSQL data source configuration.",
          "$ref": "PostgresqlSourceConfig"
        }
      }
    },
    "GcsProfile": {
      "type": "object",
      "id": "GcsProfile",
      "properties": {
        "bucket": {
          "description": "Required. The Cloud Storage bucket name.",
          "type": "string"
        },
        "rootPath": {
          "type": "string",
          "description": "The root path inside the Cloud Storage bucket."
        }
      },
      "description": "Cloud Storage bucket profile."
    },
    "MysqlObjectIdentifier": {
      "type": "object",
      "description": "Mysql data source object identifier.",
      "id": "MysqlObjectIdentifier",
      "properties": {
        "database": {
          "description": "Required. The database name.",
          "type": "string"
        },
        "table": {
          "description": "Required. The table name.",
          "type": "string"
        }
      }
    },
    "ListStreamsResponse": {
      "type": "object",
      "id": "ListStreamsResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "streams": {
          "type": "array",
          "items": {
            "$ref": "Stream"
          },
          "description": "List of streams"
        }
      },
      "description": "Response message for listing streams."
    },
    "Stream": {
      "description": "A resource representing streaming data from a source to a destination.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Output only. The creation time of the stream.",
          "format": "google-datetime",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The stream's name."
        },
        "sourceConfig": {
          "$ref": "SourceConfig",
          "description": "Required. Source connection profile configuration."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The last update time of the stream.",
          "format": "google-datetime"
        },
        "backfillNone": {
          "$ref": "BackfillNoneStrategy",
          "description": "Do not automatically backfill any objects."
        },
        "backfillAll": {
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded.",
          "$ref": "BackfillAllStrategy"
        },
        "state": {
          "description": "The state of the stream.",
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created but has not yet started streaming data.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ]
        },
        "customerManagedEncryptionKey": {
          "type": "string",
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS."
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "destinationConfig": {
          "$ref": "DestinationConfig",
          "description": "Required. Destination connection profile configuration."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "errors": {
          "readOnly": true,
          "description": "Output only. Errors on the Stream.",
          "type": "array",
          "items": {
            "$ref": "Error"
          }
        }
      },
      "id": "Stream",
      "type": "object"
    },
    "OracleColumn": {
      "type": "object",
      "description": "Oracle Column.",
      "id": "OracleColumn",
      "properties": {
        "dataType": {
          "description": "The Oracle data type.",
          "type": "string"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Column length."
        },
        "precision": {
          "type": "integer",
          "description": "Column precision.",
          "format": "int32"
        },
        "ordinalPosition": {
          "type": "integer",
          "description": "The ordinal position of the column in the table.",
          "format": "int32"
        },
        "scale": {
          "description": "Column scale.",
          "format": "int32",
          "type": "integer"
        },
        "nullable": {
          "description": "Whether or not the column can accept a null value.",
          "type": "boolean"
        },
        "encoding": {
          "description": "Column encoding.",
          "type": "string"
        }
      }
    },
    "DiscoverConnectionProfileResponse": {
      "description": "Response from a discover request.",
      "type": "object",
      "id": "DiscoverConnectionProfileResponse",
      "properties": {
        "oracleRdbms": {
          "description": "Enriched Oracle RDBMS object.",
          "$ref": "OracleRdbms"
        },
        "mysqlRdbms": {
          "description": "Enriched MySQL RDBMS object.",
          "$ref": "MysqlRdbms"
        },
        "postgresqlRdbms": {
          "$ref": "PostgresqlRdbms",
          "description": "Enriched PostgreSQL RDBMS object."
        }
      }
    },
    "StopBackfillJobResponse": {
      "description": "Response for manually stop a backfill job for a specific stream object.",
      "type": "object",
      "id": "StopBackfillJobResponse",
      "properties": {
        "object": {
          "description": "The stream object resource the backfill job was stopped for.",
          "$ref": "StreamObject"
        }
      }
    },
    "StaticServiceIpConnectivity": {
      "properties": {},
      "description": "Static IP address connectivity. Used when the source database is configured to allow incoming connections from the Datastream public IP addresses for the region specified in the connection profile.",
      "type": "object",
      "id": "StaticServiceIpConnectivity"
    },
    "MostRecentStartPosition": {
      "properties": {},
      "type": "object",
      "id": "MostRecentStartPosition",
      "description": "CDC strategy to start replicating from the most recent position in the source."
    },
    "StartBackfillJobResponse": {
      "id": "StartBackfillJobResponse",
      "description": "Response for manually initiating a backfill job for a specific stream object.",
      "type": "object",
      "properties": {
        "object": {
          "description": "The stream object resource a backfill job was started for.",
          "$ref": "StreamObject"
        }
      }
    },
    "NextAvailableStartPosition": {
      "type": "object",
      "properties": {},
      "description": "CDC strategy to resume replication from the next available position in the source.",
      "id": "NextAvailableStartPosition"
    },
    "PostgresqlSourceConfig": {
      "description": "PostgreSQL data source configuration",
      "id": "PostgresqlSourceConfig",
      "type": "object",
      "properties": {
        "includeObjects": {
          "description": "PostgreSQL objects to include in the stream.",
          "$ref": "PostgresqlRdbms"
        },
        "replicationSlot": {
          "description": "Required. Immutable. The name of the logical replication slot that's configured with the pgoutput plugin.",
          "type": "string"
        },
        "publication": {
          "description": "Required. The name of the publication that includes the set of all tables that are defined in the stream's include_objects.",
          "type": "string"
        },
        "maxConcurrentBackfillTasks": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used."
        },
        "excludeObjects": {
          "description": "PostgreSQL objects to exclude from the stream.",
          "$ref": "PostgresqlRdbms"
        }
      }
    },
    "PostgresqlObjectIdentifier": {
      "type": "object",
      "properties": {
        "table": {
          "type": "string",
          "description": "Required. The table name."
        },
        "schema": {
          "type": "string",
          "description": "Required. The schema name."
        }
      },
      "id": "PostgresqlObjectIdentifier",
      "description": "PostgreSQL data source object identifier."
    },
    "ValidationResult": {
      "id": "ValidationResult",
      "type": "object",
      "description": "Contains the current validation results.",
      "properties": {
        "validations": {
          "type": "array",
          "description": "A list of validations (includes both executed as well as not executed validations).",
          "items": {
            "$ref": "Validation"
          }
        }
      }
    },
    "ListConnectionProfilesResponse": {
      "id": "ListConnectionProfilesResponse",
      "properties": {
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array",
          "description": "List of connection profiles."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "Response message for listing connection profiles.",
      "type": "object"
    },
    "Validation": {
      "id": "Validation",
      "type": "object",
      "description": "A validation to perform on a stream.",
      "properties": {
        "description": {
          "type": "string",
          "description": "A short description of the validation."
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this validation."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "type": "string",
          "description": "Output only. Validation execution status.",
          "enumDescriptions": [
            "Unspecified state.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ],
          "readOnly": true
        },
        "message": {
          "items": {
            "$ref": "ValidationMessage"
          },
          "type": "array",
          "description": "Messages reflecting the validation results."
        }
      }
    },
    "ListPrivateConnectionsResponse": {
      "description": "Response containing a list of private connection configurations.",
      "properties": {
        "privateConnections": {
          "items": {
            "$ref": "PrivateConnection"
          },
          "type": "array",
          "description": "List of private connectivity configurations."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListPrivateConnectionsResponse",
      "type": "object"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse"
    },
    "PostgresqlProfile": {
      "description": "PostgreSQL database profile.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Required. Username for the PostgreSQL connection."
        },
        "database": {
          "description": "Required. Database for the PostgreSQL connection.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer",
          "description": "Port for the PostgreSQL connection, default value is 5432."
        },
        "password": {
          "description": "Required. Password for the PostgreSQL connection.",
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the PostgreSQL connection."
        }
      },
      "type": "object",
      "id": "PostgresqlProfile"
    },
    "StreamObject": {
      "id": "StreamObject",
      "description": "A specific stream object (e.g a specific DB table).",
      "properties": {
        "errors": {
          "description": "Output only. Active errors on the object.",
          "readOnly": true,
          "items": {
            "$ref": "Error"
          },
          "type": "array"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The object resource's name.",
          "type": "string"
        },
        "sourceObject": {
          "description": "The object identifier in the data source.",
          "$ref": "SourceObjectIdentifier"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The creation time of the object."
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last update time of the object."
        },
        "backfillJob": {
          "description": "The latest backfill job that was initiated for the stream object.",
          "$ref": "BackfillJob"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AvroFileFormat": {
      "id": "AvroFileFormat",
      "description": "AVRO file format configuration.",
      "properties": {},
      "type": "object"
    },
    "PrivateConnectivity": {
      "id": "PrivateConnectivity",
      "type": "object",
      "description": "Private Connectivity",
      "properties": {
        "privateConnection": {
          "type": "string",
          "description": "Required. A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`"
        }
      }
    },
    "PostgresqlSchema": {
      "description": "PostgreSQL schema.",
      "properties": {
        "schema": {
          "description": "Schema name.",
          "type": "string"
        },
        "postgresqlTables": {
          "description": "Tables in the schema.",
          "items": {
            "$ref": "PostgresqlTable"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "PostgresqlSchema"
    },
    "DiscoverConnectionProfileRequest": {
      "type": "object",
      "description": "Request message for 'discover' ConnectionProfile request.",
      "id": "DiscoverConnectionProfileRequest",
      "properties": {
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "MySQL RDBMS to enrich with child data objects and metadata."
        },
        "connectionProfileName": {
          "description": "A reference to an existing connection profile.",
          "type": "string"
        },
        "hierarchyDepth": {
          "type": "integer",
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "format": "int32"
        },
        "fullHierarchy": {
          "type": "boolean",
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE)."
        },
        "oracleRdbms": {
          "description": "Oracle RDBMS to enrich with child data objects and metadata.",
          "$ref": "OracleRdbms"
        },
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc connection profile configuration."
        },
        "postgresqlRdbms": {
          "$ref": "PostgresqlRdbms",
          "description": "PostgreSQL RDBMS to enrich with child data objects and metadata."
        }
      }
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "Status",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        }
      }
    },
    "PostgresqlRdbms": {
      "type": "object",
      "properties": {
        "postgresqlSchemas": {
          "items": {
            "$ref": "PostgresqlSchema"
          },
          "description": "PostgreSQL schemas in the database server.",
          "type": "array"
        }
      },
      "id": "PostgresqlRdbms",
      "description": "PostgreSQL database structure."
    },
    "JsonFileFormat": {
      "description": "JSON file format configuration.",
      "type": "object",
      "id": "JsonFileFormat",
      "properties": {
        "schemaFileFormat": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ],
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "description": "The schema file format along JSON data files."
        },
        "compression": {
          "description": "Compression of the loaded JSON file.",
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ],
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "type": "string"
        }
      }
    },
    "BigQueryProfile": {
      "properties": {},
      "id": "BigQueryProfile",
      "type": "object",
      "description": "BigQuery warehouse profile."
    },
    "MysqlProfile": {
      "properties": {
        "hostname": {
          "description": "Required. Hostname for the MySQL connection.",
          "type": "string"
        },
        "password": {
          "description": "Required. Input only. Password for the MySQL connection.",
          "type": "string"
        },
        "sslConfig": {
          "$ref": "MysqlSslConfig",
          "description": "SSL configuration for the MySQL connection."
        },
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        },
        "port": {
          "type": "integer",
          "description": "Port for the MySQL connection, default value is 3306.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "MysqlProfile",
      "description": "MySQL database profile."
    },
    "OracleSchema": {
      "properties": {
        "oracleTables": {
          "type": "array",
          "items": {
            "$ref": "OracleTable"
          },
          "description": "Tables in the schema."
        },
        "schema": {
          "description": "Schema name.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OracleSchema",
      "description": "Oracle schema."
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "rootUrl": "https://datastream.googleapis.com/",
  "version_module": true,
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "fetchStaticIps": {
              "path": "v1/{+name}:fetchStaticIps",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "id": "datastream.projects.locations.fetchStaticIps",
              "description": "The FetchStaticIps API call exposes the static IP addresses used by Datastream.",
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "location": "query"
                },
                "name": {
                  "description": "Required. The resource name for the location for which static IPs should be returned. Must be in the format `projects/*/locations/*`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "pageSize": {
                  "description": "Maximum number of Ips to return, will likely not be specified.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              }
            },
            "get": {
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "datastream.projects.locations.get",
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Resource name for the location."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}"
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "datastream.projects.locations.list"
            }
          },
          "resources": {
            "connectionProfiles": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "description": "Use this method to get details about a connection profile.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Required. The name of the connection profile resource to get."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "path": "v1/{+name}",
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. Only validate the connection profile, but don't create any resources. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "connectionProfileId": {
                      "description": "Required. The connection profile identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "location": "query",
                      "description": "Optional. Create the connection profile without validating it.",
                      "type": "boolean"
                    },
                    "parent": {
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "datastream.projects.locations.connectionProfiles.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "path": "v1/{+parent}/connectionProfiles",
                  "description": "Use this method to create a connection profile in a project and location."
                },
                "list": {
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "httpMethod": "GET",
                  "description": "Use this method to list connection profiles created in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of connection profiles."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filter request.",
                      "location": "query"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Order by fields for the result."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "path": "v1/{+parent}/connectionProfiles",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles"
                },
                "discover": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource of the connection profile type. Must be in the format `projects/*/locations/*`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/connectionProfiles:discover",
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects of a parent data object that's optionally supplied in the request.",
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the connection profile resource to delete.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Use this method to delete a connection profile.",
                  "path": "v1/{+name}",
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "Optional. Update the connection profile without validating it.",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "description": "Output only. The resource's name.",
                      "required": true,
                      "location": "path"
                    },
                    "updateMask": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the connection profile, but don't update any resources. The default is false.",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "path": "v1/{+name}",
                  "description": "Use this method to update the parameters of a connection profile."
                }
              }
            },
            "streams": {
              "methods": {
                "run": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "description": "Required. Name of the stream resource to start, in the format: projects/{project_id}/locations/{location}/streams/{stream_name}"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:run",
                  "description": "Use this method to start, resume or recover a stream with a non default CDC strategy. NOTE: This feature is currently experimental.",
                  "id": "datastream.projects.locations.streams.run",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "RunStreamRequest"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}:run",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "path": "v1/{+name}",
                  "description": "Use this method to delete a stream.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "id": "datastream.projects.locations.streams.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the stream resource to delete.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datastream.projects.locations.streams.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Stream"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "parameters": {
                    "validateOnly": {
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Output only. The stream's name.",
                      "required": true
                    },
                    "cdcStrategy.specificStartPosition.mysqlLogPosition.logPosition": {
                      "type": "integer",
                      "description": "The position within the binary log file. Default is head of file.",
                      "location": "query",
                      "format": "int32"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Update the stream without validating it."
                    },
                    "cdcStrategy.specificStartPosition.mysqlLogPosition.logFile": {
                      "type": "string",
                      "location": "query",
                      "description": "The binary log file name."
                    }
                  },
                  "description": "Use this method to update the configuration of a stream.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "httpMethod": "GET",
                  "description": "Use this method to list streams in a project and location.",
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "filter": {
                      "description": "Filter request.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of streams."
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "datastream.projects.locations.streams.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "path": "v1/{+parent}/streams"
                },
                "get": {
                  "description": "Use this method to get details about a stream.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the stream resource to get."
                    }
                  },
                  "id": "datastream.projects.locations.streams.get",
                  "response": {
                    "$ref": "Stream"
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "id": "datastream.projects.locations.streams.create",
                  "description": "Use this method to create a stream.",
                  "request": {
                    "$ref": "Stream"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/streams",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "parameters": {
                    "streamId": {
                      "description": "Required. The stream identifier.",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. Create the stream without validating it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "validateOnly": {
                      "description": "Optional. Only validate the stream, but don't create any resources. The default is false.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of streams.",
                      "type": "string",
                      "location": "path"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  }
                }
              },
              "resources": {
                "objects": {
                  "methods": {
                    "get": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "description": "Required. The name of the stream object resource to get.",
                          "location": "path"
                        }
                      },
                      "id": "datastream.projects.locations.streams.objects.get",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Use this method to get details about a stream object."
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "required": true
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token.",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+parent}/objects",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Use this method to list the objects of a specific stream.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects",
                      "id": "datastream.projects.locations.streams.objects.list",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListStreamObjectsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "lookup": {
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "description": "Use this method to look up a stream object by its source object identifier.",
                      "path": "v1/{+parent}/objects:lookup",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "LookupStreamObjectRequest"
                      },
                      "id": "datastream.projects.locations.streams.objects.lookup",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:lookup"
                    },
                    "stopBackfillJob": {
                      "request": {
                        "$ref": "StopBackfillJobRequest"
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+object}:stopBackfillJob",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "object": {
                          "required": true,
                          "description": "Required. The name of the stream object resource to stop the backfill job for.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "object"
                      ],
                      "response": {
                        "$ref": "StopBackfillJobResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob",
                      "id": "datastream.projects.locations.streams.objects.stopBackfillJob",
                      "description": "Use this method to stop a backfill job for the specified stream object."
                    },
                    "startBackfillJob": {
                      "request": {
                        "$ref": "StartBackfillJobRequest"
                      },
                      "parameterOrder": [
                        "object"
                      ],
                      "httpMethod": "POST",
                      "description": "Use this method to start a backfill job for the specified stream object.",
                      "parameters": {
                        "object": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the stream object resource to start a backfill job for.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "StartBackfillJobResponse"
                      },
                      "id": "datastream.projects.locations.streams.objects.startBackfillJob",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob",
                      "path": "v1/{+object}:startBackfillJob"
                    }
                  }
                }
              }
            },
            "privateConnections": {
              "resources": {
                "routes": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "Route"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "description": "Required. The name of the Route resource to get.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Use this method to get details about a route.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "path": "v1/{+parent}/routes",
                      "description": "Use this method to list routes created for a private connectivity configuration in a project and location.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "orderBy": {
                          "description": "Order by fields for the result.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The parent that owns the collection of Routess.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32"
                        },
                        "filter": {
                          "description": "Filter request.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "id": "datastream.projects.locations.privateConnections.routes.list"
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the Route resource to delete."
                        },
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "path": "v1/{+name}",
                      "description": "Use this method to delete a route.",
                      "id": "datastream.projects.locations.privateConnections.routes.delete",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "path": "v1/{+parent}/routes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Route"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The parent that owns the collection of Routes.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                        },
                        "routeId": {
                          "description": "Required. The Route identifier.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "description": "Use this method to create a route for a private connectivity configuration in a project and location."
                    }
                  }
                }
              },
              "methods": {
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "httpMethod": "POST",
                  "parameters": {
                    "privateConnectionId": {
                      "location": "query",
                      "description": "Required. The private connectivity identifier.",
                      "type": "string"
                    },
                    "force": {
                      "location": "query",
                      "description": "Optional. If set to true, will skip validations.",
                      "type": "boolean"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent that owns the collection of PrivateConnections.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1/{+parent}/privateConnections",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to create a private connectivity configuration.",
                  "id": "datastream.projects.locations.privateConnections.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the private connectivity configuration to get."
                    }
                  },
                  "id": "datastream.projects.locations.privateConnections.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to get details about a private connectivity configuration.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.privateConnections.list",
                  "path": "v1/{+parent}/privateConnections",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "orderBy": {
                      "type": "string",
                      "description": "Order by fields for the result.",
                      "location": "query"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filter request.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token."
                    },
                    "pageSize": {
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "description": "Use this method to list private connectivity configurations in a project and location."
                },
                "delete": {
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted.",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the private connectivity configuration to delete.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "path": "v1/{+name}",
                  "description": "Use this method to delete a private connectivity configuration."
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string"
                    }
                  },
                  "id": "datastream.projects.locations.operations.get",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "path": "v1/{+name}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "id": "datastream.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "id": "datastream.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                },
                "delete": {
                  "path": "v1/{+name}",
                  "id": "datastream.projects.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "protocol": "rest",
  "canonicalName": "Datastream",
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "parameters": {
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "batchPath": "batch",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "baseUrl": "https://datastream.googleapis.com/",
  "documentationLink": "https://cloud.google.com/datastream/",
  "revision": "20230802",
  "name": "datastream",
  "id": "datastream:v1",
  "kind": "discovery#restDescription",
  "servicePath": ""
}

{
  "basePath": "",
  "id": "datastream:v1",
  "mtlsRootUrl": "https://datastream.mtls.googleapis.com/",
  "parameters": {
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "name": "datastream",
  "schemas": {
    "ListPrivateConnectionsResponse": {
      "id": "ListPrivateConnectionsResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "privateConnections": {
          "description": "List of private connectivity configurations.",
          "items": {
            "$ref": "PrivateConnection"
          },
          "type": "array"
        }
      },
      "description": "Response containing a list of private connection configurations."
    },
    "StaticServiceIpConnectivity": {
      "description": "Static IP address connectivity.",
      "id": "StaticServiceIpConnectivity",
      "properties": {},
      "type": "object"
    },
    "ForwardSshTunnelConnectivity": {
      "type": "object",
      "description": "Forward SSH Tunnel connectivity.",
      "id": "ForwardSshTunnelConnectivity",
      "properties": {
        "username": {
          "type": "string",
          "description": "Required. Username for the SSH tunnel."
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the SSH tunnel."
        },
        "port": {
          "type": "integer",
          "description": "Port for the SSH tunnel, default value is 22.",
          "format": "int32"
        },
        "privateKey": {
          "description": "Input only. SSH private key.",
          "type": "string"
        },
        "password": {
          "description": "Input only. SSH password.",
          "type": "string"
        }
      }
    },
    "ListStreamsResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "streams": {
          "type": "array",
          "description": "List of streams",
          "items": {
            "$ref": "Stream"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "description": "Response message for listing streams.",
      "id": "ListStreamsResponse"
    },
    "ListStreamObjectsResponse": {
      "id": "ListStreamObjectsResponse",
      "type": "object",
      "description": "Response containing the objects for a stream.",
      "properties": {
        "streamObjects": {
          "type": "array",
          "description": "List of stream objects.",
          "items": {
            "$ref": "StreamObject"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page.",
          "type": "string"
        }
      }
    },
    "OracleProfile": {
      "id": "OracleProfile",
      "type": "object",
      "properties": {
        "connectionAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Connection string attributes"
        },
        "databaseService": {
          "type": "string",
          "description": "Required. Database for the Oracle connection."
        },
        "username": {
          "description": "Required. Username for the Oracle connection.",
          "type": "string"
        },
        "port": {
          "description": "Port for the Oracle connection, default value is 1521.",
          "format": "int32",
          "type": "integer"
        },
        "password": {
          "description": "Required. Password for the Oracle connection.",
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the Oracle connection."
        }
      },
      "description": "Oracle database profile."
    },
    "MysqlTable": {
      "id": "MysqlTable",
      "type": "object",
      "properties": {
        "mysqlColumns": {
          "description": "MySQL columns in the database. When unspecified as part of include/exclude lists, includes/excludes everything.",
          "type": "array",
          "items": {
            "$ref": "MysqlColumn"
          }
        },
        "table": {
          "description": "Table name.",
          "type": "string"
        }
      },
      "description": "MySQL table."
    },
    "BackfillNoneStrategy": {
      "description": "Backfill strategy to disable automatic backfill for the Stream's objects.",
      "id": "BackfillNoneStrategy",
      "type": "object",
      "properties": {}
    },
    "ValidationResult": {
      "id": "ValidationResult",
      "description": "Contains the current validation results.",
      "properties": {
        "validations": {
          "type": "array",
          "items": {
            "$ref": "Validation"
          },
          "description": "A list of validations (includes both executed as well as not executed validations)."
        }
      },
      "type": "object"
    },
    "GcsProfile": {
      "id": "GcsProfile",
      "properties": {
        "bucket": {
          "description": "Required. The Cloud Storage bucket name.",
          "type": "string"
        },
        "rootPath": {
          "description": "The root path inside the Cloud Storage bucket.",
          "type": "string"
        }
      },
      "description": "Cloud Storage bucket profile.",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      }
    },
    "Stream": {
      "id": "Stream",
      "type": "object",
      "properties": {
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last update time of the stream.",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Errors on the Stream."
        },
        "destinationConfig": {
          "$ref": "DestinationConfig",
          "description": "Required. Destination connection profile configuration."
        },
        "backfillNone": {
          "description": "Do not automatically backfill any objects.",
          "$ref": "BackfillNoneStrategy"
        },
        "customerManagedEncryptionKey": {
          "description": "Immutable. A reference to a KMS encryption key. If provided, it will be used to encrypt the data. If left blank, data will be encrypted using an internal Stream-specific encryption key provisioned through KMS.",
          "type": "string"
        },
        "sourceConfig": {
          "$ref": "SourceConfig",
          "description": "Required. Source connection profile configuration."
        },
        "backfillAll": {
          "$ref": "BackfillAllStrategy",
          "description": "Automatically backfill objects included in the stream source configuration. Specific objects can be excluded."
        },
        "name": {
          "description": "Output only. The stream's name.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The creation time of the stream."
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "enumDescriptions": [
            "Unspecified stream state.",
            "The stream has been created but has not yet started streaming data.",
            "The stream is running.",
            "The stream is paused.",
            "The stream is in maintenance mode. Updates are rejected on the resource in this state.",
            "The stream is experiencing an error that is preventing data from being streamed.",
            "The stream has experienced a terminal failure.",
            "The stream is starting, but not yet running.",
            "The Stream is no longer reading new events, but still writing events in the buffer."
          ],
          "type": "string",
          "description": "The state of the stream.",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "MAINTENANCE",
            "FAILED",
            "FAILED_PERMANENTLY",
            "STARTING",
            "DRAINING"
          ]
        }
      },
      "description": "A resource representing streaming data from a source to a destination."
    },
    "StartBackfillJobRequest": {
      "id": "StartBackfillJobRequest",
      "properties": {},
      "description": "Request for manually initiating a backfill job for a specific stream object.",
      "type": "object"
    },
    "Error": {
      "description": "Represent a user-facing Error.",
      "type": "object",
      "id": "Error",
      "properties": {
        "errorTime": {
          "description": "The time when the error occurred.",
          "format": "google-datetime",
          "type": "string"
        },
        "reason": {
          "description": "A title that explains the reason for the error.",
          "type": "string"
        },
        "details": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Additional information about the error."
        },
        "message": {
          "description": "A message containing more information about the error that occurred.",
          "type": "string"
        },
        "errorUuid": {
          "type": "string",
          "description": "A unique identifier for this specific error, allowing it to be traced throughout the system in logs and API responses."
        }
      }
    },
    "DestinationConfig": {
      "description": "The configuration of the stream destination.",
      "type": "object",
      "id": "DestinationConfig",
      "properties": {
        "gcsDestinationConfig": {
          "$ref": "GcsDestinationConfig",
          "description": "A configuration for how data should be loaded to Cloud Storage."
        },
        "destinationConnectionProfile": {
          "type": "string",
          "description": "Required. Destination connection profile resource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConnectionProfile": {
      "type": "object",
      "description": "A set of reusable connection configurations to be used as a source or destination for a stream.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "$ref": "PrivateConnectivity"
        },
        "staticServiceIpConnectivity": {
          "description": "Static Service IP connectivity.",
          "$ref": "StaticServiceIpConnectivity"
        },
        "forwardSshConnectivity": {
          "$ref": "ForwardSshTunnelConnectivity",
          "description": "Forward SSH tunnel connectivity."
        },
        "labels": {
          "type": "object",
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The resource's name.",
          "type": "string"
        },
        "mysqlProfile": {
          "description": "MySQL ConnectionProfile configuration.",
          "$ref": "MysqlProfile"
        },
        "gcsProfile": {
          "$ref": "GcsProfile",
          "description": "Cloud Storage ConnectionProfile configuration."
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "$ref": "OracleProfile"
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "ConnectionProfile"
    },
    "BackfillJob": {
      "type": "object",
      "description": "Represents a backfill job on a specific stream object.",
      "properties": {
        "lastEndTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Backfill job's end time."
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "readOnly": true,
          "description": "Output only. Errors which caused the backfill job to fail.",
          "type": "array"
        },
        "trigger": {
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "AUTOMATIC",
            "MANUAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Object backfill job was triggered automatically according to the stream's backfill strategy.",
            "Object backfill job was triggered manually using the dedicated API."
          ],
          "description": "Backfill job's triggering reason."
        },
        "state": {
          "description": "Backfill job state.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "PENDING",
            "ACTIVE",
            "STOPPED",
            "FAILED",
            "COMPLETED",
            "UNSUPPORTED"
          ],
          "enumDescriptions": [
            "Default value.",
            "Backfill job was never started for the stream object (stream has backfill strategy defined as manual or object was explicitly excluded from automatic backfill).",
            "Backfill job will start pending available resources.",
            "Backfill job is running.",
            "Backfill job stopped (next job run will start from beginning).",
            "Backfill job failed (due to an error).",
            "Backfill completed successfully.",
            "Backfill job failed since the table structure is currently unsupported for backfill."
          ]
        },
        "lastStartTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Backfill job's start time.",
          "format": "google-datetime"
        }
      },
      "id": "BackfillJob"
    },
    "BackfillAllStrategy": {
      "id": "BackfillAllStrategy",
      "properties": {
        "mysqlExcludedObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL data source objects to avoid backfilling."
        },
        "oracleExcludedObjects": {
          "description": "Oracle data source objects to avoid backfilling.",
          "$ref": "OracleRdbms"
        }
      },
      "description": "Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.",
      "type": "object"
    },
    "MysqlSslConfig": {
      "description": "MySQL SSL configuration information.",
      "type": "object",
      "id": "MysqlSslConfig",
      "properties": {
        "caCertificate": {
          "type": "string",
          "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate."
        },
        "clientCertificateSet": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether the client_certificate field is set."
        },
        "clientCertificate": {
          "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "clientKeySet": {
          "type": "boolean",
          "description": "Output only. Indicates whether the client_key field is set.",
          "readOnly": true
        },
        "clientKey": {
          "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
          "type": "string"
        },
        "caCertificateSet": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether the ca_certificate field is set."
        }
      }
    },
    "GcsDestinationConfig": {
      "id": "GcsDestinationConfig",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path inside the Cloud Storage bucket to write data to."
        },
        "fileRotationInterval": {
          "format": "google-duration",
          "description": "The maximum duration for which new events are added before a file is closed and a new file is created.",
          "type": "string"
        },
        "avroFileFormat": {
          "$ref": "AvroFileFormat",
          "description": "AVRO file format configuration."
        },
        "fileRotationMb": {
          "type": "integer",
          "description": "The maximum file size to be saved in the bucket.",
          "format": "int32"
        },
        "jsonFileFormat": {
          "$ref": "JsonFileFormat",
          "description": "JSON file format configuration."
        }
      },
      "description": "Google Cloud Storage destination configuration"
    },
    "OracleObjectIdentifier": {
      "type": "object",
      "description": "Oracle data source object identifier.",
      "properties": {
        "schema": {
          "description": "The schema name.",
          "type": "string"
        },
        "table": {
          "type": "string",
          "description": "The table name."
        }
      },
      "id": "OracleObjectIdentifier"
    },
    "OracleRdbms": {
      "description": "Oracle database structure.",
      "properties": {
        "oracleSchemas": {
          "items": {
            "$ref": "OracleSchema"
          },
          "type": "array",
          "description": "Oracle schemas/databases in the database server."
        }
      },
      "id": "OracleRdbms",
      "type": "object"
    },
    "StopBackfillJobResponse": {
      "properties": {
        "object": {
          "$ref": "StreamObject",
          "description": "The stream object resource the backfill job was stopped for."
        }
      },
      "id": "StopBackfillJobResponse",
      "description": "Response for manually stop a backfill job for a specific stream object.",
      "type": "object"
    },
    "FetchStaticIpsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "staticIps": {
          "description": "list of static ips by account",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "FetchStaticIpsResponse",
      "description": "Response message for a 'FetchStaticIps' response.",
      "type": "object"
    },
    "MysqlDatabase": {
      "properties": {
        "database": {
          "description": "Database name.",
          "type": "string"
        },
        "mysqlTables": {
          "type": "array",
          "description": "Tables in the database.",
          "items": {
            "$ref": "MysqlTable"
          }
        }
      },
      "id": "MysqlDatabase",
      "type": "object",
      "description": "MySQL database."
    },
    "LookupStreamObjectRequest": {
      "type": "object",
      "description": "Request for looking up a specific stream object by its source object identifier.",
      "id": "LookupStreamObjectRequest",
      "properties": {
        "sourceObjectIdentifier": {
          "description": "Required. The source object identifier which maps to the stream object.",
          "$ref": "SourceObjectIdentifier"
        }
      }
    },
    "StopBackfillJobRequest": {
      "type": "object",
      "description": "Request for manually stopping a running backfill job for a specific stream object.",
      "id": "StopBackfillJobRequest",
      "properties": {}
    },
    "VpcPeeringConfig": {
      "properties": {
        "subnet": {
          "description": "Required. A free subnet for peering. (CIDR of /29) TODO(b/172995841) add validators.",
          "type": "string"
        },
        "vpc": {
          "description": "Required. Fully qualified name of the VPC that Datastream will peer to. Format: `projects/{project}/global/{networks}/{name}`",
          "type": "string"
        }
      },
      "id": "VpcPeeringConfig",
      "type": "object",
      "description": "The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC."
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "properties": {
        "validationResult": {
          "$ref": "ValidationResult",
          "description": "Output only. Results of executed validations if there are any.",
          "readOnly": true
        },
        "statusMessage": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "readOnly": true
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "type": "object"
    },
    "Route": {
      "properties": {
        "destinationAddress": {
          "type": "string",
          "description": "Required. Destination address for connection"
        },
        "createTime": {
          "description": "Output only. The create time of the resource.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource's name."
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name."
        },
        "updateTime": {
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "destinationPort": {
          "type": "integer",
          "format": "int32",
          "description": "Destination port for connection"
        }
      },
      "id": "Route",
      "description": "The route resource is the child of the private connection resource, used for defining a route for a private connection.",
      "type": "object"
    },
    "MysqlSourceConfig": {
      "type": "object",
      "id": "MysqlSourceConfig",
      "description": "MySQL source configuration",
      "properties": {
        "includeObjects": {
          "$ref": "MysqlRdbms",
          "description": "MySQL objects to retrieve from the source."
        },
        "excludeObjects": {
          "description": "MySQL objects to exclude from the stream.",
          "$ref": "MysqlRdbms"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        }
      },
      "type": "object"
    },
    "OracleTable": {
      "type": "object",
      "id": "OracleTable",
      "description": "Oracle table.",
      "properties": {
        "table": {
          "type": "string",
          "description": "Table name."
        },
        "oracleColumns": {
          "items": {
            "$ref": "OracleColumn"
          },
          "description": "Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything.",
          "type": "array"
        }
      }
    },
    "CancelOperationRequest": {
      "type": "object",
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {}
    },
    "PrivateConnection": {
      "id": "PrivateConnection",
      "description": "The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource's name."
        },
        "state": {
          "description": "Output only. The state of the Private Connection.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "CREATED",
            "FAILED",
            "DELETING",
            "FAILED_TO_DELETE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "The private connection is in creation state - creating resources.",
            "The private connection has been created with all of its resources.",
            "The private connection creation has failed.",
            "The private connection is being deleted.",
            "Delete request has failed, resource is in invalid state."
          ],
          "readOnly": true
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "vpcPeeringConfig": {
          "description": "VPC Peering Config.",
          "$ref": "VpcPeeringConfig"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The update time of the resource.",
          "format": "google-datetime",
          "readOnly": true
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The create time of the resource."
        },
        "error": {
          "$ref": "Error",
          "readOnly": true,
          "description": "Output only. In case of error, the details of the error in a user-friendly format."
        },
        "labels": {
          "description": "Labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "ValidationMessage": {
      "type": "object",
      "description": "Represent user-facing validation result message.",
      "properties": {
        "code": {
          "type": "string",
          "description": "A custom code identifying this specific message."
        },
        "message": {
          "type": "string",
          "description": "The result of the validation."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata related to the result.",
          "type": "object"
        },
        "level": {
          "type": "string",
          "description": "Message severity level (warning or error).",
          "enumDescriptions": [
            "Unspecified level.",
            "Potentially cause issues with the Stream.",
            "Definitely cause issues with the Stream."
          ],
          "enum": [
            "LEVEL_UNSPECIFIED",
            "WARNING",
            "ERROR"
          ]
        }
      },
      "id": "ValidationMessage"
    },
    "MysqlColumn": {
      "properties": {
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        },
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "type": "integer",
          "format": "int32"
        },
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Column length."
        },
        "dataType": {
          "description": "The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html",
          "type": "string"
        },
        "collation": {
          "description": "Column collation.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "MysqlColumn",
      "description": "MySQL Column."
    },
    "AvroFileFormat": {
      "description": "AVRO file format configuration.",
      "properties": {},
      "type": "object",
      "id": "AvroFileFormat"
    },
    "MysqlObjectIdentifier": {
      "type": "object",
      "id": "MysqlObjectIdentifier",
      "description": "Mysql data source object identifier.",
      "properties": {
        "table": {
          "description": "The table name.",
          "type": "string"
        },
        "database": {
          "type": "string",
          "description": "The database name."
        }
      }
    },
    "MysqlProfile": {
      "id": "MysqlProfile",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Required. Hostname for the MySQL connection."
        },
        "password": {
          "description": "Required. Input only. Password for the MySQL connection.",
          "type": "string"
        },
        "sslConfig": {
          "$ref": "MysqlSslConfig",
          "description": "SSL configuration for the MySQL connection."
        },
        "port": {
          "type": "integer",
          "description": "Port for the MySQL connection, default value is 3306.",
          "format": "int32"
        },
        "username": {
          "description": "Required. Username for the MySQL connection.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "MySQL database profile."
    },
    "Validation": {
      "type": "object",
      "id": "Validation",
      "properties": {
        "message": {
          "type": "array",
          "description": "Messages reflecting the validation results.",
          "items": {
            "$ref": "ValidationMessage"
          }
        },
        "state": {
          "description": "Validation execution status.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_EXECUTED",
            "FAILED",
            "PASSED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Validation did not execute.",
            "Validation failed.",
            "Validation passed."
          ]
        },
        "description": {
          "type": "string",
          "description": "A short description of the validation."
        },
        "code": {
          "type": "string",
          "description": "A custom code identifying this validation."
        }
      },
      "description": "A validation to perform on a stream."
    },
    "Status": {
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "StartBackfillJobResponse": {
      "type": "object",
      "id": "StartBackfillJobResponse",
      "description": "Response for manually initiating a backfill job for a specific stream object.",
      "properties": {
        "object": {
          "description": "The stream object resource a backfill job was started for.",
          "$ref": "StreamObject"
        }
      }
    },
    "ListRoutesResponse": {
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "routes": {
          "type": "array",
          "description": "List of Routes.",
          "items": {
            "$ref": "Route"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "ListRoutesResponse",
      "description": "Route list response.",
      "type": "object"
    },
    "DiscoverConnectionProfileRequest": {
      "type": "object",
      "description": "Request message for 'discover' ConnectionProfile request.",
      "id": "DiscoverConnectionProfileRequest",
      "properties": {
        "connectionProfileName": {
          "type": "string",
          "description": "A reference to an existing connection profile."
        },
        "hierarchyDepth": {
          "description": "The number of hierarchy levels below the current level to be retrieved.",
          "format": "int32",
          "type": "integer"
        },
        "connectionProfile": {
          "$ref": "ConnectionProfile",
          "description": "An ad-hoc connection profile configuration."
        },
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Oracle RDBMS to enrich with child data objects and metadata."
        },
        "mysqlRdbms": {
          "$ref": "MysqlRdbms",
          "description": "MySQL RDBMS to enrich with child data objects and metadata."
        },
        "fullHierarchy": {
          "description": "Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).",
          "type": "boolean"
        }
      }
    },
    "PrivateConnectivity": {
      "type": "object",
      "description": "Private Connectivity",
      "properties": {
        "privateConnection": {
          "type": "string",
          "description": "Required. A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`"
        }
      },
      "id": "PrivateConnectivity"
    },
    "SourceObjectIdentifier": {
      "description": "Represents an identifier of an object in the data source.",
      "type": "object",
      "properties": {
        "mysqlIdentifier": {
          "$ref": "MysqlObjectIdentifier",
          "description": "Mysql data source object identifier."
        },
        "oracleIdentifier": {
          "$ref": "OracleObjectIdentifier",
          "description": "Oracle data source object identifier."
        }
      },
      "id": "SourceObjectIdentifier"
    },
    "OracleSourceConfig": {
      "properties": {
        "includeObjects": {
          "description": "Oracle objects to include in the stream.",
          "$ref": "OracleRdbms"
        },
        "excludeObjects": {
          "$ref": "OracleRdbms",
          "description": "Oracle objects to exclude from the stream."
        }
      },
      "type": "object",
      "id": "OracleSourceConfig",
      "description": "Oracle data source configuration"
    },
    "OracleSchema": {
      "properties": {
        "schema": {
          "type": "string",
          "description": "Schema name."
        },
        "oracleTables": {
          "items": {
            "$ref": "OracleTable"
          },
          "type": "array",
          "description": "Tables in the schema."
        }
      },
      "id": "OracleSchema",
      "description": "Oracle schema.",
      "type": "object"
    },
    "JsonFileFormat": {
      "description": "JSON file format configuration.",
      "id": "JsonFileFormat",
      "type": "object",
      "properties": {
        "schemaFileFormat": {
          "enum": [
            "SCHEMA_FILE_FORMAT_UNSPECIFIED",
            "NO_SCHEMA_FILE",
            "AVRO_SCHEMA_FILE"
          ],
          "description": "The schema file format along JSON data files.",
          "enumDescriptions": [
            "Unspecified schema file format.",
            "Do not attach schema file.",
            "Avro schema format."
          ],
          "type": "string"
        },
        "compression": {
          "enum": [
            "JSON_COMPRESSION_UNSPECIFIED",
            "NO_COMPRESSION",
            "GZIP"
          ],
          "enumDescriptions": [
            "Unspecified json file compression.",
            "Do not compress JSON file.",
            "Gzip compression."
          ],
          "description": "Compression of the loaded JSON file.",
          "type": "string"
        }
      }
    },
    "StreamObject": {
      "type": "object",
      "properties": {
        "backfillJob": {
          "$ref": "BackfillJob",
          "description": "The latest backfill job that was initiated for the stream object."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The creation time of the object.",
          "type": "string",
          "readOnly": true
        },
        "sourceObject": {
          "description": "The object identifier in the data source.",
          "$ref": "SourceObjectIdentifier"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The object resource's name."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The last update time of the object."
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Active errors on the object."
        }
      },
      "id": "StreamObject",
      "description": "A specific stream object (e.g a specific DB table)."
    },
    "SourceConfig": {
      "id": "SourceConfig",
      "description": "The configuration of the stream source.",
      "properties": {
        "oracleSourceConfig": {
          "description": "Oracle data source configuration",
          "$ref": "OracleSourceConfig"
        },
        "sourceConnectionProfile": {
          "type": "string",
          "description": "Required. Source connection profile resoource. Format: `projects/{project}/locations/{location}/connectionProfiles/{name}`"
        },
        "mysqlSourceConfig": {
          "$ref": "MysqlSourceConfig",
          "description": "MySQL data source configuration"
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "DiscoverConnectionProfileResponse": {
      "id": "DiscoverConnectionProfileResponse",
      "type": "object",
      "description": "Response from a discover request.",
      "properties": {
        "oracleRdbms": {
          "$ref": "OracleRdbms",
          "description": "Enriched Oracle RDBMS object."
        },
        "mysqlRdbms": {
          "description": "Enriched MySQL RDBMS object.",
          "$ref": "MysqlRdbms"
        }
      }
    },
    "MysqlRdbms": {
      "id": "MysqlRdbms",
      "type": "object",
      "properties": {
        "mysqlDatabases": {
          "description": "Mysql databases on the server",
          "items": {
            "$ref": "MysqlDatabase"
          },
          "type": "array"
        }
      },
      "description": "MySQL database structure"
    },
    "OracleColumn": {
      "description": "Oracle Column.",
      "properties": {
        "ordinalPosition": {
          "description": "The ordinal position of the column in the table.",
          "format": "int32",
          "type": "integer"
        },
        "primaryKey": {
          "type": "boolean",
          "description": "Whether or not the column represents a primary key."
        },
        "length": {
          "type": "integer",
          "description": "Column length.",
          "format": "int32"
        },
        "precision": {
          "description": "Column precision.",
          "format": "int32",
          "type": "integer"
        },
        "nullable": {
          "type": "boolean",
          "description": "Whether or not the column can accept a null value."
        },
        "dataType": {
          "description": "The Oracle data type.",
          "type": "string"
        },
        "column": {
          "description": "Column name.",
          "type": "string"
        },
        "encoding": {
          "description": "Column encoding.",
          "type": "string"
        },
        "scale": {
          "description": "Column scale.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "OracleColumn"
    },
    "ListConnectionProfilesResponse": {
      "description": "Response message for listing connection profiles.",
      "id": "ListConnectionProfilesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "connectionProfiles": {
          "items": {
            "$ref": "ConnectionProfile"
          },
          "type": "array",
          "description": "List of connection profiles."
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    }
  },
  "version": "v1",
  "revision": "20211110",
  "rootUrl": "https://datastream.googleapis.com/",
  "baseUrl": "https://datastream.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "Location"
              },
              "description": "Gets information about a location.",
              "id": "datastream.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}"
            },
            "list": {
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "filter": {
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "id": "datastream.projects.locations.list",
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET"
            },
            "fetchStaticIps": {
              "response": {
                "$ref": "FetchStaticIpsResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}:fetchStaticIps",
              "id": "datastream.projects.locations.fetchStaticIps",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}:fetchStaticIps",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "The FetchStaticIps API call exposes the static ips used by Datastream. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name resource of the Response type. Must be in the format `projects/*/locations/*`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                },
                "pageToken": {
                  "description": "A page token, received from a previous `ListStaticIps` call. will likely not be specified.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "Maximum number of Ips to return, will likely not be specified.",
                  "type": "integer"
                }
              }
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "delete": {
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}",
                  "id": "datastream.projects.locations.operations.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "datastream.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:cancel"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "id": "datastream.projects.locations.operations.get",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "id": "datastream.projects.locations.operations.list",
                  "path": "v1/{+name}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation's parent resource."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "connectionProfiles": {
              "methods": {
                "delete": {
                  "path": "v1/{+name}",
                  "id": "datastream.projects.locations.connectionProfiles.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "requestId": {
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the connection profile resource to delete.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to delete a connection profile..",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "httpMethod": "DELETE"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The name of the connection profile resource to get.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "description": "Use this method to get details about a connection profile.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ConnectionProfile"
                  },
                  "id": "datastream.projects.locations.connectionProfiles.get",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent that owns the collection of ConnectionProfiles.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "connectionProfileId": {
                      "type": "string",
                      "description": "Required. The connection profile identifier.",
                      "location": "query"
                    },
                    "force": {
                      "type": "boolean",
                      "description": "Optional. Create the connection profile without validating it.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "path": "v1/{+parent}/connectionProfiles",
                  "description": "Use this method to create a connection profile in a project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datastream.projects.locations.connectionProfiles.create",
                  "httpMethod": "POST"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent that owns the collection of connection profiles.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token received from a previous `ListConnectionProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListConnectionProfiles` must match the call that provided the page token."
                    },
                    "orderBy": {
                      "description": "Order by fields for the result.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filter request.",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of connection profiles to return. If unspecified, at most 50 connection profiles will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "id": "datastream.projects.locations.connectionProfiles.list",
                  "path": "v1/{+parent}/connectionProfiles",
                  "response": {
                    "$ref": "ListConnectionProfilesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Use this method to list connection profiles created in a project and location.",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles"
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles/{connectionProfilesId}",
                  "request": {
                    "$ref": "ConnectionProfile"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "requestId": {
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string"
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Execute the update without validating it."
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the ConnectionProfile resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/connectionProfiles/[^/]+$",
                      "required": true,
                      "description": "Output only. The resource's name.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "id": "datastream.projects.locations.connectionProfiles.patch",
                  "description": "Use this method to update the parameters of a connection profile.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "discover": {
                  "description": "Use this method to discover a connection profile. The discover API call exposes the data objects and metadata belonging to the profile. Typically, a request returns children data objects under a parent data object that's optionally supplied in the request.",
                  "response": {
                    "$ref": "DiscoverConnectionProfileResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/connectionProfiles:discover",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/connectionProfiles:discover",
                  "id": "datastream.projects.locations.connectionProfiles.discover",
                  "request": {
                    "$ref": "DiscoverConnectionProfileRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource of the connection profile type. Must be in the format `projects/*/locations/*`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "streams": {
              "methods": {
                "patch": {
                  "id": "datastream.projects.locations.streams.patch",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Output only. The stream's name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "force": {
                      "description": "Optional. Create the stream without validating it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Optional. Field mask is used to specify the fields to be overwritten in the stream resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Optional. Only validate the stream with the changes, without actually updating it. The default is false.",
                      "location": "query"
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Use this method to update the configuration of a stream.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "Stream"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "id": "datastream.projects.locations.streams.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the stream resource to delete.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "requestId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "description": "Use this method to delete a stream.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "response": {
                    "$ref": "ListStreamsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "Maximum number of streams to return. If unspecified, at most 50 streams will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter request.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token received from a previous `ListStreams` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreams` must match the call that provided the page token.",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Order by fields for the result."
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent that owns the collection of streams.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1/{+parent}/streams",
                  "id": "datastream.projects.locations.streams.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to list streams in a project and location."
                },
                "create": {
                  "request": {
                    "$ref": "Stream"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent that owns the collection of streams.",
                      "required": true,
                      "type": "string"
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query",
                      "type": "string"
                    },
                    "force": {
                      "description": "Optional. Create the stream without validating it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Only validate the stream, but do not create any resources. The default is false."
                    },
                    "streamId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The stream identifier."
                    }
                  },
                  "description": "Use this method to create a stream.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "datastream.projects.locations.streams.create",
                  "path": "v1/{+parent}/streams",
                  "httpMethod": "POST"
                },
                "get": {
                  "response": {
                    "$ref": "Stream"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                      "description": "Required. The name of the stream resource to get."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Use this method to get details about a stream.",
                  "httpMethod": "GET",
                  "id": "datastream.projects.locations.streams.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "objects": {
                  "methods": {
                    "stopBackfillJob": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:stopBackfillJob",
                      "parameters": {
                        "object": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the stream object resource to stop the backfill job for.",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "StopBackfillJobResponse"
                      },
                      "id": "datastream.projects.locations.streams.objects.stopBackfillJob",
                      "httpMethod": "POST",
                      "description": "Stops the backfill job for the specified stream object.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "StopBackfillJobRequest"
                      },
                      "path": "v1/{+object}:stopBackfillJob",
                      "parameterOrder": [
                        "object"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Page token received from a previous `ListStreamObjectsRequest` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListStreamObjectsRequest` must match the call that provided the page token.",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Maximum number of objects to return. Default is 50. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "description": "Use this method to list the objects of a specific stream.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListStreamObjectsResponse"
                      },
                      "id": "datastream.projects.locations.streams.objects.list",
                      "path": "v1/{+parent}/objects",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "startBackfillJob": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}:startBackfillJob",
                      "description": "Starts backfill job for the specified stream object.",
                      "parameters": {
                        "object": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the stream object resource to start a backfill job for."
                        }
                      },
                      "response": {
                        "$ref": "StartBackfillJobResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+object}:startBackfillJob",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "StartBackfillJobRequest"
                      },
                      "parameterOrder": [
                        "object"
                      ],
                      "id": "datastream.projects.locations.streams.objects.startBackfillJob"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "id": "datastream.projects.locations.streams.objects.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "description": "Use this method to get details about a stream object.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the stream object resource to get.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+/objects/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects/{objectsId}"
                    },
                    "lookup": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/streams/{streamsId}/objects:lookup",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "LookupStreamObjectRequest"
                      },
                      "path": "v1/{+parent}/objects:lookup",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/streams/[^/]+$",
                          "description": "Required. The parent stream that owns the collection of objects.",
                          "type": "string"
                        }
                      },
                      "description": "Use this method to look up a stream object by its source object identifier.",
                      "response": {
                        "$ref": "StreamObject"
                      },
                      "httpMethod": "POST",
                      "id": "datastream.projects.locations.streams.objects.lookup"
                    }
                  }
                }
              }
            },
            "privateConnections": {
              "methods": {
                "delete": {
                  "parameters": {
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. If set to true, any child routes that belong to this PrivateConnection will also be deleted."
                    },
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the private connectivity configuration to delete."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "datastream.projects.locations.privateConnections.delete",
                  "description": "Use this method to delete a private connectivity configuration.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "response": {
                    "$ref": "PrivateConnection"
                  },
                  "id": "datastream.projects.locations.privateConnections.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the private connectivity configuration to get."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}",
                  "path": "v1/{+name}",
                  "description": "Use this method to get details about a private connectivity configuration."
                },
                "list": {
                  "id": "datastream.projects.locations.privateConnections.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListPrivateConnectionsResponse"
                  },
                  "description": "Use this method to list private connectivity configurations in a project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/privateConnections",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of private connectivity configurations.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "description": "Maximum number of private connectivity configurations to return. If unspecified, at most 50 private connectivity configurations that will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Page token received from a previous `ListPrivateConnections` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPrivateConnections` must match the call that provided the page token."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter request."
                    },
                    "orderBy": {
                      "location": "query",
                      "description": "Order by fields for the result.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "id": "datastream.projects.locations.privateConnections.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Use this method to create a private connectivity configuration.",
                  "parameters": {
                    "requestId": {
                      "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "type": "string",
                      "location": "query"
                    },
                    "privateConnectionId": {
                      "location": "query",
                      "description": "Required. The private connectivity identifier.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent that owns the collection of PrivateConnections."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "PrivateConnection"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/privateConnections"
                }
              },
              "resources": {
                "routes": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "id": "datastream.projects.locations.privateConnections.routes.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the Route resource to get.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Route"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "description": "Use this method to get details about a route."
                    },
                    "list": {
                      "path": "v1/{+parent}/routes",
                      "response": {
                        "$ref": "ListRoutesResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "orderBy": {
                          "description": "Order by fields for the result.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Maximum number of Routes to return. The service may return fewer than this value. If unspecified, at most 50 Routes will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Filter request."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Page token received from a previous `ListRoutes` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRoutes` must match the call that provided the page token.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent that owns the collection of Routess.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$"
                        }
                      },
                      "description": "Use this method to list routes created for a private connectivity in a project and location.",
                      "id": "datastream.projects.locations.privateConnections.routes.list"
                    },
                    "create": {
                      "parameters": {
                        "routeId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The Route identifier."
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The parent that owns the collection of Routes.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "Route"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datastream.projects.locations.privateConnections.routes.create",
                      "description": "Use this method to create a route for a private connectivity in a project and location.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+parent}/routes"
                    },
                    "delete": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Use this method to delete a route.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Route resource to delete.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/privateConnections/[^/]+/routes/[^/]+$",
                          "type": "string"
                        },
                        "requestId": {
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/privateConnections/{privateConnectionsId}/routes/{routesId}",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datastream.projects.locations.privateConnections.routes.delete"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "description": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "documentationLink": "https://cloud.google.com/datastream/",
  "protocol": "rest",
  "servicePath": "",
  "canonicalName": "Datastream",
  "title": "Datastream API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerName": "Google",
  "version_module": true,
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "discoveryVersion": "v1"
}

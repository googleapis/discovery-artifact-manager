{
  "description": "Exchange data and analytics assets securely and efficiently.",
  "title": "Analytics Hub API",
  "name": "analyticshub",
  "batchPath": "batch",
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    }
  },
  "version": "v1beta1",
  "schemas": {
    "BigQueryDatasetSource": {
      "id": "BigQueryDatasetSource",
      "description": "A reference to a shared dataset. It is an existing BigQuery dataset with a collection of objects such as tables and views that you want to share with subscribers. When subscriber's subscribe to a listing, Analytics Hub creates a linked dataset in the subscriber's project. A Linked dataset is an opaque, read-only BigQuery dataset that serves as a _symbolic link_ to a shared dataset.",
      "properties": {
        "dataset": {
          "description": "Resource name of the dataset source for this listing. e.g. `projects/myproject/datasets/123`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DestinationDatasetReference": {
      "type": "object",
      "id": "DestinationDatasetReference",
      "description": "Contains the reference that identifies a destination bigquery dataset.",
      "properties": {
        "datasetId": {
          "type": "string",
          "description": "Required. A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters."
        },
        "projectId": {
          "description": "Required. The ID of the project containing this dataset.",
          "type": "string"
        }
      }
    },
    "ListOrgDataExchangesResponse": {
      "id": "ListOrgDataExchangesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of results."
        },
        "dataExchanges": {
          "items": {
            "$ref": "DataExchange"
          },
          "type": "array",
          "description": "The list of data exchanges."
        }
      },
      "description": "Message for response to listing data exchanges in an organization and location."
    },
    "DataProvider": {
      "type": "object",
      "description": "Contains details of the data provider.",
      "id": "DataProvider",
      "properties": {
        "primaryContact": {
          "type": "string",
          "description": "Optional. Email or URL of the data provider. Max Length: 1000 bytes."
        },
        "name": {
          "description": "Optional. Name of the data provider.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "Publisher": {
      "id": "Publisher",
      "type": "object",
      "properties": {
        "primaryContact": {
          "description": "Optional. Email or URL of the listing publisher. Max Length: 1000 bytes.",
          "type": "string"
        },
        "name": {
          "description": "Optional. Name of the listing publisher.",
          "type": "string"
        }
      },
      "description": "Contains details of the listing publisher."
    },
    "SubscribeListingRequest": {
      "description": "Message for subscribing to a listing.",
      "type": "object",
      "id": "SubscribeListingRequest",
      "properties": {
        "destinationDataset": {
          "description": "BigQuery destination dataset to create for the subscriber.",
          "$ref": "DestinationDataset"
        }
      }
    },
    "ListListingsResponse": {
      "description": "Message for response to the list of Listings.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of results."
        },
        "listings": {
          "description": "The list of Listing.",
          "items": {
            "$ref": "Listing"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListListingsResponse"
    },
    "GetPolicyOptions": {
      "id": "GetPolicyOptions",
      "description": "Encapsulates settings provided to GetIamPolicy.",
      "type": "object",
      "properties": {
        "requestedPolicyVersion": {
          "format": "int32",
          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "id": "TestIamPermissionsRequest"
    },
    "Expr": {
      "type": "object",
      "id": "Expr",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "OperationMetadata": {
      "type": "object",
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "properties": {
        "statusDetail": {
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string"
        },
        "endTime": {
          "readOnly": true,
          "description": "Output only. The time the operation finished running.",
          "format": "google-datetime",
          "type": "string"
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "apiVersion": {
          "readOnly": true,
          "description": "Output only. API version used to start the operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "cancelRequested": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        }
      }
    },
    "ListDataExchangesResponse": {
      "id": "ListDataExchangesResponse",
      "description": "Message for response to the list of data exchanges.",
      "properties": {
        "dataExchanges": {
          "items": {
            "$ref": "DataExchange"
          },
          "type": "array",
          "description": "The list of data exchanges."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to request the next page of results."
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte",
          "type": "string"
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        }
      },
      "id": "Policy"
    },
    "RestrictedExportConfig": {
      "type": "object",
      "properties": {
        "restrictQueryResult": {
          "description": "If true, restrict export of query result derived from restricted linked dataset table.",
          "type": "boolean"
        },
        "enabled": {
          "description": "If true, enable restricted export.",
          "type": "boolean"
        }
      },
      "id": "RestrictedExportConfig",
      "description": "Restricted export config, used to configure restricted export on linked dataset."
    },
    "DataExchange": {
      "properties": {
        "primaryContact": {
          "description": "Optional. Email or URL of the primary point of contact of the data exchange. Max Length: 1000 bytes.",
          "type": "string"
        },
        "listingCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. Number of listings contained in the data exchange.",
          "format": "int32"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and must not start or end with spaces. Default value is an empty string. Max length: 63 bytes."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the data exchange. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes."
        },
        "documentation": {
          "description": "Optional. Documentation describing the data exchange.",
          "type": "string"
        },
        "icon": {
          "type": "string",
          "format": "byte",
          "description": "Optional. Base64 encoded image representing the data exchange. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the content of the fields are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`.",
          "readOnly": true
        }
      },
      "description": "A data exchange is a container that lets you share data. Along with the descriptive information about the data exchange, it contains listings that reference shared datasets.",
      "type": "object",
      "id": "DataExchange"
    },
    "GetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "options": {
          "$ref": "GetPolicyOptions",
          "description": "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
        }
      },
      "id": "GetIamPolicyRequest",
      "description": "Request message for `GetIamPolicy` method."
    },
    "Listing": {
      "id": "Listing",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the listing. e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`",
          "readOnly": true
        },
        "bigqueryDataset": {
          "$ref": "BigQueryDatasetSource",
          "description": "Required. Shared dataset i.e. BigQuery dataset source."
        },
        "publisher": {
          "description": "Optional. Details of the publisher who owns the listing and who can share the source data.",
          "$ref": "Publisher"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces. Default value is an empty string. Max length: 63 bytes."
        },
        "categories": {
          "type": "array",
          "items": {
            "enum": [
              "CATEGORY_UNSPECIFIED",
              "CATEGORY_OTHERS",
              "CATEGORY_ADVERTISING_AND_MARKETING",
              "CATEGORY_COMMERCE",
              "CATEGORY_CLIMATE_AND_ENVIRONMENT",
              "CATEGORY_DEMOGRAPHICS",
              "CATEGORY_ECONOMICS",
              "CATEGORY_EDUCATION",
              "CATEGORY_ENERGY",
              "CATEGORY_FINANCIAL",
              "CATEGORY_GAMING",
              "CATEGORY_GEOSPATIAL",
              "CATEGORY_HEALTHCARE_AND_LIFE_SCIENCE",
              "CATEGORY_MEDIA",
              "CATEGORY_PUBLIC_SECTOR",
              "CATEGORY_RETAIL",
              "CATEGORY_SPORTS",
              "CATEGORY_SCIENCE_AND_RESEARCH",
              "CATEGORY_TRANSPORTATION_AND_LOGISTICS",
              "CATEGORY_TRAVEL_AND_TOURISM"
            ],
            "enumDescriptions": [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "string"
          },
          "description": "Optional. Categories of the listing. Up to two categories are allowed."
        },
        "primaryContact": {
          "description": "Optional. Email or URL of the primary point of contact of the listing. Max Length: 1000 bytes.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "Subscribable state. Users with dataexchange.listings.subscribe permission can subscribe to this listing."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Output only. Current state of the listing."
        },
        "requestAccess": {
          "type": "string",
          "description": "Optional. Email or URL of the request access of the listing. Subscribers can use this reference to request access. Max Length: 1000 bytes."
        },
        "restrictedExportConfig": {
          "$ref": "RestrictedExportConfig",
          "description": "Optional. If set, restricted export configuration will be propagated and enforced on the linked dataset."
        },
        "icon": {
          "description": "Optional. Base64 encoded image representing the listing. Max Size: 3.0MiB Expected image dimensions are 512x512 pixels, however the API only performs validation on size of the encoded data. Note: For byte fields, the contents of the field are base64-encoded (which increases the size of the data by 33-36%) when using JSON on the wire.",
          "type": "string",
          "format": "byte"
        },
        "documentation": {
          "description": "Optional. Documentation describing the listing.",
          "type": "string"
        },
        "dataProvider": {
          "description": "Optional. Details of the data provider who owns the source data.",
          "$ref": "DataProvider"
        },
        "description": {
          "description": "Optional. Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). Default value is an empty string. Max length: 2000 bytes.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A listing is what gets published into a data exchange that a subscriber can subscribe to. It contains a reference to the data source along with descriptive information that will help subscribers find and subscribe the data."
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        }
      },
      "id": "Binding"
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "type": "object",
      "description": "Response message for `TestIamPermissions` method."
    },
    "DestinationDataset": {
      "properties": {
        "datasetReference": {
          "description": "Required. A reference that identifies the destination dataset.",
          "$ref": "DestinationDatasetReference"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See https://cloud.google.com/resource-manager/docs/creating-managing-labels for more information.",
          "type": "object"
        },
        "friendlyName": {
          "type": "string",
          "description": "Optional. A descriptive name for the dataset."
        },
        "description": {
          "description": "Optional. A user-friendly description of the dataset.",
          "type": "string"
        },
        "location": {
          "description": "Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DestinationDataset",
      "description": "Defines the destination bigquery dataset."
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "type": "object",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
    },
    "SubscribeListingResponse": {
      "id": "SubscribeListingResponse",
      "type": "object",
      "properties": {},
      "description": "Message for response when you subscribe to a listing."
    }
  },
  "mtlsRootUrl": "https://analyticshub.mtls.googleapis.com/",
  "rootUrl": "https://analyticshub.googleapis.com/",
  "protocol": "rest",
  "baseUrl": "https://analyticshub.googleapis.com/",
  "documentationLink": "https://cloud.google.com/bigquery/docs/analytics-hub-introduction",
  "discoveryVersion": "v1",
  "kind": "discovery#restDescription",
  "id": "analyticshub:v1beta1",
  "version_module": true,
  "servicePath": "",
  "revision": "20230317",
  "canonicalName": "Analytics Hub",
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "resources": {
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "dataExchanges": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "organization": {
                      "location": "path",
                      "description": "Required. The organization resource path of the projects containing DataExchanges. e.g. `organizations/myorg/locations/US`.",
                      "pattern": "^organizations/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Page token, returned by a previous call, to request the next page of results."
                    }
                  },
                  "path": "v1beta1/{+organization}/dataExchanges",
                  "response": {
                    "$ref": "ListOrgDataExchangesResponse"
                  },
                  "id": "analyticshub.organizations.locations.dataExchanges.list",
                  "description": "Lists all data exchanges from projects in a given organization and location.",
                  "flatPath": "v1beta1/organizations/{organizationsId}/locations/{locationsId}/dataExchanges",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "organization"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "dataExchanges": {
              "resources": {
                "listings": {
                  "methods": {
                    "delete": {
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "id": "analyticshub.projects.locations.dataExchanges.listings.delete",
                      "parameters": {
                        "name": {
                          "description": "Required. Resource name of the listing to delete. e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+/listings/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Empty"
                      },
                      "description": "Deletes a listing.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}"
                    },
                    "list": {
                      "response": {
                        "$ref": "ListListingsResponse"
                      },
                      "path": "v1beta1/{+parent}/listings",
                      "description": "Lists all listings in a given project and location.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "analyticshub.projects.locations.dataExchanges.listings.list",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. The parent resource path of the listing. e.g. `projects/myproject/locations/US/dataExchanges/123`.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Page token, returned by a previous call, to request the next page of results.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        }
                      }
                    },
                    "patch": {
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Required. Field mask specifies the fields to update in the listing resource. The fields specified in the `updateMask` are relative to the resource and are not a full request.",
                          "type": "string"
                        },
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+/listings/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Output only. The resource name of the listing. e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`"
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "Listing"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "analyticshub.projects.locations.dataExchanges.listings.patch",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates an existing listing.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}",
                      "response": {
                        "$ref": "Listing"
                      }
                    },
                    "subscribe": {
                      "response": {
                        "$ref": "SubscribeListingResponse"
                      },
                      "description": "Subscribes to a listing. Currently, with Analytics Hub, you can create listings that reference only BigQuery datasets. Upon subscription to a listing for a BigQuery dataset, Analytics Hub creates a linked dataset in the subscriber's project.",
                      "id": "analyticshub.projects.locations.dataExchanges.listings.subscribe",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+/listings/[^/]+$",
                          "description": "Required. Resource name of the listing that you want to subscribe to. e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:subscribe",
                      "request": {
                        "$ref": "SubscribeListingRequest"
                      },
                      "path": "v1beta1/{+name}:subscribe",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "getIamPolicy": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "analyticshub.projects.locations.dataExchanges.listings.getIamPolicy",
                      "description": "Gets the IAM policy.",
                      "request": {
                        "$ref": "GetIamPolicyRequest"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+/listings/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ],
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+/listings/[^/]+$",
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "location": "path"
                        }
                      },
                      "description": "Returns the permissions that a caller has.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "httpMethod": "POST",
                      "id": "analyticshub.projects.locations.dataExchanges.listings.testIamPermissions"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}",
                      "description": "Gets the details of a listing.",
                      "id": "analyticshub.projects.locations.dataExchanges.listings.get",
                      "response": {
                        "$ref": "Listing"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The resource name of the listing. e.g. `projects/myproject/locations/US/dataExchanges/123/listings/456`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+/listings/[^/]+$"
                        }
                      }
                    },
                    "setIamPolicy": {
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the IAM policy.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "id": "analyticshub.projects.locations.dataExchanges.listings.setIamPolicy",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings/{listingsId}:setIamPolicy",
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+/listings/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "POST"
                    },
                    "create": {
                      "parameters": {
                        "listingId": {
                          "description": "Required. The ID of the listing to create. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The parent resource path of the listing. e.g. `projects/myproject/locations/US/dataExchanges/123`.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "Listing"
                      },
                      "path": "v1beta1/{+parent}/listings",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}/listings",
                      "description": "Creates a new listing.",
                      "id": "analyticshub.projects.locations.dataExchanges.listings.create",
                      "response": {
                        "$ref": "Listing"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/bigquery",
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource path of the data exchanges. e.g. `projects/myproject/locations/US`.",
                      "location": "path",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Page token, returned by a previous call, to request the next page of results.",
                      "type": "string"
                    }
                  },
                  "id": "analyticshub.projects.locations.dataExchanges.list",
                  "httpMethod": "GET",
                  "description": "Lists all data exchanges in a given project and location.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges",
                  "path": "v1beta1/{+parent}/dataExchanges",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDataExchangesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "DataExchange"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Field mask specifies the fields to update in the data exchange resource. The fields specified in the `updateMask` are relative to the resource and are not a full request.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "Output only. The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$"
                    }
                  },
                  "id": "analyticshub.projects.locations.dataExchanges.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "DataExchange"
                  },
                  "description": "Updates an existing data exchange."
                },
                "get": {
                  "path": "v1beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name of the data exchange. e.g. `projects/myproject/locations/US/dataExchanges/123`."
                    }
                  },
                  "description": "Gets the details of a data exchange.",
                  "httpMethod": "GET",
                  "id": "analyticshub.projects.locations.dataExchanges.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "DataExchange"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}"
                },
                "getIamPolicy": {
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "description": "Gets the IAM policy.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "analyticshub.projects.locations.dataExchanges.getIamPolicy",
                  "request": {
                    "$ref": "GetIamPolicyRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:getIamPolicy"
                },
                "testIamPermissions": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:testIamPermissions",
                  "description": "Returns the permissions that a caller has.",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "analyticshub.projects.locations.dataExchanges.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The full name of the data exchange resource that you want to delete. For example, `projects/myproject/locations/US/dataExchanges/123`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an existing data exchange.",
                  "id": "analyticshub.projects.locations.dataExchanges.delete"
                },
                "create": {
                  "parameters": {
                    "dataExchangeId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource path of the data exchange. e.g. `projects/myproject/locations/US`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "DataExchange"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges",
                  "path": "v1beta1/{+parent}/dataExchanges",
                  "response": {
                    "$ref": "DataExchange"
                  },
                  "description": "Creates a new data exchange.",
                  "id": "analyticshub.projects.locations.dataExchanges.create",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "setIamPolicy": {
                  "httpMethod": "POST",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/dataExchanges/{dataExchangesId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dataExchanges/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/bigquery",
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the IAM policy.",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "analyticshub.projects.locations.dataExchanges.setIamPolicy"
                }
              }
            }
          }
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        },
        "https://www.googleapis.com/auth/bigquery": {
          "description": "View and manage your data in Google BigQuery and see the email address for your Google Account"
        }
      }
    }
  },
  "ownerDomain": "google.com"
}

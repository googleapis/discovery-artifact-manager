{
  "schemas": {
    "Operation": {
      "type": "object",
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      }
    },
    "Certificate": {
      "id": "Certificate",
      "description": "Defines TLS certificate.",
      "properties": {
        "name": {
          "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The creation timestamp of a Certificate.",
          "type": "string"
        },
        "expireTime": {
          "description": "Output only. The expiry timestamp of a Certificate.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Set of labels associated with a Certificate."
        },
        "pemCertificate": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The PEM-encoded certificate chain."
        },
        "updateTime": {
          "description": "Output only. The last update timestamp of a Certificate.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "selfManaged": {
          "$ref": "SelfManagedCertificate",
          "description": "If set, defines data of a self-managed certificate."
        },
        "scope": {
          "enumDescriptions": [
            "Certificates with default scope are served from core Google data centers. If unsure, choose this option.",
            "Certificates with scope EDGE_CACHE are special-purposed certificates, served from non-core Google data centers."
          ],
          "description": "Immutable. The scope of the certificate.",
          "enum": [
            "DEFAULT",
            "EDGE_CACHE"
          ],
          "type": "string"
        },
        "sanDnsnames": {
          "description": "Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.",
          "items": {
            "type": "string"
          },
          "type": "array",
          "readOnly": true
        },
        "managed": {
          "$ref": "ManagedCertificate",
          "description": "If set, contains configuration and state of a managed certificate."
        }
      },
      "type": "object"
    },
    "CertificateMapEntry": {
      "id": "CertificateMapEntry",
      "description": "Defines a certificate map entry.",
      "properties": {
        "description": {
          "description": "One or more paragraphs of text description of a certificate map entry.",
          "type": "string"
        },
        "state": {
          "description": "Output only. A serving state of this Certificate Map Entry.",
          "enum": [
            "SERVING_STATE_UNSPECIFIED",
            "ACTIVE",
            "PENDING"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "The status is undefined.",
            "The configuration is serving.",
            "Update is in progress. Some frontends may serve this configuration."
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The creation timestamp of a Certificate Map Entry."
        },
        "labels": {
          "description": "Set of labels associated with a Certificate Map Entry.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updateTime": {
          "description": "Output only. The update timestamp of a Certificate Map Entry.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate."
        },
        "matcher": {
          "enum": [
            "MATCHER_UNSPECIFIED",
            "PRIMARY"
          ],
          "type": "string",
          "enumDescriptions": [
            "A matcher has't been recognized.",
            "A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map."
          ],
          "description": "A predefined matcher for particular cases, other than SNI selection."
        },
        "certificates": {
          "description": "A set of Certificates defines for the given `hostname`. There can be defined up to fifteen certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "DnsAuthorization": {
      "description": "A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.",
      "id": "DnsAuthorization",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Set of labels associated with a DnsAuthorization.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dnsResourceRecord": {
          "readOnly": true,
          "description": "Output only. DNS Resource Record that needs to be added to DNS configuration.",
          "$ref": "DnsResourceRecord"
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The creation timestamp of a DnsAuthorization."
        },
        "name": {
          "type": "string",
          "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The last update timestamp of a DnsAuthorization."
        },
        "domain": {
          "type": "string",
          "description": "Required. Immutable. A domain which is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`."
        },
        "description": {
          "description": "One or more paragraphs of text description of a DnsAuthorization.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Location": {
      "type": "object",
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation. Output only.",
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version used to start the operation."
        },
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "type": "string",
          "description": "Human-readable status of the operation, if any."
        },
        "endTime": {
          "type": "string",
          "description": "The time the operation finished running.",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        },
        "target": {
          "type": "string",
          "description": "Server-defined resource path for the target of the operation."
        }
      }
    },
    "AuthorizationAttemptInfo": {
      "id": "AuthorizationAttemptInfo",
      "properties": {
        "details": {
          "type": "string",
          "description": "Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.",
          "readOnly": true
        },
        "failureReason": {
          "description": "Output only. Reason for failure of the authorization attempt for the domain.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "FAILURE_REASON_UNSPECIFIED",
            "CONFIG",
            "CAA",
            "RATE_LIMITED"
          ],
          "enumDescriptions": [
            "",
            "There was a problem with the user's DNS or load balancer configuration for this domain.",
            "Certificate issuance forbidden by an explicit CAA record for the domain or a failure to check CAA records for the domain.",
            "Reached a CA or internal rate-limit for the domain, e.g. for certificates per top-level private domain."
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name of the authorization attempt."
        },
        "state": {
          "readOnly": true,
          "description": "Output only. State of the domain for managed certificate issuance.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "AUTHORIZING",
            "AUTHORIZED",
            "FAILED"
          ],
          "enumDescriptions": [
            "",
            "Certificate provisioning for this domain is under way. GCP will attempt to authorize the domain.",
            "A managed certificate can be provisioned, no issues for this domain.",
            "Attempt to authorize the domain failed. This prevents the Managed Certificate from being issued. See `failure_reason` and `details` fields for more information."
          ]
        }
      },
      "description": "State of the latest attempt to authorize a domain for certificate issuance.",
      "type": "object"
    },
    "ProvisioningIssue": {
      "properties": {
        "details": {
          "readOnly": true,
          "description": "Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.",
          "type": "string"
        },
        "reason": {
          "enum": [
            "REASON_UNSPECIFIED",
            "AUTHORIZATION_ISSUE",
            "RATE_LIMITED"
          ],
          "description": "Output only. Reason for provisioning failures.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "",
            "Certificate provisioning failed due to an issue with one or more of the domains on the certificate. For details of which domains failed, consult the `authorization_attempt_info` field.",
            "Exceeded Certificate Authority quotas or internal rate limits of the system. Provisioning may take longer to complete."
          ]
        }
      },
      "type": "object",
      "description": "Information about issues with provisioning a Managed Certificate.",
      "id": "ProvisioningIssue"
    },
    "CancelOperationRequest": {
      "type": "object",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "ListCertificateMapEntriesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "certificateMapEntries": {
          "type": "array",
          "description": "A list of certificate map entries for the parent resource.",
          "items": {
            "$ref": "CertificateMapEntry"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      },
      "id": "ListCertificateMapEntriesResponse",
      "type": "object",
      "description": "Response for the `ListCertificateMapEntries` method."
    },
    "IpConfig": {
      "id": "IpConfig",
      "properties": {
        "ipAddress": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. An external IP address."
        },
        "ports": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Ports.",
          "items": {
            "format": "uint32",
            "type": "integer"
          }
        }
      },
      "description": "Defines IP configuration where this Certificate Map is serving.",
      "type": "object"
    },
    "SelfManagedCertificate": {
      "type": "object",
      "properties": {
        "pemCertificate": {
          "type": "string",
          "description": "Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any."
        },
        "pemPrivateKey": {
          "description": "Input only. The PEM-encoded private key of the leaf certificate.",
          "type": "string"
        }
      },
      "description": "Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility.",
      "id": "SelfManagedCertificate"
    },
    "ListCertificatesResponse": {
      "description": "Response for the `ListCertificates` method.",
      "id": "ListCertificatesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        },
        "certificates": {
          "type": "array",
          "description": "A list of certificates for the parent resource.",
          "items": {
            "$ref": "Certificate"
          }
        },
        "unreachable": {
          "description": "A list of locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ListCertificateMapsResponse": {
      "type": "object",
      "id": "ListCertificateMapsResponse",
      "description": "Response for the `ListCertificateMaps` method.",
      "properties": {
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        },
        "certificateMaps": {
          "type": "array",
          "description": "A list of certificate maps for the parent resource.",
          "items": {
            "$ref": "CertificateMap"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        }
      }
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "ManagedCertificate": {
      "id": "ManagedCertificate",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "FAILED",
            "ACTIVE"
          ],
          "enumDescriptions": [
            "",
            "Certificate Manager attempts to provision or renew the certificate. If the process takes longer than expected, consult the `provisioning_issue` field.",
            "Multiple certificate provisioning attempts failed and Certificate Manager gave up. To try again, delete and create a new managed Certificate resource. For details see the `provisioning_issue` field.",
            "The certificate management is working, and a certificate has been provisioned."
          ],
          "description": "Output only. State of the managed certificate resource.",
          "type": "string",
          "readOnly": true
        },
        "provisioningIssue": {
          "readOnly": true,
          "description": "Output only. Information about issues with provisioning a Managed Certificate.",
          "$ref": "ProvisioningIssue"
        },
        "dnsAuthorizations": {
          "description": "Immutable. Authorizations that will be used for performing domain authorization.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "authorizationAttemptInfo": {
          "description": "Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.",
          "readOnly": true,
          "items": {
            "$ref": "AuthorizationAttemptInfo"
          },
          "type": "array"
        },
        "domains": {
          "description": "Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.",
      "type": "object"
    },
    "ListDnsAuthorizationsResponse": {
      "id": "ListDnsAuthorizationsResponse",
      "description": "Response for the `ListDnsAuthorizations` method.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        },
        "dnsAuthorizations": {
          "description": "A list of dns authorizations for the parent resource.",
          "type": "array",
          "items": {
            "$ref": "DnsAuthorization"
          }
        }
      },
      "type": "object"
    },
    "CertificateMap": {
      "type": "object",
      "id": "CertificateMap",
      "description": "Defines a collection of certificate configurations.",
      "properties": {
        "gclbTargets": {
          "description": "Output only. A list of GCLB targets which use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.",
          "readOnly": true,
          "items": {
            "$ref": "GclbTarget"
          },
          "type": "array"
        },
        "name": {
          "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The update timestamp of a Certificate Map.",
          "readOnly": true
        },
        "labels": {
          "description": "Set of labels associated with a Certificate Map.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "createTime": {
          "description": "Output only. The creation timestamp of a Certificate Map.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate map."
        }
      }
    },
    "GclbTarget": {
      "type": "object",
      "properties": {
        "targetSslProxy": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`."
        },
        "ipConfigs": {
          "items": {
            "$ref": "IpConfig"
          },
          "type": "array",
          "description": "Output only. IP configurations for this Target Proxy where the Certificate Map is serving.",
          "readOnly": true
        },
        "targetHttpsProxy": {
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Describes a Target Proxy which uses this Certificate Map.",
      "id": "GclbTarget"
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "DnsResourceRecord": {
      "description": "The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.",
      "id": "DnsResourceRecord",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`",
          "type": "string",
          "readOnly": true
        },
        "data": {
          "readOnly": true,
          "description": "Output only. Data of the DNS Resource Record.",
          "type": "string"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Type of the DNS Resource Record. Currently always set to \"CNAME\"."
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    }
  },
  "version_module": true,
  "basePath": "",
  "description": "",
  "id": "certificatemanager:v1",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "id": "certificatemanager.projects.locations.get"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1/projects/{projectsId}/locations",
              "path": "v1/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "id": "certificatemanager.projects.locations.list",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ]
            }
          },
          "resources": {
            "certificateMaps": {
              "methods": {
                "delete": {
                  "description": "Deletes a single CertificateMap. A Certificate Map can't be deleted if it contains Certificate Map Entries. Remove all the entries from the map before calling this method.",
                  "id": "certificatemanager.projects.locations.certificateMaps.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "description": "Required. A name of the certificate map to delete. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single CertificateMap.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "description": "Required. A name of the certificate map to describe. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "CertificateMap"
                  },
                  "id": "certificatemanager.projects.locations.certificateMaps.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "path": "v1/{+name}"
                },
                "list": {
                  "response": {
                    "$ref": "ListCertificateMapsResponse"
                  },
                  "path": "v1/{+parent}/certificateMaps",
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists CertificateMaps in a given project and location.",
                  "id": "certificatemanager.projects.locations.certificateMaps.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The project and location from which the certificate maps should be listed, specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter expression to restrict the Certificates Maps returned.",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListCertificateMapsResponse`. Indicates that this is a continuation of a prior `ListCertificateMaps` call, and that the system should return the next page of data."
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "A list of Certificate Map field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\"."
                    },
                    "pageSize": {
                      "description": "Maximum number of certificate maps to return per call.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    }
                  }
                },
                "create": {
                  "id": "certificatemanager.projects.locations.certificateMaps.create",
                  "path": "v1/{+parent}/certificateMaps",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "description": "Creates a new CertificateMap in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource of the certificate map. Must be in the format `projects/*/locations/*`."
                    },
                    "certificateMapId": {
                      "type": "string",
                      "description": "Required. A user-provided name of the certificate map.",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.certificateMaps.patch",
                  "description": "Updates a CertificateMap.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask."
                    }
                  },
                  "httpMethod": "PATCH"
                }
              },
              "resources": {
                "certificateMapEntries": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                          "description": "Required. The project, location and certificate map from which the certificate map entries should be listed, specified in the format `projects/*/locations/*/certificateMaps/*`.",
                          "required": true,
                          "location": "path"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Maximum number of certificate map entries to return. The service may return fewer than this value. If unspecified, at most 50 certificate map entries will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The value returned by the last `ListCertificateMapEntriesResponse`. Indicates that this is a continuation of a prior `ListCertificateMapEntries` call, and that the system should return the next page of data."
                        },
                        "filter": {
                          "type": "string",
                          "description": "Filter expression to restrict the returned Certificate Map Entries.",
                          "location": "query"
                        },
                        "orderBy": {
                          "location": "query",
                          "description": "A list of Certificate Map Entry field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/certificateMapEntries",
                      "description": "Lists CertificateMapEntries in a given project and location.",
                      "response": {
                        "$ref": "ListCertificateMapEntriesResponse"
                      }
                    },
                    "delete": {
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}",
                      "description": "Deletes a single CertificateMapEntry.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "type": "string",
                          "description": "Required. A name of the certificate map entry to delete. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}"
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates a CertificateMapEntry.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "CertificateMapEntry"
                      },
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}"
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "request": {
                        "$ref": "CertificateMapEntry"
                      },
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create",
                      "description": "Creates a new CertificateMapEntry in a given project and location.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "certificateMapEntryId": {
                          "type": "string",
                          "description": "Required. A user-provided name of the certificate map entry.",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                          "description": "Required. The parent resource of the certificate map entry. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v1/{+parent}/certificateMapEntries"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "httpMethod": "GET",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "description": "Required. A name of the certificate map entry to describe. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "CertificateMapEntry"
                      },
                      "description": "Gets details of a single CertificateMapEntry.",
                      "path": "v1/{+name}"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "certificatemanager.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource to be deleted.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.operations.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}/operations",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "certificatemanager.projects.locations.operations.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  }
                },
                "cancel": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "id": "certificatemanager.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1/{+name}:cancel"
                }
              }
            },
            "dnsAuthorizations": {
              "methods": {
                "list": {
                  "path": "v1/{+parent}/dnsAuthorizations",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "description": "Lists DnsAuthorizations in a given project and location.",
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.list",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListDnsAuthorizationsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "Maximum number of dns authorizations to return per call.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The project and location from which the dns authorizations should be listed, specified in the format `projects/*/locations/*`.",
                      "location": "path"
                    },
                    "orderBy": {
                      "description": "A list of Dns Authorization field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListDnsAuthorizationsResponse`. Indicates that this is a continuation of a prior `ListDnsAuthorizations` call, and that the system should return the next page of data."
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter expression to restrict the Dns Authorizations returned."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent resource of the dns authorization. Must be in the format `projects/*/locations/*`.",
                      "location": "path"
                    },
                    "dnsAuthorizationId": {
                      "type": "string",
                      "description": "Required. A user-provided name of the dns authorization.",
                      "location": "query"
                    }
                  },
                  "request": {
                    "$ref": "DnsAuthorization"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new DnsAuthorization in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/dnsAuthorizations",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.create"
                },
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "DnsAuthorization"
                  },
                  "description": "Updates a DnsAuthorization.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}"
                },
                "get": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "DnsAuthorization"
                  },
                  "httpMethod": "GET",
                  "description": "Gets details of a single DnsAuthorization.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. A name of the dns authorization to describe. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the dns authorization to delete. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a single DnsAuthorization."
                }
              }
            },
            "certificates": {
              "methods": {
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates",
                  "description": "Lists Certificates in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/certificates",
                  "id": "certificatemanager.projects.locations.certificates.list",
                  "response": {
                    "$ref": "ListCertificatesResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "orderBy": {
                      "description": "A list of Certificate field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter expression to restrict the Certificates returned."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of certificates to return per call.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The value returned by the last `ListCertificatesResponse`. Indicates that this is a continuation of a prior `ListCertificates` call, and that the system should return the next page of data.",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. A name of the certificate to delete. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "description": "Deletes a single Certificate.",
                  "id": "certificatemanager.projects.locations.certificates.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. A name of the certificate to describe. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets details of a single Certificate.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Certificate"
                  },
                  "id": "certificatemanager.projects.locations.certificates.get"
                },
                "create": {
                  "parameters": {
                    "certificateId": {
                      "type": "string",
                      "description": "Required. A user-provided name of the certificate.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent resource of the certificate. Must be in the format `projects/*/locations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Creates a new Certificate in a given project and location.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/certificates",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "Certificate"
                  },
                  "id": "certificatemanager.projects.locations.certificates.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates"
                },
                "patch": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "description": "Updates a Certificate.",
                  "id": "certificatemanager.projects.locations.certificates.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "Certificate"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "name": "certificatemanager",
  "rootUrl": "https://certificatemanager.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "canonicalName": "Certificate Manager",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://certificatemanager.mtls.googleapis.com/",
  "kind": "discovery#restDescription",
  "title": "Certificate Manager API",
  "protocol": "rest",
  "batchPath": "batch",
  "baseUrl": "https://certificatemanager.googleapis.com/",
  "version": "v1",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "ownerName": "Google",
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    }
  },
  "revision": "20220914",
  "documentationLink": "https://cloud.google.com/certificate-manager"
}

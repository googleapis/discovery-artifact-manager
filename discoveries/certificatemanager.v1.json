{
  "rootUrl": "https://certificatemanager.googleapis.com/",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/certificate-manager",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "trustConfigs": {
              "methods": {
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trustConfigs/{trustConfigsId}",
                  "path": "v1/{+name}",
                  "id": "certificatemanager.projects.locations.trustConfigs.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single TrustConfig.",
                  "response": {
                    "$ref": "TrustConfig"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the TrustConfig to describe. Must be in the format `projects/*/locations/*/trustConfigs/*`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/trustConfigs/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "create": {
                  "id": "certificatemanager.projects.locations.trustConfigs.create",
                  "httpMethod": "POST",
                  "parameters": {
                    "trustConfigId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. A user-provided name of the TrustConfig. Must match the regexp `[a-z0-9-]{1,63}`."
                    },
                    "parent": {
                      "description": "Required. The parent resource of the TrustConfig. Must be in the format `projects/*/locations/*`.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new TrustConfig in a given project and location.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trustConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/trustConfigs",
                  "request": {
                    "$ref": "TrustConfig"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "TrustConfig"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "description": "Updates a TrustConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.trustConfigs.patch",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trustConfigs/{trustConfigsId}",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/trustConfigs/[^/]+$",
                      "type": "string",
                      "description": "A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.",
                      "location": "path",
                      "required": true
                    },
                    "updateMask": {
                      "location": "query",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "format": "google-fieldmask",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trustConfigs/{trustConfigsId}",
                  "parameters": {
                    "etag": {
                      "location": "query",
                      "description": "The current etag of the TrustConfig. If an etag is provided and does not match the current etag of the resource, deletion will be blocked and an ABORTED error will be returned.",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "description": "Required. A name of the TrustConfig to delete. Must be in the format `projects/*/locations/*/trustConfigs/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/trustConfigs/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a single TrustConfig.",
                  "path": "v1/{+name}",
                  "id": "certificatemanager.projects.locations.trustConfigs.delete",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE"
                },
                "list": {
                  "description": "Lists TrustConfigs in a given project and location.",
                  "response": {
                    "$ref": "ListTrustConfigsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/trustConfigs",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/trustConfigs",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "description": "Maximum number of TrustConfigs to return per call.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The project and location from which the TrustConfigs should be listed, specified in the format `projects/*/locations/*`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The value returned by the last `ListTrustConfigsResponse`. Indicates that this is a continuation of a prior `ListTrustConfigs` call, and that the system should return the next page of data.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter expression to restrict the TrustConfigs returned.",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "A list of TrustConfig field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "certificatemanager.projects.locations.trustConfigs.list"
                }
              }
            },
            "certificateMaps": {
              "methods": {
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "location": "path",
                      "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.certificateMaps.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "description": "Updates a CertificateMap.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}"
                },
                "get": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "description": "Required. A name of the certificate map to describe. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "CertificateMap"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single CertificateMap.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.certificateMaps.get",
                  "httpMethod": "GET"
                },
                "create": {
                  "request": {
                    "$ref": "CertificateMap"
                  },
                  "description": "Creates a new CertificateMap in a given project and location.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource of the certificate map. Must be in the format `projects/*/locations/*`."
                    },
                    "certificateMapId": {
                      "location": "query",
                      "description": "Required. A user-provided name of the certificate map.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "certificatemanager.projects.locations.certificateMaps.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/certificateMaps",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps"
                },
                "list": {
                  "id": "certificatemanager.projects.locations.certificateMaps.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "Maximum number of certificate maps to return per call.",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListCertificateMapsResponse`. Indicates that this is a continuation of a prior `ListCertificateMaps` call, and that the system should return the next page of data.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "A list of Certificate Map field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Filter expression to restrict the Certificates Maps returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The project and location from which the certificate maps should be listed, specified in the format `projects/*/locations/*`.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "ListCertificateMapsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps",
                  "description": "Lists CertificateMaps in a given project and location.",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/certificateMaps"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}",
                  "id": "certificatemanager.projects.locations.certificateMaps.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. A name of the certificate map to delete. Must be in the format `projects/*/locations/*/certificateMaps/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Deletes a single CertificateMap. A Certificate Map can't be deleted if it contains Certificate Map Entries. Remove all the entries from the map before calling this method.",
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "certificateMapEntries": {
                  "methods": {
                    "delete": {
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}",
                      "description": "Deletes a single CertificateMapEntry.",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. A name of the certificate map entry to delete. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`."
                        }
                      }
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$"
                        },
                        "updateMask": {
                          "type": "string",
                          "location": "query",
                          "format": "google-fieldmask",
                          "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "httpMethod": "PATCH",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.patch",
                      "description": "Updates a CertificateMapEntry.",
                      "request": {
                        "$ref": "CertificateMapEntry"
                      },
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "get": {
                      "description": "Gets details of a single CertificateMapEntry.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. A name of the certificate map entry to describe. Must be in the format `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+/certificateMapEntries/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "CertificateMapEntry"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries/{certificateMapEntriesId}",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.get",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.create",
                      "parameters": {
                        "certificateMapEntryId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. A user-provided name of the certificate map entry."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The parent resource of the certificate map entry. Must be in the format `projects/*/locations/*/certificateMaps/*`."
                        }
                      },
                      "path": "v1/{+parent}/certificateMapEntries",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates a new CertificateMapEntry in a given project and location.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "CertificateMapEntry"
                      },
                      "response": {
                        "$ref": "Operation"
                      }
                    },
                    "list": {
                      "path": "v1/{+parent}/certificateMapEntries",
                      "response": {
                        "$ref": "ListCertificateMapEntriesResponse"
                      },
                      "httpMethod": "GET",
                      "id": "certificatemanager.projects.locations.certificateMaps.certificateMapEntries.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateMaps/{certificateMapsId}/certificateMapEntries",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists CertificateMapEntries in a given project and location.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filter expression to restrict the returned Certificate Map Entries."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The value returned by the last `ListCertificateMapEntriesResponse`. Indicates that this is a continuation of a prior `ListCertificateMapEntries` call, and that the system should return the next page of data."
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Maximum number of certificate map entries to return. The service may return fewer than this value. If unspecified, at most 50 certificate map entries will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "location": "query",
                          "type": "integer"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateMaps/[^/]+$",
                          "description": "Required. The project, location and certificate map from which the certificate map entries should be listed, specified in the format `projects/*/locations/*/certificateMaps/*`."
                        },
                        "orderBy": {
                          "description": "A list of Certificate Map Entry field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "dnsAuthorizations": {
              "methods": {
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "description": "Creates a new DnsAuthorization in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/dnsAuthorizations",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "dnsAuthorizationId": {
                      "type": "string",
                      "description": "Required. A user-provided name of the dns authorization.",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent resource of the dns authorization. Must be in the format `projects/*/locations/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "DnsAuthorization"
                  },
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.create"
                },
                "patch": {
                  "request": {
                    "$ref": "DnsAuthorization"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "path": "v1/{+name}",
                  "description": "Updates a DnsAuthorization.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "description": "Gets details of a single DnsAuthorization.",
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. A name of the dns authorization to describe. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "response": {
                    "$ref": "DnsAuthorization"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}"
                },
                "delete": {
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations/{dnsAuthorizationsId}",
                  "description": "Deletes a single DnsAuthorization.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. A name of the dns authorization to delete. Must be in the format `projects/*/locations/*/dnsAuthorizations/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/dnsAuthorizations/[^/]+$"
                    }
                  },
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/dnsAuthorizations",
                  "id": "certificatemanager.projects.locations.dnsAuthorizations.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/dnsAuthorizations",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "The value returned by the last `ListDnsAuthorizationsResponse`. Indicates that this is a continuation of a prior `ListDnsAuthorizations` call, and that the system should return the next page of data.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The project and location from which the dns authorizations should be listed, specified in the format `projects/*/locations/*`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum number of dns authorizations to return per call.",
                      "type": "integer"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "A list of Dns Authorization field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\"."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Filter expression to restrict the Dns Authorizations returned.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListDnsAuthorizationsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists DnsAuthorizations in a given project and location."
                }
              }
            },
            "certificateIssuanceConfigs": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs",
                  "response": {
                    "$ref": "ListCertificateIssuanceConfigsResponse"
                  },
                  "httpMethod": "GET",
                  "description": "Lists CertificateIssuanceConfigs in a given project and location.",
                  "path": "v1/{+parent}/certificateIssuanceConfigs",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "Maximum number of certificate configs to return per call.",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The value returned by the last `ListCertificateIssuanceConfigsResponse`. Indicates that this is a continuation of a prior `ListCertificateIssuanceConfigs` call, and that the system should return the next page of data."
                    },
                    "orderBy": {
                      "description": "A list of Certificate Config field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter expression to restrict the Certificates Configs returned."
                    }
                  }
                },
                "delete": {
                  "description": "Deletes a single CertificateIssuanceConfig.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
                      "description": "Required. A name of the certificate issuance config to delete. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}",
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.delete",
                  "path": "v1/{+name}"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/certificateIssuanceConfigs",
                  "description": "Creates a new CertificateIssuanceConfig in a given project and location.",
                  "request": {
                    "$ref": "CertificateIssuanceConfig"
                  },
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "certificateIssuanceConfigId": {
                      "type": "string",
                      "description": "Required. A user-provided name of the certificate config.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The parent resource of the certificate issuance config. Must be in the format `projects/*/locations/*`.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "get": {
                  "description": "Gets details of a single CertificateIssuanceConfig.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateIssuanceConfigs/[^/]+$",
                      "required": true,
                      "description": "Required. A name of the certificate issuance config to describe. Must be in the format `projects/*/locations/*/certificateIssuanceConfigs/*`."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificateIssuanceConfigs/{certificateIssuanceConfigsId}",
                  "httpMethod": "GET",
                  "id": "certificatemanager.projects.locations.certificateIssuanceConfigs.get",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "CertificateIssuanceConfig"
                  }
                }
              }
            },
            "certificates": {
              "methods": {
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. A name of the certificate to delete. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "location": "path"
                    }
                  },
                  "description": "Deletes a single Certificate.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.certificates.delete",
                  "httpMethod": "DELETE"
                },
                "list": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/certificates",
                  "response": {
                    "$ref": "ListCertificatesResponse"
                  },
                  "id": "certificatemanager.projects.locations.certificates.list",
                  "description": "Lists Certificates in a given project and location.",
                  "parameters": {
                    "orderBy": {
                      "description": "A list of Certificate field names used to specify the order of the returned results. The default sorting order is ascending. To specify descending order for a field, add a suffix \" desc\".",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum number of certificates to return per call.",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "Filter expression to restrict the Certificates returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The value returned by the last `ListCertificatesResponse`. Indicates that this is a continuation of a prior `ListCertificates` call, and that the system should return the next page of data.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The project and location from which the certificate should be listed, specified in the format `projects/*/locations/*`.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates",
                  "description": "Creates a new Certificate in a given project and location.",
                  "parameters": {
                    "certificateId": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. A user-provided name of the certificate."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource of the certificate. Must be in the format `projects/*/locations/*`.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Certificate"
                  },
                  "id": "certificatemanager.projects.locations.certificates.create",
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/certificates",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Certificate"
                  },
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "description": "Updates a Certificate.",
                  "id": "certificatemanager.projects.locations.certificates.patch",
                  "path": "v1/{+name}"
                },
                "get": {
                  "id": "certificatemanager.projects.locations.certificates.get",
                  "response": {
                    "$ref": "Certificate"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/certificates/{certificatesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. A name of the certificate to describe. Must be in the format `projects/*/locations/*/certificates/*`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificates/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Gets details of a single Certificate."
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "certificatemanager.projects.locations.operations.delete"
                },
                "get": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "certificatemanager.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "cancel": {
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "certificatemanager.projects.locations.operations.cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:cancel",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation's parent resource."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    }
                  },
                  "id": "certificatemanager.projects.locations.operations.list",
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v1/{+name}/locations",
              "flatPath": "v1/projects/{projectsId}/locations",
              "id": "certificatemanager.projects.locations.list",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Location"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "certificatemanager.projects.locations.get"
            }
          }
        }
      }
    }
  },
  "servicePath": "",
  "name": "certificatemanager",
  "batchPath": "batch",
  "canonicalName": "Certificate Manager",
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "description": "",
  "protocol": "rest",
  "revision": "20230906",
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "TrustConfig": {
      "type": "object",
      "id": "TrustConfig",
      "description": "Defines a trust config.",
      "properties": {
        "trustStores": {
          "items": {
            "$ref": "TrustStore"
          },
          "description": "Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.",
          "type": "array"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Set of labels associated with a TrustConfig."
        },
        "etag": {
          "type": "string",
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The creation timestamp of a TrustConfig.",
          "format": "google-datetime",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a TrustConfig."
        },
        "name": {
          "description": "A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The last update timestamp of a TrustConfig."
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation"
    },
    "GclbTarget": {
      "id": "GclbTarget",
      "description": "Describes a Target Proxy that uses this Certificate Map.",
      "type": "object",
      "properties": {
        "targetHttpsProxy": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`."
        },
        "ipConfigs": {
          "readOnly": true,
          "description": "Output only. IP configurations for this Target Proxy where the Certificate Map is serving.",
          "items": {
            "$ref": "IpConfig"
          },
          "type": "array"
        },
        "targetSslProxy": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`."
        }
      }
    },
    "CertificateMap": {
      "id": "CertificateMap",
      "properties": {
        "createTime": {
          "readOnly": true,
          "description": "Output only. The creation timestamp of a Certificate Map.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "Set of labels associated with a Certificate Map.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The update timestamp of a Certificate Map.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate map."
        },
        "gclbTargets": {
          "readOnly": true,
          "items": {
            "$ref": "GclbTarget"
          },
          "type": "array",
          "description": "Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule."
        }
      },
      "description": "Defines a collection of certificate configurations.",
      "type": "object"
    },
    "ListLocationsResponse": {
      "type": "object",
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "CertificateAuthorityConfig": {
      "description": "The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc.",
      "id": "CertificateAuthorityConfig",
      "type": "object",
      "properties": {
        "certificateAuthorityServiceConfig": {
          "$ref": "CertificateAuthorityServiceConfig",
          "description": "Defines a CertificateAuthorityServiceConfig."
        }
      }
    },
    "TrustStore": {
      "type": "object",
      "id": "TrustStore",
      "properties": {
        "trustAnchors": {
          "type": "array",
          "items": {
            "$ref": "TrustAnchor"
          },
          "description": "List of Trust Anchors to be used while performing validation against a given TrustStore."
        },
        "intermediateCas": {
          "items": {
            "$ref": "IntermediateCA"
          },
          "type": "array",
          "description": "Set of intermediate CA certificates used for the path building phase of chain validation. The field is currently not supported if TrustConfig is used for the workload certificate feature."
        }
      },
      "description": "Defines a trust store."
    },
    "CertificateAuthorityServiceConfig": {
      "description": "Contains information required to contact CA service.",
      "type": "object",
      "id": "CertificateAuthorityServiceConfig",
      "properties": {
        "caPool": {
          "description": "Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form \"projects/{project}/locations/{location}/caPools/{ca_pool}\".",
          "type": "string"
        }
      }
    },
    "ManagedCertificate": {
      "id": "ManagedCertificate",
      "type": "object",
      "properties": {
        "domains": {
          "items": {
            "type": "string"
          },
          "description": "Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.",
          "type": "array"
        },
        "authorizationAttemptInfo": {
          "readOnly": true,
          "description": "Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.",
          "items": {
            "$ref": "AuthorizationAttemptInfo"
          },
          "type": "array"
        },
        "provisioningIssue": {
          "readOnly": true,
          "$ref": "ProvisioningIssue",
          "description": "Output only. Information about issues with provisioning a Managed Certificate."
        },
        "dnsAuthorizations": {
          "items": {
            "type": "string"
          },
          "description": "Immutable. Authorizations that will be used for performing domain authorization.",
          "type": "array"
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "FAILED",
            "ACTIVE"
          ],
          "description": "Output only. State of the managed certificate resource.",
          "enumDescriptions": [
            "State is unspecified.",
            "Certificate Manager attempts to provision or renew the certificate. If the process takes longer than expected, consult the `provisioning_issue` field.",
            "Multiple certificate provisioning attempts failed and Certificate Manager gave up. To try again, delete and create a new managed Certificate resource. For details see the `provisioning_issue` field.",
            "The certificate management is working, and a certificate has been provisioned."
          ]
        },
        "issuanceConfig": {
          "type": "string",
          "description": "Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa."
        }
      },
      "description": "Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so."
    },
    "DnsAuthorization": {
      "description": "A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.",
      "id": "DnsAuthorization",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Set of labels associated with a DnsAuthorization."
        },
        "createTime": {
          "description": "Output only. The creation timestamp of a DnsAuthorization.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The last update timestamp of a DnsAuthorization."
        },
        "description": {
          "description": "One or more paragraphs of text description of a DnsAuthorization.",
          "type": "string"
        },
        "domain": {
          "type": "string",
          "description": "Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`."
        },
        "dnsResourceRecord": {
          "description": "Output only. DNS Resource Record that needs to be added to DNS configuration.",
          "$ref": "DnsResourceRecord",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "CertificateIssuanceConfig": {
      "type": "object",
      "properties": {
        "certificateAuthorityConfig": {
          "description": "Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.",
          "$ref": "CertificateAuthorityConfig"
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a CertificateIssuanceConfig."
        },
        "name": {
          "type": "string",
          "description": "A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`."
        },
        "rotationWindowPercentage": {
          "type": "integer",
          "description": "Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.",
          "format": "int32"
        },
        "keyAlgorithm": {
          "enum": [
            "KEY_ALGORITHM_UNSPECIFIED",
            "RSA_2048",
            "ECDSA_P256"
          ],
          "type": "string",
          "description": "Required. The key algorithm to use when generating the private key.",
          "enumDescriptions": [
            "Unspecified key algorithm.",
            "Specifies RSA with a 2048-bit modulus.",
            "Specifies ECDSA with curve P256."
          ]
        },
        "labels": {
          "description": "Set of labels associated with a CertificateIssuanceConfig.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "lifetime": {
          "format": "google-duration",
          "description": "Required. Workload certificate lifetime requested.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation timestamp of a CertificateIssuanceConfig.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The last update timestamp of a CertificateIssuanceConfig.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "CertificateIssuanceConfig specifies how to issue and manage a certificate.",
      "id": "CertificateIssuanceConfig"
    },
    "ListDnsAuthorizationsResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dnsAuthorizations": {
          "type": "array",
          "items": {
            "$ref": "DnsAuthorization"
          },
          "description": "A list of dns authorizations for the parent resource."
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      },
      "id": "ListDnsAuthorizationsResponse",
      "type": "object",
      "description": "Response for the `ListDnsAuthorizations` method."
    },
    "Status": {
      "type": "object",
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "IpConfig": {
      "type": "object",
      "id": "IpConfig",
      "properties": {
        "ports": {
          "description": "Output only. Ports.",
          "type": "array",
          "readOnly": true,
          "items": {
            "format": "uint32",
            "type": "integer"
          }
        },
        "ipAddress": {
          "type": "string",
          "description": "Output only. An external IP address.",
          "readOnly": true
        }
      },
      "description": "Defines IP configuration where this Certificate Map is serving."
    },
    "ListTrustConfigsResponse": {
      "id": "ListTrustConfigsResponse",
      "type": "object",
      "description": "Response for the `ListTrustConfigs` method.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        },
        "trustConfigs": {
          "description": "A list of TrustConfigs for the parent resource.",
          "type": "array",
          "items": {
            "$ref": "TrustConfig"
          }
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      }
    },
    "Certificate": {
      "id": "Certificate",
      "description": "Defines TLS certificate.",
      "type": "object",
      "properties": {
        "name": {
          "description": "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
          "type": "string"
        },
        "sanDnsnames": {
          "description": "Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "managed": {
          "description": "If set, contains configuration and state of a managed certificate.",
          "$ref": "ManagedCertificate"
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate."
        },
        "pemCertificate": {
          "description": "Output only. The PEM-encoded certificate chain.",
          "readOnly": true,
          "type": "string"
        },
        "selfManaged": {
          "description": "If set, defines data of a self-managed certificate.",
          "$ref": "SelfManagedCertificate"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The last update timestamp of a Certificate.",
          "format": "google-datetime",
          "readOnly": true
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The expiry timestamp of a Certificate."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The creation timestamp of a Certificate.",
          "readOnly": true
        },
        "labels": {
          "description": "Set of labels associated with a Certificate.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "scope": {
          "description": "Immutable. The scope of the certificate.",
          "type": "string",
          "enumDescriptions": [
            "Certificates with default scope are served from core Google data centers. If unsure, choose this option.",
            "Certificates with scope EDGE_CACHE are special-purposed certificates, served from Edge Points of Presence. See https://cloud.google.com/vpc/docs/edge-locations.",
            "Certificates with ALL_REGIONS scope are served from all Google Cloud regions. See https://cloud.google.com/compute/docs/regions-zones."
          ],
          "enum": [
            "DEFAULT",
            "EDGE_CACHE",
            "ALL_REGIONS"
          ]
        }
      }
    },
    "OperationMetadata": {
      "type": "object",
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation. Output only.",
      "properties": {
        "requestedCancellation": {
          "description": "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean"
        },
        "target": {
          "type": "string",
          "description": "Server-defined resource path for the target of the operation."
        },
        "statusMessage": {
          "description": "Human-readable status of the operation, if any.",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version used to start the operation.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the operation finished running."
        },
        "verb": {
          "description": "Name of the verb executed by the operation.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "The time the operation was created.",
          "format": "google-datetime"
        }
      }
    },
    "ListCertificateMapEntriesResponse": {
      "description": "Response for the `ListCertificateMapEntries` method.",
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "certificateMapEntries": {
          "description": "A list of certificate map entries for the parent resource.",
          "type": "array",
          "items": {
            "$ref": "CertificateMapEntry"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      },
      "id": "ListCertificateMapEntriesResponse"
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest",
      "type": "object"
    },
    "ListCertificateMapsResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "certificateMaps": {
          "items": {
            "$ref": "CertificateMap"
          },
          "type": "array",
          "description": "A list of certificate maps for the parent resource."
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      },
      "description": "Response for the `ListCertificateMaps` method.",
      "id": "ListCertificateMapsResponse"
    },
    "ListCertificatesResponse": {
      "id": "ListCertificatesResponse",
      "type": "object",
      "description": "Response for the `ListCertificates` method.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        },
        "certificates": {
          "type": "array",
          "description": "A list of certificates for the parent resource.",
          "items": {
            "$ref": "Certificate"
          }
        }
      }
    },
    "IntermediateCA": {
      "id": "IntermediateCA",
      "description": "Defines an intermediate CA.",
      "properties": {
        "pemCertificate": {
          "type": "string",
          "description": "PEM intermediate certificate used for building up paths for validation. Each certificate provided in PEM format may occupy up to 5kB."
        }
      },
      "type": "object"
    },
    "ListCertificateIssuanceConfigsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "certificateIssuanceConfigs": {
          "items": {
            "$ref": "CertificateIssuanceConfig"
          },
          "description": "A list of certificate configs for the parent resource.",
          "type": "array"
        }
      },
      "id": "ListCertificateIssuanceConfigsResponse",
      "description": "Response for the `ListCertificateIssuanceConfigs` method.",
      "type": "object"
    },
    "ProvisioningIssue": {
      "properties": {
        "reason": {
          "description": "Output only. Reason for provisioning failures.",
          "enumDescriptions": [
            "Reason is unspecified.",
            "Certificate provisioning failed due to an issue with one or more of the domains on the certificate. For details of which domains failed, consult the `authorization_attempt_info` field.",
            "Exceeded Certificate Authority quotas or internal rate limits of the system. Provisioning may take longer to complete."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "REASON_UNSPECIFIED",
            "AUTHORIZATION_ISSUE",
            "RATE_LIMITED"
          ]
        },
        "details": {
          "readOnly": true,
          "description": "Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProvisioningIssue",
      "description": "Information about issues with provisioning a Managed Certificate."
    },
    "AuthorizationAttemptInfo": {
      "id": "AuthorizationAttemptInfo",
      "type": "object",
      "description": "State of the latest attempt to authorize a domain for certificate issuance.",
      "properties": {
        "failureReason": {
          "description": "Output only. Reason for failure of the authorization attempt for the domain.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "FailureReason is unspecified.",
            "There was a problem with the user's DNS or load balancer configuration for this domain.",
            "Certificate issuance forbidden by an explicit CAA record for the domain or a failure to check CAA records for the domain.",
            "Reached a CA or internal rate-limit for the domain, e.g. for certificates per top-level private domain."
          ],
          "enum": [
            "FAILURE_REASON_UNSPECIFIED",
            "CONFIG",
            "CAA",
            "RATE_LIMITED"
          ]
        },
        "details": {
          "description": "Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.",
          "readOnly": true,
          "type": "string"
        },
        "domain": {
          "type": "string",
          "description": "Domain name of the authorization attempt."
        },
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "AUTHORIZING",
            "AUTHORIZED",
            "FAILED"
          ],
          "enumDescriptions": [
            "State is unspecified.",
            "Certificate provisioning for this domain is under way. Google Cloud will attempt to authorize the domain.",
            "A managed certificate can be provisioned, no issues for this domain.",
            "Attempt to authorize the domain failed. This prevents the Managed Certificate from being issued. See `failure_reason` and `details` fields for more information."
          ],
          "description": "Output only. State of the domain for managed certificate issuance.",
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "description": "A resource that represents a Google Cloud location.",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}"
        }
      },
      "id": "Location"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "id": "ListOperationsResponse",
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "SelfManagedCertificate": {
      "properties": {
        "pemCertificate": {
          "description": "Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any.",
          "type": "string"
        },
        "pemPrivateKey": {
          "type": "string",
          "description": "Input only. The PEM-encoded private key of the leaf certificate."
        }
      },
      "id": "SelfManagedCertificate",
      "type": "object",
      "description": "Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility."
    },
    "DnsResourceRecord": {
      "description": "The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.",
      "id": "DnsResourceRecord",
      "properties": {
        "data": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Data of the DNS Resource Record."
        },
        "name": {
          "description": "Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Output only. Type of the DNS Resource Record. Currently always set to \"CNAME\".",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrustAnchor": {
      "id": "TrustAnchor",
      "properties": {
        "pemCertificate": {
          "description": "PEM root certificate of the PKI used for validation. Each certificate provided in PEM format may occupy up to 5kB.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Defines a trust anchor."
    },
    "CertificateMapEntry": {
      "description": "Defines a certificate map entry.",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Set of labels associated with a Certificate Map Entry.",
          "type": "object"
        },
        "certificates": {
          "description": "A set of Certificates defines for the given `hostname`. There can be defined up to four certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "One or more paragraphs of text description of a certificate map entry."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The status is undefined.",
            "The configuration is serving.",
            "Update is in progress. Some frontends may serve this configuration."
          ],
          "readOnly": true,
          "enum": [
            "SERVING_STATE_UNSPECIFIED",
            "ACTIVE",
            "PENDING"
          ],
          "description": "Output only. A serving state of this Certificate Map Entry."
        },
        "createTime": {
          "description": "Output only. The creation timestamp of a Certificate Map Entry.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "matcher": {
          "enumDescriptions": [
            "A matcher has't been recognized.",
            "A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map."
          ],
          "enum": [
            "MATCHER_UNSPECIFIED",
            "PRIMARY"
          ],
          "description": "A predefined matcher for particular cases, other than SNI selection.",
          "type": "string"
        },
        "name": {
          "description": "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
          "type": "string"
        },
        "hostname": {
          "type": "string",
          "description": "A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The update timestamp of a Certificate Map Entry.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CertificateMapEntry"
    }
  },
  "ownerName": "Google",
  "title": "Certificate Manager API",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "basePath": "",
  "id": "certificatemanager:v1",
  "mtlsRootUrl": "https://certificatemanager.mtls.googleapis.com/",
  "version": "v1",
  "baseUrl": "https://certificatemanager.googleapis.com/",
  "discoveryVersion": "v1"
}

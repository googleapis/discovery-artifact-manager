{
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "workstationClusters": {
              "resources": {
                "workstationConfigs": {
                  "methods": {
                    "listUsable": {
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.listUsable",
                      "response": {
                        "$ref": "ListUsableWorkstationConfigsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. Parent resource name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                          "required": true,
                          "location": "path"
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "Maximum number of items to return.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "next_page_token value returned from a previous List request, if any.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs:listUsable",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta/{+parent}/workstationConfigs:listUsable",
                      "description": "Returns all workstation configurations in the specified cluster on which the caller has the \"workstations.workstation.create\" permission.",
                      "httpMethod": "GET"
                    },
                    "get": {
                      "response": {
                        "$ref": "WorkstationConfig"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the requested resource.",
                          "type": "string"
                        }
                      },
                      "description": "Returns the requested workstation configuration.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.get",
                      "path": "v1beta/{+name}",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}"
                    },
                    "getIamPolicy": {
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta/{+resource}:getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:getIamPolicy",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "resource": {
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.getIamPolicy"
                    },
                    "delete": {
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}",
                      "description": "Deletes the specified workstation configuration.",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.delete",
                      "path": "v1beta/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the workstation configuration to delete.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "location": "path"
                        },
                        "force": {
                          "description": "If set, any workstations in the workstation configuration are also deleted. Otherwise, the request works only if the workstation configuration has no workstations.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "validateOnly": {
                          "location": "query",
                          "description": "If set, validate the request and preview the review, but do not actually apply it.",
                          "type": "boolean"
                        },
                        "etag": {
                          "location": "query",
                          "description": "If set, the request is rejected if the latest version of the workstation configuration on the server does not have this ETag.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "httpMethod": "POST",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.testIamPermissions",
                      "path": "v1beta/{+resource}:testIamPermissions"
                    },
                    "patch": {
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}",
                      "path": "v1beta/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.patch",
                      "description": "Updates an existing workstation configuration.",
                      "parameters": {
                        "validateOnly": {
                          "description": "If set, validate the request and preview the review, but do not actually apply it.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "updateMask": {
                          "description": "Required. Mask specifying which fields in the workstation configuration should be updated.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "allowMissing": {
                          "location": "query",
                          "description": "If set and the workstation configuration is not found, a new workstation configuration will be created. In this situation, update_mask is ignored.",
                          "type": "boolean"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "required": true,
                          "description": "Full name of this resource.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "WorkstationConfig"
                      },
                      "httpMethod": "PATCH"
                    },
                    "setIamPolicy": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "POST",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.setIamPolicy",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "path": "v1beta/{+resource}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      }
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Creates a new workstation configuration.",
                      "httpMethod": "POST",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs",
                      "path": "v1beta/{+parent}/workstationConfigs",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "WorkstationConfig"
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.create",
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "description": "If set, validate the request and preview the review, but do not actually apply it.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. Parent resource name.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$"
                        },
                        "workstationConfigId": {
                          "description": "Required. ID to use for the workstation configuration.",
                          "location": "query",
                          "type": "string"
                        }
                      }
                    },
                    "list": {
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "next_page_token value returned from a previous List request, if any.",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Maximum number of items to return.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                          "type": "string",
                          "description": "Required. Parent resource name.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.list",
                      "response": {
                        "$ref": "ListWorkstationConfigsResponse"
                      },
                      "description": "Returns all workstation configurations in the specified cluster.",
                      "httpMethod": "GET",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1beta/{+parent}/workstationConfigs",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  },
                  "resources": {
                    "workstations": {
                      "methods": {
                        "generateAccessToken": {
                          "httpMethod": "POST",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:generateAccessToken",
                          "parameters": {
                            "workstation": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "location": "path",
                              "description": "Required. Name of the workstation for which the access token should be generated."
                            }
                          },
                          "path": "v1beta/{+workstation}:generateAccessToken",
                          "description": "Returns a short-lived credential that can be used to send authenticated and authorized traffic to a workstation.",
                          "request": {
                            "$ref": "GenerateAccessTokenRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "workstation"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.generateAccessToken",
                          "response": {
                            "$ref": "GenerateAccessTokenResponse"
                          }
                        },
                        "listUsable": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v1beta/{+parent}/workstations:listUsable",
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "format": "int32",
                              "description": "Maximum number of items to return."
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "next_page_token value returned from a previous List request, if any."
                            },
                            "parent": {
                              "required": true,
                              "type": "string",
                              "description": "Required. Parent resource name.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$"
                            }
                          },
                          "response": {
                            "$ref": "ListUsableWorkstationsResponse"
                          },
                          "httpMethod": "GET",
                          "description": "Returns all workstations using the specified workstation configuration on which the caller has the \"workstations.workstations.use\" permission.",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.listUsable",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations:listUsable"
                        },
                        "testIamPermissions": {
                          "parameters": {
                            "resource": {
                              "required": true,
                              "type": "string",
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$"
                            }
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.testIamPermissions",
                          "path": "v1beta/{+resource}:testIamPermissions",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:testIamPermissions",
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "httpMethod": "POST",
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                        },
                        "patch": {
                          "response": {
                            "$ref": "Operation"
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.patch",
                          "path": "v1beta/{+name}",
                          "parameters": {
                            "allowMissing": {
                              "location": "query",
                              "type": "boolean",
                              "description": "If set and the workstation configuration is not found, a new workstation configuration is created. In this situation, update_mask is ignored."
                            },
                            "validateOnly": {
                              "type": "boolean",
                              "location": "query",
                              "description": "If set, validate the request and preview the review, but do not actually apply it."
                            },
                            "name": {
                              "required": true,
                              "description": "Full name of this resource.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "location": "path",
                              "type": "string"
                            },
                            "updateMask": {
                              "location": "query",
                              "description": "Required. Mask specifying which fields in the workstation configuration should be updated.",
                              "format": "google-fieldmask",
                              "type": "string"
                            }
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "Workstation"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "PATCH",
                          "description": "Updates an existing workstation."
                        },
                        "create": {
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta/{+parent}/workstations",
                          "description": "Creates a new workstation.",
                          "request": {
                            "$ref": "Workstation"
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameters": {
                            "validateOnly": {
                              "description": "If set, validate the request and preview the review, but do not actually apply it.",
                              "location": "query",
                              "type": "boolean"
                            },
                            "workstationId": {
                              "location": "query",
                              "description": "Required. ID to use for the workstation.",
                              "type": "string"
                            },
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "Required. Parent resource name.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.create"
                        },
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "response": {
                            "$ref": "Workstation"
                          },
                          "description": "Returns the requested workstation.",
                          "path": "v1beta/{+name}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "type": "string",
                              "description": "Required. Name of the requested resource."
                            }
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "GET"
                        },
                        "stop": {
                          "response": {
                            "$ref": "Operation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "StopWorkstationRequest"
                          },
                          "parameters": {
                            "name": {
                              "type": "string",
                              "description": "Required. Name of the workstation to stop.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true
                            }
                          },
                          "path": "v1beta/{+name}:stop",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.stop",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:stop",
                          "description": "Stops running a workstation, reducing costs.",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST"
                        },
                        "start": {
                          "request": {
                            "$ref": "StartWorkstationRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "description": "Starts running a workstation so that users can connect to it.",
                          "parameterOrder": [
                            "name"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:start",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.start",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "description": "Required. Name of the workstation to start.",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "path": "v1beta/{+name}:start",
                          "httpMethod": "POST"
                        },
                        "getIamPolicy": {
                          "httpMethod": "GET",
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "format": "int32",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "location": "query",
                              "type": "integer"
                            },
                            "resource": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "path": "v1beta/{+resource}:getIamPolicy",
                          "response": {
                            "$ref": "Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "resource"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.getIamPolicy"
                        },
                        "delete": {
                          "parameters": {
                            "etag": {
                              "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag.",
                              "type": "string",
                              "location": "query"
                            },
                            "validateOnly": {
                              "type": "boolean",
                              "description": "If set, validate the request and preview the review, but do not actually apply it.",
                              "location": "query"
                            },
                            "name": {
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "description": "Required. Name of the workstation to delete."
                            }
                          },
                          "httpMethod": "DELETE",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.delete",
                          "description": "Deletes the specified workstation.",
                          "path": "v1beta/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "list": {
                          "response": {
                            "$ref": "ListWorkstationsResponse"
                          },
                          "httpMethod": "GET",
                          "description": "Returns all Workstations using the specified workstation configuration.",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations",
                          "path": "v1beta/{+parent}/workstations",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Required. Parent resource name."
                            },
                            "pageToken": {
                              "description": "next_page_token value returned from a previous List request, if any.",
                              "location": "query",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "Maximum number of items to return.",
                              "type": "integer",
                              "format": "int32",
                              "location": "query"
                            }
                          }
                        },
                        "setIamPolicy": {
                          "response": {
                            "$ref": "Policy"
                          },
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "resource"
                          ],
                          "path": "v1beta/{+resource}:setIamPolicy",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:setIamPolicy",
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "parameters": {
                            "resource": {
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.setIamPolicy",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. Parent resource name.",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Maximum number of items to return.",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    }
                  },
                  "path": "v1beta/{+parent}/workstationClusters",
                  "description": "Returns all workstation clusters in the specified location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "workstations.projects.locations.workstationClusters.list",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters",
                  "response": {
                    "$ref": "ListWorkstationClustersResponse"
                  }
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta/{+name}",
                  "id": "workstations.projects.locations.workstationClusters.patch",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "description": "Updates an existing workstation cluster.",
                  "request": {
                    "$ref": "WorkstationCluster"
                  },
                  "httpMethod": "PATCH",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Mask that specifies which fields in the workstation cluster should be updated.",
                      "location": "query"
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set, and the workstation cluster is not found, a new workstation cluster will be created. In this situation, update_mask is ignored."
                    },
                    "name": {
                      "description": "Full name of this resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set, validate the request and preview the review, but do not actually apply it."
                    }
                  }
                },
                "create": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set, validate the request and preview the review, but do not actually apply it."
                    },
                    "workstationClusterId": {
                      "description": "Required. ID to use for the workstation cluster.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent resource name.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "WorkstationCluster"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new workstation cluster.",
                  "id": "workstations.projects.locations.workstationClusters.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+parent}/workstationClusters"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                      "description": "Required. Name of the requested resource.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "WorkstationCluster"
                  },
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns the requested workstation cluster.",
                  "id": "workstations.projects.locations.workstationClusters.get"
                },
                "delete": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "description": "Deletes the specified workstation cluster.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "etag": {
                      "location": "query",
                      "description": "If set, the request will be rejected if the latest version of the workstation cluster on the server does not have this ETag.",
                      "type": "string"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set, validate the request and preview the review, but do not apply it."
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                      "description": "Required. Name of the workstation cluster to delete.",
                      "type": "string",
                      "location": "path"
                    },
                    "force": {
                      "description": "If set, any workstation configurations and workstations in the workstation cluster are also deleted. Otherwise, the request only works if the workstation cluster has no configurations or workstations.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "id": "workstations.projects.locations.workstationClusters.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta/{+name}",
                  "httpMethod": "DELETE"
                }
              }
            },
            "operations": {
              "methods": {
                "delete": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "id": "workstations.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "id": "workstations.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    }
                  },
                  "path": "v1beta/{+name}/operations",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "id": "workstations.projects.locations.operations.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1beta/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "cancel": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "workstations.projects.locations.operations.cancel",
                  "path": "v1beta/{+name}:cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "discoveryVersion": "v1",
  "name": "workstations",
  "mtlsRootUrl": "https://workstations.mtls.googleapis.com/",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version": "v1beta",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/workstations",
  "description": "Allows administrators to create managed developer environments in the cloud. ",
  "id": "workstations:v1beta",
  "schemas": {
    "Container": {
      "id": "Container",
      "properties": {
        "args": {
          "description": "Arguments passed to the entrypoint.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "workingDir": {
          "type": "string",
          "description": "If set, overrides the default DIR specified by the image."
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If set, overrides the default ENTRYPOINT specified by the image."
        },
        "image": {
          "type": "string",
          "description": "A Docker container image that defines a custom environment. Cloud Workstations provides a number of [preconfigured images](https://cloud.google.com/workstations/docs/preconfigured-base-images), but you can create your own [custom container images](https://cloud.google.com/workstations/docs/custom-container-images). If using a private image, the `host.gceInstance.serviceAccount` field must be specified in the workstation configuration and must have permission to pull the specified image. Otherwise, the image must be publicly accessible.s"
        },
        "env": {
          "type": "object",
          "description": "Environment variables passed to the container's entrypoint.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "runAsUser": {
          "format": "int32",
          "description": "If set, overrides the USER specified in the image with the given uid.",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A Docker container."
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "GceInstance": {
      "type": "object",
      "description": "A runtime using a Compute Engine instance.",
      "properties": {
        "shieldedInstanceConfig": {
          "$ref": "GceShieldedInstanceConfig",
          "description": "A set of Compute Engine Shielded instance options."
        },
        "pooledInstances": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Number of instances currently available in the pool for faster workstation startup."
        },
        "confidentialInstanceConfig": {
          "$ref": "GceConfidentialInstanceConfig",
          "description": "A set of Compute Engine Confidential VM instance options."
        },
        "serviceAccount": {
          "type": "string",
          "description": "The email address of the service account for Cloud Workstations VMs created with this configuration. When specified, be sure that the service account has `logginglogEntries.create` permission on the project so it can write logs out to Cloud Logging. If using a custom container image, the service account must have permissions to pull the specified image. If you as the administrator want to be able to `ssh` into the underlying VM, you need to set this value to a service account for which you have the `iam.serviceAccounts.actAs` permission. Conversely, if you don't want anyone to be able to `ssh` into the underlying VM, use a service account where no one has that permission. If not set, VMs run with a service account provided by the Cloud Workstations service, and the image must be publicly accessible."
        },
        "accelerators": {
          "items": {
            "$ref": "Accelerator"
          },
          "type": "array",
          "description": "A list of the type and count of accelerator cards attached to the instance."
        },
        "disablePublicIpAddresses": {
          "description": "When set to true, disables public IP addresses for VMs. If you disable public IP addresses, you must set up Private Google Access or Cloud NAT on your network. If you use Private Google Access and you use `private.googleapis.com` or `restricted.googleapis.com` for Container Registry and Artifact Registry, make sure that you set up DNS records for domains `*.gcr.io` and `*.pkg.dev`. Defaults to false (VMs have public IP addresses).",
          "type": "boolean"
        },
        "bootDiskSizeGb": {
          "type": "integer",
          "description": "The size of the boot disk for the VM in gigabytes (GB). The minimum boot disk size is `30` GB. Defaults to `50` GB.",
          "format": "int32"
        },
        "poolSize": {
          "type": "integer",
          "description": "The number of VMs that the system should keep idle so that new workstations can be started quickly for new users. Defaults to `0` in the API.",
          "format": "int32"
        },
        "machineType": {
          "description": "The type of machine to use for VM instances—for example, `e2-standard-4`. For more information about machine types that Cloud Workstations supports, see the list of [available machine types](https://cloud.google.com/workstations/docs/available-machine-types).",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Network tags to add to the Compute Engine machines backing the workstations. This option applies [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs created with this configuration. These network tags enable the creation of [firewall rules](https://cloud.google.com/workstations/docs/configure-firewall-rules)."
        }
      },
      "id": "GceInstance"
    },
    "ListWorkstationConfigsResponse": {
      "description": "Response message for ListWorkstationConfigs.",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources.",
          "type": "array"
        },
        "workstationConfigs": {
          "description": "The requested configs.",
          "type": "array",
          "items": {
            "$ref": "WorkstationConfig"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "id": "ListWorkstationConfigsResponse"
    },
    "Binding": {
      "id": "Binding",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        }
      },
      "type": "object",
      "description": "Associates `members`, or principals, with a `role`."
    },
    "WorkstationConfig": {
      "id": "WorkstationConfig",
      "description": "A set of configuration options that describe how a workstation runs. Workstation configurations are intended to be shared across multiple workstations.",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time when this resource was created."
        },
        "runningTimeout": {
          "format": "google-duration",
          "type": "string",
          "description": "Number of seconds that a workstation can run until it is automatically shut down. We recommend that workstations be shut down daily to reduce costs and so that security updates can be applied upon restart. The `idleTimeout` and `runningTimeout` parameters are independent of each other. Note that the `runningTimeout` parameter shuts down VMs after the specified time, regardless of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example, `54000s` (15 hours). Defaults to `43200s` (12 hours). A value of `0` indicates that workstations using this configuration should never time out. If `encryption_key` is set, it must be greater than `0` and less than `86400s` (24 hours). Warning: A value of `0s` indicates that Cloud Workstations VMs created with this configuration have no maximum running time. This is strongly discouraged because you incur costs and will not pick up security updates."
        },
        "uid": {
          "description": "Output only. A system-assigned unique identifier for this resource.",
          "readOnly": true,
          "type": "string"
        },
        "encryptionKey": {
          "$ref": "CustomerEncryptionKey",
          "description": "Immutable. Encrypts resources of this workstation configuration using a customer-managed encryption key (CMEK). If specified, the boot disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata. If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk might be lost. If the encryption key is revoked, the workstation session automatically stops within 7 hours. Immutable after the workstation configuration is created."
        },
        "degraded": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field."
        },
        "reconciling": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Time when this resource was most recently updated.",
          "type": "string",
          "readOnly": true
        },
        "deleteTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time when this resource was soft-deleted.",
          "type": "string"
        },
        "container": {
          "description": "Container that runs upon startup for each workstation using this workstation configuration.",
          "$ref": "Container"
        },
        "conditions": {
          "readOnly": true,
          "items": {
            "$ref": "Status"
          },
          "description": "Output only. Status conditions describing the current resource state.",
          "type": "array"
        },
        "host": {
          "$ref": "Host",
          "description": "Runtime host for the workstation."
        },
        "displayName": {
          "description": "Human-readable name for this resource.",
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "description": "Client-specified annotations.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAuditAgent": {
          "type": "boolean",
          "description": "Whether to enable Linux `auditd` logging on the workstation. When enabled, a service account must also be specified that has `logging.buckets.write` permission on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging)."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources."
        },
        "readinessChecks": {
          "description": "Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes.",
          "type": "array",
          "items": {
            "$ref": "ReadinessCheck"
          }
        },
        "idleTimeout": {
          "description": "Number of seconds to wait before automatically stopping a workstation after it last received user traffic. A value of `0s` indicates that Cloud Workstations VMs created with this configuration should never time out due to idleness. Provide [duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example, `7200s` (2 hours). The default is `1200s` (20 minutes).",
          "type": "string",
          "format": "google-duration"
        },
        "etag": {
          "description": "Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Full name of this resource."
        },
        "persistentDirectories": {
          "items": {
            "$ref": "PersistentDirectory"
          },
          "type": "array",
          "description": "Directories to persist across workstation sessions."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "AuditLogConfig": {
      "properties": {
        "logType": {
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig"
    },
    "GceShieldedInstanceConfig": {
      "description": "A set of Compute Engine Shielded instance options.",
      "type": "object",
      "properties": {
        "enableVtpm": {
          "description": "Whether the instance has the vTPM enabled.",
          "type": "boolean"
        },
        "enableSecureBoot": {
          "description": "Whether the instance has Secure Boot enabled.",
          "type": "boolean"
        },
        "enableIntegrityMonitoring": {
          "description": "Whether the instance has integrity monitoring enabled.",
          "type": "boolean"
        }
      },
      "id": "GceShieldedInstanceConfig"
    },
    "ListWorkstationsResponse": {
      "properties": {
        "workstations": {
          "items": {
            "$ref": "Workstation"
          },
          "type": "array",
          "description": "The requested workstations."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources."
        }
      },
      "id": "ListWorkstationsResponse",
      "description": "Response message for ListWorkstations.",
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "properties": {
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Human-readable status of the operation, if any."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time that the operation finished running."
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. Time that the operation was created.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation.",
          "type": "boolean"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Metadata for long-running operations."
    },
    "GceRegionalPersistentDisk": {
      "properties": {
        "sourceSnapshot": {
          "description": "Name of the snapshot to use as the source for the disk. If set, size_gb and fs_type must be empty.",
          "type": "string"
        },
        "reclaimPolicy": {
          "type": "string",
          "enum": [
            "RECLAIM_POLICY_UNSPECIFIED",
            "DELETE",
            "RETAIN"
          ],
          "description": "Whether the persistent disk should be deleted when the workstation is deleted. Valid values are `DELETE` and `RETAIN`. Defaults to `DELETE`.",
          "enumDescriptions": [
            "Do not use.",
            "Delete the persistent disk when deleting the workstation.",
            "Keep the persistent disk when deleting the workstation. An administrator must manually delete the disk."
          ]
        },
        "sizeGb": {
          "description": "The GB capacity of a persistent home directory for each workstation created with this configuration. Must be empty if `source_snapshot` is set. Valid values are `10`, `50`, `100`, `200`, `500`, or `1000`. Defaults to `200`. If less than `200` GB, the `diskType` must be `pd-balanced` or `pd-ssd`.",
          "format": "int32",
          "type": "integer"
        },
        "fsType": {
          "type": "string",
          "description": "Type of file system that the disk should be formatted with. The workstation image must support this file system type. Must be empty if source_snapshot is set. Defaults to `ext4`."
        },
        "diskType": {
          "type": "string",
          "description": "The [type of the persistent disk](https://cloud.google.com/compute/docs/disks#disk-types) for the home directory. Defaults to `pd-standard`."
        }
      },
      "type": "object",
      "id": "GceRegionalPersistentDisk",
      "description": "A PersistentDirectory backed by a Compute Engine regional persistent disk. The `persistentDirectories[]` field is repeated, but it may contain only one entry. It creates a [persistent disk](https://cloud.google.com/compute/docs/disks/persistent-disks) that mounts to the workstation VM at `/home` when the session starts and detaches when the session ends. If this field is empty, workstations created with this configuration do not have a persistent home directory."
    },
    "Expr": {
      "type": "object",
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "Host": {
      "description": "Runtime host for a workstation.",
      "id": "Host",
      "type": "object",
      "properties": {
        "gceInstance": {
          "description": "Specifies a Compute Engine instance as the host.",
          "$ref": "GceInstance"
        }
      }
    },
    "GenerateAccessTokenResponse": {
      "type": "object",
      "id": "GenerateAccessTokenResponse",
      "properties": {
        "expireTime": {
          "format": "google-datetime",
          "description": "Time at which the generated token will expire.",
          "type": "string"
        },
        "accessToken": {
          "description": "The generated bearer access token. To use this token, include it in an Authorization header of an HTTP request sent to the associated workstation's hostname—for example, `Authorization: Bearer `.",
          "type": "string"
        }
      },
      "description": "Response message for GenerateAccessToken."
    },
    "ListWorkstationClustersResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "workstationClusters": {
          "description": "The requested workstation clusters.",
          "type": "array",
          "items": {
            "$ref": "WorkstationCluster"
          }
        },
        "unreachable": {
          "type": "array",
          "description": "Unreachable resources.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Response message for ListWorkstationClusters.",
      "id": "ListWorkstationClustersResponse",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      }
    },
    "Policy": {
      "properties": {
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array"
        },
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy"
    },
    "Status": {
      "id": "Status",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "ListUsableWorkstationConfigsResponse": {
      "description": "Response message for ListUsableWorkstationConfigs.",
      "type": "object",
      "properties": {
        "workstationConfigs": {
          "description": "The requested configs.",
          "type": "array",
          "items": {
            "$ref": "WorkstationConfig"
          }
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "ListUsableWorkstationConfigsResponse"
    },
    "ReadinessCheck": {
      "description": "A readiness check to be performed on a workstation.",
      "id": "ReadinessCheck",
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "description": "Port to which the request should be sent.",
          "type": "integer"
        },
        "path": {
          "type": "string",
          "description": "Path to which the request should be sent."
        }
      }
    },
    "WorkstationCluster": {
      "type": "object",
      "id": "WorkstationCluster",
      "properties": {
        "deleteTime": {
          "type": "string",
          "description": "Output only. Time when this resource was soft-deleted.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "degraded": {
          "description": "Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.",
          "readOnly": true,
          "type": "boolean"
        },
        "etag": {
          "type": "string",
          "description": "Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding."
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Client-specified annotations.",
          "type": "object"
        },
        "name": {
          "description": "Full name of this resource.",
          "type": "string"
        },
        "reconciling": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state."
        },
        "controlPlaneIp": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The private IP address of the control plane for this cluster. Workstation VMs need access to this IP address to work with the service, so make sure that your firewall rules allow egress from the workstation VMs to this address."
        },
        "uid": {
          "type": "string",
          "description": "Output only. A system-assigned unique identifier for this resource.",
          "readOnly": true
        },
        "conditions": {
          "description": "Output only. Status conditions describing the current resource state.",
          "items": {
            "$ref": "Status"
          },
          "type": "array",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for this resource."
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this resource was most recently updated."
        },
        "network": {
          "description": "Immutable. Name of the Compute Engine network in which instances associated with this cluster will be created.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subnetwork": {
          "description": "Immutable. Name of the Compute Engine subnetwork in which instances associated with this cluster will be created. Must be part of the subnetwork specified for this cluster.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Time when this resource was created.",
          "type": "string",
          "readOnly": true
        },
        "privateClusterConfig": {
          "description": "Configuration for private cluster.",
          "$ref": "PrivateClusterConfig"
        }
      },
      "description": "A grouping of workstation configurations and the associated workstations in that region."
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      }
    },
    "Accelerator": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer",
          "description": "Number of accelerator cards exposed to the instance."
        },
        "type": {
          "type": "string",
          "description": "Type of accelerator resource to attach to the instance, for example, \"nvidia-tesla-p100\"."
        }
      },
      "type": "object",
      "description": "An accelerator card attached to the instance.",
      "id": "Accelerator"
    },
    "ListUsableWorkstationsResponse": {
      "properties": {
        "unreachable": {
          "description": "Unreachable resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "workstations": {
          "items": {
            "$ref": "Workstation"
          },
          "description": "The requested workstations.",
          "type": "array"
        }
      },
      "description": "Response message for ListUsableWorkstations.",
      "type": "object",
      "id": "ListUsableWorkstationsResponse"
    },
    "GceConfidentialInstanceConfig": {
      "properties": {
        "enableConfidentialCompute": {
          "description": "Whether the instance has confidential compute enabled.",
          "type": "boolean"
        }
      },
      "description": "A set of Compute Engine Confidential VM instance options.",
      "id": "GceConfidentialInstanceConfig",
      "type": "object"
    },
    "PrivateClusterConfig": {
      "description": "Configuration options for private clusters.",
      "type": "object",
      "properties": {
        "clusterHostname": {
          "type": "string",
          "description": "Output only. Hostname for the workstation cluster. This field will be populated only when private endpoint is enabled. To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.",
          "readOnly": true
        },
        "allowedProjects": {
          "type": "array",
          "description": "Additional projects that are allowed to attach to the workstation cluster's service attachment. By default, the workstation cluster's project and the VPC host project (if different) are allowed.",
          "items": {
            "type": "string"
          }
        },
        "serviceAttachmentUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Service attachment URI for the workstation cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the cluster, configure access to the managed service using [Private Service Connect](https://cloud.google.com/vpc/docs/configure-private-service-connect-services)."
        },
        "enablePrivateEndpoint": {
          "description": "Immutable. Whether Workstations endpoint is private.",
          "type": "boolean"
        }
      },
      "id": "PrivateClusterConfig"
    },
    "GenerateAccessTokenRequest": {
      "description": "Request message for GenerateAccessToken.",
      "id": "GenerateAccessTokenRequest",
      "properties": {
        "expireTime": {
          "format": "google-datetime",
          "description": "Desired expiration time of the access token. This value must be at most 24 hours in the future. If a value is not specified, the token's expiration time will be set to a default value of 1 hour in the future.",
          "type": "string"
        },
        "ttl": {
          "description": "Desired lifetime duration of the access token. This value must be at most 24 hours. If a value is not specified, the token's lifetime will be set to a default value of 1 hour.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "type": "object"
    },
    "StartWorkstationRequest": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag."
        },
        "validateOnly": {
          "type": "boolean",
          "description": "If set, validate the request and preview the review, but do not actually apply it."
        }
      },
      "id": "StartWorkstationRequest",
      "description": "Request message for StartWorkstation.",
      "type": "object"
    },
    "PersistentDirectory": {
      "description": "A directory to persist across workstation sessions.",
      "properties": {
        "gcePd": {
          "description": "A PersistentDirectory backed by a Compute Engine persistent disk.",
          "$ref": "GceRegionalPersistentDisk"
        },
        "mountPath": {
          "type": "string",
          "description": "Location of this directory in the running workstation."
        }
      },
      "type": "object",
      "id": "PersistentDirectory"
    },
    "CustomerEncryptionKey": {
      "properties": {
        "kmsKey": {
          "type": "string",
          "description": "Immutable. The name of the Google Cloud KMS encryption key. For example, `projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME`. The key must be in the same region as the workstation configuration."
        },
        "kmsKeyServiceAccount": {
          "description": "Immutable. The service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).",
          "type": "string"
        }
      },
      "id": "CustomerEncryptionKey",
      "type": "object",
      "description": "A customer-managed encryption key (CMEK) for the Compute Engine resources of the associated workstation configuration. Specify the name of your Cloud KMS encryption key and the default service account. We recommend that you use a separate service account and follow [Cloud KMS best practices](https://cloud.google.com/kms/docs/separation-of-duties)."
    },
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations."
    },
    "AuditConfig": {
      "type": "object",
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging."
    },
    "Workstation": {
      "id": "Workstation",
      "description": "A single instance of a developer workstation with its own persistent storage.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Full name of this resource."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.",
          "type": "object"
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when this resource was most recently updated.",
          "type": "string"
        },
        "deleteTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this resource was soft-deleted.",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Current state of the workstation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "STATE_STARTING",
            "STATE_RUNNING",
            "STATE_STOPPING",
            "STATE_STOPPED"
          ],
          "enumDescriptions": [
            "Do not use.",
            "The workstation is not yet ready to accept requests from users but will be soon.",
            "The workstation is ready to accept requests from users.",
            "The workstation is being stopped.",
            "The workstation is stopped and will not be able to receive requests until it is started."
          ]
        },
        "host": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with the destination port in the format `{port}-{host}`."
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables passed to the workstation container's entrypoint.",
          "type": "object"
        },
        "reconciling": {
          "type": "boolean",
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for this resource."
        },
        "uid": {
          "type": "string",
          "description": "Output only. A system-assigned unique identifier for this resource.",
          "readOnly": true
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Time when this resource was created.",
          "readOnly": true,
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "description": "Client-specified annotations.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding."
        }
      },
      "type": "object"
    },
    "StopWorkstationRequest": {
      "id": "StopWorkstationRequest",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "If set, validate the request and preview the review, but do not actually apply it."
        },
        "etag": {
          "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag.",
          "type": "string"
        }
      },
      "description": "Request message for StopWorkstation.",
      "type": "object"
    }
  },
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "default": "json"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    }
  },
  "title": "Cloud Workstations API",
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://workstations.googleapis.com/",
  "canonicalName": "Cloud Workstations",
  "revision": "20230531",
  "ownerName": "Google",
  "basePath": "",
  "protocol": "rest",
  "rootUrl": "https://workstations.googleapis.com/",
  "batchPath": "batch"
}

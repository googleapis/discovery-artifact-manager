{
  "baseUrl": "https://workstations.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "version_module": true,
  "canonicalName": "Cloud Workstations",
  "mtlsRootUrl": "https://workstations.mtls.googleapis.com/",
  "servicePath": "",
  "schemas": {
    "GenerateAccessTokenResponse": {
      "description": "Response message for GenerateAccessToken.",
      "id": "GenerateAccessTokenResponse",
      "properties": {
        "expireTime": {
          "description": "Time at which the generated token will expire.",
          "format": "google-datetime",
          "type": "string"
        },
        "accessToken": {
          "type": "string",
          "description": "The generated bearer access token. To use this token, include it in an Authorization header of an HTTP request sent to the associated workstation's hostnameâ€”for example, `Authorization: Bearer `."
        }
      },
      "type": "object"
    },
    "GceInstance": {
      "description": "A runtime using a Compute Engine instance.",
      "type": "object",
      "properties": {
        "accelerators": {
          "type": "array",
          "description": "A list of the type and count of accelerator cards attached to the instance.",
          "items": {
            "$ref": "Accelerator"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Network tags to add to the Compute Engine machines backing the Workstations."
        },
        "disablePublicIpAddresses": {
          "type": "boolean",
          "description": "Whether instances have no public IP address."
        },
        "poolSize": {
          "format": "int32",
          "description": "Number of instances to pool for faster workstation startup.",
          "type": "integer"
        },
        "shieldedInstanceConfig": {
          "$ref": "GceShieldedInstanceConfig",
          "description": "A set of Compute Engine Shielded instance options."
        },
        "machineType": {
          "description": "The name of a Compute Engine machine type.",
          "type": "string"
        },
        "serviceAccount": {
          "description": "Email address of the service account used on VM instances used to support this configuration. If not set, VMs run with a Google-managed service account. This service account must have permission to pull the specified container image; otherwise, the image must be publicly accessible.",
          "type": "string"
        },
        "bootDiskSizeGb": {
          "format": "int32",
          "description": "Size of the boot disk in GB. Defaults to 50.",
          "type": "integer"
        },
        "pooledInstances": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "Output only. Number of instances currently available in the pool for faster workstation startup."
        },
        "confidentialInstanceConfig": {
          "$ref": "GceConfidentialInstanceConfig",
          "description": "A set of Compute Engine Confidential VM instance options."
        }
      },
      "id": "GceInstance"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "ListWorkstationConfigsResponse": {
      "description": "Response message for ListWorkstationConfigs.",
      "properties": {
        "workstationConfigs": {
          "type": "array",
          "items": {
            "$ref": "WorkstationConfig"
          },
          "description": "The requested configs."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "ListWorkstationConfigsResponse",
      "type": "object"
    },
    "ListUsableWorkstationConfigsResponse": {
      "properties": {
        "workstationConfigs": {
          "items": {
            "$ref": "WorkstationConfig"
          },
          "type": "array",
          "description": "The requested configs."
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "description": "Response message for ListUsableWorkstationConfigs.",
      "id": "ListUsableWorkstationConfigsResponse"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "properties": {
        "createTime": {
          "description": "Output only. Time that the operation was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "target": {
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "type": "string"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. Time that the operation finished running."
        },
        "requestedCancellation": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation.",
          "readOnly": true
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Metadata for long-running operations."
    },
    "AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string",
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      },
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig"
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      },
      "id": "TestIamPermissionsResponse"
    },
    "Policy": {
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        },
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy."
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy"
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "Workstation": {
      "description": "A single instance of a developer workstation with its own persistent storage.",
      "properties": {
        "etag": {
          "description": "Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A system-assigned unique identified for this resource."
        },
        "name": {
          "description": "Full name of this resource.",
          "type": "string"
        },
        "host": {
          "description": "Output only. Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with the destination port in the format `{port}-{host}`.",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Human-readable name for this resource.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this resource was most recently updated."
        },
        "env": {
          "type": "object",
          "description": "Environment variables passed to the workstation container's entrypoint.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reconciling": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state."
        },
        "deleteTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when this resource was soft-deleted."
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "STATE_STARTING",
            "STATE_RUNNING",
            "STATE_STOPPING",
            "STATE_STOPPED"
          ],
          "description": "Output only. Current state of the workstation.",
          "readOnly": true,
          "enumDescriptions": [
            "Do not use.",
            "The workstation is not yet ready to accept requests from users but will be soon.",
            "The workstation is ready to accept requests from users.",
            "The workstation is being stopped.",
            "The workstation is stopped and will not be able to receive requests until it is started."
          ]
        },
        "annotations": {
          "type": "object",
          "description": "Client-specified annotations.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this resource was created.",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "Workstation"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        }
      }
    },
    "StopWorkstationRequest": {
      "description": "Request message for StopWorkstation.",
      "id": "StopWorkstationRequest",
      "properties": {
        "etag": {
          "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag.",
          "type": "string"
        },
        "validateOnly": {
          "type": "boolean",
          "description": "If set, validate the request and preview the review, but do not actually apply it."
        }
      },
      "type": "object"
    },
    "GceRegionalPersistentDisk": {
      "properties": {
        "reclaimPolicy": {
          "description": "What should happen to the disk after the workstation is deleted. Defaults to DELETE.",
          "enumDescriptions": [
            "Do not use.",
            "The persistent disk will be deleted with the workstation.",
            "The persistent disk will be remain after the workstation is deleted, and the administrator must manually delete the disk."
          ],
          "enum": [
            "RECLAIM_POLICY_UNSPECIFIED",
            "DELETE",
            "RETAIN"
          ],
          "type": "string"
        },
        "diskType": {
          "type": "string",
          "description": "Type of the disk to use. Defaults to pd-standard."
        },
        "sourceSnapshot": {
          "description": "Name of the snapshot to use as the source for the disk. If set, size_gb and fs_type must be empty.",
          "type": "string"
        },
        "fsType": {
          "description": "Type of file system that the disk should be formatted with. The workstation image must support this file system type. Must be empty if source_snapshot is set. Defaults to ext4.",
          "type": "string"
        },
        "sizeGb": {
          "format": "int32",
          "description": "Size of the disk in GB. Must be empty if source_snapshot is set. Defaults to 200.",
          "type": "integer"
        }
      },
      "id": "GceRegionalPersistentDisk",
      "description": "A PersistentDirectory backed by a Compute Engine regional persistent disk.",
      "type": "object"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "GoogleProtobufEmpty"
    },
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding."
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "id": "Binding",
      "type": "object"
    },
    "StartWorkstationRequest": {
      "properties": {
        "etag": {
          "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag.",
          "type": "string"
        },
        "validateOnly": {
          "type": "boolean",
          "description": "If set, validate the request and preview the review, but do not actually apply it."
        }
      },
      "description": "Request message for StartWorkstation.",
      "id": "StartWorkstationRequest",
      "type": "object"
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      }
    },
    "ReadinessCheck": {
      "type": "object",
      "description": "A readiness check to be performed on a workstation.",
      "properties": {
        "port": {
          "description": "Port to which the request should be sent.",
          "format": "int32",
          "type": "integer"
        },
        "path": {
          "type": "string",
          "description": "Path to which the request should be sent."
        }
      },
      "id": "ReadinessCheck"
    },
    "ListWorkstationClustersResponse": {
      "type": "object",
      "description": "Response message for ListWorkstationClusters.",
      "id": "ListWorkstationClustersResponse",
      "properties": {
        "workstationClusters": {
          "items": {
            "$ref": "WorkstationCluster"
          },
          "type": "array",
          "description": "The requested workstation clusters."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Unreachable resources."
        }
      }
    },
    "WorkstationCluster": {
      "id": "WorkstationCluster",
      "description": "A grouping of workstation configurations and the associated workstations in that region.",
      "properties": {
        "createTime": {
          "description": "Output only. Time when this resource was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Client-specified annotations.",
          "type": "object"
        },
        "uid": {
          "description": "Output only. A system-assigned unique identified for this resource.",
          "type": "string",
          "readOnly": true
        },
        "controlPlaneIp": {
          "description": "Output only. The private IP address of the control plane for this cluster. Workstation VMs need access to this IP address to work with the service, so make sure that your firewall rules allow egress from the workstation VMs to this address.",
          "readOnly": true,
          "type": "string"
        },
        "etag": {
          "description": "Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "privateClusterConfig": {
          "$ref": "PrivateClusterConfig",
          "description": "Configuration for private cluster."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when this resource was most recently updated."
        },
        "network": {
          "description": "Immutable. Name of the Compute Engine network in which instances associated with this cluster will be created.",
          "type": "string"
        },
        "subnetwork": {
          "description": "Immutable. Name of the Compute Engine subnetwork in which instances associated with this cluster will be created. Must be part of the subnetwork specified for this cluster.",
          "type": "string"
        },
        "deleteTime": {
          "description": "Output only. Time when this resource was soft-deleted.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for this resource."
        },
        "degraded": {
          "description": "Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.",
          "type": "boolean",
          "readOnly": true
        },
        "conditions": {
          "description": "Output only. Status conditions describing the current resource state.",
          "items": {
            "$ref": "Status"
          },
          "readOnly": true,
          "type": "array"
        },
        "reconciling": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources."
        },
        "name": {
          "description": "Full name of this resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateClusterConfig": {
      "id": "PrivateClusterConfig",
      "properties": {
        "enablePrivateEndpoint": {
          "description": "Immutable. Whether Workstations endpoint is private.",
          "type": "boolean"
        },
        "clusterHostname": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Hostname for the workstation cluster. This field will be populated only when private endpoint is enabled. To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment."
        },
        "allowedProjects": {
          "type": "array",
          "description": "Additional projects that are allowed to attach to the workstation cluster's service attachment. By default, the workstation cluster's project and the VPC host project (if different) are allowed.",
          "items": {
            "type": "string"
          }
        },
        "serviceAttachmentUri": {
          "description": "Output only. Service attachment URI for the workstation cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the cluster, configure access to the managed service using [Private Service Connect](https://cloud.google.com/vpc/docs/configure-private-service-connect-services).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "Configuration options for private clusters."
    },
    "Container": {
      "description": "A Docker container.",
      "properties": {
        "command": {
          "description": "If set, overrides the default ENTRYPOINT specified by the image.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image": {
          "type": "string",
          "description": "Docker image defining the container. This image must be accessible by the service account specified in the workstation configuration."
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Environment variables passed to the container's entrypoint."
        },
        "args": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Arguments passed to the entrypoint."
        },
        "runAsUser": {
          "format": "int32",
          "type": "integer",
          "description": "If set, overrides the USER specified in the image with the given uid."
        },
        "workingDir": {
          "type": "string",
          "description": "If set, overrides the default DIR specified by the image."
        }
      },
      "id": "Container",
      "type": "object"
    },
    "CustomerEncryptionKey": {
      "properties": {
        "kmsKey": {
          "description": "Immutable. The name of the Google Cloud KMS encryption key. For example, `projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME`.",
          "type": "string"
        },
        "kmsKeyServiceAccount": {
          "description": "Immutable. The service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A customer-managed encryption key for the Compute Engine resources of this workstation configuration.",
      "id": "CustomerEncryptionKey"
    },
    "CancelOperationRequest": {
      "properties": {},
      "type": "object",
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation."
    },
    "GenerateAccessTokenRequest": {
      "description": "Request message for GenerateAccessToken.",
      "type": "object",
      "properties": {
        "expireTime": {
          "description": "Desired expiration time of the access token. This value must be at most 24 hours in the future. If a value is not specified, the token's expiration time will be set to a default value of 1 hour in the future.",
          "format": "google-datetime",
          "type": "string"
        },
        "ttl": {
          "format": "google-duration",
          "description": "Desired lifetime duration of the access token. This value must be at most 24 hours. If a value is not specified, the token's lifetime will be set to a default value of 1 hour.",
          "type": "string"
        }
      },
      "id": "GenerateAccessTokenRequest"
    },
    "Status": {
      "type": "object",
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "Accelerator": {
      "id": "Accelerator",
      "properties": {
        "count": {
          "description": "Number of accelerator cards exposed to the instance.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string",
          "description": "Type of accelerator resource to attach to the instance, for example, \"nvidia-tesla-p100\"."
        }
      },
      "type": "object",
      "description": "An accelerator card attached to the instance."
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "id": "AuditConfig"
    },
    "PersistentDirectory": {
      "type": "object",
      "id": "PersistentDirectory",
      "description": "A directory to persist across workstation sessions.",
      "properties": {
        "gcePd": {
          "$ref": "GceRegionalPersistentDisk",
          "description": "A PersistentDirectory backed by a Compute Engine persistent disk."
        },
        "mountPath": {
          "description": "Location of this directory in the running workstation.",
          "type": "string"
        }
      }
    },
    "WorkstationConfig": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Human-readable name for this resource."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this resource was created.",
          "readOnly": true
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Client-specified annotations."
        },
        "labels": {
          "description": "Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "persistentDirectories": {
          "items": {
            "$ref": "PersistentDirectory"
          },
          "description": "Directories to persist across workstation sessions.",
          "type": "array"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. A system-assigned unique identified for this resource.",
          "type": "string"
        },
        "readinessChecks": {
          "items": {
            "$ref": "ReadinessCheck"
          },
          "type": "array",
          "description": "Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes."
        },
        "reconciling": {
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state.",
          "type": "boolean",
          "readOnly": true
        },
        "conditions": {
          "items": {
            "$ref": "Status"
          },
          "readOnly": true,
          "description": "Output only. Status conditions describing the current resource state.",
          "type": "array"
        },
        "deleteTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time when this resource was soft-deleted.",
          "format": "google-datetime"
        },
        "host": {
          "$ref": "Host",
          "description": "Runtime host for the workstation."
        },
        "etag": {
          "description": "Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "runningTimeout": {
          "format": "google-duration",
          "type": "string",
          "description": "How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this configuration should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours."
        },
        "encryptionKey": {
          "$ref": "CustomerEncryptionKey",
          "description": "Immutable. Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata. If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the workstation session will automatically be stopped within 7 hours. Immutable after the workstation configuration is created."
        },
        "degraded": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field."
        },
        "name": {
          "type": "string",
          "description": "Full name of this resource."
        },
        "updateTime": {
          "description": "Output only. Time when this resource was most recently updated.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "idleTimeout": {
          "format": "google-duration",
          "type": "string",
          "description": "How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes."
        },
        "container": {
          "description": "Container that will be run for each workstation using this configuration when that workstation is started.",
          "$ref": "Container"
        },
        "enableAuditAgent": {
          "description": "Whether to enable linux auditd logging on the workstation. When enabled, a service account must also be specified that has logging.buckets.write permission on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging).",
          "type": "boolean"
        }
      },
      "id": "WorkstationConfig",
      "description": "A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations."
    },
    "GceShieldedInstanceConfig": {
      "properties": {
        "enableIntegrityMonitoring": {
          "type": "boolean",
          "description": "Whether the instance has integrity monitoring enabled."
        },
        "enableSecureBoot": {
          "type": "boolean",
          "description": "Whether the instance has Secure Boot enabled."
        },
        "enableVtpm": {
          "description": "Whether the instance has the vTPM enabled.",
          "type": "boolean"
        }
      },
      "id": "GceShieldedInstanceConfig",
      "type": "object",
      "description": "A set of Compute Engine Shielded instance options."
    },
    "ListUsableWorkstationsResponse": {
      "properties": {
        "workstations": {
          "description": "The requested workstations.",
          "items": {
            "$ref": "Workstation"
          },
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "ListUsableWorkstationsResponse",
      "type": "object",
      "description": "Response message for ListUsableWorkstations."
    },
    "GceConfidentialInstanceConfig": {
      "type": "object",
      "id": "GceConfidentialInstanceConfig",
      "description": "A set of Compute Engine Confidential VM instance options.",
      "properties": {
        "enableConfidentialCompute": {
          "type": "boolean",
          "description": "Whether the instance has confidential compute enabled."
        }
      }
    },
    "ListWorkstationsResponse": {
      "id": "ListWorkstationsResponse",
      "type": "object",
      "description": "Response message for ListWorkstations.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources."
        },
        "workstations": {
          "items": {
            "$ref": "Workstation"
          },
          "type": "array",
          "description": "The requested workstations."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "Host": {
      "id": "Host",
      "description": "Runtime host for a workstation.",
      "type": "object",
      "properties": {
        "gceInstance": {
          "$ref": "GceInstance",
          "description": "Specifies a Compute Engine instance as the host."
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerName": "Google",
  "documentationLink": "https://cloud.google.com/workstations",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "ownerDomain": "google.com",
  "description": "",
  "title": "Cloud Workstations API",
  "basePath": "",
  "id": "workstations:v1beta",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "workstations.projects.locations.operations.cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1beta/{+name}:cancel"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "workstations.projects.locations.operations.delete",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "id": "workstations.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list page token."
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "path": "v1beta/{+name}/operations"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource.",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "path": "v1beta/{+name}",
                  "id": "workstations.projects.locations.operations.get",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  }
                }
              }
            },
            "workstationClusters": {
              "resources": {
                "workstationConfigs": {
                  "resources": {
                    "workstations": {
                      "methods": {
                        "listUsable": {
                          "httpMethod": "GET",
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "description": "Maximum number of items to return.",
                              "type": "integer"
                            },
                            "parent": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                              "description": "Required. Parent resource name."
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "next_page_token value returned from a previous List request, if any.",
                              "type": "string"
                            }
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.listUsable",
                          "path": "v1beta/{+parent}/workstations:listUsable",
                          "response": {
                            "$ref": "ListUsableWorkstationsResponse"
                          },
                          "description": "Returns all workstations using the specified workstation configuration on which the caller has the \"workstations.workstations.use\" permission.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations:listUsable"
                        },
                        "create": {
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "workstationId": {
                              "location": "query",
                              "description": "Required. ID to use for the workstation.",
                              "type": "string"
                            },
                            "parent": {
                              "description": "Required. Parent resource name.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            },
                            "validateOnly": {
                              "type": "boolean",
                              "description": "If set, validate the request and preview the review, but do not actually apply it.",
                              "location": "query"
                            }
                          },
                          "description": "Creates a new workstation.",
                          "request": {
                            "$ref": "Workstation"
                          },
                          "path": "v1beta/{+parent}/workstations",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.create",
                          "response": {
                            "$ref": "Operation"
                          }
                        },
                        "setIamPolicy": {
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.setIamPolicy",
                          "parameters": {
                            "resource": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Policy"
                          },
                          "httpMethod": "POST",
                          "path": "v1beta/{+resource}:setIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:setIamPolicy"
                        },
                        "generateAccessToken": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GenerateAccessTokenResponse"
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:generateAccessToken",
                          "httpMethod": "POST",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.generateAccessToken",
                          "parameterOrder": [
                            "workstation"
                          ],
                          "description": "Returns a short-lived credential that can be used to send authenticated and authorized traffic to a workstation.",
                          "request": {
                            "$ref": "GenerateAccessTokenRequest"
                          },
                          "path": "v1beta/{+workstation}:generateAccessToken",
                          "parameters": {
                            "workstation": {
                              "type": "string",
                              "required": true,
                              "description": "Required. Name of the workstation for which the access token should be generated.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$"
                            }
                          }
                        },
                        "list": {
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.list",
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "description": "Required. Parent resource name.",
                              "required": true
                            },
                            "pageSize": {
                              "format": "int32",
                              "type": "integer",
                              "description": "Maximum number of items to return.",
                              "location": "query"
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "next_page_token value returned from a previous List request, if any."
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "path": "v1beta/{+parent}/workstations",
                          "description": "Returns all Workstations using the specified workstation configuration.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "ListWorkstationsResponse"
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations"
                        },
                        "get": {
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.get",
                          "description": "Returns the requested workstation.",
                          "httpMethod": "GET",
                          "path": "v1beta/{+name}",
                          "response": {
                            "$ref": "Workstation"
                          },
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the requested resource.",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "delete": {
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the workstation to delete.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            },
                            "etag": {
                              "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this ETag.",
                              "location": "query",
                              "type": "string"
                            },
                            "validateOnly": {
                              "type": "boolean",
                              "description": "If set, validate the request and preview the review, but do not actually apply it.",
                              "location": "query"
                            }
                          },
                          "description": "Deletes the specified workstation.",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.delete",
                          "httpMethod": "DELETE",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1beta/{+name}"
                        },
                        "stop": {
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "description": "Stops running a workstation, reducing costs.",
                          "request": {
                            "$ref": "StopWorkstationRequest"
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.stop",
                          "path": "v1beta/{+name}:stop",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:stop",
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the workstation to stop.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "type": "string",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST"
                        },
                        "testIamPermissions": {
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:testIamPermissions",
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "httpMethod": "POST",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.testIamPermissions",
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "parameters": {
                            "resource": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string",
                              "location": "path",
                              "required": true
                            }
                          },
                          "path": "v1beta/{+resource}:testIamPermissions",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "resource"
                          ]
                        },
                        "getIamPolicy": {
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.getIamPolicy",
                          "response": {
                            "$ref": "Policy"
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "parameters": {
                            "options.requestedPolicyVersion": {
                              "location": "query",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "format": "int32",
                              "type": "integer"
                            },
                            "resource": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "location": "path",
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string"
                            }
                          },
                          "httpMethod": "GET",
                          "path": "v1beta/{+resource}:getIamPolicy"
                        },
                        "patch": {
                          "description": "Updates an existing workstation.",
                          "response": {
                            "$ref": "Operation"
                          },
                          "request": {
                            "$ref": "Workstation"
                          },
                          "parameters": {
                            "validateOnly": {
                              "type": "boolean",
                              "location": "query",
                              "description": "If set, validate the request and preview the review, but do not actually apply it."
                            },
                            "allowMissing": {
                              "location": "query",
                              "type": "boolean",
                              "description": "If set and the workstation configuration is not found, a new workstation configuration is created. In this situation, update_mask is ignored."
                            },
                            "updateMask": {
                              "format": "google-fieldmask",
                              "type": "string",
                              "description": "Required. Mask specifying which fields in the workstation configuration should be updated.",
                              "location": "query"
                            },
                            "name": {
                              "location": "path",
                              "description": "Full name of this resource.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "PATCH",
                          "path": "v1beta/{+name}",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.patch",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}"
                        },
                        "start": {
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.start",
                          "httpMethod": "POST",
                          "description": "Starts running a workstation so that users can connect to it.",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:start",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "description": "Required. Name of the workstation to start.",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "path": "v1beta/{+name}:start",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "StartWorkstationRequest"
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "getIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "path": "v1beta/{+resource}:getIamPolicy",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.getIamPolicy",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:getIamPolicy",
                      "parameters": {
                        "resource": {
                          "required": true,
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "type": "string"
                        },
                        "options.requestedPolicyVersion": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "WorkstationConfig"
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.get",
                      "path": "v1beta/{+name}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the requested resource."
                        }
                      },
                      "description": "Returns the requested workstation configuration.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.create",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta/{+parent}/workstationConfigs",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "validateOnly": {
                          "location": "query",
                          "description": "If set, validate the request and preview the review, but do not actually apply it.",
                          "type": "boolean"
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                          "description": "Required. Parent resource name.",
                          "required": true,
                          "location": "path"
                        },
                        "workstationConfigId": {
                          "description": "Required. ID to use for the workstation configuration.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "request": {
                        "$ref": "WorkstationConfig"
                      },
                      "description": "Creates a new workstation configuration.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs",
                      "httpMethod": "POST"
                    },
                    "list": {
                      "path": "v1beta/{+parent}/workstationConfigs",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs",
                      "description": "Returns all workstation configurations in the specified cluster.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListWorkstationConfigsResponse"
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.list",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                          "required": true,
                          "description": "Required. Parent resource name.",
                          "location": "path",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum number of items to return.",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "next_page_token value returned from a previous List request, if any.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "setIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "parameters": {
                        "resource": {
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "path": "v1beta/{+resource}:setIamPolicy",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.setIamPolicy"
                    },
                    "listUsable": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns all workstation configurations in the specified cluster on which the caller has the \"workstations.workstation.create\" permission.",
                      "httpMethod": "GET",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs:listUsable",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1beta/{+parent}/workstationConfigs:listUsable",
                      "parameters": {
                        "parent": {
                          "description": "Required. Parent resource name.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "next_page_token value returned from a previous List request, if any."
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Maximum number of items to return."
                        }
                      },
                      "response": {
                        "$ref": "ListUsableWorkstationConfigsResponse"
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.listUsable"
                    },
                    "delete": {
                      "parameters": {
                        "force": {
                          "type": "boolean",
                          "description": "If set, any workstations in the workstation configuration are also deleted. Otherwise, the request works only if the workstation configuration has no workstations.",
                          "location": "query"
                        },
                        "etag": {
                          "description": "If set, the request is rejected if the latest version of the workstation configuration on the server does not have this ETag.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "description": "Required. Name of the workstation configuration to delete.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "required": true
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set, validate the request and preview the review, but do not actually apply it."
                        }
                      },
                      "path": "v1beta/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.delete",
                      "description": "Deletes the specified workstation configuration.",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE"
                    },
                    "patch": {
                      "request": {
                        "$ref": "WorkstationConfig"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Full name of this resource.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "type": "string"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set, validate the request and preview the review, but do not actually apply it."
                        },
                        "allowMissing": {
                          "location": "query",
                          "description": "If set and the workstation configuration is not found, a new workstation configuration will be created. In this situation, update_mask is ignored.",
                          "type": "boolean"
                        },
                        "updateMask": {
                          "description": "Required. Mask specifying which fields in the workstation configuration should be updated.",
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string"
                        }
                      },
                      "path": "v1beta/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}",
                      "description": "Updates an existing workstation configuration.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH"
                    },
                    "testIamPermissions": {
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:testIamPermissions",
                      "httpMethod": "POST",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.testIamPermissions",
                      "path": "v1beta/{+resource}:testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns all workstation clusters in the specified location.",
                  "path": "v1beta/{+parent}/workstationClusters",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "next_page_token value returned from a previous List request, if any.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "Maximum number of items to return."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. Parent resource name.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "id": "workstations.projects.locations.workstationClusters.list",
                  "response": {
                    "$ref": "ListWorkstationClustersResponse"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "get": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Returns the requested workstation cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "workstations.projects.locations.workstationClusters.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the requested resource.",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}",
                  "response": {
                    "$ref": "WorkstationCluster"
                  }
                },
                "create": {
                  "path": "v1beta/{+parent}/workstationClusters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "workstations.projects.locations.workstationClusters.create",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "WorkstationCluster"
                  },
                  "parameters": {
                    "workstationClusterId": {
                      "location": "query",
                      "description": "Required. ID to use for the workstation cluster.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Parent resource name.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "validateOnly": {
                      "description": "If set, validate the request and preview the review, but do not actually apply it.",
                      "location": "query",
                      "type": "boolean"
                    }
                  },
                  "description": "Creates a new workstation cluster."
                },
                "patch": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "id": "workstations.projects.locations.workstationClusters.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "WorkstationCluster"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "description": "Required. Mask that specifies which fields in the workstation cluster should be updated.",
                      "type": "string",
                      "location": "query"
                    },
                    "allowMissing": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set, and the workstation cluster is not found, a new workstation cluster will be created. In this situation, update_mask is ignored."
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "If set, validate the request and preview the review, but do not actually apply it.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                      "location": "path",
                      "description": "Full name of this resource.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Updates an existing workstation cluster."
                },
                "delete": {
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "etag": {
                      "type": "string",
                      "description": "If set, the request will be rejected if the latest version of the workstation cluster on the server does not have this ETag.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the workstation cluster to delete.",
                      "type": "string"
                    },
                    "force": {
                      "type": "boolean",
                      "description": "If set, any workstation configurations and workstations in the workstation cluster are also deleted. Otherwise, the request only works if the workstation cluster has no configurations or workstations.",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "If set, validate the request and preview the review, but do not apply it.",
                      "location": "query"
                    }
                  },
                  "id": "workstations.projects.locations.workstationClusters.delete",
                  "description": "Deletes the specified workstation cluster."
                }
              }
            }
          }
        }
      }
    }
  },
  "revision": "20230501",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "version": "v1beta",
  "batchPath": "batch",
  "rootUrl": "https://workstations.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "name": "workstations"
}

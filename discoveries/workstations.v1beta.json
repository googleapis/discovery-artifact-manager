{
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "id": "workstations:v1beta",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "workstations.projects.locations.operations.delete",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "workstations.projects.locations.operations.list",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "workstations.projects.locations.operations.get",
                  "path": "v1beta/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                },
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string"
                    }
                  },
                  "path": "v1beta/{+name}:cancel",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "POST",
                  "id": "workstations.projects.locations.operations.cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "workstationClusters": {
              "methods": {
                "patch": {
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. Mask specifying which fields in the cluster should be updated."
                    },
                    "validateOnly": {
                      "description": "If set, validate the request and preview the review, but do not actually apply it.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Full name of this resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$"
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "description": "If set, and the cluster is not found, a new cluster will be created. In this situation, update_mask is ignored.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "request": {
                    "$ref": "WorkstationCluster"
                  },
                  "httpMethod": "PATCH",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "workstations.projects.locations.workstationClusters.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Updates an existing WorkstationCluster."
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Returns all WorkstationClusters in the specified location.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Parent resource name.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "next_page_token value returned from a previous List request, if any."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum number of items to return."
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters",
                  "id": "workstations.projects.locations.workstationClusters.list",
                  "path": "v1beta/{+parent}/workstationClusters",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListWorkstationClustersResponse"
                  }
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the cluster to delete.",
                      "type": "string"
                    },
                    "force": {
                      "description": "If set, any WorkstationConfigs and Workstations in the cluster will also be deleted. Otherwise, the request will work only if the cluster has no configs or workstations.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set, validate the request and preview the review, but do not actually apply it."
                    },
                    "etag": {
                      "type": "string",
                      "location": "query",
                      "description": "If set, the request will be rejected if the latest version of the cluster on the server does not have this etag."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes the specified WorkstationCluster.",
                  "id": "workstations.projects.locations.workstationClusters.delete",
                  "path": "v1beta/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "WorkstationCluster"
                  },
                  "id": "workstations.projects.locations.workstationClusters.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new WorkstationCluster.",
                  "httpMethod": "POST",
                  "path": "v1beta/{+parent}/workstationClusters",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Parent resource name.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "workstationClusterId": {
                      "description": "Required. ID to use for the cluster.",
                      "type": "string",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set, validate the request and preview the review, but do not actually apply it."
                    }
                  }
                },
                "get": {
                  "path": "v1beta/{+name}",
                  "id": "workstations.projects.locations.workstationClusters.get",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. Name of the requested resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "WorkstationCluster"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Returns the requested WorkstationCluster."
                }
              },
              "resources": {
                "workstationConfigs": {
                  "methods": {
                    "patch": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "PATCH",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.patch",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}",
                      "request": {
                        "$ref": "WorkstationConfig"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "updateMask": {
                          "description": "Required. Mask specifying which fields in the config should be updated.",
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query"
                        },
                        "allowMissing": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set, and the config is not found, a new config will be created. In this situation, update_mask is ignored."
                        },
                        "name": {
                          "description": "Full name of this resource.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set, validate the request and preview the review, but do not actually apply it."
                        }
                      },
                      "description": "Updates an existing WorkstationConfig.",
                      "path": "v1beta/{+name}"
                    },
                    "list": {
                      "description": "Returns all WorkstationConfigs in the specified cluster.",
                      "httpMethod": "GET",
                      "path": "v1beta/{+parent}/workstationConfigs",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListWorkstationConfigsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                          "type": "string",
                          "description": "Required. Parent resource name.",
                          "location": "path",
                          "required": true
                        },
                        "pageSize": {
                          "description": "Maximum number of items to return.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "next_page_token value returned from a previous List request, if any."
                        }
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "WorkstationConfig"
                      },
                      "description": "Returns the requested WorkstationConfig.",
                      "path": "v1beta/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the requested resource."
                        }
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.get",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}"
                    },
                    "delete": {
                      "path": "v1beta/{+name}",
                      "description": "Deletes the specified WorkstationConfig.",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.delete",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "etag": {
                          "type": "string",
                          "description": "If set, the request will be rejected if the latest version of the config on the server does not have this etag.",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the config to delete.",
                          "required": true
                        },
                        "validateOnly": {
                          "location": "query",
                          "description": "If set, validate the request and preview the review, but do not actually apply it.",
                          "type": "boolean"
                        },
                        "force": {
                          "description": "If set, any Workstations in the config will also be deleted. Otherwise, the request will work only if the config has no workstations.",
                          "location": "query",
                          "type": "boolean"
                        }
                      }
                    },
                    "setIamPolicy": {
                      "parameters": {
                        "resource": {
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta/{+resource}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:setIamPolicy",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.setIamPolicy",
                      "httpMethod": "POST"
                    },
                    "listUsable": {
                      "description": "Returns all WorkstationConfigs in the specified cluster on which the caller has the \"workstations.workstation.create\" permission.",
                      "parameters": {
                        "pageToken": {
                          "description": "next_page_token value returned from a previous List request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Maximum number of items to return.",
                          "format": "int32"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                          "description": "Required. Parent resource name.",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "path": "v1beta/{+parent}/workstationConfigs:listUsable",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.listUsable",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListUsableWorkstationConfigsResponse"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs:listUsable"
                    },
                    "getIamPolicy": {
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "GET",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.getIamPolicy",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "type": "string"
                        }
                      },
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta/{+resource}:getIamPolicy",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "testIamPermissions": {
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "path": "v1beta/{+resource}:testIamPermissions",
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}:testIamPermissions",
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      }
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+$",
                          "description": "Required. Parent resource name.",
                          "required": true
                        },
                        "workstationConfigId": {
                          "location": "query",
                          "description": "Required. ID to use for the config.",
                          "type": "string"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "description": "If set, validate the request and preview the review, but do not actually apply it.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "workstations.projects.locations.workstationClusters.workstationConfigs.create",
                      "description": "Creates a new WorkstationConfig.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1beta/{+parent}/workstationConfigs",
                      "request": {
                        "$ref": "WorkstationConfig"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs"
                    }
                  },
                  "resources": {
                    "workstations": {
                      "methods": {
                        "setIamPolicy": {
                          "response": {
                            "$ref": "Policy"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta/{+resource}:setIamPolicy",
                          "parameterOrder": [
                            "resource"
                          ],
                          "parameters": {
                            "resource": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                            }
                          },
                          "request": {
                            "$ref": "SetIamPolicyRequest"
                          },
                          "httpMethod": "POST",
                          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:setIamPolicy",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.setIamPolicy"
                        },
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1beta/{+name}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. Name of the requested resource.",
                              "location": "path"
                            }
                          },
                          "response": {
                            "$ref": "Workstation"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.get",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "description": "Returns the requested Workstation."
                        },
                        "start": {
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. Name of the workstation to start."
                            }
                          },
                          "description": "Starts running a workstation so that users can connect to it.",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.start",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "POST",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:start",
                          "request": {
                            "$ref": "StartWorkstationRequest"
                          },
                          "path": "v1beta/{+name}:start",
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "create": {
                          "response": {
                            "$ref": "Operation"
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "Workstation"
                          },
                          "description": "Creates a new Workstation.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.create",
                          "path": "v1beta/{+parent}/workstations",
                          "parameters": {
                            "workstationId": {
                              "location": "query",
                              "type": "string",
                              "description": "Required. ID to use for the workstation."
                            },
                            "parent": {
                              "description": "Required. Parent resource name.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                              "type": "string"
                            },
                            "validateOnly": {
                              "description": "If set, validate the request and preview the review, but do not actually apply it.",
                              "location": "query",
                              "type": "boolean"
                            }
                          },
                          "httpMethod": "POST"
                        },
                        "list": {
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "description": "Required. Parent resource name.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "next_page_token value returned from a previous List request, if any.",
                              "location": "query"
                            },
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "format": "int32",
                              "description": "Maximum number of items to return."
                            }
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.list",
                          "description": "Returns all Workstations using the specified config.",
                          "response": {
                            "$ref": "ListWorkstationsResponse"
                          },
                          "path": "v1beta/{+parent}/workstations",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "testIamPermissions": {
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.testIamPermissions",
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "resource"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:testIamPermissions",
                          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                          "response": {
                            "$ref": "TestIamPermissionsResponse"
                          },
                          "request": {
                            "$ref": "TestIamPermissionsRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "resource": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "type": "string"
                            }
                          },
                          "path": "v1beta/{+resource}:testIamPermissions"
                        },
                        "generateAccessToken": {
                          "parameterOrder": [
                            "workstation"
                          ],
                          "request": {
                            "$ref": "GenerateAccessTokenRequest"
                          },
                          "response": {
                            "$ref": "GenerateAccessTokenResponse"
                          },
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.generateAccessToken",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:generateAccessToken",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Returns a short-lived credential that can be used to send authenticated and authorized traffic to a workstation.",
                          "httpMethod": "POST",
                          "parameters": {
                            "workstation": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "description": "Required. Name of the workstation for which the access token should be generated.",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "path": "v1beta/{+workstation}:generateAccessToken"
                        },
                        "getIamPolicy": {
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.getIamPolicy",
                          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1beta/{+resource}:getIamPolicy",
                          "httpMethod": "GET",
                          "parameters": {
                            "resource": {
                              "required": true,
                              "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$"
                            },
                            "options.requestedPolicyVersion": {
                              "type": "integer",
                              "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                              "location": "query",
                              "format": "int32"
                            }
                          },
                          "response": {
                            "$ref": "Policy"
                          },
                          "parameterOrder": [
                            "resource"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:getIamPolicy"
                        },
                        "listUsable": {
                          "response": {
                            "$ref": "ListUsableWorkstationsResponse"
                          },
                          "description": "Returns all Workstations using the specified config on which the caller has the \"workstations.workstations.use\" permission.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.listUsable",
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "description": "Maximum number of items to return.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "next_page_token value returned from a previous List request, if any."
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+$",
                              "description": "Required. Parent resource name.",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "path": "v1beta/{+parent}/workstations:listUsable",
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations:listUsable",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        },
                        "patch": {
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "parameters": {
                            "allowMissing": {
                              "location": "query",
                              "description": "If set, and the config is not found, a new config will be created. In this situation, update_mask is ignored.",
                              "type": "boolean"
                            },
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true,
                              "description": "Full name of this resource.",
                              "type": "string",
                              "location": "path"
                            },
                            "updateMask": {
                              "description": "Required. Mask specifying which fields in the config should be updated.",
                              "format": "google-fieldmask",
                              "type": "string",
                              "location": "query"
                            },
                            "validateOnly": {
                              "description": "If set, validate the request and preview the review, but do not actually apply it.",
                              "type": "boolean",
                              "location": "query"
                            }
                          },
                          "path": "v1beta/{+name}",
                          "httpMethod": "PATCH",
                          "description": "Updates an existing Workstation.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.patch",
                          "request": {
                            "$ref": "Workstation"
                          }
                        },
                        "stop": {
                          "description": "Stops running a workstation, reducing costs.",
                          "path": "v1beta/{+name}:stop",
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "StopWorkstationRequest"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}:stop",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.stop",
                          "parameters": {
                            "name": {
                              "description": "Required. Name of the workstation to stop.",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true
                            }
                          }
                        },
                        "delete": {
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "httpMethod": "DELETE",
                          "path": "v1beta/{+name}",
                          "id": "workstations.projects.locations.workstationClusters.workstationConfigs.workstations.delete",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/workstationClusters/{workstationClustersId}/workstationConfigs/{workstationConfigsId}/workstations/{workstationsId}",
                          "parameters": {
                            "validateOnly": {
                              "description": "If set, validate the request and preview the review, but do not actually apply it.",
                              "location": "query",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "Required. Name of the workstation to delete.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/workstationClusters/[^/]+/workstationConfigs/[^/]+/workstations/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            },
                            "etag": {
                              "location": "query",
                              "type": "string",
                              "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this etag."
                            }
                          },
                          "description": "Deletes the specified Workstation."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "mtlsRootUrl": "https://workstations.mtls.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerDomain": "google.com",
  "basePath": "",
  "title": "Cloud Workstations API",
  "ownerName": "Google",
  "rootUrl": "https://workstations.googleapis.com/",
  "parameters": {
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "batchPath": "batch",
  "name": "workstations",
  "discoveryVersion": "v1",
  "servicePath": "",
  "baseUrl": "https://workstations.googleapis.com/",
  "revision": "20221206",
  "schemas": {
    "Binding": {
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array"
        }
      }
    },
    "CancelOperationRequest": {
      "type": "object",
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest"
    },
    "GenerateAccessTokenResponse": {
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "The generated bearer access token. To use this token, include it in an Authorization header of an HTTP request sent to the associated workstation's hostname, e.g. \"Authorization: Bearer \"."
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time at which the generated token will expire."
        }
      },
      "description": "Response message for GenerateAccessToken.",
      "id": "GenerateAccessTokenResponse",
      "type": "object"
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        }
      }
    },
    "Container": {
      "description": "A Docker container.",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments passed to the entrypoint."
        },
        "workingDir": {
          "description": "If set, overrides the default DIR specified by the image.",
          "type": "string"
        },
        "env": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Environment variables passed to the container.",
          "type": "object"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int32",
          "description": "If set, overrides the USER specified in the image with the given uid."
        },
        "image": {
          "type": "string",
          "description": "Docker image defining the container. This image must be accessible by the config's service account."
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If set, overrides the default ENTRYPOINT specified by the image."
        }
      },
      "type": "object",
      "id": "Container"
    },
    "ListWorkstationClustersResponse": {
      "id": "ListWorkstationClustersResponse",
      "properties": {
        "unreachable": {
          "description": "Unreachable resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workstationClusters": {
          "type": "array",
          "description": "The requested clusters.",
          "items": {
            "$ref": "WorkstationCluster"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "description": "Response message for ListWorkstationClusters."
    },
    "GceInstance": {
      "type": "object",
      "id": "GceInstance",
      "properties": {
        "confidentialInstanceConfig": {
          "description": "A set of Confidential Google Compute Engine Instance option.",
          "$ref": "GceConfidentialInstanceConfig"
        },
        "tags": {
          "type": "array",
          "description": "Network tags to add to the Google Compute Engine machines backing the Workstations.",
          "items": {
            "type": "string"
          }
        },
        "poolSize": {
          "type": "integer",
          "format": "int32",
          "description": "Number of instances to pool for faster Workstation starup."
        },
        "shieldedInstanceConfig": {
          "$ref": "GceShieldedInstanceConfig",
          "description": "A set of Shielded Google Compute Engine Instance options."
        },
        "machineType": {
          "type": "string",
          "description": "The name of a Google Compute Engine machine type."
        },
        "serviceAccount": {
          "description": "Email address of the service account that will be used on VM instances used to support this config. This service account must have permission to pull the specified container image. If not set, VMs will run without a service account, in which case the image must be publicly accessible.",
          "type": "string"
        },
        "disablePublicIpAddresses": {
          "type": "boolean",
          "description": "Whether instances have no public IP address."
        },
        "bootDiskSizeGb": {
          "description": "Size of the boot disk in GB.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A runtime using a Google Compute Engine Instance."
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListUsableWorkstationsResponse": {
      "description": "Response message for ListUsableWorkstations.",
      "id": "ListUsableWorkstationsResponse",
      "properties": {
        "workstations": {
          "type": "array",
          "items": {
            "$ref": "Workstation"
          },
          "description": "The requested workstations."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Unreachable resources."
        }
      },
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      }
    },
    "GceShieldedInstanceConfig": {
      "description": "A set of Shielded Google Compute Engine Instance options.",
      "id": "GceShieldedInstanceConfig",
      "type": "object",
      "properties": {
        "enableVtpm": {
          "description": "Whether the instance has the vTPM enabled.",
          "type": "boolean"
        },
        "enableIntegrityMonitoring": {
          "description": "Whether the instance has integrity monitoring enabled.",
          "type": "boolean"
        },
        "enableSecureBoot": {
          "description": "Whether the instance has Secure Boot enabled.",
          "type": "boolean"
        }
      }
    },
    "PrivateClusterConfig": {
      "properties": {
        "enablePrivateEndpoint": {
          "type": "boolean",
          "description": "Whether Workstations endpoint is private."
        },
        "clusterHostname": {
          "type": "string",
          "description": "Output only. Hostname for the Workstation Cluster. This field will be populated only when private endpoint is enabled. To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.",
          "readOnly": true
        },
        "serviceAttachmentUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Service attachment URI for the Workstation Cluster. The service attachemnt is created when private endpoint is enabled. To access workstations in the cluster, configure access to the managed service using (Private Service Connect)[https://cloud.google.com/vpc/docs/configure-private-service-connect-services]."
        }
      },
      "id": "PrivateClusterConfig",
      "description": "Configuration options for private clusters.",
      "type": "object"
    },
    "Workstation": {
      "id": "Workstation",
      "description": "A single instance of a developer workstation with its own persistent storage.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding."
        },
        "reconciling": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state."
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for this resource."
        },
        "name": {
          "type": "string",
          "description": "Full name of this resource."
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A system-assigned unique identified for this resource."
        },
        "state": {
          "enumDescriptions": [
            "Do not use.",
            "The workstation is not yet ready to accept requests from users but will be soon.",
            "The workstation is ready to accept requests from users.",
            "The workstation is being stopped.",
            "The workstation is stopped and will not be able to receive requests until it is started."
          ],
          "description": "Output only. Current state of the workstation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "STATE_STARTING",
            "STATE_RUNNING",
            "STATE_STOPPING",
            "STATE_STOPPED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. Time when this resource was soft-deleted.",
          "type": "string",
          "readOnly": true
        },
        "annotations": {
          "description": "Client-specified annotations.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this resource was created."
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Time when this resource was most recently updated."
        },
        "host": {
          "description": "Output only. Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with the destination port in the format \"{port}-{host}\".",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PersistentDirectory": {
      "description": "A directory persisted across Workstation sessions.",
      "type": "object",
      "properties": {
        "mountPath": {
          "type": "string",
          "description": "Location of this directory in the running Workstation."
        },
        "gcePd": {
          "description": "A PersistentDirectory backed by a Compute Engine persistent disk.",
          "$ref": "GceRegionalPersistentDisk"
        }
      },
      "id": "PersistentDirectory"
    },
    "GceRegionalPersistentDisk": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string",
          "description": "Type of file system that the disk should be formatted with. The Workstation image must support this file system type. Must be empty if source_snapshot is set."
        },
        "sizeGb": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the disk in GB. Must be empty if source_snapshot is set."
        },
        "diskType": {
          "description": "Type of the disk to use.",
          "type": "string"
        },
        "reclaimPolicy": {
          "type": "string",
          "enum": [
            "RECLAIM_POLICY_UNSPECIFIED",
            "DELETE",
            "RETAIN"
          ],
          "description": "What should happen to the disk after the Workstation is deleted. Defaults to DELETE.",
          "enumDescriptions": [
            "Do not use.",
            "The persistent disk will be deleted with the Workstation.",
            "The persistent disk will be remain after the workstation is deleted, and the administrator must manually delete the disk."
          ]
        }
      },
      "description": "A PersistentDirectory backed by a Compute Engine regional persistent disk.",
      "id": "GceRegionalPersistentDisk"
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "OperationMetadata": {
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. API version used to start the operation."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the operation finished running."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "target": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "verb": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation."
        },
        "statusDetail": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "cancelRequested": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        }
      }
    },
    "GceConfidentialInstanceConfig": {
      "description": "A set of Confidential Google Compute Engine Instance option.",
      "type": "object",
      "properties": {
        "enableConfidentialCompute": {
          "type": "boolean",
          "description": "Whether the instance has confidential compute enabled."
        }
      },
      "id": "GceConfidentialInstanceConfig"
    },
    "GenerateAccessTokenRequest": {
      "properties": {
        "expireTime": {
          "format": "google-datetime",
          "description": "Desired expiration time of the access token. This value must be at most 24 hours in the future. If a value is not specified, the token's expiration time will be set to a default value of 1 hour in the future.",
          "type": "string"
        },
        "ttl": {
          "format": "google-duration",
          "type": "string",
          "description": "Desired lifetime duration of the access token. This value must be at most 24 hours. If a value is not specified, the token's lifetime will be set to a default value of 1 hour."
        }
      },
      "type": "object",
      "id": "GenerateAccessTokenRequest",
      "description": "Request message for GenerateAccessToken."
    },
    "ListUsableWorkstationConfigsResponse": {
      "description": "Response message for ListUsableWorkstationConfigs.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "workstationConfigs": {
          "items": {
            "$ref": "WorkstationConfig"
          },
          "type": "array",
          "description": "The requested configs."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Unreachable resources.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListUsableWorkstationConfigsResponse"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest"
    },
    "ListWorkstationConfigsResponse": {
      "type": "object",
      "id": "ListWorkstationConfigsResponse",
      "properties": {
        "unreachable": {
          "description": "Unreachable resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "workstationConfigs": {
          "items": {
            "$ref": "WorkstationConfig"
          },
          "type": "array",
          "description": "The requested configs."
        }
      },
      "description": "Response message for ListWorkstationConfigs."
    },
    "WorkstationCluster": {
      "properties": {
        "reconciling": {
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state.",
          "type": "boolean",
          "readOnly": true
        },
        "displayName": {
          "description": "Human-readable name for this resource.",
          "type": "string"
        },
        "subnetwork": {
          "type": "string",
          "description": "Name of the Compute Engine subnetwork in which instances associated with this cluster will be created. Must be part of the subnetwork specified for this cluster."
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A system-assigned unique identified for this resource."
        },
        "name": {
          "description": "Full name of this resource.",
          "type": "string"
        },
        "annotations": {
          "description": "Client-specified annotations.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "degraded": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time when this resource was created.",
          "readOnly": true
        },
        "privateClusterConfig": {
          "$ref": "PrivateClusterConfig",
          "description": "Configuration for private cluster."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. Time when this resource was most recently updated.",
          "type": "string",
          "readOnly": true
        },
        "conditions": {
          "items": {
            "$ref": "Status"
          },
          "type": "array",
          "description": "Output only. Status conditions describing the current resource state.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding."
        },
        "network": {
          "description": "Name of the Compute Engine network in which instances associated with this cluster will be created.",
          "type": "string"
        },
        "deleteTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. Time when this resource was soft-deleted.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A grouping of WorkstationConfigs and their associated Workstations in a region.",
      "id": "WorkstationCluster"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "Policy": {
      "properties": {
        "bindings": {
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "type": "array"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte"
        }
      },
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy"
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.",
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      }
    },
    "WorkstationConfig": {
      "id": "WorkstationConfig",
      "properties": {
        "name": {
          "description": "Full name of this resource.",
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Client-specified annotations."
        },
        "updateTime": {
          "description": "Output only. Time when this resource was most recently updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "persistentDirectories": {
          "items": {
            "$ref": "PersistentDirectory"
          },
          "description": "Directories to persist across Workstation sessions.",
          "type": "array"
        },
        "idleTimeout": {
          "format": "google-duration",
          "type": "string",
          "description": "How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Time when this resource was created.",
          "format": "google-datetime",
          "readOnly": true
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. Time when this resource was soft-deleted.",
          "type": "string",
          "readOnly": true
        },
        "runningTimeout": {
          "description": "How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this config should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.",
          "format": "google-duration",
          "type": "string"
        },
        "etag": {
          "description": "Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "reconciling": {
          "type": "boolean",
          "description": "Output only. Indicates whether this resource is currently being updated to match its intended state.",
          "readOnly": true
        },
        "host": {
          "$ref": "Host",
          "description": "Runtime host for the Workstation."
        },
        "uid": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A system-assigned unique identified for this resource."
        },
        "degraded": {
          "readOnly": true,
          "description": "Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.",
          "type": "boolean"
        },
        "conditions": {
          "items": {
            "$ref": "Status"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. Status conditions describing the current resource state."
        },
        "container": {
          "$ref": "Container",
          "description": "Container that will be run for each Workstation using this config when that Workstation is started."
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for this resource."
        }
      },
      "description": "A set of configuration options describing how a workstation will be run. WorkstationConfigs are intended to be shared across multiple workstations.",
      "type": "object"
    },
    "StopWorkstationRequest": {
      "id": "StopWorkstationRequest",
      "properties": {
        "etag": {
          "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this etag.",
          "type": "string"
        },
        "validateOnly": {
          "type": "boolean",
          "description": "If set, validate the request and preview the review, but do not actually apply it."
        }
      },
      "description": "Request message for StopWorkstation.",
      "type": "object"
    },
    "AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "type": "string",
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      },
      "id": "AuditLogConfig",
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "ListWorkstationsResponse": {
      "description": "Response message for ListWorkstations.",
      "id": "ListWorkstationsResponse",
      "properties": {
        "unreachable": {
          "description": "Unreachable resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workstations": {
          "items": {
            "$ref": "Workstation"
          },
          "description": "The requested workstations.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "type": "object",
      "properties": {}
    },
    "StartWorkstationRequest": {
      "type": "object",
      "id": "StartWorkstationRequest",
      "properties": {
        "validateOnly": {
          "type": "boolean",
          "description": "If set, validate the request and preview the review, but do not actually apply it."
        },
        "etag": {
          "description": "If set, the request will be rejected if the latest version of the workstation on the server does not have this etag.",
          "type": "string"
        }
      },
      "description": "Request message for StartWorkstation."
    },
    "Host": {
      "id": "Host",
      "description": "The system will attempt to keep enough computational resources on standby Runtime host for a Workstation.",
      "properties": {
        "gceInstance": {
          "description": "Specifies a Google Compute Engine Instance as the host.",
          "$ref": "GceInstance"
        }
      },
      "type": "object"
    }
  },
  "canonicalName": "Cloud Workstations",
  "description": "",
  "version": "v1beta",
  "documentationLink": "https://cloud.google.com/workstations",
  "fullyEncodeReservedExpansion": true
}

{
  "revision": "20230607",
  "schemas": {
    "GoogleAppsDriveLabelsV2IntegerLimits": {
      "id": "GoogleAppsDriveLabelsV2IntegerLimits",
      "type": "object",
      "description": "Limits for integer Field type.",
      "properties": {
        "minValue": {
          "format": "int64",
          "type": "string",
          "description": "Minimum value for an integer Field type."
        },
        "maxValue": {
          "type": "string",
          "format": "int64",
          "description": "Maximum value for an integer Field type."
        }
      }
    },
    "GoogleAppsDriveLabelsV2ListLabelLocksResponse": {
      "properties": {
        "labelLocks": {
          "description": "LabelLocks.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2LabelLock"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token of the next page in the response."
        }
      },
      "description": "The response to a ListLabelLocksRequest.",
      "id": "GoogleAppsDriveLabelsV2ListLabelLocksResponse",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest": {
      "id": "GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest",
      "properties": {
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the DeleteLabelPermissionRequest messages must either be empty or match this field."
        },
        "requests": {
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2DeleteLabelPermissionRequest"
          },
          "type": "array",
          "description": "Required. The request message specifying the resources to update."
        }
      },
      "description": "Deletes one of more Label Permissions.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2UpdateLabelPermissionRequest": {
      "properties": {
        "labelPermission": {
          "$ref": "GoogleAppsDriveLabelsV2LabelPermission",
          "description": "Required. The permission to create or update on the Label."
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent Label resource name."
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        }
      },
      "id": "GoogleAppsDriveLabelsV2UpdateLabelPermissionRequest",
      "type": "object",
      "description": "Updates a Label Permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing."
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseEnableFieldResponse": {
      "type": "object",
      "description": "Response following Field enable.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseEnableFieldResponse",
      "properties": {}
    },
    "GoogleAppsDriveLabelsV2FieldLongTextOptions": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2FieldLongTextOptions",
      "description": "Options the Long Text field type.",
      "properties": {
        "maxLength": {
          "description": "Output only. The maximum valid length of values for the text field.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        },
        "minLength": {
          "type": "integer",
          "readOnly": true,
          "format": "int32",
          "description": "Output only. The minimum valid length of values for the text field."
        }
      }
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponse": {
      "description": "Response for Label update.",
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseResponse"
          },
          "type": "array",
          "description": "The reply of the updates. This maps 1:1 with the updates, although responses to some requests may be empty."
        },
        "updatedLabel": {
          "description": "The label after updates were applied. This is only set if [BatchUpdateLabelResponse2.include_label_in_response] is `true` and there were no errors.",
          "$ref": "GoogleAppsDriveLabelsV2Label"
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponse"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateFieldTypeResponse": {
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateFieldTypeResponse",
      "description": "Response following update to Field type.",
      "properties": {},
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2TextLimits": {
      "id": "GoogleAppsDriveLabelsV2TextLimits",
      "description": "Limits for text Field type.",
      "properties": {
        "minLength": {
          "description": "Minimum length allowed for a text Field type.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "format": "int32",
          "description": "Maximum length allowed for a text Field type.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2FieldSchemaCapabilities": {
      "id": "GoogleAppsDriveLabelsV2FieldSchemaCapabilities",
      "description": "The capabilities related to this field when editing the field.",
      "properties": {
        "canDisable": {
          "description": "Whether the user can disable this field. The user must have permission and this field must not already be disabled.",
          "type": "boolean"
        },
        "canEnable": {
          "type": "boolean",
          "description": "Whether the user can enable this field. The user must have permission and this field must be disabled."
        },
        "canUpdate": {
          "description": "Whether the user can change this field.",
          "type": "boolean"
        },
        "canDelete": {
          "type": "boolean",
          "description": "Whether the user can delete this field. The user must have permission and the field must be deprecated."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2UpdateLabelCopyModeRequest": {
      "description": "Request to update the `CopyMode` of the given Label. Changes to this policy are not revisioned, do not require publishing, and take effect immediately. \\",
      "type": "object",
      "properties": {
        "view": {
          "description": "When specified, only certain fields belonging to the indicated view will be returned.",
          "enumDescriptions": [
            "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
            "All possible fields."
          ],
          "enum": [
            "LABEL_VIEW_BASIC",
            "LABEL_VIEW_FULL"
          ],
          "type": "string"
        },
        "useAdminAccess": {
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
          "type": "boolean"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used."
        },
        "copyMode": {
          "enumDescriptions": [
            "Copy mode unspecified.",
            "The applied label and field values are not copied by default when the Drive item it's applied to is copied.",
            "The applied label and field values are always copied when the Drive item it's applied to is copied. Only admins can use this mode.",
            "The applied label and field values are copied if the label is appliable by the user making the copy."
          ],
          "description": "Required. Indicates how the applied Label, and Field values should be copied when a Drive item is copied.",
          "enum": [
            "COPY_MODE_UNSPECIFIED",
            "DO_NOT_COPY",
            "ALWAYS_COPY",
            "COPY_APPLIABLE"
          ],
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2UpdateLabelCopyModeRequest"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseCreateFieldResponse": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The field of the created field. When left blank in a create request, a key will be autogenerated and can be identified here."
        },
        "priority": {
          "type": "integer",
          "description": "The priority of the created field. The priority may change from what was specified to assure contiguous priorities between fields (1-n).",
          "format": "int32"
        }
      },
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseCreateFieldResponse",
      "type": "object",
      "description": "Response following Field create."
    },
    "GoogleAppsDriveLabelsV2UserInfo": {
      "properties": {
        "person": {
          "description": "The identifier for this user that can be used with the People API to get more information. For example, people/12345678.",
          "type": "string"
        }
      },
      "description": "Information about a user.",
      "id": "GoogleAppsDriveLabelsV2UserInfo",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2ListLabelPermissionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The token of the next page in the response.",
          "type": "string"
        },
        "labelPermissions": {
          "description": "Label permissions.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
          },
          "type": "array"
        }
      },
      "description": "Response for listing the permissions on a Label.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2ListLabelPermissionsResponse"
    },
    "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsRequest": {
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2UpdateLabelPermissionRequest"
          },
          "description": "Required. The request message specifying the resources to update."
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access. If this is set, the use_admin_access field in the UpdateLabelPermissionRequest messages must either be empty or match this field."
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsRequest",
      "description": "Updates one or more Label Permissions."
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateLabelPropertiesRequest": {
      "description": "Updates basic properties of a Label.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateLabelPropertiesRequest",
      "type": "object",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "The fields that should be updated. At least one field must be specified. The root `label_properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field."
        },
        "properties": {
          "$ref": "GoogleAppsDriveLabelsV2LabelProperties",
          "description": "Required. Label properties to update."
        }
      }
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateFieldPropertiesResponse": {
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateFieldPropertiesResponse",
      "properties": {
        "priority": {
          "description": "The priority of the updated field. The priority may change from what was specified to assure contiguous priorities between fields (1-n).",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Response following update to Field properties.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeleteLabelPermissionRequest": {
      "type": "object",
      "description": "Deletes a Label Permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Label Permission resource name."
        },
        "useAdminAccess": {
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
          "type": "boolean"
        }
      },
      "id": "GoogleAppsDriveLabelsV2DeleteLabelPermissionRequest"
    },
    "GoogleAppsDriveLabelsV2UserCapabilities": {
      "properties": {
        "canCreateAdminLabels": {
          "description": "Output only. Whether the user is allowed to create new admin labels.",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "Output only. Resource name for the user capabilities.",
          "type": "string",
          "readOnly": true
        },
        "canAccessLabelManager": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the user is allowed access to the label manager."
        },
        "canCreateSharedLabels": {
          "type": "boolean",
          "description": "Output only. Whether the user is allowed to create new shared labels.",
          "readOnly": true
        },
        "canAdministrateLabels": {
          "readOnly": true,
          "description": "Output only. Whether the user is an administrator for the shared labels feature.",
          "type": "boolean"
        }
      },
      "description": "The capabilities of a user.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2UserCapabilities"
    },
    "GoogleAppsDriveLabelsV2FieldSelectionOptions": {
      "description": "Options for the selection field type.",
      "properties": {
        "listOptions": {
          "description": "When specified, indicates this field supports a list of values. Once the field is published, this cannot be changed.",
          "$ref": "GoogleAppsDriveLabelsV2FieldListOptions"
        },
        "choices": {
          "description": "The options available for this selection field. The list order is consistent, and modified with `insert_before_choice`.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice"
          },
          "type": "array"
        }
      },
      "id": "GoogleAppsDriveLabelsV2FieldSelectionOptions",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2FieldProperties": {
      "properties": {
        "required": {
          "description": "Whether the field should be marked as required.",
          "type": "boolean"
        },
        "insertBeforeField": {
          "type": "string",
          "description": "Input only. Insert or move this field before the indicated field. If empty, the field is placed at the end of the list."
        },
        "displayName": {
          "description": "Required. The display text to show in the UI identifying this field.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The basic properties of the field.",
      "id": "GoogleAppsDriveLabelsV2FieldProperties"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDeleteSelectionChoiceRequest": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. Choice to delete."
        },
        "fieldId": {
          "type": "string",
          "description": "Required. The Selection Field from which a Choice will be deleted."
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDeleteSelectionChoiceRequest",
      "description": "Request to delete a Choice."
    },
    "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities": {
      "id": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities",
      "type": "object",
      "description": "The capabilities related to this choice when editing the choice.",
      "properties": {
        "canUpdate": {
          "type": "boolean",
          "description": "Whether the user can update this choice."
        },
        "canEnable": {
          "description": "Whether the user can enable this choice.",
          "type": "boolean"
        },
        "canDisable": {
          "description": "Whether the user can disable this choice.",
          "type": "boolean"
        },
        "canDelete": {
          "description": "Whether the user can delete this choice.",
          "type": "boolean"
        }
      }
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateLabelPropertiesResponse": {
      "properties": {},
      "description": "Response following update to Label properties.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateLabelPropertiesResponse"
    },
    "GoogleAppsDriveLabelsV2LabelPermission": {
      "id": "GoogleAppsDriveLabelsV2LabelPermission",
      "description": "The permission that applies to a principal (user, group, audience) on a label.",
      "properties": {
        "person": {
          "type": "string",
          "description": "Person resource name."
        },
        "audience": {
          "type": "string",
          "description": "Audience to grant a role to. The magic value of `audiences/default` may be used to apply the role to the default audience in the context of the organization that owns the Label."
        },
        "group": {
          "description": "Group resource name.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name of this permission."
        },
        "email": {
          "description": "Specifies the email address for a user or group pricinpal. Not populated for audience principals. User and Group permissions may only be inserted using email address. On update requests, if email address is specified, no principal should be specified.",
          "type": "string"
        },
        "role": {
          "enumDescriptions": [
            "Unknown role.",
            "A reader can read the label and associated metadata applied to Drive items.",
            "An applier can write associated metadata on Drive items in which they also have write access to. Implies `READER`.",
            "An organizer can pin this label in shared drives they manage and add new appliers to the label.",
            "Editors can make any update including deleting the label which also deletes the associated Drive item metadata. Implies `APPLIER`."
          ],
          "description": "The role the principal should have.",
          "enum": [
            "LABEL_ROLE_UNSPECIFIED",
            "READER",
            "APPLIER",
            "ORGANIZER",
            "EDITOR"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy": {
      "id": "GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy",
      "description": "Behavior of this label when it's applied to Drive items.",
      "type": "object",
      "properties": {
        "copyMode": {
          "enumDescriptions": [
            "Copy mode unspecified.",
            "The applied label and field values are not copied by default when the Drive item it's applied to is copied.",
            "The applied label and field values are always copied when the Drive item it's applied to is copied. Only admins can use this mode.",
            "The applied label and field values are copied if the label is appliable by the user making the copy."
          ],
          "description": "Indicates how the applied label and field values should be copied when a Drive item is copied.",
          "enum": [
            "COPY_MODE_UNSPECIFIED",
            "DO_NOT_COPY",
            "ALWAYS_COPY",
            "COPY_APPLIABLE"
          ],
          "type": "string"
        }
      }
    },
    "GoogleAppsDriveLabelsV2LabelAppliedCapabilities": {
      "id": "GoogleAppsDriveLabelsV2LabelAppliedCapabilities",
      "description": "The capabilities a user has on this label's applied metadata.",
      "type": "object",
      "properties": {
        "canRead": {
          "type": "boolean",
          "description": "Whether the user can read applied metadata related to this label."
        },
        "canRemove": {
          "description": "Whether the user can remove this label from items.",
          "type": "boolean"
        },
        "canApply": {
          "type": "boolean",
          "description": "Whether the user can apply this label to items."
        }
      }
    },
    "GoogleProtobufEmpty": {
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequest": {
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequest",
      "properties": {
        "writeControl": {
          "$ref": "GoogleAppsDriveLabelsV2WriteControl",
          "description": "Provides control over how write requests are executed."
        },
        "requests": {
          "type": "array",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestRequest"
          },
          "description": "A list of updates to apply to the Label. Requests will be applied in the order they are specified."
        },
        "view": {
          "enumDescriptions": [
            "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
            "All possible fields."
          ],
          "description": "When specified, only certain fields belonging to the indicated view will be returned.",
          "type": "string",
          "enum": [
            "LABEL_VIEW_BASIC",
            "LABEL_VIEW_FULL"
          ]
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        },
        "languageCode": {
          "description": "The BCP-47 language code to use for evaluating localized Field labels when `include_label_in_response` is `true`.",
          "type": "string"
        }
      },
      "description": "The set of requests for updating aspects of a Label. If any request is not valid, no requests will be applied.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDisableFieldRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. Key of the Field to disable."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "type": "string"
        },
        "disabledPolicy": {
          "description": "Required. Field Disabled Policy.",
          "$ref": "GoogleAppsDriveLabelsV2LifecycleDisabledPolicy"
        }
      },
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDisableFieldRequest",
      "description": "Request to disable the Field."
    },
    "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities": {
      "properties": {
        "canRead": {
          "description": "Whether the user can read related applied metadata on items.",
          "type": "boolean"
        },
        "canSelect": {
          "type": "boolean",
          "description": "Whether the user can select this choice on an item."
        },
        "canSearch": {
          "description": "Whether the user can use this choice in search queries.",
          "type": "boolean"
        }
      },
      "id": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities",
      "description": "The capabilities related to this choice on applied metadata.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2UserLimits": {
      "id": "GoogleAppsDriveLabelsV2UserLimits",
      "description": "Limits for Field.Type.USER.",
      "properties": {
        "listLimits": {
          "description": "Limits for list-variant of a Field type.",
          "$ref": "GoogleAppsDriveLabelsV2ListLimits"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DisableLabelRequest": {
      "description": "Request to deprecate a published Label.",
      "type": "object",
      "properties": {
        "writeControl": {
          "description": "Provides control over how write requests are executed. Defaults to unset, which means last write wins.",
          "$ref": "GoogleAppsDriveLabelsV2WriteControl"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field."
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        },
        "disabledPolicy": {
          "description": "Disabled policy to use.",
          "$ref": "GoogleAppsDriveLabelsV2LifecycleDisabledPolicy"
        },
        "languageCode": {
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.",
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2DisableLabelRequest"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest": {
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest",
      "description": "Request to create a Selection Choice.",
      "type": "object",
      "properties": {
        "fieldId": {
          "description": "Required. The Selection Field in which a Choice will be created.",
          "type": "string"
        },
        "choice": {
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice",
          "description": "Required. The Choice to create."
        }
      }
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseCreateSelectionChoiceResponse": {
      "properties": {
        "fieldId": {
          "description": "The server-generated id of the field.",
          "type": "string"
        },
        "id": {
          "description": "The server-generated ID of the created choice within the Field",
          "type": "string"
        }
      },
      "description": "Response following Selection Choice create.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseCreateSelectionChoiceResponse",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2Field": {
      "id": "GoogleAppsDriveLabelsV2Field",
      "description": "Defines a field that has a display name, data type, and other configuration options. This field defines the kind of metadata that may be set on a Drive item.",
      "type": "object",
      "properties": {
        "integerOptions": {
          "$ref": "GoogleAppsDriveLabelsV2FieldIntegerOptions",
          "description": "Integer field options."
        },
        "appliedCapabilities": {
          "$ref": "GoogleAppsDriveLabelsV2FieldAppliedCapabilities",
          "readOnly": true,
          "description": "Output only. The capabilities this user has on this field and its value when the label is applied on Drive items."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time this field was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "description": "Output only. The key of a field, unique within a label or library. This value is autogenerated. Matches the regex: `([a-zA-Z0-9])+`",
          "type": "string",
          "readOnly": true
        },
        "updater": {
          "description": "Output only. The user who modified this field.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2UserInfo"
        },
        "userOptions": {
          "$ref": "GoogleAppsDriveLabelsV2FieldUserOptions",
          "description": "User field options."
        },
        "lockStatus": {
          "$ref": "GoogleAppsDriveLabelsV2LockStatus",
          "description": "Output only. The LockStatus of this field.",
          "readOnly": true
        },
        "publisher": {
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "description": "Output only. The user who published this field. This value has no meaning when the field is not published."
        },
        "displayHints": {
          "description": "Output only. UI display hints for rendering a field.",
          "$ref": "GoogleAppsDriveLabelsV2FieldDisplayHints",
          "readOnly": true
        },
        "dateOptions": {
          "description": "Date field options.",
          "$ref": "GoogleAppsDriveLabelsV2FieldDateOptions"
        },
        "updateTime": {
          "description": "Output only. The time this field was updated.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        },
        "creator": {
          "description": "Output only. The user who created this field.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2UserInfo"
        },
        "properties": {
          "description": "The basic properties of the field.",
          "$ref": "GoogleAppsDriveLabelsV2FieldProperties"
        },
        "lifecycle": {
          "readOnly": true,
          "description": "Output only. The lifecycle of this field.",
          "$ref": "GoogleAppsDriveLabelsV2Lifecycle"
        },
        "selectionOptions": {
          "description": "Selection field options.",
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptions"
        },
        "schemaCapabilities": {
          "readOnly": true,
          "description": "Output only. The capabilities this user has when editing this field.",
          "$ref": "GoogleAppsDriveLabelsV2FieldSchemaCapabilities"
        },
        "disabler": {
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "readOnly": true,
          "description": "Output only. The user who disabled this field. This value has no meaning when the field is not disabled."
        },
        "textOptions": {
          "description": "Text field options.",
          "$ref": "GoogleAppsDriveLabelsV2FieldTextOptions"
        },
        "disableTime": {
          "description": "Output only. The time this field was disabled. This value has no meaning when the field is not disabled.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "queryKey": {
          "readOnly": true,
          "description": "Output only. The key to use when constructing Drive search queries to find files based on values defined for this field on files. For example, \"`{query_key}` \u003e 2001-01-01\".",
          "type": "string"
        }
      }
    },
    "GoogleAppsDriveLabelsV2FieldIntegerOptions": {
      "description": "Options for the Integer field type.",
      "id": "GoogleAppsDriveLabelsV2FieldIntegerOptions",
      "properties": {
        "minValue": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The minimum valid value for the integer field.",
          "type": "string"
        },
        "maxValue": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. The maximum valid value for the integer field.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsResponse": {
      "type": "object",
      "description": "Response for updating one or more Label Permissions.",
      "id": "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsResponse",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
          },
          "description": "Required. Permissions updated."
        }
      }
    },
    "GoogleAppsDriveLabelsV2LifecycleDisabledPolicy": {
      "id": "GoogleAppsDriveLabelsV2LifecycleDisabledPolicy",
      "properties": {
        "hideInSearch": {
          "type": "boolean",
          "description": "Whether to hide this disabled object in the search menu for Drive items. * When `false`, the object is generally shown in the UI as disabled but it appears in the search results when searching for Drive items. * When `true`, the object is generally hidden in the UI when searching for Drive items."
        },
        "showInApply": {
          "description": "Whether to show this disabled object in the apply menu on Drive items. * When `true`, the object is generally shown in the UI as disabled and is unselectable. * When `false`, the object is generally hidden in the UI.",
          "type": "boolean"
        }
      },
      "description": "The policy that governs how to treat a disabled label, field, or selection choice in different contexts.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDisableSelectionChoiceResponse": {
      "description": "Response following Choice disable.",
      "properties": {},
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDisableSelectionChoiceResponse",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2LongTextLimits": {
      "properties": {
        "minLength": {
          "description": "Minimum length allowed for a long text Field type.",
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "format": "int32",
          "description": "Maximum length allowed for a long text Field type.",
          "type": "integer"
        }
      },
      "description": "Limits for long text Field type.",
      "id": "GoogleAppsDriveLabelsV2LongTextLimits",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2FieldLimits": {
      "id": "GoogleAppsDriveLabelsV2FieldLimits",
      "description": "Field constants governing the structure of a Field; such as, the maximum title length, minimum and maximum field values or length, etc.",
      "type": "object",
      "properties": {
        "maxDisplayNameLength": {
          "description": "Limits for Field title.",
          "format": "int32",
          "type": "integer"
        },
        "longTextLimits": {
          "description": "Long text Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2LongTextLimits"
        },
        "maxDescriptionLength": {
          "type": "integer",
          "description": "Limits for Field description, also called help text.",
          "format": "int32"
        },
        "integerLimits": {
          "description": "Integer Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2IntegerLimits"
        },
        "selectionLimits": {
          "description": "Selection Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2SelectionLimits"
        },
        "textLimits": {
          "$ref": "GoogleAppsDriveLabelsV2TextLimits",
          "description": "The relevant limits for the specified Field.Type. Text Field limits."
        },
        "dateLimits": {
          "description": "Date Field limits.",
          "$ref": "GoogleAppsDriveLabelsV2DateLimits"
        },
        "userLimits": {
          "$ref": "GoogleAppsDriveLabelsV2UserLimits",
          "description": "User Field limits."
        },
        "maxIdLength": {
          "format": "int32",
          "description": "Max length for the id.",
          "type": "integer"
        }
      }
    },
    "GoogleAppsDriveLabelsV2FieldAppliedCapabilities": {
      "properties": {
        "canWrite": {
          "description": "Whether the user can set this field on Drive items.",
          "type": "boolean"
        },
        "canSearch": {
          "type": "boolean",
          "description": "Whether the user can search for Drive items referencing this field."
        },
        "canRead": {
          "description": "Whether the user can read related applied metadata on items.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "The capabilities related to this field on applied metadata.",
      "id": "GoogleAppsDriveLabelsV2FieldAppliedCapabilities"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldPropertiesRequest": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldPropertiesRequest",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. The Field to update."
        },
        "properties": {
          "description": "Required. Basic Field properties.",
          "$ref": "GoogleAppsDriveLabelsV2FieldProperties"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "type": "string"
        }
      },
      "description": "Request to update Field properties."
    },
    "GoogleAppsDriveLabelsV2SelectionLimits": {
      "description": "Limits for selection Field type.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2SelectionLimits",
      "properties": {
        "maxIdLength": {
          "type": "integer",
          "description": "Maximum ID length for a selection options.",
          "format": "int32"
        },
        "maxDisplayNameLength": {
          "type": "integer",
          "description": "Maximum length for display name.",
          "format": "int32"
        },
        "maxDeletedChoices": {
          "format": "int32",
          "description": "Maximum number of deleted choices.",
          "type": "integer"
        },
        "maxChoices": {
          "description": "The max number of choices.",
          "type": "integer",
          "format": "int32"
        },
        "listLimits": {
          "$ref": "GoogleAppsDriveLabelsV2ListLimits",
          "description": "Limits for list-variant of a Field type."
        }
      }
    },
    "GoogleAppsDriveLabelsV2FieldTextOptions": {
      "properties": {
        "maxLength": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "Output only. The maximum valid length of values for the text field."
        },
        "minLength": {
          "description": "Output only. The minimum valid length of values for the text field.",
          "type": "integer",
          "readOnly": true,
          "format": "int32"
        }
      },
      "description": "Options for the Text field type.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2FieldTextOptions"
    },
    "GoogleAppsDriveLabelsV2EnableLabelRequest": {
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used."
        },
        "writeControl": {
          "description": "Provides control over how write requests are executed. Defaults to unset, which means last write wins.",
          "$ref": "GoogleAppsDriveLabelsV2WriteControl"
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        }
      },
      "id": "GoogleAppsDriveLabelsV2EnableLabelRequest",
      "description": "Request to enable a label.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDisableFieldResponse": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDisableFieldResponse",
      "properties": {},
      "description": "Response following Field disable."
    },
    "GoogleAppsDriveLabelsV2LabelProperties": {
      "id": "GoogleAppsDriveLabelsV2LabelProperties",
      "description": "Basic properties of the label.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Required. Title of the label.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of the label."
        }
      }
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseResponse": {
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseResponse",
      "description": "A single response from an update.",
      "properties": {
        "updateLabel": {
          "description": "Updated basic properties of a Label.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateLabelPropertiesResponse"
        },
        "disableField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDisableFieldResponse",
          "description": "Disables Field."
        },
        "deleteField": {
          "description": "Deletes a Field from the label.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDeleteFieldResponse"
        },
        "disableSelectionChoice": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDisableSelectionChoiceResponse",
          "description": "Disables a Choice within a Selection Field."
        },
        "updateFieldType": {
          "description": "Update Field type and/or type options.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateFieldTypeResponse"
        },
        "updateField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateFieldPropertiesResponse",
          "description": "Updates basic properties of a Field."
        },
        "enableField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseEnableFieldResponse",
          "description": "Enables Field."
        },
        "createSelectionChoice": {
          "description": "Creates a new selection list option to add to a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseCreateSelectionChoiceResponse"
        },
        "enableSelectionChoice": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseEnableSelectionChoiceResponse",
          "description": "Enables a Choice within a Selection Field."
        },
        "createField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseCreateFieldResponse",
          "description": "Creates a new Field."
        },
        "updateSelectionChoiceProperties": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse",
          "description": "Updates a Choice within a Selection Field."
        },
        "deleteSelectionChoice": {
          "description": "Deletes a Choice from a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDeleteSelectionChoiceResponse"
        }
      }
    },
    "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties": {
      "description": "Basic properties of the choice.",
      "properties": {
        "badgeConfig": {
          "description": "The badge configuration for this choice. When set, the label that owns this choice is considered a \"badged label\".",
          "$ref": "GoogleAppsDriveLabelsV2BadgeConfig"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display text to show in the UI identifying this field."
        },
        "insertBeforeChoice": {
          "type": "string",
          "description": "Input only. Insert or move this choice before the indicated choice. If empty, the choice is placed at the end of the list."
        },
        "description": {
          "type": "string",
          "description": "The description of this label."
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties"
    },
    "GoogleAppsDriveLabelsV2FieldDateOptions": {
      "description": "Options for the date field type.",
      "id": "GoogleAppsDriveLabelsV2FieldDateOptions",
      "properties": {
        "dateFormat": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. ICU date format."
        },
        "maxValue": {
          "description": "Output only. Maximum valid value (year, month, day).",
          "readOnly": true,
          "$ref": "GoogleTypeDate"
        },
        "dateFormatType": {
          "description": "Localized date formatting option. Field values are rendered in this format according to their locale.",
          "enumDescriptions": [
            "Date format unspecified.",
            "Includes full month name. For example, January 12, 1999 (MMMM d, y)",
            "Short, numeric, representation. For example, 12/13/99 (M/d/yy)"
          ],
          "type": "string",
          "enum": [
            "DATE_FORMAT_UNSPECIFIED",
            "LONG_DATE",
            "SHORT_DATE"
          ]
        },
        "minValue": {
          "$ref": "GoogleTypeDate",
          "description": "Output only. Minimum valid value (year, month, day).",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints": {
      "description": "UI display hints for rendering an option.",
      "properties": {
        "shownInApply": {
          "type": "boolean",
          "description": "This option should be shown in the apply menu when applying values to a Drive item."
        },
        "badgeColors": {
          "description": "The colors to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`.",
          "$ref": "GoogleAppsDriveLabelsV2BadgeColors"
        },
        "badgePriority": {
          "type": "string",
          "format": "int64",
          "description": "The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority."
        },
        "darkBadgeColors": {
          "description": "The dark-mode color to use for the badge. Changed to Google Material colors based on the chosen `properties.badge_config.color`.",
          "$ref": "GoogleAppsDriveLabelsV2BadgeColors"
        },
        "hiddenInSearch": {
          "type": "boolean",
          "description": "This option should be hidden in the search menu when searching for Drive items."
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the option should be shown in the UI as disabled."
        }
      },
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints"
    },
    "GoogleAppsDriveLabelsV2FieldDisplayHints": {
      "id": "GoogleAppsDriveLabelsV2FieldDisplayHints",
      "properties": {
        "shownInApply": {
          "type": "boolean",
          "description": "This field should be shown in the apply menu when applying values to a Drive item."
        },
        "hiddenInSearch": {
          "description": "This field should be hidden in the search menu when searching for Drive items.",
          "type": "boolean"
        },
        "required": {
          "description": "Whether the field should be shown as required in the UI.",
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the field should be shown in the UI as disabled."
        }
      },
      "description": "UI display hints for rendering a field.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2LabelLock": {
      "properties": {
        "creator": {
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "description": "Output only. The user whose credentials were used to create the LabelLock. This will not be present if no user was responsible for creating the LabelLock."
        },
        "createTime": {
          "description": "Output only. The time this LabelLock was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "enumDescriptions": [
            "Unknown state.",
            "The LabelLock is active and is being enforced by the server.",
            "The LabelLock is being deleted. The LabelLock will continue to be enforced by the server until it has been fully removed."
          ],
          "description": "Output only. This LabelLock's state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETING"
          ]
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of this LabelLock.",
          "readOnly": true
        },
        "deleteTime": {
          "readOnly": true,
          "description": "Output only. A timestamp indicating when this LabelLock was scheduled for deletion. This will be present only if this LabelLock is in the DELETING state.",
          "type": "string",
          "format": "google-datetime"
        },
        "choiceId": {
          "type": "string",
          "description": "The ID of the Selection Field Choice that should be locked. If present, `field_id` must also be present."
        },
        "fieldId": {
          "description": "The ID of the Field that should be locked. Empty if the whole Label should be locked.",
          "type": "string"
        },
        "capabilities": {
          "description": "Output only. The user's capabilities on this LabelLock.",
          "$ref": "GoogleAppsDriveLabelsV2LabelLockCapabilities",
          "readOnly": true
        }
      },
      "id": "GoogleAppsDriveLabelsV2LabelLock",
      "type": "object",
      "description": "A Lock that can be applied to a Label, Field, or Choice."
    },
    "GoogleAppsDriveLabelsV2LabelSchemaCapabilities": {
      "properties": {
        "canDelete": {
          "type": "boolean",
          "description": "Whether the user can delete this label. The user must have permission and the label must be disabled."
        },
        "canDisable": {
          "type": "boolean",
          "description": "Whether the user can disable this label. The user must have permission and this label must not already be disabled."
        },
        "canUpdate": {
          "type": "boolean",
          "description": "Whether the user can change this label."
        },
        "canEnable": {
          "description": "Whether the user can enable this label. The user must have permission and this label must be disabled.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "The capabilities related to this label when editing the label.",
      "id": "GoogleAppsDriveLabelsV2LabelSchemaCapabilities"
    },
    "GoogleAppsDriveLabelsV2Lifecycle": {
      "id": "GoogleAppsDriveLabelsV2Lifecycle",
      "description": "The lifecycle state of an object, such as label, field, or choice. The lifecycle enforces the following transitions: * `UNPUBLISHED_DRAFT` (starting state) * `UNPUBLISHED_DRAFT` -\u003e `PUBLISHED` * `UNPUBLISHED_DRAFT` -\u003e (Deleted) * `PUBLISHED` -\u003e `DISABLED` * `DISABLED` -\u003e `PUBLISHED` * `DISABLED` -\u003e (Deleted) The published and disabled states have some distinct characteristics: * Published—Some kinds of changes might be made to an object in this state, in which case `has_unpublished_changes` will be true. Also, some kinds of changes are not permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the label are rejected. * Disabled—When disabled, the configured `DisabledPolicy` takes effect.",
      "properties": {
        "hasUnpublishedChanges": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the object associated with this lifecycle has unpublished changes."
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "UNPUBLISHED_DRAFT",
            "PUBLISHED",
            "DISABLED",
            "DELETED"
          ],
          "description": "Output only. The state of the object associated with this lifecycle.",
          "enumDescriptions": [
            "Unknown State.",
            "The initial state of an object. Once published, the object can never return to this state. Once an object is published, certain kinds of changes are no longer permitted.",
            "The object has been published. The object might have unpublished draft changes as indicated by `has_unpublished_changes`.",
            "The object has been published and has since been disabled. The object might have unpublished draft changes as indicated by `has_unpublished_changes`.",
            "The object has been deleted."
          ]
        },
        "disabledPolicy": {
          "$ref": "GoogleAppsDriveLabelsV2LifecycleDisabledPolicy",
          "description": "The policy that governs how to show a disabled label, field, or selection choice."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2Label": {
      "description": "A label defines a taxonomy that can be applied to Drive items in order to organize and search across items. Labels can be simple strings, or can contain fields that describe additional metadata that can be further used to organize and search Drive items.",
      "properties": {
        "revisionCreator": {
          "readOnly": true,
          "description": "Output only. The user who created this label revision.",
          "$ref": "GoogleAppsDriveLabelsV2UserInfo"
        },
        "appliedCapabilities": {
          "description": "Output only. The capabilities related to this label on applied metadata.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2LabelAppliedCapabilities"
        },
        "revisionId": {
          "description": "Output only. Revision ID of the label. Revision ID might be part of the label `name` depending on the request issued. A new revision is created whenever revisioned properties of a label are changed. Matches the regex: `([a-zA-Z0-9])+`",
          "readOnly": true,
          "type": "string"
        },
        "lifecycle": {
          "readOnly": true,
          "description": "Output only. The lifecycle state of the label including whether it's published, deprecated, and has draft changes.",
          "$ref": "GoogleAppsDriveLabelsV2Lifecycle"
        },
        "name": {
          "description": "Output only. Resource name of the label. Will be in the form of either: `labels/{id}` or `labels/{id}@{revision_id}` depending on the request. See `id` and `revision_id` below.",
          "type": "string",
          "readOnly": true
        },
        "disableTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time this label was disabled. This value has no meaning when the label is not disabled.",
          "type": "string"
        },
        "displayHints": {
          "$ref": "GoogleAppsDriveLabelsV2LabelDisplayHints",
          "readOnly": true,
          "description": "Output only. UI display hints for rendering the label."
        },
        "creator": {
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "readOnly": true,
          "description": "Output only. The user who created this label."
        },
        "lockStatus": {
          "description": "Output only. The LockStatus of this label.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2LockStatus"
        },
        "publisher": {
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "description": "Output only. The user who published this label. This value has no meaning when the label is not published."
        },
        "schemaCapabilities": {
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2LabelSchemaCapabilities",
          "description": "Output only. The capabilities the user has on this label."
        },
        "disabler": {
          "description": "Output only. The user who disabled this label. This value has no meaning when the label is not disabled.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2UserInfo"
        },
        "learnMoreUri": {
          "type": "string",
          "description": "Custom URL to present to users to allow them to learn more about this label and how it should be used."
        },
        "properties": {
          "description": "Required. The basic properties of the label.",
          "$ref": "GoogleAppsDriveLabelsV2LabelProperties"
        },
        "fields": {
          "type": "array",
          "description": "List of fields in descending priority order.",
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2Field"
          }
        },
        "revisionCreateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time this label revision was created.",
          "type": "string"
        },
        "id": {
          "description": "Output only. Globally unique identifier of this label. ID makes up part of the label `name`, but unlike `name`, ID is consistent between revisions. Matches the regex: `([a-zA-Z0-9])+`",
          "type": "string",
          "readOnly": true
        },
        "publishTime": {
          "description": "Output only. The time this label was published. This value has no meaning when the label is not published.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        },
        "labelType": {
          "enumDescriptions": [
            "Unknown label type.",
            "Shared labels may be shared with users to apply to Drive items.",
            "Admin-owned label. Only creatable and editable by admins. Supports some additional admin-only features.",
            "A label owned by an internal Google application rather than a customer. These labels are read-only."
          ],
          "type": "string",
          "enum": [
            "LABEL_TYPE_UNSPECIFIED",
            "SHARED",
            "ADMIN",
            "GOOGLE_APP"
          ],
          "description": "Required. The type of label."
        },
        "customer": {
          "description": "Output only. The customer this label belongs to. For example: \"customers/123abc789.\"",
          "readOnly": true,
          "type": "string"
        },
        "appliedLabelPolicy": {
          "readOnly": true,
          "description": "Output only. Behavior of this label when it's applied to Drive items.",
          "$ref": "GoogleAppsDriveLabelsV2LabelAppliedLabelPolicy"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time this label was created.",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2Label",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2FieldListOptions": {
      "description": "Options for a multi-valued variant of an associated field type.",
      "id": "GoogleAppsDriveLabelsV2FieldListOptions",
      "properties": {
        "maxEntries": {
          "type": "integer",
          "description": "Maximum number of entries permitted.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2LabelLockCapabilities": {
      "description": "A description of a user's capabilities on a LabelLock.",
      "id": "GoogleAppsDriveLabelsV2LabelLockCapabilities",
      "properties": {
        "canViewPolicy": {
          "type": "boolean",
          "description": "True if the user is authorized to view the policy."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestRequest": {
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestRequest",
      "description": "A single kind of update to apply to a Label.",
      "properties": {
        "enableSelectionChoice": {
          "description": "Enable a Choice within a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestEnableSelectionChoiceRequest"
        },
        "updateLabel": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateLabelPropertiesRequest",
          "description": "Updates the Label properties."
        },
        "updateFieldType": {
          "description": "Update Field type and/or type options.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest"
        },
        "createField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateFieldRequest",
          "description": "Creates a new Field."
        },
        "deleteSelectionChoice": {
          "description": "Delete a Choice within a Selection Field.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDeleteSelectionChoiceRequest"
        },
        "updateField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldPropertiesRequest",
          "description": "Updates basic properties of a Field."
        },
        "createSelectionChoice": {
          "description": "Creates Choice within a Selection field.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateSelectionChoiceRequest"
        },
        "disableField": {
          "description": "Disables the Field.",
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDisableFieldRequest"
        },
        "disableSelectionChoice": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDisableSelectionChoiceRequest",
          "description": "Disable a Choice within a Selection Field."
        },
        "enableField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestEnableFieldRequest",
          "description": "Enables the Field."
        },
        "updateSelectionChoiceProperties": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest",
          "description": "Update a Choice properties within a Selection Field."
        },
        "deleteField": {
          "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDeleteFieldRequest",
          "description": "Deletes a Field from the label."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDeleteFieldResponse": {
      "description": "Response following Field delete.",
      "type": "object",
      "properties": {},
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDeleteFieldResponse"
    },
    "GoogleAppsDriveLabelsV2LabelDisplayHints": {
      "description": "UI display hints for rendering the label.",
      "properties": {
        "priority": {
          "format": "int64",
          "description": "Order to display label in a list.",
          "type": "string"
        },
        "disabled": {
          "description": "Whether the label should be shown in the UI as disabled.",
          "type": "boolean"
        },
        "shownInApply": {
          "description": "This label should be shown in the apply menu when applying values to a Drive item.",
          "type": "boolean"
        },
        "hiddenInSearch": {
          "description": "This label should be hidden in the search menu when searching for Drive items.",
          "type": "boolean"
        }
      },
      "id": "GoogleAppsDriveLabelsV2LabelDisplayHints",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDeleteFieldRequest": {
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDeleteFieldRequest",
      "properties": {
        "id": {
          "description": "Required. ID of the Field to delete.",
          "type": "string"
        }
      },
      "description": "Request to delete the Field.",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2ListLimits": {
      "properties": {
        "maxEntries": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of values allowed for the Field type."
        }
      },
      "description": "Limits for list-variant of a Field type.",
      "id": "GoogleAppsDriveLabelsV2ListLimits",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2PublishLabelRequest": {
      "id": "GoogleAppsDriveLabelsV2PublishLabelRequest",
      "description": "Request to publish a label.",
      "properties": {
        "writeControl": {
          "description": "Provides control over how write requests are executed. Defaults to unset, which means last write wins.",
          "$ref": "GoogleAppsDriveLabelsV2WriteControl"
        },
        "languageCode": {
          "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.",
          "type": "string"
        },
        "useAdminAccess": {
          "type": "boolean",
          "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestEnableFieldRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. ID of the Field to enable.",
          "type": "string"
        }
      },
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestEnableFieldRequest",
      "description": "Request to enable the Field."
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestEnableSelectionChoiceRequest": {
      "properties": {
        "id": {
          "description": "Required. Choice to enable.",
          "type": "string"
        },
        "fieldId": {
          "type": "string",
          "description": "Required. The Selection Field in which a Choice will be enabled."
        }
      },
      "type": "object",
      "description": "Request to enable a Choice.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestEnableSelectionChoiceRequest"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDisableSelectionChoiceRequest": {
      "type": "object",
      "description": "Request to disable a Choice.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestDisableSelectionChoiceRequest",
      "properties": {
        "id": {
          "type": "string",
          "description": "Required. Choice to disable."
        },
        "disabledPolicy": {
          "$ref": "GoogleAppsDriveLabelsV2LifecycleDisabledPolicy",
          "description": "Required. The disabled policy to update."
        },
        "fieldId": {
          "description": "Required. The Selection Field in which a Choice will be disabled.",
          "type": "string"
        },
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field."
        }
      }
    },
    "GoogleAppsDriveLabelsV2BadgeColors": {
      "id": "GoogleAppsDriveLabelsV2BadgeColors",
      "description": "The color derived from BadgeConfig and changed to the closest recommended supported color.",
      "properties": {
        "backgroundColor": {
          "description": "Output only. Badge background that pairs with the foreground.",
          "$ref": "GoogleTypeColor",
          "readOnly": true
        },
        "soloColor": {
          "readOnly": true,
          "$ref": "GoogleTypeColor",
          "description": "Output only. Color that can be used for text without a background."
        },
        "foregroundColor": {
          "description": "Output only. Badge foreground that pairs with the background.",
          "readOnly": true,
          "$ref": "GoogleTypeColor"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2ListLabelsResponse": {
      "id": "GoogleAppsDriveLabelsV2ListLabelsResponse",
      "type": "object",
      "description": "Response for listing Labels.",
      "properties": {
        "labels": {
          "items": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "type": "array",
          "description": "Labels."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token of the next page in the response."
        }
      }
    },
    "GoogleAppsDriveLabelsV2WriteControl": {
      "description": "Provides control over how write requests are executed. When not specified, the last write wins.",
      "id": "GoogleAppsDriveLabelsV2WriteControl",
      "properties": {
        "requiredRevisionId": {
          "description": "The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice": {
      "properties": {
        "properties": {
          "description": "Basic properties of the choice.",
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties"
        },
        "publishTime": {
          "format": "google-datetime",
          "description": "Output only. The time this choice was published. This value has no meaning when the choice is not published.",
          "readOnly": true,
          "type": "string"
        },
        "appliedCapabilities": {
          "description": "Output only. The capabilities related to this choice on applied metadata.",
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceAppliedCapabilities"
        },
        "creator": {
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "description": "Output only. The user who created this choice.",
          "readOnly": true
        },
        "disabler": {
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "description": "Output only. The user who disabled this choice. This value has no meaning when the option is not disabled.",
          "readOnly": true
        },
        "schemaCapabilities": {
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceSchemaCapabilities",
          "description": "Output only. The capabilities related to this option when editing the option.",
          "readOnly": true
        },
        "updateTime": {
          "description": "Output only. The time this choice was updated last.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "publisher": {
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "description": "Output only. The user who published this choice. This value has no meaning when the choice is not published.",
          "readOnly": true
        },
        "disableTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time this choice was disabled. This value has no meaning when the choice is not disabled."
        },
        "lifecycle": {
          "$ref": "GoogleAppsDriveLabelsV2Lifecycle",
          "description": "Output only. Lifecycle of the choice.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The unique value of the choice. This ID is autogenerated. Matches the regex: `([a-zA-Z0-9_])+`."
        },
        "createTime": {
          "description": "Output only. The time this choice was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "lockStatus": {
          "description": "Output only. The LockStatus of this choice.",
          "$ref": "GoogleAppsDriveLabelsV2LockStatus",
          "readOnly": true
        },
        "updater": {
          "readOnly": true,
          "$ref": "GoogleAppsDriveLabelsV2UserInfo",
          "description": "Output only. The user who updated this choice last."
        },
        "displayHints": {
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints",
          "readOnly": true,
          "description": "Output only. UI display hints for rendering a choice."
        }
      },
      "description": "Selection field choice.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoice"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseEnableSelectionChoiceResponse": {
      "properties": {},
      "description": "Response following Choice enable.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseEnableSelectionChoiceResponse"
    },
    "GoogleAppsDriveLabelsV2DateLimits": {
      "type": "object",
      "properties": {
        "minValue": {
          "$ref": "GoogleTypeDate",
          "description": "Minimum value for the date Field type."
        },
        "maxValue": {
          "$ref": "GoogleTypeDate",
          "description": "Maximum value for the date Field type."
        }
      },
      "description": "Limits for date Field type.",
      "id": "GoogleAppsDriveLabelsV2DateLimits"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateFieldRequest": {
      "properties": {
        "field": {
          "description": "Required. Field to create.",
          "$ref": "GoogleAppsDriveLabelsV2Field"
        }
      },
      "type": "object",
      "description": "Request to create a Field within a Label.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestCreateFieldRequest"
    },
    "GoogleTypeDate": {
      "id": "GoogleTypeDate",
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
      "properties": {
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "type": "integer",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2BadgeConfig": {
      "description": "Badge status of the label.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2BadgeConfig",
      "properties": {
        "color": {
          "description": "The color of the badge. When not specified, no badge is rendered. The background, foreground, and solo (light and dark mode) colors set here are changed in the Drive UI into the closest recommended supported color.",
          "$ref": "GoogleTypeColor"
        },
        "priorityOverride": {
          "description": "Override the default global priority of this badge. When set to 0, the default priority heuristic is used.",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "GoogleAppsDriveLabelsV2LabelLimits": {
      "description": "Label constraints governing the structure of a Label; such as, the maximum number of Fields allowed and maximum length of the label title.",
      "id": "GoogleAppsDriveLabelsV2LabelLimits",
      "type": "object",
      "properties": {
        "maxTitleLength": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of characters allowed for the title."
        },
        "fieldLimits": {
          "$ref": "GoogleAppsDriveLabelsV2FieldLimits",
          "description": "The limits for Fields."
        },
        "maxDraftRevisions": {
          "description": "The maximum number of draft revisions that will be kept before deleting old drafts.",
          "format": "int32",
          "type": "integer"
        },
        "maxDescriptionLength": {
          "type": "integer",
          "description": "The maximum number of characters allowed for the description.",
          "format": "int32"
        },
        "maxDeletedFields": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of published Fields that can be deleted."
        },
        "maxFields": {
          "format": "int32",
          "description": "The maximum number of Fields allowed within the label.",
          "type": "integer"
        },
        "name": {
          "description": "Resource name.",
          "type": "string"
        }
      }
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest": {
      "type": "object",
      "description": "Request to update a Choice properties.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateSelectionChoicePropertiesRequest",
      "properties": {
        "properties": {
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceProperties",
          "description": "Required. The Choice properties to update."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "The fields that should be updated. At least one field must be specified. The root `properties` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Required. The Choice to update."
        },
        "fieldId": {
          "description": "Required. The Selection Field to update.",
          "type": "string"
        }
      }
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest": {
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequestUpdateFieldTypeRequest",
      "description": "Request to change the type of a Field.",
      "properties": {
        "id": {
          "description": "Required. The Field to update.",
          "type": "string"
        },
        "longTextOptions": {
          "description": "Update field to Long Text.",
          "$ref": "GoogleAppsDriveLabelsV2FieldLongTextOptions"
        },
        "integerOptions": {
          "$ref": "GoogleAppsDriveLabelsV2FieldIntegerOptions",
          "description": "Update field to Integer."
        },
        "dateOptions": {
          "description": "Update field to Date.",
          "$ref": "GoogleAppsDriveLabelsV2FieldDateOptions"
        },
        "userOptions": {
          "description": "Update field to User.",
          "$ref": "GoogleAppsDriveLabelsV2FieldUserOptions"
        },
        "textOptions": {
          "$ref": "GoogleAppsDriveLabelsV2FieldTextOptions",
          "description": "Update field to Text."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "The fields that should be updated. At least one field must be specified. The root of `type_options` is implied and should not be specified. A single `*` can be used as short-hand for updating every field."
        },
        "selectionOptions": {
          "description": "Update field to Selection.",
          "$ref": "GoogleAppsDriveLabelsV2FieldSelectionOptions"
        }
      },
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse": {
      "properties": {
        "priority": {
          "description": "The priority of the updated choice. The priority may change from what was specified to assure contiguous priorities between choices (1-n).",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Response following update to Selection Choice properties.",
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseUpdateSelectionChoicePropertiesResponse"
    },
    "GoogleTypeColor": {
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to and from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't have information about the absolute color space that should be used to interpret the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most `1e-5`. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "properties": {
        "red": {
          "format": "float",
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "green": {
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "type": "number",
          "format": "float"
        },
        "blue": {
          "type": "number",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float"
        },
        "alpha": {
          "format": "float",
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0).",
          "type": "number"
        }
      },
      "id": "GoogleTypeColor",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2LockStatus": {
      "properties": {
        "locked": {
          "description": "Output only. Indicates whether this label component is the (direct) target of a LabelLock. A label component can be implicitly locked even if it's not the direct target of a LabelLock, in which case this field is set to false.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "description": "Contains information about whether a label component should be considered locked.",
      "type": "object",
      "id": "GoogleAppsDriveLabelsV2LockStatus"
    },
    "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDeleteSelectionChoiceResponse": {
      "description": "Response following Choice delete.",
      "properties": {},
      "id": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponseDeleteSelectionChoiceResponse",
      "type": "object"
    },
    "GoogleAppsDriveLabelsV2FieldUserOptions": {
      "description": "Options for the user field type.",
      "properties": {
        "listOptions": {
          "$ref": "GoogleAppsDriveLabelsV2FieldListOptions",
          "description": "When specified, indicates that this field supports a list of values. Once the field is published, this cannot be changed."
        }
      },
      "id": "GoogleAppsDriveLabelsV2FieldUserOptions",
      "type": "object"
    }
  },
  "protocol": "rest",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "rootUrl": "https://drivelabels.googleapis.com/",
  "version": "v2",
  "baseUrl": "https://drivelabels.googleapis.com/",
  "discoveryVersion": "v1",
  "documentationLink": "https://developers.google.com/drive/labels",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://drivelabels.mtls.googleapis.com/",
  "resources": {
    "limits": {
      "methods": {
        "getLabel": {
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2LabelLimits"
          },
          "id": "drivelabels.limits.getLabel",
          "flatPath": "v2/limits/label",
          "description": "Get the constraints on the structure of a Label; such as, the maximum number of Fields allowed and maximum length of the label title.",
          "parameterOrder": [],
          "httpMethod": "GET",
          "path": "v2/limits/label",
          "parameters": {
            "name": {
              "type": "string",
              "location": "query",
              "description": "Required. Label revision resource name Must be: \"limits/label\""
            }
          }
        }
      }
    },
    "labels": {
      "resources": {
        "permissions": {
          "methods": {
            "list": {
              "description": "Lists a Label's permissions.",
              "path": "v2/{+parent}/permissions",
              "parameters": {
                "parent": {
                  "description": "Required. The parent Label resource name on which Label Permission are listed. Format: labels/{label}",
                  "required": true,
                  "pattern": "^labels/[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The token of the page to return.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Maximum number of permissions to return per page. Default: 50. Max: 200.",
                  "format": "int32"
                },
                "useAdminAccess": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
                }
              },
              "httpMethod": "GET",
              "flatPath": "v2/labels/{labelsId}/permissions",
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2ListLabelPermissionsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "drivelabels.labels.permissions.list"
            },
            "batchDelete": {
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest"
              },
              "flatPath": "v2/labels/{labelsId}/permissions:batchDelete",
              "path": "v2/{+parent}/permissions:batchDelete",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The parent Label resource name shared by all permissions being deleted. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^labels/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "description": "Deletes Label permissions. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
              "parameterOrder": [
                "parent"
              ],
              "id": "drivelabels.labels.permissions.batchDelete",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "batchUpdate": {
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsResponse"
              },
              "description": "Updates Label permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The parent Label resource name shared by all permissions being updated. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                  "pattern": "^labels/[^/]+$",
                  "required": true
                }
              },
              "id": "drivelabels.labels.permissions.batchUpdate",
              "httpMethod": "POST",
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsRequest"
              },
              "flatPath": "v2/labels/{labelsId}/permissions:batchUpdate",
              "path": "v2/{+parent}/permissions:batchUpdate",
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "flatPath": "v2/labels/{labelsId}/permissions/{permissionsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. Label Permission resource name.",
                  "required": true,
                  "pattern": "^labels/[^/]+/permissions/[^/]+$",
                  "location": "path"
                },
                "useAdminAccess": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access."
                }
              },
              "description": "Deletes a Label's permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "path": "v2/{+name}",
              "id": "drivelabels.labels.permissions.delete",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "path": "v2/{+parent}/permissions",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The parent Label resource name on the Label Permission is created. Format: labels/{label}",
                  "pattern": "^labels/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "useAdminAccess": {
                  "location": "query",
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                  "type": "boolean"
                }
              },
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
              },
              "flatPath": "v2/labels/{labelsId}/permissions",
              "id": "drivelabels.labels.permissions.create",
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
              },
              "httpMethod": "POST",
              "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing."
            }
          }
        },
        "revisions": {
          "methods": {
            "updatePermissions": {
              "request": {
                "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
              },
              "path": "v2/{+parent}/permissions",
              "id": "drivelabels.labels.revisions.updatePermissions",
              "flatPath": "v2/labels/{labelsId}/revisions/{revisionsId}/permissions",
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^labels/[^/]+/revisions/[^/]+$",
                  "description": "Required. The parent Label resource name.",
                  "location": "path",
                  "type": "string"
                },
                "useAdminAccess": {
                  "location": "query",
                  "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                  "type": "boolean"
                }
              },
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
              },
              "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "PATCH"
            }
          },
          "resources": {
            "permissions": {
              "methods": {
                "batchDelete": {
                  "flatPath": "v2/labels/{labelsId}/revisions/{revisionsId}/permissions:batchDelete",
                  "path": "v2/{+parent}/permissions:batchDelete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "drivelabels.labels.revisions.permissions.batchDelete",
                  "description": "Deletes Label permissions. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "request": {
                    "$ref": "GoogleAppsDriveLabelsV2BatchDeleteLabelPermissionsRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent Label resource name shared by all permissions being deleted. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                      "required": true
                    }
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "id": "drivelabels.labels.revisions.permissions.delete",
                  "path": "v2/{+name}",
                  "parameters": {
                    "useAdminAccess": {
                      "location": "query",
                      "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Required. Label Permission resource name.",
                      "location": "path",
                      "pattern": "^labels/[^/]+/revisions/[^/]+/permissions/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Deletes a Label's permission. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "flatPath": "v2/labels/{labelsId}/revisions/{revisionsId}/permissions/{permissionsId}"
                },
                "list": {
                  "parameters": {
                    "useAdminAccess": {
                      "type": "boolean",
                      "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of permissions to return per page. Default: 50. Max: 200.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "The token of the page to return.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent Label resource name on which Label Permission are listed. Format: labels/{label}",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/labels/{labelsId}/revisions/{revisionsId}/permissions",
                  "description": "Lists a Label's permissions.",
                  "path": "v2/{+parent}/permissions",
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2ListLabelPermissionsResponse"
                  },
                  "id": "drivelabels.labels.revisions.permissions.list"
                },
                "batchUpdate": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The parent Label resource name shared by all permissions being updated. Format: labels/{label} If this is set, the parent field in the UpdateLabelPermissionRequest messages must either be empty or match this field.",
                      "location": "path",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v2/{+parent}/permissions:batchUpdate",
                  "flatPath": "v2/labels/{labelsId}/revisions/{revisionsId}/permissions:batchUpdate",
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsResponse"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleAppsDriveLabelsV2BatchUpdateLabelPermissionsRequest"
                  },
                  "description": "Updates Label permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "id": "drivelabels.labels.revisions.permissions.batchUpdate"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
                  "parameters": {
                    "useAdminAccess": {
                      "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent Label resource name on the Label Permission is created. Format: labels/{label}"
                    }
                  },
                  "id": "drivelabels.labels.revisions.permissions.create",
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
                  },
                  "request": {
                    "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
                  },
                  "path": "v2/{+parent}/permissions",
                  "flatPath": "v2/labels/{labelsId}/revisions/{revisionsId}/permissions"
                }
              }
            },
            "locks": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/locks",
                  "description": "Lists the LabelLocks on a Label.",
                  "flatPath": "v2/labels/{labelsId}/revisions/{revisionsId}/locks",
                  "response": {
                    "$ref": "GoogleAppsDriveLabelsV2ListLabelLocksResponse"
                  },
                  "id": "drivelabels.labels.revisions.locks.list",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^labels/[^/]+/revisions/[^/]+$",
                      "description": "Required. Label on which Locks are applied. Format: labels/{label}",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "description": "Maximum number of Locks to return per page. Default: 100. Max: 200.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The token of the page to return.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "locks": {
          "methods": {
            "list": {
              "description": "Lists the LabelLocks on a Label.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "id": "drivelabels.labels.locks.list",
              "parameters": {
                "parent": {
                  "description": "Required. Label on which Locks are applied. Format: labels/{label}",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^labels/[^/]+$"
                },
                "pageToken": {
                  "description": "The token of the page to return.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Maximum number of Locks to return per page. Default: 100. Max: 200.",
                  "format": "int32"
                }
              },
              "flatPath": "v2/labels/{labelsId}/locks",
              "response": {
                "$ref": "GoogleAppsDriveLabelsV2ListLabelLocksResponse"
              },
              "path": "v2/{+parent}/locks"
            }
          }
        }
      },
      "methods": {
        "delete": {
          "id": "drivelabels.labels.delete",
          "httpMethod": "DELETE",
          "parameters": {
            "writeControl.requiredRevisionId": {
              "location": "query",
              "type": "string",
              "description": "The revision_id of the label that the write request will be applied to. If this is not the latest revision of the label, the request will not be processed and will return a 400 Bad Request error."
            },
            "useAdminAccess": {
              "type": "boolean",
              "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
              "location": "query"
            },
            "name": {
              "pattern": "^labels/[^/]+$",
              "location": "path",
              "description": "Required. Label resource name.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v2/labels/{labelsId}",
          "path": "v2/{+name}",
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Permanently deletes a Label and related metadata on Drive Items. Once deleted, the Label and related Drive item metadata will be deleted. Only draft Labels, and disabled Labels may be deleted."
        },
        "create": {
          "id": "drivelabels.labels.create",
          "parameters": {
            "useAdminAccess": {
              "type": "boolean",
              "location": "query",
              "description": "Set to `true` in order to use the user's admin privileges. The server will verify the user is an admin before allowing access."
            },
            "languageCode": {
              "location": "query",
              "description": "The BCP-47 language code to use for evaluating localized Field labels in response. When not specified, values in the default configured language will be used.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "flatPath": "v2/labels",
          "description": "Creates a new Label.",
          "parameterOrder": [],
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "path": "v2/labels",
          "httpMethod": "POST"
        },
        "enable": {
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2EnableLabelRequest"
          },
          "flatPath": "v2/labels/{labelsId}:enable",
          "description": "Enable a disabled Label and restore it to its published state. This will result in a new published revision based on the current disabled published revision. If there is an existing disabled draft revision, a new revision will be created based on that draft and will be enabled.",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "httpMethod": "POST",
          "path": "v2/{+name}:enable",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "pattern": "^labels/[^/]+$",
              "required": true,
              "location": "path",
              "description": "Required. Label resource name.",
              "type": "string"
            }
          },
          "id": "drivelabels.labels.enable"
        },
        "updatePermissions": {
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
          },
          "parameters": {
            "parent": {
              "pattern": "^labels/[^/]+$",
              "location": "path",
              "required": true,
              "description": "Required. The parent Label resource name.",
              "type": "string"
            },
            "useAdminAccess": {
              "description": "Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.",
              "type": "boolean",
              "location": "query"
            }
          },
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2LabelPermission"
          },
          "id": "drivelabels.labels.updatePermissions",
          "description": "Updates a Label's permissions. If a permission for the indicated principal doesn't exist, a new Label Permission is created, otherwise the existing permission is updated. Permissions affect the Label resource as a whole, are not revisioned, and do not require publishing.",
          "path": "v2/{+parent}/permissions",
          "flatPath": "v2/labels/{labelsId}/permissions",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "parent"
          ]
        },
        "delta": {
          "path": "v2/{+name}:delta",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelResponse"
          },
          "id": "drivelabels.labels.delta",
          "flatPath": "v2/labels/{labelsId}:delta",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "description": "Updates a single Label by applying a set of update requests resulting in a new draft revision. The batch update is all-or-nothing: If any of the update requests are invalid, no changes are applied. The resulting draft revision must be published before the changes may be used with Drive Items.",
          "parameters": {
            "name": {
              "pattern": "^labels/[^/]+$",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Required. The resource name of the Label to update."
            }
          },
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2DeltaUpdateLabelRequest"
          }
        },
        "publish": {
          "path": "v2/{+name}:publish",
          "description": "Publish all draft changes to the Label. Once published, the Label may not return to its draft state. See `google.apps.drive.labels.v2.Lifecycle` for more information. Publishing a Label will result in a new published revision. All previous draft revisions will be deleted. Previous published revisions will be kept but are subject to automated deletion as needed. Once published, some changes are no longer permitted. Generally, any change that would invalidate or cause new restrictions on existing metadata related to the Label will be rejected. For example, the following changes to a Label will be rejected after the Label is published: * The label cannot be directly deleted. It must be disabled first, then deleted. * Field.FieldType cannot be changed. * Changes to Field validation options cannot reject something that was previously accepted. * Reducing the max entries.",
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2PublishLabelRequest"
          },
          "parameters": {
            "name": {
              "pattern": "^labels/[^/]+$",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Required. Label resource name."
            }
          },
          "httpMethod": "POST",
          "id": "drivelabels.labels.publish",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v2/labels/{labelsId}:publish"
        },
        "list": {
          "id": "drivelabels.labels.list",
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2ListLabelsResponse"
          },
          "path": "v2/labels",
          "description": "List labels.",
          "parameterOrder": [],
          "parameters": {
            "minimumRole": {
              "type": "string",
              "description": "Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`.",
              "location": "query",
              "enum": [
                "LABEL_ROLE_UNSPECIFIED",
                "READER",
                "APPLIER",
                "ORGANIZER",
                "EDITOR"
              ],
              "enumDescriptions": [
                "Unknown role.",
                "A reader can read the label and associated metadata applied to Drive items.",
                "An applier can write associated metadata on Drive items in which they also have write access to. Implies `READER`.",
                "An organizer can pin this label in shared drives they manage and add new appliers to the label.",
                "Editors can make any update including deleting the label which also deletes the associated Drive item metadata. Implies `APPLIER`."
              ]
            },
            "pageSize": {
              "description": "Maximum number of labels to return per page. Default: 50. Max: 200.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            },
            "customer": {
              "description": "The customer to scope this list request to. For example: \"customers/abcd1234\". If unset, will return all labels within the current customer.",
              "location": "query",
              "type": "string"
            },
            "languageCode": {
              "location": "query",
              "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used.",
              "type": "string"
            },
            "view": {
              "description": "When specified, only certain fields belonging to the indicated view are returned.",
              "location": "query",
              "type": "string",
              "enum": [
                "LABEL_VIEW_BASIC",
                "LABEL_VIEW_FULL"
              ],
              "enumDescriptions": [
                "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
                "All possible fields."
              ]
            },
            "pageToken": {
              "location": "query",
              "description": "The token of the page to return.",
              "type": "string"
            },
            "useAdminAccess": {
              "description": "Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer.",
              "type": "boolean",
              "location": "query"
            },
            "publishedOnly": {
              "type": "boolean",
              "location": "query",
              "description": "Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned label resource names don't reference a specific revision (`labels/{id}`)."
            }
          },
          "flatPath": "v2/labels"
        },
        "updateLabelCopyMode": {
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2UpdateLabelCopyModeRequest"
          },
          "httpMethod": "POST",
          "id": "drivelabels.labels.updateLabelCopyMode",
          "description": "Updates a Label's `CopyMode`. Changes to this policy are not revisioned, do not require publishing, and take effect immediately.",
          "flatPath": "v2/labels/{labelsId}:updateLabelCopyMode",
          "path": "v2/{+name}:updateLabelCopyMode",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Required. The resource name of the Label to update.",
              "location": "path",
              "pattern": "^labels/[^/]+$"
            }
          }
        },
        "disable": {
          "description": "Disable a published Label. Disabling a Label will result in a new disabled published revision based on the current published revision. If there is a draft revision, a new disabled draft revision will be created based on the latest draft revision. Older draft revisions will be deleted. Once disabled, a label may be deleted with `DeleteLabel`.",
          "flatPath": "v2/labels/{labelsId}:disable",
          "parameters": {
            "name": {
              "type": "string",
              "description": "Required. Label resource name.",
              "pattern": "^labels/[^/]+$",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "POST",
          "path": "v2/{+name}:disable",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "drivelabels.labels.disable",
          "request": {
            "$ref": "GoogleAppsDriveLabelsV2DisableLabelRequest"
          }
        },
        "get": {
          "id": "drivelabels.labels.get",
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2Label"
          },
          "flatPath": "v2/labels/{labelsId}",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^labels/[^/]+$",
              "location": "path",
              "description": "Required. Label resource name. May be any of: * `labels/{id}` (equivalent to labels/{id}@latest) * `labels/{id}@latest` * `labels/{id}@published` * `labels/{id}@{revision_id}`"
            },
            "useAdminAccess": {
              "type": "boolean",
              "location": "query",
              "description": "Set to `true` in order to use the user's admin credentials. The server verifies that the user is an admin for the label before allowing access."
            },
            "languageCode": {
              "type": "string",
              "location": "query",
              "description": "The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used."
            },
            "view": {
              "location": "query",
              "enum": [
                "LABEL_VIEW_BASIC",
                "LABEL_VIEW_FULL"
              ],
              "enumDescriptions": [
                "Implies the field mask: `name,id,revision_id,label_type,properties.*`",
                "All possible fields."
              ],
              "type": "string",
              "description": "When specified, only certain fields belonging to the indicated view are returned."
            }
          },
          "description": "Get a label by its resource name. Resource name may be any of: * `labels/{id}` - See `labels/{id}@latest` * `labels/{id}@latest` - Gets the latest revision of the label. * `labels/{id}@published` - Gets the current published revision of the label. * `labels/{id}@{revision_id}` - Gets the label at the specified revision ID.",
          "parameterOrder": [
            "name"
          ],
          "path": "v2/{+name}"
        }
      }
    },
    "users": {
      "methods": {
        "getCapabilities": {
          "id": "drivelabels.users.getCapabilities",
          "response": {
            "$ref": "GoogleAppsDriveLabelsV2UserCapabilities"
          },
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^users/[^/]+/capabilities$",
              "required": true,
              "type": "string",
              "description": "Required. The resource name of the user. Only \"users/me/capabilities\" is supported."
            },
            "customer": {
              "type": "string",
              "location": "query",
              "description": "The customer to scope this request to. For example: \"customers/abcd1234\". If unset, will return settings within the current customer."
            }
          },
          "description": "Gets the user capabilities.",
          "path": "v2/{+name}",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v2/users/{usersId}/capabilities",
          "httpMethod": "GET"
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "basePath": "",
  "id": "drivelabels:v2",
  "name": "drivelabels",
  "kind": "discovery#restDescription",
  "description": "An API for managing Drive Labels",
  "batchPath": "batch",
  "title": "Drive Labels API",
  "version_module": true,
  "canonicalName": "Drive Labels",
  "servicePath": ""
}

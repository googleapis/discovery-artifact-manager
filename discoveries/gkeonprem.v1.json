{
  "batchPath": "batch",
  "servicePath": "",
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "description": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "gkeonprem",
  "discoveryVersion": "v1",
  "parameters": {
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "default": "json"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "title": "Anthos On-Prem API",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "response": {
                "$ref": "Location"
              },
              "id": "gkeonprem.projects.locations.get",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets information about a location.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "filter": {
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default."
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "path": "v1/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "id": "gkeonprem.projects.locations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service."
            }
          },
          "resources": {
            "operations": {
              "methods": {
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkeonprem.projects.locations.operations.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1/{+name}"
                },
                "cancel": {
                  "path": "v1/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation resource to be cancelled.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "gkeonprem.projects.locations.operations.cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "response": {
                    "$ref": "Empty"
                  }
                },
                "get": {
                  "id": "gkeonprem.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "list": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size."
                    }
                  },
                  "id": "gkeonprem.projects.locations.operations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                  "path": "v1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET"
                }
              }
            },
            "bareMetalClusters": {
              "methods": {
                "queryVersionConfig": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "QueryBareMetalVersionConfigResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters:queryVersionConfig",
                  "id": "gkeonprem.projects.locations.bareMetalClusters.queryVersionConfig",
                  "parameters": {
                    "createConfig.adminClusterMembership": {
                      "location": "query",
                      "description": "The admin cluster membership. This is the full resource name of the admin cluster's fleet membership. Format: \"projects/{project}/locations/{location}/memberships/{membership}\"",
                      "type": "string"
                    },
                    "upgradeConfig.clusterName": {
                      "location": "query",
                      "type": "string",
                      "description": "The user cluster resource name. This is the full resource name of the user cluster resource. Format: \"projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}\""
                    },
                    "createConfig.adminClusterName": {
                      "description": "The admin cluster resource name. This is the full resource name of the admin cluster resource. Format: \"projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}\"",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent of the project and location to query for version config. Format: \"projects/{project}/locations/{location}\""
                    }
                  },
                  "path": "v1/{+parent}/bareMetalClusters:queryVersionConfig",
                  "httpMethod": "POST",
                  "description": "Queries the bare metal user cluster version config."
                },
                "unenroll": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:unenroll",
                  "httpMethod": "DELETE",
                  "id": "gkeonprem.projects.locations.bareMetalClusters.unenroll",
                  "description": "Unenrolls an existing bare metal user cluster and its node pools from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters and node pools will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or its clients.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}:unenroll",
                  "parameters": {
                    "etag": {
                      "location": "query",
                      "type": "string",
                      "description": "The current etag of the bare metal Cluster. If an etag is provided and does not match the current etag of the cluster, deletion will be blocked and an ABORTED error will be returned."
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "description": "If set to true, and the bare metal cluster is not found, the request will succeed but no action will be taken on the server and return a completed LRO.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the bare metal user cluster to be unenrolled. Format: \"projects/{project}/locations/{location}/bareMetalClusters/{cluster}\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                      "location": "path"
                    },
                    "force": {
                      "location": "query",
                      "description": "This is required if the cluster has any associated node pools. When set, any child node pools will also be unenrolled.",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Validate the request without actually doing any updates.",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "gkeonprem.projects.locations.bareMetalClusters.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "list": {
                  "path": "v1/{+parent}/bareMetalClusters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListBareMetalClustersResponse"
                  },
                  "httpMethod": "GET",
                  "id": "gkeonprem.projects.locations.bareMetalClusters.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters",
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A resource filtering expression following https://google.aip.dev/160. When non-empty, only resource's whose attributes field matches the filter are returned."
                    },
                    "parent": {
                      "description": "Required. The parent of the project and location where the clusters are listed in. Format: \"projects/{project}/locations/{location}\"",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true
                    },
                    "view": {
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "type": "string",
                      "description": "View for bare metal Clusters. When `BASIC` is specified, only the cluster resource name and admin cluster membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete cluster configuration details.",
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a cluster resource including cluster resource name and admin cluster membership.",
                        "Includes the complete configuration for bare metal cluster resource. This is the default value for ListBareMetalClustersRequest method."
                      ]
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 50 clusters will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    }
                  },
                  "description": "Lists bare metal clusters in a given project and location."
                },
                "setIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "gkeonprem.projects.locations.bareMetalClusters.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:setIamPolicy",
                  "httpMethod": "POST"
                },
                "enroll": {
                  "request": {
                    "$ref": "EnrollBareMetalClusterRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters:enroll",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+parent}/bareMetalClusters:enroll",
                  "description": "Enrolls an existing bare metal user cluster and its node pools to the Anthos On-Prem API within a given project and location. Through enrollment, an existing cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster and/or its node pools will be expected to be performed through the API.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent of the project and location where the cluster is enrolled in. Format: \"projects/{project}/locations/{location}\""
                    }
                  },
                  "id": "gkeonprem.projects.locations.bareMetalClusters.enroll",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+resource}:getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "gkeonprem.projects.locations.bareMetalClusters.getIamPolicy"
                },
                "patch": {
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "BareMetalCluster"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "description": "Validate the request without actually doing any updates.",
                      "type": "boolean"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                      "type": "string",
                      "description": "Immutable. The bare metal user cluster resource name."
                    },
                    "updateMask": {
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the BareMetalCluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all populated fields in the BareMetalCluster message will be updated. Empty fields will be ignored unless a field mask is used.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "allowMissing": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set to true, and the bare metal cluster is not found, the request will create a new bare metal cluster with the provided configuration. The user must have both create and update permission to call Update with allow_missing set to true."
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}",
                  "id": "gkeonprem.projects.locations.bareMetalClusters.patch",
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of a single bare metal Cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}",
                  "parameters": {
                    "force": {
                      "location": "query",
                      "type": "boolean",
                      "description": "If set to true, any node pools from the cluster will also be deleted."
                    },
                    "validateOnly": {
                      "description": "Validate the request without actually doing any updates.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the bare metal cluster is not found, the request will succeed but no action will be taken on the server and return a completed LRO.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the bare metal user cluster to be deleted. Format: \"projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}\""
                    },
                    "etag": {
                      "description": "The current etag of the bare metal Cluster. If an etag is provided and does not match the current etag of the cluster, deletion will be blocked and an ABORTED error will be returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "location": "query",
                      "description": "If set to true, the deletion of a bare metal user cluster resource will succeed even if errors occur during deletion. This parameter can be used when you want to delete GCP's cluster resource and the on-prem admin cluster that hosts your user cluster is disconnected / unreachable or deleted. WARNING: Using this parameter when your user cluster still exists may result in a deleted GCP user cluster but an existing on-prem user cluster.",
                      "type": "boolean"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}",
                  "id": "gkeonprem.projects.locations.bareMetalClusters.delete",
                  "description": "Deletes a single bare metal Cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "view": {
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a cluster resource including cluster resource name and admin cluster membership.",
                        "Includes the complete configuration for bare metal cluster resource. This is the default value for GetBareMetalClusterRequest method."
                      ],
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "description": "View for bare metal user cluster. When `BASIC` is specified, only the cluster resource name and admin cluster membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete cluster configuration details.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the bare metal user cluster to get. Format: \"projects/{project}/locations/{location}/bareMetalClusters/{bare_metal_cluster}\""
                    }
                  },
                  "id": "gkeonprem.projects.locations.bareMetalClusters.get",
                  "description": "Gets details of a single bare metal Cluster.",
                  "response": {
                    "$ref": "BareMetalCluster"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "parameters": {
                    "validateOnly": {
                      "description": "Validate the request without actually doing any updates.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent of the project and location where the cluster is created in. Format: \"projects/{project}/locations/{location}\"",
                      "type": "string",
                      "required": true
                    },
                    "bareMetalClusterId": {
                      "location": "query",
                      "type": "string",
                      "description": "Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new bare metal cluster in a given project and location.",
                  "id": "gkeonprem.projects.locations.bareMetalClusters.create",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters",
                  "request": {
                    "$ref": "BareMetalCluster"
                  },
                  "path": "v1/{+parent}/bareMetalClusters",
                  "httpMethod": "POST"
                }
              },
              "resources": {
                "operations": {
                  "methods": {
                    "get": {
                      "id": "gkeonprem.projects.locations.bareMetalClusters.operations.get",
                      "path": "v1/{+name}",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/operations/{operationsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/operations/[^/]+$",
                          "required": true,
                          "description": "The name of the operation resource.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "The standard list page size.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The standard list page token."
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                          "type": "string",
                          "description": "The name of the operation's parent resource."
                        },
                        "filter": {
                          "description": "The standard list filter.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+name}/operations",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "httpMethod": "GET",
                      "id": "gkeonprem.projects.locations.bareMetalClusters.operations.list",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/operations",
                      "response": {
                        "$ref": "ListOperationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "bareMetalNodePools": {
                  "methods": {
                    "get": {
                      "description": "Gets details of a single bare metal node pool.",
                      "path": "v1/{+name}",
                      "response": {
                        "$ref": "BareMetalNodePool"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}",
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.get",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$",
                          "description": "Required. The name of the node pool to retrieve. projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}"
                        },
                        "view": {
                          "enum": [
                            "NODE_POOL_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "description": "View for bare metal node pool. When `BASIC` is specified, only the node pool resource name is returned. The default/unset value `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete node pool configuration details.",
                          "location": "query",
                          "enumDescriptions": [
                            "If the value is not set, the default `FULL` view is used.",
                            "Includes basic information of a node pool resource including node pool resource name.",
                            "Includes the complete configuration for bare metal node pool resource. This is the default value for GetBareMetalNodePoolRequest method."
                          ],
                          "type": "string"
                        }
                      }
                    },
                    "testIamPermissions": {
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "path": "v1/{+resource}:testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                        }
                      },
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.testIamPermissions",
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      }
                    },
                    "list": {
                      "parameters": {
                        "view": {
                          "description": "View for bare metal node pools. When `BASIC` is specified, only the node pool resource name is returned. The default/unset value `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete node pool configuration details.",
                          "type": "string",
                          "location": "query",
                          "enumDescriptions": [
                            "If the value is not set, the default `FULL` view is used.",
                            "Includes basic information of a node pool resource including node pool resource name.",
                            "Includes the complete configuration for bare metal node pool resource. This is the default value for ListBareMetalNodePoolsRequest method."
                          ],
                          "enum": [
                            "NODE_POOL_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ]
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListBareMetalNodePools` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListBareMetalNodePools` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of node pools to return. The service may return fewer than this value. If unspecified, at most 50 node pools will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The parent, which owns this collection of node pools. Format: projects/{project}/locations/{location}/bareMetalClusters/{bareMetalCluster}",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$"
                        }
                      },
                      "path": "v1/{+parent}/bareMetalNodePools",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists bare metal node pools in a given project, location and bare metal cluster.",
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "ListBareMetalNodePoolsResponse"
                      },
                      "httpMethod": "GET"
                    },
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.delete",
                      "description": "Deletes a single bare metal node pool.",
                      "parameters": {
                        "ignoreErrors": {
                          "type": "boolean",
                          "description": "If set to true, the deletion of a bare metal node pool resource will succeed even if errors occur during deletion. This parameter can be used when you want to delete GCP's node pool resource and you've already deleted the on-prem admin cluster that hosted your node pool. WARNING: Using this parameter when your user cluster still exists may result in a deleted GCP node pool but an existing on-prem node pool.",
                          "location": "query"
                        },
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set, only validate the request, but do not actually delete the node pool."
                        },
                        "allowMissing": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set to true, and the bare metal node pool is not found, the request will succeed but no action will be taken on the server and return a completed LRO."
                        },
                        "etag": {
                          "location": "query",
                          "type": "string",
                          "description": "The current etag of the BareMetalNodePool. If an etag is provided and does not match the current etag of the node pool, deletion will be blocked and an ABORTED error will be returned."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the node pool to delete. Format: projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "DELETE"
                    },
                    "enroll": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/bareMetalNodePools:enroll",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools:enroll",
                      "request": {
                        "$ref": "EnrollBareMetalNodePoolRequest"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The parent resource where this node pool will be created. projects/{project}/locations/{location}/bareMetalClusters/{cluster}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.enroll",
                      "description": "Enrolls an existing bare metal node pool to the Anthos On-Prem API within a given project and location. Through enrollment, an existing node pool will become Anthos On-Prem API managed. The corresponding GCP resources will be created."
                    },
                    "setIamPolicy": {
                      "path": "v1/{+resource}:setIamPolicy",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:setIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "response": {
                        "$ref": "Policy"
                      },
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$",
                          "required": true
                        }
                      },
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "httpMethod": "POST"
                    },
                    "unenroll": {
                      "path": "v1/{+name}:unenroll",
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.unenroll",
                      "description": "Unenrolls a bare metal node pool from Anthos On-Prem API.",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "allowMissing": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set to true, and the bare metal node pool is not found, the request will succeed but no action will be taken on the server and return a completed LRO."
                        },
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set, only validate the request, but do not actually unenroll the node pool."
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the node pool to unenroll. Format: projects/{project}/locations/{location}/bareMetalClusters/{cluster}/bareMetalNodePools/{nodepool}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$"
                        },
                        "etag": {
                          "type": "string",
                          "description": "The current etag of the bare metal node pool. If an etag is provided and does not match the current etag of node pool, deletion will be blocked and an ABORTED error will be returned.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:unenroll"
                    },
                    "patch": {
                      "httpMethod": "PATCH",
                      "parameters": {
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Validate the request without actually doing any updates."
                        },
                        "updateMask": {
                          "description": "Required. Field mask is used to specify the fields to be overwritten in the BareMetalNodePool resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all populated fields in the BareMetalNodePool message will be updated. Empty fields will be ignored unless a field mask is used.",
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Immutable. The bare metal node pool resource name.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$",
                          "type": "string"
                        },
                        "allowMissing": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set to true, and the bare metal node pool is not found, the request will create a new bare metal node pool with the provided configuration. The user must have both create and update permission to call Update with allow_missing set to true."
                        }
                      },
                      "description": "Updates the parameters of a single bare metal node pool.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}",
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.patch",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}",
                      "request": {
                        "$ref": "BareMetalNodePool"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "getIamPolicy": {
                      "path": "v1/{+resource}:getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}:getIamPolicy",
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "create": {
                      "path": "v1/{+parent}/bareMetalNodePools",
                      "request": {
                        "$ref": "BareMetalNodePool"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.create",
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "validateOnly": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set, only validate the request, but do not actually create the node pool."
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent resource where this node pool will be created. projects/{project}/locations/{location}/bareMetalClusters/{cluster}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+$"
                        },
                        "bareMetalNodePoolId": {
                          "type": "string",
                          "location": "query",
                          "description": "The ID to use for the node pool, which will become the final component of the node pool's resource name. This value must be up to 63 characters, and valid characters are /a-z-/. The value must not be permitted to be a UUID (or UUID-like: anything matching /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i)."
                        }
                      },
                      "description": "Creates a new bare metal node pool in a given project, location and Bare Metal cluster.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  },
                  "resources": {
                    "operations": {
                      "methods": {
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}/operations/{operationsId}",
                          "httpMethod": "GET",
                          "parameters": {
                            "name": {
                              "description": "The name of the operation resource.",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+/operations/[^/]+$",
                              "required": true
                            }
                          },
                          "response": {
                            "$ref": "Operation"
                          },
                          "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1/{+name}",
                          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                        },
                        "list": {
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "location": "query",
                              "type": "integer",
                              "description": "The standard list page size."
                            },
                            "pageToken": {
                              "description": "The standard list page token.",
                              "type": "string",
                              "location": "query"
                            },
                            "filter": {
                              "location": "query",
                              "type": "string",
                              "description": "The standard list filter."
                            },
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalClusters/[^/]+/bareMetalNodePools/[^/]+$",
                              "location": "path",
                              "description": "The name of the operation's parent resource."
                            }
                          },
                          "path": "v1/{+name}/operations",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalClusters/{bareMetalClustersId}/bareMetalNodePools/{bareMetalNodePoolsId}/operations",
                          "response": {
                            "$ref": "ListOperationsResponse"
                          },
                          "id": "gkeonprem.projects.locations.bareMetalClusters.bareMetalNodePools.operations.list",
                          "httpMethod": "GET",
                          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "vmwareAdminClusters": {
              "methods": {
                "patch": {
                  "description": "Updates the parameters of a single VMware admin cluster.",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Validate the request without actually doing any updates."
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the VMwareAdminCluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all populated fields in the VmwareAdminCluster message will be updated. Empty fields will be ignored unless a field mask is used."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+$",
                      "description": "Immutable. The VMware admin cluster resource name.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "VmwareAdminCluster"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}",
                  "path": "v1/{+name}",
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.testIamPermissions"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.get",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "VmwareAdminCluster"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the VMware admin cluster to be returned. Format: \"projects/{project}/locations/{location}/vmwareAdminClusters/{vmware_admin_cluster}\"",
                      "required": true,
                      "location": "path"
                    },
                    "view": {
                      "description": "View for VMware admin cluster. When `BASIC` is specified, only the cluster resource name and membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete cluster configuration details.",
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a cluster resource including cluster resource name and membership.",
                        "Includes the complete configuration for VMware admin cluster resource. This is the default value for GetVmwareAdminClusterRequest method."
                      ]
                    }
                  },
                  "description": "Gets details of a single VMware admin cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}"
                },
                "unenroll": {
                  "path": "v1/{+name}:unenroll",
                  "description": "Unenrolls an existing VMware admin cluster from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or its clients.",
                  "httpMethod": "DELETE",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:unenroll",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the VMware admin cluster to be unenrolled. Format: \"projects/{project}/locations/{location}/vmwareAdminClusters/{cluster}\"",
                      "type": "string",
                      "location": "path"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the VMware admin cluster is not found, the request will succeed but no action will be taken on the server and return a completed LRO.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "etag": {
                      "description": "The current etag of the VMware admin cluster. If an etag is provided and does not match the current etag of the cluster, deletion will be blocked and an ABORTED error will be returned.",
                      "location": "query",
                      "type": "string"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Validate the request without actually doing any updates.",
                      "location": "query"
                    }
                  },
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.unenroll",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "enroll": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters:enroll",
                  "request": {
                    "$ref": "EnrollVmwareAdminClusterRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.enroll",
                  "path": "v1/{+parent}/vmwareAdminClusters:enroll",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent of the project and location where the cluster is enrolled in. Format: \"projects/{project}/locations/{location}\"",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Enrolls an existing VMware admin cluster to the Anthos On-Prem API within a given project and location. Through enrollment, an existing admin cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster will be expected to be performed through the API."
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+$",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
                    }
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:setIamPolicy"
                },
                "getIamPolicy": {
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    },
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+$",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}:getIamPolicy",
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "list": {
                  "description": "Lists VMware admin clusters in a given project and location.",
                  "response": {
                    "$ref": "ListVmwareAdminClustersResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent of the project and location where the clusters are listed in. Format: \"projects/{project}/locations/{location}\"",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string",
                      "location": "query"
                    },
                    "view": {
                      "description": "View for VMware admin clusters. When `BASIC` is specified, only the admin cluster resource name and membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete admin cluster configuration details.",
                      "type": "string",
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a admin cluster resource including admin cluster resource name and membership.",
                        "Includes the complete configuration for bare metal admin cluster resource. This is the default value for ListVmwareAdminClustersRequest method."
                      ]
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 50 clusters will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "format": "int32"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/vmwareAdminClusters",
                  "id": "gkeonprem.projects.locations.vmwareAdminClusters.list"
                }
              },
              "resources": {
                "operations": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "The standard list page size."
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "The standard list filter."
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "The name of the operation's parent resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+$"
                        },
                        "pageToken": {
                          "description": "The standard list page token.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "ListOperationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}/operations",
                      "id": "gkeonprem.projects.locations.vmwareAdminClusters.operations.list",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+name}/operations"
                    },
                    "get": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "httpMethod": "GET",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "The name of the operation resource.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareAdminClusters/[^/]+/operations/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v1/{+name}",
                      "id": "gkeonprem.projects.locations.vmwareAdminClusters.operations.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareAdminClusters/{vmwareAdminClustersId}/operations/{operationsId}"
                    }
                  }
                }
              }
            },
            "vmwareClusters": {
              "resources": {
                "vmwareNodePools": {
                  "methods": {
                    "setIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "response": {
                        "$ref": "Policy"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:setIamPolicy",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+resource}:setIamPolicy",
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      }
                    },
                    "testIamPermissions": {
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.testIamPermissions",
                      "parameters": {
                        "resource": {
                          "type": "string",
                          "required": true,
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+resource}:testIamPermissions",
                      "parameterOrder": [
                        "resource"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:testIamPermissions"
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Required. Field mask is used to specify the fields to be overwritten in the VMwareNodePool resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all populated fields in the VMwareNodePool message will be updated. Empty fields will be ignored unless a field mask is used.",
                          "location": "query"
                        },
                        "name": {
                          "description": "Immutable. The resource name of this node pool.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$",
                          "type": "string"
                        },
                        "validateOnly": {
                          "type": "boolean",
                          "description": "Validate the request without actually doing any updates.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}",
                      "description": "Updates the parameters of a single VMware node pool.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "VmwareNodePool"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.patch"
                    },
                    "getIamPolicy": {
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "parameterOrder": [
                        "resource"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "options.requestedPolicyVersion": {
                          "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "location": "query",
                          "format": "int32",
                          "type": "integer"
                        },
                        "resource": {
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$"
                        }
                      },
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.getIamPolicy",
                      "path": "v1/{+resource}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:getIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      }
                    },
                    "list": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools",
                      "description": "Lists VMware node pools in a given project, location and VMWare cluster.",
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "description": "A page token, received from a previous `ListVmwareNodePools` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListVmwareNodePools` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The parent, which owns this collection of node pools. Format: projects/{project}/locations/{location}/vmwareClusters/{vmwareCluster}"
                        },
                        "view": {
                          "enum": [
                            "NODE_POOL_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "enumDescriptions": [
                            "If the value is not set, the default `FULL` view is used.",
                            "Includes basic information of a node pool resource including node pool resource name.",
                            "Includes the complete configuration for VMware node pool resource. This is the default value for ListVmwareNodePoolsRequest method."
                          ],
                          "type": "string",
                          "location": "query",
                          "description": "View for VMware node pools. When `BASIC` is specified, only the node pool resource name is returned. The default/unset value `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete node pool configuration details."
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of node pools to return. The service may return fewer than this value. If unspecified, at most 50 node pools will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/vmwareNodePools",
                      "response": {
                        "$ref": "ListVmwareNodePoolsResponse"
                      }
                    },
                    "get": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}",
                      "response": {
                        "$ref": "VmwareNodePool"
                      },
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.get",
                      "httpMethod": "GET",
                      "parameters": {
                        "view": {
                          "enumDescriptions": [
                            "If the value is not set, the default `FULL` view is used.",
                            "Includes basic information of a node pool resource including node pool resource name.",
                            "Includes the complete configuration for VMware node pool resource. This is the default value for GetVmwareNodePoolRequest method."
                          ],
                          "enum": [
                            "NODE_POOL_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "type": "string",
                          "description": "View for VMware node pool. When `BASIC` is specified, only the node pool resource name is returned. The default/unset value `NODE_POOL_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete node pool configuration details.",
                          "location": "query"
                        },
                        "name": {
                          "description": "Required. The name of the node pool to retrieve. projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Gets details of a single VMware node pool."
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.delete",
                      "description": "Deletes a single VMware node pool.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}",
                      "parameters": {
                        "allowMissing": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set to true, and the VMware node pool is not found, the request will succeed but no action will be taken on the server and return a completed LRO."
                        },
                        "etag": {
                          "type": "string",
                          "description": "The current etag of the VmwareNodePool. If an etag is provided and does not match the current etag of the node pool, deletion will be blocked and an ABORTED error will be returned.",
                          "location": "query"
                        },
                        "name": {
                          "description": "Required. The name of the node pool to delete. Format: projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$"
                        },
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set, only validate the request, but do not actually delete the node pool."
                        },
                        "ignoreErrors": {
                          "type": "boolean",
                          "description": "If set to true, the deletion of a VMware node pool resource will succeed even if errors occur during deletion. This parameter can be used when you want to delete GCP's node pool resource and you've already deleted the on-prem admin cluster that hosted your node pool. WARNING: Using this parameter when your user cluster still exists may result in a deleted GCP node pool but an existing on-prem node pool.",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "enroll": {
                      "description": "Enrolls a VMware node pool to Anthos On-Prem API",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools:enroll",
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The parent resource where the node pool is enrolled in."
                        }
                      },
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.enroll",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/vmwareNodePools:enroll",
                      "request": {
                        "$ref": "EnrollVmwareNodePoolRequest"
                      }
                    },
                    "create": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools",
                      "description": "Creates a new VMware node pool in a given project, location and VMWare cluster.",
                      "request": {
                        "$ref": "VmwareNodePool"
                      },
                      "parameters": {
                        "vmwareNodePoolId": {
                          "description": "The ID to use for the node pool, which will become the final component of the node pool's resource name. This value must be up to 40 characters and follow RFC-1123 (https://tools.ietf.org/html/rfc1123) format. The value must not be permitted to be a UUID (or UUID-like: anything matching /^[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$/i).",
                          "location": "query",
                          "type": "string"
                        },
                        "validateOnly": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If set, only validate the request, but do not actually create the node pool."
                        },
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "Required. The parent resource where this node pool will be created. projects/{project}/locations/{location}/vmwareClusters/{cluster}"
                        }
                      },
                      "path": "v1/{+parent}/vmwareNodePools",
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.create",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "unenroll": {
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}:unenroll",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameters": {
                        "allowMissing": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If set to true, and the VMware node pool is not found, the request will succeed but no action will be taken on the server and return a completed LRO."
                        },
                        "validateOnly": {
                          "location": "query",
                          "description": "If set, only validate the request, but do not actually unenroll the node pool.",
                          "type": "boolean"
                        },
                        "etag": {
                          "type": "string",
                          "location": "query",
                          "description": "The current etag of the VMware node pool. If an etag is provided and does not match the current etag of node pool, deletion will be blocked and an ABORTED error will be returned."
                        },
                        "name": {
                          "required": true,
                          "description": "Required. The name of the node pool to unenroll. Format: projects/{project}/locations/{location}/vmwareClusters/{cluster}/vmwareNodePools/{nodepool}",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}:unenroll",
                      "description": "Unenrolls a VMware node pool to Anthos On-Prem API",
                      "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.unenroll"
                    }
                  },
                  "resources": {
                    "operations": {
                      "methods": {
                        "list": {
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "ListOperationsResponse"
                          },
                          "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.list",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}/operations",
                          "parameters": {
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "The standard list filter."
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "The standard list page token."
                            },
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "The name of the operation's parent resource."
                            },
                            "pageSize": {
                              "type": "integer",
                              "description": "The standard list page size.",
                              "location": "query",
                              "format": "int32"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "v1/{+name}/operations",
                          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."
                        },
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "Operation"
                          },
                          "path": "v1/{+name}",
                          "id": "gkeonprem.projects.locations.vmwareClusters.vmwareNodePools.operations.get",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/vmwareNodePools/[^/]+/operations/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "The name of the operation resource.",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                          "httpMethod": "GET",
                          "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/vmwareNodePools/{vmwareNodePoolsId}/operations/{operationsId}"
                        }
                      }
                    }
                  }
                },
                "operations": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListOperationsResponse"
                      },
                      "httpMethod": "GET",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "id": "gkeonprem.projects.locations.vmwareClusters.operations.list",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "The standard list page size."
                        },
                        "name": {
                          "description": "The name of the operation's parent resource.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$"
                        },
                        "pageToken": {
                          "description": "The standard list page token.",
                          "type": "string",
                          "location": "query"
                        },
                        "filter": {
                          "type": "string",
                          "description": "The standard list filter.",
                          "location": "query"
                        }
                      },
                      "path": "v1/{+name}/operations",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/operations"
                    },
                    "get": {
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}/operations/{operationsId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+/operations/[^/]+$",
                          "required": true,
                          "description": "The name of the operation resource.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "id": "gkeonprem.projects.locations.vmwareClusters.operations.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "queryVersionConfig": {
                  "httpMethod": "POST",
                  "parameters": {
                    "createConfig.adminClusterName": {
                      "type": "string",
                      "description": "The admin cluster resource name. This is the full resource name of the admin cluster resource. Format: \"projects/{project}/locations/{location}/vmwareAdminClusters/{vmware_admin_cluster}\"",
                      "location": "query"
                    },
                    "upgradeConfig.clusterName": {
                      "type": "string",
                      "description": "The user cluster resource name. This is the full resource name of the user cluster resource. Format: \"projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}\"",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent of the project and location to query for version config. Format: \"projects/{project}/locations/{location}\"",
                      "location": "path",
                      "required": true
                    },
                    "createConfig.adminClusterMembership": {
                      "description": "The admin cluster membership. This is the full resource name of the admin cluster's fleet membership. Format: \"projects/{project}/locations/{location}/memberships/{membership}\"",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "description": "Queries the VMware user cluster version config.",
                  "id": "gkeonprem.projects.locations.vmwareClusters.queryVersionConfig",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "QueryVmwareVersionConfigResponse"
                  },
                  "path": "v1/{+parent}/vmwareClusters:queryVersionConfig",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters:queryVersionConfig"
                },
                "enroll": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkeonprem.projects.locations.vmwareClusters.enroll",
                  "httpMethod": "POST",
                  "description": "Enrolls an existing VMware user cluster and its node pools to the Anthos On-Prem API within a given project and location. Through enrollment, an existing cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster and/or its node pools will be expected to be performed through the API.",
                  "path": "v1/{+parent}/vmwareClusters:enroll",
                  "request": {
                    "$ref": "EnrollVmwareClusterRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent of the project and location where the cluster is Enrolled in. Format: \"projects/{project}/locations/{location}\"",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters:enroll"
                },
                "get": {
                  "response": {
                    "$ref": "VmwareCluster"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}",
                  "id": "gkeonprem.projects.locations.vmwareClusters.get",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "view": {
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a cluster resource including cluster resource name and admin cluster membership.",
                        "Includes the complete configuration for VMware cluster resource. This is the default value for GetVmwareClusterRequest method."
                      ],
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "location": "query",
                      "description": "View for VMware user cluster. When `BASIC` is specified, only the cluster resource name and admin cluster membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete cluster configuration details.",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the VMware user cluster to be returned. Format: \"projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Gets details of a single VMware Cluster."
                },
                "unenroll": {
                  "parameters": {
                    "force": {
                      "location": "query",
                      "description": "This is required if the cluster has any associated node pools. When set, any child node pools will also be unenrolled.",
                      "type": "boolean"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the VMware cluster is not found, the request will succeed but no action will be taken on the server and return a completed LRO.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "etag": {
                      "description": "The current etag of the VMware Cluster. If an etag is provided and does not match the current etag of the cluster, deletion will be blocked and an ABORTED error will be returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Validate the request without actually doing any updates.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the VMware user cluster to be unenrolled. Format: \"projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}\"",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkeonprem.projects.locations.vmwareClusters.unenroll",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:unenroll",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Unenrolls an existing VMware user cluster and its node pools from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters and node pools will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or UI.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1/{+name}:unenroll"
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "id": "gkeonprem.projects.locations.vmwareClusters.setIamPolicy",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "patch": {
                  "request": {
                    "$ref": "VmwareCluster"
                  },
                  "path": "v1/{+name}",
                  "description": "Updates the parameters of a single VMware cluster.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkeonprem.projects.locations.vmwareClusters.patch",
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the VMwareCluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all populated fields in the VmwareCluster message will be updated. Empty fields will be ignored unless a field mask is used.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "type": "string",
                      "description": "Immutable. The VMware user cluster resource name.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                      "required": true
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Validate the request without actually doing any updates.",
                      "type": "boolean"
                    }
                  },
                  "httpMethod": "PATCH"
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "DELETE",
                  "description": "Deletes a single VMware Cluster.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "ignoreErrors": {
                      "description": "If set to true, the deletion of a VMware user cluster resource will succeed even if errors occur during deletion. This parameter can be used when you want to delete GCP's cluster resource and the on-prem admin cluster that hosts your user cluster is disconnected / unreachable or deleted. WARNING: Using this parameter when your user cluster still exists may result in a deleted GCP user cluster but an existing on-prem user cluster.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "allowMissing": {
                      "description": "If set to true, and the VMware cluster is not found, the request will succeed but no action will be taken on the server and return a completed LRO.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "force": {
                      "location": "query",
                      "description": "If set to true, any node pools from the cluster will also be deleted.",
                      "type": "boolean"
                    },
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Validate the request without actually doing any updates."
                    },
                    "etag": {
                      "type": "string",
                      "description": "The current etag of the VMware cluster. If an etag is provided and does not match the current etag of the cluster, deletion will be blocked and an ABORTED error will be returned.",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the VMware user cluster to be deleted. Format: \"projects/{project}/locations/{location}/vmwareClusters/{vmware_cluster}\"",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "gkeonprem.projects.locations.vmwareClusters.delete"
                },
                "testIamPermissions": {
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "gkeonprem.projects.locations.vmwareClusters.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent of the project and location where the clusters are listed in. Format: \"projects/{project}/locations/{location}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A token identifying a page of results the server should return.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 50 clusters will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "A resource filtering expression following https://google.aip.dev/160. When non-empty, only resource's whose attributes field matches the filter are returned."
                    },
                    "view": {
                      "location": "query",
                      "description": "View for VMware clusters. When `BASIC` is specified, only the cluster resource name and admin cluster membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete cluster configuration details.",
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a cluster resource including cluster resource name and admin cluster membership.",
                        "Includes the complete configuration for VMware cluster resource. This is the default value for ListVmwareClustersRequest method."
                      ]
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters",
                  "response": {
                    "$ref": "ListVmwareClustersResponse"
                  },
                  "description": "Lists VMware Clusters in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/vmwareClusters",
                  "id": "gkeonprem.projects.locations.vmwareClusters.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET"
                },
                "getIamPolicy": {
                  "id": "gkeonprem.projects.locations.vmwareClusters.getIamPolicy",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters/{vmwareClustersId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query"
                    },
                    "resource": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/vmwareClusters/[^/]+$"
                    }
                  },
                  "path": "v1/{+resource}:getIamPolicy"
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/vmwareClusters",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "VmwareCluster"
                  },
                  "description": "Creates a new VMware user cluster in a given project and location.",
                  "id": "gkeonprem.projects.locations.vmwareClusters.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent of the project and location where this cluster is created in. Format: \"projects/{project}/locations/{location}\"",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "vmwareClusterId": {
                      "location": "query",
                      "type": "string",
                      "description": "User provided identifier that is used as part of the resource name; This value must be up to 40 characters and follow RFC-1123 (https://tools.ietf.org/html/rfc1123) format."
                    },
                    "validateOnly": {
                      "location": "query",
                      "description": "Validate the request without actually doing any updates.",
                      "type": "boolean"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/vmwareClusters",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "bareMetalAdminClusters": {
              "resources": {
                "operations": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}/operations/{operationsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkeonprem.projects.locations.bareMetalAdminClusters.operations.get",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+/operations/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "The name of the operation resource.",
                          "location": "path"
                        }
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "ListOperationsResponse"
                      },
                      "parameters": {
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "The standard list page size."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "The standard list page token."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+$",
                          "required": true,
                          "description": "The name of the operation's parent resource.",
                          "type": "string",
                          "location": "path"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "The standard list filter."
                        }
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}/operations",
                      "path": "v1/{+name}/operations",
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkeonprem.projects.locations.bareMetalAdminClusters.operations.list"
                    }
                  }
                }
              },
              "methods": {
                "patch": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates the parameters of a single bare metal admin cluster.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "BareMetalAdminCluster"
                  },
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.patch",
                  "parameters": {
                    "validateOnly": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Validate the request without actually doing any updates."
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Field mask is used to specify the fields to be overwritten in the BareMetalAdminCluster resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all populated fields in the BareMetalAdminCluster message will be updated. Empty fields will be ignored unless a field mask is used.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+$",
                      "location": "path",
                      "description": "Immutable. The bare metal admin cluster resource name.",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1/{+resource}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "getIamPolicy": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "path": "v1/{+resource}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "resource": {
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:getIamPolicy",
                  "httpMethod": "GET",
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "queryVersionConfig": {
                  "httpMethod": "POST",
                  "description": "Queries the bare metal admin cluster version config.",
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.queryVersionConfig",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/bareMetalAdminClusters:queryVersionConfig",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters:queryVersionConfig",
                  "response": {
                    "$ref": "QueryBareMetalAdminVersionConfigResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "upgradeConfig.clusterName": {
                      "location": "query",
                      "type": "string",
                      "description": "The admin cluster resource name. This is the full resource name of the admin cluster resource. Format: \"projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}\""
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent of the project and location to query for version config. Format: \"projects/{project}/locations/{location}\"",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  }
                },
                "create": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters",
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.create",
                  "path": "v1/{+parent}/bareMetalAdminClusters",
                  "request": {
                    "$ref": "BareMetalAdminCluster"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new bare metal admin cluster in a given project and location. The API needs to be combined with creating a bootstrap cluster to work. See: https://cloud.google.com/anthos/clusters/docs/bare-metal/latest/installing/creating-clusters/create-admin-cluster-api#prepare_bootstrap_environment",
                  "httpMethod": "POST",
                  "parameters": {
                    "validateOnly": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Validate the request without actually doing any updates."
                    },
                    "parent": {
                      "description": "Required. The parent of the project and location where the cluster is created in. Format: \"projects/{project}/locations/{location}\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "bareMetalAdminClusterId": {
                      "location": "query",
                      "description": "Required. User provided identifier that is used as part of the resource name; must conform to RFC-1034 and additionally restrict to lower-cased letters. This comes out roughly to: /^a-z+[a-z0-9]$/",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:setIamPolicy"
                },
                "enroll": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.enroll",
                  "path": "v1/{+parent}/bareMetalAdminClusters:enroll",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent of the project and location where the cluster is enrolled in. Format: \"projects/{project}/locations/{location}\"",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "EnrollBareMetalAdminClusterRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Enrolls an existing bare metal admin cluster to the Anthos On-Prem API within a given project and location. Through enrollment, an existing admin cluster will become Anthos On-Prem API managed. The corresponding GCP resources will be created and all future modifications to the cluster will be expected to be performed through the API.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters:enroll"
                },
                "get": {
                  "path": "v1/{+name}",
                  "description": "Gets details of a single bare metal admin cluster.",
                  "parameters": {
                    "view": {
                      "description": "View for bare metal admin cluster. When `BASIC` is specified, only the cluster resource name and membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete cluster configuration details.",
                      "location": "query",
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "type": "string",
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a cluster resource including cluster resource name and membership.",
                        "Includes the complete configuration for bare metal admin cluster resource. This is the default value for GetBareMetalAdminClusterRequest method."
                      ]
                    },
                    "name": {
                      "description": "Required. Name of the bare metal admin cluster to get. Format: \"projects/{project}/locations/{location}/bareMetalAdminClusters/{bare_metal_admin_cluster}\"",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.get",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "BareMetalAdminCluster"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists bare metal admin clusters in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListBareMetalAdminClustersResponse"
                  },
                  "path": "v1/{+parent}/bareMetalAdminClusters",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A token identifying a page of results the server should return."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Requested page size. Server may return fewer items than requested. If unspecified, at most 50 clusters will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The parent of the project and location where the clusters are listed in. Format: \"projects/{project}/locations/{location}\"",
                      "location": "path"
                    },
                    "view": {
                      "type": "string",
                      "location": "query",
                      "enum": [
                        "CLUSTER_VIEW_UNSPECIFIED",
                        "BASIC",
                        "FULL"
                      ],
                      "enumDescriptions": [
                        "If the value is not set, the default `FULL` view is used.",
                        "Includes basic information of a admin cluster resource including admin cluster resource name and membership.",
                        "Includes the complete configuration for bare metal admin cluster resource. This is the default value for ListBareMetalAdminClustersRequest method."
                      ],
                      "description": "View for bare metal admin clusters. When `BASIC` is specified, only the admin cluster resource name and membership are returned. The default/unset value `CLUSTER_VIEW_UNSPECIFIED` is the same as `FULL', which returns the complete admin cluster configuration details."
                    }
                  },
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.list"
                },
                "unenroll": {
                  "description": "Unenrolls an existing bare metal admin cluster from the Anthos On-Prem API within a given project and location. Unenrollment removes the Cloud reference to the cluster without modifying the underlying OnPrem Resources. Clusters will continue to run; however, they will no longer be accessible through the Anthos On-Prem API or its clients.",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}:unenroll",
                  "id": "gkeonprem.projects.locations.bareMetalAdminClusters.unenroll",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/bareMetalAdminClusters/{bareMetalAdminClustersId}:unenroll",
                  "parameters": {
                    "ignoreErrors": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set to true, the unenrollment of a bare metal admin cluster resource will succeed even if errors occur during unenrollment. This parameter can be used when you want to unenroll admin cluster resource and the on-prem admin cluster is disconnected / unreachable. WARNING: Using this parameter when your admin cluster still exists may result in a deleted GCP admin cluster but existing resourcelink in on-prem admin cluster and membership."
                    },
                    "validateOnly": {
                      "type": "boolean",
                      "description": "Validate the request without actually doing any updates.",
                      "location": "query"
                    },
                    "allowMissing": {
                      "type": "boolean",
                      "location": "query",
                      "description": "If set to true, and the bare metal admin cluster is not found, the request will succeed but no action will be taken on the server and return a completed LRO."
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/bareMetalAdminClusters/[^/]+$",
                      "description": "Required. Name of the bare metal admin cluster to be unenrolled. Format: \"projects/{project}/locations/{location}/bareMetalAdminClusters/{cluster}\"",
                      "required": true,
                      "location": "path"
                    },
                    "etag": {
                      "description": "The current etag of the bare metal admin cluster. If an etag is provided and does not match the current etag of the cluster, deletion will be blocked and an ABORTED error will be returned.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "revision": "20230724",
  "basePath": "",
  "baseUrl": "https://gkeonprem.googleapis.com/",
  "documentationLink": "https://cloud.google.com/anthos/clusters/docs/on-prem/",
  "version": "v1",
  "protocol": "rest",
  "version_module": true,
  "schemas": {
    "BareMetalAdminControlPlaneNodePoolConfig": {
      "properties": {
        "nodePoolConfig": {
          "$ref": "BareMetalNodePoolConfig",
          "description": "The generic configuration for a node pool running the control plane."
        }
      },
      "description": "BareMetalAdminControlPlaneNodePoolConfig specifies the control plane node pool configuration. We have a control plane specific node pool config so that we can flexible about supporting control plane specific fields in the future.",
      "id": "BareMetalAdminControlPlaneNodePoolConfig",
      "type": "object"
    },
    "ListBareMetalNodePoolsResponse": {
      "type": "object",
      "id": "ListBareMetalNodePoolsResponse",
      "description": "Response message for listing bare metal node pools.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "bareMetalNodePools": {
          "type": "array",
          "items": {
            "$ref": "BareMetalNodePool"
          },
          "description": "The node pools from the specified parent resource."
        }
      }
    },
    "VmwareAutoResizeConfig": {
      "id": "VmwareAutoResizeConfig",
      "description": "Represents auto resizing configurations for the VMware user cluster.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether to enable controle plane node auto resizing.",
          "type": "boolean"
        }
      }
    },
    "Authorization": {
      "properties": {
        "adminUsers": {
          "description": "Required. For VMware and bare metal user clusters, users will be granted the cluster-admin role on the cluster, which provides full administrative access to the cluster. For bare metal admin clusters, users will be granted the cluster-view role, which limits users to read-only access.",
          "items": {
            "$ref": "ClusterUser"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "Authorization",
      "description": "Authorization defines the On-Prem cluster authorization configuration to bootstrap onto the admin cluster."
    },
    "VmwareAdminNetworkConfig": {
      "type": "object",
      "properties": {
        "podAddressCidrBlocks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation."
        },
        "vcenterNetwork": {
          "type": "string",
          "description": "vcenter_network specifies vCenter network name."
        },
        "staticIpConfig": {
          "$ref": "VmwareStaticIpConfig",
          "description": "Configuration settings for a static IP configuration."
        },
        "haControlPlaneConfig": {
          "description": "Configuration for HA admin cluster control plane.",
          "$ref": "VmwareAdminHAControlPlaneConfig"
        },
        "serviceAddressCidrBlocks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation."
        },
        "hostConfig": {
          "description": "Represents common network settings irrespective of the host's IP address.",
          "$ref": "VmwareHostConfig"
        },
        "dhcpIpConfig": {
          "description": "Configuration settings for a DHCP IP configuration.",
          "$ref": "VmwareDhcpIpConfig"
        }
      },
      "description": "VmwareAdminNetworkConfig contains network configuration for VMware admin cluster.",
      "id": "VmwareAdminNetworkConfig"
    },
    "BareMetalBgpPeerConfig": {
      "id": "BareMetalBgpPeerConfig",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "Required. The IP address of the external peer device.",
          "type": "string"
        },
        "controlPlaneNodes": {
          "type": "array",
          "description": "The IP address of the control plane node that connects to the external peer. If you don't specify any control plane nodes, all control plane nodes can connect to the external peer. If you specify one or more IP addresses, only the nodes specified participate in peering sessions.",
          "items": {
            "type": "string"
          }
        },
        "asn": {
          "type": "string",
          "description": "Required. BGP autonomous system number (ASN) for the network that contains the external peer device.",
          "format": "int64"
        }
      },
      "description": "BareMetalBgpPeerConfig represents configuration parameters for a Border Gateway Protocol (BGP) peer."
    },
    "VmwareAdminLoadBalancerConfig": {
      "type": "object",
      "description": "VmwareAdminLoadBalancerConfig contains load balancer configuration for VMware admin cluster.",
      "properties": {
        "vipConfig": {
          "description": "The VIPs used by the load balancer.",
          "$ref": "VmwareAdminVipConfig"
        },
        "metalLbConfig": {
          "$ref": "VmwareAdminMetalLbConfig",
          "description": "MetalLB load balancers."
        },
        "manualLbConfig": {
          "$ref": "VmwareAdminManualLbConfig",
          "description": "Manually configured load balancers."
        },
        "f5Config": {
          "$ref": "VmwareAdminF5BigIpConfig",
          "description": "Configuration for F5 Big IP typed load balancers."
        },
        "seesawConfig": {
          "$ref": "VmwareAdminSeesawConfig",
          "readOnly": true,
          "description": "Output only. Configuration for Seesaw typed load balancers."
        }
      },
      "id": "VmwareAdminLoadBalancerConfig"
    },
    "BareMetalAdminClusterOperationsConfig": {
      "description": "BareMetalAdminClusterOperationsConfig specifies the admin cluster's observability infrastructure.",
      "properties": {
        "enableApplicationLogs": {
          "description": "Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "BareMetalAdminClusterOperationsConfig"
    },
    "BareMetalAdminApiServerArgument": {
      "description": "BareMetalAdminApiServerArgument represents an arg name-\u003evalue pair. Only a subset of customized flags are supported. Please refer to the API server documentation below to know the exact format: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/",
      "id": "BareMetalAdminApiServerArgument",
      "type": "object",
      "properties": {
        "argument": {
          "type": "string",
          "description": "Required. The argument name as it appears on the API Server command line please make sure to remove the leading dashes."
        },
        "value": {
          "type": "string",
          "description": "Required. The value of the arg as it will be passed to the API Server command line."
        }
      }
    },
    "BareMetalLvpShareConfig": {
      "description": "Specifies the configs for local persistent volumes under a shared file system.",
      "id": "BareMetalLvpShareConfig",
      "properties": {
        "sharedPathPvCount": {
          "type": "integer",
          "description": "The number of subdirectories to create under path.",
          "format": "int32"
        },
        "lvpConfig": {
          "$ref": "BareMetalLvpConfig",
          "description": "Required. Defines the machine path and storage class for the LVP Share."
        }
      },
      "type": "object"
    },
    "BareMetalAdminDrainedMachine": {
      "type": "object",
      "properties": {
        "nodeIp": {
          "description": "Drained machine IP address.",
          "type": "string"
        }
      },
      "id": "BareMetalAdminDrainedMachine",
      "description": "BareMetalAdminDrainedMachine represents the machines that are drained."
    },
    "BareMetalNodeConfig": {
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels assigned to this node. An object containing a list of key/value pairs. The labels here, unioned with the labels set on BareMetalNodePoolConfig are the set of labels that will be applied to the node. If there are any conflicts, the BareMetalNodeConfig labels take precedence. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }."
        },
        "nodeIp": {
          "type": "string",
          "description": "The default IPv4 address for SSH access and Kubernetes node. Example: 192.168.0.1"
        }
      },
      "id": "BareMetalNodeConfig",
      "type": "object",
      "description": "BareMetalNodeConfig lists machine addresses to access Nodes."
    },
    "BareMetalAdminMaintenanceStatus": {
      "properties": {
        "machineDrainStatus": {
          "description": "Represents the status of draining and drained machine nodes. This is used to show the progress of cluster upgrade.",
          "$ref": "BareMetalAdminMachineDrainStatus"
        }
      },
      "id": "BareMetalAdminMaintenanceStatus",
      "description": "BareMetalAdminMaintenanceStatus represents the maintenance status for bare metal Admin cluster CR's nodes.",
      "type": "object"
    },
    "EnrollVmwareNodePoolRequest": {
      "description": "Message for enrolling a VMware node pool.",
      "properties": {
        "vmwareNodePoolId": {
          "type": "string",
          "description": "The target node pool id to be enrolled."
        }
      },
      "type": "object",
      "id": "EnrollVmwareNodePoolRequest"
    },
    "EnrollVmwareAdminClusterRequest": {
      "properties": {
        "membership": {
          "description": "Required. This is the full resource name of this admin cluster's fleet membership.",
          "type": "string"
        },
        "vmwareAdminClusterId": {
          "type": "string",
          "description": "User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all GKE on-prem clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format."
        }
      },
      "id": "EnrollVmwareAdminClusterRequest",
      "type": "object",
      "description": "Message for enrolling an existing VMware admin cluster to the GKE on-prem API."
    },
    "BareMetalAdminMaintenanceConfig": {
      "type": "object",
      "properties": {
        "maintenanceAddressCidrBlocks": {
          "description": "Required. All IPv4 address from these ranges will be placed into maintenance mode. Nodes in maintenance mode will be cordoned and drained. When both of these are true, the \"baremetal.cluster.gke.io/maintenance\" annotation will be set on the node resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "BareMetalAdminMaintenanceConfig specifies configurations to put bare metal Admin cluster CRs nodes in and out of maintenance.",
      "id": "BareMetalAdminMaintenanceConfig"
    },
    "BareMetalAdminStorageConfig": {
      "properties": {
        "lvpShareConfig": {
          "description": "Required. Specifies the config for local PersistentVolumes backed by subdirectories in a shared filesystem. These subdirectores are automatically created during cluster creation.",
          "$ref": "BareMetalLvpShareConfig"
        },
        "lvpNodeMountsConfig": {
          "$ref": "BareMetalLvpConfig",
          "description": "Required. Specifies the config for local PersistentVolumes backed by mounted node disks. These disks need to be formatted and mounted by the user, which can be done before or after cluster creation."
        }
      },
      "description": "BareMetalAdminStorageConfig specifies the cluster storage configuration.",
      "type": "object",
      "id": "BareMetalAdminStorageConfig"
    },
    "BareMetalPortConfig": {
      "id": "BareMetalPortConfig",
      "description": "Specifies load balancer ports for the bare metal user cluster.",
      "type": "object",
      "properties": {
        "controlPlaneLoadBalancerPort": {
          "type": "integer",
          "description": "The port that control plane hosted load balancers will listen on.",
          "format": "int32"
        }
      }
    },
    "BareMetalDrainedMachine": {
      "description": "Represents a machine that is currently drained.",
      "properties": {
        "nodeIp": {
          "description": "Drained machine IP address.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "BareMetalDrainedMachine"
    },
    "ListVmwareClustersResponse": {
      "id": "ListVmwareClustersResponse",
      "description": "Response message for listing VMware Clusters.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.",
          "type": "string"
        },
        "vmwareClusters": {
          "items": {
            "$ref": "VmwareCluster"
          },
          "description": "The list of VMware Cluster.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Policy": {
      "type": "object",
      "properties": {
        "bindings": {
          "type": "array",
          "description": "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "VmwareAdminMetalLbConfig": {
      "description": "VmwareAdminMetalLbConfig represents configuration parameters for a MetalLB load balancer. For admin clusters, currently no configurations is needed.",
      "id": "VmwareAdminMetalLbConfig",
      "type": "object",
      "properties": {}
    },
    "BareMetalMachineDrainStatus": {
      "properties": {
        "drainedMachines": {
          "description": "The list of drained machines.",
          "items": {
            "$ref": "BareMetalDrainedMachine"
          },
          "type": "array"
        },
        "drainingMachines": {
          "type": "array",
          "description": "The list of draning machines.",
          "items": {
            "$ref": "BareMetalDrainingMachine"
          }
        }
      },
      "type": "object",
      "description": "Represents the status of node machines that are undergoing drain operations.",
      "id": "BareMetalMachineDrainStatus"
    },
    "BareMetalLvpConfig": {
      "type": "object",
      "properties": {
        "storageClass": {
          "description": "Required. The StorageClass name that PVs will be created with.",
          "type": "string"
        },
        "path": {
          "type": "string",
          "description": "Required. The host machine path."
        }
      },
      "id": "BareMetalLvpConfig",
      "description": "Specifies the configs for local persistent volumes (PVs)."
    },
    "VmwareF5BigIpConfig": {
      "type": "object",
      "properties": {
        "partition": {
          "description": "The preexisting partition to be used by the load balancer. This partition is usually created for the admin cluster for example: 'my-f5-admin-partition'.",
          "type": "string"
        },
        "address": {
          "description": "The load balancer's IP address.",
          "type": "string"
        },
        "snatPool": {
          "description": "The pool name. Only necessary, if using SNAT.",
          "type": "string"
        }
      },
      "description": "Represents configuration parameters for an F5 BIG-IP load balancer.",
      "id": "VmwareF5BigIpConfig"
    },
    "VmwareDataplaneV2Config": {
      "id": "VmwareDataplaneV2Config",
      "type": "object",
      "description": "Contains configurations for Dataplane V2, which is optimized dataplane for Kubernetes networking. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2",
      "properties": {
        "windowsDataplaneV2Enabled": {
          "description": "Enable Dataplane V2 for clusters with Windows nodes.",
          "type": "boolean"
        },
        "advancedNetworking": {
          "description": "Enable advanced networking which requires dataplane_v2_enabled to be set true.",
          "type": "boolean"
        },
        "dataplaneV2Enabled": {
          "description": "Enables Dataplane V2.",
          "type": "boolean"
        }
      }
    },
    "BareMetalApiServerArgument": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The value of the arg as it will be passed to the API Server command line."
        },
        "argument": {
          "type": "string",
          "description": "Required. The argument name as it appears on the API Server command line, make sure to remove the leading dashes."
        }
      },
      "description": "Represents an arg name-\u003evalue pair. Only a subset of customized flags are supported. For the exact format, refer to the [API server documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/).",
      "type": "object",
      "id": "BareMetalApiServerArgument"
    },
    "BareMetalCluster": {
      "id": "BareMetalCluster",
      "properties": {
        "proxy": {
          "$ref": "BareMetalProxyConfig",
          "description": "Proxy configuration."
        },
        "adminClusterName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The resource name of the bare metal admin cluster managing this user cluster."
        },
        "adminClusterMembership": {
          "type": "string",
          "description": "Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership."
        },
        "deleteTime": {
          "readOnly": true,
          "description": "Output only. The time when the bare metal user cluster was deleted. If the resource is not deleted, this must be empty",
          "type": "string",
          "format": "google-datetime"
        },
        "clusterOperations": {
          "$ref": "BareMetalClusterOperationsConfig",
          "description": "Cluster operations configuration."
        },
        "fleet": {
          "readOnly": true,
          "$ref": "Fleet",
          "description": "Output only. Fleet configuration for the cluster."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The bare metal user cluster resource name."
        },
        "nodeAccessConfig": {
          "$ref": "BareMetalNodeAccessConfig",
          "description": "Node access related configurations."
        },
        "bareMetalVersion": {
          "description": "Required. The Anthos clusters on bare metal version for your user cluster.",
          "type": "string"
        },
        "reconciling": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. If set, there are currently changes in flight to the bare metal user cluster."
        },
        "osEnvironmentConfig": {
          "description": "OS environment related configurations.",
          "$ref": "BareMetalOsEnvironmentConfig"
        },
        "etag": {
          "readOnly": true,
          "description": "Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.",
          "type": "string"
        },
        "networkConfig": {
          "description": "Required. Network configuration.",
          "$ref": "BareMetalNetworkConfig"
        },
        "annotations": {
          "description": "Annotations on the bare metal user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the bare metal user cluster was last updated.",
          "type": "string"
        },
        "controlPlane": {
          "$ref": "BareMetalControlPlaneConfig",
          "description": "Required. Control plane configuration."
        },
        "endpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The IP address of the bare metal user cluster's API server."
        },
        "status": {
          "description": "Output only. Detailed cluster status.",
          "readOnly": true,
          "$ref": "ResourceStatus"
        },
        "upgradePolicy": {
          "$ref": "BareMetalClusterUpgradePolicy",
          "description": "The cluster upgrade policy."
        },
        "nodeConfig": {
          "description": "Workload node configuration.",
          "$ref": "BareMetalWorkloadNodeConfig"
        },
        "maintenanceStatus": {
          "$ref": "BareMetalMaintenanceStatus",
          "readOnly": true,
          "description": "Output only. Status of on-going maintenance tasks."
        },
        "description": {
          "description": "A human readable description of this bare metal user cluster.",
          "type": "string"
        },
        "storage": {
          "description": "Required. Storage configuration.",
          "$ref": "BareMetalStorageConfig"
        },
        "createTime": {
          "description": "Output only. The time when the bare metal user cluster was created.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "loadBalancer": {
          "description": "Required. Load balancer configuration.",
          "$ref": "BareMetalLoadBalancerConfig"
        },
        "securityConfig": {
          "description": "Security related setting configuration.",
          "$ref": "BareMetalSecurityConfig"
        },
        "localName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The object name of the bare metal user cluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the name in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. When the local name and cluster name differ, the local name is used in the admin cluster controller logs. You use the cluster name when accessing the cluster using bmctl and kubectl."
        },
        "maintenanceConfig": {
          "$ref": "BareMetalMaintenanceConfig",
          "description": "Maintenance configuration."
        },
        "uid": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique identifier of the bare metal user cluster."
        },
        "validationCheck": {
          "description": "Output only. The result of the preflight check.",
          "$ref": "ValidationCheck",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The current state of the bare metal user cluster.",
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the cluster is being created.",
            "The RUNNING state indicates the cluster has been created and is fully usable.",
            "The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.",
            "The STOPPING state indicates the cluster is being deleted.",
            "The ERROR state indicates the cluster is in a broken unrecoverable state.",
            "The DEGRADED state indicates the cluster requires user action to restore full functionality."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ]
        }
      },
      "type": "object",
      "description": "Resource that represents a bare metal user cluster."
    },
    "ListBareMetalAdminClustersResponse": {
      "description": "Response message for listing bare metal admin clusters.",
      "id": "ListBareMetalAdminClustersResponse",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.",
          "type": "string"
        },
        "bareMetalAdminClusters": {
          "description": "The list of bare metal admin cluster.",
          "type": "array",
          "items": {
            "$ref": "BareMetalAdminCluster"
          }
        }
      },
      "type": "object"
    },
    "VmwareAdminSeesawConfig": {
      "type": "object",
      "description": "VmwareSeesawConfig represents configuration parameters for an already existing Seesaw load balancer. IMPORTANT: Please note that the Anthos On-Prem API will not generate or update Seesaw configurations it can only bind a pre-existing configuration to a new user cluster. IMPORTANT: When attempting to create a user cluster with a pre-existing Seesaw load balancer you will need to follow some preparation steps before calling the 'CreateVmwareCluster' API method. First you will need to create the user cluster's namespace via kubectl. The namespace will need to use the following naming convention : -gke-onprem-mgmt or -gke-onprem-mgmt depending on whether you used the 'VmwareCluster.local_name' to disambiguate collisions; for more context see the documentation of 'VmwareCluster.local_name'. Once the namespace is created you will need to create a secret resource via kubectl. This secret will contain copies of your Seesaw credentials. The Secret must be called 'user-cluster-creds' and contain Seesaw's SSH and Cert credentials. The credentials must be keyed with the following names: 'seesaw-ssh-private-key', 'seesaw-ssh-public-key', 'seesaw-ssh-ca-key', 'seesaw-ssh-ca-cert'.",
      "properties": {
        "group": {
          "type": "string",
          "description": "In general the following format should be used for the Seesaw group name: seesaw-for-[cluster_name]."
        },
        "masterIp": {
          "description": "MasterIP is the IP announced by the master of Seesaw group.",
          "type": "string"
        },
        "vms": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Names of the VMs created for this Seesaw group."
        },
        "enableHa": {
          "type": "boolean",
          "description": "Enable two load balancer VMs to achieve a highly-available Seesaw load balancer."
        },
        "ipBlocks": {
          "description": "The IP Blocks to be used by the Seesaw load balancer",
          "type": "array",
          "items": {
            "$ref": "VmwareIpBlock"
          }
        }
      },
      "id": "VmwareAdminSeesawConfig"
    },
    "VmwareAddressPool": {
      "id": "VmwareAddressPool",
      "properties": {
        "addresses": {
          "type": "array",
          "description": "Required. The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).",
          "items": {
            "type": "string"
          }
        },
        "manualAssign": {
          "description": "If true, prevent IP addresses from being automatically assigned.",
          "type": "boolean"
        },
        "pool": {
          "description": "Required. The name of the address pool.",
          "type": "string"
        },
        "avoidBuggyIps": {
          "description": "If true, avoid using IPs ending in .0 or .255. This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Represents an IP pool used by the load balancer."
    },
    "BareMetalAdminProxyConfig": {
      "description": "BareMetalAdminProxyConfig specifies the cluster proxy configuration.",
      "type": "object",
      "id": "BareMetalAdminProxyConfig",
      "properties": {
        "uri": {
          "description": "Required. Specifies the address of your proxy server. Examples: `http://domain` WARNING: Do not provide credentials in the format `http://(username:password@)domain` these will be rejected by the server.",
          "type": "string"
        },
        "noProxy": {
          "items": {
            "type": "string"
          },
          "description": "A list of IPs, hostnames, and domains that should skip the proxy. Examples: [\"127.0.0.1\", \"example.com\", \".corp\", \"localhost\"].",
          "type": "array"
        }
      }
    },
    "UpgradeDependency": {
      "id": "UpgradeDependency",
      "description": "UpgradeDependency represents a dependency when upgrading a resource.",
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "Target version of the dependency e.g. 1.16.1. This is the version the dependency needs to be upgraded to before a resource can be upgraded."
        },
        "currentVersion": {
          "description": "Current version of the dependency e.g. 1.15.0.",
          "type": "string"
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name of the dependency."
        },
        "localName": {
          "type": "string",
          "description": "Local name of the dependency."
        }
      },
      "type": "object"
    },
    "BareMetalIslandModeCidrConfig": {
      "id": "BareMetalIslandModeCidrConfig",
      "properties": {
        "podAddressCidrBlocks": {
          "description": "Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "serviceAddressCidrBlocks": {
          "items": {
            "type": "string"
          },
          "description": "Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field is mutable after creation starting with version 1.15.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Specifies the cluster CIDR configuration while running in island mode."
    },
    "VmwareVCenterConfig": {
      "properties": {
        "datastore": {
          "description": "The name of the vCenter datastore for the user cluster.",
          "type": "string"
        },
        "folder": {
          "type": "string",
          "description": "The name of the vCenter folder for the user cluster."
        },
        "resourcePool": {
          "type": "string",
          "description": "The name of the vCenter resource pool for the user cluster."
        },
        "address": {
          "type": "string",
          "description": "The vCenter IP address."
        },
        "datacenter": {
          "type": "string",
          "description": "The name of the vCenter datacenter for the user cluster."
        },
        "cluster": {
          "description": "The name of the vCenter cluster for the user cluster.",
          "type": "string"
        },
        "caCertData": {
          "description": "Contains the vCenter CA certificate public key for SSL verification.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VmwareVCenterConfig",
      "description": "Represents configuration for the VMware VCenter for the user cluster."
    },
    "Location": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        }
      },
      "description": "A resource that represents a Google Cloud location.",
      "id": "Location",
      "type": "object"
    },
    "OperationStage": {
      "id": "OperationStage",
      "description": "Information about a particular stage of an operation.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. State of the stage.",
          "enumDescriptions": [
            "Not set.",
            "The stage is pending.",
            "The stage is running",
            "The stage has completed successfully.",
            "The stage has failed."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "startTime": {
          "description": "Time the stage started.",
          "type": "string",
          "format": "google-datetime"
        },
        "stage": {
          "enumDescriptions": [
            "Not set.",
            "Preflight checks are running.",
            "Resource is being configured.",
            "Resource is being deployed.",
            "Waiting for the resource to become healthy.",
            "Resource is being updated."
          ],
          "enum": [
            "STAGE_UNSPECIFIED",
            "PREFLIGHT_CHECK",
            "CONFIGURE",
            "DEPLOY",
            "HEALTH_CHECK",
            "UPDATE"
          ],
          "type": "string",
          "description": "The high-level stage of the operation."
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "Metric"
          },
          "description": "Progress metric bundle."
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time the stage ended."
        }
      }
    },
    "ListVmwareNodePoolsResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "vmwareNodePools": {
          "items": {
            "$ref": "VmwareNodePool"
          },
          "description": "The node pools from the specified parent resource.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "ListVmwareNodePoolsResponse",
      "description": "Response message for listing VMware node pools."
    },
    "VmwareHostConfig": {
      "description": "Represents the common parameters for all the hosts irrespective of their IP address.",
      "id": "VmwareHostConfig",
      "type": "object",
      "properties": {
        "dnsSearchDomains": {
          "type": "array",
          "description": "DNS search domains.",
          "items": {
            "type": "string"
          }
        },
        "dnsServers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "DNS servers."
        },
        "ntpServers": {
          "description": "NTP servers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BareMetalLoadBalancerConfig": {
      "description": "Specifies the load balancer configuration.",
      "id": "BareMetalLoadBalancerConfig",
      "properties": {
        "portConfig": {
          "$ref": "BareMetalPortConfig",
          "description": "Configures the ports that the load balancer will listen on."
        },
        "metalLbConfig": {
          "description": "Configuration for MetalLB load balancers.",
          "$ref": "BareMetalMetalLbConfig"
        },
        "bgpLbConfig": {
          "description": "Configuration for BGP typed load balancers. When set network_config.advanced_networking is automatically set to true.",
          "$ref": "BareMetalBgpLbConfig"
        },
        "vipConfig": {
          "$ref": "BareMetalVipConfig",
          "description": "The VIPs used by the load balancer."
        },
        "manualLbConfig": {
          "$ref": "BareMetalManualLbConfig",
          "description": "Manually configured load balancers."
        }
      },
      "type": "object"
    },
    "EnrollBareMetalClusterRequest": {
      "properties": {
        "localName": {
          "type": "string",
          "description": "Optional. The object name of the bare metal cluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the bare_metal_cluster_id. Otherwise, it must match the object name of the bare metal cluster custom resource. It is not modifiable outside / beyond the enrollment operation."
        },
        "bareMetalClusterId": {
          "description": "User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all bare metal clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.",
          "type": "string"
        },
        "adminClusterMembership": {
          "type": "string",
          "description": "Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources."
        }
      },
      "id": "EnrollBareMetalClusterRequest",
      "description": "Message for enrolling an existing bare metal cluster to the Anthos On-Prem API.",
      "type": "object"
    },
    "OperationProgress": {
      "id": "OperationProgress",
      "type": "object",
      "description": "Information about operation progress. LINT.IfChange",
      "properties": {
        "stages": {
          "items": {
            "$ref": "OperationStage"
          },
          "type": "array",
          "description": "The stages of the operation."
        }
      }
    },
    "BareMetalStorageConfig": {
      "properties": {
        "lvpNodeMountsConfig": {
          "$ref": "BareMetalLvpConfig",
          "description": "Required. Specifies the config for local PersistentVolumes backed by mounted node disks. These disks need to be formatted and mounted by the user, which can be done before or after cluster creation."
        },
        "lvpShareConfig": {
          "description": "Required. Specifies the config for local PersistentVolumes backed by subdirectories in a shared filesystem. These subdirectores are automatically created during cluster creation.",
          "$ref": "BareMetalLvpShareConfig"
        }
      },
      "description": "BareMetalStorageConfig specifies the cluster storage configuration.",
      "id": "BareMetalStorageConfig",
      "type": "object"
    },
    "BareMetalSrIovConfig": {
      "properties": {
        "enabled": {
          "description": "Whether to install the SR-IOV operator.",
          "type": "boolean"
        }
      },
      "id": "BareMetalSrIovConfig",
      "description": "Specifies the SR-IOV networking operator config.",
      "type": "object"
    },
    "VmwareAdminControlPlaneNodeConfig": {
      "properties": {
        "cpus": {
          "format": "int64",
          "description": "The number of vCPUs for the control-plane node of the admin cluster.",
          "type": "string"
        },
        "replicas": {
          "format": "int64",
          "type": "string",
          "description": "The number of control plane nodes for this VMware admin cluster. (default: 1 replica)."
        },
        "memory": {
          "description": "The number of mebibytes of memory for the control-plane node of the admin cluster.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "VmwareAdminControlPlaneNodeConfig contains control plane node configuration for VMware admin cluster.",
      "id": "VmwareAdminControlPlaneNodeConfig"
    },
    "BareMetalSecurityConfig": {
      "properties": {
        "authorization": {
          "$ref": "Authorization",
          "description": "Configures user access to the user cluster."
        }
      },
      "type": "object",
      "id": "BareMetalSecurityConfig",
      "description": "Specifies the security related settings for the bare metal user cluster."
    },
    "VmwareStaticIpConfig": {
      "properties": {
        "ipBlocks": {
          "description": "Represents the configuration values for static IP allocation to nodes.",
          "items": {
            "$ref": "VmwareIpBlock"
          },
          "type": "array"
        }
      },
      "description": "Represents the network configuration required for the VMware user clusters with Static IP configurations.",
      "type": "object",
      "id": "VmwareStaticIpConfig"
    },
    "BareMetalBgpLbConfig": {
      "properties": {
        "asn": {
          "description": "Required. BGP autonomous system number (ASN) of the cluster. This field can be updated after cluster creation.",
          "format": "int64",
          "type": "string"
        },
        "bgpPeerConfigs": {
          "items": {
            "$ref": "BareMetalBgpPeerConfig"
          },
          "type": "array",
          "description": "Required. The list of BGP peers that the cluster will connect to. At least one peer must be configured for each control plane node. Control plane nodes will connect to these peers to advertise the control plane VIP. The Services load balancer also uses these peers by default. This field can be updated after cluster creation."
        },
        "loadBalancerNodePoolConfig": {
          "$ref": "BareMetalLoadBalancerNodePoolConfig",
          "description": "Specifies the node pool running data plane load balancing. L2 connectivity is required among nodes in this pool. If missing, the control plane node pool is used for data plane load balancing."
        },
        "addressPools": {
          "description": "Required. AddressPools is a list of non-overlapping IP pools used by load balancer typed services. All addresses must be routable to load balancer nodes. IngressVIP must be included in the pools.",
          "type": "array",
          "items": {
            "$ref": "BareMetalLoadBalancerAddressPool"
          }
        }
      },
      "description": "BareMetalBgpLbConfig represents configuration parameters for a Border Gateway Protocol (BGP) load balancer.",
      "type": "object",
      "id": "BareMetalBgpLbConfig"
    },
    "VmwareAdminManualLbConfig": {
      "properties": {
        "ingressHttpsNodePort": {
          "type": "integer",
          "format": "int32",
          "description": "NodePort for ingress service's https. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 30139)."
        },
        "controlPlaneNodePort": {
          "type": "integer",
          "description": "NodePort for control plane service. The Kubernetes API server in the admin cluster is implemented as a Service of type NodePort (ex. 30968).",
          "format": "int32"
        },
        "konnectivityServerNodePort": {
          "description": "NodePort for konnectivity server service running as a sidecar in each kube-apiserver pod (ex. 30564).",
          "format": "int32",
          "type": "integer"
        },
        "addonsNodePort": {
          "description": "NodePort for add-ons server in the admin cluster.",
          "format": "int32",
          "type": "integer"
        },
        "ingressHttpNodePort": {
          "format": "int32",
          "description": "NodePort for ingress service's http. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 32527).",
          "type": "integer"
        }
      },
      "id": "VmwareAdminManualLbConfig",
      "type": "object"
    },
    "Fleet": {
      "type": "object",
      "properties": {
        "membership": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The name of the managed fleet Membership resource associated to this cluster. Membership names are formatted as `projects//locations//memberships/`."
        }
      },
      "description": "Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and manage multi-cluster capabilities and apply consistent policies across your systems. See [Anthos Fleets](`https://cloud.google.com/anthos/multicluster-management/fleets`) for more details on Anthos multi-cluster capabilities using Fleets. ##",
      "id": "Fleet"
    },
    "VmwareAdminAddonNodeConfig": {
      "type": "object",
      "id": "VmwareAdminAddonNodeConfig",
      "description": "VmwareAdminAddonNodeConfig contains add-on node configurations for VMware admin cluster.",
      "properties": {
        "autoResizeConfig": {
          "$ref": "VmwareAutoResizeConfig",
          "description": "VmwareAutoResizeConfig config specifies auto resize config."
        }
      }
    },
    "BareMetalProxyConfig": {
      "type": "object",
      "properties": {
        "noProxy": {
          "items": {
            "type": "string"
          },
          "description": "A list of IPs, hostnames, and domains that should skip the proxy. Examples: [\"127.0.0.1\", \"example.com\", \".corp\", \"localhost\"].",
          "type": "array"
        },
        "uri": {
          "type": "string",
          "description": "Required. Specifies the address of your proxy server. Examples: `http://domain` Do not provide credentials in the format `http://(username:password@)domain` these will be rejected by the server."
        }
      },
      "id": "BareMetalProxyConfig",
      "description": "Specifies the cluster proxy configuration."
    },
    "ValidationCheck": {
      "description": "ValidationCheck represents the result of preflight check.",
      "id": "ValidationCheck",
      "properties": {
        "status": {
          "$ref": "ValidationCheckStatus",
          "readOnly": true,
          "description": "Output only. The detailed validation check status."
        },
        "scenario": {
          "description": "Output only. The scenario when the preflight checks were run.",
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The validation check occurred during a create flow.",
            "The validation check occurred during an update flow."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "SCENARIO_UNSPECIFIED",
            "CREATE",
            "UPDATE"
          ]
        },
        "option": {
          "type": "string",
          "description": "Options used for the validation check",
          "enum": [
            "OPTIONS_UNSPECIFIED",
            "SKIP_VALIDATION_CHECK_BLOCKING",
            "SKIP_VALIDATION_ALL"
          ],
          "enumDescriptions": [
            "Default value. Standard preflight validation check will be used.",
            "Prevent failed preflight checks from failing.",
            "Skip all preflight check validations."
          ]
        }
      },
      "type": "object"
    },
    "ValidationCheckStatus": {
      "id": "ValidationCheckStatus",
      "properties": {
        "result": {
          "description": "Individual checks which failed as part of the Preflight check execution.",
          "type": "array",
          "items": {
            "$ref": "ValidationCheckResult"
          }
        }
      },
      "description": "ValidationCheckStatus defines the detailed validation check status.",
      "type": "object"
    },
    "BareMetalNodeAccessConfig": {
      "id": "BareMetalNodeAccessConfig",
      "type": "object",
      "description": "Specifies the node access related settings for the bare metal user cluster.",
      "properties": {
        "loginUser": {
          "type": "string",
          "description": "LoginUser is the user name used to access node machines. It defaults to \"root\" if not set."
        }
      }
    },
    "CancelOperationRequest": {
      "properties": {},
      "id": "CancelOperationRequest",
      "type": "object",
      "description": "The request message for Operations.CancelOperation."
    },
    "VmwareNodePoolAutoscalingConfig": {
      "type": "object",
      "properties": {
        "minReplicas": {
          "format": "int32",
          "description": "Minimum number of replicas in the NodePool.",
          "type": "integer"
        },
        "maxReplicas": {
          "description": "Maximum number of replicas in the NodePool.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "VmwareNodePoolAutoscalingConfig",
      "description": "NodePoolAutoscaling config for the NodePool to allow for the kubernetes to scale NodePool."
    },
    "QueryBareMetalVersionConfigResponse": {
      "id": "QueryBareMetalVersionConfigResponse",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "$ref": "BareMetalVersionInfo"
          },
          "description": "List of available versions to install or to upgrade to."
        }
      },
      "type": "object",
      "description": "Response message for querying bare metal admin cluster version config."
    },
    "ValidationCheckResult": {
      "description": "ValidationCheckResult defines the details about the validation check.",
      "properties": {
        "reason": {
          "type": "string",
          "description": "A human-readable message of the check failure."
        },
        "details": {
          "description": "Detailed failure information, which might be unformatted.",
          "type": "string"
        },
        "description": {
          "description": "The description of the validation check.",
          "type": "string"
        },
        "category": {
          "description": "The category of the validation.",
          "type": "string"
        },
        "state": {
          "description": "The validation check state.",
          "enum": [
            "STATE_UNKNOWN",
            "STATE_FAILURE",
            "STATE_SKIPPED",
            "STATE_FATAL",
            "STATE_WARNING"
          ],
          "enumDescriptions": [
            "The default value. The check result is unknown.",
            "The check failed.",
            "The check was skipped.",
            "The check itself failed to complete.",
            "The check encountered a warning."
          ],
          "type": "string"
        }
      },
      "id": "ValidationCheckResult",
      "type": "object"
    },
    "BareMetalParallelUpgradeConfig": {
      "properties": {
        "concurrentNodes": {
          "format": "int32",
          "type": "integer",
          "description": "The maximum number of nodes that can be upgraded at once."
        },
        "minimumAvailableNodes": {
          "format": "int32",
          "description": "The minimum number of nodes that should be healthy and available during an upgrade. If set to the default value of 0, it is possible that none of the nodes will be available during an upgrade.",
          "type": "integer"
        }
      },
      "description": "BareMetalParallelUpgradeConfig defines the parallel upgrade settings for worker node pools.",
      "id": "BareMetalParallelUpgradeConfig",
      "type": "object"
    },
    "VmwareNetworkConfig": {
      "type": "object",
      "properties": {
        "dhcpIpConfig": {
          "$ref": "VmwareDhcpIpConfig",
          "description": "Configuration settings for a DHCP IP configuration."
        },
        "serviceAddressCidrBlocks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation."
        },
        "hostConfig": {
          "$ref": "VmwareHostConfig",
          "description": "Represents common network settings irrespective of the host's IP address."
        },
        "podAddressCidrBlocks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation."
        },
        "controlPlaneV2Config": {
          "$ref": "VmwareControlPlaneV2Config",
          "description": "Configuration for control plane V2 mode."
        },
        "vcenterNetwork": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. vcenter_network specifies vCenter network name. Inherited from the admin cluster."
        },
        "staticIpConfig": {
          "description": "Configuration settings for a static IP configuration.",
          "$ref": "VmwareStaticIpConfig"
        }
      },
      "id": "VmwareNetworkConfig",
      "description": "Specifies network config for the VMware user cluster."
    },
    "BareMetalDrainingMachine": {
      "description": "Represents a machine that is currently draining.",
      "id": "BareMetalDrainingMachine",
      "properties": {
        "podCount": {
          "format": "int32",
          "description": "The count of pods yet to drain.",
          "type": "integer"
        },
        "nodeIp": {
          "description": "Draining machine IP address.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BareMetalControlPlaneNodePoolConfig": {
      "properties": {
        "nodePoolConfig": {
          "$ref": "BareMetalNodePoolConfig",
          "description": "Required. The generic configuration for a node pool running the control plane."
        }
      },
      "type": "object",
      "id": "BareMetalControlPlaneNodePoolConfig",
      "description": "Specifies the control plane node pool configuration."
    },
    "BareMetalManualLbConfig": {
      "id": "BareMetalManualLbConfig",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether manual load balancing is enabled."
        }
      },
      "description": "Represents configuration parameters for a manual load balancer.",
      "type": "object"
    },
    "QueryVmwareVersionConfigResponse": {
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "$ref": "VmwareVersionInfo"
          },
          "description": "List of available versions to install or to upgrade to."
        }
      },
      "type": "object",
      "description": "Response message for querying VMware user cluster version config.",
      "id": "QueryVmwareVersionConfigResponse"
    },
    "VmwareControlPlaneV2Config": {
      "properties": {
        "controlPlaneIpBlock": {
          "$ref": "VmwareIpBlock",
          "description": "Static IP addresses for the control plane nodes."
        }
      },
      "id": "VmwareControlPlaneV2Config",
      "type": "object",
      "description": "Specifies control plane V2 config."
    },
    "BareMetalAdminSecurityConfig": {
      "properties": {
        "authorization": {
          "$ref": "Authorization",
          "description": "Configures user access to the admin cluster."
        }
      },
      "id": "BareMetalAdminSecurityConfig",
      "type": "object",
      "description": "Specifies the security related settings for the bare metal admin cluster."
    },
    "BareMetalAdminCluster": {
      "description": "## Resource that represents a bare metal admin cluster.",
      "type": "object",
      "properties": {
        "networkConfig": {
          "description": "Network configuration.",
          "$ref": "BareMetalAdminNetworkConfig"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations on the bare metal admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "endpoint": {
          "description": "Output only. The IP address name of bare metal admin cluster's API server.",
          "readOnly": true,
          "type": "string"
        },
        "nodeConfig": {
          "$ref": "BareMetalAdminWorkloadNodeConfig",
          "description": "Workload node configuration."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.",
          "type": "string"
        },
        "uid": {
          "type": "string",
          "description": "Output only. The unique identifier of the bare metal admin cluster.",
          "readOnly": true
        },
        "fleet": {
          "$ref": "Fleet",
          "description": "Output only. Fleet configuration for the cluster.",
          "readOnly": true
        },
        "proxy": {
          "$ref": "BareMetalAdminProxyConfig",
          "description": "Proxy configuration."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this bare metal admin cluster was last updated.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this bare metal admin cluster was created."
        },
        "reconciling": {
          "description": "Output only. If set, there are currently changes in flight to the bare metal Admin Cluster.",
          "type": "boolean",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the cluster is being created.",
            "The RUNNING state indicates the cluster has been created and is fully usable.",
            "The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.",
            "The STOPPING state indicates the cluster is being deleted.",
            "The ERROR state indicates the cluster is in a broken unrecoverable state.",
            "The DEGRADED state indicates the cluster requires user action to restore full functionality."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ],
          "readOnly": true,
          "description": "Output only. The current state of the bare metal admin cluster."
        },
        "validationCheck": {
          "description": "Output only. ValidationCheck representing the result of the preflight check.",
          "readOnly": true,
          "$ref": "ValidationCheck"
        },
        "storage": {
          "description": "Storage configuration.",
          "$ref": "BareMetalAdminStorageConfig"
        },
        "localName": {
          "type": "string",
          "description": "Output only. The object name of the bare metal cluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.",
          "readOnly": true
        },
        "controlPlane": {
          "$ref": "BareMetalAdminControlPlaneConfig",
          "description": "Control plane configuration."
        },
        "osEnvironmentConfig": {
          "$ref": "BareMetalAdminOsEnvironmentConfig",
          "description": "OS environment related configurations."
        },
        "nodeAccessConfig": {
          "$ref": "BareMetalAdminNodeAccessConfig",
          "description": "Node access related configurations."
        },
        "deleteTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this bare metal admin cluster was deleted. If the resource is not deleted, this must be empty"
        },
        "securityConfig": {
          "$ref": "BareMetalAdminSecurityConfig",
          "description": "Security related configuration."
        },
        "bareMetalVersion": {
          "description": "The Anthos clusters on bare metal version for the bare metal admin cluster.",
          "type": "string"
        },
        "maintenanceConfig": {
          "description": "Maintenance configuration.",
          "$ref": "BareMetalAdminMaintenanceConfig"
        },
        "loadBalancer": {
          "description": "Load balancer configuration.",
          "$ref": "BareMetalAdminLoadBalancerConfig"
        },
        "description": {
          "description": "A human readable description of this bare metal admin cluster.",
          "type": "string"
        },
        "clusterOperations": {
          "$ref": "BareMetalAdminClusterOperationsConfig",
          "description": "Cluster operations configuration."
        },
        "status": {
          "$ref": "ResourceStatus",
          "description": "Output only. ResourceStatus representing detailed cluster status.",
          "readOnly": true
        },
        "maintenanceStatus": {
          "description": "Output only. MaintenanceStatus representing state of maintenance.",
          "readOnly": true,
          "$ref": "BareMetalAdminMaintenanceStatus"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The bare metal admin cluster resource name."
        }
      },
      "id": "BareMetalAdminCluster"
    },
    "BareMetalAdminVipConfig": {
      "description": "BareMetalAdminVipConfig for bare metal load balancer configurations.",
      "properties": {
        "controlPlaneVip": {
          "type": "string",
          "description": "The VIP which you previously set aside for the Kubernetes API of this bare metal admin cluster."
        }
      },
      "type": "object",
      "id": "BareMetalAdminVipConfig"
    },
    "EnrollBareMetalAdminClusterRequest": {
      "id": "EnrollBareMetalAdminClusterRequest",
      "description": "Message for enrolling an existing bare metal admin cluster to the GKE on-prem API.",
      "type": "object",
      "properties": {
        "membership": {
          "type": "string",
          "description": "Required. This is the full resource name of this admin cluster's fleet membership."
        },
        "bareMetalAdminClusterId": {
          "description": "User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all GKE on-prem clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format.",
          "type": "string"
        }
      }
    },
    "VmwareVipConfig": {
      "type": "object",
      "description": "Specifies the VIP config for the VMware user cluster load balancer.",
      "id": "VmwareVipConfig",
      "properties": {
        "ingressVip": {
          "type": "string",
          "description": "The VIP which you previously set aside for ingress traffic into this cluster."
        },
        "controlPlaneVip": {
          "description": "The VIP which you previously set aside for the Kubernetes API of this cluster.",
          "type": "string"
        }
      }
    },
    "VmwareControlPlaneNodeConfig": {
      "properties": {
        "autoResizeConfig": {
          "description": "AutoResizeConfig provides auto resizing configurations.",
          "$ref": "VmwareAutoResizeConfig"
        },
        "cpus": {
          "format": "int64",
          "type": "string",
          "description": "The number of CPUs for each admin cluster node that serve as control planes for this VMware user cluster. (default: 4 CPUs)"
        },
        "replicas": {
          "description": "The number of control plane nodes for this VMware user cluster. (default: 1 replica).",
          "type": "string",
          "format": "int64"
        },
        "vsphereConfig": {
          "$ref": "VmwareControlPlaneVsphereConfig",
          "description": "Vsphere-specific config."
        },
        "memory": {
          "type": "string",
          "description": "The megabytes of memory for each admin cluster node that serves as a control plane for this VMware user cluster (default: 8192 MB memory).",
          "format": "int64"
        }
      },
      "id": "VmwareControlPlaneNodeConfig",
      "description": "Specifies control plane node config for the VMware user cluster.",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BareMetalLoadBalancerAddressPool": {
      "description": "Represents an IP pool used by the load balancer.",
      "properties": {
        "pool": {
          "type": "string",
          "description": "Required. The name of the address pool."
        },
        "avoidBuggyIps": {
          "description": "If true, avoid using IPs ending in .0 or .255. This avoids buggy consumer devices mistakenly dropping IPv4 traffic for those special IP addresses.",
          "type": "boolean"
        },
        "manualAssign": {
          "type": "boolean",
          "description": "If true, prevent IP addresses from being automatically assigned."
        },
        "addresses": {
          "description": "Required. The addresses that are part of this pool. Each address must be either in the CIDR form (1.2.3.0/24) or range form (1.2.3.1-1.2.3.5).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "BareMetalLoadBalancerAddressPool"
    },
    "VmwareCluster": {
      "properties": {
        "vcenter": {
          "description": "Output only. VmwareVCenterConfig specifies vCenter config for the user cluster. Inherited from the admin cluster.",
          "$ref": "VmwareVCenterConfig",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the cluster is being created.",
            "The RUNNING state indicates the cluster has been created and is fully usable.",
            "The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.",
            "The STOPPING state indicates the cluster is being deleted.",
            "The ERROR state indicates the cluster is in a broken unrecoverable state.",
            "The DEGRADED state indicates the cluster requires user action to restore full functionality."
          ],
          "description": "Output only. The current state of VMware user cluster.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ],
          "readOnly": true
        },
        "autoRepairConfig": {
          "description": "Configuration for auto repairing.",
          "$ref": "VmwareAutoRepairConfig"
        },
        "annotations": {
          "description": "Annotations on the VMware user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "networkConfig": {
          "$ref": "VmwareNetworkConfig",
          "description": "The VMware user cluster network configuration."
        },
        "loadBalancer": {
          "$ref": "VmwareLoadBalancerConfig",
          "description": "Load balancer configuration."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.",
          "type": "string"
        },
        "antiAffinityGroups": {
          "description": "AAGConfig specifies whether to spread VMware user cluster nodes across at least three physical hosts in the datacenter.",
          "$ref": "VmwareAAGConfig"
        },
        "vmTrackingEnabled": {
          "type": "boolean",
          "description": "Enable VM tracking."
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which VMware user cluster was last updated.",
          "readOnly": true
        },
        "deleteTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which VMware user cluster was deleted."
        },
        "onPremVersion": {
          "description": "Required. The Anthos clusters on the VMware version for your user cluster.",
          "type": "string"
        },
        "adminClusterName": {
          "description": "Output only. The resource name of the VMware admin cluster hosting this user cluster.",
          "readOnly": true,
          "type": "string"
        },
        "reconciling": {
          "description": "Output only. If set, there are currently changes in flight to the VMware user cluster.",
          "readOnly": true,
          "type": "boolean"
        },
        "authorization": {
          "description": "RBAC policy that will be applied and managed by the Anthos On-Prem API.",
          "$ref": "Authorization"
        },
        "createTime": {
          "type": "string",
          "description": "Output only. The time at which VMware user cluster was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "localName": {
          "description": "Output only. The object name of the VMware OnPremUserCluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The VMware user cluster resource name."
        },
        "validationCheck": {
          "$ref": "ValidationCheck",
          "description": "Output only. ValidationCheck represents the result of the preflight check job.",
          "readOnly": true
        },
        "uid": {
          "type": "string",
          "description": "Output only. The unique identifier of the VMware user cluster.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "A human readable description of this VMware user cluster."
        },
        "status": {
          "$ref": "ResourceStatus",
          "description": "Output only. ResourceStatus representing detailed cluster state.",
          "readOnly": true
        },
        "adminClusterMembership": {
          "description": "Required. The admin cluster this VMware user cluster belongs to. This is the full resource name of the admin cluster's fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.",
          "type": "string"
        },
        "controlPlaneNode": {
          "$ref": "VmwareControlPlaneNodeConfig",
          "description": "VMware user cluster control plane nodes must have either 1 or 3 replicas."
        },
        "endpoint": {
          "description": "Output only. The DNS name of VMware user cluster's API server.",
          "type": "string",
          "readOnly": true
        },
        "dataplaneV2": {
          "$ref": "VmwareDataplaneV2Config",
          "description": "VmwareDataplaneV2Config specifies configuration for Dataplane V2."
        },
        "fleet": {
          "readOnly": true,
          "$ref": "Fleet",
          "description": "Output only. Fleet configuration for the cluster."
        },
        "storage": {
          "$ref": "VmwareStorageConfig",
          "description": "Storage configuration."
        },
        "enableControlPlaneV2": {
          "type": "boolean",
          "description": "Enable control plane V2. Default to false."
        }
      },
      "type": "object",
      "id": "VmwareCluster",
      "description": "Resource that represents a VMware user cluster. ##"
    },
    "VmwareAdminVipConfig": {
      "description": "VmwareAdminVipConfig for VMware load balancer configurations.",
      "properties": {
        "controlPlaneVip": {
          "description": "The VIP which you previously set aside for the Kubernetes API of the admin cluster.",
          "type": "string"
        },
        "addonsVip": {
          "description": "The VIP to configure the load balancer for add-ons.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VmwareAdminVipConfig"
    },
    "QueryBareMetalAdminVersionConfigResponse": {
      "type": "object",
      "properties": {
        "versions": {
          "description": "List of available versions to install or to upgrade to.",
          "items": {
            "$ref": "BareMetalVersionInfo"
          },
          "type": "array"
        }
      },
      "id": "QueryBareMetalAdminVersionConfigResponse",
      "description": "Response message for querying bare metal admin cluster version config."
    },
    "BareMetalAdminMachineDrainStatus": {
      "id": "BareMetalAdminMachineDrainStatus",
      "properties": {
        "drainingMachines": {
          "items": {
            "$ref": "BareMetalAdminDrainingMachine"
          },
          "type": "array",
          "description": "The list of draning machines."
        },
        "drainedMachines": {
          "items": {
            "$ref": "BareMetalAdminDrainedMachine"
          },
          "description": "The list of drained machines.",
          "type": "array"
        }
      },
      "description": "BareMetalAdminMachineDrainStatus represents the status of bare metal node machines that are undergoing drain operations.",
      "type": "object"
    },
    "ClusterUser": {
      "description": "ClusterUser configures user principals for an RBAC policy.",
      "properties": {
        "username": {
          "type": "string",
          "description": "Required. The name of the user, e.g. `my-gcp-id@gmail.com`."
        }
      },
      "type": "object",
      "id": "ClusterUser"
    },
    "BareMetalAdminNetworkConfig": {
      "type": "object",
      "description": "BareMetalAdminNetworkConfig specifies the cluster network configuration.",
      "properties": {
        "islandModeCidr": {
          "$ref": "BareMetalAdminIslandModeCidrConfig",
          "description": "Configuration for Island mode CIDR."
        }
      },
      "id": "BareMetalAdminNetworkConfig"
    },
    "VmwareVersionInfo": {
      "description": "Contains information about a specific Anthos on VMware version.",
      "id": "VmwareVersionInfo",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version number e.g. 1.13.1-gke.1000."
        },
        "hasDependencies": {
          "type": "boolean",
          "description": "If set, the cluster dependencies (e.g. the admin cluster, other user clusters managed by the same admin cluster) must be upgraded before this version can be installed or upgraded to."
        },
        "isInstalled": {
          "type": "boolean",
          "description": "If set, the version is installed in the admin cluster. Otherwise, the version bundle must be downloaded and installed before a user cluster can be created at or upgraded to this version."
        }
      }
    },
    "VmwareAdminCluster": {
      "type": "object",
      "properties": {
        "imageType": {
          "description": "The OS image type for the VMware admin cluster.",
          "type": "string"
        },
        "controlPlaneNode": {
          "$ref": "VmwareAdminControlPlaneNodeConfig",
          "description": "The VMware admin cluster control plane node configuration."
        },
        "platformConfig": {
          "$ref": "VmwarePlatformConfig",
          "description": "The VMware platform configuration."
        },
        "reconciling": {
          "description": "Output only. If set, there are currently changes in flight to the VMware admin cluster.",
          "type": "boolean",
          "readOnly": true
        },
        "updateTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time at which VMware admin cluster was last updated."
        },
        "loadBalancer": {
          "$ref": "VmwareAdminLoadBalancerConfig",
          "description": "The VMware admin cluster load balancer configuration."
        },
        "vcenter": {
          "$ref": "VmwareAdminVCenterConfig",
          "description": "The VMware admin cluster VCenter configuration."
        },
        "state": {
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the cluster is being created.",
            "The RUNNING state indicates the cluster has been created and is fully usable.",
            "The RECONCILING state indicates that the cluster is being updated. It remains available, but potentially with degraded performance.",
            "The STOPPING state indicates the cluster is being deleted.",
            "The ERROR state indicates the cluster is in a broken unrecoverable state.",
            "The DEGRADED state indicates the cluster requires user action to restore full functionality."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ],
          "description": "Output only. The current state of VMware admin cluster.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Immutable. The VMware admin cluster resource name."
        },
        "bootstrapClusterMembership": {
          "description": "The bootstrap cluster this VMware admin cluster belongs to.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which VMware admin cluster was created.",
          "readOnly": true
        },
        "autoRepairConfig": {
          "$ref": "VmwareAutoRepairConfig",
          "description": "The VMware admin cluster auto repair configuration."
        },
        "localName": {
          "description": "Output only. The object name of the VMware OnPremAdminCluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.",
          "type": "string",
          "readOnly": true
        },
        "antiAffinityGroups": {
          "description": "The VMware admin cluster anti affinity group configuration.",
          "$ref": "VmwareAAGConfig"
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.",
          "type": "string"
        },
        "endpoint": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The DNS name of VMware admin cluster's API server."
        },
        "networkConfig": {
          "$ref": "VmwareAdminNetworkConfig",
          "description": "The VMware admin cluster network configuration."
        },
        "onPremVersion": {
          "description": "The Anthos clusters on the VMware version for the admin cluster.",
          "type": "string"
        },
        "annotations": {
          "description": "Annotations on the VMware admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "uid": {
          "description": "Output only. The unique identifier of the VMware admin cluster.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Output only. ResourceStatus representing detailed cluster state.",
          "readOnly": true,
          "$ref": "ResourceStatus"
        },
        "description": {
          "type": "string",
          "description": "A human readable description of this VMware admin cluster."
        },
        "addonNode": {
          "description": "The VMware admin cluster addon node configuration.",
          "$ref": "VmwareAdminAddonNodeConfig"
        },
        "fleet": {
          "readOnly": true,
          "description": "Output only. Fleet configuration for the cluster.",
          "$ref": "Fleet"
        }
      },
      "description": "Resource that represents a VMware admin cluster.",
      "id": "VmwareAdminCluster"
    },
    "VmwareAdminF5BigIpConfig": {
      "type": "object",
      "id": "VmwareAdminF5BigIpConfig",
      "properties": {
        "partition": {
          "description": "The preexisting partition to be used by the load balancer. This partition is usually created for the admin cluster for example: 'my-f5-admin-partition'.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "The load balancer's IP address."
        },
        "snatPool": {
          "type": "string",
          "description": "The pool name. Only necessary, if using SNAT."
        }
      },
      "description": "VmwareAdminF5BigIpConfig represents configuration parameters for an F5 BIG-IP load balancer."
    },
    "BareMetalVersionInfo": {
      "description": "Contains information about a specific Anthos on bare metal version.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version number e.g. 1.13.1."
        },
        "hasDependencies": {
          "description": "If set, the cluster dependencies (e.g. the admin cluster, other user clusters managed by the same admin cluster, version skew policy, etc) must be upgraded before this version can be installed or upgraded to.",
          "type": "boolean"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "UpgradeDependency"
          },
          "description": "The list of upgrade dependencies for this version."
        }
      },
      "id": "BareMetalVersionInfo"
    },
    "ListBareMetalClustersResponse": {
      "type": "object",
      "id": "ListBareMetalClustersResponse",
      "description": "Response message for listing bare metal Clusters.",
      "properties": {
        "nextPageToken": {
          "description": "A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token.",
          "type": "string"
        },
        "bareMetalClusters": {
          "items": {
            "$ref": "BareMetalCluster"
          },
          "description": "The list of bare metal Clusters.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "id": "TestIamPermissionsResponse",
      "type": "object"
    },
    "VmwareVsphereConfig": {
      "id": "VmwareVsphereConfig",
      "type": "object",
      "properties": {
        "datastore": {
          "description": "The name of the vCenter datastore. Inherited from the user cluster.",
          "type": "string"
        },
        "hostGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Vsphere host groups to apply to all VMs in the node pool"
        },
        "tags": {
          "items": {
            "$ref": "VmwareVsphereTag"
          },
          "description": "Tags to apply to VMs.",
          "type": "array"
        }
      },
      "description": "VmwareVsphereConfig represents configuration for the VMware VCenter for node pool."
    },
    "BareMetalClusterOperationsConfig": {
      "description": "Specifies the bare metal user cluster's observability infrastructure.",
      "properties": {
        "enableApplicationLogs": {
          "description": "Whether collection of application logs/metrics should be enabled (in addition to system logs/metrics).",
          "type": "boolean"
        }
      },
      "id": "BareMetalClusterOperationsConfig",
      "type": "object"
    },
    "VmwareBundleConfig": {
      "properties": {
        "version": {
          "type": "string",
          "description": "The version of the bundle."
        },
        "status": {
          "readOnly": true,
          "$ref": "ResourceStatus",
          "description": "Output only. Resource status for the bundle."
        }
      },
      "id": "VmwareBundleConfig",
      "type": "object",
      "description": "VmwareBundleConfig represents configuration for the bundle."
    },
    "ResourceCondition": {
      "type": "object",
      "id": "ResourceCondition",
      "properties": {
        "reason": {
          "description": "Machine-readable message indicating details about last transition.",
          "type": "string"
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "STATE_TRUE",
            "STATE_FALSE",
            "STATE_UNKNOWN"
          ],
          "description": "state of the condition.",
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "Resource is in the condition.",
            "Resource is not in the condition.",
            "Kubernetes controller can't decide if the resource is in the condition or not."
          ]
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transit from one status to another.",
          "format": "google-datetime"
        },
        "type": {
          "type": "string",
          "description": "Type of the condition. (e.g., ClusterRunning, NodePoolRunning or ServerSidePreflightReady)"
        },
        "message": {
          "type": "string",
          "description": "Human-readable message indicating details about last transition."
        }
      },
      "description": "ResourceCondition provides a standard mechanism for higher-level status reporting from controller."
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "properties": {}
    },
    "ListLocationsResponse": {
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "ListLocationsResponse",
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "BareMetalAdminDrainingMachine": {
      "id": "BareMetalAdminDrainingMachine",
      "type": "object",
      "description": "BareMetalAdminDrainingMachine represents the machines that are currently draining.",
      "properties": {
        "podCount": {
          "type": "integer",
          "description": "The count of pods yet to drain.",
          "format": "int32"
        },
        "nodeIp": {
          "description": "Draining machine IP address.",
          "type": "string"
        }
      }
    },
    "BareMetalMaintenanceStatus": {
      "properties": {
        "machineDrainStatus": {
          "description": "The maintenance status of node machines.",
          "$ref": "BareMetalMachineDrainStatus"
        }
      },
      "id": "BareMetalMaintenanceStatus",
      "type": "object",
      "description": "Represents the maintenance status of the bare metal user cluster."
    },
    "VmwareAutoRepairConfig": {
      "type": "object",
      "description": "Specifies config to enable/disable auto repair. The cluster-health-controller is deployed only if Enabled is true.",
      "id": "VmwareAutoRepairConfig",
      "properties": {
        "enabled": {
          "description": "Whether auto repair is enabled.",
          "type": "boolean"
        }
      }
    },
    "EnrollBareMetalNodePoolRequest": {
      "description": "Message for enrolling an existing bare metal node pool to the GKE on-prem API.",
      "properties": {
        "bareMetalNodePoolId": {
          "type": "string",
          "description": "User provided OnePlatform identifier that is used as part of the resource name. (https://tools.ietf.org/html/rfc1123) format."
        },
        "validateOnly": {
          "type": "boolean",
          "description": "If set, only validate the request, but do not actually enroll the node pool."
        }
      },
      "id": "EnrollBareMetalNodePoolRequest",
      "type": "object"
    },
    "BareMetalNodePoolUpgradePolicy": {
      "properties": {
        "parallelUpgradeConfig": {
          "description": "The parallel upgrade settings for worker node pools.",
          "$ref": "BareMetalParallelUpgradeConfig"
        }
      },
      "id": "BareMetalNodePoolUpgradePolicy",
      "type": "object",
      "description": "BareMetalNodePoolUpgradePolicy defines the node pool upgrade policy."
    },
    "Metric": {
      "type": "object",
      "id": "Metric",
      "description": "Progress metric is (string, int|float|string) pair.",
      "properties": {
        "stringValue": {
          "description": "For metrics with custom values (ratios, visual progress, etc.).",
          "type": "string"
        },
        "metric": {
          "description": "Required. The metric name.",
          "enum": [
            "METRIC_ID_UNSPECIFIED",
            "NODES_TOTAL",
            "NODES_DRAINING",
            "NODES_UPGRADING",
            "NODES_PENDING_UPGRADE",
            "NODES_UPGRADED",
            "NODES_FAILED",
            "NODES_HEALTHY",
            "NODES_RECONCILING",
            "NODES_IN_MAINTENANCE",
            "PREFLIGHTS_COMPLETED",
            "PREFLIGHTS_RUNNING",
            "PREFLIGHTS_FAILED",
            "PREFLIGHTS_TOTAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "The total number of nodes being actuated.",
            "The number of nodes draining.",
            "The number of nodes actively upgrading.",
            "The number of nodes to be upgraded.",
            "The number of nodes upgraded.",
            "The number of nodes to fail actuation.",
            "The number of nodes healthy.",
            "The number of nodes reconciling.",
            "The number of nodes in maintenance mode.",
            "The number of completed preflight checks.",
            "The number of preflight checks running.",
            "The number of preflight checks failed.",
            "The total number of preflight checks."
          ]
        },
        "intValue": {
          "format": "int64",
          "description": "For metrics with integer value.",
          "type": "string"
        },
        "doubleValue": {
          "format": "double",
          "type": "number",
          "description": "For metrics with floating point value."
        }
      }
    },
    "BareMetalAdminIslandModeCidrConfig": {
      "description": "BareMetalAdminIslandModeCidrConfig specifies the cluster CIDR configuration while running in island mode.",
      "properties": {
        "podAddressCidrBlocks": {
          "items": {
            "type": "string"
          },
          "description": "Required. All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.",
          "type": "array"
        },
        "serviceAddressCidrBlocks": {
          "description": "Required. All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. This field cannot be changed after creation.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "BareMetalAdminIslandModeCidrConfig"
    },
    "VmwareNodeConfig": {
      "properties": {
        "memoryMb": {
          "type": "string",
          "description": "The megabytes of memory for each node in the node pool.",
          "format": "int64"
        },
        "bootDiskSizeGb": {
          "format": "int64",
          "description": "VMware disk size to be used during creation.",
          "type": "string"
        },
        "image": {
          "type": "string",
          "description": "The OS image name in vCenter, only valid when using Windows."
        },
        "taints": {
          "description": "The initial taints assigned to nodes of this node pool.",
          "items": {
            "$ref": "NodeTaint"
          },
          "type": "array"
        },
        "imageType": {
          "type": "string",
          "description": "Required. The OS image to be used for each node in a node pool. Currently `cos`, `ubuntu`, `ubuntu_containerd` and `windows` are supported."
        },
        "cpus": {
          "type": "string",
          "description": "The number of CPUs for each node in the node pool.",
          "format": "int64"
        },
        "replicas": {
          "description": "The number of nodes in the node pool.",
          "type": "string",
          "format": "int64"
        },
        "enableLoadBalancer": {
          "description": "Allow node pool traffic to be load balanced. Only works for clusters with MetalLB load balancers.",
          "type": "boolean"
        },
        "labels": {
          "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "vsphereConfig": {
          "description": "Specifies the vSphere config for node pool.",
          "$ref": "VmwareVsphereConfig"
        }
      },
      "type": "object",
      "description": "Parameters that describe the configuration of all nodes within a given node pool.",
      "id": "VmwareNodeConfig"
    },
    "BareMetalNetworkConfig": {
      "type": "object",
      "id": "BareMetalNetworkConfig",
      "properties": {
        "multipleNetworkInterfacesConfig": {
          "$ref": "BareMetalMultipleNetworkInterfacesConfig",
          "description": "Configuration for multiple network interfaces."
        },
        "srIovConfig": {
          "description": "Configuration for SR-IOV.",
          "$ref": "BareMetalSrIovConfig"
        },
        "advancedNetworking": {
          "type": "boolean",
          "description": "Enables the use of advanced Anthos networking features, such as Bundled Load Balancing with BGP or the egress NAT gateway. Setting configuration for advanced networking features will automatically set this flag."
        },
        "islandModeCidr": {
          "$ref": "BareMetalIslandModeCidrConfig",
          "description": "Configuration for island mode CIDR. In an island-mode network, nodes have unique IP addresses, but pods don't have unique addresses across clusters. This doesn't cause problems because pods in one cluster never directly communicate with pods in another cluster. Instead, there are gateways that mediate between a pod in one cluster and a pod in another cluster."
        }
      },
      "description": "Specifies the cluster network configuration."
    },
    "VmwareStorageConfig": {
      "type": "object",
      "id": "VmwareStorageConfig",
      "description": "Specifies vSphere CSI components deployment config in the VMware user cluster.",
      "properties": {
        "vsphereCsiDisabled": {
          "type": "boolean",
          "description": "Whether or not to deploy vSphere CSI components in the VMware user cluster. Enabled by default."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BareMetalAdminWorkloadNodeConfig": {
      "id": "BareMetalAdminWorkloadNodeConfig",
      "type": "object",
      "description": "BareMetalAdminWorkloadNodeConfig specifies the workload node configurations.",
      "properties": {
        "maxPodsPerNode": {
          "description": "The maximum number of pods a node can run. The size of the CIDR range assigned to the node will be derived from this parameter. By default 110 Pods are created per Node. Upper bound is 250 for both HA and non-HA admin cluster. Lower bound is 64 for non-HA admin cluster and 32 for HA admin cluster.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ListVmwareAdminClustersResponse": {
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token identifying a page of results the server should return. If the token is not empty this means that more results are available and should be retrieved by repeating the request with the provided page token."
        },
        "vmwareAdminClusters": {
          "type": "array",
          "description": "The list of VMware admin cluster.",
          "items": {
            "$ref": "VmwareAdminCluster"
          }
        }
      },
      "id": "ListVmwareAdminClustersResponse",
      "description": "Response message for listing VMware admin clusters."
    },
    "BareMetalAdminManualLbConfig": {
      "description": "BareMetalAdminManualLbConfig represents configuration parameters for a manual load balancer.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether manual load balancing is enabled."
        }
      },
      "id": "BareMetalAdminManualLbConfig",
      "type": "object"
    },
    "BareMetalMaintenanceConfig": {
      "properties": {
        "maintenanceAddressCidrBlocks": {
          "description": "Required. All IPv4 address from these ranges will be placed into maintenance mode. Nodes in maintenance mode will be cordoned and drained. When both of these are true, the \"baremetal.cluster.gke.io/maintenance\" annotation will be set on the node resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "BareMetalMaintenanceConfig",
      "description": "Specifies configurations to put bare metal nodes in and out of maintenance.",
      "type": "object"
    },
    "VmwareHostIp": {
      "description": "Represents VMware user cluster node's network configuration.",
      "id": "VmwareHostIp",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP could be an IP address (like 1.2.3.4) or a CIDR (like 1.2.3.0/24)."
        },
        "hostname": {
          "description": "Hostname of the machine. VM's name will be used if this field is empty.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VmwareAdminHAControlPlaneConfig": {
      "description": "Specifies HA admin control plane config.",
      "id": "VmwareAdminHAControlPlaneConfig",
      "properties": {
        "controlPlaneIpBlock": {
          "$ref": "VmwareIpBlock",
          "description": "Static IP addresses for the admin control plane nodes."
        }
      },
      "type": "object"
    },
    "Binding": {
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "members": {
          "items": {
            "type": "string"
          },
          "description": "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.",
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        }
      },
      "description": "Associates `members`, or principals, with a `role`.",
      "id": "Binding",
      "type": "object"
    },
    "BareMetalAdminLoadBalancerConfig": {
      "id": "BareMetalAdminLoadBalancerConfig",
      "description": "BareMetalAdminLoadBalancerConfig specifies the load balancer configuration.",
      "type": "object",
      "properties": {
        "manualLbConfig": {
          "description": "Manually configured load balancers.",
          "$ref": "BareMetalAdminManualLbConfig"
        },
        "portConfig": {
          "$ref": "BareMetalAdminPortConfig",
          "description": "Configures the ports that the load balancer will listen on."
        },
        "vipConfig": {
          "description": "The VIPs used by the load balancer.",
          "$ref": "BareMetalAdminVipConfig"
        }
      }
    },
    "VmwareControlPlaneVsphereConfig": {
      "id": "VmwareControlPlaneVsphereConfig",
      "type": "object",
      "description": "Specifies control plane node config.",
      "properties": {
        "datastore": {
          "description": "The Vsphere datastore used by the control plane Node.",
          "type": "string"
        }
      }
    },
    "VmwareNodePool": {
      "properties": {
        "displayName": {
          "description": "The display name for the node pool.",
          "type": "string"
        },
        "reconciling": {
          "type": "boolean",
          "description": "Output only. If set, there are currently changes in flight to the node pool.",
          "readOnly": true
        },
        "status": {
          "description": "Output only. ResourceStatus representing the detailed VMware node pool state.",
          "$ref": "ResourceStatus",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which this node pool was created.",
          "readOnly": true
        },
        "uid": {
          "description": "Output only. The unique identifier of the node pool.",
          "readOnly": true,
          "type": "string"
        },
        "annotations": {
          "description": "Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "onPremVersion": {
          "description": "Anthos version for the node pool. Defaults to the user cluster version.",
          "type": "string"
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this node pool was deleted. If the resource is not deleted, this must be empty",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time at which this node pool was last updated.",
          "readOnly": true
        },
        "config": {
          "$ref": "VmwareNodeConfig",
          "description": "Required. The node configuration of the node pool."
        },
        "nodePoolAutoscaling": {
          "$ref": "VmwareNodePoolAutoscalingConfig",
          "description": "Node pool autoscaling config for the node pool."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ],
          "description": "Output only. The current state of the node pool.",
          "readOnly": true,
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the node pool is being created.",
            "The RUNNING state indicates the node pool has been created and is fully usable.",
            "The RECONCILING state indicates that the node pool is being updated. It remains available, but potentially with degraded performance.",
            "The STOPPING state indicates the cluster is being deleted",
            "The ERROR state indicates the node pool is in a broken unrecoverable state.",
            "The DEGRADED state indicates the node pool requires user action to restore full functionality."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of this node pool."
        }
      },
      "type": "object",
      "id": "VmwareNodePool",
      "description": "Resource VmwareNodePool represents a VMware node pool. ##"
    },
    "NodeTaint": {
      "description": "NodeTaint applied to every Kubernetes node in a node pool. Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes. Node taints are permanent.",
      "id": "NodeTaint",
      "type": "object",
      "properties": {
        "effect": {
          "description": "The taint effect.",
          "enumDescriptions": [
            "Not set.",
            "Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.",
            "Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
            "Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController."
          ],
          "enum": [
            "EFFECT_UNSPECIFIED",
            "NO_SCHEDULE",
            "PREFER_NO_SCHEDULE",
            "NO_EXECUTE"
          ],
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "Value associated with the effect."
        },
        "key": {
          "description": "Key associated with the effect.",
          "type": "string"
        }
      }
    },
    "BareMetalAdminNodeAccessConfig": {
      "id": "BareMetalAdminNodeAccessConfig",
      "type": "object",
      "description": "Specifies the node access related settings for the bare metal admin cluster.",
      "properties": {
        "loginUser": {
          "type": "string",
          "description": "Required. LoginUser is the user name used to access node machines. It defaults to \"root\" if not set."
        }
      }
    },
    "BareMetalWorkloadNodeConfig": {
      "description": "Specifies the workload node configurations.",
      "id": "BareMetalWorkloadNodeConfig",
      "type": "object",
      "properties": {
        "maxPodsPerNode": {
          "description": "The maximum number of pods a node can run. The size of the CIDR range assigned to the node will be derived from this parameter.",
          "format": "int64",
          "type": "string"
        },
        "containerRuntime": {
          "enum": [
            "CONTAINER_RUNTIME_UNSPECIFIED",
            "CONTAINERD"
          ],
          "type": "string",
          "enumDescriptions": [
            "No container runtime selected.",
            "Containerd runtime."
          ],
          "description": "Specifies which container runtime will be used."
        }
      }
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      }
    },
    "EnrollVmwareClusterRequest": {
      "id": "EnrollVmwareClusterRequest",
      "type": "object",
      "description": "Message for enrolling an existing VMware cluster to the Anthos On-Prem API.",
      "properties": {
        "vmwareClusterId": {
          "type": "string",
          "description": "User provided OnePlatform identifier that is used as part of the resource name. This must be unique among all GKE on-prem clusters within a project and location and will return a 409 if the cluster already exists. (https://tools.ietf.org/html/rfc1123) format."
        },
        "validateOnly": {
          "type": "boolean",
          "description": "Validate the request without actually doing any updates."
        },
        "adminClusterMembership": {
          "description": "Required. The admin cluster this VMware user cluster belongs to. This is the full resource name of the admin cluster's fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.",
          "type": "string"
        },
        "localName": {
          "description": "Optional. The object name of the VMware OnPremUserCluster custom resource on the associated admin cluster. This field is used to support conflicting resource names when enrolling existing clusters to the API. When not provided, this field will resolve to the vmware_cluster_id. Otherwise, it must match the object name of the VMware OnPremUserCluster custom resource. It is not modifiable outside / beyond the enrollment operation.",
          "type": "string"
        }
      }
    },
    "BareMetalAdminControlPlaneConfig": {
      "type": "object",
      "properties": {
        "apiServerArgs": {
          "type": "array",
          "description": "Customizes the default API server args. Only a subset of customized flags are supported. Please refer to the API server documentation below to know the exact format: https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/",
          "items": {
            "$ref": "BareMetalAdminApiServerArgument"
          }
        },
        "controlPlaneNodePoolConfig": {
          "$ref": "BareMetalAdminControlPlaneNodePoolConfig",
          "description": "Configures the node pool running the control plane. If specified the corresponding NodePool will be created for the cluster's control plane. The NodePool will have the same name and namespace as the cluster."
        }
      },
      "description": "BareMetalAdminControlPlaneConfig specifies the control plane configuration.",
      "id": "BareMetalAdminControlPlaneConfig"
    },
    "VmwareMetalLbConfig": {
      "description": "Represents configuration parameters for the MetalLB load balancer.",
      "type": "object",
      "properties": {
        "addressPools": {
          "description": "Required. AddressPools is a list of non-overlapping IP pools used by load balancer typed services. All addresses must be routable to load balancer nodes. IngressVIP must be included in the pools.",
          "items": {
            "$ref": "VmwareAddressPool"
          },
          "type": "array"
        }
      },
      "id": "VmwareMetalLbConfig"
    },
    "BareMetalVipConfig": {
      "properties": {
        "ingressVip": {
          "type": "string",
          "description": "The VIP which you previously set aside for ingress traffic into this bare metal user cluster."
        },
        "controlPlaneVip": {
          "description": "The VIP which you previously set aside for the Kubernetes API of this bare metal user cluster.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Specifies the VIP config for the bare metal load balancer.",
      "id": "BareMetalVipConfig"
    },
    "BareMetalAdminOsEnvironmentConfig": {
      "properties": {
        "packageRepoExcluded": {
          "description": "Whether the package repo should be added when initializing bare metal machines.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Specifies operating system operation settings for cluster provisioning.",
      "id": "BareMetalAdminOsEnvironmentConfig"
    },
    "VmwareVsphereTag": {
      "description": "VmwareVsphereTag describes a vSphere tag to be placed on VMs in the node pool. For more information, see https://docs.vmware.com/en/VMware-vSphere/7.0/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html",
      "type": "object",
      "id": "VmwareVsphereTag",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The Vsphere tag name."
        },
        "category": {
          "description": "The Vsphere tag category.",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "properties": {
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have [Operation.error] value with a [google.rpc.Status.code] of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATE",
            "DELETE",
            "UPDATE",
            "UPGRADE",
            "PLATFORM_UPGRADE"
          ],
          "description": "Output only. Type of operation being executed.",
          "readOnly": true,
          "enumDescriptions": [
            "Not set.",
            "The resource is being created.",
            "The resource is being deleted.",
            "The resource is being updated.",
            "The resource is being upgraded.",
            "The platform is being upgraded."
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "controlPlaneDisconnected": {
          "type": "boolean",
          "description": "Output only. Denotes if the local managing cluster's control plane is currently disconnected. This is expected to occur temporarily during self-managed cluster upgrades.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "progress": {
          "description": "Output only. Detailed progress information for the operation.",
          "$ref": "OperationProgress",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "id": "OperationMetadata"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "id": "ListOperationsResponse"
    },
    "BareMetalClusterUpgradePolicy": {
      "description": "BareMetalClusterUpgradePolicy defines the cluster upgrade policy.",
      "type": "object",
      "id": "BareMetalClusterUpgradePolicy",
      "properties": {
        "policy": {
          "type": "string",
          "enum": [
            "NODE_POOL_POLICY_UNSPECIFIED",
            "SERIAL",
            "CONCURRENT"
          ],
          "description": "Specifies which upgrade policy to use.",
          "enumDescriptions": [
            "No upgrade policy selected.",
            "Upgrade worker node pools sequentially.",
            "Upgrade all worker node pools in parallel."
          ]
        }
      }
    },
    "VmwareAAGConfig": {
      "description": "Specifies anti affinity group config for the VMware user cluster.",
      "type": "object",
      "id": "VmwareAAGConfig",
      "properties": {
        "aagConfigDisabled": {
          "description": "Spread nodes across at least three physical hosts (requires at least three hosts). Enabled by default.",
          "type": "boolean"
        }
      }
    },
    "BareMetalControlPlaneConfig": {
      "id": "BareMetalControlPlaneConfig",
      "properties": {
        "controlPlaneNodePoolConfig": {
          "$ref": "BareMetalControlPlaneNodePoolConfig",
          "description": "Required. Configures the node pool running the control plane."
        },
        "apiServerArgs": {
          "description": "Customizes the default API server args. Only a subset of customized flags are supported. For the exact format, refer to the [API server documentation](https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/).",
          "items": {
            "$ref": "BareMetalApiServerArgument"
          },
          "type": "array"
        }
      },
      "description": "Specifies the control plane configuration.",
      "type": "object"
    },
    "BareMetalKubeletConfig": {
      "type": "object",
      "properties": {
        "registryPullQps": {
          "format": "int32",
          "description": "The limit of registry pulls per second. Setting this value to 0 means no limit. Updating this field may impact scalability by changing the amount of traffic produced by image pulls. Defaults to 5.",
          "type": "integer"
        },
        "serializeImagePullsDisabled": {
          "description": "Prevents the Kubelet from pulling multiple images at a time. We recommend *not* changing the default value on nodes that run docker daemon with version \u003c 1.9 or an Another Union File System (Aufs) storage backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has more details.",
          "type": "boolean"
        },
        "registryBurst": {
          "description": "The maximum size of bursty pulls, temporarily allows pulls to burst to this number, while still not exceeding registry_pull_qps. The value must not be a negative number. Updating this field may impact scalability by changing the amount of traffic produced by image pulls. Defaults to 10.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "KubeletConfig defines the modifiable kubelet configurations for bare metal machines. Note: this list includes fields supported in GKE (see https://cloud.google.com/kubernetes-engine/docs/how-to/node-system-config#kubelet-options).",
      "id": "BareMetalKubeletConfig"
    },
    "BareMetalNodePool": {
      "id": "BareMetalNodePool",
      "description": "Resource that represents a bare metal node pool.",
      "properties": {
        "status": {
          "description": "Output only. ResourceStatus representing the detailed node pool status.",
          "$ref": "ResourceStatus",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time at which this bare metal node pool was last updated."
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between."
        },
        "displayName": {
          "description": "The display name for the bare metal node pool.",
          "type": "string"
        },
        "reconciling": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. If set, there are currently changes in flight to the bare metal node pool."
        },
        "nodePoolConfig": {
          "$ref": "BareMetalNodePoolConfig",
          "description": "Required. Node pool configuration."
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.",
          "type": "string"
        },
        "uid": {
          "readOnly": true,
          "description": "Output only. The unique identifier of the bare metal node pool.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The current state of the bare metal node pool.",
          "enumDescriptions": [
            "Not set.",
            "The PROVISIONING state indicates the bare metal node pool is being created.",
            "The RUNNING state indicates the bare metal node pool has been created and is fully usable.",
            "The RECONCILING state indicates that the bare metal node pool is being updated. It remains available, but potentially with degraded performance.",
            "The STOPPING state indicates the bare metal node pool is being deleted.",
            "The ERROR state indicates the bare metal node pool is in a broken unrecoverable state.",
            "The DEGRADED state indicates the bare metal node pool requires user action to restore full functionality."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR",
            "DEGRADED"
          ]
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time at which this bare metal node pool was created."
        },
        "deleteTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which this bare metal node pool was deleted. If the resource is not deleted, this must be empty",
          "type": "string",
          "readOnly": true
        },
        "upgradePolicy": {
          "$ref": "BareMetalNodePoolUpgradePolicy",
          "description": "The worker node pool upgrade policy."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The bare metal node pool resource name."
        }
      },
      "type": "object"
    },
    "Operation": {
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      },
      "type": "object",
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "VmwareLoadBalancerConfig": {
      "type": "object",
      "description": "Specifies the locad balancer config for the VMware user cluster.",
      "id": "VmwareLoadBalancerConfig",
      "properties": {
        "vipConfig": {
          "description": "The VIPs used by the load balancer.",
          "$ref": "VmwareVipConfig"
        },
        "metalLbConfig": {
          "$ref": "VmwareMetalLbConfig",
          "description": "Configuration for MetalLB typed load balancers."
        },
        "manualLbConfig": {
          "description": "Manually configured load balancers.",
          "$ref": "VmwareManualLbConfig"
        },
        "f5Config": {
          "description": "Configuration for F5 Big IP typed load balancers.",
          "$ref": "VmwareF5BigIpConfig"
        }
      }
    },
    "BareMetalMetalLbConfig": {
      "type": "object",
      "description": "Represents configuration parameters for a MetalLB load balancer.",
      "properties": {
        "loadBalancerNodePoolConfig": {
          "description": "Specifies the node pool running the load balancer. L2 connectivity is required among nodes in this pool. If missing, the control plane node pool is used as the load balancer pool.",
          "$ref": "BareMetalLoadBalancerNodePoolConfig"
        },
        "addressPools": {
          "type": "array",
          "description": "Required. AddressPools is a list of non-overlapping IP pools used by load balancer typed services. All addresses must be routable to load balancer nodes. IngressVIP must be included in the pools.",
          "items": {
            "$ref": "BareMetalLoadBalancerAddressPool"
          }
        }
      },
      "id": "BareMetalMetalLbConfig"
    },
    "BareMetalOsEnvironmentConfig": {
      "type": "object",
      "description": "Specifies operating system settings for cluster provisioning.",
      "properties": {
        "packageRepoExcluded": {
          "type": "boolean",
          "description": "Whether the package repo should not be included when initializing bare metal machines."
        }
      },
      "id": "BareMetalOsEnvironmentConfig"
    },
    "BareMetalMultipleNetworkInterfacesConfig": {
      "description": "Specifies the multiple networking interfaces cluster configuration.",
      "type": "object",
      "id": "BareMetalMultipleNetworkInterfacesConfig",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether to enable multiple network interfaces for your pods. When set network_config.advanced_networking is automatically set to true."
        }
      }
    },
    "VmwareDhcpIpConfig": {
      "properties": {
        "enabled": {
          "description": "enabled is a flag to mark if DHCP IP allocation is used for VMware user clusters.",
          "type": "boolean"
        }
      },
      "id": "VmwareDhcpIpConfig",
      "description": "Represents the network configuration required for the VMware user clusters with DHCP IP configurations.",
      "type": "object"
    },
    "BareMetalNodePoolConfig": {
      "description": "BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node pool.",
      "type": "object",
      "id": "BareMetalNodePoolConfig",
      "properties": {
        "operatingSystem": {
          "enum": [
            "OPERATING_SYSTEM_UNSPECIFIED",
            "LINUX"
          ],
          "description": "Specifies the nodes operating system (default: LINUX).",
          "enumDescriptions": [
            "No operating system runtime selected.",
            "Linux operating system."
          ],
          "type": "string"
        },
        "kubeletConfig": {
          "description": "The modifiable kubelet configurations for the bare metal machines.",
          "$ref": "BareMetalKubeletConfig"
        },
        "nodeConfigs": {
          "description": "Required. The list of machine addresses in the bare metal node pool.",
          "type": "array",
          "items": {
            "$ref": "BareMetalNodeConfig"
          }
        },
        "taints": {
          "type": "array",
          "description": "The initial taints assigned to nodes of this node pool.",
          "items": {
            "$ref": "NodeTaint"
          }
        },
        "labels": {
          "type": "object",
          "description": "The labels assigned to nodes of this node pool. An object containing a list of key/value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VmwareAdminVCenterConfig": {
      "id": "VmwareAdminVCenterConfig",
      "properties": {
        "cluster": {
          "description": "The name of the vCenter cluster for the admin cluster.",
          "type": "string"
        },
        "dataDisk": {
          "description": "The name of the virtual machine disk (VMDK) for the admin cluster.",
          "type": "string"
        },
        "caCertData": {
          "description": "Contains the vCenter CA certificate public key for SSL verification.",
          "type": "string"
        },
        "address": {
          "type": "string",
          "description": "The vCenter IP address."
        },
        "folder": {
          "description": "The name of the vCenter folder for the admin cluster.",
          "type": "string"
        },
        "resourcePool": {
          "description": "The name of the vCenter resource pool for the admin cluster.",
          "type": "string"
        },
        "datastore": {
          "type": "string",
          "description": "The name of the vCenter datastore for the admin cluster."
        },
        "datacenter": {
          "description": "The name of the vCenter datacenter for the admin cluster.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "VmwareAdminVCenterConfig contains VCenter configuration for VMware admin cluster."
    },
    "VmwareIpBlock": {
      "description": "Represents a collection of IP addresses to assign to nodes.",
      "type": "object",
      "id": "VmwareIpBlock",
      "properties": {
        "netmask": {
          "description": "The netmask used by the VMware user cluster.",
          "type": "string"
        },
        "ips": {
          "items": {
            "$ref": "VmwareHostIp"
          },
          "description": "The node's network configurations used by the VMware user cluster.",
          "type": "array"
        },
        "gateway": {
          "description": "The network gateway used by the VMware user cluster.",
          "type": "string"
        }
      }
    },
    "BareMetalAdminPortConfig": {
      "description": "BareMetalAdminPortConfig is the specification of load balancer ports.",
      "type": "object",
      "properties": {
        "controlPlaneLoadBalancerPort": {
          "format": "int32",
          "description": "The port that control plane hosted load balancers will listen on.",
          "type": "integer"
        }
      },
      "id": "BareMetalAdminPortConfig"
    },
    "Expr": {
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "type": "object"
    },
    "VmwarePlatformConfig": {
      "type": "object",
      "id": "VmwarePlatformConfig",
      "description": "VmwarePlatformConfig represents configuration for the VMware platform.",
      "properties": {
        "requiredPlatformVersion": {
          "type": "string",
          "description": "Input only. The required platform version e.g. 1.13.1. If the current platform version is lower than the target version, the platform version will be updated to the target version. If the target version is not installed in the platform (bundle versions), download the target version bundle."
        },
        "platformVersion": {
          "readOnly": true,
          "description": "Output only. The platform version e.g. 1.13.2.",
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "$ref": "ResourceStatus",
          "description": "Output only. Resource status for the platform."
        },
        "bundles": {
          "type": "array",
          "items": {
            "$ref": "VmwareBundleConfig"
          },
          "readOnly": true,
          "description": "Output only. The list of bundles installed in the admin cluster."
        }
      }
    },
    "BareMetalLoadBalancerNodePoolConfig": {
      "id": "BareMetalLoadBalancerNodePoolConfig",
      "properties": {
        "nodePoolConfig": {
          "$ref": "BareMetalNodePoolConfig",
          "description": "The generic configuration for a node pool running a load balancer."
        }
      },
      "description": "Specifies the load balancer's node pool configuration.",
      "type": "object"
    },
    "VmwareManualLbConfig": {
      "properties": {
        "ingressHttpsNodePort": {
          "description": "NodePort for ingress service's https. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 30139).",
          "type": "integer",
          "format": "int32"
        },
        "controlPlaneNodePort": {
          "description": "NodePort for control plane service. The Kubernetes API server in the admin cluster is implemented as a Service of type NodePort (ex. 30968).",
          "type": "integer",
          "format": "int32"
        },
        "konnectivityServerNodePort": {
          "description": "NodePort for konnectivity server service running as a sidecar in each kube-apiserver pod (ex. 30564).",
          "type": "integer",
          "format": "int32"
        },
        "ingressHttpNodePort": {
          "description": "NodePort for ingress service's http. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 32527).",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "VmwareManualLbConfig",
      "description": "Represents configuration parameters for an already existing manual load balancer. Given the nature of manual load balancers it is expected that said load balancer will be fully managed by users. IMPORTANT: Please note that the Anthos On-Prem API will not generate or update ManualLB configurations it can only bind a pre-existing configuration to a new VMware user cluster."
    },
    "ResourceStatus": {
      "id": "ResourceStatus",
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "Human-friendly representation of the error message from controller. The error message can be temporary as the controller controller creates a cluster or node pool. If the error message persists for a longer period of time, it can be used to surface error message to indicate real problems requiring user intervention."
        },
        "conditions": {
          "items": {
            "$ref": "ResourceCondition"
          },
          "description": "ResourceCondition provide a standard mechanism for higher-level status reporting from controller.",
          "type": "array"
        }
      },
      "description": "ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED)."
    }
  },
  "mtlsRootUrl": "https://gkeonprem.mtls.googleapis.com/",
  "canonicalName": "GKE On-Prem",
  "rootUrl": "https://gkeonprem.googleapis.com/",
  "id": "gkeonprem:v1"
}

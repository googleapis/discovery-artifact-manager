{
  "id": "firebaseappdistribution:v1",
  "title": "Firebase App Distribution API",
  "description": "",
  "resources": {
    "projects": {
      "resources": {
        "testers": {
          "methods": {
            "batchAdd": {
              "request": {
                "$ref": "GoogleFirebaseAppdistroV1BatchAddTestersRequest"
              },
              "flatPath": "v1/projects/{projectsId}/testers:batchAdd",
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1BatchAddTestersResponse"
              },
              "description": "Batch adds testers. This call adds testers for the specified emails if they don't already exist. Returns all testers specified in the request, including newly created and previously existing testers. This action is idempotent.",
              "httpMethod": "POST",
              "path": "v1/{+project}/testers:batchAdd",
              "id": "firebaseappdistribution.projects.testers.batchAdd",
              "parameters": {
                "project": {
                  "description": "Required. The name of the project resource. Format: `projects/{project_number}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "project"
              ]
            },
            "list": {
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1ListTestersResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/testers",
              "path": "v1/{+parent}/testers",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "Optional. The maximum number of testers to return. The service may return fewer than this value. The valid range is [1-1000]; If unspecified (0), at most 10 testers are returned. Values above 1000 are coerced to 1000.",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. The expression to filter testers listed in the response. To learn more about filtering, refer to [Google's AIP-160 standard](http://aip.dev/160). Supported fields: - `name` - `displayName` - `groups` Example: - `name = \"projects/-/testers/*@example.com\"` - `displayName = \"Joe Sixpack\"` - `groups = \"projects/*/groups/qa-team\"`"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A page token, received from a previous `ListTesters` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTesters` must match the call that provided the page token."
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the project resource, which is the parent of the tester resources. Format: `projects/{project_number}`",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Lists testers and their resource ids.",
              "id": "firebaseappdistribution.projects.testers.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "batchRemove": {
              "parameterOrder": [
                "project"
              ],
              "httpMethod": "POST",
              "path": "v1/{+project}/testers:batchRemove",
              "parameters": {
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the project resource. Format: `projects/{project_number}`",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Batch removes testers. If found, this call deletes testers for the specified emails. Returns all deleted testers.",
              "id": "firebaseappdistribution.projects.testers.batchRemove",
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1BatchRemoveTestersResponse"
              },
              "request": {
                "$ref": "GoogleFirebaseAppdistroV1BatchRemoveTestersRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/testers:batchRemove"
            },
            "patch": {
              "request": {
                "$ref": "GoogleFirebaseAppdistroV1Tester"
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Update a tester. If the testers joins a group they gain access to all releases that the group has access to.",
              "id": "firebaseappdistribution.projects.testers.patch",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "The list of fields to update."
                },
                "name": {
                  "pattern": "^projects/[^/]+/testers/[^/]+$",
                  "required": true,
                  "description": "The name of the tester resource. Format: `projects/{project_number}/testers/{email_address}`",
                  "location": "path",
                  "type": "string"
                }
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1Tester"
              },
              "flatPath": "v1/projects/{projectsId}/testers/{testersId}"
            }
          }
        },
        "groups": {
          "methods": {
            "batchJoin": {
              "id": "firebaseappdistribution.projects.groups.batchJoin",
              "httpMethod": "POST",
              "parameterOrder": [
                "group"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleFirebaseAppdistroV1BatchJoinGroupRequest"
              },
              "path": "v1/{+group}:batchJoin",
              "flatPath": "v1/projects/{projectsId}/groups/{groupsId}:batchJoin",
              "parameters": {
                "group": {
                  "pattern": "^projects/[^/]+/groups/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the group resource to which testers are added. Format: `projects/{project_number}/groups/{group_alias}`",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Batch adds members to a group. The testers will gain access to all releases that the groups have access to.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "batchLeave": {
              "parameterOrder": [
                "group"
              ],
              "parameters": {
                "group": {
                  "description": "Required. The name of the group resource from which testers are removed. Format: `projects/{project_number}/groups/{group_alias}`",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/groups/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1/projects/{projectsId}/groups/{groupsId}:batchLeave",
              "description": "Batch removed members from a group. The testers will lose access to all releases that the groups have access to.",
              "id": "firebaseappdistribution.projects.groups.batchLeave",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+group}:batchLeave",
              "request": {
                "$ref": "GoogleFirebaseAppdistroV1BatchLeaveGroupRequest"
              }
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/groups/{groupsId}",
              "id": "firebaseappdistribution.projects.groups.patch",
              "request": {
                "$ref": "GoogleFirebaseAppdistroV1Group"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the group resource. Format: `projects/{project_number}/groups/{group_alias}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/groups/[^/]+$"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "The list of fields to update.",
                  "type": "string"
                }
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1Group"
              },
              "description": "Update a group."
            },
            "get": {
              "id": "firebaseappdistribution.projects.groups.get",
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1Group"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the group resource to retrieve. Format: `projects/{project_number}/groups/{group_alias}`",
                  "location": "path",
                  "pattern": "^projects/[^/]+/groups/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "description": "Get a group.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/groups/{groupsId}",
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "firebaseappdistribution.projects.groups.delete",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "flatPath": "v1/projects/{projectsId}/groups/{groupsId}",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "description": "Delete a group.",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the group resource. Format: `projects/{project_number}/groups/{group_alias}`",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/groups/[^/]+$"
                }
              }
            },
            "list": {
              "description": "List groups.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "description": "Optional. The maximum number of groups to return. The service may return fewer than this value. The valid range is [1-1000]; If unspecified (0), at most 25 groups are returned. Values above 1000 are coerced to 1000.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the project resource, which is the parent of the group resources. Format: `projects/{project_number}`",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A page token, received from a previous `ListGroups` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListGroups` must match the call that provided the page token."
                }
              },
              "path": "v1/{+parent}/groups",
              "flatPath": "v1/projects/{projectsId}/groups",
              "id": "firebaseappdistribution.projects.groups.list",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1ListGroupsResponse"
              },
              "httpMethod": "GET"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/groups",
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1Group"
              },
              "description": "Create a group.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "path": "v1/{+parent}/groups",
              "id": "firebaseappdistribution.projects.groups.create",
              "request": {
                "$ref": "GoogleFirebaseAppdistroV1Group"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The name of the project resource, which is the parent of the group resource. Format: `projects/{project_number}`",
                  "required": true
                },
                "groupId": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. The \"alias\" to use for the group, which will become the final component of the group's resource name. This value must be unique per project. The field is named `groupId` to comply with AIP guidance for user-specified IDs. This value should be 4-63 characters, and valid characters are `/a-z-/`. If not set, it will be generated based on the display name."
                }
              }
            }
          }
        },
        "apps": {
          "methods": {
            "getAabInfo": {
              "id": "firebaseappdistribution.projects.apps.getAabInfo",
              "parameters": {
                "name": {
                  "description": "Required. The name of the `AabInfo` resource to retrieve. Format: `projects/{project_number}/apps/{app_id}/aabInfo`",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/apps/[^/]+/aabInfo$",
                  "location": "path"
                }
              },
              "description": "Gets Android App Bundle (AAB) information for a Firebase app.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/apps/{appsId}/aabInfo",
              "response": {
                "$ref": "GoogleFirebaseAppdistroV1AabInfo"
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          },
          "resources": {
            "releases": {
              "resources": {
                "operations": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "path": "v1/{+name}/operations",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "firebaseappdistribution.projects.apps.releases.operations.list",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "The standard list filter."
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "The standard list page size.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The standard list page token.",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+$",
                          "description": "The name of the operation's parent resource.",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningListOperationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.",
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/operations"
                    },
                    "cancel": {
                      "path": "v1/{+name}:cancel",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "The name of the operation resource to be cancelled.",
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+/operations/[^/]+$",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "request": {
                        "$ref": "GoogleLongrunningCancelOperationRequest"
                      },
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/operations/{operationsId}:cancel",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "firebaseappdistribution.projects.apps.releases.operations.cancel"
                    },
                    "delete": {
                      "id": "firebaseappdistribution.projects.apps.releases.operations.delete",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "The name of the operation resource to be deleted.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+/operations/[^/]+$"
                        }
                      },
                      "path": "v1/{+name}",
                      "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/operations/{operationsId}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/operations/{operationsId}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "firebaseappdistribution.projects.apps.releases.operations.get",
                      "httpMethod": "GET",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "The name of the operation resource.",
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+/operations/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "path": "v1/{+name}"
                    },
                    "wait": {
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+/operations/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "The name of the operation resource to wait on."
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v1/{+name}:wait",
                      "id": "firebaseappdistribution.projects.apps.releases.operations.wait",
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/operations/{operationsId}:wait",
                      "request": {
                        "$ref": "GoogleLongrunningWaitOperationRequest"
                      }
                    }
                  }
                },
                "feedbackReports": {
                  "methods": {
                    "delete": {
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/feedbackReports/{feedbackReportsId}",
                      "description": "Deletes a feedback report.",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "firebaseappdistribution.projects.apps.releases.feedbackReports.delete",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the feedback report to delete. Format: projects/{project_number}/apps/{app}/releases/{release}/feedbackReports/{feedback_report}",
                          "location": "path",
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+/feedbackReports/[^/]+$",
                          "required": true
                        }
                      }
                    },
                    "get": {
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/feedbackReports/{feedbackReportsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "id": "firebaseappdistribution.projects.apps.releases.feedbackReports.get",
                      "description": "Gets a feedback report.",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+/feedbackReports/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the feedback report to retrieve. Format: projects/{project_number}/apps/{app}/releases/{release}/feedbackReports/{feedback_report}"
                        }
                      },
                      "response": {
                        "$ref": "GoogleFirebaseAppdistroV1FeedbackReport"
                      }
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleFirebaseAppdistroV1ListFeedbackReportsResponse"
                      },
                      "path": "v1/{+parent}/feedbackReports",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists feedback reports. By default, sorts by `createTime` in descending order.",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the release resource, which is the parent of the feedback report resources. Format: `projects/{project_number}/apps/{app}/releases/{release}`",
                          "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "The maximum number of feedback reports to return. The service may return fewer than this value. The valid range is [1-100]; If unspecified (0), at most 25 feedback reports are returned. Values above 100 are coerced to 100.",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListFeedbackReports` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListFeedbackReports` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}/feedbackReports",
                      "id": "firebaseappdistribution.projects.apps.releases.feedbackReports.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "batchDelete": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/apps/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the app resource, which is the parent of the release resources. Format: `projects/{project_number}/apps/{app_id}`",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "id": "firebaseappdistribution.projects.apps.releases.batchDelete",
                  "description": "Deletes releases. A maximum of 100 releases can be deleted per request.",
                  "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases:batchDelete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleFirebaseAppdistroV1BatchDeleteReleasesRequest"
                  },
                  "path": "v1/{+parent}/releases:batchDelete"
                },
                "distribute": {
                  "description": "Distributes a release to testers. This call does the following: 1. Creates testers for the specified emails, if none exist. 2. Adds the testers and groups to the release. 3. Sends new testers an invitation email. 4. Sends existing testers a new release email. The request will fail with a `INVALID_ARGUMENT` if it contains a group that doesn't exist.",
                  "id": "firebaseappdistribution.projects.apps.releases.distribute",
                  "path": "v1/{+name}:distribute",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleFirebaseAppdistroV1DistributeReleaseResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}:distribute",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the release resource to distribute. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}`"
                    }
                  },
                  "request": {
                    "$ref": "GoogleFirebaseAppdistroV1DistributeReleaseRequest"
                  }
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "firebaseappdistribution.projects.apps.releases.get",
                  "response": {
                    "$ref": "GoogleFirebaseAppdistroV1Release"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+$",
                      "description": "Required. The name of the release resource to retrieve. Format: projects/{project_number}/apps/{app_id}/releases/{release_id}"
                    }
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a release."
                },
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "firebaseappdistribution.projects.apps.releases.patch",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases/{releasesId}",
                  "request": {
                    "$ref": "GoogleFirebaseAppdistroV1Release"
                  },
                  "httpMethod": "PATCH",
                  "description": "Updates a release.",
                  "response": {
                    "$ref": "GoogleFirebaseAppdistroV1Release"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the release resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}`",
                      "pattern": "^projects/[^/]+/apps/[^/]+/releases/[^/]+$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "The list of fields to update.",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "id": "firebaseappdistribution.projects.apps.releases.list",
                  "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases",
                  "description": "Lists releases. By default, sorts by `createTime` in descending order.",
                  "response": {
                    "$ref": "GoogleFirebaseAppdistroV1ListReleasesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/releases",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of releases to return. The service may return fewer than this value. The valid range is [1-100]; If unspecified (0), at most 25 releases are returned. Values above 100 are coerced to 100."
                    },
                    "pageToken": {
                      "description": "A page token, received from a previous `ListReleases` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListReleases` must match the call that provided the page token.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The expression to filter releases listed in the response. To learn more about filtering, refer to [Google's AIP-160 standard](http://aip.dev/160). Supported fields: - `releaseNotes.text` supports `=` (can contain a wildcard character (`*`) at the beginning or end of the string) - `createTime` supports `\u003c`, `\u003c=`, `\u003e` and `\u003e=`, and expects an RFC-3339 formatted string Examples: - `createTime \u003c= \"2021-09-08T00:00:00+04:00\"` - `releaseNotes.text=\"fixes\" AND createTime \u003e= \"2021-09-08T00:00:00.0Z\"` - `releaseNotes.text=\"*v1.0.0-rc*\"`",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/apps/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the app resource, which is the parent of the release resources. Format: `projects/{project_number}/apps/{app_id}`"
                    },
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "The fields used to order releases. Supported fields: - `createTime` To specify descending order for a field, append a \"desc\" suffix, for example, `createTime desc`. If this parameter is not set, releases are ordered by `createTime` in descending order."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "media": {
      "methods": {
        "upload": {
          "path": "v1/{+app}/releases:upload",
          "parameters": {
            "app": {
              "location": "path",
              "pattern": "^projects/[^/]+/apps/[^/]+$",
              "required": true,
              "description": "The name of the app resource. Format: `projects/{project_number}/apps/{app_id}`",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "mediaUpload": {
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/v1/{+app}/releases:upload"
              }
            },
            "accept": [
              "*/*"
            ]
          },
          "description": "Uploads a binary. Uploading a binary can result in a new release being created, an update to an existing release, or a no-op if a release with the same binary already exists.",
          "supportsMediaUpload": true,
          "id": "firebaseappdistribution.media.upload",
          "request": {
            "$ref": "GoogleFirebaseAppdistroV1UploadReleaseRequest"
          },
          "httpMethod": "POST",
          "flatPath": "v1/projects/{projectsId}/apps/{appsId}/releases:upload",
          "parameterOrder": [
            "app"
          ],
          "response": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      }
    }
  },
  "version_module": true,
  "ownerName": "Google",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "firebaseappdistribution",
  "mtlsRootUrl": "https://firebaseappdistribution.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "documentationLink": "https://firebase.google.com/products/app-distribution",
  "canonicalName": "Firebase App Distribution",
  "kind": "discovery#restDescription",
  "version": "v1",
  "baseUrl": "https://firebaseappdistribution.googleapis.com/",
  "revision": "20240605",
  "rootUrl": "https://firebaseappdistribution.googleapis.com/",
  "schemas": {
    "GoogleFirebaseAppdistroV1BatchLeaveGroupRequest": {
      "properties": {
        "emails": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The email addresses of the testers to be removed from the group. A maximum of 999 and a minimum of 1 testers can be removed in a batch."
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppdistroV1BatchLeaveGroupRequest",
      "description": "Request message for `BatchLeaveGroup`"
    },
    "GdataBlobstore2Info": {
      "description": "Information to read/write to blobstore2.",
      "id": "GdataBlobstore2Info",
      "type": "object",
      "properties": {
        "readToken": {
          "type": "string",
          "description": "The blob read token. Needed to read blobs that have not been replicated. Might not be available until the final call."
        },
        "blobGeneration": {
          "type": "string",
          "format": "int64",
          "description": "The blob generation id."
        },
        "uploadMetadataContainer": {
          "description": "Metadata passed from Blobstore -\u003e Scotty for a new GCS upload. This is a signed, serialized blobstore2.BlobMetadataContainer proto which must never be consumed outside of Bigstore, and is not applicable to non-GCS media uploads.",
          "format": "byte",
          "type": "string"
        },
        "blobId": {
          "description": "The blob id, e.g., /blobstore/prod/playground/scotty",
          "type": "string"
        },
        "downloadReadHandle": {
          "format": "byte",
          "type": "string",
          "description": "Read handle passed from Bigstore -\u003e Scotty for a GCS download. This is a signed, serialized blobstore2.ReadHandle proto which must never be set outside of Bigstore, and is not applicable to non-GCS media downloads."
        }
      }
    },
    "GoogleFirebaseAppdistroV1BatchAddTestersRequest": {
      "description": "The Request message for batch adding testers",
      "properties": {
        "emails": {
          "description": "Required. The email addresses of the tester resources to create. A maximum of 999 and a minimum of 1 tester can be created in a batch.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleFirebaseAppdistroV1BatchAddTestersRequest",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1Release": {
      "type": "object",
      "description": "A release of a Firebase app.",
      "properties": {
        "testingUri": {
          "readOnly": true,
          "description": "Output only. A link to the release in the tester web clip or Android app that lets testers (which were granted access to the app) view release notes and install the app onto their devices.",
          "type": "string"
        },
        "firebaseConsoleUri": {
          "readOnly": true,
          "description": "Output only. A link to the Firebase console displaying a single release.",
          "type": "string"
        },
        "buildVersion": {
          "readOnly": true,
          "description": "Output only. Build version of the release. For an Android release, the build version is the `versionCode`. For an iOS release, the build version is the `CFBundleVersion`.",
          "type": "string"
        },
        "binaryDownloadUri": {
          "description": "Output only. A signed link (which expires in one hour) to directly download the app binary (IPA/APK/AAB) file.",
          "type": "string",
          "readOnly": true
        },
        "releaseNotes": {
          "$ref": "GoogleFirebaseAppdistroV1ReleaseNotes",
          "description": "Notes of the release."
        },
        "createTime": {
          "description": "Output only. The time the release was created.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "name": {
          "description": "The name of the release resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}`",
          "type": "string"
        },
        "displayVersion": {
          "type": "string",
          "description": "Output only. Display version of the release. For an Android release, the display version is the `versionName`. For an iOS release, the display version is the `CFBundleShortVersionString`.",
          "readOnly": true
        }
      },
      "id": "GoogleFirebaseAppdistroV1Release"
    },
    "GoogleFirebaseAppdistroV1Tester": {
      "id": "GoogleFirebaseAppdistroV1Tester",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The name of the tester associated with the Google account used to accept the tester invitation."
        },
        "lastActivityTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the tester was last active. This is the most recent time the tester installed one of the apps. If they've never installed one or if the release no longer exists, this is the time the tester was added to the project."
        },
        "groups": {
          "description": "The resource names of the groups this tester belongs to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "The name of the tester resource. Format: `projects/{project_number}/testers/{email_address}`"
        }
      },
      "description": "A person that can be invited to test apps in a Firebase project.",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1BatchDeleteReleasesRequest": {
      "id": "GoogleFirebaseAppdistroV1BatchDeleteReleasesRequest",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The names of the release resources to delete. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}` A maximum of 100 releases can be deleted per request."
        }
      },
      "type": "object",
      "description": "The request message for `BatchDeleteReleases`."
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "type": "object",
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          }
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "properties": {}
    },
    "GoogleFirebaseAppdistroV1BatchAddTestersResponse": {
      "id": "GoogleFirebaseAppdistroV1BatchAddTestersResponse",
      "description": "The Response message for `BatchAddTesters`.",
      "type": "object",
      "properties": {
        "testers": {
          "type": "array",
          "description": "The testers which are created and/or already exist",
          "items": {
            "$ref": "GoogleFirebaseAppdistroV1Tester"
          }
        }
      }
    },
    "GoogleLongrunningWaitOperationRequest": {
      "id": "GoogleLongrunningWaitOperationRequest",
      "properties": {
        "timeout": {
          "description": "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
          "type": "string",
          "format": "google-duration"
        }
      },
      "description": "The request message for Operations.WaitOperation.",
      "type": "object"
    },
    "GdataDiffVersionResponse": {
      "id": "GdataDiffVersionResponse",
      "type": "object",
      "properties": {
        "objectVersion": {
          "description": "The version of the object stored at the server.",
          "type": "string"
        },
        "objectSizeBytes": {
          "format": "int64",
          "type": "string",
          "description": "The total size of the server object."
        }
      },
      "description": "Backend response for a Diff get version response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol."
    },
    "GdataCompositeMedia": {
      "description": "A sequence of media data references representing composite data. Introduced to support Bigstore composite objects. For details, visit http://go/bigstore-composites.",
      "id": "GdataCompositeMedia",
      "properties": {
        "sha1Hash": {
          "type": "string",
          "description": "SHA-1 hash for the payload.",
          "format": "byte"
        },
        "blobRef": {
          "format": "byte",
          "type": "string",
          "deprecated": true,
          "description": "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef."
        },
        "inline": {
          "format": "byte",
          "description": "Media data, set if reference_type is INLINE",
          "type": "string"
        },
        "md5Hash": {
          "format": "byte",
          "description": "MD5 hash for the payload.",
          "type": "string"
        },
        "crc32cHash": {
          "format": "uint32",
          "type": "integer",
          "description": "crc32.c hash for the payload."
        },
        "objectId": {
          "$ref": "GdataObjectId",
          "description": "Reference to a TI Blob, set if reference_type is BIGSTORE_REF."
        },
        "length": {
          "format": "int64",
          "type": "string",
          "description": "Size of the data, in bytes"
        },
        "cosmoBinaryReference": {
          "format": "byte",
          "type": "string",
          "description": "A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field."
        },
        "blobstore2Info": {
          "description": "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob.",
          "$ref": "GdataBlobstore2Info"
        },
        "path": {
          "description": "Path to the data, set if reference_type is PATH",
          "type": "string"
        },
        "referenceType": {
          "type": "string",
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "BIGSTORE_REF",
            "COSMO_BINARY_REFERENCE"
          ],
          "description": "Describes what the field reference contains.",
          "enumDescriptions": [
            "Reference contains a GFS path or a local path.",
            "Reference points to a blobstore object. This could be either a v1 blob_ref or a v2 blobstore2_info. Clients should check blobstore2_info first, since v1 is being deprecated.",
            "Data is included into this proto buffer",
            "Reference points to a bigstore object",
            "Indicates the data is stored in cosmo_binary_reference."
          ]
        }
      },
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1ListReleasesResponse": {
      "properties": {
        "releases": {
          "items": {
            "$ref": "GoogleFirebaseAppdistroV1Release"
          },
          "description": "The releases",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "description": "The response message for `ListReleases`.",
      "id": "GoogleFirebaseAppdistroV1ListReleasesResponse",
      "type": "object"
    },
    "GdataDownloadParameters": {
      "description": "Parameters specific to media downloads.",
      "properties": {
        "allowGzipCompression": {
          "type": "boolean",
          "description": "A boolean to be returned in the response to Scotty. Allows/disallows gzip encoding of the payload content when the server thinks it's advantageous (hence, does not guarantee compression) which allows Scotty to GZip the response to the client."
        },
        "ignoreRange": {
          "description": "Determining whether or not Apiary should skip the inclusion of any Content-Range header on its response to Scotty.",
          "type": "boolean"
        }
      },
      "id": "GdataDownloadParameters",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1UploadReleaseResponse": {
      "id": "GoogleFirebaseAppdistroV1UploadReleaseResponse",
      "type": "object",
      "description": "Response message for `UploadRelease`.",
      "properties": {
        "release": {
          "$ref": "GoogleFirebaseAppdistroV1Release",
          "description": "Release associated with the uploaded binary."
        },
        "result": {
          "enum": [
            "UPLOAD_RELEASE_RESULT_UNSPECIFIED",
            "RELEASE_CREATED",
            "RELEASE_UPDATED",
            "RELEASE_UNMODIFIED"
          ],
          "description": "Result of upload release.",
          "enumDescriptions": [
            "Upload binary result unspecified",
            "Upload binary resulted in a new release",
            "Upload binary updated an existing release",
            "Upload binary resulted in a no-op. A release with the exact same binary already exists."
          ],
          "type": "string"
        }
      }
    },
    "GoogleFirebaseAppdistroV1BatchJoinGroupRequest": {
      "type": "object",
      "properties": {
        "createMissingTesters": {
          "type": "boolean",
          "description": "Indicates whether to create tester resources based on `emails` if they don't exist yet."
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The emails of the testers to be added to the group. A maximum of 999 and a minimum of 1 tester can be created in a batch."
        }
      },
      "description": "The request message for `BatchJoinGroup`",
      "id": "GoogleFirebaseAppdistroV1BatchJoinGroupRequest"
    },
    "GoogleFirebaseAppdistroV1DistributeReleaseRequest": {
      "type": "object",
      "properties": {
        "testerEmails": {
          "description": "A list of tester email addresses to be given access to this release. A combined maximum of 999 `testerEmails` and `groupAliases` can be specified in a single request.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "groupAliases": {
          "type": "array",
          "description": "A list of group aliases (IDs) to be given access to this release. A combined maximum of 999 `testerEmails` and `groupAliases` can be specified in a single request.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The request message for `DistributeRelease`.",
      "id": "GoogleFirebaseAppdistroV1DistributeReleaseRequest"
    },
    "GdataObjectId": {
      "properties": {
        "bucketName": {
          "description": "The name of the bucket to which this object belongs.",
          "type": "string"
        },
        "objectName": {
          "type": "string",
          "description": "The name of the object."
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "description": "Generation of the object. Generations are monotonically increasing across writes, allowing them to be be compared to determine which generation is newer. If this is omitted in a request, then you are requesting the live object. See http://go/bigstore-versions"
        }
      },
      "id": "GdataObjectId",
      "description": "This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive closure issues with JavaScript support; see http://b/8801763.",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1ListFeedbackReportsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "feedbackReports": {
          "description": "The feedback reports",
          "items": {
            "$ref": "GoogleFirebaseAppdistroV1FeedbackReport"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for `ListFeedbackReports`.",
      "id": "GoogleFirebaseAppdistroV1ListFeedbackReportsResponse"
    },
    "GoogleFirebaseAppdistroV1ListTestersResponse": {
      "description": "The response message for `ListTesters`.",
      "properties": {
        "testers": {
          "description": "The testers listed.",
          "items": {
            "$ref": "GoogleFirebaseAppdistroV1Tester"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppdistroV1ListTestersResponse"
    },
    "GoogleFirebaseAppdistroV1ListGroupsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "groups": {
          "description": "The groups listed.",
          "type": "array",
          "items": {
            "$ref": "GoogleFirebaseAppdistroV1Group"
          }
        }
      },
      "description": "The response message for `ListGroups`.",
      "id": "GoogleFirebaseAppdistroV1ListGroupsResponse",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1Group": {
      "type": "object",
      "description": "A group which can contain testers. A group can be invited to test apps in a Firebase project.",
      "properties": {
        "releaseCount": {
          "format": "int32",
          "description": "Output only. The number of releases this group is permitted to access.",
          "readOnly": true,
          "type": "integer"
        },
        "inviteLinkCount": {
          "format": "int32",
          "description": "Output only. The number of invite links for this group.",
          "readOnly": true,
          "type": "integer"
        },
        "displayName": {
          "description": "Required. The display name of the group.",
          "type": "string"
        },
        "name": {
          "description": "The name of the group resource. Format: `projects/{project_number}/groups/{group_alias}`",
          "type": "string"
        },
        "testerCount": {
          "description": "Output only. The number of testers who are members of this group.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleFirebaseAppdistroV1Group"
    },
    "GoogleFirebaseAppdistroV1DistributeReleaseResponse": {
      "type": "object",
      "description": "The response message for `DistributeRelease`.",
      "properties": {},
      "id": "GoogleFirebaseAppdistroV1DistributeReleaseResponse"
    },
    "GoogleFirebaseAppdistroV1AabInfo": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the `AabInfo` resource. Format: `projects/{project_number}/apps/{app}/aabInfo`"
        },
        "integrationState": {
          "enum": [
            "AAB_INTEGRATION_STATE_UNSPECIFIED",
            "INTEGRATED",
            "PLAY_ACCOUNT_NOT_LINKED",
            "NO_APP_WITH_GIVEN_BUNDLE_ID_IN_PLAY_ACCOUNT",
            "APP_NOT_PUBLISHED",
            "AAB_STATE_UNAVAILABLE",
            "PLAY_IAS_TERMS_NOT_ACCEPTED"
          ],
          "description": "App bundle integration state. Only valid for android apps.",
          "enumDescriptions": [
            "Aab integration state unspecified",
            "App can receive app bundle uploads",
            "Firebase project is not linked to a Play developer account",
            "There is no app in linked Play developer account with the same bundle id",
            "The app in Play developer account is not in a published state",
            "Play App status is unavailable",
            "Play IAS terms not accepted"
          ],
          "type": "string"
        },
        "testCertificate": {
          "description": "App bundle test certificate generated for the app. Set after the first app bundle is uploaded for this app.",
          "$ref": "GoogleFirebaseAppdistroV1TestCertificate"
        }
      },
      "type": "object",
      "description": "Android App Bundle (AAB) information for a Firebase app.",
      "id": "GoogleFirebaseAppdistroV1AabInfo"
    },
    "GdataDiffDownloadResponse": {
      "description": "Backend response for a Diff download response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
      "id": "GdataDiffDownloadResponse",
      "properties": {
        "objectLocation": {
          "$ref": "GdataCompositeMedia",
          "description": "The original object location."
        }
      },
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1FeedbackReport": {
      "properties": {
        "tester": {
          "description": "Output only. The resource name of the tester who submitted the feedback report.",
          "type": "string",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The text of the feedback report."
        },
        "firebaseConsoleUri": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. A link to the Firebase console displaying the feedback report."
        },
        "name": {
          "type": "string",
          "description": "The name of the feedback report resource. Format: `projects/{project_number}/apps/{app}/releases/{release}/feedbackReports/{feedback_report}`"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the feedback report was created."
        },
        "screenshotUri": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. A signed link (which expires in one hour) that lets you directly download the screenshot."
        }
      },
      "description": "A feedback report submitted by a tester for a release.",
      "id": "GoogleFirebaseAppdistroV1FeedbackReport",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1BatchRemoveTestersRequest": {
      "description": "The request message for `BatchRemoveTesters`.",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The email addresses of the tester resources to removed. A maximum of 999 and a minimum of 1 testers can be deleted in a batch."
        }
      },
      "type": "object",
      "id": "GoogleFirebaseAppdistroV1BatchRemoveTestersRequest"
    },
    "GoogleFirebaseAppdistroV1TestCertificate": {
      "properties": {
        "hashMd5": {
          "type": "string",
          "description": "Hex string of MD5 hash of the test certificate used to resign the AAB"
        },
        "hashSha256": {
          "type": "string",
          "description": "Hex string of SHA256 hash of the test certificate used to resign the AAB"
        },
        "hashSha1": {
          "description": "Hex string of SHA1 hash of the test certificate used to resign the AAB",
          "type": "string"
        }
      },
      "description": "App bundle test certificate",
      "id": "GoogleFirebaseAppdistroV1TestCertificate",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1UploadReleaseRequest": {
      "type": "object",
      "id": "GoogleFirebaseAppdistroV1UploadReleaseRequest",
      "description": "Request message for `UploadRelease`.",
      "properties": {
        "blob": {
          "$ref": "GdataMedia",
          "description": "Binary to upload"
        }
      }
    },
    "GdataDiffChecksumsResponse": {
      "description": "Backend response for a Diff get checksums response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
      "type": "object",
      "properties": {
        "checksumsLocation": {
          "$ref": "GdataCompositeMedia",
          "description": "Exactly one of these fields must be populated. If checksums_location is filled, the server will return the corresponding contents to the user. If object_location is filled, the server will calculate the checksums based on the content there and return that to the user. For details on the format of the checksums, see http://go/scotty-diff-protocol."
        },
        "objectSizeBytes": {
          "description": "The total size of the server object.",
          "type": "string",
          "format": "int64"
        },
        "objectLocation": {
          "description": "If set, calculate the checksums based on the contents and return them to the caller.",
          "$ref": "GdataCompositeMedia"
        },
        "chunkSizeBytes": {
          "type": "string",
          "format": "int64",
          "description": "The chunk size of checksums. Must be a multiple of 256KB."
        },
        "objectVersion": {
          "type": "string",
          "description": "The object version of the object the checksums are being returned for."
        }
      },
      "id": "GdataDiffChecksumsResponse"
    },
    "GdataDiffUploadRequest": {
      "type": "object",
      "id": "GdataDiffUploadRequest",
      "properties": {
        "objectVersion": {
          "type": "string",
          "description": "The object version of the object that is the base version the incoming diff script will be applied to. This field will always be filled in."
        },
        "objectInfo": {
          "$ref": "GdataCompositeMedia",
          "description": "The location of the new object. Agents must clone the object located here, as the upload server will delete the contents once a response is received."
        },
        "checksumsInfo": {
          "description": "The location of the checksums for the new object. Agents must clone the object located here, as the upload server will delete the contents once a response is received. For details on the format of the checksums, see http://go/scotty-diff-protocol.",
          "$ref": "GdataCompositeMedia"
        }
      },
      "description": "A Diff upload request. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol."
    },
    "GdataMedia": {
      "type": "object",
      "description": "A reference to data stored on the filesystem, on GFS or in blobstore.",
      "properties": {
        "blobRef": {
          "type": "string",
          "description": "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.",
          "format": "byte",
          "deprecated": true
        },
        "contentTypeInfo": {
          "description": "Extended content type information provided for Scotty uploads.",
          "$ref": "GdataContentTypeInfo"
        },
        "filename": {
          "description": "Original file name",
          "type": "string"
        },
        "length": {
          "description": "Size of the data, in bytes",
          "format": "int64",
          "type": "string"
        },
        "compositeMedia": {
          "type": "array",
          "items": {
            "$ref": "GdataCompositeMedia"
          },
          "description": "A composite media composed of one or more media objects, set if reference_type is COMPOSITE_MEDIA. The media length field must be set to the sum of the lengths of all composite media objects. Note: All composite media must have length specified."
        },
        "diffUploadRequest": {
          "$ref": "GdataDiffUploadRequest",
          "description": "Set if reference_type is DIFF_UPLOAD_REQUEST."
        },
        "diffUploadResponse": {
          "$ref": "GdataDiffUploadResponse",
          "description": "Set if reference_type is DIFF_UPLOAD_RESPONSE."
        },
        "isPotentialRetry": {
          "type": "boolean",
          "description": "|is_potential_retry| is set false only when Scotty is certain that it has not sent the request before. When a client resumes an upload, this field must be set true in agent calls, because Scotty cannot be certain that it has never sent the request before due to potential failure in the session state persistence."
        },
        "hash": {
          "type": "string",
          "description": "Deprecated, use one of explicit hash type fields instead. These two hash related fields will only be populated on Scotty based media uploads and will contain the content of the hash group in the NotificationRequest: http://cs/#google3/blobstore2/api/scotty/service/proto/upload_listener.proto&q=class:Hash Hex encoded hash value of the uploaded media.",
          "deprecated": true
        },
        "diffDownloadResponse": {
          "$ref": "GdataDiffDownloadResponse",
          "description": "Set if reference_type is DIFF_DOWNLOAD_RESPONSE."
        },
        "mediaId": {
          "description": "Media id to forward to the operation GetMedia. Can be set if reference_type is GET_MEDIA.",
          "type": "string",
          "format": "byte"
        },
        "sha1Hash": {
          "format": "byte",
          "description": "Scotty-provided SHA1 hash for an upload.",
          "type": "string"
        },
        "referenceType": {
          "enum": [
            "PATH",
            "BLOB_REF",
            "INLINE",
            "GET_MEDIA",
            "COMPOSITE_MEDIA",
            "BIGSTORE_REF",
            "DIFF_VERSION_RESPONSE",
            "DIFF_CHECKSUMS_RESPONSE",
            "DIFF_DOWNLOAD_RESPONSE",
            "DIFF_UPLOAD_REQUEST",
            "DIFF_UPLOAD_RESPONSE",
            "COSMO_BINARY_REFERENCE",
            "ARBITRARY_BYTES"
          ],
          "type": "string",
          "enumDescriptions": [
            "Reference contains a GFS path or a local path.",
            "Reference points to a blobstore object. This could be either a v1 blob_ref or a v2 blobstore2_info. Clients should check blobstore2_info first, since v1 is being deprecated.",
            "Data is included into this proto buffer",
            "Data should be accessed from the current service using the operation GetMedia.",
            "The content for this media object is stored across multiple partial media objects under the composite_media field.",
            "Reference points to a bigstore object",
            "Indicates the data is stored in diff_version_response.",
            "Indicates the data is stored in diff_checksums_response.",
            "Indicates the data is stored in diff_download_response.",
            "Indicates the data is stored in diff_upload_request.",
            "Indicates the data is stored in diff_upload_response.",
            "Indicates the data is stored in cosmo_binary_reference.",
            "Informs Scotty to generate a response payload with the size specified in the length field. The contents of the payload are generated by Scotty and are undefined. This is useful for testing download speeds between the user and Scotty without involving a real payload source. Note: range is not supported when using arbitrary_bytes."
          ],
          "description": "Describes what the field reference contains."
        },
        "contentType": {
          "description": "MIME type of the data",
          "type": "string"
        },
        "diffChecksumsResponse": {
          "$ref": "GdataDiffChecksumsResponse",
          "description": "Set if reference_type is DIFF_CHECKSUMS_RESPONSE."
        },
        "blobstore2Info": {
          "$ref": "GdataBlobstore2Info",
          "description": "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob."
        },
        "token": {
          "type": "string",
          "description": "A unique fingerprint/version id for the media data"
        },
        "cosmoBinaryReference": {
          "format": "byte",
          "type": "string",
          "description": "A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field."
        },
        "sha256Hash": {
          "type": "string",
          "description": "Scotty-provided SHA256 hash for an upload.",
          "format": "byte"
        },
        "inline": {
          "description": "Media data, set if reference_type is INLINE",
          "type": "string",
          "format": "byte"
        },
        "objectId": {
          "description": "Reference to a TI Blob, set if reference_type is BIGSTORE_REF.",
          "$ref": "GdataObjectId"
        },
        "timestamp": {
          "type": "string",
          "description": "Time at which the media data was last updated, in milliseconds since UNIX epoch",
          "format": "uint64"
        },
        "path": {
          "description": "Path to the data, set if reference_type is PATH",
          "type": "string"
        },
        "crc32cHash": {
          "format": "uint32",
          "description": "For Scotty Uploads: Scotty-provided hashes for uploads For Scotty Downloads: (WARNING: DO NOT USE WITHOUT PERMISSION FROM THE SCOTTY TEAM.) A Hash provided by the agent to be used to verify the data being downloaded. Currently only supported for inline payloads. Further, only crc32c_hash is currently supported.",
          "type": "integer"
        },
        "hashVerified": {
          "description": "For Scotty uploads only. If a user sends a hash code and the backend has requested that Scotty verify the upload against the client hash, Scotty will perform the check on behalf of the backend and will reject it if the hashes don't match. This is set to true if Scotty performed this verification.",
          "type": "boolean"
        },
        "diffVersionResponse": {
          "$ref": "GdataDiffVersionResponse",
          "description": "Set if reference_type is DIFF_VERSION_RESPONSE."
        },
        "bigstoreObjectRef": {
          "type": "string",
          "format": "byte",
          "description": "Use object_id instead.",
          "deprecated": true
        },
        "md5Hash": {
          "format": "byte",
          "type": "string",
          "description": "Scotty-provided MD5 hash for an upload."
        },
        "downloadParameters": {
          "$ref": "GdataDownloadParameters",
          "description": "Parameters for a media download."
        },
        "algorithm": {
          "description": "Deprecated, use one of explicit hash type fields instead. Algorithm used for calculating the hash. As of 2011/01/21, \"MD5\" is the only possible value for this field. New values may be added at any time.",
          "type": "string",
          "deprecated": true
        }
      },
      "id": "GdataMedia"
    },
    "GdataDiffUploadResponse": {
      "description": "Backend response for a Diff upload request. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
      "properties": {
        "originalObject": {
          "$ref": "GdataCompositeMedia",
          "description": "The location of the original file for a diff upload request. Must be filled in if responding to an upload start notification."
        },
        "objectVersion": {
          "type": "string",
          "description": "The object version of the object at the server. Must be included in the end notification response. The version in the end notification response must correspond to the new version of the object that is now stored at the server, after the upload."
        }
      },
      "id": "GdataDiffUploadResponse",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1ReleaseNotes": {
      "id": "GoogleFirebaseAppdistroV1ReleaseNotes",
      "type": "object",
      "description": "Notes that belong to a release.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of the release notes."
        }
      }
    },
    "GoogleRpcStatus": {
      "type": "object",
      "id": "GoogleRpcStatus",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleFirebaseAppdistroV1BatchRemoveTestersResponse": {
      "id": "GoogleFirebaseAppdistroV1BatchRemoveTestersResponse",
      "description": "The response message for `BatchRemoveTesters`",
      "type": "object",
      "properties": {
        "emails": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of deleted tester emails"
        }
      }
    },
    "GoogleLongrunningCancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "id": "GoogleLongrunningCancelOperationRequest",
      "type": "object"
    },
    "GdataContentTypeInfo": {
      "id": "GdataContentTypeInfo",
      "properties": {
        "fromFileName": {
          "description": "The content type of the file derived from the file extension of the original file name used by the client.",
          "type": "string"
        },
        "bestGuess": {
          "type": "string",
          "description": "Scotty's best guess of what the content type of the file is."
        },
        "fromUrlPath": {
          "type": "string",
          "description": "The content type of the file derived from the file extension of the URL path. The URL path is assumed to represent a file name (which is typically only true for agents that are providing a REST API)."
        },
        "fromHeader": {
          "description": "The content type of the file as specified in the request headers, multipart headers, or RUPIO start request.",
          "type": "string"
        },
        "fromBytes": {
          "type": "string",
          "description": "The content type of the file derived by looking at specific bytes (i.e. \"magic bytes\") of the actual file."
        }
      },
      "description": "Detailed Content-Type information from Scotty. The Content-Type of the media will typically be filled in by the header or Scotty's best_guess, but this extended information provides the backend with more information so that it can make a better decision if needed. This is only used on media upload requests from Scotty.",
      "type": "object"
    },
    "GoogleFirebaseAppdistroV1UploadReleaseMetadata": {
      "properties": {},
      "type": "object",
      "description": "Operation metadata for `UploadRelease`.",
      "id": "GoogleFirebaseAppdistroV1UploadReleaseMetadata"
    }
  },
  "basePath": "",
  "discoveryVersion": "v1",
  "servicePath": "",
  "parameters": {
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    }
  },
  "ownerDomain": "google.com",
  "batchPath": "batch"
}

{
  "resources": {
    "locations": {
      "resources": {
        "global": {
          "resources": {
            "metricsScopes": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/locations/global/metricsScopes/{metricsScopesId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The resource name of the Metrics Scope. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}",
                      "pattern": "^locations/global/metricsScopes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "MetricsScope"
                  },
                  "id": "monitoring.locations.global.metricsScopes.get",
                  "description": "Returns a specific Metrics Scope, including the list of projects monitored by the specified Metrics Scope.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/monitoring",
                    "https://www.googleapis.com/auth/monitoring.read"
                  ]
                },
                "listMetricsScopesByMonitoredProject": {
                  "httpMethod": "GET",
                  "flatPath": "v1/locations/global/metricsScopes:listMetricsScopesByMonitoredProject",
                  "id": "monitoring.locations.global.metricsScopes.listMetricsScopesByMonitoredProject",
                  "parameterOrder": [],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/monitoring",
                    "https://www.googleapis.com/auth/monitoring.read"
                  ],
                  "response": {
                    "$ref": "ListMetricsScopesByMonitoredProjectResponse"
                  },
                  "parameters": {
                    "monitoredResourceContainer": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. The resource name of the Monitored Project being requested. Example: projects/{MONITORED_PROJECT_ID_OR_NUMBER}"
                    }
                  },
                  "path": "v1/locations/global/metricsScopes:listMetricsScopesByMonitoredProject",
                  "description": "Returns a list of every Metrics Scope that a specific MonitoredProject has been added to. The metrics scope representing the specified monitored project will always be the first entry in the response."
                }
              },
              "resources": {
                "projects": {
                  "methods": {
                    "create": {
                      "path": "v1/{+parent}/projects",
                      "flatPath": "v1/locations/global/metricsScopes/{metricsScopesId}/projects",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^locations/global/metricsScopes/[^/]+$",
                          "type": "string",
                          "description": "Required. The resource name of the existing Metrics Scope that will monitor this project. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Adds a MonitoredProject with the given project ID to the specified Metrics Scope.",
                      "id": "monitoring.locations.global.metricsScopes.projects.create",
                      "request": {
                        "$ref": "MonitoredProject"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/monitoring",
                        "https://www.googleapis.com/auth/monitoring.write"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the MonitoredProject. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}Authorization requires the following Google IAM (https://cloud.google.com/iam) permissions on both the Metrics Scope and on the MonitoredProject: monitoring.metricsScopes.link",
                          "required": true,
                          "type": "string",
                          "pattern": "^locations/global/metricsScopes/[^/]+/projects/[^/]+$",
                          "location": "path"
                        }
                      },
                      "id": "monitoring.locations.global.metricsScopes.projects.delete",
                      "description": "Deletes a MonitoredProject from the specified Metrics Scope.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/monitoring",
                        "https://www.googleapis.com/auth/monitoring.write"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1/locations/global/metricsScopes/{metricsScopesId}/projects/{projectsId}",
                      "httpMethod": "DELETE",
                      "path": "v1/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "location": {
          "resources": {
            "prometheus": {
              "resources": {
                "api": {
                  "resources": {
                    "v1": {
                      "resources": {
                        "label": {
                          "methods": {
                            "values": {
                              "response": {
                                "$ref": "HttpBody"
                              },
                              "parameterOrder": [
                                "name",
                                "location",
                                "label"
                              ],
                              "description": "Lists possible values for a given label name.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/monitoring",
                                "https://www.googleapis.com/auth/monitoring.read"
                              ],
                              "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/label/{label}/values",
                              "path": "v1/{+name}/location/{location}/prometheus/api/v1/label/{label}/values",
                              "id": "monitoring.projects.location.prometheus.api.v1.label.values",
                              "httpMethod": "GET",
                              "parameters": {
                                "end": {
                                  "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "Location of the resource information. Has to be \"global\" now.",
                                  "required": true,
                                  "location": "path"
                                },
                                "start": {
                                  "location": "query",
                                  "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
                                  "type": "string"
                                },
                                "match": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "A list of matchers encoded in the Prometheus label matcher format to constrain the values to series that satisfy them."
                                },
                                "name": {
                                  "description": "The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER.",
                                  "pattern": "^projects/[^/]+$",
                                  "required": true,
                                  "type": "string",
                                  "location": "path"
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The label name for which values are queried.",
                                  "required": true,
                                  "location": "path"
                                }
                              }
                            }
                          }
                        },
                        "metadata": {
                          "methods": {
                            "list": {
                              "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/metadata",
                              "path": "v1/{+name}/location/{location}/prometheus/api/v1/metadata",
                              "parameterOrder": [
                                "name",
                                "location"
                              ],
                              "httpMethod": "GET",
                              "description": "Lists metadata for metrics.",
                              "parameters": {
                                "location": {
                                  "description": "Location of the resource information. Has to be \"global\" for now.",
                                  "required": true,
                                  "type": "string",
                                  "location": "path"
                                },
                                "metric": {
                                  "description": "The metric name for which to query metadata. If unset, all metric metadata is returned.",
                                  "location": "query",
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER.",
                                  "required": true,
                                  "pattern": "^projects/[^/]+$"
                                },
                                "limit": {
                                  "location": "query",
                                  "type": "string",
                                  "format": "int64",
                                  "description": "Maximum number of metrics to return."
                                }
                              },
                              "id": "monitoring.projects.location.prometheus.api.v1.metadata.list",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/monitoring",
                                "https://www.googleapis.com/auth/monitoring.read"
                              ],
                              "response": {
                                "$ref": "HttpBody"
                              }
                            }
                          }
                        }
                      },
                      "methods": {
                        "query_range": {
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "request": {
                            "$ref": "QueryRangeRequest"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "parameters": {
                            "location": {
                              "description": "Location of the resource information. Has to be \"global\" now.",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            },
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "The project on which to execute the request. Data associcated with the project's workspace stored under the The format is: projects/PROJECT_ID_OR_NUMBER. Open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine."
                            }
                          },
                          "id": "monitoring.projects.location.prometheus.api.v1.query_range",
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/query_range",
                          "description": "Evaluate a PromQL query with start, end time range.",
                          "httpMethod": "POST",
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/query_range"
                        },
                        "query": {
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "id": "monitoring.projects.location.prometheus.api.v1.query",
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/query",
                          "parameters": {
                            "location": {
                              "type": "string",
                              "description": "Location of the resource information. Has to be \"global\" now.",
                              "location": "path",
                              "required": true
                            },
                            "name": {
                              "description": "The project on which to execute the request. Data associcated with the project's workspace stored under the The format is: projects/PROJECT_ID_OR_NUMBER. Open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine.",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+$",
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "httpMethod": "POST",
                          "description": "Evaluate a PromQL query at a single point in time.",
                          "request": {
                            "$ref": "QueryInstantRequest"
                          },
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/query"
                        },
                        "series": {
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/series",
                          "description": "Lists metadata for metrics.",
                          "id": "monitoring.projects.location.prometheus.api.v1.series",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER.",
                              "pattern": "^projects/[^/]+$"
                            },
                            "location": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Location of the resource information. Has to be \"global\" for now."
                            }
                          },
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/series",
                          "request": {
                            "$ref": "QuerySeriesRequest"
                          }
                        },
                        "query_exemplars": {
                          "description": "Lists exemplars relevant to a given PromQL query,",
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/query_exemplars",
                          "request": {
                            "$ref": "QueryExemplarsRequest"
                          },
                          "parameters": {
                            "location": {
                              "location": "path",
                              "type": "string",
                              "description": "Location of the resource information. Has to be \"global\" now.",
                              "required": true
                            },
                            "name": {
                              "pattern": "^projects/[^/]+$",
                              "description": "The project on which to execute the request. Data associcated with the project's workspace stored under the The format is: projects/PROJECT_ID_OR_NUMBER. Open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/query_exemplars",
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "id": "monitoring.projects.location.prometheus.api.v1.query_exemplars",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "response": {
                            "$ref": "HttpBody"
                          }
                        },
                        "labels": {
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "name",
                            "location"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/monitoring",
                            "https://www.googleapis.com/auth/monitoring.read"
                          ],
                          "id": "monitoring.projects.location.prometheus.api.v1.labels",
                          "response": {
                            "$ref": "HttpBody"
                          },
                          "request": {
                            "$ref": "QueryLabelsRequest"
                          },
                          "flatPath": "v1/projects/{projectsId}/location/{location}/prometheus/api/v1/labels",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+$",
                              "type": "string",
                              "description": "The workspace on which to execute the request. It is not part of the open source API but used as a request path prefix to distinguish different virtual Prometheus instances of Google Prometheus Engine. The format is: projects/PROJECT_ID_OR_NUMBER.",
                              "location": "path",
                              "required": true
                            },
                            "location": {
                              "type": "string",
                              "description": "Location of the resource information. Has to be \"global\" now.",
                              "location": "path",
                              "required": true
                            }
                          },
                          "description": "Lists labels for metrics.",
                          "path": "v1/{+name}/location/{location}/prometheus/api/v1/labels"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "dashboards": {
          "methods": {
            "patch": {
              "parameters": {
                "validateOnly": {
                  "location": "query",
                  "type": "boolean",
                  "description": "If set, validate the request and preview the review, but do not actually save it."
                },
                "name": {
                  "pattern": "^projects/[^/]+/dashboards/[^/]+$",
                  "description": "Immutable. The resource name of the dashboard.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.write"
              ],
              "path": "v1/{+name}",
              "description": "Replaces an existing custom dashboard with a new definition.This method requires the monitoring.dashboards.update permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "response": {
                "$ref": "Dashboard"
              },
              "flatPath": "v1/projects/{projectsId}/dashboards/{dashboardsId}",
              "parameterOrder": [
                "name"
              ],
              "id": "monitoring.projects.dashboards.patch",
              "request": {
                "$ref": "Dashboard"
              },
              "httpMethod": "PATCH"
            },
            "get": {
              "response": {
                "$ref": "Dashboard"
              },
              "description": "Fetches a specific dashboard.This method requires the monitoring.dashboards.get permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.read"
              ],
              "flatPath": "v1/projects/{projectsId}/dashboards/{dashboardsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The resource name of the Dashboard. The format is one of: dashboards/[DASHBOARD_ID] (for system dashboards) projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID] (for custom dashboards).",
                  "pattern": "^projects/[^/]+/dashboards/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "id": "monitoring.projects.dashboards.get",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.write"
              ],
              "flatPath": "v1/projects/{projectsId}/dashboards",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/dashboards",
              "response": {
                "$ref": "Dashboard"
              },
              "description": "Creates a new custom dashboard. For examples on how you can use this API to create dashboards, see Managing dashboards by API (https://cloud.google.com/monitoring/dashboards/api-dashboard). This method requires the monitoring.dashboards.create permission on the specified project. For more information about permissions, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "parameters": {
                "validateOnly": {
                  "description": "If set, validate the request and preview the review, but do not actually save it.",
                  "type": "boolean",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The project on which to execute the request. The format is: projects/[PROJECT_ID_OR_NUMBER] The [PROJECT_ID_OR_NUMBER] must match the dashboard resource name."
                }
              },
              "id": "monitoring.projects.dashboards.create",
              "request": {
                "$ref": "Dashboard"
              },
              "httpMethod": "POST"
            },
            "list": {
              "response": {
                "$ref": "ListDashboardsResponse"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The scope of the dashboards to list. The format is: projects/[PROJECT_ID_OR_NUMBER] ",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "If this field is not empty then it must contain the nextPageToken value returned by a previous call to this method. Using this field causes the method to return additional results from the previous method call."
                },
                "pageSize": {
                  "description": "A positive number that is the maximum number of results to return. If unspecified, a default of 1000 is used.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              },
              "httpMethod": "GET",
              "id": "monitoring.projects.dashboards.list",
              "path": "v1/{+parent}/dashboards",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.read"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/projects/{projectsId}/dashboards",
              "description": "Lists the existing dashboards.This method requires the monitoring.dashboards.list permission on the specified project. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam)."
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/monitoring",
                "https://www.googleapis.com/auth/monitoring.write"
              ],
              "flatPath": "v1/projects/{projectsId}/dashboards/{dashboardsId}",
              "description": "Deletes an existing custom dashboard.This method requires the monitoring.dashboards.delete permission on the specified dashboard. For more information, see Cloud Identity and Access Management (https://cloud.google.com/iam).",
              "path": "v1/{+name}",
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/dashboards/[^/]+$",
                  "description": "Required. The resource name of the Dashboard. The format is: projects/[PROJECT_ID_OR_NUMBER]/dashboards/[DASHBOARD_ID] "
                }
              },
              "id": "monitoring.projects.dashboards.delete"
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "get": {
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "type": "string",
              "pattern": "^operations/.*$",
              "required": true,
              "location": "path"
            }
          },
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/monitoring",
            "https://www.googleapis.com/auth/monitoring.read"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "monitoring.operations.get",
          "path": "v1/{+name}",
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "GET"
        }
      }
    }
  },
  "baseUrl": "https://monitoring.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/monitoring.write": {
          "description": "Publish metric data to your Google Cloud projects"
        },
        "https://www.googleapis.com/auth/monitoring.read": {
          "description": "View monitoring data for all of your Google Cloud and third-party projects"
        },
        "https://www.googleapis.com/auth/monitoring": {
          "description": "View and write monitoring data for all of your Google and third-party Cloud and API projects"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."
        }
      }
    }
  },
  "description": "Manages your Cloud Monitoring data and configurations.",
  "name": "monitoring",
  "revision": "20230924",
  "basePath": "",
  "ownerName": "Google",
  "rootUrl": "https://monitoring.googleapis.com/",
  "protocol": "rest",
  "version": "v1",
  "ownerDomain": "google.com",
  "title": "Cloud Monitoring API",
  "batchPath": "batch",
  "mtlsRootUrl": "https://monitoring.mtls.googleapis.com/",
  "parameters": {
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "id": "monitoring:v1",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "canonicalName": "Monitoring",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/monitoring/api/",
  "schemas": {
    "TimeSeriesFilter": {
      "type": "object",
      "description": "A filter that defines a subset of time series data that is displayed in a widget. Time series data is fetched using the ListTimeSeries (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list) method.",
      "properties": {
        "filter": {
          "type": "string",
          "description": "Required. The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query."
        },
        "secondaryAggregation": {
          "$ref": "Aggregation",
          "description": "Apply a second aggregation after aggregation is applied."
        },
        "pickTimeSeriesFilter": {
          "$ref": "PickTimeSeriesFilter",
          "description": "Ranking based time series filter."
        },
        "aggregation": {
          "description": "By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.",
          "$ref": "Aggregation"
        },
        "statisticalTimeSeriesFilter": {
          "deprecated": true,
          "description": "Statistics based time series filter. Note: This field is deprecated and completely ignored by the API.",
          "$ref": "StatisticalTimeSeriesFilter"
        }
      },
      "id": "TimeSeriesFilter"
    },
    "Type": {
      "id": "Type",
      "properties": {
        "name": {
          "description": "The fully qualified message name.",
          "type": "string"
        },
        "oneofs": {
          "description": "The list of types appearing in oneof definitions in this type.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sourceContext": {
          "description": "The source context.",
          "$ref": "SourceContext"
        },
        "options": {
          "items": {
            "$ref": "Option"
          },
          "type": "array",
          "description": "The protocol buffer options."
        },
        "edition": {
          "description": "The source edition string, only valid when syntax is SYNTAX_EDITIONS.",
          "type": "string"
        },
        "syntax": {
          "enumDescriptions": [
            "Syntax proto2.",
            "Syntax proto3.",
            "Syntax editions."
          ],
          "enum": [
            "SYNTAX_PROTO2",
            "SYNTAX_PROTO3",
            "SYNTAX_EDITIONS"
          ],
          "description": "The source syntax.",
          "type": "string"
        },
        "fields": {
          "type": "array",
          "description": "The list of fields.",
          "items": {
            "$ref": "Field"
          }
        }
      },
      "description": "A protocol buffer message type.",
      "type": "object"
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "done": {
          "description": "If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        }
      }
    },
    "PickTimeSeriesFilter": {
      "type": "object",
      "description": "Describes a ranking-based time series filter. Each input time series is ranked with an aligner. The filter will allow up to num_time_series time series to pass through it, selecting them based on the relative ranking.For example, if ranking_method is METHOD_MEAN,direction is BOTTOM, and num_time_series is 3, then the 3 times series with the lowest mean values will pass through the filter.",
      "id": "PickTimeSeriesFilter",
      "properties": {
        "numTimeSeries": {
          "format": "int32",
          "type": "integer",
          "description": "How many time series to allow to pass through the filter."
        },
        "direction": {
          "description": "How to use the ranking to select time series that pass through the filter.",
          "enum": [
            "DIRECTION_UNSPECIFIED",
            "TOP",
            "BOTTOM"
          ],
          "enumDescriptions": [
            "Not allowed. You must specify a different Direction if you specify a PickTimeSeriesFilter.",
            "Pass the highest num_time_series ranking inputs.",
            "Pass the lowest num_time_series ranking inputs."
          ],
          "type": "string"
        },
        "rankingMethod": {
          "description": "ranking_method is applied to each time series independently to produce the value which will be used to compare the time series to other time series.",
          "enum": [
            "METHOD_UNSPECIFIED",
            "METHOD_MEAN",
            "METHOD_MAX",
            "METHOD_MIN",
            "METHOD_SUM",
            "METHOD_LATEST"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not allowed. You must specify a different Method if you specify a PickTimeSeriesFilter.",
            "Select the mean of all values.",
            "Select the maximum value.",
            "Select the minimum value.",
            "Compute the sum of all values.",
            "Select the most recent value."
          ]
        }
      }
    },
    "MosaicLayout": {
      "description": "A mosaic layout divides the available space into a grid of blocks, and overlays the grid with tiles. Unlike GridLayout, tiles may span multiple grid blocks and can be placed at arbitrary locations in the grid.",
      "type": "object",
      "id": "MosaicLayout",
      "properties": {
        "columns": {
          "description": "The number of columns in the mosaic grid. The number of columns must be between 1 and 12, inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "tiles": {
          "type": "array",
          "description": "The tiles to display.",
          "items": {
            "$ref": "Tile"
          }
        }
      }
    },
    "RatioPart": {
      "description": "Describes a query to build the numerator or denominator of a TimeSeriesFilterRatio.",
      "type": "object",
      "id": "RatioPart",
      "properties": {
        "aggregation": {
          "description": "By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.",
          "$ref": "Aggregation"
        },
        "filter": {
          "description": "Required. The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.",
          "type": "string"
        }
      }
    },
    "MetricsScope": {
      "properties": {
        "createTime": {
          "description": "Output only. The time when this Metrics Scope was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Immutable. The resource name of the Monitoring Metrics Scope. On input, the resource name can be specified with the scoping project ID or number. On output, the resource name is specified with the scoping project number. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when this Metrics Scope record was last updated."
        },
        "monitoredProjects": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. The list of projects monitored by this Metrics Scope.",
          "items": {
            "$ref": "MonitoredProject"
          }
        }
      },
      "description": "Represents a Metrics Scope (https://cloud.google.com/monitoring/settings#concept-scope) in Cloud Monitoring, which specifies one or more Google projects and zero or more AWS accounts to monitor together.",
      "id": "MetricsScope",
      "type": "object"
    },
    "DashboardFilter": {
      "type": "object",
      "description": "A filter to reduce the amount of data charted in relevant widgets.",
      "id": "DashboardFilter",
      "properties": {
        "filterType": {
          "enumDescriptions": [
            "Filter type is unspecified. This is not valid in a well-formed request.",
            "Filter on a resource label value",
            "Filter on a metrics label value",
            "Filter on a user metadata label value",
            "Filter on a system metadata label value",
            "Filter on a group id"
          ],
          "type": "string",
          "description": "The specified filter type",
          "enum": [
            "FILTER_TYPE_UNSPECIFIED",
            "RESOURCE_LABEL",
            "METRIC_LABEL",
            "USER_METADATA_LABEL",
            "SYSTEM_METADATA_LABEL",
            "GROUP"
          ]
        },
        "templateVariable": {
          "description": "The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.",
          "type": "string"
        },
        "labelKey": {
          "type": "string",
          "description": "Required. The key for the label"
        },
        "stringValue": {
          "description": "A variable-length string value.",
          "type": "string"
        }
      }
    },
    "Measure": {
      "description": "Preview: A chart measure for an SQL query. This is applied over the y-axis. This is a preview feature and may be subject to change before final release.",
      "properties": {
        "aggregationFunction": {
          "description": "Required. The aggregation function applied to the input column. This must not be set to \"none\" unless binning is disabled on the dimension. The aggregation function is used to group points on the dimension bins.",
          "$ref": "AggregationFunction"
        },
        "column": {
          "type": "string",
          "description": "Required. The column name within in the dataset used for the measure."
        }
      },
      "id": "Measure",
      "type": "object"
    },
    "LogsPanel": {
      "description": "A widget that displays a stream of log.",
      "id": "LogsPanel",
      "type": "object",
      "properties": {
        "filter": {
          "description": "A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries.",
          "type": "string"
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project."
        }
      }
    },
    "QuerySeriesRequest": {
      "type": "object",
      "description": "QuerySeries holds all parameters of the Prometheus upstream API for querying series.",
      "id": "QuerySeriesRequest",
      "properties": {
        "start": {
          "type": "string",
          "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp."
        },
        "end": {
          "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        }
      }
    },
    "GridLayout": {
      "properties": {
        "columns": {
          "type": "string",
          "description": "The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering.",
          "format": "int64"
        },
        "widgets": {
          "type": "array",
          "description": "The informational elements that are arranged into the columns row-first.",
          "items": {
            "$ref": "Widget"
          }
        }
      },
      "type": "object",
      "id": "GridLayout",
      "description": "A basic layout divides the available space into vertical columns of equal width and arranges a list of widgets using a row-first strategy."
    },
    "ListMetricsScopesByMonitoredProjectResponse": {
      "properties": {
        "metricsScopes": {
          "description": "A set of all metrics scopes that the specified monitored project has been added to.",
          "items": {
            "$ref": "MetricsScope"
          },
          "type": "array"
        }
      },
      "id": "ListMetricsScopesByMonitoredProjectResponse",
      "type": "object",
      "description": "Response for the ListMetricsScopesByMonitoredProject method."
    },
    "QueryLabelsRequest": {
      "properties": {
        "start": {
          "type": "string",
          "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp."
        },
        "match": {
          "description": "A list of matchers encoded in the Prometheus label matcher format to constrain the values to series that satisfy them.",
          "type": "string"
        },
        "end": {
          "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        }
      },
      "id": "QueryLabelsRequest",
      "type": "object",
      "description": "QueryLabelsRequest holds all parameters of the Prometheus upstream API for returning a list of label names."
    },
    "GaugeView": {
      "type": "object",
      "properties": {
        "upperBound": {
          "description": "The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.",
          "format": "double",
          "type": "number"
        },
        "lowerBound": {
          "format": "double",
          "description": "The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.",
          "type": "number"
        }
      },
      "id": "GaugeView",
      "description": "A gauge chart shows where the current value sits within a pre-defined range. The upper and lower bounds should define the possible range of values for the scorecard's query (inclusive)."
    },
    "TimeSeriesQuery": {
      "description": "TimeSeriesQuery collects the set of supported methods for querying time series data from the Stackdriver metrics API.",
      "properties": {
        "prometheusQuery": {
          "type": "string",
          "description": "A query used to fetch time series with PromQL."
        },
        "opsAnalyticsQuery": {
          "description": "Preview: A query used to fetch a time series, category series, or numeric series with SQL. This is a preview feature and may be subject to change before final release.",
          "$ref": "OpsAnalyticsQuery"
        },
        "unitOverride": {
          "type": "string",
          "description": "The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the unit (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in MetricDescriptor."
        },
        "timeSeriesFilterRatio": {
          "$ref": "TimeSeriesFilterRatio",
          "description": "Parameters to fetch a ratio between two time series filters."
        },
        "outputFullDuration": {
          "type": "boolean",
          "description": "Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.*Note: This could override the configured alignment period except for the cases where a series of data points are expected, like - XyChart - Scorecard's spark chart"
        },
        "timeSeriesFilter": {
          "description": "Filter parameters to fetch time series.",
          "$ref": "TimeSeriesFilter"
        },
        "timeSeriesQueryLanguage": {
          "type": "string",
          "description": "A query used to fetch time series with MQL."
        }
      },
      "type": "object",
      "id": "TimeSeriesQuery"
    },
    "HttpBody": {
      "id": "HttpBody",
      "properties": {
        "data": {
          "format": "byte",
          "description": "The HTTP request/response body as raw binary.",
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "description": "The HTTP Content-Type header value specifying the content type of the body."
        },
        "extensions": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
        }
      },
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page.This message can be used both in streaming and non-streaming API methods in the request as well as the response.It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body.Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
      "type": "object"
    },
    "XyChart": {
      "id": "XyChart",
      "description": "A chart that displays data on a 2D (X and Y axes) plane.",
      "properties": {
        "dataSets": {
          "description": "Required. The data displayed in this chart.",
          "items": {
            "$ref": "DataSet"
          },
          "type": "array"
        },
        "chartOptions": {
          "$ref": "ChartOptions",
          "description": "Display options for the chart."
        },
        "thresholds": {
          "type": "array",
          "description": "Threshold lines drawn horizontally across the chart.",
          "items": {
            "$ref": "Threshold"
          }
        },
        "y2Axis": {
          "$ref": "Axis",
          "description": "The properties applied to the y2-axis."
        },
        "timeshiftDuration": {
          "type": "string",
          "description": "The duration used to display a comparison chart. A comparison chart simultaneously shows values from two similar-length time periods (e.g., week-over-week metrics). The duration must be positive, and it can only be applied to charts with data sets of LINE plot type.",
          "format": "google-duration"
        },
        "xAxis": {
          "$ref": "Axis",
          "description": "The properties applied to the x-axis."
        },
        "yAxis": {
          "description": "The properties applied to the y-axis.",
          "$ref": "Axis"
        }
      },
      "type": "object"
    },
    "TableDisplayOptions": {
      "properties": {
        "shownColumns": {
          "items": {
            "type": "string"
          },
          "description": "Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings",
          "type": "array",
          "deprecated": true
        }
      },
      "type": "object",
      "description": "Table display options that can be reused.",
      "id": "TableDisplayOptions"
    },
    "IncidentList": {
      "id": "IncidentList",
      "properties": {
        "policyNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of alert policy names to filter the incident list by. Don't include the project ID prefix in the policy name. For example, use alertPolicies/utilization."
        },
        "monitoredResources": {
          "type": "array",
          "items": {
            "$ref": "MonitoredResource"
          },
          "description": "Optional. The monitored resource for which incidents are listed. The resource doesn't need to be fully specified. That is, you can specify the resource type but not the values of the resource labels. The resource type and labels are used for filtering."
        }
      },
      "description": "A widget that displays a list of incidents",
      "type": "object"
    },
    "ColumnLayout": {
      "properties": {
        "columns": {
          "items": {
            "$ref": "Column"
          },
          "description": "The columns of content to display.",
          "type": "array"
        }
      },
      "id": "ColumnLayout",
      "type": "object",
      "description": "A simplified layout that divides the available space into vertical columns and arranges a set of widgets vertically in each column."
    },
    "CollapsibleGroup": {
      "description": "A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.",
      "type": "object",
      "properties": {
        "collapsed": {
          "description": "The collapsed state of the widget on first page load.",
          "type": "boolean"
        }
      },
      "id": "CollapsibleGroup"
    },
    "Widget": {
      "id": "Widget",
      "description": "Widget contains a single dashboard component and configuration of how to present the component in the dashboard.",
      "type": "object",
      "properties": {
        "logsPanel": {
          "description": "A widget that shows a stream of logs.",
          "$ref": "LogsPanel"
        },
        "xyChart": {
          "$ref": "XyChart",
          "description": "A chart of time series data."
        },
        "collapsibleGroup": {
          "$ref": "CollapsibleGroup",
          "description": "A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets."
        },
        "pieChart": {
          "$ref": "PieChart",
          "description": "A widget that displays timeseries data as a pie chart."
        },
        "timeSeriesTable": {
          "$ref": "TimeSeriesTable",
          "description": "A widget that displays time series data in a tabular format."
        },
        "incidentList": {
          "description": "A widget that shows list of incidents.",
          "$ref": "IncidentList"
        },
        "alertChart": {
          "$ref": "AlertChart",
          "description": "A chart of alert policy data."
        },
        "text": {
          "description": "A raw string or markdown displaying textual content.",
          "$ref": "Text"
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the widget."
        },
        "blank": {
          "$ref": "Empty",
          "description": "A blank space."
        },
        "scorecard": {
          "$ref": "Scorecard",
          "description": "A scorecard summarizing time series data."
        }
      }
    },
    "QueryExemplarsRequest": {
      "id": "QueryExemplarsRequest",
      "description": "QueryExemplarsRequest holds all parameters of the Prometheus upstream API for querying exemplars.",
      "properties": {
        "end": {
          "type": "string",
          "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp."
        },
        "query": {
          "type": "string",
          "description": "A PromQL query string. Query lanauge documentation: https://prometheus.io/docs/prometheus/latest/querying/basics/."
        },
        "start": {
          "type": "string",
          "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp."
        }
      },
      "type": "object"
    },
    "Option": {
      "id": "Option",
      "properties": {
        "name": {
          "type": "string",
          "description": "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, \"map_entry\". For custom options, it should be the fully-qualified name. For example, \"google.api.http\"."
        },
        "value": {
          "type": "object",
          "description": "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "description": "A protocol buffer option, which can be attached to a message, field, enumeration, etc.",
      "type": "object"
    },
    "Scorecard": {
      "id": "Scorecard",
      "properties": {
        "gaugeView": {
          "description": "Will cause the scorecard to show a gauge chart.",
          "$ref": "GaugeView"
        },
        "blankView": {
          "description": "Will cause the Scorecard to show only the value, with no indicator to its value relative to its thresholds.",
          "$ref": "Empty"
        },
        "sparkChartView": {
          "$ref": "SparkChartView",
          "description": "Will cause the scorecard to show a spark chart."
        },
        "timeSeriesQuery": {
          "$ref": "TimeSeriesQuery",
          "description": "Required. Fields for querying time series data from the Stackdriver metrics API."
        },
        "thresholds": {
          "items": {
            "$ref": "Threshold"
          },
          "type": "array",
          "description": "The thresholds used to determine the state of the scorecard given the time series' current value. For an actual value x, the scorecard is in a danger state if x is less than or equal to a danger threshold that triggers below, or greater than or equal to a danger threshold that triggers above. Similarly, if x is above/below a warning threshold that triggers above/below, then the scorecard is in a warning state - unless x also puts it in a danger state. (Danger trumps warning.)As an example, consider a scorecard with the following four thresholds: { value: 90, category: 'DANGER', trigger: 'ABOVE', }, { value: 70, category: 'WARNING', trigger: 'ABOVE', }, { value: 10, category: 'DANGER', trigger: 'BELOW', }, { value: 20, category: 'WARNING', trigger: 'BELOW', } Then: values less than or equal to 10 would put the scorecard in a DANGER state, values greater than 10 but less than or equal to 20 a WARNING state, values strictly between 20 and 70 an OK state, values greater than or equal to 70 but less than 90 a WARNING state, and values greater than or equal to 90 a DANGER state."
        }
      },
      "type": "object",
      "description": "A widget showing the latest value of a metric, and how this value relates to one or more thresholds."
    },
    "SpanContext": {
      "properties": {
        "spanName": {
          "description": "The resource name of the span. The format is: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] [TRACE_ID] is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array.[SPAN_ID] is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.",
          "type": "string"
        }
      },
      "description": "The context of a span. This is attached to an Exemplar in Distribution values during aggregation.It contains the name of a span with format: projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID] ",
      "id": "SpanContext",
      "type": "object"
    },
    "MonitoredProject": {
      "description": "A project being monitored (https://cloud.google.com/monitoring/settings/multiple-projects#create-multi) by a Metrics Scope.",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the MonitoredProject. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time when this MonitoredProject was created.",
          "format": "google-datetime"
        }
      },
      "id": "MonitoredProject",
      "type": "object"
    },
    "SourceContext": {
      "properties": {
        "fileName": {
          "type": "string",
          "description": "The path-qualified name of the .proto file that contained the associated protobuf element. For example: \"google/protobuf/source_context.proto\"."
        }
      },
      "id": "SourceContext",
      "description": "SourceContext represents information about the source of a protobuf element, like the file in which it is defined.",
      "type": "object"
    },
    "StatisticalTimeSeriesFilter": {
      "properties": {
        "rankingMethod": {
          "enumDescriptions": [
            "Not allowed in well-formed requests.",
            "Compute the outlier score of each stream."
          ],
          "description": "rankingMethod is applied to a set of time series, and then the produced value for each individual time series is used to compare a given time series to others. These are methods that cannot be applied stream-by-stream, but rather require the full context of a request to evaluate time series.",
          "enum": [
            "METHOD_UNSPECIFIED",
            "METHOD_CLUSTER_OUTLIER"
          ],
          "type": "string"
        },
        "numTimeSeries": {
          "format": "int32",
          "type": "integer",
          "description": "How many time series to output."
        }
      },
      "description": "A filter that ranks streams based on their statistical relation to other streams in a request. Note: This field is deprecated and completely ignored by the API.",
      "type": "object",
      "id": "StatisticalTimeSeriesFilter"
    },
    "SparkChartView": {
      "id": "SparkChartView",
      "description": "A sparkChart is a small chart suitable for inclusion in a table-cell or inline in text. This message contains the configuration for a sparkChart to show up on a Scorecard, showing recent trends of the scorecard's timeseries.",
      "type": "object",
      "properties": {
        "sparkChartType": {
          "enumDescriptions": [
            "Not allowed in well-formed requests.",
            "The sparkline will be rendered as a small line chart.",
            "The sparkbar will be rendered as a small bar chart."
          ],
          "type": "string",
          "enum": [
            "SPARK_CHART_TYPE_UNSPECIFIED",
            "SPARK_LINE",
            "SPARK_BAR"
          ],
          "description": "Required. The type of sparkchart to show in this chartView."
        },
        "minAlignmentPeriod": {
          "type": "string",
          "description": "The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query. For example, if the data is published once every 10 minutes it would not make sense to fetch and align data at one minute intervals. This field is optional and exists only as a hint.",
          "format": "google-duration"
        }
      }
    },
    "DataSet": {
      "properties": {
        "timeSeriesQuery": {
          "description": "Required. Fields for querying time series data from the Stackdriver metrics API.",
          "$ref": "TimeSeriesQuery"
        },
        "plotType": {
          "enumDescriptions": [
            "Plot type is unspecified. The view will default to LINE.",
            "The data is plotted as a set of lines (one line per series).",
            "The data is plotted as a set of filled areas (one area per series), with the areas stacked vertically (the base of each area is the top of its predecessor, and the base of the first area is the x-axis). Since the areas do not overlap, each is filled with a different opaque color.",
            "The data is plotted as a set of rectangular boxes (one box per series), with the boxes stacked vertically (the base of each box is the top of its predecessor, and the base of the first box is the x-axis). Since the boxes do not overlap, each is filled with a different opaque color.",
            "The data is plotted as a heatmap. The series being plotted must have a DISTRIBUTION value type. The value of each bucket in the distribution is displayed as a color. This type is not currently available in the Stackdriver Monitoring application."
          ],
          "enum": [
            "PLOT_TYPE_UNSPECIFIED",
            "LINE",
            "STACKED_AREA",
            "STACKED_BAR",
            "HEATMAP"
          ],
          "description": "How this data should be plotted on the chart.",
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "Dimension"
          },
          "description": "Optional. A collection of dimension columns."
        },
        "targetAxis": {
          "enum": [
            "TARGET_AXIS_UNSPECIFIED",
            "Y1",
            "Y2"
          ],
          "type": "string",
          "description": "Optional. The target axis to use for plotting the metric.",
          "enumDescriptions": [
            "The target axis was not specified. Defaults to Y1.",
            "The y_axis (the right axis of chart).",
            "The y2_axis (the left axis of chart)."
          ]
        },
        "breakdowns": {
          "type": "array",
          "items": {
            "$ref": "Breakdown"
          },
          "description": "Optional. The collection of breakdowns to be applied to the dataset."
        },
        "minAlignmentPeriod": {
          "description": "Optional. The lower bound on data point frequency for this data set, implemented by specifying the minimum alignment period to use in a time series query For example, if the data is published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It would not make sense to fetch and align data at one minute intervals.",
          "type": "string",
          "format": "google-duration"
        },
        "legendTemplate": {
          "description": "A template string for naming TimeSeries in the resulting data set. This should be a string with interpolations of the form ${label_name}, which will resolve to the label's value.",
          "type": "string"
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "Measure"
          },
          "description": "Optional. A collection of measures."
        }
      },
      "description": "Groups a time series query definition with charting options.",
      "id": "DataSet",
      "type": "object"
    },
    "TableDataSet": {
      "id": "TableDataSet",
      "description": "Groups a time series query definition with table options.",
      "type": "object",
      "properties": {
        "tableDisplayOptions": {
          "description": "Optional. Table display options for configuring how the table is rendered.",
          "$ref": "TableDisplayOptions"
        },
        "timeSeriesQuery": {
          "$ref": "TimeSeriesQuery",
          "description": "Required. Fields for querying time series data from the Stackdriver metrics API."
        },
        "tableTemplate": {
          "description": "Optional. A template string for naming TimeSeries in the resulting data set. This should be a string with interpolations of the form ${label_name}, which will resolve to the label's value i.e. \"${resource.labels.project_id}.\"",
          "type": "string"
        },
        "minAlignmentPeriod": {
          "format": "google-duration",
          "type": "string",
          "description": "Optional. The lower bound on data point frequency for this data set, implemented by specifying the minimum alignment period to use in a time series query For example, if the data is published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It would not make sense to fetch and align data at one minute intervals."
        }
      }
    },
    "Parameter": {
      "id": "Parameter",
      "properties": {
        "doubleValue": {
          "format": "double",
          "description": "A floating-point parameter value.",
          "type": "number"
        },
        "intValue": {
          "description": "An integer parameter value.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Preview: Parameter value applied to the aggregation function. This is a preview feature and may be subject to change before final release.",
      "type": "object"
    },
    "Breakdown": {
      "properties": {
        "column": {
          "description": "Required. The name of the column in the dataset containing the breakdown values.",
          "type": "string"
        },
        "sortOrder": {
          "enum": [
            "SORT_ORDER_UNSPECIFIED",
            "SORT_ORDER_NONE",
            "SORT_ORDER_ASCENDING",
            "SORT_ORDER_DESCENDING"
          ],
          "type": "string",
          "enumDescriptions": [
            "An unspecified sort order. This option is invalid when sorting is required.",
            "No sorting is applied.",
            "The lowest-valued entries are selected first.",
            "The highest-valued entries are selected first."
          ],
          "description": "Required. The sort order is applied to the values of the breakdown column."
        },
        "limit": {
          "format": "int32",
          "description": "Required. A limit to the number of breakdowns. If set to zero then all possible breakdowns are applied. The list of breakdowns is dependent on the value of the sort_order field.",
          "type": "integer"
        },
        "aggregationFunction": {
          "$ref": "AggregationFunction",
          "description": "Required. The Aggregation function is applied across all data in each breakdown created."
        }
      },
      "description": "Preview: A breakdown is an aggregation applied to the measures over a specified column. A breakdown can result in multiple series across a category for the provided measure. This is a preview feature and may be subject to change before final release.",
      "type": "object",
      "id": "Breakdown"
    },
    "OpsAnalyticsQuery": {
      "type": "object",
      "description": "Preview: A query that produces an aggregated response and supporting data. This is a preview feature and may be subject to change before final release.",
      "properties": {
        "sql": {
          "type": "string",
          "description": "A SQL query to fetch time series, category series, or numeric series data."
        }
      },
      "id": "OpsAnalyticsQuery"
    },
    "AlertChart": {
      "type": "object",
      "description": "A chart that displays alert policy data.",
      "id": "AlertChart",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The resource name of the alert policy. The format is: projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID] "
        }
      }
    },
    "Axis": {
      "id": "Axis",
      "properties": {
        "label": {
          "description": "The label of the axis.",
          "type": "string"
        },
        "scale": {
          "description": "The axis scale. By default, a linear scale is used.",
          "enumDescriptions": [
            "Scale is unspecified. The view will default to LINEAR.",
            "Linear scale.",
            "Logarithmic scale (base 10)."
          ],
          "enum": [
            "SCALE_UNSPECIFIED",
            "LINEAR",
            "LOG10"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "description": "A chart axis."
    },
    "PieChart": {
      "id": "PieChart",
      "properties": {
        "showLabels": {
          "type": "boolean",
          "description": "Optional. Indicates whether or not the pie chart should show slices' labels"
        },
        "showTotal": {
          "description": "Optional. Indicates whether or not donut chart should show the total in the middle",
          "type": "boolean"
        },
        "chartType": {
          "enumDescriptions": [
            "The zero value. No type specified. Do not use.",
            "A Pie type PieChart.",
            "Similar to PIE, but the DONUT type PieChart has a hole in the middle."
          ],
          "type": "string",
          "description": "Required. Indicates the visualization type for the PieChart.",
          "enum": [
            "PIE_CHART_TYPE_UNSPECIFIED",
            "PIE",
            "DONUT"
          ]
        },
        "sliceAggregatedThreshold": {
          "format": "float",
          "type": "number",
          "description": "Optional. If slices's values are smaller than this value, they will be combined into other category"
        },
        "dataSets": {
          "type": "array",
          "items": {
            "$ref": "PieChartDataSet"
          },
          "description": "Required. The queries for the chart's data."
        }
      },
      "description": "A widget that displays timeseries data as a pie or a donut.",
      "type": "object"
    },
    "Text": {
      "properties": {
        "format": {
          "enum": [
            "FORMAT_UNSPECIFIED",
            "MARKDOWN",
            "RAW"
          ],
          "enumDescriptions": [
            "Format is unspecified. Defaults to MARKDOWN.",
            "The text contains Markdown formatting.",
            "The text contains no special formatting."
          ],
          "type": "string",
          "description": "How the text content is formatted."
        },
        "style": {
          "description": "How the text is styled",
          "$ref": "TextStyle"
        },
        "content": {
          "description": "The text content to be displayed.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Text",
      "description": "A widget that displays textual content."
    },
    "AggregationFunction": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Required. The type of aggregation function, must be one of the following: \"none\" - no function. \"percentile\" - APPROX_QUANTILES() - 1 parameter numeric value \"average\" - AVG() \"count\" - COUNT() \"count-distinct\" - COUNT(DISTINCT) \"count-distinct-approx\" - APPROX_COUNT_DISTINCT() \"max\" - MAX() \"min\" - MIN() \"sum\" - SUM()",
          "type": "string"
        },
        "parameters": {
          "description": "Optional. Parameters applied to the aggregation function. Only used for functions that require them.",
          "type": "array",
          "items": {
            "$ref": "Parameter"
          }
        }
      },
      "description": "Preview: An identifier for an aggregation function. Aggregation functions are SQL functions that group or transform data from multiple points to a single point. This is a preview feature and may be subject to change before final release.",
      "id": "AggregationFunction"
    },
    "TimeSeriesTable": {
      "id": "TimeSeriesTable",
      "properties": {
        "columnSettings": {
          "items": {
            "$ref": "ColumnSettings"
          },
          "type": "array",
          "description": "Optional. The list of the persistent column settings for the table."
        },
        "dataSets": {
          "type": "array",
          "items": {
            "$ref": "TableDataSet"
          },
          "description": "Required. The data displayed in this table."
        },
        "metricVisualization": {
          "enumDescriptions": [
            "Unspecified state",
            "Default text rendering",
            "Horizontal bar rendering"
          ],
          "type": "string",
          "enum": [
            "METRIC_VISUALIZATION_UNSPECIFIED",
            "NUMBER",
            "BAR"
          ],
          "description": "Optional. Store rendering strategy"
        }
      },
      "type": "object",
      "description": "A table that displays time series data."
    },
    "Dimension": {
      "type": "object",
      "description": "Preview: A chart dimension for an SQL query. This is applied over the x-axis. This is a preview feature and may be subject to change before final release.",
      "properties": {
        "floatBinSize": {
          "type": "number",
          "format": "double",
          "description": "Optional. float_bin_size is used when the column type used for a dimension is a floating point numeric column."
        },
        "timeBinSize": {
          "description": "time_bin_size is used when the data type specified by column is a time type and the bin size is determined by a time duration. If column_type is DATE, this must be a whole value multiple of 1 day. If column_type is TIME, this must be less than or equal to 24 hours.",
          "format": "google-duration",
          "type": "string"
        },
        "columnType": {
          "description": "Optional. The type of the dimension column. This is relevant only if one of the bin_size fields is set. If it is empty, the type TIMESTAMP or INT64 will be assumed based on which bin_size field is set. If populated, this should be set to one of the following types: DATE, TIME, DATETIME, TIMESTAMP, BIGNUMERIC, INT64, NUMERIC, FLOAT64.",
          "type": "string"
        },
        "sortOrder": {
          "enum": [
            "SORT_ORDER_UNSPECIFIED",
            "SORT_ORDER_NONE",
            "SORT_ORDER_ASCENDING",
            "SORT_ORDER_DESCENDING"
          ],
          "enumDescriptions": [
            "An unspecified sort order. This option is invalid when sorting is required.",
            "No sorting is applied.",
            "The lowest-valued entries are selected first.",
            "The highest-valued entries are selected first."
          ],
          "description": "The sort order applied to the sort column.",
          "type": "string"
        },
        "sortColumn": {
          "type": "string",
          "description": "The column name to sort on for binning. This column can be the same column as this dimension or any other column used as a measure in the results. If sort_order is set to NONE, then this value is not used."
        },
        "column": {
          "type": "string",
          "description": "Required. The name of the column in the source SQL query that is used to chart the dimension."
        },
        "numericBinSize": {
          "format": "int32",
          "description": "numeric_bin_size is used when the column type used for a dimension is numeric or string.",
          "type": "integer"
        },
        "maxBinCount": {
          "format": "int32",
          "type": "integer",
          "description": "A limit to the number of bins generated. When 0 is specified, the maximum count is not enforced."
        }
      },
      "id": "Dimension"
    },
    "QueryInstantRequest": {
      "type": "object",
      "id": "QueryInstantRequest",
      "properties": {
        "query": {
          "type": "string",
          "description": "A PromQL query string. Query lanauge documentation: https://prometheus.io/docs/prometheus/latest/querying/basics/."
        },
        "timeout": {
          "description": "An upper bound timeout for the query. Either a Prometheus duration string (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating point seconds. This non-standard encoding must be used for compatibility with the open source API. Clients may still implement timeouts at the connection level while ignoring this field.",
          "type": "string"
        },
        "time": {
          "description": "The single point in time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        }
      },
      "description": "QueryInstantRequest holds all parameters of the Prometheus upstream instant query API plus GCM specific parameters."
    },
    "MonitoredResource": {
      "id": "MonitoredResource",
      "properties": {
        "labels": {
          "description": "Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "description": "Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list)."
        }
      },
      "type": "object",
      "description": "An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples include virtual machine instances, databases, and storage devices such as disks. The type field identifies a MonitoredResourceDescriptor object that describes the resource's schema. Information in the labels field identifies the actual resource and its attributes according to the schema. For example, a particular Compute Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for \"gce_instance\" has labels \"project_id\", \"instance_id\" and \"zone\": { \"type\": \"gce_instance\", \"labels\": { \"project_id\": \"my-project\", \"instance_id\": \"12345678901234\", \"zone\": \"us-central1-a\" }} "
    },
    "Column": {
      "type": "object",
      "id": "Column",
      "properties": {
        "weight": {
          "type": "string",
          "format": "int64",
          "description": "The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering."
        },
        "widgets": {
          "description": "The display widgets arranged vertically in this column.",
          "type": "array",
          "items": {
            "$ref": "Widget"
          }
        }
      },
      "description": "Defines the layout properties and content for a column."
    },
    "ChartOptions": {
      "description": "Options to control visual rendering of a chart.",
      "id": "ChartOptions",
      "properties": {
        "displayHorizontal": {
          "type": "boolean",
          "description": "Preview: Configures whether the charted values are shown on the horizontal or vertical axis. By default, values are represented the vertical axis. This is a preview feature and may be subject to change before final release."
        },
        "mode": {
          "type": "string",
          "description": "The chart mode.",
          "enumDescriptions": [
            "Mode is unspecified. The view will default to COLOR.",
            "The chart distinguishes data series using different color. Line colors may get reused when there are many lines in the chart.",
            "The chart uses the Stackdriver x-ray mode, in which each data set is plotted using the same semi-transparent color.",
            "The chart displays statistics such as average, median, 95th percentile, and more."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "COLOR",
            "X_RAY",
            "STATS"
          ]
        }
      },
      "type": "object"
    },
    "Threshold": {
      "properties": {
        "targetAxis": {
          "description": "The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.",
          "type": "string",
          "enum": [
            "TARGET_AXIS_UNSPECIFIED",
            "Y1",
            "Y2"
          ],
          "enumDescriptions": [
            "The target axis was not specified. Defaults to Y1.",
            "The y_axis (the right axis of chart).",
            "The y2_axis (the left axis of chart)."
          ]
        },
        "color": {
          "enumDescriptions": [
            "Color is unspecified. Not allowed in well-formed requests.",
            "Crossing the threshold is \"concerning\" behavior.",
            "Crossing the threshold is \"emergency\" behavior."
          ],
          "type": "string",
          "description": "The state color for this threshold. Color is not allowed in a XyChart.",
          "enum": [
            "COLOR_UNSPECIFIED",
            "YELLOW",
            "RED"
          ]
        },
        "value": {
          "format": "double",
          "type": "number",
          "description": "The value of the threshold. The value should be defined in the native scale of the metric."
        },
        "direction": {
          "type": "string",
          "enum": [
            "DIRECTION_UNSPECIFIED",
            "ABOVE",
            "BELOW"
          ],
          "enumDescriptions": [
            "Not allowed in well-formed requests.",
            "The threshold will be considered crossed if the actual value is above the threshold value.",
            "The threshold will be considered crossed if the actual value is below the threshold value."
          ],
          "description": "The direction for the current threshold. Direction is not allowed in a XyChart."
        },
        "label": {
          "description": "A label for the threshold.",
          "type": "string"
        }
      },
      "description": "Defines a threshold for categorizing time series values.",
      "id": "Threshold",
      "type": "object"
    },
    "Row": {
      "type": "object",
      "properties": {
        "weight": {
          "format": "int64",
          "type": "string",
          "description": "The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers). Greater the weight, greater the height of the row on the screen. If omitted, a value of 1 is used while rendering."
        },
        "widgets": {
          "items": {
            "$ref": "Widget"
          },
          "type": "array",
          "description": "The display widgets arranged horizontally in this row."
        }
      },
      "description": "Defines the layout properties and content for a row.",
      "id": "Row"
    },
    "PieChartDataSet": {
      "description": "Groups a time series query definition.",
      "properties": {
        "minAlignmentPeriod": {
          "description": "Optional. The lower bound on data point frequency for this data set, implemented by specifying the minimum alignment period to use in a time series query. For example, if the data is published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It would not make sense to fetch and align data at one minute intervals.",
          "format": "google-duration",
          "type": "string"
        },
        "timeSeriesQuery": {
          "description": "Required. The query for the PieChart. See, google.monitoring.dashboard.v1.TimeSeriesQuery.",
          "$ref": "TimeSeriesQuery"
        },
        "sliceNameTemplate": {
          "description": "Optional. A template for the name of the slice. This name will be displayed in the legend and the tooltip of the pie chart. It replaces the auto-generated names for the slices. For example, if the template is set to ${resource.labels.zone}, the zone's value will be used for the name instead of the default name.",
          "type": "string"
        }
      },
      "id": "PieChartDataSet",
      "type": "object"
    },
    "DroppedLabels": {
      "description": "A set of (label, value) pairs that were removed from a Distribution time series during aggregation and then added as an attachment to a Distribution.Exemplar.The full label set for the exemplars is constructed by using the dropped pairs in combination with the label values that remain on the aggregated Distribution time series. The constructed full label set can be used to identify the specific entity, such as the instance or job, which might be contributing to a long-tail. However, with dropped labels, the storage requirements are reduced because only the aggregated distribution values for a large group of time series are stored.Note that there are no guarantees on ordering of the labels from exemplar-to-exemplar and from distribution-to-distribution in the same stream, and there may be duplicates. It is up to clients to resolve any ambiguities.",
      "properties": {
        "label": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Map from label to its value, for all labels dropped in any aggregation."
        }
      },
      "id": "DroppedLabels",
      "type": "object"
    },
    "TimeSeriesFilterRatio": {
      "properties": {
        "pickTimeSeriesFilter": {
          "description": "Ranking based time series filter.",
          "$ref": "PickTimeSeriesFilter"
        },
        "secondaryAggregation": {
          "description": "Apply a second aggregation after the ratio is computed.",
          "$ref": "Aggregation"
        },
        "statisticalTimeSeriesFilter": {
          "$ref": "StatisticalTimeSeriesFilter",
          "description": "Statistics based time series filter. Note: This field is deprecated and completely ignored by the API.",
          "deprecated": true
        },
        "numerator": {
          "description": "The numerator of the ratio.",
          "$ref": "RatioPart"
        },
        "denominator": {
          "$ref": "RatioPart",
          "description": "The denominator of the ratio."
        }
      },
      "type": "object",
      "description": "A pair of time series filters that define a ratio computation. The output time series is the pair-wise division of each aligned element from the numerator and denominator time series.",
      "id": "TimeSeriesFilterRatio"
    },
    "QueryRangeRequest": {
      "description": "QueryRangeRequest holds all parameters of the Prometheus upstream range query API plus GCM specific parameters.",
      "type": "object",
      "properties": {
        "timeout": {
          "type": "string",
          "description": "An upper bound timeout for the query. Either a Prometheus duration string (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating point seconds. This non-standard encoding must be used for compatibility with the open source API. Clients may still implement timeouts at the connection level while ignoring this field."
        },
        "query": {
          "type": "string",
          "description": "A PromQL query string. Query lanauge documentation: https://prometheus.io/docs/prometheus/latest/querying/basics/."
        },
        "step": {
          "type": "string",
          "description": "The resolution of query result. Either a Prometheus duration string (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating point seconds. This non-standard encoding must be used for compatibility with the open source API. Clients may still implement timeouts at the connection level while ignoring this field."
        },
        "start": {
          "description": "The start time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        },
        "end": {
          "description": "The end time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.",
          "type": "string"
        }
      },
      "id": "QueryRangeRequest"
    },
    "TextStyle": {
      "description": "Properties that determine how the title and content are styled",
      "id": "TextStyle",
      "type": "object",
      "properties": {
        "horizontalAlignment": {
          "description": "The horizontal alignment of both the title and content",
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "H_LEFT",
            "H_CENTER",
            "H_RIGHT"
          ],
          "type": "string",
          "enumDescriptions": [
            "No horizontal alignment specified, will default to H_LEFT",
            "Left-align",
            "Center-align",
            "Right-align"
          ]
        },
        "verticalAlignment": {
          "enumDescriptions": [
            "No vertical alignment specified, will default to V_TOP",
            "Top-align",
            "Center-align",
            "Bottom-align"
          ],
          "type": "string",
          "description": "The vertical alignment of both the title and content",
          "enum": [
            "VERTICAL_ALIGNMENT_UNSPECIFIED",
            "V_TOP",
            "V_CENTER",
            "V_BOTTOM"
          ]
        },
        "backgroundColor": {
          "description": "The background color as a hex string. \"#RRGGBB\" or \"#RGB\"",
          "type": "string"
        },
        "pointerLocation": {
          "enum": [
            "POINTER_LOCATION_UNSPECIFIED",
            "PL_TOP",
            "PL_RIGHT",
            "PL_BOTTOM",
            "PL_LEFT",
            "PL_TOP_LEFT",
            "PL_TOP_RIGHT",
            "PL_RIGHT_TOP",
            "PL_RIGHT_BOTTOM",
            "PL_BOTTOM_RIGHT",
            "PL_BOTTOM_LEFT",
            "PL_LEFT_BOTTOM",
            "PL_LEFT_TOP"
          ],
          "enumDescriptions": [
            "No visual pointer",
            "Placed in the middle of the top of the widget",
            "Placed in the middle of the right side of the widget",
            "Placed in the middle of the bottom of the widget",
            "Placed in the middle of the left side of the widget",
            "Placed on the left side of the top of the widget",
            "Placed on the right side of the top of the widget",
            "Placed on the top of the right side of the widget",
            "Placed on the bottom of the right side of the widget",
            "Placed on the right side of the bottom of the widget",
            "Placed on the left side of the bottom of the widget",
            "Placed on the bottom of the left side of the widget",
            "Placed on the top of the left side of the widget"
          ],
          "description": "The pointer location for this widget (also sometimes called a \"tail\")",
          "type": "string"
        },
        "padding": {
          "enum": [
            "PADDING_SIZE_UNSPECIFIED",
            "P_EXTRA_SMALL",
            "P_SMALL",
            "P_MEDIUM",
            "P_LARGE",
            "P_EXTRA_LARGE"
          ],
          "type": "string",
          "description": "The amount of padding around the widget",
          "enumDescriptions": [
            "No padding size specified, will default to P_EXTRA_SMALL",
            "Extra small padding",
            "Small padding",
            "Medium padding",
            "Large padding",
            "Extra large padding"
          ]
        },
        "textColor": {
          "type": "string",
          "description": "The text color as a hex string. \"#RRGGBB\" or \"#RGB\""
        },
        "fontSize": {
          "enumDescriptions": [
            "No font size specified, will default to FS_LARGE",
            "Extra small font size",
            "Small font size",
            "Medium font size",
            "Large font size",
            "Extra large font size"
          ],
          "enum": [
            "FONT_SIZE_UNSPECIFIED",
            "FS_EXTRA_SMALL",
            "FS_SMALL",
            "FS_MEDIUM",
            "FS_LARGE",
            "FS_EXTRA_LARGE"
          ],
          "type": "string",
          "description": "Font sizes for both the title and content. The title will still be larger relative to the content."
        }
      }
    },
    "RowLayout": {
      "id": "RowLayout",
      "type": "object",
      "description": "A simplified layout that divides the available space into rows and arranges a set of widgets horizontally in each row.",
      "properties": {
        "rows": {
          "description": "The rows of content to display.",
          "type": "array",
          "items": {
            "$ref": "Row"
          }
        }
      }
    },
    "Status": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        }
      },
      "description": "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object"
    },
    "Aggregation": {
      "properties": {
        "alignmentPeriod": {
          "type": "string",
          "format": "google-duration",
          "description": "The alignment_period specifies a time interval, in seconds, that is used to divide the data in all the time series into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.The value must be at least 60 seconds. If a per-series aligner other than ALIGN_NONE is specified, this field is required or an error is returned. If no per-series aligner is specified, or the aligner ALIGN_NONE is specified, then this field is ignored.The maximum value of the alignment_period is 2 years, or 104 weeks."
        },
        "groupByFields": {
          "items": {
            "type": "string"
          },
          "description": "The set of fields to preserve when cross_series_reducer is specified. The group_by_fields determine how the time series are partitioned into subsets prior to applying the aggregation operation. Each subset contains time series that have the same value for each of the grouping fields. Each individual time series is a member of exactly one subset. The cross_series_reducer is applied to each subset of time series. It is not possible to reduce across different resource types, so this field implicitly contains resource.type. Fields not specified in group_by_fields are aggregated away. If group_by_fields is not specified and all the time series have the same resource type, then the time series are aggregated into a single output time series. If cross_series_reducer is not defined, this field is ignored.",
          "type": "array"
        },
        "crossSeriesReducer": {
          "description": "The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.Not all reducer operations can be applied to all time series. The valid choices depend on the metric_kind and the value_type of the original time series. Reduction can yield a time series with a different metric_kind or value_type than the input time series.Time series data must first be aligned (see per_series_aligner) in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified, and must not be ALIGN_NONE. An alignment_period must also be specified; otherwise, an error is returned.",
          "enum": [
            "REDUCE_NONE",
            "REDUCE_MEAN",
            "REDUCE_MIN",
            "REDUCE_MAX",
            "REDUCE_SUM",
            "REDUCE_STDDEV",
            "REDUCE_COUNT",
            "REDUCE_COUNT_TRUE",
            "REDUCE_COUNT_FALSE",
            "REDUCE_FRACTION_TRUE",
            "REDUCE_PERCENTILE_99",
            "REDUCE_PERCENTILE_95",
            "REDUCE_PERCENTILE_50",
            "REDUCE_PERCENTILE_05"
          ],
          "type": "string",
          "enumDescriptions": [
            "No cross-time series reduction. The output of the Aligner is returned.",
            "Reduce by computing the mean value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric or distribution values. The value_type of the output is DOUBLE.",
            "Reduce by computing the minimum value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric values. The value_type of the output is the same as the value_type of the input.",
            "Reduce by computing the maximum value across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric values. The value_type of the output is the same as the value_type of the input.",
            "Reduce by computing the sum across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric and distribution values. The value_type of the output is the same as the value_type of the input.",
            "Reduce by computing the standard deviation across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics with numeric or distribution values. The value_type of the output is DOUBLE.",
            "Reduce by computing the number of data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of numeric, Boolean, distribution, and string value_type. The value_type of the output is INT64.",
            "Reduce by computing the number of True-valued data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The value_type of the output is INT64.",
            "Reduce by computing the number of False-valued data points across time series for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The value_type of the output is INT64.",
            "Reduce by computing the ratio of the number of True-valued data points to the total number of data points for each alignment period. This reducer is valid for DELTA and GAUGE metrics of Boolean value_type. The output value is in the range 0.0, 1.0 and has value_type DOUBLE.",
            "Reduce by computing the 99th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.",
            "Reduce by computing the 95th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.",
            "Reduce by computing the 50th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE.",
            "Reduce by computing the 5th percentile (https://en.wikipedia.org/wiki/Percentile) of data points across time series for each alignment period. This reducer is valid for GAUGE and DELTA metrics of numeric and distribution type. The value of the output is DOUBLE."
          ]
        },
        "perSeriesAligner": {
          "enum": [
            "ALIGN_NONE",
            "ALIGN_DELTA",
            "ALIGN_RATE",
            "ALIGN_INTERPOLATE",
            "ALIGN_NEXT_OLDER",
            "ALIGN_MIN",
            "ALIGN_MAX",
            "ALIGN_MEAN",
            "ALIGN_COUNT",
            "ALIGN_SUM",
            "ALIGN_STDDEV",
            "ALIGN_COUNT_TRUE",
            "ALIGN_COUNT_FALSE",
            "ALIGN_FRACTION_TRUE",
            "ALIGN_PERCENTILE_99",
            "ALIGN_PERCENTILE_95",
            "ALIGN_PERCENTILE_50",
            "ALIGN_PERCENTILE_05",
            "ALIGN_PERCENT_CHANGE"
          ],
          "type": "string",
          "description": "An Aligner describes how to bring the data points in a single time series into temporal alignment. Except for ALIGN_NONE, all alignments cause all the data points in an alignment_period to be mathematically grouped together, resulting in a single data point for each alignment_period with end timestamp at the end of the period.Not all alignment operations may be applied to all time series. The valid choices depend on the metric_kind and value_type of the original time series. Alignment can change the metric_kind or the value_type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified and not equal to ALIGN_NONE and alignment_period must be specified; otherwise, an error is returned.",
          "enumDescriptions": [
            "No alignment. Raw data is returned. Not valid if cross-series reduction is requested. The value_type of the result is the same as the value_type of the input.",
            "Align and convert to DELTA. The output is delta = y1 - y0.This alignment is valid for CUMULATIVE and DELTA metrics. If the selected alignment period results in periods with no data, then the aligned value for such a period is created by interpolation. The value_type of the aligned result is the same as the value_type of the input.",
            "Align and convert to a rate. The result is computed as rate = (y1 - y0)/(t1 - t0), or \"delta over time\". Think of this aligner as providing the slope of the line that passes through the value at the start and at the end of the alignment_period.This aligner is valid for CUMULATIVE and DELTA metrics with numeric values. If the selected alignment period results in periods with no data, then the aligned value for such a period is created by interpolation. The output is a GAUGE metric with value_type DOUBLE.If, by \"rate\", you mean \"percentage change\", see the ALIGN_PERCENT_CHANGE aligner instead.",
            "Align by interpolating between adjacent points around the alignment period boundary. This aligner is valid for GAUGE metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align by moving the most recent data point before the end of the alignment period to the boundary at the end of the alignment period. This aligner is valid for GAUGE metrics. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the minimum value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the maximum value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the mean value in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the aligned result is DOUBLE.",
            "Align the time series by returning the number of values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric or Boolean values. The value_type of the aligned result is INT64.",
            "Align the time series by returning the sum of the values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric and distribution values. The value_type of the aligned result is the same as the value_type of the input.",
            "Align the time series by returning the standard deviation of the values in each alignment period. This aligner is valid for GAUGE and DELTA metrics with numeric values. The value_type of the output is DOUBLE.",
            "Align the time series by returning the number of True values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The value_type of the output is INT64.",
            "Align the time series by returning the number of False values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The value_type of the output is INT64.",
            "Align the time series by returning the ratio of the number of True values to the total number of values in each alignment period. This aligner is valid for GAUGE metrics with Boolean values. The output value is in the range 0.0, 1.0 and has value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 99th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 95th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 50th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align the time series by using percentile aggregation (https://en.wikipedia.org/wiki/Percentile). The resulting data point in each alignment period is the 5th percentile of all data points in the period. This aligner is valid for GAUGE and DELTA metrics with distribution values. The output is a GAUGE metric with value_type DOUBLE.",
            "Align and convert to a percentage change. This aligner is valid for GAUGE and DELTA metrics with numeric values. This alignment returns ((current - previous)/previous) * 100, where the value of previous is determined based on the alignment_period.If the values of current and previous are both 0, then the returned value is 0. If only previous is 0, the returned value is infinity.A 10-minute moving mean is computed at each point of the alignment period prior to the above calculation to smooth the metric and prevent false positives from very short-lived spikes. The moving mean is only applicable for data whose values are \u003e= 0. Any values \u003c 0 are treated as a missing datapoint, and are ignored. While DELTA metrics are accepted by this alignment, special care should be taken that the values for the metric will always be positive. The output is a GAUGE metric with value_type DOUBLE."
          ]
        }
      },
      "type": "object",
      "id": "Aggregation",
      "description": "Describes how to combine multiple time series to provide a different view of the data. Aggregation of time series is done in two steps. First, each time series in the set is aligned to the same time interval boundaries, then the set of time series is optionally reduced in number.Alignment consists of applying the per_series_aligner operation to each time series after its data has been divided into regular alignment_period time intervals. This process takes all of the data points in an alignment period, applies a mathematical transformation such as averaging, minimum, maximum, delta, etc., and converts them into a single data point per period.Reduction is when the aligned and transformed time series can optionally be combined, reducing the number of time series through similar mathematical transformations. Reduction involves applying a cross_series_reducer to all the time series, optionally sorting the time series into subsets with group_by_fields, and applying the reducer to each subset.The raw time series data can contain a huge amount of information from multiple sources. Alignment and reduction transforms this mass of data into a more manageable and representative collection of data, for example \"the 95% latency across the average of all tasks in a cluster\". This representative data can be more easily graphed and comprehended, and the individual time series data is still available for later drilldown. For more details, see Filtering and aggregation (https://cloud.google.com/monitoring/api/v3/aggregation)."
    },
    "OperationMetadata": {
      "description": "Contains metadata for longrunning operation for the edit Metrics Scope endpoints.",
      "id": "OperationMetadata",
      "type": "object",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "The time when the operation result was last updated.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATED",
            "RUNNING",
            "DONE",
            "CANCELLED"
          ],
          "description": "Current state of the batch operation.",
          "enumDescriptions": [
            "Invalid.",
            "Request has been received.",
            "Request is actively being processed.",
            "The batch processing is done.",
            "The batch processing was cancelled."
          ]
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time when the batch request was received.",
          "type": "string"
        }
      }
    },
    "ColumnSettings": {
      "type": "object",
      "properties": {
        "column": {
          "description": "Required. The id of the column.",
          "type": "string"
        },
        "visible": {
          "type": "boolean",
          "description": "Required. Whether the column should be visible on page load."
        }
      },
      "id": "ColumnSettings",
      "description": "The persistent settings for a table's columns."
    },
    "Dashboard": {
      "type": "object",
      "id": "Dashboard",
      "description": "A Google Stackdriver dashboard. Dashboards define the content and layout of pages in the Stackdriver web application.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The mutable, human-readable name."
        },
        "gridLayout": {
          "description": "Content is arranged with a basic layout that re-flows a simple list of informational elements like widgets or tiles.",
          "$ref": "GridLayout"
        },
        "dashboardFilters": {
          "description": "Filters to reduce the amount of data charted based on the filter criteria.",
          "items": {
            "$ref": "DashboardFilter"
          },
          "type": "array"
        },
        "rowLayout": {
          "$ref": "RowLayout",
          "description": "The content is divided into equally spaced rows and the widgets are arranged horizontally."
        },
        "name": {
          "type": "string",
          "description": "Immutable. The resource name of the dashboard."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels applied to the dashboard"
        },
        "etag": {
          "type": "string",
          "description": "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. An etag is returned in the response to GetDashboard, and users are expected to put that etag in the request to UpdateDashboard to ensure that their change will be applied to the same version of the Dashboard configuration. The field should not be passed during dashboard creation."
        },
        "columnLayout": {
          "description": "The content is divided into equally spaced columns and the widgets are arranged vertically.",
          "$ref": "ColumnLayout"
        },
        "mosaicLayout": {
          "description": "The content is arranged as a grid of tiles, with each content widget occupying one or more grid blocks.",
          "$ref": "MosaicLayout"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } "
    },
    "Field": {
      "properties": {
        "number": {
          "description": "The field number.",
          "format": "int32",
          "type": "integer"
        },
        "jsonName": {
          "description": "The field JSON name.",
          "type": "string"
        },
        "oneofIndex": {
          "type": "integer",
          "description": "The index of the field type in Type.oneofs, for message or enumeration types. The first type has index 1; zero means the type is not in the list.",
          "format": "int32"
        },
        "cardinality": {
          "enum": [
            "CARDINALITY_UNKNOWN",
            "CARDINALITY_OPTIONAL",
            "CARDINALITY_REQUIRED",
            "CARDINALITY_REPEATED"
          ],
          "description": "The field cardinality.",
          "enumDescriptions": [
            "For fields with unknown cardinality.",
            "For optional fields.",
            "For required fields. Proto2 syntax only.",
            "For repeated fields."
          ],
          "type": "string"
        },
        "options": {
          "description": "The protocol buffer options.",
          "type": "array",
          "items": {
            "$ref": "Option"
          }
        },
        "name": {
          "type": "string",
          "description": "The field name."
        },
        "kind": {
          "enum": [
            "TYPE_UNKNOWN",
            "TYPE_DOUBLE",
            "TYPE_FLOAT",
            "TYPE_INT64",
            "TYPE_UINT64",
            "TYPE_INT32",
            "TYPE_FIXED64",
            "TYPE_FIXED32",
            "TYPE_BOOL",
            "TYPE_STRING",
            "TYPE_GROUP",
            "TYPE_MESSAGE",
            "TYPE_BYTES",
            "TYPE_UINT32",
            "TYPE_ENUM",
            "TYPE_SFIXED32",
            "TYPE_SFIXED64",
            "TYPE_SINT32",
            "TYPE_SINT64"
          ],
          "enumDescriptions": [
            "Field type unknown.",
            "Field type double.",
            "Field type float.",
            "Field type int64.",
            "Field type uint64.",
            "Field type int32.",
            "Field type fixed64.",
            "Field type fixed32.",
            "Field type bool.",
            "Field type string.",
            "Field type group. Proto2 syntax only, and deprecated.",
            "Field type message.",
            "Field type bytes.",
            "Field type uint32.",
            "Field type enum.",
            "Field type sfixed32.",
            "Field type sfixed64.",
            "Field type sint32.",
            "Field type sint64."
          ],
          "type": "string",
          "description": "The field type."
        },
        "packed": {
          "type": "boolean",
          "description": "Whether to use alternative packed wire representation."
        },
        "defaultValue": {
          "type": "string",
          "description": "The string value of the default value of this field. Proto2 syntax only."
        },
        "typeUrl": {
          "type": "string",
          "description": "The field type URL, without the scheme, for message or enumeration types. Example: \"type.googleapis.com/google.protobuf.Timestamp\"."
        }
      },
      "id": "Field",
      "description": "A single field of a message type.",
      "type": "object"
    },
    "Tile": {
      "type": "object",
      "id": "Tile",
      "properties": {
        "yPos": {
          "description": "The zero-indexed position of the tile in grid blocks relative to the top edge of the grid. y_pos cannot be negative.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "The width of the tile, measured in grid blocks. Tiles must have a minimum width of 1.",
          "type": "integer",
          "format": "int32"
        },
        "xPos": {
          "description": "The zero-indexed position of the tile in grid blocks relative to the left edge of the grid. Tiles must be contained within the specified number of columns. x_pos cannot be negative.",
          "format": "int32",
          "type": "integer"
        },
        "widget": {
          "description": "The informational widget contained in the tile. For example an XyChart.",
          "$ref": "Widget"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "The height of the tile, measured in grid blocks. Tiles must have a minimum height of 1."
        }
      },
      "description": "A single tile in the mosaic. The placement and size of the tile are configurable."
    },
    "ListDashboardsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.",
          "type": "string"
        },
        "dashboards": {
          "type": "array",
          "description": "The list of requested dashboards.",
          "items": {
            "$ref": "Dashboard"
          }
        }
      },
      "id": "ListDashboardsResponse",
      "type": "object",
      "description": "The ListDashboards request."
    }
  },
  "fullyEncodeReservedExpansion": true
}
